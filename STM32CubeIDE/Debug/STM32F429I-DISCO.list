
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002156c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002c54  0802171c  0802171c  0003171c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000153a  08024370  08024370  00034370  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000090  080258ac  080258ac  000358ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000001bc  0802593c  0802593c  0003593c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000833f8  08025af8  08025af8  00035af8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080a8ef0  080a8ef0  000c016c  2**0
                  CONTENTS
  8 .ARM          00000008  080a8ef0  080a8ef0  000b8ef0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080a8ef8  080a8ef8  000c016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080a8ef8  080a8ef8  000b8ef8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080a8f0c  080a8f0c  000b8f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080a8f14  000c0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00015524  2000016c  080a9080  000c016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20015690  080a9080  000c5690  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000c016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000d0000  2**2
                  ALLOC
 17 .debug_line   000505a8  00000000  00000000  000c019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ecc9d  00000000  00000000  00110744  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014f4e  00000000  00000000  001fd3e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003028  00000000  00000000  00212330  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00119a54  00000000  00000000  00215358  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00007068  00000000  00000000  0032edb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0003517b  00000000  00000000  00335e18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030b19  00000000  00000000  0036af93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  0039baac  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e08  00000000  00000000  0039bb7c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021704 	.word	0x08021704

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021704 	.word	0x08021704

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fa79 	bl	8005ab4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 f8c3 	bl	802074c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 fefd 	bl	80013c4 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080a8f14 	.word	0x080a8f14
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20015690 	.word	0x20015690

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f01f feb5 	bl	8020364 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	200153e3 	.word	0x200153e3

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f8a6 	bl	8001904 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00a ffab 	bl	800b724 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a ba08 	b.w	800ac0c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f fdaf 	bl	8020364 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	200153dc 	.word	0x200153dc
 800085c:	200153d8 	.word	0x200153d8
 8000860:	200153da 	.word	0x200153da

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01f fe29 	bl	80204cc <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021774 	.word	0x08021774
 8000898:	080217ac 	.word	0x080217ac
 800089c:	080217fa 	.word	0x080217fa
 80008a0:	200153e2 	.word	0x200153e2

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01f fe05 	bl	80204cc <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	200153d8 	.word	0x200153d8
 80008d0:	200153da 	.word	0x200153da
 80008d4:	0802183f 	.word	0x0802183f
 80008d8:	080218a2 	.word	0x080218a2
 80008dc:	080217fa 	.word	0x080217fa
 80008e0:	200153de 	.word	0x200153de
 80008e4:	200153e0 	.word	0x200153e0

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 fde0 	bl	80084b4 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01f fde3 	bl	80204cc <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 fe98 	bl	8008640 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	080219c0 	.word	0x080219c0
 8000928:	08021a09 	.word	0x08021a09
 800092c:	08021a38 	.word	0x08021a38
 8000930:	20000198 	.word	0x20000198
 8000934:	08021a86 	.word	0x08021a86

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 be0e 	b.w	8008560 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 be42 	b.w	80085d4 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 be01 	b.w	8008560 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 beab 	b.w	80086cc <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 fee0 	bl	8008750 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 fed9 	bl	8008750 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	2000384c 	.word	0x2000384c
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08021c24 	.word	0x08021c24
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f fc93 	bl	8020364 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	200153e4 	.word	0x200153e4

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00a ffaf 	bl	800b9d0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08021c24 	.word	0x08021c24

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f fd0d 	bl	80204cc <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08021ac8 	.word	0x08021ac8
 8000ac0:	08021ae3 	.word	0x08021ae3
 8000ac4:	08021b2d 	.word	0x08021b2d

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f fcef 	bl	80204cc <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08021ac8 	.word	0x08021ac8
 8000afc:	08021b79 	.word	0x08021b79
 8000b00:	08021b2d 	.word	0x08021b2d

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f fc7c 	bl	80204cc <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08021bc4 	.word	0x08021bc4
 8000c48:	08021bde 	.word	0x08021bde
 8000c4c:	08021b2d 	.word	0x08021b2d
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 50c4 	movw	r0, #9668	; 0x25c4
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 53c4 	movw	r3, #9668	; 0x25c4
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 53c4 	movw	r3, #9668	; 0x25c4
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bbd8 	b.w	800253c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fc87 	bl	800a6a6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08021cdc 	.word	0x08021cdc

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fada 	bl	8020364 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fc73 	bl	800a6a6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08021ca8 	.word	0x08021ca8

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 51cc 	movw	r1, #9676	; 0x25cc
 8000dd6:	f01f fac5 	bl	8020364 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fc5d 	bl	800a6a6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08021c74 	.word	0x08021c74

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fab0 	bl	8020364 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 5017 	add.w	r0, r0, #9664	; 0x25c0
 8000e14:	3038      	adds	r0, #56	; 0x38
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08021d10 	.word	0x08021d10

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f242 7194 	movw	r1, #10132	; 0x2794
 8000e52:	f01f fa87 	bl	8020364 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f926 	bl	80020b0 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f927 	bl	80020b8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 f975 	bl	8014164 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 fec0 	bl	8004c08 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 f8d3 	bl	8014034 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fa65 	bl	8020368 <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fbf3 	bl	800a6a8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fbee 	bl	800a6a8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fbe9 	bl	800a6a8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 25f8 	str.w	r2, [r3, #1528]	; 0x5f8
 8000ee0:	f503 60c7 	add.w	r0, r3, #1592	; 0x638
 8000ee4:	f003 ff0c 	bl	8004d00 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f003 fefc 	bl	8004cec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fb21 	bl	800253c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fb04 	bl	8020508 <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fa3d 	bl	8020380 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	20015448 	.word	0x20015448
 8000f18:	20003758 	.word	0x20003758
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	2000279c 	.word	0x2000279c
 8000f2c:	08021d10 	.word	0x08021d10
 8000f30:	08021c74 	.word	0x08021c74
 8000f34:	08021ca8 	.word	0x08021ca8
 8000f38:	08021cdc 	.word	0x08021cdc
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	200036dc 	.word	0x200036dc

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	200036dc 	.word	0x200036dc

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fa08 	bl	8017378 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20002938 	.word	0x20002938
 8000fe4:	2000293c 	.word	0x2000293c
 8000fe8:	08021764 	.word	0x08021764
 8000fec:	2000375c 	.word	0x2000375c
 8000ff0:	200036dc 	.word	0x200036dc
 8000ff4:	200153e4 	.word	0x200153e4
 8000ff8:	200153d8 	.word	0x200153d8
 8000ffc:	200153de 	.word	0x200153de
 8001000:	01000001 	.word	0x01000001
 8001004:	200153da 	.word	0x200153da
 8001008:	200153e0 	.word	0x200153e0
 800100c:	200153dc 	.word	0x200153dc
 8001010:	080218f0 	.word	0x080218f0

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	2000293c 	.word	0x2000293c

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	200037d8 	.word	0x200037d8
 8001064:	200037d6 	.word	0x200037d6

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f009 fe15 	bl	800acb6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f00f fe4c 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f009 bde4 	b.w	800ac84 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f009 bde8 	b.w	800ac9c <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	200037d4 	.word	0x200037d4

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 bda2 	b.w	800ac18 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f009 befb 	b.w	800aece <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f005 ffb0 	bl	8007090 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a faef 	bl	800b724 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f005 ff9e 	bl	8007090 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	200153e4 	.word	0x200153e4
 800116c:	40016800 	.word	0x40016800
 8001170:	200037d8 	.word	0x200037d8
 8001174:	200037d6 	.word	0x200037d6

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fc92 	bl	8007ab2 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	200039bc 	.word	0x200039bc

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	490c      	ldr	r1, [pc, #48]	; (80011d0 <CountAvgFrom60sec+0x34>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
	return result/60;
 80011c0:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011c4:	eddf 7a03 	vldr	s15, [pc, #12]	; 80011d4 <CountAvgFrom60sec+0x38>
 80011c8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011cc:	b002      	add	sp, #8
 80011ce:	4770      	bx	lr
 80011d0:	20003a54 	.word	0x20003a54
 80011d4:	42700000 	.word	0x42700000

080011d8 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	  static int liczbaPomiarow=0; // number of adc measurements. if 10 then clear
	  static volatile uint32_t value=0; //actual value of adc measurement

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011dc:	4c43      	ldr	r4, [pc, #268]	; (80012ec <ZadanieDwa+0x114>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia
					HAL_ADC_Start(&hadc1);
 80011de:	4d44      	ldr	r5, [pc, #272]	; (80012f0 <ZadanieDwa+0x118>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011e0:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	; 0xa6c
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d071      	beq.n	80012cc <ZadanieDwa+0xf4>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011e8:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc1);
 80011ea:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ec:	f8c4 3a6c 	str.w	r3, [r4, #2668]	; 0xa6c
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
					value += HAL_ADC_GetValue(&hadc1);
					liczbaPomiarow++;
 80011f0:	4f40      	ldr	r7, [pc, #256]	; (80012f4 <ZadanieDwa+0x11c>)
					value += HAL_ADC_GetValue(&hadc1);
 80011f2:	4e41      	ldr	r6, [pc, #260]	; (80012f8 <ZadanieDwa+0x120>)
					HAL_ADC_Start(&hadc1);
 80011f4:	f004 fd52 	bl	8005c9c <HAL_ADC_Start>
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80011f8:	f04f 31ff 	mov.w	r1, #4294967295
 80011fc:	4628      	mov	r0, r5
 80011fe:	f004 fdc1 	bl	8005d84 <HAL_ADC_PollForConversion>
					value += HAL_ADC_GetValue(&hadc1);
 8001202:	4628      	mov	r0, r5
 8001204:	f004 fe0d 	bl	8005e22 <HAL_ADC_GetValue>
					liczbaPomiarow++;
 8001208:	683a      	ldr	r2, [r7, #0]
					value += HAL_ADC_GetValue(&hadc1);
 800120a:	6833      	ldr	r3, [r6, #0]
					liczbaPomiarow++;
 800120c:	3201      	adds	r2, #1
 800120e:	210a      	movs	r1, #10
					value += HAL_ADC_GetValue(&hadc1);
 8001210:	4418      	add	r0, r3
					liczbaPomiarow++;
 8001212:	603a      	str	r2, [r7, #0]
 8001214:	fb92 f3f1 	sdiv	r3, r2, r1
 8001218:	fb01 2213 	mls	r2, r1, r3, r2
					value += HAL_ADC_GetValue(&hadc1);
 800121c:	6030      	str	r0, [r6, #0]

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 800121e:	2a00      	cmp	r2, #0
 8001220:	d154      	bne.n	80012cc <ZadanieDwa+0xf4>
						ladowarka.BatteryVoltage=(value/10) * 3.3f / 4096.0f;
 8001222:	6833      	ldr	r3, [r6, #0]
 8001224:	fbb3 f3f1 	udiv	r3, r3, r1
 8001228:	ee07 3a90 	vmov	s15, r3
 800122c:	ed9f 7a33 	vldr	s14, [pc, #204]	; 80012fc <ZadanieDwa+0x124>
 8001230:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001234:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001238:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8001300 <ZadanieDwa+0x128>
 800123c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001240:	edc4 7a00 	vstr	s15, [r4]

						if (ladowarka.ChargeStarted){ //jesli zaczeto ladwowac
 8001244:	6923      	ldr	r3, [r4, #16]
 8001246:	2b00      	cmp	r3, #0
 8001248:	d03d      	beq.n	80012c6 <ZadanieDwa+0xee>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 800124a:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800124e:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8001308 <ZadanieDwa+0x130>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001252:	2b00      	cmp	r3, #0
 8001254:	bfdf      	itttt	le
 8001256:	6823      	ldrle	r3, [r4, #0]
 8001258:	61a3      	strle	r3, [r4, #24]
 800125a:	2301      	movle	r3, #1
 800125c:	f8c4 3a74 	strle.w	r3, [r4, #2676]	; 0xa74
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 8001260:	ed94 7a00 	vldr	s14, [r4]
 8001264:	edd4 7a01 	vldr	s15, [r4, #4]
 8001268:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800126c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001270:	bfc4      	itt	gt
 8001272:	6823      	ldrgt	r3, [r4, #0]
 8001274:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 8001276:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 800127a:	3301      	adds	r3, #1
 800127c:	f8c4 3a78 	str.w	r3, [r4, #2680]	; 0xa78
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001280:	f8d8 3000 	ldr.w	r3, [r8]
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 8001284:	f04f 0901 	mov.w	r9, #1
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001288:	eb03 0209 	add.w	r2, r3, r9
 800128c:	f203 235e 	addw	r3, r3, #606	; 0x25e
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 8001290:	f8c4 9a70 	str.w	r9, [r4, #2672]	; 0xa70
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001294:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8001298:	6821      	ldr	r1, [r4, #0]
 800129a:	f8c8 2000 	str.w	r2, [r8]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 800129e:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012a0:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012a2:	dd10      	ble.n	80012c6 <ZadanieDwa+0xee>
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012a4:	233c      	movs	r3, #60	; 0x3c
 80012a6:	f8d4 0a78 	ldr.w	r0, [r4, #2680]	; 0xa78
 80012aa:	fb90 f0f3 	sdiv	r0, r0, r3
 80012ae:	f7ff ff75 	bl	800119c <CountAvgFrom60sec>
 80012b2:	3006      	adds	r0, #6
 80012b4:	eb04 0080 	add.w	r0, r4, r0, lsl #2
								sec0to59=0;
 80012b8:	2300      	movs	r3, #0
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012ba:	ed80 0a00 	vstr	s0, [r0]
								sec0to59=0;
 80012be:	f8c8 3000 	str.w	r3, [r8]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 80012c2:	f8c4 9a74 	str.w	r9, [r4, #2676]	; 0xa74
							}

						}
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 80012c6:	2300      	movs	r3, #0
 80012c8:	603b      	str	r3, [r7, #0]
						value=0;
 80012ca:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 80012cc:	6926      	ldr	r6, [r4, #16]
 80012ce:	2e01      	cmp	r6, #1
 80012d0:	d108      	bne.n	80012e4 <ZadanieDwa+0x10c>
 80012d2:	6962      	ldr	r2, [r4, #20]
 80012d4:	b932      	cbnz	r2, 80012e4 <ZadanieDwa+0x10c>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365);  //ustaw poprawne napiece tutaj (3V)
 80012d6:	480b      	ldr	r0, [pc, #44]	; (8001304 <ZadanieDwa+0x12c>)
 80012d8:	f240 5355 	movw	r3, #1365	; 0x555
 80012dc:	2110      	movs	r1, #16
 80012de:	f004 ff02 	bl	80060e6 <HAL_DAC_SetValue>
							ladowarka.UstawioneNapiecieNaopAmpie=1;
 80012e2:	6166      	str	r6, [r4, #20]
					}



    osDelay(1); //to chyba ma zostac?
 80012e4:	2001      	movs	r0, #1
 80012e6:	f007 f8cb 	bl	8008480 <osDelay>
  {
 80012ea:	e779      	b.n	80011e0 <ZadanieDwa+0x8>
 80012ec:	20003a54 	.word	0x20003a54
 80012f0:	200037e8 	.word	0x200037e8
 80012f4:	200044d0 	.word	0x200044d0
 80012f8:	200044d8 	.word	0x200044d8
 80012fc:	40533333 	.word	0x40533333
 8001300:	39800000 	.word	0x39800000
 8001304:	20003838 	.word	0x20003838
 8001308:	200044d4 	.word	0x200044d4

0800130c <SystemClock_Config>:
{
 800130c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800130e:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001310:	2210      	movs	r2, #16
 8001312:	2100      	movs	r1, #0
 8001314:	a80a      	add	r0, sp, #40	; 0x28
 8001316:	f01f fa5f 	bl	80207d8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800131a:	2214      	movs	r2, #20
 800131c:	2100      	movs	r1, #0
 800131e:	a803      	add	r0, sp, #12
 8001320:	f01f fa5a 	bl	80207d8 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001324:	2100      	movs	r1, #0
 8001326:	2230      	movs	r2, #48	; 0x30
 8001328:	a814      	add	r0, sp, #80	; 0x50
 800132a:	f01f fa55 	bl	80207d8 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800132e:	2400      	movs	r4, #0
 8001330:	4b22      	ldr	r3, [pc, #136]	; (80013bc <SystemClock_Config+0xb0>)
 8001332:	9401      	str	r4, [sp, #4]
 8001334:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001336:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800133a:	641a      	str	r2, [r3, #64]	; 0x40
 800133c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800133e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001342:	9301      	str	r3, [sp, #4]
 8001344:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001346:	4b1e      	ldr	r3, [pc, #120]	; (80013c0 <SystemClock_Config+0xb4>)
 8001348:	9402      	str	r4, [sp, #8]
 800134a:	681a      	ldr	r2, [r3, #0]
 800134c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001350:	601a      	str	r2, [r3, #0]
 8001352:	681b      	ldr	r3, [r3, #0]
 8001354:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001358:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800135a:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800135c:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800135e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001362:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001366:	2502      	movs	r5, #2
 8001368:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800136c:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001370:	2708      	movs	r7, #8
 8001372:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001376:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001378:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 800137a:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800137e:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001380:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001382:	f005 fea3 	bl	80070cc <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001386:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001388:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800138c:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001390:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001394:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001398:	a803      	add	r0, sp, #12
 800139a:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800139c:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800139e:	f006 f86d 	bl	800747c <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80013a2:	23c0      	movs	r3, #192	; 0xc0
 80013a4:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013a6:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80013a8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80013ac:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80013ae:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80013b0:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013b2:	f006 f93d 	bl	8007630 <HAL_RCCEx_PeriphCLKConfig>
}
 80013b6:	b021      	add	sp, #132	; 0x84
 80013b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013ba:	bf00      	nop
 80013bc:	40023800 	.word	0x40023800
 80013c0:	40007000 	.word	0x40007000

080013c4 <main>:
{
 80013c4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80013c8:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80013ca:	f004 fb81 	bl	8005ad0 <HAL_Init>
  SystemClock_Config();
 80013ce:	f7ff ff9d 	bl	800130c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013d2:	2214      	movs	r2, #20
 80013d4:	2100      	movs	r1, #0
 80013d6:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013d8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013da:	f01f f9fd 	bl	80207d8 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013de:	4bc4      	ldr	r3, [pc, #784]	; (80016f0 <main+0x32c>)
 80013e0:	9400      	str	r4, [sp, #0]
 80013e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013e4:	48c3      	ldr	r0, [pc, #780]	; (80016f4 <main+0x330>)
  hi2c3.Instance = I2C3;
 80013e6:	4dc4      	ldr	r5, [pc, #784]	; (80016f8 <main+0x334>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013e8:	f042 0220 	orr.w	r2, r2, #32
 80013ec:	631a      	str	r2, [r3, #48]	; 0x30
 80013ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f0:	f002 0220 	and.w	r2, r2, #32
 80013f4:	9200      	str	r2, [sp, #0]
 80013f6:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013f8:	9401      	str	r4, [sp, #4]
 80013fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013fc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001400:	631a      	str	r2, [r3, #48]	; 0x30
 8001402:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001404:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001408:	9201      	str	r2, [sp, #4]
 800140a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800140c:	9402      	str	r4, [sp, #8]
 800140e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001410:	f042 0204 	orr.w	r2, r2, #4
 8001414:	631a      	str	r2, [r3, #48]	; 0x30
 8001416:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001418:	f002 0204 	and.w	r2, r2, #4
 800141c:	9202      	str	r2, [sp, #8]
 800141e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001420:	9403      	str	r4, [sp, #12]
 8001422:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001424:	f042 0201 	orr.w	r2, r2, #1
 8001428:	631a      	str	r2, [r3, #48]	; 0x30
 800142a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800142c:	f002 0201 	and.w	r2, r2, #1
 8001430:	9203      	str	r2, [sp, #12]
 8001432:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001434:	9404      	str	r4, [sp, #16]
 8001436:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001438:	f042 0202 	orr.w	r2, r2, #2
 800143c:	631a      	str	r2, [r3, #48]	; 0x30
 800143e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001440:	f002 0202 	and.w	r2, r2, #2
 8001444:	9204      	str	r2, [sp, #16]
 8001446:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001448:	9405      	str	r4, [sp, #20]
 800144a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800144c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001450:	631a      	str	r2, [r3, #48]	; 0x30
 8001452:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001454:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001458:	9205      	str	r2, [sp, #20]
 800145a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800145c:	9406      	str	r4, [sp, #24]
 800145e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001460:	f042 0210 	orr.w	r2, r2, #16
 8001464:	631a      	str	r2, [r3, #48]	; 0x30
 8001466:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001468:	f002 0210 	and.w	r2, r2, #16
 800146c:	9206      	str	r2, [sp, #24]
 800146e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001470:	9407      	str	r4, [sp, #28]
 8001472:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001474:	f042 0208 	orr.w	r2, r2, #8
 8001478:	631a      	str	r2, [r3, #48]	; 0x30
 800147a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800147c:	f003 0308 	and.w	r3, r3, #8
 8001480:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001482:	4622      	mov	r2, r4
 8001484:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001486:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001488:	f005 f824 	bl	80064d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800148c:	489b      	ldr	r0, [pc, #620]	; (80016fc <main+0x338>)
 800148e:	4622      	mov	r2, r4
 8001490:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001494:	f005 f81e 	bl	80064d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001498:	4622      	mov	r2, r4
 800149a:	4899      	ldr	r0, [pc, #612]	; (8001700 <main+0x33c>)
 800149c:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014a0:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014a2:	f005 f817 	bl	80064d4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014a6:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014a8:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014ac:	4891      	ldr	r0, [pc, #580]	; (80016f4 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014ae:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014b0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014b2:	e9cd b60d 	strd	fp, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014b6:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014b8:	f004 ff24 	bl	8006304 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80014bc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014c0:	488e      	ldr	r0, [pc, #568]	; (80016fc <main+0x338>)
 80014c2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014c4:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014c8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014cc:	f004 ff1a 	bl	8006304 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014d0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014d2:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014d6:	488a      	ldr	r0, [pc, #552]	; (8001700 <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014d8:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014dc:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014e0:	f004 ff10 	bl	8006304 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80014e4:	4887      	ldr	r0, [pc, #540]	; (8001704 <main+0x340>)
 80014e6:	4a88      	ldr	r2, [pc, #544]	; (8001708 <main+0x344>)
 80014e8:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80014ea:	f004 fd8b 	bl	8006004 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80014ee:	4b87      	ldr	r3, [pc, #540]	; (800170c <main+0x348>)
 80014f0:	4a87      	ldr	r2, [pc, #540]	; (8001710 <main+0x34c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014f2:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80014f4:	e9c5 3200 	strd	r3, r2, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014f8:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014fa:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80014fe:	e9c5 2404 	strd	r2, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001502:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001506:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800150a:	f005 f9c5 	bl	8006898 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800150e:	2110      	movs	r1, #16
 8001510:	4628      	mov	r0, r5
 8001512:	f005 fc01 	bl	8006d18 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001516:	4621      	mov	r1, r4
 8001518:	4628      	mov	r0, r5
 800151a:	f005 fc1c 	bl	8006d56 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800151e:	487d      	ldr	r0, [pc, #500]	; (8001714 <main+0x350>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001520:	497d      	ldr	r1, [pc, #500]	; (8001718 <main+0x354>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001522:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001524:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001528:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800152c:	f44f 7500 	mov.w	r5, #512	; 0x200
 8001530:	2218      	movs	r2, #24
 8001532:	e9c0 5206 	strd	r5, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001536:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001538:	4d78      	ldr	r5, [pc, #480]	; (800171c <main+0x358>)
  hspi5.Init.CRCPolynomial = 10;
 800153a:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800153c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001540:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001544:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001548:	f006 fa76 	bl	8007a38 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800154c:	4a74      	ldr	r2, [pc, #464]	; (8001720 <main+0x35c>)
  SdramTiming.LoadToActiveDelay = 2;
 800154e:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001550:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001554:	e9c5 2600 	strd	r2, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001558:	2240      	movs	r2, #64	; 0x40
 800155a:	e9c5 8204 	strd	r8, r2, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800155e:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001562:	e9c5 2406 	strd	r2, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001566:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 800156a:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 800156c:	f04f 0907 	mov.w	r9, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001570:	e9c5 2408 	strd	r2, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001574:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001576:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800157a:	4628      	mov	r0, r5
  SdramTiming.RPDelay = 2;
 800157c:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001580:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001584:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001588:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 800158a:	e9cd 9b0e 	strd	r9, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800158e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 8001592:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001594:	f006 f976 	bl	8007884 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001598:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800159c:	a909      	add	r1, sp, #36	; 0x24
 800159e:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 80015a0:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80015a4:	9609      	str	r6, [sp, #36]	; 0x24
 __IO uint32_t tmpmrd =0;
 80015a6:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 80015a8:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015aa:	f006 f98b 	bl	80078c4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80015ae:	4630      	mov	r0, r6
 80015b0:	f004 faba 	bl	8005b28 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015b8:	a909      	add	r1, sp, #36	; 0x24
 80015ba:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015bc:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015c0:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015c4:	f006 f97e 	bl	80078c4 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80015c8:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015ce:	a909      	add	r1, sp, #36	; 0x24
 80015d0:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015d2:	e9cd 3a09 	strd	r3, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015d6:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015da:	f006 f973 	bl	80078c4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80015de:	f44f 720c 	mov.w	r2, #560	; 0x230
 80015e2:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80015e4:	9b08      	ldr	r3, [sp, #32]
 80015e6:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015ec:	a909      	add	r1, sp, #36	; 0x24
 80015ee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015f0:	e9cd ba09 	strd	fp, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80015f4:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015f6:	f006 f965 	bl	80078c4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80015fa:	f240 516a 	movw	r1, #1386	; 0x56a
 80015fe:	4628      	mov	r0, r5
 8001600:	f006 f977 	bl	80078f2 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001604:	2234      	movs	r2, #52	; 0x34
 8001606:	4621      	mov	r1, r4
 8001608:	eb0d 0002 	add.w	r0, sp, r2
 800160c:	f01f f8e4 	bl	80207d8 <memset>
  hltdc.Instance = LTDC;
 8001610:	4d44      	ldr	r5, [pc, #272]	; (8001724 <main+0x360>)
 8001612:	4b45      	ldr	r3, [pc, #276]	; (8001728 <main+0x364>)
  hltdc.Init.Backcolor.Blue = 0;
 8001614:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001616:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 800161a:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 800161c:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 8001620:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedVBP = 3;
 8001624:	2303      	movs	r3, #3
 8001626:	e9c5 c307 	strd	ip, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800162a:	f240 1e0d 	movw	lr, #269	; 0x10d
 800162e:	f240 1343 	movw	r3, #323	; 0x143
 8001632:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001636:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001638:	f240 1347 	movw	r3, #327	; 0x147
 800163c:	f240 1a17 	movw	sl, #279	; 0x117
 8001640:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001644:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001648:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 800164a:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800164e:	f005 fc27 	bl	8006ea0 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001652:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001654:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001656:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800165a:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 800165e:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001660:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8001664:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001668:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 800166c:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001670:	a90d      	add	r1, sp, #52	; 0x34
 8001672:	4622      	mov	r2, r4
 8001674:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001676:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 800167a:	4d2c      	ldr	r5, [pc, #176]	; (800172c <main+0x368>)
  pLayerCfg.ImageHeight = 320;
 800167c:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 800167e:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001680:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001684:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001688:	f005 fcd5 	bl	8007036 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800168c:	4b28      	ldr	r3, [pc, #160]	; (8001730 <main+0x36c>)
 800168e:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001694:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001696:	4d27      	ldr	r5, [pc, #156]	; (8001734 <main+0x370>)
  LcdDrv->DisplayOff();
 8001698:	68db      	ldr	r3, [r3, #12]
 800169a:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800169c:	4b26      	ldr	r3, [pc, #152]	; (8001738 <main+0x374>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800169e:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80016a2:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016a6:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 80016a8:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80016ac:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016b0:	f004 fd2b 	bl	800610a <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80016b4:	4631      	mov	r1, r6
 80016b6:	4628      	mov	r0, r5
 80016b8:	f004 fde0 	bl	800627c <HAL_DMA2D_ConfigLayer>
  ADC_ChannelConfTypeDef sConfig = {0};
 80016bc:	4621      	mov	r1, r4
 80016be:	4642      	mov	r2, r8
 80016c0:	a80d      	add	r0, sp, #52	; 0x34
 80016c2:	f01f f889 	bl	80207d8 <memset>
  hadc1.Instance = ADC1;
 80016c6:	4d1d      	ldr	r5, [pc, #116]	; (800173c <main+0x378>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016c8:	4a1d      	ldr	r2, [pc, #116]	; (8001740 <main+0x37c>)
  hadc1.Init.NbrOfConversion = 1;
 80016ca:	61ee      	str	r6, [r5, #28]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016cc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016d0:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80016d4:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80016d6:	4b1b      	ldr	r3, [pc, #108]	; (8001744 <main+0x380>)
 80016d8:	62ab      	str	r3, [r5, #40]	; 0x28
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80016da:	616e      	str	r6, [r5, #20]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80016dc:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80016de:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80016e0:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80016e2:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80016e6:	62ec      	str	r4, [r5, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80016e8:	60ec      	str	r4, [r5, #12]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80016ea:	f885 4030 	strb.w	r4, [r5, #48]	; 0x30
 80016ee:	e02b      	b.n	8001748 <main+0x384>
 80016f0:	40023800 	.word	0x40023800
 80016f4:	40020800 	.word	0x40020800
 80016f8:	2000388c 	.word	0x2000388c
 80016fc:	40020400 	.word	0x40020400
 8001700:	40020c00 	.word	0x40020c00
 8001704:	20003830 	.word	0x20003830
 8001708:	40023000 	.word	0x40023000
 800170c:	40005c00 	.word	0x40005c00
 8001710:	000186a0 	.word	0x000186a0
 8001714:	200039bc 	.word	0x200039bc
 8001718:	40015000 	.word	0x40015000
 800171c:	20003988 	.word	0x20003988
 8001720:	a0000140 	.word	0xa0000140
 8001724:	200038e0 	.word	0x200038e0
 8001728:	40016800 	.word	0x40016800
 800172c:	200037e0 	.word	0x200037e0
 8001730:	2000001c 	.word	0x2000001c
 8001734:	2000384c 	.word	0x2000384c
 8001738:	4002b000 	.word	0x4002b000
 800173c:	200037e8 	.word	0x200037e8
 8001740:	40012000 	.word	0x40012000
 8001744:	0f000001 	.word	0x0f000001
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001748:	f004 fa02 	bl	8005b50 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800174c:	a90d      	add	r1, sp, #52	; 0x34
 800174e:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 8001750:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 8001754:	4d25      	ldr	r5, [pc, #148]	; (80017ec <main+0x428>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001756:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800175a:	f004 fb65 	bl	8005e28 <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 800175e:	4924      	ldr	r1, [pc, #144]	; (80017f0 <main+0x42c>)
  hdac.Instance = DAC;
 8001760:	4e24      	ldr	r6, [pc, #144]	; (80017f4 <main+0x430>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001762:	60ac      	str	r4, [r5, #8]
  htim7.Init.Prescaler = 8400-1;
 8001764:	f242 03cf 	movw	r3, #8399	; 0x20cf
 8001768:	e9c5 1300 	strd	r1, r3, [r5]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800176c:	4628      	mov	r0, r5
  htim7.Init.Period = 1000-1;
 800176e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001772:	60eb      	str	r3, [r5, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001774:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001778:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800177a:	f006 fcf7 	bl	800816c <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800177e:	a90d      	add	r1, sp, #52	; 0x34
 8001780:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001782:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001786:	f006 fd0b 	bl	80081a0 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 800178a:	4b1b      	ldr	r3, [pc, #108]	; (80017f8 <main+0x434>)
 800178c:	6033      	str	r3, [r6, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800178e:	4630      	mov	r0, r6
  DAC_ChannelConfTypeDef sConfig = {0};
 8001790:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001794:	f004 fc46 	bl	8006024 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001798:	4642      	mov	r2, r8
 800179a:	a90d      	add	r1, sp, #52	; 0x34
 800179c:	4630      	mov	r0, r6
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 800179e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 80017a2:	f004 fc7f 	bl	80060a4 <HAL_DAC_ConfigChannel>
  MX_TouchGFX_Init();
 80017a6:	f7fe ff1e 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 80017aa:	4628      	mov	r0, r5
 80017ac:	f006 fbc1 	bl	8007f32 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 80017b0:	4641      	mov	r1, r8
 80017b2:	4630      	mov	r0, r6
 80017b4:	f004 fc49 	bl	800604a <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80017b8:	f240 5355 	movw	r3, #1365	; 0x555
 80017bc:	4622      	mov	r2, r4
 80017be:	4641      	mov	r1, r8
 80017c0:	4630      	mov	r0, r6
 80017c2:	f004 fc90 	bl	80060e6 <HAL_DAC_SetValue>
  osKernelInitialize();
 80017c6:	f006 fdcb 	bl	8008360 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017ca:	4a0c      	ldr	r2, [pc, #48]	; (80017fc <main+0x438>)
 80017cc:	480c      	ldr	r0, [pc, #48]	; (8001800 <main+0x43c>)
 80017ce:	4621      	mov	r1, r4
 80017d0:	f006 fe00 	bl	80083d4 <osThreadNew>
 80017d4:	4b0b      	ldr	r3, [pc, #44]	; (8001804 <main+0x440>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017d6:	4a0c      	ldr	r2, [pc, #48]	; (8001808 <main+0x444>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017d8:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017da:	4621      	mov	r1, r4
 80017dc:	480b      	ldr	r0, [pc, #44]	; (800180c <main+0x448>)
 80017de:	f006 fdf9 	bl	80083d4 <osThreadNew>
 80017e2:	4b0b      	ldr	r3, [pc, #44]	; (8001810 <main+0x44c>)
 80017e4:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80017e6:	f006 fdd5 	bl	8008394 <osKernelStart>
  while (1)
 80017ea:	e7fe      	b.n	80017ea <main+0x426>
 80017ec:	20003a14 	.word	0x20003a14
 80017f0:	40001400 	.word	0x40001400
 80017f4:	20003838 	.word	0x20003838
 80017f8:	40007400 	.word	0x40007400
 80017fc:	08021d30 	.word	0x08021d30
 8001800:	080005eb 	.word	0x080005eb
 8001804:	200037dc 	.word	0x200037dc
 8001808:	08021d54 	.word	0x08021d54
 800180c:	080011d9 	.word	0x080011d9
 8001810:	200037e4 	.word	0x200037e4

08001814 <IOE_Init>:
 8001814:	4770      	bx	lr

08001816 <IOE_ITConfig>:
 8001816:	4770      	bx	lr

08001818 <IOE_Write>:
{
 8001818:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800181a:	4b09      	ldr	r3, [pc, #36]	; (8001840 <IOE_Write+0x28>)
 800181c:	f88d 2017 	strb.w	r2, [sp, #23]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	9302      	str	r3, [sp, #8]
 8001824:	f10d 0217 	add.w	r2, sp, #23
 8001828:	2301      	movs	r3, #1
 800182a:	9200      	str	r2, [sp, #0]
 800182c:	9301      	str	r3, [sp, #4]
 800182e:	460a      	mov	r2, r1
 8001830:	4601      	mov	r1, r0
 8001832:	4804      	ldr	r0, [pc, #16]	; (8001844 <IOE_Write+0x2c>)
 8001834:	f005 f8d8 	bl	80069e8 <HAL_I2C_Mem_Write>
}
 8001838:	b007      	add	sp, #28
 800183a:	f85d fb04 	ldr.w	pc, [sp], #4
 800183e:	bf00      	nop
 8001840:	2000000c 	.word	0x2000000c
 8001844:	2000388c 	.word	0x2000388c

08001848 <IOE_Read>:
{
 8001848:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800184a:	2300      	movs	r3, #0
 800184c:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001850:	4b08      	ldr	r3, [pc, #32]	; (8001874 <IOE_Read+0x2c>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	9302      	str	r3, [sp, #8]
{
 8001856:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001858:	2301      	movs	r3, #1
 800185a:	f10d 0117 	add.w	r1, sp, #23
 800185e:	9100      	str	r1, [sp, #0]
 8001860:	9301      	str	r3, [sp, #4]
 8001862:	4601      	mov	r1, r0
 8001864:	4804      	ldr	r0, [pc, #16]	; (8001878 <IOE_Read+0x30>)
 8001866:	f005 f94f 	bl	8006b08 <HAL_I2C_Mem_Read>
}
 800186a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800186e:	b007      	add	sp, #28
 8001870:	f85d fb04 	ldr.w	pc, [sp], #4
 8001874:	2000000c 	.word	0x2000000c
 8001878:	2000388c 	.word	0x2000388c

0800187c <IOE_ReadMultiple>:
{
 800187c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800187e:	4c08      	ldr	r4, [pc, #32]	; (80018a0 <IOE_ReadMultiple+0x24>)
 8001880:	6824      	ldr	r4, [r4, #0]
 8001882:	9200      	str	r2, [sp, #0]
 8001884:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001888:	460a      	mov	r2, r1
 800188a:	2301      	movs	r3, #1
 800188c:	4601      	mov	r1, r0
 800188e:	4805      	ldr	r0, [pc, #20]	; (80018a4 <IOE_ReadMultiple+0x28>)
 8001890:	f005 f93a 	bl	8006b08 <HAL_I2C_Mem_Read>
}
 8001894:	3800      	subs	r0, #0
 8001896:	bf18      	it	ne
 8001898:	2001      	movne	r0, #1
 800189a:	b004      	add	sp, #16
 800189c:	bd10      	pop	{r4, pc}
 800189e:	bf00      	nop
 80018a0:	2000000c 	.word	0x2000000c
 80018a4:	2000388c 	.word	0x2000388c

080018a8 <IOE_Delay>:
 80018a8:	f004 b93e 	b.w	8005b28 <HAL_Delay>

080018ac <LCD_IO_Init>:
{
 80018ac:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ae:	4806      	ldr	r0, [pc, #24]	; (80018c8 <LCD_IO_Init+0x1c>)
 80018b0:	2200      	movs	r2, #0
 80018b2:	2104      	movs	r1, #4
 80018b4:	f004 fe0e 	bl	80064d4 <HAL_GPIO_WritePin>
}
 80018b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018bc:	4802      	ldr	r0, [pc, #8]	; (80018c8 <LCD_IO_Init+0x1c>)
 80018be:	2201      	movs	r2, #1
 80018c0:	2104      	movs	r1, #4
 80018c2:	f004 be07 	b.w	80064d4 <HAL_GPIO_WritePin>
 80018c6:	bf00      	nop
 80018c8:	40020800 	.word	0x40020800

080018cc <LCD_IO_WriteData>:
{
 80018cc:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ce:	4d0b      	ldr	r5, [pc, #44]	; (80018fc <LCD_IO_WriteData+0x30>)
{
 80018d0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018d2:	2201      	movs	r2, #1
 80018d4:	480a      	ldr	r0, [pc, #40]	; (8001900 <LCD_IO_WriteData+0x34>)
 80018d6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018da:	f004 fdfb 	bl	80064d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018de:	2200      	movs	r2, #0
 80018e0:	2104      	movs	r1, #4
 80018e2:	4628      	mov	r0, r5
 80018e4:	f004 fdf6 	bl	80064d4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018e8:	4620      	mov	r0, r4
 80018ea:	f7ff fc45 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018ee:	4628      	mov	r0, r5
 80018f0:	2201      	movs	r2, #1
}
 80018f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018f6:	2104      	movs	r1, #4
 80018f8:	f004 bdec 	b.w	80064d4 <HAL_GPIO_WritePin>
 80018fc:	40020800 	.word	0x40020800
 8001900:	40020c00 	.word	0x40020c00

08001904 <LCD_IO_WriteReg>:
{
 8001904:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001906:	4d0b      	ldr	r5, [pc, #44]	; (8001934 <LCD_IO_WriteReg+0x30>)
{
 8001908:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800190a:	2200      	movs	r2, #0
 800190c:	480a      	ldr	r0, [pc, #40]	; (8001938 <LCD_IO_WriteReg+0x34>)
 800190e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001912:	f004 fddf 	bl	80064d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001916:	2200      	movs	r2, #0
 8001918:	2104      	movs	r1, #4
 800191a:	4628      	mov	r0, r5
 800191c:	f004 fdda 	bl	80064d4 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001920:	4620      	mov	r0, r4
 8001922:	f7ff fc29 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001926:	4628      	mov	r0, r5
 8001928:	2201      	movs	r2, #1
}
 800192a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800192e:	2104      	movs	r1, #4
 8001930:	f004 bdd0 	b.w	80064d4 <HAL_GPIO_WritePin>
 8001934:	40020800 	.word	0x40020800
 8001938:	40020c00 	.word	0x40020c00

0800193c <LCD_IO_ReadData>:
{
 800193c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800193e:	4e14      	ldr	r6, [pc, #80]	; (8001990 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001940:	4f14      	ldr	r7, [pc, #80]	; (8001994 <LCD_IO_ReadData+0x58>)
{
 8001942:	4605      	mov	r5, r0
 8001944:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001946:	4630      	mov	r0, r6
 8001948:	2200      	movs	r2, #0
 800194a:	2104      	movs	r1, #4
 800194c:	f004 fdc2 	bl	80064d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001950:	2200      	movs	r2, #0
 8001952:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001956:	4638      	mov	r0, r7
 8001958:	f004 fdbc 	bl	80064d4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800195c:	4628      	mov	r0, r5
 800195e:	f7ff fc0b 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001962:	4b0d      	ldr	r3, [pc, #52]	; (8001998 <LCD_IO_ReadData+0x5c>)
 8001964:	480d      	ldr	r0, [pc, #52]	; (800199c <LCD_IO_ReadData+0x60>)
 8001966:	681b      	ldr	r3, [r3, #0]
 8001968:	4622      	mov	r2, r4
 800196a:	a901      	add	r1, sp, #4
 800196c:	f006 fa3f 	bl	8007dee <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001970:	4638      	mov	r0, r7
 8001972:	2201      	movs	r2, #1
 8001974:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001978:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800197a:	f004 fdab 	bl	80064d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800197e:	4630      	mov	r0, r6
 8001980:	2201      	movs	r2, #1
 8001982:	2104      	movs	r1, #4
 8001984:	f004 fda6 	bl	80064d4 <HAL_GPIO_WritePin>
}
 8001988:	4620      	mov	r0, r4
 800198a:	b003      	add	sp, #12
 800198c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800198e:	bf00      	nop
 8001990:	40020800 	.word	0x40020800
 8001994:	40020c00 	.word	0x40020c00
 8001998:	20000010 	.word	0x20000010
 800199c:	200039bc 	.word	0x200039bc

080019a0 <LCD_Delay>:
  HAL_Delay(Delay);
 80019a0:	f004 b8c2 	b.w	8005b28 <HAL_Delay>

080019a4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 80019a4:	6802      	ldr	r2, [r0, #0]
 80019a6:	4b08      	ldr	r3, [pc, #32]	; (80019c8 <HAL_TIM_PeriodElapsedCallback+0x24>)
 80019a8:	429a      	cmp	r2, r3
{
 80019aa:	b510      	push	{r4, lr}
 80019ac:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 80019ae:	d101      	bne.n	80019b4 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 80019b0:	f004 f8a8 	bl	8005b04 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 80019b4:	6822      	ldr	r2, [r4, #0]
 80019b6:	4b05      	ldr	r3, [pc, #20]	; (80019cc <HAL_TIM_PeriodElapsedCallback+0x28>)
 80019b8:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 80019ba:	bf02      	ittt	eq
 80019bc:	4b04      	ldreq	r3, [pc, #16]	; (80019d0 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 80019be:	2201      	moveq	r2, #1
 80019c0:	f8c3 2a6c 	streq.w	r2, [r3, #2668]	; 0xa6c
  }

  /* USER CODE END Callback 1 */
}
 80019c4:	bd10      	pop	{r4, pc}
 80019c6:	bf00      	nop
 80019c8:	40010400 	.word	0x40010400
 80019cc:	40001400 	.word	0x40001400
 80019d0:	20003a54 	.word	0x20003a54

080019d4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019d4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019d6:	4b0e      	ldr	r3, [pc, #56]	; (8001a10 <HAL_MspInit+0x3c>)
 80019d8:	2200      	movs	r2, #0
 80019da:	9200      	str	r2, [sp, #0]
 80019dc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019de:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019e2:	6459      	str	r1, [r3, #68]	; 0x44
 80019e4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019e6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019ea:	9100      	str	r1, [sp, #0]
 80019ec:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019ee:	9201      	str	r2, [sp, #4]
 80019f0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019f2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019f6:	6419      	str	r1, [r3, #64]	; 0x40
 80019f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019fe:	9301      	str	r3, [sp, #4]
 8001a00:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a02:	210f      	movs	r1, #15
 8001a04:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a08:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a0a:	f004 babb 	b.w	8005f84 <HAL_NVIC_SetPriority>
 8001a0e:	bf00      	nop
 8001a10:	40023800 	.word	0x40023800

08001a14 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a14:	b510      	push	{r4, lr}
 8001a16:	4604      	mov	r4, r0
 8001a18:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a1a:	2214      	movs	r2, #20
 8001a1c:	2100      	movs	r1, #0
 8001a1e:	a803      	add	r0, sp, #12
 8001a20:	f01e feda 	bl	80207d8 <memset>
  if(hadc->Instance==ADC1)
 8001a24:	6822      	ldr	r2, [r4, #0]
 8001a26:	4b12      	ldr	r3, [pc, #72]	; (8001a70 <HAL_ADC_MspInit+0x5c>)
 8001a28:	429a      	cmp	r2, r3
 8001a2a:	d11e      	bne.n	8001a6a <HAL_ADC_MspInit+0x56>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a2c:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8001a30:	2100      	movs	r1, #0
 8001a32:	9101      	str	r1, [sp, #4]
 8001a34:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a36:	480f      	ldr	r0, [pc, #60]	; (8001a74 <HAL_ADC_MspInit+0x60>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a38:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001a3c:	645a      	str	r2, [r3, #68]	; 0x44
 8001a3e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a40:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001a44:	9201      	str	r2, [sp, #4]
 8001a46:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a48:	9102      	str	r1, [sp, #8]
 8001a4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a4c:	f042 0201 	orr.w	r2, r2, #1
 8001a50:	631a      	str	r2, [r3, #48]	; 0x30
 8001a52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a54:	f003 0301 	and.w	r3, r3, #1
 8001a58:	9302      	str	r3, [sp, #8]
 8001a5a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a5c:	2280      	movs	r2, #128	; 0x80
 8001a5e:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a60:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a62:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a66:	f004 fc4d 	bl	8006304 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001a6a:	b008      	add	sp, #32
 8001a6c:	bd10      	pop	{r4, pc}
 8001a6e:	bf00      	nop
 8001a70:	40012000 	.word	0x40012000
 8001a74:	40020000 	.word	0x40020000

08001a78 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a78:	6802      	ldr	r2, [r0, #0]
 8001a7a:	4b09      	ldr	r3, [pc, #36]	; (8001aa0 <HAL_CRC_MspInit+0x28>)
 8001a7c:	429a      	cmp	r2, r3
{
 8001a7e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a80:	d10b      	bne.n	8001a9a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a82:	2300      	movs	r3, #0
 8001a84:	9301      	str	r3, [sp, #4]
 8001a86:	4b07      	ldr	r3, [pc, #28]	; (8001aa4 <HAL_CRC_MspInit+0x2c>)
 8001a88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a8a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001a90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a92:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a96:	9301      	str	r3, [sp, #4]
 8001a98:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a9a:	b002      	add	sp, #8
 8001a9c:	4770      	bx	lr
 8001a9e:	bf00      	nop
 8001aa0:	40023000 	.word	0x40023000
 8001aa4:	40023800 	.word	0x40023800

08001aa8 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001aa8:	b510      	push	{r4, lr}
 8001aaa:	4604      	mov	r4, r0
 8001aac:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aae:	2214      	movs	r2, #20
 8001ab0:	2100      	movs	r1, #0
 8001ab2:	a803      	add	r0, sp, #12
 8001ab4:	f01e fe90 	bl	80207d8 <memset>
  if(hdac->Instance==DAC)
 8001ab8:	6822      	ldr	r2, [r4, #0]
 8001aba:	4b12      	ldr	r3, [pc, #72]	; (8001b04 <HAL_DAC_MspInit+0x5c>)
 8001abc:	429a      	cmp	r2, r3
 8001abe:	d11e      	bne.n	8001afe <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001ac0:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001ac4:	2100      	movs	r1, #0
 8001ac6:	9101      	str	r1, [sp, #4]
 8001ac8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001aca:	480f      	ldr	r0, [pc, #60]	; (8001b08 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001acc:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001ad0:	641a      	str	r2, [r3, #64]	; 0x40
 8001ad2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ad4:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001ad8:	9201      	str	r2, [sp, #4]
 8001ada:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001adc:	9102      	str	r1, [sp, #8]
 8001ade:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ae0:	f042 0201 	orr.w	r2, r2, #1
 8001ae4:	631a      	str	r2, [r3, #48]	; 0x30
 8001ae6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ae8:	f003 0301 	and.w	r3, r3, #1
 8001aec:	9302      	str	r3, [sp, #8]
 8001aee:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001af0:	2220      	movs	r2, #32
 8001af2:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001af4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001af6:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001afa:	f004 fc03 	bl	8006304 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001afe:	b008      	add	sp, #32
 8001b00:	bd10      	pop	{r4, pc}
 8001b02:	bf00      	nop
 8001b04:	40007400 	.word	0x40007400
 8001b08:	40020000 	.word	0x40020000

08001b0c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001b0c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001b0e:	4b0f      	ldr	r3, [pc, #60]	; (8001b4c <HAL_DMA2D_MspInit+0x40>)
 8001b10:	6802      	ldr	r2, [r0, #0]
 8001b12:	429a      	cmp	r2, r3
 8001b14:	d116      	bne.n	8001b44 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b16:	2200      	movs	r2, #0
 8001b18:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001b1c:	9201      	str	r2, [sp, #4]
 8001b1e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b20:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001b24:	6319      	str	r1, [r3, #48]	; 0x30
 8001b26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b28:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b2c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b2e:	2105      	movs	r1, #5
 8001b30:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b32:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b34:	f004 fa26 	bl	8005f84 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b38:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001b3a:	b003      	add	sp, #12
 8001b3c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b40:	f004 ba52 	b.w	8005fe8 <HAL_NVIC_EnableIRQ>
}
 8001b44:	b003      	add	sp, #12
 8001b46:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b4a:	bf00      	nop
 8001b4c:	4002b000 	.word	0x4002b000

08001b50 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001b54:	4604      	mov	r4, r0
 8001b56:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b58:	2214      	movs	r2, #20
 8001b5a:	2100      	movs	r1, #0
 8001b5c:	a803      	add	r0, sp, #12
 8001b5e:	f01e fe3b 	bl	80207d8 <memset>
  if(hi2c->Instance==I2C3)
 8001b62:	6822      	ldr	r2, [r4, #0]
 8001b64:	4b24      	ldr	r3, [pc, #144]	; (8001bf8 <HAL_I2C_MspInit+0xa8>)
 8001b66:	429a      	cmp	r2, r3
 8001b68:	d143      	bne.n	8001bf2 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b6a:	4c24      	ldr	r4, [pc, #144]	; (8001bfc <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b6c:	4824      	ldr	r0, [pc, #144]	; (8001c00 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b6e:	2500      	movs	r5, #0
 8001b70:	9500      	str	r5, [sp, #0]
 8001b72:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b74:	f043 0304 	orr.w	r3, r3, #4
 8001b78:	6323      	str	r3, [r4, #48]	; 0x30
 8001b7a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b7c:	f003 0304 	and.w	r3, r3, #4
 8001b80:	9300      	str	r3, [sp, #0]
 8001b82:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b84:	9501      	str	r5, [sp, #4]
 8001b86:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b88:	f043 0301 	orr.w	r3, r3, #1
 8001b8c:	6323      	str	r3, [r4, #48]	; 0x30
 8001b8e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b90:	f003 0301 	and.w	r3, r3, #1
 8001b94:	9301      	str	r3, [sp, #4]
 8001b96:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b98:	f04f 0912 	mov.w	r9, #18
 8001b9c:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ba0:	f04f 0801 	mov.w	r8, #1
 8001ba4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ba6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ba8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001baa:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bae:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001bb2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bb4:	f004 fba6 	bl	8006304 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001bb8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bbc:	4811      	ldr	r0, [pc, #68]	; (8001c04 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001bbe:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bc0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001bc2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bc6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bca:	f004 fb9b 	bl	8006304 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001bce:	9502      	str	r5, [sp, #8]
 8001bd0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bd2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001bd6:	6423      	str	r3, [r4, #64]	; 0x40
 8001bd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bda:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001bde:	9302      	str	r3, [sp, #8]
 8001be0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001be2:	6a23      	ldr	r3, [r4, #32]
 8001be4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001be8:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001bea:	6a23      	ldr	r3, [r4, #32]
 8001bec:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001bf0:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001bf2:	b009      	add	sp, #36	; 0x24
 8001bf4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001bf8:	40005c00 	.word	0x40005c00
 8001bfc:	40023800 	.word	0x40023800
 8001c00:	40020800 	.word	0x40020800
 8001c04:	40020000 	.word	0x40020000

08001c08 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001c08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c0a:	4604      	mov	r4, r0
 8001c0c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c0e:	2214      	movs	r2, #20
 8001c10:	2100      	movs	r1, #0
 8001c12:	a807      	add	r0, sp, #28
 8001c14:	f01e fde0 	bl	80207d8 <memset>
  if(hltdc->Instance==LTDC)
 8001c18:	6822      	ldr	r2, [r4, #0]
 8001c1a:	4b57      	ldr	r3, [pc, #348]	; (8001d78 <HAL_LTDC_MspInit+0x170>)
 8001c1c:	429a      	cmp	r2, r3
 8001c1e:	f040 80a8 	bne.w	8001d72 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c22:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001c26:	2500      	movs	r5, #0
 8001c28:	9500      	str	r5, [sp, #0]
 8001c2a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c2c:	4853      	ldr	r0, [pc, #332]	; (8001d7c <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c2e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c32:	645a      	str	r2, [r3, #68]	; 0x44
 8001c34:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c36:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001c3a:	9200      	str	r2, [sp, #0]
 8001c3c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c3e:	9501      	str	r5, [sp, #4]
 8001c40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c42:	f042 0220 	orr.w	r2, r2, #32
 8001c46:	631a      	str	r2, [r3, #48]	; 0x30
 8001c48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c4a:	f002 0220 	and.w	r2, r2, #32
 8001c4e:	9201      	str	r2, [sp, #4]
 8001c50:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c52:	9502      	str	r5, [sp, #8]
 8001c54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c56:	f042 0201 	orr.w	r2, r2, #1
 8001c5a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c5e:	f002 0201 	and.w	r2, r2, #1
 8001c62:	9202      	str	r2, [sp, #8]
 8001c64:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c66:	9503      	str	r5, [sp, #12]
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f042 0202 	orr.w	r2, r2, #2
 8001c6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c72:	f002 0202 	and.w	r2, r2, #2
 8001c76:	9203      	str	r2, [sp, #12]
 8001c78:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c7a:	9504      	str	r5, [sp, #16]
 8001c7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c7e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001c82:	631a      	str	r2, [r3, #48]	; 0x30
 8001c84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c86:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001c8a:	9204      	str	r2, [sp, #16]
 8001c8c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c8e:	9505      	str	r5, [sp, #20]
 8001c90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c92:	f042 0204 	orr.w	r2, r2, #4
 8001c96:	631a      	str	r2, [r3, #48]	; 0x30
 8001c98:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c9a:	f002 0204 	and.w	r2, r2, #4
 8001c9e:	9205      	str	r2, [sp, #20]
 8001ca0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ca2:	9506      	str	r5, [sp, #24]
 8001ca4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ca6:	f042 0208 	orr.w	r2, r2, #8
 8001caa:	631a      	str	r2, [r3, #48]	; 0x30
 8001cac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cae:	f003 0308 	and.w	r3, r3, #8
 8001cb2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cb6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001cb8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cba:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cbc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cc6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc8:	f004 fb1c 	bl	8006304 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001ccc:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd0:	482b      	ldr	r0, [pc, #172]	; (8001d80 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cd2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd6:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cda:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cdc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ce0:	f004 fb10 	bl	8006304 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001ce4:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ce6:	4827      	ldr	r0, [pc, #156]	; (8001d84 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001ce8:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cea:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cec:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cf0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cf4:	f004 fb06 	bl	8006304 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001cf8:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cfc:	4821      	ldr	r0, [pc, #132]	; (8001d84 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cfe:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d00:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d02:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d06:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d0a:	f004 fafb 	bl	8006304 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001d0e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d12:	481d      	ldr	r0, [pc, #116]	; (8001d88 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d14:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d16:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d18:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d1c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d20:	f004 faf0 	bl	8006304 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001d24:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d26:	4819      	ldr	r0, [pc, #100]	; (8001d8c <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d28:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d2a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d2c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d30:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d34:	f004 fae6 	bl	8006304 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001d38:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d3a:	4815      	ldr	r0, [pc, #84]	; (8001d90 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d3c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d3e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d40:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d44:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d48:	f004 fadc 	bl	8006304 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001d4c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d50:	480d      	ldr	r0, [pc, #52]	; (8001d88 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d52:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d54:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d56:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d5a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d5e:	f004 fad1 	bl	8006304 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001d62:	2058      	movs	r0, #88	; 0x58
 8001d64:	462a      	mov	r2, r5
 8001d66:	2105      	movs	r1, #5
 8001d68:	f004 f90c 	bl	8005f84 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001d6c:	2058      	movs	r0, #88	; 0x58
 8001d6e:	f004 f93b 	bl	8005fe8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d72:	b00d      	add	sp, #52	; 0x34
 8001d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d76:	bf00      	nop
 8001d78:	40016800 	.word	0x40016800
 8001d7c:	40021400 	.word	0x40021400
 8001d80:	40020000 	.word	0x40020000
 8001d84:	40020400 	.word	0x40020400
 8001d88:	40021800 	.word	0x40021800
 8001d8c:	40020800 	.word	0x40020800
 8001d90:	40020c00 	.word	0x40020c00

08001d94 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001d94:	b510      	push	{r4, lr}
 8001d96:	4604      	mov	r4, r0
 8001d98:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d9a:	2214      	movs	r2, #20
 8001d9c:	2100      	movs	r1, #0
 8001d9e:	a803      	add	r0, sp, #12
 8001da0:	f01e fd1a 	bl	80207d8 <memset>
  if(hspi->Instance==SPI5)
 8001da4:	6822      	ldr	r2, [r4, #0]
 8001da6:	4b14      	ldr	r3, [pc, #80]	; (8001df8 <HAL_SPI_MspInit+0x64>)
 8001da8:	429a      	cmp	r2, r3
 8001daa:	d123      	bne.n	8001df4 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001dac:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001db0:	2100      	movs	r1, #0
 8001db2:	9101      	str	r1, [sp, #4]
 8001db4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db6:	4811      	ldr	r0, [pc, #68]	; (8001dfc <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001db8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001dbc:	645a      	str	r2, [r3, #68]	; 0x44
 8001dbe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001dc0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001dc4:	9201      	str	r2, [sp, #4]
 8001dc6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001dc8:	9102      	str	r1, [sp, #8]
 8001dca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dcc:	f042 0220 	orr.w	r2, r2, #32
 8001dd0:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dd4:	f003 0320 	and.w	r3, r3, #32
 8001dd8:	9302      	str	r3, [sp, #8]
 8001dda:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ddc:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001de0:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001de2:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001de8:	2305      	movs	r3, #5
 8001dea:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dee:	a903      	add	r1, sp, #12
 8001df0:	f004 fa88 	bl	8006304 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001df4:	b008      	add	sp, #32
 8001df6:	bd10      	pop	{r4, pc}
 8001df8:	40015000 	.word	0x40015000
 8001dfc:	40021400 	.word	0x40021400

08001e00 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001e00:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001e02:	4b0f      	ldr	r3, [pc, #60]	; (8001e40 <HAL_TIM_Base_MspInit+0x40>)
 8001e04:	6802      	ldr	r2, [r0, #0]
 8001e06:	429a      	cmp	r2, r3
 8001e08:	d116      	bne.n	8001e38 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001e0a:	2200      	movs	r2, #0
 8001e0c:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001e10:	9201      	str	r2, [sp, #4]
 8001e12:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001e14:	f041 0120 	orr.w	r1, r1, #32
 8001e18:	6419      	str	r1, [r3, #64]	; 0x40
 8001e1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e1c:	f003 0320 	and.w	r3, r3, #32
 8001e20:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e22:	2105      	movs	r1, #5
 8001e24:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001e26:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e28:	f004 f8ac 	bl	8005f84 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e2c:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001e2e:	b003      	add	sp, #12
 8001e30:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e34:	f004 b8d8 	b.w	8005fe8 <HAL_NVIC_EnableIRQ>
}
 8001e38:	b003      	add	sp, #12
 8001e3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001e3e:	bf00      	nop
 8001e40:	40001400 	.word	0x40001400

08001e44 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001e44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e48:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001e4e:	4b2b      	ldr	r3, [pc, #172]	; (8001efc <HAL_SDRAM_MspInit+0xb8>)
 8001e50:	681c      	ldr	r4, [r3, #0]
 8001e52:	2c00      	cmp	r4, #0
 8001e54:	d14f      	bne.n	8001ef6 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001e56:	f04f 0801 	mov.w	r8, #1
 8001e5a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e5e:	4b28      	ldr	r3, [pc, #160]	; (8001f00 <HAL_SDRAM_MspInit+0xbc>)
 8001e60:	9400      	str	r4, [sp, #0]
 8001e62:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e64:	4827      	ldr	r0, [pc, #156]	; (8001f04 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e66:	ea42 0208 	orr.w	r2, r2, r8
 8001e6a:	639a      	str	r2, [r3, #56]	; 0x38
 8001e6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001e6e:	ea03 0308 	and.w	r3, r3, r8
 8001e72:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e74:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e76:	2603      	movs	r6, #3
 8001e78:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e7a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e7c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e7e:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001e82:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e86:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e8a:	f004 fa3b 	bl	8006304 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e8e:	481e      	ldr	r0, [pc, #120]	; (8001f08 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e90:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e92:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e94:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e98:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e9c:	f004 fa32 	bl	8006304 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ea0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ea4:	4819      	ldr	r0, [pc, #100]	; (8001f0c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ea6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ea8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eaa:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eae:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001eb2:	f004 fa27 	bl	8006304 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001eb6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001eba:	4815      	ldr	r0, [pc, #84]	; (8001f10 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ebc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ebe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ec0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ec4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ec8:	f004 fa1c 	bl	8006304 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ecc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ed0:	4810      	ldr	r0, [pc, #64]	; (8001f14 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ed2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ed4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ed6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eda:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ede:	f004 fa11 	bl	8006304 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001ee2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ee4:	480c      	ldr	r0, [pc, #48]	; (8001f18 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ee6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ee8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eea:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eee:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ef2:	f004 fa07 	bl	8006304 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001ef6:	b006      	add	sp, #24
 8001ef8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001efc:	200044dc 	.word	0x200044dc
 8001f00:	40023800 	.word	0x40023800
 8001f04:	40021400 	.word	0x40021400
 8001f08:	40020800 	.word	0x40020800
 8001f0c:	40021800 	.word	0x40021800
 8001f10:	40021000 	.word	0x40021000
 8001f14:	40020c00 	.word	0x40020c00
 8001f18:	40020400 	.word	0x40020400

08001f1c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001f1c:	b530      	push	{r4, r5, lr}
 8001f1e:	4601      	mov	r1, r0
 8001f20:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8001f22:	2200      	movs	r2, #0
 8001f24:	202c      	movs	r0, #44	; 0x2c
 8001f26:	f004 f82d 	bl	8005f84 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8001f2a:	202c      	movs	r0, #44	; 0x2c
 8001f2c:	f004 f85c 	bl	8005fe8 <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f30:	2500      	movs	r5, #0
 8001f32:	4b15      	ldr	r3, [pc, #84]	; (8001f88 <HAL_InitTick+0x6c>)
 8001f34:	9502      	str	r5, [sp, #8]
 8001f36:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8001f38:	4c14      	ldr	r4, [pc, #80]	; (8001f8c <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f3a:	f042 0202 	orr.w	r2, r2, #2
 8001f3e:	645a      	str	r2, [r3, #68]	; 0x44
 8001f40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f42:	f003 0302 	and.w	r3, r3, #2
 8001f46:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f48:	a901      	add	r1, sp, #4
 8001f4a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f4c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f4e:	f005 fb51 	bl	80075f4 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f52:	f005 fb3f 	bl	80075d4 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8001f56:	4b0e      	ldr	r3, [pc, #56]	; (8001f90 <HAL_InitTick+0x74>)
 8001f58:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 8001f5a:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f5e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f60:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001f62:	4b0c      	ldr	r3, [pc, #48]	; (8001f94 <HAL_InitTick+0x78>)
 8001f64:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f68:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 8001f6a:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f6c:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 8001f6e:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f70:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f72:	f006 f8fb 	bl	800816c <HAL_TIM_Base_Init>
 8001f76:	b920      	cbnz	r0, 8001f82 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 8001f78:	4620      	mov	r0, r4
 8001f7a:	f005 ffda 	bl	8007f32 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f7e:	b009      	add	sp, #36	; 0x24
 8001f80:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f82:	2001      	movs	r0, #1
 8001f84:	e7fb      	b.n	8001f7e <HAL_InitTick+0x62>
 8001f86:	bf00      	nop
 8001f88:	40023800 	.word	0x40023800
 8001f8c:	200044e0 	.word	0x200044e0
 8001f90:	40010400 	.word	0x40010400
 8001f94:	000f4240 	.word	0x000f4240

08001f98 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f98:	4770      	bx	lr

08001f9a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f9a:	e7fe      	b.n	8001f9a <HardFault_Handler>

08001f9c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f9c:	e7fe      	b.n	8001f9c <MemManage_Handler>

08001f9e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f9e:	e7fe      	b.n	8001f9e <BusFault_Handler>

08001fa0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001fa0:	e7fe      	b.n	8001fa0 <UsageFault_Handler>

08001fa2 <DebugMon_Handler>:
 8001fa2:	4770      	bx	lr

08001fa4 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8001fa4:	4801      	ldr	r0, [pc, #4]	; (8001fac <TIM8_UP_TIM13_IRQHandler+0x8>)
 8001fa6:	f005 bfd8 	b.w	8007f5a <HAL_TIM_IRQHandler>
 8001faa:	bf00      	nop
 8001fac:	200044e0 	.word	0x200044e0

08001fb0 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001fb0:	4801      	ldr	r0, [pc, #4]	; (8001fb8 <TIM7_IRQHandler+0x8>)
 8001fb2:	f005 bfd2 	b.w	8007f5a <HAL_TIM_IRQHandler>
 8001fb6:	bf00      	nop
 8001fb8:	20003a14 	.word	0x20003a14

08001fbc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001fbc:	4801      	ldr	r0, [pc, #4]	; (8001fc4 <LTDC_IRQHandler+0x8>)
 8001fbe:	f004 bfdd 	b.w	8006f7c <HAL_LTDC_IRQHandler>
 8001fc2:	bf00      	nop
 8001fc4:	200038e0 	.word	0x200038e0

08001fc8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001fc8:	4801      	ldr	r0, [pc, #4]	; (8001fd0 <DMA2D_IRQHandler+0x8>)
 8001fca:	f004 b8cc 	b.w	8006166 <HAL_DMA2D_IRQHandler>
 8001fce:	bf00      	nop
 8001fd0:	2000384c 	.word	0x2000384c

08001fd4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001fd4:	2001      	movs	r0, #1
 8001fd6:	4770      	bx	lr

08001fd8 <_kill>:

int _kill(int pid, int sig)
{
 8001fd8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fda:	f01e faa9 	bl	8020530 <__errno>
 8001fde:	2316      	movs	r3, #22
 8001fe0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001fe2:	f04f 30ff 	mov.w	r0, #4294967295
 8001fe6:	bd08      	pop	{r3, pc}

08001fe8 <_exit>:

void _exit (int status)
{
 8001fe8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fea:	f01e faa1 	bl	8020530 <__errno>
 8001fee:	2316      	movs	r3, #22
 8001ff0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001ff2:	e7fe      	b.n	8001ff2 <_exit+0xa>

08001ff4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001ff4:	b570      	push	{r4, r5, r6, lr}
 8001ff6:	460d      	mov	r5, r1
 8001ff8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ffa:	460e      	mov	r6, r1
 8001ffc:	1b73      	subs	r3, r6, r5
 8001ffe:	429c      	cmp	r4, r3
 8002000:	dc01      	bgt.n	8002006 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002002:	4620      	mov	r0, r4
 8002004:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002006:	f3af 8000 	nop.w
 800200a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800200e:	e7f5      	b.n	8001ffc <_read+0x8>

08002010 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002010:	b570      	push	{r4, r5, r6, lr}
 8002012:	460d      	mov	r5, r1
 8002014:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002016:	460e      	mov	r6, r1
 8002018:	1b73      	subs	r3, r6, r5
 800201a:	429c      	cmp	r4, r3
 800201c:	dc01      	bgt.n	8002022 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800201e:	4620      	mov	r0, r4
 8002020:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002022:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002026:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800202a:	e7f5      	b.n	8002018 <_write+0x8>

0800202c <_close>:

int _close(int file)
{
	return -1;
}
 800202c:	f04f 30ff 	mov.w	r0, #4294967295
 8002030:	4770      	bx	lr

08002032 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002032:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002036:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002038:	2000      	movs	r0, #0
 800203a:	4770      	bx	lr

0800203c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800203c:	2001      	movs	r0, #1
 800203e:	4770      	bx	lr

08002040 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002040:	2000      	movs	r0, #0
 8002042:	4770      	bx	lr

08002044 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002044:	4a0a      	ldr	r2, [pc, #40]	; (8002070 <_sbrk+0x2c>)
 8002046:	6811      	ldr	r1, [r2, #0]
{
 8002048:	b508      	push	{r3, lr}
 800204a:	4603      	mov	r3, r0
	if (heap_end == 0)
 800204c:	b909      	cbnz	r1, 8002052 <_sbrk+0xe>
		heap_end = &end;
 800204e:	4909      	ldr	r1, [pc, #36]	; (8002074 <_sbrk+0x30>)
 8002050:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002052:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002054:	4669      	mov	r1, sp
 8002056:	4403      	add	r3, r0
 8002058:	428b      	cmp	r3, r1
 800205a:	d906      	bls.n	800206a <_sbrk+0x26>
	{
		errno = ENOMEM;
 800205c:	f01e fa68 	bl	8020530 <__errno>
 8002060:	230c      	movs	r3, #12
 8002062:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002064:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002068:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800206a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 800206c:	e7fc      	b.n	8002068 <_sbrk+0x24>
 800206e:	bf00      	nop
 8002070:	20004520 	.word	0x20004520
 8002074:	20015690 	.word	0x20015690

08002078 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002078:	4770      	bx	lr

0800207a <_ZN23ApplicationFontProviderD0Ev>:
 800207a:	b510      	push	{r4, lr}
 800207c:	2104      	movs	r1, #4
 800207e:	4604      	mov	r4, r0
 8002080:	f01e f970 	bl	8020364 <_ZdlPvj>
 8002084:	4620      	mov	r0, r4
 8002086:	bd10      	pop	{r4, pc}

08002088 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002088:	2901      	cmp	r1, #1
{
 800208a:	b508      	push	{r3, lr}
    switch (typography)
 800208c:	d006      	beq.n	800209c <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800208e:	2902      	cmp	r1, #2
 8002090:	d008      	beq.n	80020a4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002092:	b959      	cbnz	r1, 80020ac <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002094:	f002 fe04 	bl	8004ca0 <_ZN17TypedTextDatabase8getFontsEv>
 8002098:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800209a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800209c:	f002 fe00 	bl	8004ca0 <_ZN17TypedTextDatabase8getFontsEv>
 80020a0:	6840      	ldr	r0, [r0, #4]
 80020a2:	e7fa      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80020a4:	f002 fdfc 	bl	8004ca0 <_ZN17TypedTextDatabase8getFontsEv>
 80020a8:	6880      	ldr	r0, [r0, #8]
 80020aa:	e7f6      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80020ac:	2000      	movs	r0, #0
 80020ae:	e7f4      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x12>

080020b0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80020b0:	4800      	ldr	r0, [pc, #0]	; (80020b4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80020b2:	4770      	bx	lr
 80020b4:	08021d8c 	.word	0x08021d8c

080020b8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80020b8:	2009      	movs	r0, #9
 80020ba:	4770      	bx	lr

080020bc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80020bc:	b513      	push	{r0, r1, r4, lr}
 80020be:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80020c0:	b151      	cbz	r1, 80020d8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020c2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80020c4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80020c6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020ca:	aa01      	add	r2, sp, #4
 80020cc:	689c      	ldr	r4, [r3, #8]
 80020ce:	f10d 0303 	add.w	r3, sp, #3
 80020d2:	47a0      	blx	r4
        return glyph;
    }
 80020d4:	b002      	add	sp, #8
 80020d6:	bd10      	pop	{r4, pc}
            return 0;
 80020d8:	4608      	mov	r0, r1
 80020da:	e7fb      	b.n	80020d4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080020dc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80020dc:	8940      	ldrh	r0, [r0, #10]
 80020de:	4770      	bx	lr

080020e0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80020e0:	8980      	ldrh	r0, [r0, #12]
 80020e2:	4770      	bx	lr

080020e4 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80020e4:	8880      	ldrh	r0, [r0, #4]
 80020e6:	4770      	bx	lr

080020e8 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80020e8:	7983      	ldrb	r3, [r0, #6]
 80020ea:	8880      	ldrh	r0, [r0, #4]
 80020ec:	4418      	add	r0, r3
    }
 80020ee:	b280      	uxth	r0, r0
 80020f0:	4770      	bx	lr

080020f2 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80020f2:	79c0      	ldrb	r0, [r0, #7]
    }
 80020f4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80020f8:	4770      	bx	lr

080020fa <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80020fa:	79c0      	ldrb	r0, [r0, #7]
    }
 80020fc:	09c0      	lsrs	r0, r0, #7
 80020fe:	4770      	bx	lr

08002100 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002100:	4770      	bx	lr

08002102 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002102:	b510      	push	{r4, lr}
    }
 8002104:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002106:	4604      	mov	r4, r0
    }
 8002108:	f01e f92c 	bl	8020364 <_ZdlPvj>
 800210c:	4620      	mov	r0, r4
 800210e:	bd10      	pop	{r4, pc}

08002110 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002110:	4770      	bx	lr

08002112 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002112:	4770      	bx	lr

08002114 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002114:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002118:	6808      	ldr	r0, [r1, #0]
 800211a:	6849      	ldr	r1, [r1, #4]
 800211c:	c303      	stmia	r3!, {r0, r1}
    }
 800211e:	4770      	bx	lr

08002120 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002120:	2000      	movs	r0, #0
 8002122:	4770      	bx	lr

08002124 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002124:	8081      	strh	r1, [r0, #4]
    }
 8002126:	4770      	bx	lr

08002128 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002128:	80c1      	strh	r1, [r0, #6]
    }
 800212a:	4770      	bx	lr

0800212c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800212c:	8101      	strh	r1, [r0, #8]
    }
 800212e:	4770      	bx	lr

08002130 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002130:	8141      	strh	r1, [r0, #10]
    }
 8002132:	4770      	bx	lr

08002134 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002134:	4770      	bx	lr

08002136 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002136:	4770      	bx	lr

08002138 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002138:	4770      	bx	lr

0800213a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800213a:	4770      	bx	lr

0800213c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800213c:	4770      	bx	lr

0800213e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800213e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002140:	88c4      	ldrh	r4, [r0, #6]
 8002142:	6803      	ldr	r3, [r0, #0]
 8002144:	1b12      	subs	r2, r2, r4
 8002146:	8884      	ldrh	r4, [r0, #4]
 8002148:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800214a:	1b09      	subs	r1, r1, r4
 800214c:	b212      	sxth	r2, r2
    }
 800214e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002152:	b209      	sxth	r1, r1
 8002154:	4718      	bx	r3

08002156 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002156:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800215a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800215c:	f04f 33ff 	mov.w	r3, #4294967295
 8002160:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002162:	6813      	ldr	r3, [r2, #0]
 8002164:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002166:	6010      	str	r0, [r2, #0]
    }
 8002168:	4770      	bx	lr

0800216a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800216a:	4770      	bx	lr

0800216c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800216c:	4770      	bx	lr

0800216e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800216e:	6041      	str	r1, [r0, #4]
    }
 8002170:	4770      	bx	lr

08002172 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002172:	4770      	bx	lr

08002174 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002174:	4b06      	ldr	r3, [pc, #24]	; (8002190 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002176:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800217a:	2300      	movs	r3, #0
 800217c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002180:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002184:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002188:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 800218c:	4770      	bx	lr
 800218e:	bf00      	nop
 8002190:	080022a5 	.word	0x080022a5

08002194 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002194:	2301      	movs	r3, #1
 8002196:	7203      	strb	r3, [r0, #8]
    }
 8002198:	4770      	bx	lr

0800219a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800219a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800219e:	b11a      	cbz	r2, 80021a8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80021a0:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80021a4:	b102      	cbz	r2, 80021a8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80021a6:	6018      	str	r0, [r3, #0]
        }
    }
 80021a8:	4770      	bx	lr

080021aa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 80021aa:	4770      	bx	lr

080021ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 80021ac:	4770      	bx	lr

080021ae <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80021ae:	4770      	bx	lr

080021b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80021b0:	4770      	bx	lr

080021b2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 80021b2:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80021b4:	6840      	ldr	r0, [r0, #4]
 80021b6:	6803      	ldr	r3, [r0, #0]
 80021b8:	3110      	adds	r1, #16
 80021ba:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80021bc:	4718      	bx	r3

080021be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80021be:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80021c0:	6840      	ldr	r0, [r0, #4]
 80021c2:	6803      	ldr	r3, [r0, #0]
 80021c4:	3110      	adds	r1, #16
 80021c6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80021c8:	4718      	bx	r3

080021ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80021ca:	4770      	bx	lr

080021cc <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 80021cc:	4770      	bx	lr

080021ce <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 80021ce:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80021d0:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 80021d2:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80021d6:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80021da:	8002      	strh	r2, [r0, #0]
 80021dc:	8042      	strh	r2, [r0, #2]
 80021de:	8084      	strh	r4, [r0, #4]
 80021e0:	80c1      	strh	r1, [r0, #6]
        }
 80021e2:	bd10      	pop	{r4, pc}

080021e4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80021e4:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80021e6:	68c2      	ldr	r2, [r0, #12]
 80021e8:	6841      	ldr	r1, [r0, #4]
 80021ea:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80021ec:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80021ee:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80021f2:	07d2      	lsls	r2, r2, #31
 80021f4:	bf48      	it	mi
 80021f6:	590a      	ldrmi	r2, [r1, r4]
 80021f8:	689b      	ldr	r3, [r3, #8]
    }
 80021fa:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80021fe:	bf48      	it	mi
 8002200:	58d3      	ldrmi	r3, [r2, r3]
 8002202:	4718      	bx	r3

08002204 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002204:	6843      	ldr	r3, [r0, #4]
 8002206:	b12b      	cbz	r3, 8002214 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002208:	6883      	ldr	r3, [r0, #8]
 800220a:	b92b      	cbnz	r3, 8002218 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800220c:	68c0      	ldr	r0, [r0, #12]
 800220e:	f000 0001 	and.w	r0, r0, #1
 8002212:	4770      	bx	lr
 8002214:	4618      	mov	r0, r3
 8002216:	4770      	bx	lr
 8002218:	2001      	movs	r0, #1
    }
 800221a:	4770      	bx	lr

0800221c <_ZN8touchgfx12NoTransitionD0Ev>:
 800221c:	b510      	push	{r4, lr}
 800221e:	210c      	movs	r1, #12
 8002220:	4604      	mov	r4, r0
 8002222:	f01e f89f 	bl	8020364 <_ZdlPvj>
 8002226:	4620      	mov	r0, r4
 8002228:	bd10      	pop	{r4, pc}

0800222a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800222a:	b510      	push	{r4, lr}
 800222c:	2110      	movs	r1, #16
 800222e:	4604      	mov	r4, r0
 8002230:	f01e f898 	bl	8020364 <_ZdlPvj>
 8002234:	4620      	mov	r0, r4
 8002236:	bd10      	pop	{r4, pc}

08002238 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002238:	b510      	push	{r4, lr}
 800223a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800223e:	4604      	mov	r4, r0
 8002240:	f01e f890 	bl	8020364 <_ZdlPvj>
 8002244:	4620      	mov	r0, r4
 8002246:	bd10      	pop	{r4, pc}

08002248 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002248:	b510      	push	{r4, lr}
 800224a:	2138      	movs	r1, #56	; 0x38
 800224c:	4604      	mov	r4, r0
 800224e:	f01e f889 	bl	8020364 <_ZdlPvj>
 8002252:	4620      	mov	r0, r4
 8002254:	bd10      	pop	{r4, pc}

08002256 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002256:	b510      	push	{r4, lr}
 8002258:	2128      	movs	r1, #40	; 0x28
 800225a:	4604      	mov	r4, r0
 800225c:	f01e f882 	bl	8020364 <_ZdlPvj>
 8002260:	4620      	mov	r0, r4
 8002262:	bd10      	pop	{r4, pc}

08002264 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002264:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002266:	f00e fd61 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
    }
 800226a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800226e:	f00f b901 	b.w	8011474 <_ZN8touchgfx11Application10invalidateEv>

08002272 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002272:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002276:	b112      	cbz	r2, 800227e <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002278:	6803      	ldr	r3, [r0, #0]
 800227a:	695b      	ldr	r3, [r3, #20]
 800227c:	4718      	bx	r3
    }
 800227e:	4770      	bx	lr

08002280 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002280:	b510      	push	{r4, lr}
 8002282:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002284:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002288:	b158      	cbz	r0, 80022a2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800228a:	6803      	ldr	r3, [r0, #0]
 800228c:	68db      	ldr	r3, [r3, #12]
 800228e:	4798      	blx	r3
 8002290:	b138      	cbz	r0, 80022a2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002292:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002296:	6803      	ldr	r3, [r0, #0]
 8002298:	689b      	ldr	r3, [r3, #8]
 800229a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800229c:	2300      	movs	r3, #0
 800229e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80022a2:	bd10      	pop	{r4, pc}

080022a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80022a4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80022a8:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80022ac:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022ae:	68a8      	ldr	r0, [r5, #8]
 80022b0:	6803      	ldr	r3, [r0, #0]
 80022b2:	6a1b      	ldr	r3, [r3, #32]
 80022b4:	4798      	blx	r3
 80022b6:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 80022ba:	d205      	bcs.n	80022c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80022bc:	4b45      	ldr	r3, [pc, #276]	; (80023d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80022be:	4a46      	ldr	r2, [pc, #280]	; (80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022c0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022c2:	4846      	ldr	r0, [pc, #280]	; (80023dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80022c4:	f01e f902 	bl	80204cc <__assert_func>
 80022c8:	6868      	ldr	r0, [r5, #4]
 80022ca:	6803      	ldr	r3, [r0, #0]
 80022cc:	6a1b      	ldr	r3, [r3, #32]
 80022ce:	4798      	blx	r3
 80022d0:	280f      	cmp	r0, #15
 80022d2:	d803      	bhi.n	80022dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80022d4:	4b42      	ldr	r3, [pc, #264]	; (80023e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80022d6:	4a40      	ldr	r2, [pc, #256]	; (80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022d8:	21a4      	movs	r1, #164	; 0xa4
 80022da:	e7f2      	b.n	80022c2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022dc:	68e8      	ldr	r0, [r5, #12]
 80022de:	6803      	ldr	r3, [r0, #0]
 80022e0:	6a1b      	ldr	r3, [r3, #32]
 80022e2:	4798      	blx	r3
 80022e4:	280b      	cmp	r0, #11
 80022e6:	d803      	bhi.n	80022f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80022e8:	4b3e      	ldr	r3, [pc, #248]	; (80023e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 80022ea:	4a3b      	ldr	r2, [pc, #236]	; (80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022ec:	21a5      	movs	r1, #165	; 0xa5
 80022ee:	e7e8      	b.n	80022c2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80022f0:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80023ec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80022f4:	f00e fd1a 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
 80022f8:	f00e fd1e 	bl	8010d38 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80022fc:	f8d9 0000 	ldr.w	r0, [r9]
 8002300:	b110      	cbz	r0, 8002308 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002302:	6803      	ldr	r3, [r0, #0]
 8002304:	68db      	ldr	r3, [r3, #12]
 8002306:	4798      	blx	r3
    if (*currentTrans)
 8002308:	f8d9 0000 	ldr.w	r0, [r9]
 800230c:	b110      	cbz	r0, 8002314 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800230e:	6803      	ldr	r3, [r0, #0]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	4798      	blx	r3
    if (*currentScreen)
 8002314:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80023f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002318:	f8d8 0000 	ldr.w	r0, [r8]
 800231c:	b110      	cbz	r0, 8002324 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800231e:	6803      	ldr	r3, [r0, #0]
 8002320:	695b      	ldr	r3, [r3, #20]
 8002322:	4798      	blx	r3
    if (*currentPresenter)
 8002324:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002328:	b110      	cbz	r0, 8002330 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800232a:	6803      	ldr	r3, [r0, #0]
 800232c:	685b      	ldr	r3, [r3, #4]
 800232e:	4798      	blx	r3
    if (*currentScreen)
 8002330:	f8d8 0000 	ldr.w	r0, [r8]
 8002334:	b110      	cbz	r0, 800233c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	4798      	blx	r3
    if (*currentPresenter)
 800233c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002340:	b110      	cbz	r0, 8002348 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002342:	6803      	ldr	r3, [r0, #0]
 8002344:	689b      	ldr	r3, [r3, #8]
 8002346:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002348:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800234a:	6803      	ldr	r3, [r0, #0]
 800234c:	2100      	movs	r1, #0
 800234e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002350:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002352:	f04f 0b00 	mov.w	fp, #0
 8002356:	4b24      	ldr	r3, [pc, #144]	; (80023e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002358:	6003      	str	r3, [r0, #0]
 800235a:	4604      	mov	r4, r0
 800235c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002360:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002364:	68a8      	ldr	r0, [r5, #8]
 8002366:	6803      	ldr	r3, [r0, #0]
 8002368:	4659      	mov	r1, fp
 800236a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800236c:	4798      	blx	r3
 800236e:	4606      	mov	r6, r0
 8002370:	f002 fdc0 	bl	8004ef4 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002374:	6868      	ldr	r0, [r5, #4]
 8002376:	6803      	ldr	r3, [r0, #0]
 8002378:	4659      	mov	r1, fp
 800237a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800237c:	4798      	blx	r3
 800237e:	4631      	mov	r1, r6
 8002380:	4605      	mov	r5, r0
 8002382:	f002 fd0b 	bl	8004d9c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002386:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800238a:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800238e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002392:	b1e5      	cbz	r5, 80023ce <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002394:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002396:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800239a:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayLastAndMaxVlt() {} ;
    virtual void DisplayRunningTime() {} ;

    void bind(Model* m)
    {
        model = m;
 800239c:	f8c5 a008 	str.w	sl, [r5, #8]
 80023a0:	4630      	mov	r0, r6
 80023a2:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80023a4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80023a6:	4798      	blx	r3
    newPresenter->activate();
 80023a8:	682b      	ldr	r3, [r5, #0]
 80023aa:	4628      	mov	r0, r5
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023b0:	4621      	mov	r1, r4
 80023b2:	4630      	mov	r0, r6
 80023b4:	f010 f968 	bl	8012688 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023b8:	6823      	ldr	r3, [r4, #0]
 80023ba:	4620      	mov	r0, r4
 80023bc:	691b      	ldr	r3, [r3, #16]
 80023be:	4798      	blx	r3
    newTransition->invalidate();
 80023c0:	6823      	ldr	r3, [r4, #0]
 80023c2:	695b      	ldr	r3, [r3, #20]
 80023c4:	4620      	mov	r0, r4
}
 80023c6:	b001      	add	sp, #4
 80023c8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023cc:	4718      	bx	r3
    model->bind(newPresenter);
 80023ce:	462b      	mov	r3, r5
 80023d0:	e7e1      	b.n	8002396 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 80023d2:	bf00      	nop
 80023d4:	08021e50 	.word	0x08021e50
 80023d8:	08021ede 	.word	0x08021ede
 80023dc:	08021fe2 	.word	0x08021fe2
 80023e0:	08022029 	.word	0x08022029
 80023e4:	080220cc 	.word	0x080220cc
 80023e8:	08022410 	.word	0x08022410
 80023ec:	2001542c 	.word	0x2001542c
 80023f0:	20015428 	.word	0x20015428

080023f4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80023f4:	4b04      	ldr	r3, [pc, #16]	; (8002408 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80023fc:	b10a      	cbz	r2, 8002402 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80023fe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002400:	b900      	cbnz	r0, 8002404 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002402:	6898      	ldr	r0, [r3, #8]
    }
 8002404:	4770      	bx	lr
 8002406:	bf00      	nop
 8002408:	200153e4 	.word	0x200153e4

0800240c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800240c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800240e:	4604      	mov	r4, r0
        animationCounter++;
 8002410:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 8002412:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002414:	3001      	adds	r0, #1
 8002416:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002418:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 800241a:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 800241c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800241e:	d850      	bhi.n	80024c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002420:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002424:	2100      	movs	r1, #0
 8002426:	f010 f935 	bl	8012694 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800242a:	f010 0201 	ands.w	r2, r0, #1
 800242e:	b283      	uxth	r3, r0
 8002430:	d04d      	beq.n	80024ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002432:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002436:	2800      	cmp	r0, #0
 8002438:	bfd8      	it	le
 800243a:	460a      	movle	r2, r1
 800243c:	4413      	add	r3, r2
 800243e:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002440:	4e24      	ldr	r6, [pc, #144]	; (80024d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002442:	4f25      	ldr	r7, [pc, #148]	; (80024d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002444:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002446:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800244a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800244c:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002450:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002454:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002456:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002458:	4463      	add	r3, ip
 800245a:	1a5b      	subs	r3, r3, r1
 800245c:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002460:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002462:	b212      	sxth	r2, r2
 8002464:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 8002466:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002468:	8322      	strh	r2, [r4, #24]
 800246a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800246e:	f8ad 501a 	strh.w	r5, [sp, #26]
 8002472:	a906      	add	r1, sp, #24
 8002474:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002476:	7aa3      	ldrb	r3, [r4, #10]
 8002478:	2b01      	cmp	r3, #1
 800247a:	d126      	bne.n	80024ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 800247c:	4b17      	ldr	r3, [pc, #92]	; (80024dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 800247e:	781b      	ldrb	r3, [r3, #0]
 8002480:	b31b      	cbz	r3, 80024ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002482:	69a1      	ldr	r1, [r4, #24]
 8002484:	6960      	ldr	r0, [r4, #20]
 8002486:	ab04      	add	r3, sp, #16
 8002488:	c303      	stmia	r3!, {r0, r1}
        return instance;
 800248a:	4b15      	ldr	r3, [pc, #84]	; (80024e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 800248c:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800248e:	6803      	ldr	r3, [r0, #0]
 8002490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002492:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002494:	8833      	ldrh	r3, [r6, #0]
 8002496:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 800249a:	883b      	ldrh	r3, [r7, #0]
 800249c:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80024a0:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 80024a2:	f8ad 5018 	strh.w	r5, [sp, #24]
 80024a6:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 80024aa:	f7ff ffa3 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 80024ae:	22ff      	movs	r2, #255	; 0xff
 80024b0:	6803      	ldr	r3, [r0, #0]
 80024b2:	9200      	str	r2, [sp, #0]
 80024b4:	9501      	str	r5, [sp, #4]
 80024b6:	68dc      	ldr	r4, [r3, #12]
 80024b8:	9903      	ldr	r1, [sp, #12]
 80024ba:	ab04      	add	r3, sp, #16
 80024bc:	aa06      	add	r2, sp, #24
 80024be:	47a0      	blx	r4
 80024c0:	e003      	b.n	80024ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80024c2:	2301      	movs	r3, #1
 80024c4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80024c6:	2300      	movs	r3, #0
 80024c8:	72a3      	strb	r3, [r4, #10]
    }
 80024ca:	b009      	add	sp, #36	; 0x24
 80024cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80024ce:	81e0      	strh	r0, [r4, #14]
 80024d0:	e7b6      	b.n	8002440 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80024d2:	bf00      	nop
 80024d4:	200153d8 	.word	0x200153d8
 80024d8:	200153da 	.word	0x200153da
 80024dc:	200153e2 	.word	0x200153e2
 80024e0:	200153e4 	.word	0x200153e4

080024e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80024e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024e6:	4604      	mov	r4, r0
 80024e8:	4617      	mov	r7, r2
 80024ea:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80024ec:	f00e fc3e 	bl	8010d6c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80024f0:	4b0e      	ldr	r3, [pc, #56]	; (800252c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80024f2:	601c      	str	r4, [r3, #0]
      model(m)
 80024f4:	4b0e      	ldr	r3, [pc, #56]	; (8002530 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80024f6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80024f8:	4b0e      	ldr	r3, [pc, #56]	; (8002534 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80024fa:	2500      	movs	r5, #0
 80024fc:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002500:	4b0d      	ldr	r3, [pc, #52]	; (8002538 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002502:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002506:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002508:	6803      	ldr	r3, [r0, #0]
 800250a:	4629      	mov	r1, r5
 800250c:	689b      	ldr	r3, [r3, #8]
 800250e:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002512:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002516:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002518:	4628      	mov	r0, r5
 800251a:	f002 fb75 	bl	8004c08 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800251e:	f7ff ff69 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 8002522:	f016 fd10 	bl	8018f46 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002526:	4620      	mov	r0, r4
 8002528:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800252a:	bf00      	nop
 800252c:	20015438 	.word	0x20015438
 8002530:	080223c4 	.word	0x080223c4
 8002534:	080223ac 	.word	0x080223ac
 8002538:	200153e4 	.word	0x200153e4

0800253c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800253c:	4b06      	ldr	r3, [pc, #24]	; (8002558 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800253e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002542:	2300      	movs	r3, #0
 8002544:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002548:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800254c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002550:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002554:	4770      	bx	lr
 8002556:	bf00      	nop
 8002558:	080022a5 	.word	0x080022a5

0800255c <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 800255c:	4b06      	ldr	r3, [pc, #24]	; (8002578 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 800255e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002562:	2300      	movs	r3, #0
 8002564:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002568:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800256c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002570:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002574:	4770      	bx	lr
 8002576:	bf00      	nop
 8002578:	08002741 	.word	0x08002741

0800257c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 800257c:	4b06      	ldr	r3, [pc, #24]	; (8002598 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 800257e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002582:	2300      	movs	r3, #0
 8002584:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// ScreenGraph

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002588:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800258c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002590:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002594:	4770      	bx	lr
 8002596:	bf00      	nop
 8002598:	08002601 	.word	0x08002601

0800259c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
    WipeTransition(const uint8_t transitionSteps = 20)
 800259c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800259e:	4604      	mov	r4, r0
 80025a0:	2300      	movs	r3, #0
          solid()
 80025a2:	4a13      	ldr	r2, [pc, #76]	; (80025f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 80025a4:	6002      	str	r2, [r0, #0]
 80025a6:	6043      	str	r3, [r0, #4]
 80025a8:	7203      	strb	r3, [r0, #8]
 80025aa:	7241      	strb	r1, [r0, #9]
 80025ac:	7283      	strb	r3, [r0, #10]
 80025ae:	e9c4 3305 	strd	r3, r3, [r4, #20]
 80025b2:	e9c4 3307 	strd	r3, r3, [r4, #28]
 80025b6:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
 80025ba:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80025be:	81e3      	strh	r3, [r4, #14]
 80025c0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80025c4:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 80025c6:	4b0b      	ldr	r3, [pc, #44]	; (80025f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
 80025c8:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 80025ca:	4b0b      	ldr	r3, [pc, #44]	; (80025f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 80025cc:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025d0:	4b0a      	ldr	r3, [pc, #40]	; (80025fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
            targetValue = HAL::DISPLAY_WIDTH;
 80025d2:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025d4:	f9b3 5000 	ldrsh.w	r5, [r3]
          solid()
 80025d8:	3010      	adds	r0, #16
        setWidth(width);
 80025da:	9001      	str	r0, [sp, #4]
 80025dc:	f7ff fda6 	bl	800212c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80025e0:	9801      	ldr	r0, [sp, #4]
 80025e2:	4629      	mov	r1, r5
 80025e4:	f7ff fda4 	bl	8002130 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 80025e8:	4620      	mov	r0, r4
 80025ea:	b003      	add	sp, #12
 80025ec:	bd30      	pop	{r4, r5, pc}
 80025ee:	bf00      	nop
 80025f0:	0802249c 	.word	0x0802249c
 80025f4:	08022434 	.word	0x08022434
 80025f8:	200153d8 	.word	0x200153d8
 80025fc:	200153da 	.word	0x200153da

08002600 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002600:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002604:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002608:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800260a:	68a0      	ldr	r0, [r4, #8]
 800260c:	6803      	ldr	r3, [r0, #0]
 800260e:	6a1b      	ldr	r3, [r3, #32]
 8002610:	4798      	blx	r3
 8002612:	f242 53c3 	movw	r3, #9667	; 0x25c3
 8002616:	4298      	cmp	r0, r3
 8002618:	d805      	bhi.n	8002626 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x26>
 800261a:	4b42      	ldr	r3, [pc, #264]	; (8002724 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x124>)
 800261c:	4a42      	ldr	r2, [pc, #264]	; (8002728 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800261e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002620:	4842      	ldr	r0, [pc, #264]	; (800272c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x12c>)
 8002622:	f01d ff53 	bl	80204cc <__assert_func>
 8002626:	6860      	ldr	r0, [r4, #4]
 8002628:	6803      	ldr	r3, [r0, #0]
 800262a:	6a1b      	ldr	r3, [r3, #32]
 800262c:	4798      	blx	r3
 800262e:	280f      	cmp	r0, #15
 8002630:	d803      	bhi.n	800263a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3a>
 8002632:	4b3f      	ldr	r3, [pc, #252]	; (8002730 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x130>)
 8002634:	4a3c      	ldr	r2, [pc, #240]	; (8002728 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 8002636:	21a4      	movs	r1, #164	; 0xa4
 8002638:	e7f2      	b.n	8002620 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800263a:	68e0      	ldr	r0, [r4, #12]
 800263c:	6803      	ldr	r3, [r0, #0]
 800263e:	6a1b      	ldr	r3, [r3, #32]
 8002640:	4798      	blx	r3
 8002642:	2837      	cmp	r0, #55	; 0x37
 8002644:	d803      	bhi.n	800264e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x4e>
 8002646:	4b3b      	ldr	r3, [pc, #236]	; (8002734 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x134>)
 8002648:	4a37      	ldr	r2, [pc, #220]	; (8002728 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800264a:	21a5      	movs	r1, #165	; 0xa5
 800264c:	e7e8      	b.n	8002620 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 800264e:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002738 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002652:	f00e fb6b 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
 8002656:	f00e fb6f 	bl	8010d38 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800265a:	f8d9 0000 	ldr.w	r0, [r9]
 800265e:	b110      	cbz	r0, 8002666 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002660:	6803      	ldr	r3, [r0, #0]
 8002662:	68db      	ldr	r3, [r3, #12]
 8002664:	4798      	blx	r3
    if (*currentTrans)
 8002666:	f8d9 0000 	ldr.w	r0, [r9]
 800266a:	b110      	cbz	r0, 8002672 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800266c:	6803      	ldr	r3, [r0, #0]
 800266e:	681b      	ldr	r3, [r3, #0]
 8002670:	4798      	blx	r3
    if (*currentScreen)
 8002672:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800273c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 8002676:	f8d8 0000 	ldr.w	r0, [r8]
 800267a:	b110      	cbz	r0, 8002682 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800267c:	6803      	ldr	r3, [r0, #0]
 800267e:	695b      	ldr	r3, [r3, #20]
 8002680:	4798      	blx	r3
    if (*currentPresenter)
 8002682:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002686:	b110      	cbz	r0, 800268e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002688:	6803      	ldr	r3, [r0, #0]
 800268a:	685b      	ldr	r3, [r3, #4]
 800268c:	4798      	blx	r3
    if (*currentScreen)
 800268e:	f8d8 0000 	ldr.w	r0, [r8]
 8002692:	b110      	cbz	r0, 800269a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002694:	6803      	ldr	r3, [r0, #0]
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	4798      	blx	r3
    if (*currentPresenter)
 800269a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800269e:	b110      	cbz	r0, 80026a6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80026a0:	6803      	ldr	r3, [r0, #0]
 80026a2:	689b      	ldr	r3, [r3, #8]
 80026a4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80026a6:	68e0      	ldr	r0, [r4, #12]
 80026a8:	6803      	ldr	r3, [r0, #0]
 80026aa:	2100      	movs	r1, #0
 80026ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026ae:	4798      	blx	r3
 80026b0:	2114      	movs	r1, #20
 80026b2:	4605      	mov	r5, r0
 80026b4:	f7ff ff72 	bl	800259c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026b8:	68a0      	ldr	r0, [r4, #8]
 80026ba:	6803      	ldr	r3, [r0, #0]
 80026bc:	2100      	movs	r1, #0
 80026be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026c0:	4798      	blx	r3
 80026c2:	4606      	mov	r6, r0
 80026c4:	f002 ff4c 	bl	8005560 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80026c8:	6860      	ldr	r0, [r4, #4]
 80026ca:	6803      	ldr	r3, [r0, #0]
 80026cc:	2100      	movs	r1, #0
 80026ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026d0:	4798      	blx	r3
 80026d2:	4631      	mov	r1, r6
 80026d4:	4604      	mov	r4, r0
 80026d6:	f002 fc57 	bl	8004f88 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 80026da:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80026de:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80026e2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80026e6:	b1dc      	cbz	r4, 8002720 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x120>
 80026e8:	1d23      	adds	r3, r4, #4
 80026ea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80026ee:	6833      	ldr	r3, [r6, #0]
 80026f0:	f8c4 a008 	str.w	sl, [r4, #8]
 80026f4:	4630      	mov	r0, r6
 80026f6:	68db      	ldr	r3, [r3, #12]
 80026f8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80026fa:	4798      	blx	r3
    newPresenter->activate();
 80026fc:	6823      	ldr	r3, [r4, #0]
 80026fe:	4620      	mov	r0, r4
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002704:	4629      	mov	r1, r5
 8002706:	4630      	mov	r0, r6
 8002708:	f00f ffbe 	bl	8012688 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800270c:	682b      	ldr	r3, [r5, #0]
 800270e:	4628      	mov	r0, r5
 8002710:	691b      	ldr	r3, [r3, #16]
 8002712:	4798      	blx	r3
    newTransition->invalidate();
 8002714:	682b      	ldr	r3, [r5, #0]
 8002716:	4628      	mov	r0, r5
 8002718:	695b      	ldr	r3, [r3, #20]
}
 800271a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800271e:	4718      	bx	r3
    model->bind(newPresenter);
 8002720:	4623      	mov	r3, r4
 8002722:	e7e2      	b.n	80026ea <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xea>
 8002724:	08021e50 	.word	0x08021e50
 8002728:	0802216f 	.word	0x0802216f
 800272c:	08021fe2 	.word	0x08021fe2
 8002730:	08022029 	.word	0x08022029
 8002734:	080220cc 	.word	0x080220cc
 8002738:	2001542c 	.word	0x2001542c
 800273c:	20015428 	.word	0x20015428

08002740 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 8002740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002744:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002748:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800274a:	68a0      	ldr	r0, [r4, #8]
 800274c:	6803      	ldr	r3, [r0, #0]
 800274e:	6a1b      	ldr	r3, [r3, #32]
 8002750:	4798      	blx	r3
 8002752:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 8002756:	d205      	bcs.n	8002764 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 8002758:	4b42      	ldr	r3, [pc, #264]	; (8002864 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 800275a:	4a43      	ldr	r2, [pc, #268]	; (8002868 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 800275c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800275e:	4843      	ldr	r0, [pc, #268]	; (800286c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 8002760:	f01d feb4 	bl	80204cc <__assert_func>
 8002764:	6860      	ldr	r0, [r4, #4]
 8002766:	6803      	ldr	r3, [r0, #0]
 8002768:	6a1b      	ldr	r3, [r3, #32]
 800276a:	4798      	blx	r3
 800276c:	280f      	cmp	r0, #15
 800276e:	d803      	bhi.n	8002778 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 8002770:	4b3f      	ldr	r3, [pc, #252]	; (8002870 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 8002772:	4a3d      	ldr	r2, [pc, #244]	; (8002868 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002774:	21a4      	movs	r1, #164	; 0xa4
 8002776:	e7f2      	b.n	800275e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002778:	68e0      	ldr	r0, [r4, #12]
 800277a:	6803      	ldr	r3, [r0, #0]
 800277c:	6a1b      	ldr	r3, [r3, #32]
 800277e:	4798      	blx	r3
 8002780:	2837      	cmp	r0, #55	; 0x37
 8002782:	d803      	bhi.n	800278c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 8002784:	4b3b      	ldr	r3, [pc, #236]	; (8002874 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 8002786:	4a38      	ldr	r2, [pc, #224]	; (8002868 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002788:	21a5      	movs	r1, #165	; 0xa5
 800278a:	e7e8      	b.n	800275e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 800278c:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002878 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002790:	f00e facc 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
 8002794:	f00e fad0 	bl	8010d38 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002798:	f8d9 0000 	ldr.w	r0, [r9]
 800279c:	b110      	cbz	r0, 80027a4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 800279e:	6803      	ldr	r3, [r0, #0]
 80027a0:	68db      	ldr	r3, [r3, #12]
 80027a2:	4798      	blx	r3
    if (*currentTrans)
 80027a4:	f8d9 0000 	ldr.w	r0, [r9]
 80027a8:	b110      	cbz	r0, 80027b0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 80027aa:	6803      	ldr	r3, [r0, #0]
 80027ac:	681b      	ldr	r3, [r3, #0]
 80027ae:	4798      	blx	r3
    if (*currentScreen)
 80027b0:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800287c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 80027b4:	f8d8 0000 	ldr.w	r0, [r8]
 80027b8:	b110      	cbz	r0, 80027c0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80027ba:	6803      	ldr	r3, [r0, #0]
 80027bc:	695b      	ldr	r3, [r3, #20]
 80027be:	4798      	blx	r3
    if (*currentPresenter)
 80027c0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027c4:	b110      	cbz	r0, 80027cc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80027c6:	6803      	ldr	r3, [r0, #0]
 80027c8:	685b      	ldr	r3, [r3, #4]
 80027ca:	4798      	blx	r3
    if (*currentScreen)
 80027cc:	f8d8 0000 	ldr.w	r0, [r8]
 80027d0:	b110      	cbz	r0, 80027d8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 80027d2:	6803      	ldr	r3, [r0, #0]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	4798      	blx	r3
    if (*currentPresenter)
 80027d8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027dc:	b110      	cbz	r0, 80027e4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80027de:	6803      	ldr	r3, [r0, #0]
 80027e0:	689b      	ldr	r3, [r3, #8]
 80027e2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80027e4:	68e0      	ldr	r0, [r4, #12]
 80027e6:	6803      	ldr	r3, [r0, #0]
 80027e8:	2100      	movs	r1, #0
 80027ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ec:	4798      	blx	r3
 80027ee:	2114      	movs	r1, #20
 80027f0:	4605      	mov	r5, r0
 80027f2:	f7ff fed3 	bl	800259c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80027f6:	68a0      	ldr	r0, [r4, #8]
 80027f8:	6803      	ldr	r3, [r0, #0]
 80027fa:	2100      	movs	r1, #0
 80027fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027fe:	4798      	blx	r3
 8002800:	4606      	mov	r6, r0
 8002802:	f002 fb77 	bl	8004ef4 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002806:	6860      	ldr	r0, [r4, #4]
 8002808:	6803      	ldr	r3, [r0, #0]
 800280a:	2100      	movs	r1, #0
 800280c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800280e:	4798      	blx	r3
 8002810:	4631      	mov	r1, r6
 8002812:	4604      	mov	r4, r0
 8002814:	f002 fac2 	bl	8004d9c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002818:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800281c:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002820:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002824:	b1dc      	cbz	r4, 800285e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 8002826:	1d23      	adds	r3, r4, #4
 8002828:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800282c:	6833      	ldr	r3, [r6, #0]
 800282e:	f8c4 a008 	str.w	sl, [r4, #8]
 8002832:	4630      	mov	r0, r6
 8002834:	68db      	ldr	r3, [r3, #12]
 8002836:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002838:	4798      	blx	r3
    newPresenter->activate();
 800283a:	6823      	ldr	r3, [r4, #0]
 800283c:	4620      	mov	r0, r4
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002842:	4629      	mov	r1, r5
 8002844:	4630      	mov	r0, r6
 8002846:	f00f ff1f 	bl	8012688 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800284a:	682b      	ldr	r3, [r5, #0]
 800284c:	4628      	mov	r0, r5
 800284e:	691b      	ldr	r3, [r3, #16]
 8002850:	4798      	blx	r3
    newTransition->invalidate();
 8002852:	682b      	ldr	r3, [r5, #0]
 8002854:	4628      	mov	r0, r5
 8002856:	695b      	ldr	r3, [r3, #20]
}
 8002858:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800285c:	4718      	bx	r3
    model->bind(newPresenter);
 800285e:	4623      	mov	r3, r4
 8002860:	e7e2      	b.n	8002828 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 8002862:	bf00      	nop
 8002864:	08021e50 	.word	0x08021e50
 8002868:	0802228d 	.word	0x0802228d
 800286c:	08021fe2 	.word	0x08021fe2
 8002870:	08022029 	.word	0x08022029
 8002874:	080220cc 	.word	0x080220cc
 8002878:	2001542c 	.word	0x2001542c
 800287c:	20015428 	.word	0x20015428

08002880 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002880:	6a00      	ldr	r0, [r0, #32]
 8002882:	4770      	bx	lr

08002884 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002884:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002886:	4770      	bx	lr

08002888 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002888:	4770      	bx	lr

0800288a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800288a:	888b      	ldrh	r3, [r1, #4]
 800288c:	6980      	ldr	r0, [r0, #24]
 800288e:	680a      	ldr	r2, [r1, #0]
 8002890:	0adb      	lsrs	r3, r3, #11
 8002892:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002896:	4410      	add	r0, r2
 8002898:	4770      	bx	lr

0800289a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800289a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800289c:	b1c2      	cbz	r2, 80028d0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800289e:	7b13      	ldrb	r3, [r2, #12]
 80028a0:	b1b3      	cbz	r3, 80028d0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80028a2:	7b54      	ldrb	r4, [r2, #13]
 80028a4:	7ad2      	ldrb	r2, [r2, #11]
 80028a6:	0224      	lsls	r4, r4, #8
 80028a8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028ac:	4314      	orrs	r4, r2
 80028ae:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028b0:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028b2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80028b6:	8813      	ldrh	r3, [r2, #0]
 80028b8:	428b      	cmp	r3, r1
 80028ba:	d102      	bne.n	80028c2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80028bc:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80028c0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80028c2:	d805      	bhi.n	80028d0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028c4:	3801      	subs	r0, #1
 80028c6:	b280      	uxth	r0, r0
 80028c8:	3204      	adds	r2, #4
 80028ca:	2800      	cmp	r0, #0
 80028cc:	d1f3      	bne.n	80028b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80028ce:	e7f7      	b.n	80028c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80028d0:	2000      	movs	r0, #0
 80028d2:	e7f5      	b.n	80028c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080028d4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80028d4:	b510      	push	{r4, lr}
 80028d6:	2128      	movs	r1, #40	; 0x28
 80028d8:	4604      	mov	r4, r0
 80028da:	f01d fd43 	bl	8020364 <_ZdlPvj>
 80028de:	4620      	mov	r0, r4
 80028e0:	bd10      	pop	{r4, pc}
	...

080028e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80028e4:	b530      	push	{r4, r5, lr}
 80028e6:	b089      	sub	sp, #36	; 0x24
 80028e8:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80028ea:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80028ee:	9506      	str	r5, [sp, #24]
 80028f0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80028f4:	9505      	str	r5, [sp, #20]
 80028f6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80028fa:	9504      	str	r5, [sp, #16]
 80028fc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002900:	9503      	str	r5, [sp, #12]
 8002902:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002906:	9502      	str	r5, [sp, #8]
 8002908:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 800290c:	9501      	str	r5, [sp, #4]
 800290e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002912:	9500      	str	r5, [sp, #0]
 8002914:	f00f fa4e 	bl	8011db4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002918:	4b06      	ldr	r3, [pc, #24]	; (8002934 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800291a:	6023      	str	r3, [r4, #0]
 800291c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800291e:	61a3      	str	r3, [r4, #24]
 8002920:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002922:	61e3      	str	r3, [r4, #28]
 8002924:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002926:	6223      	str	r3, [r4, #32]
 8002928:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800292a:	6263      	str	r3, [r4, #36]	; 0x24
}
 800292c:	4620      	mov	r0, r4
 800292e:	b009      	add	sp, #36	; 0x24
 8002930:	bd30      	pop	{r4, r5, pc}
 8002932:	bf00      	nop
 8002934:	080224c0 	.word	0x080224c0

08002938 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002938:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800293a:	4770      	bx	lr

0800293c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800293c:	4770      	bx	lr

0800293e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800293e:	4770      	bx	lr

08002940 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002940:	4770      	bx	lr

08002942 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002942:	4770      	bx	lr

08002944 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002944:	4770      	bx	lr

08002946 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002946:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002948:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800294a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800294c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800294e:	466d      	mov	r5, sp
 8002950:	4601      	mov	r1, r0
 8002952:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002956:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002958:	4628      	mov	r0, r5
 800295a:	4798      	blx	r3
 800295c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002960:	343c      	adds	r4, #60	; 0x3c
 8002962:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002966:	b005      	add	sp, #20
 8002968:	bd30      	pop	{r4, r5, pc}

0800296a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800296a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800296c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800296e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002970:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002972:	466d      	mov	r5, sp
 8002974:	4601      	mov	r1, r0
 8002976:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800297a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800297c:	4628      	mov	r0, r5
 800297e:	4798      	blx	r3
 8002980:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002984:	343c      	adds	r4, #60	; 0x3c
 8002986:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800298a:	b005      	add	sp, #20
 800298c:	bd30      	pop	{r4, r5, pc}

0800298e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800298e:	2200      	movs	r2, #0
 8002990:	8002      	strh	r2, [r0, #0]
 8002992:	8042      	strh	r2, [r0, #2]
 8002994:	8082      	strh	r2, [r0, #4]
 8002996:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002998:	4770      	bx	lr

0800299a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800299a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800299e:	4770      	bx	lr

080029a0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029a0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80029a2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029a4:	4604      	mov	r4, r0
        setX(x);
 80029a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029a8:	4615      	mov	r5, r2
        setX(x);
 80029aa:	4798      	blx	r3
        setBaselineY(baselineY);
 80029ac:	6823      	ldr	r3, [r4, #0]
 80029ae:	4629      	mov	r1, r5
 80029b0:	4620      	mov	r0, r4
 80029b2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80029b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80029b8:	4718      	bx	r3

080029ba <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80029ba:	2000      	movs	r0, #0
 80029bc:	4770      	bx	lr

080029be <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80029be:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029c0:	4770      	bx	lr

080029c2 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80029c2:	4770      	bx	lr

080029c4 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 80029c4:	4770      	bx	lr

080029c6 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 80029c6:	4770      	bx	lr

080029c8 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 80029c8:	4770      	bx	lr

080029ca <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029ca:	4770      	bx	lr

080029cc <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029cc:	4770      	bx	lr

080029ce <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80029ce:	4770      	bx	lr

080029d0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80029d0:	4770      	bx	lr

080029d2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80029d2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80029d6:	b14b      	cbz	r3, 80029ec <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80029d8:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80029dc:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029de:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029e0:	b13b      	cbz	r3, 80029f2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80029e2:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80029e6:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80029e8:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 80029ea:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80029ec:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80029f0:	e7f4      	b.n	80029dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029f2:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80029f6:	e7f6      	b.n	80029e6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080029f8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029f8:	4770      	bx	lr

080029fa <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80029fa:	4770      	bx	lr

080029fc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 80029fc:	4770      	bx	lr

080029fe <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80029fe:	4770      	bx	lr

08002a00 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a00:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a02:	68c2      	ldr	r2, [r0, #12]
 8002a04:	6844      	ldr	r4, [r0, #4]
 8002a06:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a08:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a0a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a0e:	07d2      	lsls	r2, r2, #31
 8002a10:	bf48      	it	mi
 8002a12:	5962      	ldrmi	r2, [r4, r5]
 8002a14:	689b      	ldr	r3, [r3, #8]
    }
 8002a16:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a18:	bf48      	it	mi
 8002a1a:	58d3      	ldrmi	r3, [r2, r3]
 8002a1c:	4718      	bx	r3

08002a1e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a1e:	6843      	ldr	r3, [r0, #4]
 8002a20:	b12b      	cbz	r3, 8002a2e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002a22:	6883      	ldr	r3, [r0, #8]
 8002a24:	b92b      	cbnz	r3, 8002a32 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002a26:	68c0      	ldr	r0, [r0, #12]
 8002a28:	f000 0001 	and.w	r0, r0, #1
 8002a2c:	4770      	bx	lr
 8002a2e:	4618      	mov	r0, r3
 8002a30:	4770      	bx	lr
 8002a32:	2001      	movs	r0, #1
    }
 8002a34:	4770      	bx	lr

08002a36 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a36:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a38:	68c2      	ldr	r2, [r0, #12]
 8002a3a:	6844      	ldr	r4, [r0, #4]
 8002a3c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a3e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a40:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a44:	07d2      	lsls	r2, r2, #31
 8002a46:	bf48      	it	mi
 8002a48:	5962      	ldrmi	r2, [r4, r5]
 8002a4a:	689b      	ldr	r3, [r3, #8]
    }
 8002a4c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a4e:	bf48      	it	mi
 8002a50:	58d3      	ldrmi	r3, [r2, r3]
 8002a52:	4718      	bx	r3

08002a54 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a54:	6843      	ldr	r3, [r0, #4]
 8002a56:	b12b      	cbz	r3, 8002a64 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a58:	6883      	ldr	r3, [r0, #8]
 8002a5a:	b92b      	cbnz	r3, 8002a68 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a5c:	68c0      	ldr	r0, [r0, #12]
 8002a5e:	f000 0001 	and.w	r0, r0, #1
 8002a62:	4770      	bx	lr
 8002a64:	4618      	mov	r0, r3
 8002a66:	4770      	bx	lr
 8002a68:	2001      	movs	r0, #1
    }
 8002a6a:	4770      	bx	lr

08002a6c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002a6c:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a70:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a74:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a78:	4770      	bx	lr

08002a7a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002a7a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002a7e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a82:	4770      	bx	lr

08002a84 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a84:	b510      	push	{r4, lr}
 8002a86:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a88:	307c      	adds	r0, #124	; 0x7c
 8002a8a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002a8e:	b13b      	cbz	r3, 8002aa0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002a90:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a94:	f00b fc9c 	bl	800e3d0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a98:	4620      	mov	r0, r4
 8002a9a:	f7ff ff9a 	bl	80029d2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002a9e:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002aa0:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002aa4:	e7f6      	b.n	8002a94 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002aa6 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002aa6:	b510      	push	{r4, lr}
 8002aa8:	214c      	movs	r1, #76	; 0x4c
 8002aaa:	4604      	mov	r4, r0
 8002aac:	f01d fc5a 	bl	8020364 <_ZdlPvj>
 8002ab0:	4620      	mov	r0, r4
 8002ab2:	bd10      	pop	{r4, pc}

08002ab4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002ab4:	b510      	push	{r4, lr}
 8002ab6:	2178      	movs	r1, #120	; 0x78
 8002ab8:	4604      	mov	r4, r0
 8002aba:	f01d fc53 	bl	8020364 <_ZdlPvj>
 8002abe:	4620      	mov	r0, r4
 8002ac0:	bd10      	pop	{r4, pc}

08002ac2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002ac2:	b510      	push	{r4, lr}
 8002ac4:	21a8      	movs	r1, #168	; 0xa8
 8002ac6:	4604      	mov	r4, r0
 8002ac8:	f01d fc4c 	bl	8020364 <_ZdlPvj>
 8002acc:	4620      	mov	r0, r4
 8002ace:	bd10      	pop	{r4, pc}

08002ad0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ad0:	b510      	push	{r4, lr}
 8002ad2:	2110      	movs	r1, #16
 8002ad4:	4604      	mov	r4, r0
 8002ad6:	f01d fc45 	bl	8020364 <_ZdlPvj>
 8002ada:	4620      	mov	r0, r4
 8002adc:	bd10      	pop	{r4, pc}

08002ade <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002ade:	b510      	push	{r4, lr}
 8002ae0:	2110      	movs	r1, #16
 8002ae2:	4604      	mov	r4, r0
 8002ae4:	f01d fc3e 	bl	8020364 <_ZdlPvj>
 8002ae8:	4620      	mov	r0, r4
 8002aea:	bd10      	pop	{r4, pc}

08002aec <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002aec:	b510      	push	{r4, lr}
 8002aee:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002af2:	4604      	mov	r4, r0
 8002af4:	f01d fc36 	bl	8020364 <_ZdlPvj>
 8002af8:	4620      	mov	r0, r4
 8002afa:	bd10      	pop	{r4, pc}

08002afc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002afc:	b510      	push	{r4, lr}
 8002afe:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002b00:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002b02:	b150      	cbz	r0, 8002b1a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002b04:	6803      	ldr	r3, [r0, #0]
 8002b06:	68db      	ldr	r3, [r3, #12]
 8002b08:	4798      	blx	r3
 8002b0a:	b130      	cbz	r0, 8002b1a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002b0c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002b0e:	6803      	ldr	r3, [r0, #0]
 8002b10:	4621      	mov	r1, r4
 8002b12:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002b18:	4718      	bx	r3
    }
 8002b1a:	bd10      	pop	{r4, pc}

08002b1c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002b1c:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002b20:	4291      	cmp	r1, r2
 8002b22:	d102      	bne.n	8002b2a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002b24:	6803      	ldr	r3, [r0, #0]
 8002b26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002b28:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002b2a:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002b2e:	4291      	cmp	r1, r2
 8002b30:	d102      	bne.n	8002b38 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002b32:	6803      	ldr	r3, [r0, #0]
 8002b34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b36:	e7f7      	b.n	8002b28 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002b38:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002b3c:	4291      	cmp	r1, r2
 8002b3e:	d102      	bne.n	8002b46 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002b40:	6803      	ldr	r3, [r0, #0]
 8002b42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b44:	e7f0      	b.n	8002b28 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002b46:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002b4a:	4291      	cmp	r1, r2
 8002b4c:	d102      	bne.n	8002b54 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002b4e:	6803      	ldr	r3, [r0, #0]
 8002b50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002b52:	e7e9      	b.n	8002b28 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b54:	4770      	bx	lr

08002b56 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002b56:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002b58:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002b5a:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002b5e:	4604      	mov	r4, r0
 8002b60:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b62:	b99b      	cbnz	r3, 8002b8c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002b64:	b98e      	cbnz	r6, 8002b8a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002b66:	fab3 f383 	clz	r3, r3
 8002b6a:	095b      	lsrs	r3, r3, #5
 8002b6c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002b70:	6823      	ldr	r3, [r4, #0]
 8002b72:	4620      	mov	r0, r4
 8002b74:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b78:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002b7a:	6823      	ldr	r3, [r4, #0]
 8002b7c:	4620      	mov	r0, r4
 8002b7e:	695b      	ldr	r3, [r3, #20]
 8002b80:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002b82:	b116      	cbz	r6, 8002b8a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b84:	792b      	ldrb	r3, [r5, #4]
 8002b86:	2b01      	cmp	r3, #1
 8002b88:	d003      	beq.n	8002b92 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002b8a:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b8c:	2e00      	cmp	r6, #0
 8002b8e:	d0fc      	beq.n	8002b8a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b90:	e7e9      	b.n	8002b66 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002b92:	6823      	ldr	r3, [r4, #0]
 8002b94:	4620      	mov	r0, r4
 8002b96:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002b9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002b9e:	4718      	bx	r3

08002ba0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002ba0:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002ba2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002ba4:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002ba6:	4b12      	ldr	r3, [pc, #72]	; (8002bf0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002ba8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002baa:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bac:	b28d      	uxth	r5, r1
 8002bae:	b92b      	cbnz	r3, 8002bbc <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002bb0:	4b10      	ldr	r3, [pc, #64]	; (8002bf4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002bb2:	4a11      	ldr	r2, [pc, #68]	; (8002bf8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002bb4:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002bb6:	4811      	ldr	r0, [pc, #68]	; (8002bfc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002bb8:	f01d fc88 	bl	80204cc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002bbc:	4910      	ldr	r1, [pc, #64]	; (8002c00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002bbe:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002bc0:	8809      	ldrh	r1, [r1, #0]
 8002bc2:	4291      	cmp	r1, r2
 8002bc4:	d803      	bhi.n	8002bce <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002bc6:	4b0f      	ldr	r3, [pc, #60]	; (8002c04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002bc8:	4a0b      	ldr	r2, [pc, #44]	; (8002bf8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002bca:	216d      	movs	r1, #109	; 0x6d
 8002bcc:	e7f3      	b.n	8002bb6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002bce:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002bd2:	4b0d      	ldr	r3, [pc, #52]	; (8002c08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002bda:	6803      	ldr	r3, [r0, #0]
 8002bdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bde:	4798      	blx	r3
 8002be0:	1a28      	subs	r0, r5, r0
 8002be2:	b201      	sxth	r1, r0
 8002be4:	4633      	mov	r3, r6
 8002be6:	4620      	mov	r0, r4
    }
 8002be8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bec:	4718      	bx	r3
 8002bee:	bf00      	nop
 8002bf0:	2001543c 	.word	0x2001543c
 8002bf4:	08022510 	.word	0x08022510
 8002bf8:	08022552 	.word	0x08022552
 8002bfc:	0802258d 	.word	0x0802258d
 8002c00:	20015440 	.word	0x20015440
 8002c04:	080225d4 	.word	0x080225d4
 8002c08:	20015444 	.word	0x20015444

08002c0c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002c0c:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002c10:	428b      	cmp	r3, r1
{
 8002c12:	b510      	push	{r4, lr}
 8002c14:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002c16:	d109      	bne.n	8002c2c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002c18:	f00e f888 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002c1c:	f7ff fcae 	bl	800257c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002c20:	6823      	ldr	r3, [r4, #0]
 8002c22:	4620      	mov	r0, r4
 8002c24:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002c26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002c2a:	4718      	bx	r3
}
 8002c2c:	bd10      	pop	{r4, pc}

08002c2e <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002c2e:	2200      	movs	r2, #0
 8002c30:	f04f 31ff 	mov.w	r1, #4294967295
 8002c34:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002c38:	6082      	str	r2, [r0, #8]
    }
 8002c3a:	4770      	bx	lr

08002c3c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002c3c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002c3e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002c40:	4604      	mov	r4, r0
        setX(x);
 8002c42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002c44:	4615      	mov	r5, r2
        setX(x);
 8002c46:	4798      	blx	r3
        setY(y);
 8002c48:	6823      	ldr	r3, [r4, #0]
 8002c4a:	4629      	mov	r1, r5
 8002c4c:	4620      	mov	r0, r4
 8002c4e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002c50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002c54:	4718      	bx	r3

08002c56 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002c56:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002c5c:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002c60:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c62:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002c66:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c6a:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c6c:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c6e:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c70:	f011 fa8c 	bl	801418c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002c74:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002c78:	4607      	mov	r7, r0
 8002c7a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002c7e:	4640      	mov	r0, r8
 8002c80:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002c84:	f011 fab6 	bl	80141f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002c88:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002c8c:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002c90:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c94:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002c98:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002c9c:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002ca0:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002ca4:	b239      	sxth	r1, r7
 8002ca6:	b212      	sxth	r2, r2
 8002ca8:	f7ff ffc8 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002cac:	6823      	ldr	r3, [r4, #0]
 8002cae:	4620      	mov	r0, r4
 8002cb0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002cb4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002cb8:	4718      	bx	r3

08002cba <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002cba:	b570      	push	{r4, r5, r6, lr}
 8002cbc:	4604      	mov	r4, r0
 8002cbe:	461d      	mov	r5, r3
 8002cc0:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002cc4:	f7ff ffba 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002cc8:	6823      	ldr	r3, [r4, #0]
 8002cca:	4629      	mov	r1, r5
 8002ccc:	4620      	mov	r0, r4
 8002cce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cd0:	4798      	blx	r3
        setHeight(height);
 8002cd2:	6823      	ldr	r3, [r4, #0]
 8002cd4:	4631      	mov	r1, r6
 8002cd6:	4620      	mov	r0, r4
 8002cd8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002cda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002cde:	4718      	bx	r3

08002ce0 <_ZN8touchgfx6WidgetC1Ev>:
 8002ce0:	2200      	movs	r2, #0
 8002ce2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002ce6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002cea:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002cee:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002cf2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002cf6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002cf8:	4a01      	ldr	r2, [pc, #4]	; (8002d00 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002cfa:	6002      	str	r2, [r0, #0]
 8002cfc:	4770      	bx	lr
 8002cfe:	bf00      	nop
 8002d00:	08022658 	.word	0x08022658

08002d04 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002d04:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002d06:	2226      	movs	r2, #38	; 0x26
    Box()
 8002d08:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002d0a:	2100      	movs	r1, #0
 8002d0c:	f01d fd64 	bl	80207d8 <memset>
 8002d10:	4620      	mov	r0, r4
 8002d12:	f7ff ffe5 	bl	8002ce0 <_ZN8touchgfx6WidgetC1Ev>
 8002d16:	4b04      	ldr	r3, [pc, #16]	; (8002d28 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002d18:	6023      	str	r3, [r4, #0]
 8002d1a:	23ff      	movs	r3, #255	; 0xff
 8002d1c:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002d20:	2300      	movs	r3, #0
 8002d22:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002d24:	4620      	mov	r0, r4
 8002d26:	bd10      	pop	{r4, pc}
 8002d28:	08023cd0 	.word	0x08023cd0

08002d2c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002d2c:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002d2e:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002d30:	4604      	mov	r4, r0
 8002d32:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002d34:	2100      	movs	r1, #0
 8002d36:	f01d fd4f 	bl	80207d8 <memset>
 8002d3a:	4620      	mov	r0, r4
 8002d3c:	f7ff ffd0 	bl	8002ce0 <_ZN8touchgfx6WidgetC1Ev>
 8002d40:	4b06      	ldr	r3, [pc, #24]	; (8002d5c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002d42:	6023      	str	r3, [r4, #0]
 8002d44:	882b      	ldrh	r3, [r5, #0]
 8002d46:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002d48:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002d4a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002d4c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002d50:	4629      	mov	r1, r5
 8002d52:	f00b fb3d 	bl	800e3d0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d56:	4620      	mov	r0, r4
 8002d58:	bd38      	pop	{r3, r4, r5, pc}
 8002d5a:	bf00      	nop
 8002d5c:	08023e14 	.word	0x08023e14

08002d60 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d60:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d62:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002d64:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d66:	2100      	movs	r1, #0
 8002d68:	f01d fd36 	bl	80207d8 <memset>
 8002d6c:	4620      	mov	r0, r4
 8002d6e:	f7ff ffb7 	bl	8002ce0 <_ZN8touchgfx6WidgetC1Ev>
 8002d72:	4b0a      	ldr	r3, [pc, #40]	; (8002d9c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d74:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002d76:	4b0a      	ldr	r3, [pc, #40]	; (8002da0 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002d78:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d7a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d7e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002d80:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002d84:	2300      	movs	r3, #0
 8002d86:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d8a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002d8e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d92:	8723      	strh	r3, [r4, #56]	; 0x38
 8002d94:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002d96:	4620      	mov	r0, r4
 8002d98:	bd10      	pop	{r4, pc}
 8002d9a:	bf00      	nop
 8002d9c:	08023c40 	.word	0x08023c40
 8002da0:	08021e48 	.word	0x08021e48

08002da4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002da4:	4b1b      	ldr	r3, [pc, #108]	; (8002e14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002da6:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002da8:	881b      	ldrh	r3, [r3, #0]
 8002daa:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002dac:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002dae:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002db0:	d92b      	bls.n	8002e0a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002db2:	4b19      	ldr	r3, [pc, #100]	; (8002e18 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	b92b      	cbnz	r3, 8002dc4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002db8:	4b18      	ldr	r3, [pc, #96]	; (8002e1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002dba:	4a19      	ldr	r2, [pc, #100]	; (8002e20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002dbc:	4819      	ldr	r0, [pc, #100]	; (8002e24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002dbe:	216c      	movs	r1, #108	; 0x6c
 8002dc0:	f01d fb84 	bl	80204cc <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002dc4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002dc8:	4b17      	ldr	r3, [pc, #92]	; (8002e28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002dd0:	4b16      	ldr	r3, [pc, #88]	; (8002e2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002dd2:	6818      	ldr	r0, [r3, #0]
 8002dd4:	f001 ff54 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002dd8:	682b      	ldr	r3, [r5, #0]
 8002dda:	9001      	str	r0, [sp, #4]
 8002ddc:	4601      	mov	r1, r0
 8002dde:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002de0:	4628      	mov	r0, r5
 8002de2:	4798      	blx	r3
 8002de4:	682b      	ldr	r3, [r5, #0]
 8002de6:	9901      	ldr	r1, [sp, #4]
 8002de8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dea:	4604      	mov	r4, r0
 8002dec:	4628      	mov	r0, r5
 8002dee:	4798      	blx	r3
 8002df0:	682b      	ldr	r3, [r5, #0]
 8002df2:	9901      	ldr	r1, [sp, #4]
 8002df4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002df6:	fb14 f400 	smulbb	r4, r4, r0
 8002dfa:	4628      	mov	r0, r5
 8002dfc:	4798      	blx	r3
 8002dfe:	b2e4      	uxtb	r4, r4
 8002e00:	4404      	add	r4, r0
 8002e02:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002e06:	b002      	add	sp, #8
 8002e08:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002e0a:	2300      	movs	r3, #0
 8002e0c:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002e10:	e7f9      	b.n	8002e06 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002e12:	bf00      	nop
 8002e14:	20015440 	.word	0x20015440
 8002e18:	2001543c 	.word	0x2001543c
 8002e1c:	08022510 	.word	0x08022510
 8002e20:	08022552 	.word	0x08022552
 8002e24:	0802258d 	.word	0x0802258d
 8002e28:	20015444 	.word	0x20015444
 8002e2c:	20015448 	.word	0x20015448

08002e30 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002e30:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002e34:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002e36:	4606      	mov	r6, r0
 8002e38:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002e3a:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002e3e:	2500      	movs	r5, #0
 8002e40:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e42:	4b1d      	ldr	r3, [pc, #116]	; (8002eb8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002e44:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002e46:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e4a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002e4e:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002e52:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e56:	6305      	str	r5, [r0, #48]	; 0x30
 8002e58:	f846 3b34 	str.w	r3, [r6], #52
 8002e5c:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e5e:	4630      	mov	r0, r6
 8002e60:	f7ff ff50 	bl	8002d04 <_ZN8touchgfx3BoxC1Ev>
 8002e64:	4b15      	ldr	r3, [pc, #84]	; (8002ebc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002e66:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002e68:	462a      	mov	r2, r5
        : color(0)
 8002e6a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002e6e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002e72:	6625      	str	r5, [r4, #96]	; 0x60
 8002e74:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002e78:	4629      	mov	r1, r5
 8002e7a:	4630      	mov	r0, r6
 8002e7c:	f7ff fede 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e80:	4631      	mov	r1, r6
 8002e82:	4620      	mov	r0, r4
 8002e84:	f007 fc22 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002e88:	4b0d      	ldr	r3, [pc, #52]	; (8002ec0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002e8a:	6023      	str	r3, [r4, #0]
 8002e8c:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e90:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e94:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002e98:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002e9c:	a901      	add	r1, sp, #4
 8002e9e:	4628      	mov	r0, r5
 8002ea0:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002ea4:	f7ff ff42 	bl	8002d2c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002ea8:	4620      	mov	r0, r4
 8002eaa:	4629      	mov	r1, r5
 8002eac:	f007 fc0e 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002eb0:	4620      	mov	r0, r4
 8002eb2:	b002      	add	sp, #8
 8002eb4:	bd70      	pop	{r4, r5, r6, pc}
 8002eb6:	bf00      	nop
 8002eb8:	08022750 	.word	0x08022750
 8002ebc:	08023dac 	.word	0x08023dac
 8002ec0:	080227ec 	.word	0x080227ec

08002ec4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002ec4:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002ec6:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002ec8:	9b01      	ldr	r3, [sp, #4]
 8002eca:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002ecc:	6803      	ldr	r3, [r0, #0]
    }
 8002ece:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002ed2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8002ed6:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002eda:	4718      	bx	r3

08002edc <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ee0:	ed2d 8b0c 	vpush	{d8-d13}
 8002ee4:	4604      	mov	r4, r0
 8002ee6:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002ee8:	f00f fa22 	bl	8012330 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002eec:	4622      	mov	r2, r4
 8002eee:	2500      	movs	r5, #0
 8002ef0:	4be7      	ldr	r3, [pc, #924]	; (8003290 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002ef2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ef4:	f842 3b40 	str.w	r3, [r2], #64
 8002ef8:	4610      	mov	r0, r2
 8002efa:	ee08 2a10 	vmov	s16, r2
 8002efe:	f7ff ff01 	bl	8002d04 <_ZN8touchgfx3BoxC1Ev>
 8002f02:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002f06:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002f0a:	a90a      	add	r1, sp, #40	; 0x28
 8002f0c:	4618      	mov	r0, r3
 8002f0e:	ee0c 3a10 	vmov	s24, r3
 8002f12:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f16:	f7ff ff09 	bl	8002d2c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f1a:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002f1e:	a90a      	add	r1, sp, #40	; 0x28
 8002f20:	4618      	mov	r0, r3
 8002f22:	ee0c 3a90 	vmov	s25, r3
 8002f26:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f2a:	f7ff feff 	bl	8002d2c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f2e:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002f32:	4618      	mov	r0, r3
 8002f34:	ee08 3a90 	vmov	s17, r3
 8002f38:	f7ff ff7a 	bl	8002e30 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f3c:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002f40:	4618      	mov	r0, r3
 8002f42:	ee09 3a10 	vmov	s18, r3
 8002f46:	f7ff ff73 	bl	8002e30 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f4a:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002f4e:	4618      	mov	r0, r3
 8002f50:	ee09 3a90 	vmov	s19, r3
 8002f54:	f7ff ff04 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
 8002f58:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 8002f5c:	4618      	mov	r0, r3
 8002f5e:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002f62:	4fcc      	ldr	r7, [pc, #816]	; (8003294 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
        : TextArea()
 8002f64:	f7ff fefc 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
 8002f68:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 8002f6c:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002f70:	4618      	mov	r0, r3
 8002f72:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002f76:	ee0a 3a90 	vmov	s21, r3
 8002f7a:	f00b fb5b 	bl	800e634 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f7e:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002f82:	a90a      	add	r1, sp, #40	; 0x28
 8002f84:	4618      	mov	r0, r3
 8002f86:	ee0d 3a10 	vmov	s26, r3
 8002f8a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f8e:	f7ff fecd 	bl	8002d2c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f92:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8002f96:	4618      	mov	r0, r3
 8002f98:	ee0b 3a10 	vmov	s22, r3
 8002f9c:	f7ff fee0 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
 8002fa0:	f504 7359 	add.w	r3, r4, #868	; 0x364
 8002fa4:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 8002fa8:	4618      	mov	r0, r3
 8002faa:	ee0b 3a90 	vmov	s23, r3
 8002fae:	f7ff fed7 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002fb2:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002fb6:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002fba:	4658      	mov	r0, fp
 8002fbc:	f7ff fed0 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
 8002fc0:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 8002fc4:	a90a      	add	r1, sp, #40	; 0x28
 8002fc6:	4618      	mov	r0, r3
 8002fc8:	f204 4924 	addw	r9, r4, #1060	; 0x424
 8002fcc:	ee0d 3a90 	vmov	s27, r3
 8002fd0:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 8002fd4:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002fd8:	f7ff fea8 	bl	8002d2c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002fdc:	4648      	mov	r0, r9
 8002fde:	f7ff ff27 	bl	8002e30 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002fe2:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 8002fe6:	4640      	mov	r0, r8
 8002fe8:	f7ff ff22 	bl	8002e30 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 8002fec:	4650      	mov	r0, sl
 8002fee:	f7ff feb7 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002ff2:	4ba9      	ldr	r3, [pc, #676]	; (8003298 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002ff4:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 8002ff8:	4ba8      	ldr	r3, [pc, #672]	; (800329c <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002ffa:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 8002ffe:	4ba8      	ldr	r3, [pc, #672]	; (80032a0 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8003000:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 8003004:	4ba7      	ldr	r3, [pc, #668]	; (80032a4 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8003006:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 800300a:	23f0      	movs	r3, #240	; 0xf0
 800300c:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 8003010:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 8003014:	9300      	str	r3, [sp, #0]
 8003016:	462a      	mov	r2, r5
 8003018:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800301c:	4629      	mov	r1, r5
 800301e:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003022:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 8003026:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 800302a:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 800302e:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8003032:	f7ff fe42 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003036:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800303a:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 800303c:	462a      	mov	r2, r5
 800303e:	ee1c 0a10 	vmov	r0, s24
 8003042:	4629      	mov	r1, r5
 8003044:	f7ff fdfa 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8003048:	ee1c 0a10 	vmov	r0, s24
 800304c:	a90a      	add	r1, sp, #40	; 0x28
 800304e:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8003052:	f00b f9bd 	bl	800e3d0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8003056:	ee1c 0a90 	vmov	r0, s25
 800305a:	2219      	movs	r2, #25
 800305c:	2176      	movs	r1, #118	; 0x76
 800305e:	f7ff fded 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003062:	aa0a      	add	r2, sp, #40	; 0x28
 8003064:	f04f 0303 	mov.w	r3, #3
 8003068:	4611      	mov	r1, r2
 800306a:	ee1c 0a90 	vmov	r0, s25
 800306e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003072:	f00b f9ad 	bl	800e3d0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 8003076:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003078:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800307a:	4e8b      	ldr	r6, [pc, #556]	; (80032a8 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 800307c:	9300      	str	r3, [sp, #0]
 800307e:	462a      	mov	r2, r5
 8003080:	232b      	movs	r3, #43	; 0x2b
 8003082:	4629      	mov	r1, r5
 8003084:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8003088:	f7ff fe17 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800308c:	4b87      	ldr	r3, [pc, #540]	; (80032ac <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 800308e:	4a88      	ldr	r2, [pc, #544]	; (80032b0 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003090:	4988      	ldr	r1, [pc, #544]	; (80032b4 <_ZN15Screen1ViewBaseC1Ev+0x3d8>)
 8003092:	9600      	str	r6, [sp, #0]
 8003094:	ee18 0a90 	vmov	r0, s17
 8003098:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 800309c:	f7ff ff12 	bl	8002ec4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80030a0:	ee18 0a90 	vmov	r0, s17
 80030a4:	aa0a      	add	r2, sp, #40	; 0x28
 80030a6:	a909      	add	r1, sp, #36	; 0x24
 80030a8:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80030ac:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80030b0:	f7ff fdd1 	bl	8002c56 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 80030b4:	2317      	movs	r3, #23
 80030b6:	ee18 0a90 	vmov	r0, s17
 80030ba:	9300      	str	r3, [sp, #0]
 80030bc:	2231      	movs	r2, #49	; 0x31
 80030be:	232b      	movs	r3, #43	; 0x2b
 80030c0:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 80030c4:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 80030c8:	f7ff fdf7 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 80030cc:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80030d0:	9303      	str	r3, [sp, #12]
        action = &callback;
 80030d2:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80030d6:	2317      	movs	r3, #23
 80030d8:	9300      	str	r3, [sp, #0]
 80030da:	462a      	mov	r2, r5
 80030dc:	232b      	movs	r3, #43	; 0x2b
 80030de:	4629      	mov	r1, r5
 80030e0:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 80030e4:	f7ff fde9 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80030e8:	4b70      	ldr	r3, [pc, #448]	; (80032ac <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80030ea:	4a71      	ldr	r2, [pc, #452]	; (80032b0 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 80030ec:	4971      	ldr	r1, [pc, #452]	; (80032b4 <_ZN15Screen1ViewBaseC1Ev+0x3d8>)
 80030ee:	9600      	str	r6, [sp, #0]
 80030f0:	ee19 0a10 	vmov	r0, s18
 80030f4:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 80030f8:	f7ff fee4 	bl	8002ec4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80030fc:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003100:	a80a      	add	r0, sp, #40	; 0x28
 8003102:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8003106:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800310a:	a909      	add	r1, sp, #36	; 0x24
 800310c:	4602      	mov	r2, r0
 800310e:	ee19 0a10 	vmov	r0, s18
 8003112:	f7ff fda0 	bl	8002c56 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003116:	2006      	movs	r0, #6
 8003118:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 800311c:	2017      	movs	r0, #23
 800311e:	232b      	movs	r3, #43	; 0x2b
 8003120:	9000      	str	r0, [sp, #0]
 8003122:	2219      	movs	r2, #25
 8003124:	ee19 0a10 	vmov	r0, s18
 8003128:	f240 1111 	movw	r1, #273	; 0x111
 800312c:	f7ff fdc5 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 8003130:	9a03      	ldr	r2, [sp, #12]
 8003132:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 8003136:	ee19 0a90 	vmov	r0, s19
 800313a:	221c      	movs	r2, #28
 800313c:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 800313e:	ae04      	add	r6, sp, #16
 8003140:	f7ff fd7c 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003144:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003148:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 800314c:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 8003150:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003154:	4630      	mov	r0, r6
 8003156:	f00a fc2d 	bl	800d9b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800315a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800315e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003162:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003166:	4b54      	ldr	r3, [pc, #336]	; (80032b8 <_ZN15Screen1ViewBaseC1Ev+0x3dc>)
 8003168:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 800316a:	ee19 0a90 	vmov	r0, s19
 800316e:	2311      	movs	r3, #17
 8003170:	a90a      	add	r1, sp, #40	; 0x28
 8003172:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003176:	f00a fead 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 800317a:	2018      	movs	r0, #24
 800317c:	2224      	movs	r2, #36	; 0x24
 800317e:	9000      	str	r0, [sp, #0]
 8003180:	237c      	movs	r3, #124	; 0x7c
 8003182:	ee1a 0a10 	vmov	r0, s20
 8003186:	218f      	movs	r1, #143	; 0x8f
 8003188:	f7ff fd97 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800318c:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 8003190:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 8003194:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003198:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800319c:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 80031a0:	ee1a 1a10 	vmov	r1, s20
 80031a4:	4630      	mov	r0, r6
 80031a6:	4798      	blx	r3
 80031a8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031ac:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80031b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 80031b4:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 80031b8:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 80031bc:	4b3e      	ldr	r3, [pc, #248]	; (80032b8 <_ZN15Screen1ViewBaseC1Ev+0x3dc>)
 80031be:	930a      	str	r3, [sp, #40]	; 0x28
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80031c0:	ee1a 0a10 	vmov	r0, s20
 80031c4:	2310      	movs	r3, #16
 80031c6:	a90a      	add	r1, sp, #40	; 0x28
    txtPradLadowaniaBuffer[0] = 0;
 80031c8:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
 80031cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80031d0:	f00a fe80 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80031d4:	ee1a 0a90 	vmov	r0, s21
 80031d8:	22b4      	movs	r2, #180	; 0xb4
 80031da:	214e      	movs	r1, #78	; 0x4e
 80031dc:	f7ff fd2e 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
 80031e0:	f04f 0001 	mov.w	r0, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80031e4:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 80031e8:	f8ad 0024 	strh.w	r0, [sp, #36]	; 0x24
 80031ec:	f04f 0002 	mov.w	r0, #2
 80031f0:	4662      	mov	r2, ip
 80031f2:	a909      	add	r1, sp, #36	; 0x24
 80031f4:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 80031f8:	ee1a 0a90 	vmov	r0, s21
 80031fc:	f00a fec5 	bl	800df8a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003200:	230f      	movs	r3, #15
        updateTextPosition();
 8003202:	ee1a 0a90 	vmov	r0, s21
 8003206:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 800320a:	f7ff fdcb 	bl	8002da4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 800320e:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 8003212:	f04f 3cff 	mov.w	ip, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003216:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 800321a:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 800321c:	e9c4 ccb9 	strd	ip, ip, [r4, #740]	; 0x2e4
 8003220:	ee1d 0a10 	vmov	r0, s26
 8003224:	2176      	movs	r1, #118	; 0x76
 8003226:	f7ff fd09 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800322a:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800322e:	f04f 0103 	mov.w	r1, #3
 8003232:	ee1d 0a10 	vmov	r0, s26
 8003236:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800323a:	4661      	mov	r1, ip
 800323c:	f00b f8c8 	bl	800e3d0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 8003240:	228d      	movs	r2, #141	; 0x8d
 8003242:	ee1b 0a10 	vmov	r0, s22
 8003246:	2129      	movs	r1, #41	; 0x29
 8003248:	f7ff fcf8 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800324c:	f04f 3cff 	mov.w	ip, #4294967295
        boundingArea = calculateBoundingArea();
 8003250:	4630      	mov	r0, r6
 8003252:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8003256:	f8c4 c34c 	str.w	ip, [r4, #844]	; 0x34c
        linespace = space;
 800325a:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 800325e:	f00a fba9 	bl	800d9b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003262:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003266:	f504 7356 	add.w	r3, r4, #856	; 0x358
 800326a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 800326e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003272:	4b11      	ldr	r3, [pc, #68]	; (80032b8 <_ZN15Screen1ViewBaseC1Ev+0x3dc>)
 8003274:	930a      	str	r3, [sp, #40]	; 0x28
 8003276:	4661      	mov	r1, ip
 8003278:	230e      	movs	r3, #14
 800327a:	ee1b 0a10 	vmov	r0, s22
 800327e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003282:	f00a fe27 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 8003286:	f04f 0c18 	mov.w	ip, #24
 800328a:	2293      	movs	r2, #147	; 0x93
 800328c:	e016      	b.n	80032bc <_ZN15Screen1ViewBaseC1Ev+0x3e0>
 800328e:	bf00      	nop
 8003290:	080228bc 	.word	0x080228bc
 8003294:	080226c0 	.word	0x080226c0
 8003298:	0802288c 	.word	0x0802288c
 800329c:	08002c0d 	.word	0x08002c0d
 80032a0:	080228a4 	.word	0x080228a4
 80032a4:	08002b1d 	.word	0x08002b1d
 80032a8:	ff336699 	.word	0xff336699
 80032ac:	ff003366 	.word	0xff003366
 80032b0:	ff0099cc 	.word	0xff0099cc
 80032b4:	ff006699 	.word	0xff006699
 80032b8:	08021e48 	.word	0x08021e48
 80032bc:	ee1b 0a90 	vmov	r0, s23
 80032c0:	f8cd c000 	str.w	ip, [sp]
 80032c4:	237c      	movs	r3, #124	; 0x7c
 80032c6:	218f      	movs	r1, #143	; 0x8f
 80032c8:	f7ff fcf7 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 80032cc:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80032d0:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80032d4:	f04f 3cff 	mov.w	ip, #4294967295
        boundingArea = calculateBoundingArea();
 80032d8:	4630      	mov	r0, r6
 80032da:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80032de:	f8c4 c394 	str.w	ip, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80032e2:	ee1b 1a90 	vmov	r1, s23
 80032e6:	4798      	blx	r3
 80032e8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80032ec:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80032f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80032f4:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80032f8:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 80032fc:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
 8003300:	4b97      	ldr	r3, [pc, #604]	; (8003560 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003302:	930a      	str	r3, [sp, #40]	; 0x28
 8003304:	4661      	mov	r1, ip
 8003306:	230d      	movs	r3, #13
 8003308:	ee1b 0a90 	vmov	r0, s23
    txtNapiecieBateriiBuffer[0] = 0;
 800330c:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
 8003310:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 8003314:	f00a fdde 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 8003318:	2256      	movs	r2, #86	; 0x56
 800331a:	2106      	movs	r1, #6
 800331c:	4658      	mov	r0, fp
 800331e:	f7ff fc8d 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003322:	f04f 3cff 	mov.w	ip, #4294967295
 8003326:	f8c4 c3e0 	str.w	ip, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 800332a:	4630      	mov	r0, r6
 800332c:	4659      	mov	r1, fp
        linespace = space;
 800332e:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 8003332:	f00a fb3f 	bl	800d9b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003336:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800333a:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 800333e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003342:	f04f 0002 	mov.w	r0, #2
 8003346:	f8ad 002c 	strh.w	r0, [sp, #44]	; 0x2c
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 800334a:	a80a      	add	r0, sp, #40	; 0x28
 800334c:	4b84      	ldr	r3, [pc, #528]	; (8003560 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 800334e:	930a      	str	r3, [sp, #40]	; 0x28
 8003350:	4601      	mov	r1, r0
 8003352:	4658      	mov	r0, fp
 8003354:	f00a fdbe 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 8003358:	2253      	movs	r2, #83	; 0x53
 800335a:	ee1d 0a90 	vmov	r0, s27
 800335e:	2176      	movs	r1, #118	; 0x76
 8003360:	f7ff fc6c 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
 8003364:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003368:	ee1d 0a90 	vmov	r0, s27
 800336c:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003370:	a90a      	add	r1, sp, #40	; 0x28
 8003372:	f00b f82d 	bl	800e3d0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003376:	2117      	movs	r1, #23
 8003378:	9100      	str	r1, [sp, #0]
 800337a:	232b      	movs	r3, #43	; 0x2b
 800337c:	462a      	mov	r2, r5
 800337e:	4629      	mov	r1, r5
 8003380:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003384:	f7ff fc99 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003388:	4b76      	ldr	r3, [pc, #472]	; (8003564 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 800338a:	9300      	str	r3, [sp, #0]
 800338c:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8003390:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003394:	4a74      	ldr	r2, [pc, #464]	; (8003568 <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 8003396:	4975      	ldr	r1, [pc, #468]	; (800356c <_ZN15Screen1ViewBaseC1Ev+0x690>)
 8003398:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 800339c:	4648      	mov	r0, r9
 800339e:	f7ff fd91 	bl	8002ec4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80033a2:	a90a      	add	r1, sp, #40	; 0x28
 80033a4:	460a      	mov	r2, r1
 80033a6:	4648      	mov	r0, r9
 80033a8:	a909      	add	r1, sp, #36	; 0x24
 80033aa:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80033ae:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80033b2:	f7ff fc50 	bl	8002c56 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 80033b6:	2117      	movs	r1, #23
 80033b8:	9100      	str	r1, [sp, #0]
 80033ba:	232b      	movs	r3, #43	; 0x2b
 80033bc:	2269      	movs	r2, #105	; 0x69
 80033be:	f240 1111 	movw	r1, #273	; 0x111
 80033c2:	4648      	mov	r0, r9
 80033c4:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 80033c8:	f7ff fc77 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 80033cc:	9a03      	ldr	r2, [sp, #12]
 80033ce:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 80033d2:	2117      	movs	r1, #23
 80033d4:	9100      	str	r1, [sp, #0]
 80033d6:	232b      	movs	r3, #43	; 0x2b
 80033d8:	462a      	mov	r2, r5
 80033da:	4629      	mov	r1, r5
 80033dc:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 80033e0:	f7ff fc6b 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80033e4:	4b5f      	ldr	r3, [pc, #380]	; (8003564 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 80033e6:	9300      	str	r3, [sp, #0]
 80033e8:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80033ec:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80033f0:	4a5d      	ldr	r2, [pc, #372]	; (8003568 <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 80033f2:	495e      	ldr	r1, [pc, #376]	; (800356c <_ZN15Screen1ViewBaseC1Ev+0x690>)
 80033f4:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 80033f8:	4640      	mov	r0, r8
 80033fa:	f7ff fd63 	bl	8002ec4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80033fe:	f04f 0206 	mov.w	r2, #6
 8003402:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8003406:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 800340a:	a909      	add	r1, sp, #36	; 0x24
 800340c:	aa0a      	add	r2, sp, #40	; 0x28
 800340e:	4640      	mov	r0, r8
 8003410:	f7ff fc21 	bl	8002c56 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003414:	2306      	movs	r3, #6
 8003416:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 800341a:	2317      	movs	r3, #23
 800341c:	9300      	str	r3, [sp, #0]
 800341e:	2251      	movs	r2, #81	; 0x51
 8003420:	232b      	movs	r3, #43	; 0x2b
 8003422:	f240 1111 	movw	r1, #273	; 0x111
 8003426:	4640      	mov	r0, r8
 8003428:	f7ff fc47 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800342c:	9b03      	ldr	r3, [sp, #12]
 800342e:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 8003432:	2318      	movs	r3, #24
 8003434:	225d      	movs	r2, #93	; 0x5d
 8003436:	9300      	str	r3, [sp, #0]
 8003438:	218f      	movs	r1, #143	; 0x8f
 800343a:	237c      	movs	r3, #124	; 0x7c
 800343c:	4650      	mov	r0, sl
 800343e:	f7ff fc3c 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003442:	f04f 33ff 	mov.w	r3, #4294967295
 8003446:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 800344a:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 800344e:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 8003452:	4630      	mov	r0, r6
 8003454:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003458:	4651      	mov	r1, sl
 800345a:	4798      	blx	r3
 800345c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003460:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003464:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003468:	4b41      	ldr	r3, [pc, #260]	; (8003570 <_ZN15Screen1ViewBaseC1Ev+0x694>)
 800346a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 800346c:	f504 66bd 	add.w	r6, r4, #1512	; 0x5e8
 8003470:	b92b      	cbnz	r3, 800347e <_ZN15Screen1ViewBaseC1Ev+0x5a2>
 8003472:	4b40      	ldr	r3, [pc, #256]	; (8003574 <_ZN15Screen1ViewBaseC1Ev+0x698>)
 8003474:	4a40      	ldr	r2, [pc, #256]	; (8003578 <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 8003476:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003478:	4840      	ldr	r0, [pc, #256]	; (800357c <_ZN15Screen1ViewBaseC1Ev+0x6a0>)
 800347a:	f01d f827 	bl	80204cc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800347e:	4b40      	ldr	r3, [pc, #256]	; (8003580 <_ZN15Screen1ViewBaseC1Ev+0x6a4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003480:	881b      	ldrh	r3, [r3, #0]
 8003482:	b91b      	cbnz	r3, 800348c <_ZN15Screen1ViewBaseC1Ev+0x5b0>
 8003484:	4b3f      	ldr	r3, [pc, #252]	; (8003584 <_ZN15Screen1ViewBaseC1Ev+0x6a8>)
 8003486:	4a3c      	ldr	r2, [pc, #240]	; (8003578 <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 8003488:	2161      	movs	r1, #97	; 0x61
 800348a:	e7f5      	b.n	8003478 <_ZN15Screen1ViewBaseC1Ev+0x59c>
        return texts->getText(typedTextId);
 800348c:	4b3e      	ldr	r3, [pc, #248]	; (8003588 <_ZN15Screen1ViewBaseC1Ev+0x6ac>)
 800348e:	4629      	mov	r1, r5
 8003490:	6818      	ldr	r0, [r3, #0]
 8003492:	f001 fbf5 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 8003496:	4a3d      	ldr	r2, [pc, #244]	; (800358c <_ZN15Screen1ViewBaseC1Ev+0x6b0>)
 8003498:	4603      	mov	r3, r0
 800349a:	2103      	movs	r1, #3
 800349c:	4630      	mov	r0, r6
 800349e:	f010 fc03 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80034a2:	4b2f      	ldr	r3, [pc, #188]	; (8003560 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 80034a4:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80034a6:	1d25      	adds	r5, r4, #4
 80034a8:	f04f 0301 	mov.w	r3, #1
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 80034ac:	a90a      	add	r1, sp, #40	; 0x28
 80034ae:	4650      	mov	r0, sl
 80034b0:	f8c4 65bc 	str.w	r6, [r4, #1468]	; 0x5bc
 80034b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80034b8:	f00a fd0c 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034bc:	ee18 1a10 	vmov	r1, s16
 80034c0:	4628      	mov	r0, r5
 80034c2:	f007 f903 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034c6:	ee1c 1a10 	vmov	r1, s24
 80034ca:	4628      	mov	r0, r5
 80034cc:	f007 f8fe 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034d0:	ee1c 1a90 	vmov	r1, s25
 80034d4:	4628      	mov	r0, r5
 80034d6:	f007 f8f9 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034da:	ee18 1a90 	vmov	r1, s17
 80034de:	4628      	mov	r0, r5
 80034e0:	f007 f8f4 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034e4:	ee19 1a10 	vmov	r1, s18
 80034e8:	4628      	mov	r0, r5
 80034ea:	f007 f8ef 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ee:	ee19 1a90 	vmov	r1, s19
 80034f2:	4628      	mov	r0, r5
 80034f4:	f007 f8ea 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034f8:	ee1a 1a10 	vmov	r1, s20
 80034fc:	4628      	mov	r0, r5
 80034fe:	f007 f8e5 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003502:	ee1a 1a90 	vmov	r1, s21
 8003506:	4628      	mov	r0, r5
 8003508:	f007 f8e0 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800350c:	ee1d 1a10 	vmov	r1, s26
 8003510:	4628      	mov	r0, r5
 8003512:	f007 f8db 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003516:	ee1b 1a10 	vmov	r1, s22
 800351a:	4628      	mov	r0, r5
 800351c:	f007 f8d6 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003520:	ee1b 1a90 	vmov	r1, s23
 8003524:	4628      	mov	r0, r5
 8003526:	f007 f8d1 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800352a:	4659      	mov	r1, fp
 800352c:	4628      	mov	r0, r5
 800352e:	f007 f8cd 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003532:	ee1d 1a90 	vmov	r1, s27
 8003536:	4628      	mov	r0, r5
 8003538:	f007 f8c8 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800353c:	4649      	mov	r1, r9
 800353e:	4628      	mov	r0, r5
 8003540:	f007 f8c4 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003544:	4641      	mov	r1, r8
 8003546:	4628      	mov	r0, r5
 8003548:	f007 f8c0 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800354c:	4628      	mov	r0, r5
 800354e:	4651      	mov	r1, sl
 8003550:	f007 f8bc 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003554:	4620      	mov	r0, r4
 8003556:	b00d      	add	sp, #52	; 0x34
 8003558:	ecbd 8b0c 	vpop	{d8-d13}
 800355c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003560:	08021e48 	.word	0x08021e48
 8003564:	ff336699 	.word	0xff336699
 8003568:	ff0099cc 	.word	0xff0099cc
 800356c:	ff006699 	.word	0xff006699
 8003570:	2001543c 	.word	0x2001543c
 8003574:	08022510 	.word	0x08022510
 8003578:	08022612 	.word	0x08022612
 800357c:	0802258d 	.word	0x0802258d
 8003580:	20015440 	.word	0x20015440
 8003584:	080225d4 	.word	0x080225d4
 8003588:	20015448 	.word	0x20015448
 800358c:	0802264a 	.word	0x0802264a

08003590 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8003590:	2000      	movs	r0, #0
 8003592:	4770      	bx	lr

08003594 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003594:	888b      	ldrh	r3, [r1, #4]
 8003596:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003598:	2001      	movs	r0, #1
 800359a:	4770      	bx	lr

0800359c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800359c:	4770      	bx	lr

0800359e <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800359e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80035a2:	4770      	bx	lr

080035a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80035a4:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80035a6:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80035a8:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80035aa:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80035ae:	4362      	muls	r2, r4
 80035b0:	4361      	muls	r1, r4
    }
 80035b2:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80035b6:	4718      	bx	r3

080035b8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80035b8:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80035bc:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80035be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80035c2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80035c6:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80035ca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80035ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035d2:	db17      	blt.n	8003604 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80035d4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80035d8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80035dc:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80035e0:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80035e4:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80035e8:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80035ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035f0:	db1c      	blt.n	800362c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80035f2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80035f6:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80035fa:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80035fe:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003602:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003604:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003608:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800360c:	ee17 2a10 	vmov	r2, s14
 8003610:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003614:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003618:	ee30 0a26 	vadd.f32	s0, s0, s13
 800361c:	1e51      	subs	r1, r2, #1
 800361e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003622:	ee10 2a10 	vmov	r2, s0
 8003626:	440a      	add	r2, r1
 8003628:	4611      	mov	r1, r2
 800362a:	e7db      	b.n	80035e4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 800362c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003630:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003634:	ee17 2a90 	vmov	r2, s15
 8003638:	ee70 0ac7 	vsub.f32	s1, s1, s14
 800363c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003640:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003644:	3a01      	subs	r2, #1
 8003646:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800364a:	ee10 ca90 	vmov	ip, s1
 800364e:	4494      	add	ip, r2
 8003650:	4662      	mov	r2, ip
 8003652:	e7d6      	b.n	8003602 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003654 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003654:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003656:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003658:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800365a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800365e:	4362      	muls	r2, r4
    }
 8003660:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003664:	4718      	bx	r3

08003666 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003666:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800366a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800366c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003670:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003674:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003678:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800367c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003680:	db08      	blt.n	8003694 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003682:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003686:	ee30 0a27 	vadd.f32	s0, s0, s15
 800368a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800368e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003692:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003694:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003698:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800369c:	ee17 2a90 	vmov	r2, s15
 80036a0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80036a4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80036a8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036ac:	3a01      	subs	r2, #1
 80036ae:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80036b2:	ee10 ca10 	vmov	ip, s0
 80036b6:	4494      	add	ip, r2
 80036b8:	4662      	mov	r2, ip
 80036ba:	e7ea      	b.n	8003692 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080036bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80036bc:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80036be:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80036c0:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80036c2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80036c6:	4362      	muls	r2, r4
 80036c8:	4361      	muls	r1, r4
    }
 80036ca:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80036ce:	4718      	bx	r3

080036d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80036d0:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036d4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036da:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80036de:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80036e2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036ea:	db17      	blt.n	800371c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80036ec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80036f0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036f4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036f8:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80036fc:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003700:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003708:	db1c      	blt.n	8003744 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 800370a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800370e:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003712:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003716:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800371a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800371c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003720:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003724:	ee17 2a10 	vmov	r2, s14
 8003728:	ee30 0a66 	vsub.f32	s0, s0, s13
 800372c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003730:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003734:	1e51      	subs	r1, r2, #1
 8003736:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800373a:	ee10 2a10 	vmov	r2, s0
 800373e:	440a      	add	r2, r1
 8003740:	4611      	mov	r1, r2
 8003742:	e7db      	b.n	80036fc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003744:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003748:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800374c:	ee17 2a90 	vmov	r2, s15
 8003750:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003754:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003758:	ee70 0a87 	vadd.f32	s1, s1, s14
 800375c:	3a01      	subs	r2, #1
 800375e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003762:	ee10 ca90 	vmov	ip, s1
 8003766:	4494      	add	ip, r2
 8003768:	4662      	mov	r2, ip
 800376a:	e7d6      	b.n	800371a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

0800376c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800376c:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800376e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003770:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003772:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003776:	4362      	muls	r2, r4
    }
 8003778:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800377c:	4718      	bx	r3

0800377e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800377e:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003782:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003784:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003788:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 800378c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003790:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003798:	db08      	blt.n	80037ac <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800379a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800379e:	ee30 0a27 	vadd.f32	s0, s0, s15
 80037a2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037a6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80037aa:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80037ac:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037b4:	ee17 2a90 	vmov	r2, s15
 80037b8:	ee30 0a47 	vsub.f32	s0, s0, s14
 80037bc:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80037c0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037c4:	3a01      	subs	r2, #1
 80037c6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80037ca:	ee10 ca10 	vmov	ip, s0
 80037ce:	4494      	add	ip, r2
 80037d0:	4662      	mov	r2, ip
 80037d2:	e7ea      	b.n	80037aa <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080037d4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80037d4:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80037d8:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80037da:	2b00      	cmp	r3, #0
 80037dc:	db07      	blt.n	80037ee <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80037de:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80037e2:	fb93 f0f2 	sdiv	r0, r3, r2
 80037e6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037ea:	1040      	asrs	r0, r0, #1
 80037ec:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80037ee:	f06f 0001 	mvn.w	r0, #1
 80037f2:	fb00 2003 	mla	r0, r0, r3, r2
 80037f6:	3801      	subs	r0, #1
 80037f8:	fb90 f0f2 	sdiv	r0, r0, r2
 80037fc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003800:	1040      	asrs	r0, r0, #1
 8003802:	4240      	negs	r0, r0
    }
 8003804:	4770      	bx	lr

08003806 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 8003806:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 800380a:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800380e:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003812:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003816:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800381a:	4770      	bx	lr

0800381c <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 800381c:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003820:	4770      	bx	lr

08003822 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8003822:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 8003826:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003828:	2b00      	cmp	r3, #0
 800382a:	db07      	blt.n	800383c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800382c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003830:	fb93 f0f2 	sdiv	r0, r3, r2
 8003834:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003838:	1040      	asrs	r0, r0, #1
 800383a:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800383c:	f06f 0001 	mvn.w	r0, #1
 8003840:	fb00 2003 	mla	r0, r0, r3, r2
 8003844:	3801      	subs	r0, #1
 8003846:	fb90 f0f2 	sdiv	r0, r0, r2
 800384a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800384e:	1040      	asrs	r0, r0, #1
 8003850:	4240      	negs	r0, r0
    }
 8003852:	4770      	bx	lr

08003854 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003854:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003858:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800385c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003860:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003864:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003868:	4770      	bx	lr

0800386a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800386a:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800386e:	4770      	bx	lr

08003870 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003870:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003874:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003876:	2b00      	cmp	r3, #0
 8003878:	db07      	blt.n	800388a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800387a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800387e:	fb93 f0f2 	sdiv	r0, r3, r2
 8003882:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003886:	1040      	asrs	r0, r0, #1
 8003888:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800388a:	f06f 0001 	mvn.w	r0, #1
 800388e:	fb00 2003 	mla	r0, r0, r3, r2
 8003892:	3801      	subs	r0, #1
 8003894:	fb90 f0f2 	sdiv	r0, r0, r2
 8003898:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800389c:	1040      	asrs	r0, r0, #1
 800389e:	4240      	negs	r0, r0
    }
 80038a0:	4770      	bx	lr

080038a2 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80038a2:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80038a6:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80038aa:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80038ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80038b2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80038b6:	4770      	bx	lr

080038b8 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80038b8:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80038bc:	4770      	bx	lr

080038be <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80038be:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80038c2:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80038c4:	2b00      	cmp	r3, #0
 80038c6:	db07      	blt.n	80038d8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80038c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80038cc:	fb93 f0f2 	sdiv	r0, r3, r2
 80038d0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038d4:	1040      	asrs	r0, r0, #1
 80038d6:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038d8:	f06f 0001 	mvn.w	r0, #1
 80038dc:	fb00 2003 	mla	r0, r0, r3, r2
 80038e0:	3801      	subs	r0, #1
 80038e2:	fb90 f0f2 	sdiv	r0, r0, r2
 80038e6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038ea:	1040      	asrs	r0, r0, #1
 80038ec:	4240      	negs	r0, r0
    }
 80038ee:	4770      	bx	lr

080038f0 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80038f0:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80038f4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80038f8:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80038fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003900:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003904:	4770      	bx	lr

08003906 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 8003906:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 800390a:	4770      	bx	lr

0800390c <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 800390c:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 800390e:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003910:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8003912:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 8003916:	460d      	mov	r5, r1
 8003918:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 800391a:	4798      	blx	r3
        setScaleY(scale, updateData);
 800391c:	6823      	ldr	r3, [r4, #0]
 800391e:	4632      	mov	r2, r6
 8003920:	4629      	mov	r1, r5
 8003922:	4620      	mov	r0, r4
 8003924:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003928:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 800392c:	4718      	bx	r3

0800392e <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 800392e:	6803      	ldr	r3, [r0, #0]
 8003930:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003934:	4718      	bx	r3

08003936 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003936:	6803      	ldr	r3, [r0, #0]
 8003938:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800393c:	4718      	bx	r3

0800393e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 800393e:	6803      	ldr	r3, [r0, #0]
 8003940:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003944:	4718      	bx	r3

08003946 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003946:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003948:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 800394a:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800394c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003950:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003952:	db0e      	blt.n	8003972 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003954:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003958:	fb92 f1f4 	sdiv	r1, r2, r4
 800395c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003960:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003962:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003966:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800396a:	3a01      	subs	r2, #1
 800396c:	440a      	add	r2, r1
 800396e:	4249      	negs	r1, r1
 8003970:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003972:	f06f 0101 	mvn.w	r1, #1
 8003976:	fb01 4102 	mla	r1, r1, r2, r4
 800397a:	3901      	subs	r1, #1
 800397c:	fb91 f1f4 	sdiv	r1, r1, r4
 8003980:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003984:	1049      	asrs	r1, r1, #1
 8003986:	4249      	negs	r1, r1
 8003988:	e7eb      	b.n	8003962 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

0800398a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 800398a:	6803      	ldr	r3, [r0, #0]
 800398c:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003990:	4718      	bx	r3

08003992 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003992:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003994:	6803      	ldr	r3, [r0, #0]
 8003996:	4351      	muls	r1, r2
 8003998:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 800399c:	4718      	bx	r3

0800399e <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 800399e:	6803      	ldr	r3, [r0, #0]
 80039a0:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 80039a4:	4718      	bx	r3

080039a6 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 80039a6:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 80039aa:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80039ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80039b0:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 80039b4:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80039b8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80039bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80039c0:	db08      	blt.n	80039d4 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 80039c2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80039c6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80039ca:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039ce:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80039d2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80039d4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039d8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80039dc:	ee17 2a90 	vmov	r2, s15
 80039e0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80039e4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80039e8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80039ec:	1e51      	subs	r1, r2, #1
 80039ee:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80039f2:	ee10 2a10 	vmov	r2, s0
 80039f6:	440a      	add	r2, r1
 80039f8:	4611      	mov	r1, r2
 80039fa:	e7ea      	b.n	80039d2 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

080039fc <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 80039fc:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003a00:	4770      	bx	lr

08003a02 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8003a02:	6803      	ldr	r3, [r0, #0]
 8003a04:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003a08:	4718      	bx	r3

08003a0a <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003a0a:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003a0c:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003a0e:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003a12:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003a14:	4798      	blx	r3
        if (i >= 0)
 8003a16:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003a18:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003a1a:	db07      	blt.n	8003a2c <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003a1c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003a20:	fb90 f0f3 	sdiv	r0, r0, r3
 8003a24:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a28:	1040      	asrs	r0, r0, #1
    }
 8003a2a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003a2c:	f06f 0201 	mvn.w	r2, #1
 8003a30:	fb02 3000 	mla	r0, r2, r0, r3
 8003a34:	3801      	subs	r0, #1
 8003a36:	fb90 f0f3 	sdiv	r0, r0, r3
 8003a3a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a3e:	1040      	asrs	r0, r0, #1
 8003a40:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003a42:	e7f2      	b.n	8003a2a <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003a44 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003a44:	6803      	ldr	r3, [r0, #0]
 8003a46:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003a4a:	4718      	bx	r3

08003a4c <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003a4c:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003a4e:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003a50:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003a54:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003a56:	4798      	blx	r3
        return (float)i / (float)scale;
 8003a58:	ee07 0a90 	vmov	s15, r0
 8003a5c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003a60:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003a64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003a68:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003a6c:	bd10      	pop	{r4, pc}

08003a6e <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003a6e:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003a72:	4770      	bx	lr

08003a74 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003a74:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003a76:	6803      	ldr	r3, [r0, #0]
 8003a78:	4351      	muls	r1, r2
 8003a7a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003a7e:	4718      	bx	r3

08003a80 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003a80:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a84:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003a86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a8a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003a8e:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003a92:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003a96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a9a:	db08      	blt.n	8003aae <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003a9c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003aa0:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003aa4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003aa8:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003aac:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003aae:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ab2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003ab6:	ee17 2a90 	vmov	r2, s15
 8003aba:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003abe:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003ac2:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003ac6:	1e51      	subs	r1, r2, #1
 8003ac8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003acc:	ee10 2a10 	vmov	r2, s0
 8003ad0:	440a      	add	r2, r1
 8003ad2:	4611      	mov	r1, r2
 8003ad4:	e7ea      	b.n	8003aac <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003ad6 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003ad6:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003ada:	4770      	bx	lr

08003adc <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003adc:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003ade:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003ae0:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003ae4:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003ae6:	4798      	blx	r3
        if (i >= 0)
 8003ae8:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003aea:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003aec:	db07      	blt.n	8003afe <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003aee:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003af2:	fb90 f0f3 	sdiv	r0, r0, r3
 8003af6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003afa:	1040      	asrs	r0, r0, #1
    }
 8003afc:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003afe:	f06f 0201 	mvn.w	r2, #1
 8003b02:	fb02 3000 	mla	r0, r2, r0, r3
 8003b06:	3801      	subs	r0, #1
 8003b08:	fb90 f0f3 	sdiv	r0, r0, r3
 8003b0c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003b10:	1040      	asrs	r0, r0, #1
 8003b12:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003b14:	e7f2      	b.n	8003afc <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003b16 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003b16:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003b18:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003b1a:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003b1e:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003b20:	4798      	blx	r3
        return (float)i / (float)scale;
 8003b22:	ee07 0a90 	vmov	s15, r0
 8003b26:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003b2a:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003b2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003b32:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b36:	bd10      	pop	{r4, pc}

08003b38 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003b38:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003b3c:	4770      	bx	lr

08003b3e <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b3e:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003b40:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b42:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003b46:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003b48:	b510      	push	{r4, lr}
 8003b4a:	4604      	mov	r4, r0
        if (i >= 0)
 8003b4c:	db0e      	blt.n	8003b6c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003b4e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003b52:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b56:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b5a:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b5c:	b209      	sxth	r1, r1
 8003b5e:	4620      	mov	r0, r4
 8003b60:	4798      	blx	r3
 8003b62:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003b66:	fb02 3000 	mla	r0, r2, r0, r3
 8003b6a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b6c:	f06f 0001 	mvn.w	r0, #1
 8003b70:	fb00 2101 	mla	r1, r0, r1, r2
 8003b74:	3901      	subs	r1, #1
 8003b76:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b7a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b7e:	1049      	asrs	r1, r1, #1
 8003b80:	4249      	negs	r1, r1
 8003b82:	e7eb      	b.n	8003b5c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003b84 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003b84:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003b86:	4770      	bx	lr

08003b88 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003b88:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003b8a:	4770      	bx	lr

08003b8c <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003b8c:	6803      	ldr	r3, [r0, #0]
 8003b8e:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003b92:	4718      	bx	r3

08003b94 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003b94:	6803      	ldr	r3, [r0, #0]
 8003b96:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003b9a:	4718      	bx	r3

08003b9c <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003b9c:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003b9e:	6803      	ldr	r3, [r0, #0]
 8003ba0:	4351      	muls	r1, r2
 8003ba2:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003ba6:	4718      	bx	r3

08003ba8 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003ba8:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003baa:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003bac:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003bb0:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003bb4:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003bb8:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003bba:	4798      	blx	r3
 8003bbc:	462b      	mov	r3, r5
 8003bbe:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003bc2:	4620      	mov	r0, r4
    }
 8003bc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003bc8:	4718      	bx	r3

08003bca <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003bca:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003bce:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003bd2:	4293      	cmp	r3, r2
 8003bd4:	db07      	blt.n	8003be6 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003bd6:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003bda:	4419      	add	r1, r3
 8003bdc:	fb91 f0f2 	sdiv	r0, r1, r2
 8003be0:	fb02 1110 	mls	r1, r2, r0, r1
 8003be4:	b209      	sxth	r1, r1
    }
 8003be6:	4608      	mov	r0, r1
 8003be8:	4770      	bx	lr

08003bea <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003bea:	0148      	lsls	r0, r1, #5
 8003bec:	4770      	bx	lr

08003bee <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003bee:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003bf2:	4770      	bx	lr

08003bf4 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003bf4:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003bf8:	4770      	bx	lr

08003bfa <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003bfa:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003bfc:	2200      	movs	r2, #0
        return rect.width;
 8003bfe:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003c02:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003c06:	8002      	strh	r2, [r0, #0]
 8003c08:	8042      	strh	r2, [r0, #2]
 8003c0a:	8084      	strh	r4, [r0, #4]
 8003c0c:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003c0e:	bd10      	pop	{r4, pc}

08003c10 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003c10:	2200      	movs	r2, #0
 8003c12:	8002      	strh	r2, [r0, #0]
 8003c14:	8042      	strh	r2, [r0, #2]
 8003c16:	8082      	strh	r2, [r0, #4]
 8003c18:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003c1a:	4770      	bx	lr

08003c1c <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003c1c:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003c1e:	4770      	bx	lr

08003c20 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003c20:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003c22:	4770      	bx	lr

08003c24 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003c24:	2001      	movs	r0, #1
 8003c26:	4770      	bx	lr

08003c28 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003c28:	4770      	bx	lr

08003c2a <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003c2a:	4770      	bx	lr

08003c2c <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003c2c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003c2e:	b118      	cbz	r0, 8003c38 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003c30:	6803      	ldr	r3, [r0, #0]
 8003c32:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003c36:	4718      	bx	r3
    }
 8003c38:	4770      	bx	lr

08003c3a <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003c3a:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c3c:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003c40:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003c44:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c48:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003c4c:	8044      	strh	r4, [r0, #2]
 8003c4e:	4421      	add	r1, r4
 8003c50:	1a52      	subs	r2, r2, r1
 8003c52:	2100      	movs	r1, #0
 8003c54:	8001      	strh	r1, [r0, #0]
 8003c56:	8085      	strh	r5, [r0, #4]
 8003c58:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003c5a:	bd30      	pop	{r4, r5, pc}

08003c5c <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003c5c:	b510      	push	{r4, lr}
 8003c5e:	8042      	strh	r2, [r0, #2]
 8003c60:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003c64:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003c68:	8004      	strh	r4, [r0, #0]
 8003c6a:	8082      	strh	r2, [r0, #4]
 8003c6c:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003c6e:	bd10      	pop	{r4, pc}

08003c70 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003c70:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003c72:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003c74:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003c78:	4718      	bx	r3

08003c7a <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003c7a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003c7c:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003c7e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003c82:	4718      	bx	r3

08003c84 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003c84:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003c88:	4770      	bx	lr

08003c8a <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003c8a:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003c8e:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003c92:	4403      	add	r3, r0
 8003c94:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003c98:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003c9a:	b200      	sxth	r0, r0
 8003c9c:	4770      	bx	lr

08003c9e <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003c9e:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003ca2:	4770      	bx	lr

08003ca4 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003ca4:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003ca8:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003cac:	4403      	add	r3, r0
 8003cae:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003cb2:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003cb4:	b200      	sxth	r0, r0
 8003cb6:	4770      	bx	lr

08003cb8 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003cb8:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003cba:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003cbc:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003cc0:	4611      	mov	r1, r2
 8003cc2:	4718      	bx	r3

08003cc4 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003cc4:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003cc8:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003cca:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003cce:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003cd0:	186c      	adds	r4, r5, r1
 8003cd2:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003cd6:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003cda:	80c2      	strh	r2, [r0, #6]
 8003cdc:	1b09      	subs	r1, r1, r4
 8003cde:	2400      	movs	r4, #0
 8003ce0:	8044      	strh	r4, [r0, #2]
 8003ce2:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003ce4:	bd30      	pop	{r4, r5, pc}

08003ce6 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003ce6:	8002      	strh	r2, [r0, #0]
 8003ce8:	8083      	strh	r3, [r0, #4]
 8003cea:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003cee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003cf2:	8042      	strh	r2, [r0, #2]
 8003cf4:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003cf6:	4770      	bx	lr

08003cf8 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003cf8:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003cfa:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003cfc:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003d00:	4718      	bx	r3

08003d02 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003d02:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003d04:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003d06:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003d0a:	4718      	bx	r3

08003d0c <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003d0c:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003d10:	4770      	bx	lr

08003d12 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003d12:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003d16:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003d1a:	4403      	add	r3, r0
 8003d1c:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003d20:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003d22:	b200      	sxth	r0, r0
 8003d24:	4770      	bx	lr

08003d26 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003d26:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003d2a:	4770      	bx	lr

08003d2c <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d2c:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003d30:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003d34:	4403      	add	r3, r0
 8003d36:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003d3a:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003d3c:	b200      	sxth	r0, r0
 8003d3e:	4770      	bx	lr

08003d40 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003d40:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003d42:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003d44:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003d48:	4611      	mov	r1, r2
 8003d4a:	4718      	bx	r3

08003d4c <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003d4c:	4770      	bx	lr

08003d4e <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003d4e:	4770      	bx	lr

08003d50 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d50:	4770      	bx	lr

08003d52 <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003d52:	4770      	bx	lr

08003d54 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003d54:	4770      	bx	lr

08003d56 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003d56:	4770      	bx	lr

08003d58 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003d58:	4770      	bx	lr

08003d5a <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d5a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d5c:	68c2      	ldr	r2, [r0, #12]
 8003d5e:	6844      	ldr	r4, [r0, #4]
 8003d60:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003d62:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003d64:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003d68:	07d2      	lsls	r2, r2, #31
 8003d6a:	bf48      	it	mi
 8003d6c:	5962      	ldrmi	r2, [r4, r5]
 8003d6e:	689b      	ldr	r3, [r3, #8]
    }
 8003d70:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d72:	bf48      	it	mi
 8003d74:	58d3      	ldrmi	r3, [r2, r3]
 8003d76:	4718      	bx	r3

08003d78 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003d78:	6843      	ldr	r3, [r0, #4]
 8003d7a:	b12b      	cbz	r3, 8003d88 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003d7c:	6883      	ldr	r3, [r0, #8]
 8003d7e:	b92b      	cbnz	r3, 8003d8c <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003d80:	68c0      	ldr	r0, [r0, #12]
 8003d82:	f000 0001 	and.w	r0, r0, #1
 8003d86:	4770      	bx	lr
 8003d88:	4618      	mov	r0, r3
 8003d8a:	4770      	bx	lr
 8003d8c:	2001      	movs	r0, #1
    }
 8003d8e:	4770      	bx	lr

08003d90 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003d90:	b510      	push	{r4, lr}
 8003d92:	2140      	movs	r1, #64	; 0x40
 8003d94:	4604      	mov	r4, r0
 8003d96:	f01c fae5 	bl	8020364 <_ZdlPvj>
 8003d9a:	4620      	mov	r0, r4
 8003d9c:	bd10      	pop	{r4, pc}

08003d9e <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003d9e:	b510      	push	{r4, lr}
 8003da0:	2140      	movs	r1, #64	; 0x40
 8003da2:	4604      	mov	r4, r0
 8003da4:	f01c fade 	bl	8020364 <_ZdlPvj>
 8003da8:	4620      	mov	r0, r4
 8003daa:	bd10      	pop	{r4, pc}

08003dac <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003dac:	b510      	push	{r4, lr}
 8003dae:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003db2:	4604      	mov	r4, r0
 8003db4:	f01c fad6 	bl	8020364 <_ZdlPvj>
 8003db8:	4620      	mov	r0, r4
 8003dba:	bd10      	pop	{r4, pc}

08003dbc <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003dbc:	b510      	push	{r4, lr}
 8003dbe:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003dc2:	4604      	mov	r4, r0
 8003dc4:	f01c face 	bl	8020364 <_ZdlPvj>
 8003dc8:	4620      	mov	r0, r4
 8003dca:	bd10      	pop	{r4, pc}

08003dcc <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003dcc:	b510      	push	{r4, lr}
 8003dce:	2110      	movs	r1, #16
 8003dd0:	4604      	mov	r4, r0
 8003dd2:	f01c fac7 	bl	8020364 <_ZdlPvj>
 8003dd6:	4620      	mov	r0, r4
 8003dd8:	bd10      	pop	{r4, pc}

08003dda <_ZN19ScreenGraphViewBaseD0Ev>:
 8003dda:	b510      	push	{r4, lr}
 8003ddc:	f242 51c4 	movw	r1, #9668	; 0x25c4
 8003de0:	4604      	mov	r4, r0
 8003de2:	f01c fabf 	bl	8020364 <_ZdlPvj>
 8003de6:	4620      	mov	r0, r4
 8003de8:	bd10      	pop	{r4, pc}

08003dea <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003dea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003dee:	b10b      	cbz	r3, 8003df4 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003df0:	f006 bca5 	b.w	800a73e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003df4:	4770      	bx	lr

08003df6 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003df6:	b513      	push	{r0, r1, r4, lr}
 8003df8:	4603      	mov	r3, r0
 8003dfa:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003dfc:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003e00:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003e02:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003e04:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003e08:	4798      	blx	r3
 8003e0a:	9901      	ldr	r1, [sp, #4]
 8003e0c:	4602      	mov	r2, r0
 8003e0e:	4620      	mov	r0, r4
    }
 8003e10:	b002      	add	sp, #8
 8003e12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003e16:	f008 badb 	b.w	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003e1a <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003e1a:	b513      	push	{r0, r1, r4, lr}
 8003e1c:	4603      	mov	r3, r0
 8003e1e:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003e20:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e24:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003e26:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e28:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003e2c:	4798      	blx	r3
 8003e2e:	9901      	ldr	r1, [sp, #4]
 8003e30:	4602      	mov	r2, r0
 8003e32:	4620      	mov	r0, r4
    }
 8003e34:	b002      	add	sp, #8
 8003e36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e3a:	f008 bac9 	b.w	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003e40 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e40:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003e42:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003e44:	db03      	blt.n	8003e4e <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003e46:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003e4a:	4294      	cmp	r4, r2
 8003e4c:	dc06      	bgt.n	8003e5c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003e4e:	4b08      	ldr	r3, [pc, #32]	; (8003e70 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003e50:	4a08      	ldr	r2, [pc, #32]	; (8003e74 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003e52:	4809      	ldr	r0, [pc, #36]	; (8003e78 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003e54:	f240 6133 	movw	r1, #1587	; 0x633
 8003e58:	f01c fb38 	bl	80204cc <__assert_func>
        return yValues[dataIndex(index)];
 8003e5c:	6803      	ldr	r3, [r0, #0]
 8003e5e:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003e62:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003e66:	4798      	blx	r3
    }
 8003e68:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003e6c:	bd10      	pop	{r4, pc}
 8003e6e:	bf00      	nop
 8003e70:	080228fc 	.word	0x080228fc
 8003e74:	0802291f 	.word	0x0802291f
 8003e78:	0802296e 	.word	0x0802296e

08003e7c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e7c:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003e7e:	b510      	push	{r4, lr}
 8003e80:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003e82:	db03      	blt.n	8003e8c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003e84:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003e88:	429a      	cmp	r2, r3
 8003e8a:	dc06      	bgt.n	8003e9a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003e8c:	4b07      	ldr	r3, [pc, #28]	; (8003eac <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003e8e:	4a08      	ldr	r2, [pc, #32]	; (8003eb0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003e90:	4808      	ldr	r0, [pc, #32]	; (8003eb4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003e92:	f240 612d 	movw	r1, #1581	; 0x62d
 8003e96:	f01c fb19 	bl	80204cc <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003e9a:	6803      	ldr	r3, [r0, #0]
 8003e9c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003ea0:	4798      	blx	r3
 8003ea2:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003ea6:	fb02 3000 	mla	r0, r2, r0, r3
 8003eaa:	bd10      	pop	{r4, pc}
 8003eac:	080228fc 	.word	0x080228fc
 8003eb0:	080229cb 	.word	0x080229cb
 8003eb4:	0802296e 	.word	0x0802296e

08003eb8 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003eb8:	f100 03cc 	add.w	r3, r0, #204	; 0xcc
 8003ebc:	4299      	cmp	r1, r3
{
 8003ebe:	b510      	push	{r4, lr}
 8003ec0:	4604      	mov	r4, r0
    if (&src == &button1)
 8003ec2:	d105      	bne.n	8003ed0 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
     */
    virtual void action1();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003ec4:	f00c ff32 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
        dynamicGraph1.invalidate();
        dynamicGraph2.invalidate();
    }
}
 8003ec8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003ecc:	f7fe bb46 	b.w	800255c <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
    else if (&src == &toggleButton1)
 8003ed0:	f500 538a 	add.w	r3, r0, #4416	; 0x1140
 8003ed4:	331c      	adds	r3, #28
 8003ed6:	4299      	cmp	r1, r3
 8003ed8:	d115      	bne.n	8003f06 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4e>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003eda:	f890 3db1 	ldrb.w	r3, [r0, #3505]	; 0xdb1
 8003ede:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003ee2:	f880 3db1 	strb.w	r3, [r0, #3505]	; 0xdb1
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003ee6:	f890 3125 	ldrb.w	r3, [r0, #293]	; 0x125
 8003eea:	f083 0301 	eor.w	r3, r3, #1
 8003eee:	f880 3125 	strb.w	r3, [r0, #293]	; 0x125
        dynamicGraph1.invalidate();
 8003ef2:	f600 508c 	addw	r0, r0, #3468	; 0xd8c
 8003ef6:	f00d feb0 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003efa:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 8003efe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dynamicGraph2.invalidate();
 8003f02:	f00d beaa 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8003f06:	bd10      	pop	{r4, pc}

08003f08 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8003f08:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8003f0a:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8003f0c:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8003f0e:	2100      	movs	r1, #0
 8003f10:	f01c fc62 	bl	80207d8 <memset>
 8003f14:	4620      	mov	r0, r4
 8003f16:	f7fe fee3 	bl	8002ce0 <_ZN8touchgfx6WidgetC1Ev>
 8003f1a:	4b05      	ldr	r3, [pc, #20]	; (8003f30 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8003f1c:	6023      	str	r3, [r4, #0]
 8003f1e:	2300      	movs	r3, #0
 8003f20:	62a3      	str	r3, [r4, #40]	; 0x28
 8003f22:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8003f26:	2301      	movs	r3, #1
 8003f28:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8003f2c:	4620      	mov	r0, r4
 8003f2e:	bd10      	pop	{r4, pc}
 8003f30:	08023b5c 	.word	0x08023b5c

08003f34 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003f34:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003f36:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003f38:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003f3a:	f00e f830 	bl	8011f9e <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003f3e:	2800      	cmp	r0, #0
 8003f40:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f44:	9901      	ldr	r1, [sp, #4]
 8003f46:	462a      	mov	r2, r5
 8003f48:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003f4c:	db04      	blt.n	8003f58 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f4e:	f00e f845 	bl	8011fdc <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003f52:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003f54:	b003      	add	sp, #12
 8003f56:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f58:	f00e f840 	bl	8011fdc <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003f5c:	1a20      	subs	r0, r4, r0
 8003f5e:	e7f9      	b.n	8003f54 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003f60 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f60:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003f62:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003f66:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003f6a:	1963      	adds	r3, r4, r5
 8003f6c:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003f70:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f72:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f76:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f78:	b22d      	sxth	r5, r5
 8003f7a:	1ad2      	subs	r2, r2, r3
 8003f7c:	1e69      	subs	r1, r5, #1
 8003f7e:	1af0      	subs	r0, r6, r3
 8003f80:	f7ff ffd8 	bl	8003f34 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003f84:	442c      	add	r4, r5
 8003f86:	3c01      	subs	r4, #1
    }
 8003f88:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003f8c:	bd70      	pop	{r4, r5, r6, pc}

08003f8e <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003f8e:	b538      	push	{r3, r4, r5, lr}
 8003f90:	4604      	mov	r4, r0
 8003f92:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003f94:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003f98:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003f9c:	440b      	add	r3, r1
 8003f9e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003fa2:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003fa6:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003fa8:	b209      	sxth	r1, r1
 8003faa:	1b52      	subs	r2, r2, r5
 8003fac:	3901      	subs	r1, #1
 8003fae:	1b40      	subs	r0, r0, r5
 8003fb0:	f7ff ffc0 	bl	8003f34 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003fb4:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003fb8:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003fbc:	bd38      	pop	{r3, r4, r5, pc}
	...

08003fc0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003fc0:	b510      	push	{r4, lr}
 8003fc2:	4604      	mov	r4, r0
        : CanvasWidget()
 8003fc4:	f007 fdec 	bl	800bba0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003fc8:	4a06      	ldr	r2, [pc, #24]	; (8003fe4 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003fca:	6022      	str	r2, [r4, #0]
        : color(col)
 8003fcc:	2300      	movs	r3, #0
 8003fce:	2201      	movs	r2, #1
 8003fd0:	210a      	movs	r1, #10
 8003fd2:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003fd6:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003fd8:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003fdc:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003fde:	4620      	mov	r0, r4
 8003fe0:	bd10      	pop	{r4, pc}
 8003fe2:	bf00      	nop
 8003fe4:	080238c4 	.word	0x080238c4

08003fe8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003fe8:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003fea:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003fec:	4e12      	ldr	r6, [pc, #72]	; (8004038 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003fee:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003ff0:	4b12      	ldr	r3, [pc, #72]	; (800403c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003ff2:	6003      	str	r3, [r0, #0]
 8003ff4:	6833      	ldr	r3, [r6, #0]
 8003ff6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003ffa:	4605      	mov	r5, r0
 8003ffc:	b10a      	cbz	r2, 8004002 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003ffe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004000:	b900      	cbnz	r0, 8004004 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8004002:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8004004:	6803      	ldr	r3, [r0, #0]
 8004006:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004008:	4798      	blx	r3
        return auxiliaryLCD;
 800400a:	6833      	ldr	r3, [r6, #0]
 800400c:	fab0 f480 	clz	r4, r0
 8004010:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004012:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8004014:	b130      	cbz	r0, 8004024 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8004016:	6803      	ldr	r3, [r0, #0]
 8004018:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800401a:	4798      	blx	r3
 800401c:	2800      	cmp	r0, #0
 800401e:	bf08      	it	eq
 8004020:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8004024:	b92c      	cbnz	r4, 8004032 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8004026:	4b06      	ldr	r3, [pc, #24]	; (8004040 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8004028:	4a06      	ldr	r2, [pc, #24]	; (8004044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800402a:	4807      	ldr	r0, [pc, #28]	; (8004048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800402c:	212c      	movs	r1, #44	; 0x2c
 800402e:	f01c fa4d 	bl	80204cc <__assert_func>
    }
 8004032:	4628      	mov	r0, r5
 8004034:	bd70      	pop	{r4, r5, r6, pc}
 8004036:	bf00      	nop
 8004038:	200153e4 	.word	0x200153e4
 800403c:	08022c8c 	.word	0x08022c8c
 8004040:	08022a1a 	.word	0x08022a1a
 8004044:	08022a78 	.word	0x08022a78
 8004048:	08022ab1 	.word	0x08022ab1

0800404c <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 800404c:	b510      	push	{r4, lr}
 800404e:	4604      	mov	r4, r0
        : CanvasWidget()
 8004050:	f007 fda6 	bl	800bba0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8004054:	4a0a      	ldr	r2, [pc, #40]	; (8004080 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8004056:	6022      	str	r2, [r4, #0]
 8004058:	2300      	movs	r3, #0
 800405a:	2201      	movs	r2, #1
 800405c:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8004060:	4a08      	ldr	r2, [pc, #32]	; (8004084 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8004062:	63a2      	str	r2, [r4, #56]	; 0x38
 8004064:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004068:	87a2      	strh	r2, [r4, #60]	; 0x3c
 800406a:	222e      	movs	r2, #46	; 0x2e
 800406c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800406e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8004072:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8004076:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 800407a:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 800407c:	4620      	mov	r0, r4
 800407e:	bd10      	pop	{r4, pc}
 8004080:	08023abc 	.word	0x08023abc
 8004084:	08021e48 	.word	0x08021e48

08004088 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8004088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800408c:	ed2d 8b10 	vpush	{d8-d15}
 8004090:	4604      	mov	r4, r0
 8004092:	b093      	sub	sp, #76	; 0x4c
 8004094:	f00e f94c 	bl	8012330 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8004098:	4622      	mov	r2, r4
 800409a:	2600      	movs	r6, #0
 800409c:	4beb      	ldr	r3, [pc, #940]	; (800444c <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 800409e:	63e6      	str	r6, [r4, #60]	; 0x3c
 80040a0:	f842 3b40 	str.w	r3, [r2], #64
 80040a4:	4610      	mov	r0, r2
 80040a6:	ee0a 2a90 	vmov	s21, r2
 80040aa:	f7fe fe2b 	bl	8002d04 <_ZN8touchgfx3BoxC1Ev>
 80040ae:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80040b2:	ee08 3a90 	vmov	s17, r3
 80040b6:	f64f 78ff 	movw	r8, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80040ba:	2226      	movs	r2, #38	; 0x26
 80040bc:	4631      	mov	r1, r6
 80040be:	4618      	mov	r0, r3
 80040c0:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
 80040c4:	f01c fb88 	bl	80207d8 <memset>
 80040c8:	ee18 0a90 	vmov	r0, s17
 80040cc:	f7fe fe08 	bl	8002ce0 <_ZN8touchgfx6WidgetC1Ev>
 80040d0:	4bdf      	ldr	r3, [pc, #892]	; (8004450 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 80040d2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80040d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80040d8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80040dc:	a910      	add	r1, sp, #64	; 0x40
 80040de:	ee18 0a90 	vmov	r0, s17
        : Widget(), bitmap(bmp), alpha(255)
 80040e2:	f884 8094 	strb.w	r8, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80040e6:	f00a f973 	bl	800e3d0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80040ea:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 80040ee:	4618      	mov	r0, r3
 80040f0:	ee0b 3a90 	vmov	s23, r3
 80040f4:	f7fe fe06 	bl	8002d04 <_ZN8touchgfx3BoxC1Ev>
 80040f8:	4bd6      	ldr	r3, [pc, #856]	; (8004454 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80040fa:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80040fe:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8004102:	4618      	mov	r0, r3
 8004104:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 8004108:	f8a4 60c8 	strh.w	r6, [r4, #200]	; 0xc8
 800410c:	f504 7780 	add.w	r7, r4, #256	; 0x100
 8004110:	ee0b 3a10 	vmov	s22, r3
 8004114:	f7ff fef8 	bl	8003f08 <_ZN8touchgfx14AbstractButtonC1Ev>
 8004118:	4bcf      	ldr	r3, [pc, #828]	; (8004458 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 800411a:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 800411e:	f8a4 80fa 	strh.w	r8, [r4, #250]	; 0xfa
 8004122:	f8a4 80fc 	strh.w	r8, [r4, #252]	; 0xfc
 8004126:	f884 80fe 	strb.w	r8, [r4, #254]	; 0xfe
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800412a:	f44f 7116 	mov.w	r1, #600	; 0x258
 800412e:	4638      	mov	r0, r7
 8004130:	f008 f8ea 	bl	800c308 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004134:	2301      	movs	r3, #1
 8004136:	4dc9      	ldr	r5, [pc, #804]	; (800445c <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8004138:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 800413c:	e9c4 368f 	strd	r3, r6, [r4, #572]	; 0x23c
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8004140:	f504 7314 	add.w	r3, r4, #592	; 0x250
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004144:	4631      	mov	r1, r6
 8004146:	f240 2257 	movw	r2, #599	; 0x257
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800414a:	e9c4 3691 	strd	r3, r6, [r4, #580]	; 0x244
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800414e:	4638      	mov	r0, r7
 8004150:	f7ff fa28 	bl	80035a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004154:	4bc2      	ldr	r3, [pc, #776]	; (8004460 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8004156:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800415a:	f504 633b 	add.w	r3, r4, #2992	; 0xbb0
 800415e:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8004160:	f8a4 624c 	strh.w	r6, [r4, #588]	; 0x24c
 8004164:	ee0d 3a10 	vmov	s26, r3
 8004168:	f007 fd1a 	bl	800bba0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 800416c:	f04f 0202 	mov.w	r2, #2
 8004170:	4bbc      	ldr	r3, [pc, #752]	; (8004464 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 8004172:	f884 2bdc 	strb.w	r2, [r4, #3036]	; 0xbdc
 8004176:	f504 623e 	add.w	r2, r4, #3040	; 0xbe0
 800417a:	f8c4 3bb0 	str.w	r3, [r4, #2992]	; 0xbb0
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800417e:	4610      	mov	r0, r2
 8004180:	9208      	str	r2, [sp, #32]
 8004182:	f7ff ff31 	bl	8003fe8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004186:	4bb8      	ldr	r3, [pc, #736]	; (8004468 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8004188:	f8c4 3be0 	str.w	r3, [r4, #3040]	; 0xbe0
 800418c:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004190:	f604 31f4 	addw	r1, r4, #3060	; 0xbf4
 8004194:	f8c4 2be8 	str.w	r2, [r4, #3048]	; 0xbe8
class GraphElementGridX : public GraphElementGridBase
 8004198:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800419a:	f8c4 6bec 	str.w	r6, [r4, #3052]	; 0xbec
 800419e:	f8df a2e4 	ldr.w	sl, [pc, #740]	; 8004484 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
class GraphElementGridY : public GraphElementGridBase
 80041a2:	f8df 92e4 	ldr.w	r9, [pc, #740]	; 8004488 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 80041a6:	ee0d 1a90 	vmov	s27, r1
class GraphElementGridX : public GraphElementGridBase
 80041aa:	f7ff ff09 	bl	8003fc0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80041ae:	f604 4134 	addw	r1, r4, #3124	; 0xc34
 80041b2:	f8c4 abf4 	str.w	sl, [r4, #3060]	; 0xbf4
class GraphElementGridY : public GraphElementGridBase
 80041b6:	4608      	mov	r0, r1
 80041b8:	ee0e 1a10 	vmov	s28, r1
 80041bc:	f7ff ff00 	bl	8003fc0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80041c0:	f604 4174 	addw	r1, r4, #3188	; 0xc74
 80041c4:	f8c4 9c34 	str.w	r9, [r4, #3124]	; 0xc34
class GraphElementGridX : public GraphElementGridBase
 80041c8:	4608      	mov	r0, r1
 80041ca:	ee0c 1a10 	vmov	s24, r1
 80041ce:	f7ff fef7 	bl	8003fc0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80041d2:	f604 41b4 	addw	r1, r4, #3252	; 0xcb4
 80041d6:	f8c4 ac74 	str.w	sl, [r4, #3188]	; 0xc74
class GraphElementGridY : public GraphElementGridBase
 80041da:	4608      	mov	r0, r1
 80041dc:	ee0c 1a90 	vmov	s25, r1
 80041e0:	f7ff feee 	bl	8003fc0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80041e4:	f604 41f4 	addw	r1, r4, #3316	; 0xcf4
 80041e8:	f8c4 9cb4 	str.w	r9, [r4, #3252]	; 0xcb4

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 80041ec:	4608      	mov	r0, r1
 80041ee:	ee0e 1a90 	vmov	s29, r1
 80041f2:	f7ff ff2b 	bl	800404c <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80041f6:	4a9d      	ldr	r2, [pc, #628]	; (800446c <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 80041f8:	f8c4 2cf4 	str.w	r2, [r4, #3316]	; 0xcf4
 80041fc:	f504 6154 	add.w	r1, r4, #3392	; 0xd40

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8004200:	4608      	mov	r0, r1
 8004202:	f604 5b8c 	addw	fp, r4, #3468	; 0xd8c
 8004206:	ee0f 1a10 	vmov	s30, r1
 800420a:	f7ff ff1f 	bl	800404c <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800420e:	4998      	ldr	r1, [pc, #608]	; (8004470 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8004210:	f8c4 1d40 	str.w	r1, [r4, #3392]	; 0xd40
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004214:	4658      	mov	r0, fp
 8004216:	213c      	movs	r1, #60	; 0x3c
 8004218:	f008 f876 	bl	800c308 <_ZN8touchgfx17AbstractDataGraphC1Es>
 800421c:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 800421e:	f604 62dc 	addw	r2, r4, #3804	; 0xedc
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004222:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004224:	f8c4 5d8c 	str.w	r5, [r4, #3468]	; 0xd8c
 8004228:	f8c4 0ec8 	str.w	r0, [r4, #3784]	; 0xec8
 800422c:	f8c4 2ed0 	str.w	r2, [r4, #3792]	; 0xed0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004230:	4658      	mov	r0, fp
 8004232:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004234:	f8c4 6ecc 	str.w	r6, [r4, #3788]	; 0xecc
 8004238:	f8c4 6ed4 	str.w	r6, [r4, #3796]	; 0xed4
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800423c:	f7ff f9b2 	bl	80035a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004240:	4a8c      	ldr	r2, [pc, #560]	; (8004474 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8004242:	f8c4 2d8c 	str.w	r2, [r4, #3468]	; 0xd8c
 8004246:	f604 70cc 	addw	r0, r4, #4044	; 0xfcc
        : DynamicDataGraph(capacity, values), current(0)
 800424a:	f8a4 6ed8 	strh.w	r6, [r4, #3800]	; 0xed8
 800424e:	ee0f 0a90 	vmov	s31, r0
        : CanvasWidget()
 8004252:	f007 fca5 	bl	800bba0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 8004256:	4b83      	ldr	r3, [pc, #524]	; (8004464 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 8004258:	f8c4 3fcc 	str.w	r3, [r4, #4044]	; 0xfcc
 800425c:	f04f 0302 	mov.w	r3, #2
 8004260:	f884 3ff8 	strb.w	r3, [r4, #4088]	; 0xff8
 8004264:	f604 73fc 	addw	r3, r4, #4092	; 0xffc
 8004268:	4618      	mov	r0, r3
 800426a:	f504 5580 	add.w	r5, r4, #4096	; 0x1000
 800426e:	9309      	str	r3, [sp, #36]	; 0x24
 8004270:	f7ff feba 	bl	8003fe8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004274:	4b7c      	ldr	r3, [pc, #496]	; (8004468 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8004276:	60ae      	str	r6, [r5, #8]
 8004278:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800427c:	f8c4 3ffc 	str.w	r3, [r4, #4092]	; 0xffc
 8004280:	462b      	mov	r3, r5
 8004282:	3310      	adds	r3, #16
 8004284:	606a      	str	r2, [r5, #4]
class GraphElementGridX : public GraphElementGridBase
 8004286:	4618      	mov	r0, r3
 8004288:	9304      	str	r3, [sp, #16]
 800428a:	f7ff fe99 	bl	8003fc0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800428e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8004292:	3310      	adds	r3, #16
 8004294:	f8c5 a010 	str.w	sl, [r5, #16]
class GraphElementGridY : public GraphElementGridBase
 8004298:	4618      	mov	r0, r3
 800429a:	9305      	str	r3, [sp, #20]
 800429c:	f7ff fe90 	bl	8003fc0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042a0:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 80042a4:	3310      	adds	r3, #16
 80042a6:	f8c5 9050 	str.w	r9, [r5, #80]	; 0x50
class GraphElementGridX : public GraphElementGridBase
 80042aa:	4618      	mov	r0, r3
 80042ac:	9302      	str	r3, [sp, #8]
 80042ae:	f7ff fe87 	bl	8003fc0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042b2:	f504 5386 	add.w	r3, r4, #4288	; 0x10c0
 80042b6:	3310      	adds	r3, #16
 80042b8:	f8c5 a090 	str.w	sl, [r5, #144]	; 0x90
class GraphElementGridY : public GraphElementGridBase
 80042bc:	4618      	mov	r0, r3
 80042be:	9303      	str	r3, [sp, #12]
 80042c0:	f7ff fe7e 	bl	8003fc0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042c4:	f504 5388 	add.w	r3, r4, #4352	; 0x1100
 80042c8:	3310      	adds	r3, #16
 80042ca:	f8c5 90d0 	str.w	r9, [r5, #208]	; 0xd0
 80042ce:	4618      	mov	r0, r3
 80042d0:	9306      	str	r3, [sp, #24]
 80042d2:	f7ff febb 	bl	800404c <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80042d6:	f504 538a 	add.w	r3, r4, #4416	; 0x1140
 80042da:	4965      	ldr	r1, [pc, #404]	; (8004470 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 80042dc:	f8c5 1110 	str.w	r1, [r5, #272]	; 0x110
 80042e0:	331c      	adds	r3, #28
 80042e2:	4618      	mov	r0, r3
 80042e4:	ee09 3a10 	vmov	s18, r3
 80042e8:	f7ff fe0e 	bl	8003f08 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80042ec:	4b62      	ldr	r3, [pc, #392]	; (8004478 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 80042ee:	f8c5 315c 	str.w	r3, [r5, #348]	; 0x15c
 80042f2:	f504 538c 	add.w	r3, r4, #4480	; 0x1180
 80042f6:	3314      	adds	r3, #20
 80042f8:	f504 5a8e 	add.w	sl, r4, #4544	; 0x11c0
 80042fc:	f10a 0a1c 	add.w	sl, sl, #28
 8004300:	4618      	mov	r0, r3
 8004302:	f8a5 818a 	strh.w	r8, [r5, #394]	; 0x18a
 8004306:	f8a5 818c 	strh.w	r8, [r5, #396]	; 0x18c
 800430a:	f885 818e 	strb.w	r8, [r5, #398]	; 0x18e
 800430e:	f8a5 8190 	strh.w	r8, [r5, #400]	; 0x190
 8004312:	ee08 3a10 	vmov	s16, r3
 8004316:	f7fe fd23 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 800431a:	4650      	mov	r0, sl
 800431c:	f7fe fd20 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
 8004320:	f504 5391 	add.w	r3, r4, #4640	; 0x1220
        : TextAreaWithWildcardBase(), wc1(0)
 8004324:	f8df 8164 	ldr.w	r8, [pc, #356]	; 800448c <_ZN19ScreenGraphViewBaseC1Ev+0x404>
 8004328:	f8c5 81dc 	str.w	r8, [r5, #476]	; 0x1dc
 800432c:	3308      	adds	r3, #8
        : TextArea()
 800432e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004330:	f8c5 6224 	str.w	r6, [r5, #548]	; 0x224
 8004334:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8004338:	f7fe fd12 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
 800433c:	f504 5393 	add.w	r3, r4, #4704	; 0x1260
 8004340:	3314      	adds	r3, #20
        : TextAreaWithWildcardBase(), wc1(0)
 8004342:	f8c5 8228 	str.w	r8, [r5, #552]	; 0x228
        : TextArea()
 8004346:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004348:	f8c5 6270 	str.w	r6, [r5, #624]	; 0x270
 800434c:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8004350:	f7fe fd06 	bl	8002d60 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004354:	4b49      	ldr	r3, [pc, #292]	; (800447c <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
        : TextAreaWithWildcardBase(), wc1(0)
 8004356:	f8c5 8274 	str.w	r8, [r5, #628]	; 0x274
 800435a:	e9c5 34bd 	strd	r3, r4, [r5, #756]	; 0x2f4
 800435e:	4b48      	ldr	r3, [pc, #288]	; (8004480 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>)
 8004360:	f8c5 62bc 	str.w	r6, [r5, #700]	; 0x2bc
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004364:	f504 5098 	add.w	r0, r4, #4864	; 0x1300
 8004368:	e9c5 36bf 	strd	r3, r6, [r5, #764]	; 0x2fc
 800436c:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004370:	3004      	adds	r0, #4
 8004372:	f00b f81b 	bl	800f3ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004376:	23f0      	movs	r3, #240	; 0xf0
 8004378:	ee1a 0a90 	vmov	r0, s21
 800437c:	9300      	str	r3, [sp, #0]
 800437e:	4632      	mov	r2, r6
 8004380:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004384:	4631      	mov	r1, r6
 8004386:	f7fe fc98 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800438a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 800438e:	f06f 0216 	mvn.w	r2, #22
 8004392:	ee18 0a90 	vmov	r0, s17
 8004396:	66a3      	str	r3, [r4, #104]	; 0x68
 8004398:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 800439c:	f7fe fc4e 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
 80043a0:	f04f 0304 	mov.w	r3, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 80043a4:	ee18 0a90 	vmov	r0, s17
 80043a8:	a910      	add	r1, sp, #64	; 0x40
 80043aa:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 80043ae:	f00a f80f 	bl	800e3d0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 80043b2:	23a6      	movs	r3, #166	; 0xa6
 80043b4:	ee1b 0a90 	vmov	r0, s23
 80043b8:	9300      	str	r3, [sp, #0]
 80043ba:	4632      	mov	r2, r6
 80043bc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80043c0:	4631      	mov	r1, r6
 80043c2:	f7fe fc7a 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80043c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderSize = size;
 80043ca:	f04f 0101 	mov.w	r1, #1
        borderColor = colorBorder;
 80043ce:	f04f 32ff 	mov.w	r2, #4294967295
 80043d2:	e9c4 2330 	strd	r2, r3, [r4, #192]	; 0xc0
        borderSize = size;
 80043d6:	4688      	mov	r8, r1
    button1.setXY(187, 189);
 80043d8:	ee1b 0a10 	vmov	r0, s22
 80043dc:	f8a4 10c8 	strh.w	r1, [r4, #200]	; 0xc8
 80043e0:	22bd      	movs	r2, #189	; 0xbd
 80043e2:	21bb      	movs	r1, #187	; 0xbb
 80043e4:	f7fe fc2a 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
 80043e8:	f04f 0102 	mov.w	r1, #2
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80043ec:	ee1b 0a10 	vmov	r0, s22
 80043f0:	f8ad 1040 	strh.w	r1, [sp, #64]	; 0x40
 80043f4:	aa10      	add	r2, sp, #64	; 0x40
 80043f6:	a90f      	add	r1, sp, #60	; 0x3c
 80043f8:	f8ad 803c 	strh.w	r8, [sp, #60]	; 0x3c
 80043fc:	f009 fdc5 	bl	800df8a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8004400:	f504 5397 	add.w	r3, r4, #4832	; 0x12e0
 8004404:	3314      	adds	r3, #20
        action = &callback;
 8004406:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
    dynamicGraph2.setScale(1000);
 800440a:	4632      	mov	r2, r6
 800440c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004410:	4638      	mov	r0, r7
    button1.setAction(buttonCallback);
 8004412:	9307      	str	r3, [sp, #28]
    dynamicGraph2.setScale(1000);
 8004414:	f7ff fa7a 	bl	800390c <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 8004418:	220a      	movs	r2, #10
 800441a:	4631      	mov	r1, r6
 800441c:	4638      	mov	r0, r7
 800441e:	f7ff f8c1 	bl	80035a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 8004422:	23a6      	movs	r3, #166	; 0xa6
 8004424:	9300      	str	r3, [sp, #0]
 8004426:	4632      	mov	r2, r6
 8004428:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800442c:	4631      	mov	r1, r6
 800442e:	4638      	mov	r0, r7
 8004430:	f7fe fc43 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 8004434:	230f      	movs	r3, #15
 8004436:	9300      	str	r3, [sp, #0]
 8004438:	2214      	movs	r2, #20
 800443a:	2305      	movs	r3, #5
 800443c:	2106      	movs	r1, #6
 800443e:	4638      	mov	r0, r7
 8004440:	f007 ff14 	bl	800c26c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004444:	4633      	mov	r3, r6
 8004446:	4632      	mov	r2, r6
 8004448:	e022      	b.n	8004490 <_ZN19ScreenGraphViewBaseC1Ev+0x408>
 800444a:	bf00      	nop
 800444c:	08022ffc 	.word	0x08022ffc
 8004450:	08023e14 	.word	0x08023e14
 8004454:	08023dac 	.word	0x08023dac
 8004458:	08023d38 	.word	0x08023d38
 800445c:	08023570 	.word	0x08023570
 8004460:	08022cac 	.word	0x08022cac
 8004464:	08023848 	.word	0x08023848
 8004468:	080234c0 	.word	0x080234c0
 800446c:	0802397c 	.word	0x0802397c
 8004470:	08023a1c 	.word	0x08023a1c
 8004474:	08022e48 	.word	0x08022e48
 8004478:	08023bcc 	.word	0x08023bcc
 800447c:	08022fe4 	.word	0x08022fe4
 8004480:	08003eb9 	.word	0x08003eb9
 8004484:	08022b1c 	.word	0x08022b1c
 8004488:	08022bd4 	.word	0x08022bd4
 800448c:	080226c0 	.word	0x080226c0
 8004490:	4631      	mov	r1, r6
 8004492:	4638      	mov	r0, r7
 8004494:	9600      	str	r6, [sp, #0]
 8004496:	f007 fdec 	bl	800c072 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 800449a:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800449e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80044a2:	4638      	mov	r0, r7
 80044a4:	f7ff f914 	bl	80036d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80044a8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80044ac:	f8d4 1c24 	ldr.w	r1, [r4, #3108]	; 0xc24
 80044b0:	f8d4 0c28 	ldr.w	r0, [r4, #3112]	; 0xc28
        visible = vis;
 80044b4:	f884 6125 	strb.w	r6, [r4, #293]	; 0x125
 80044b8:	f007 ff8a 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 80044bc:	ee1c 3a10 	vmov	r3, s24
        dataScale = scale;
 80044c0:	f44f 787a 	mov.w	r8, #1000	; 0x3e8
        color = newColor;
 80044c4:	f8df 94ec 	ldr.w	r9, [pc, #1260]	; 80049b4 <_ZN19ScreenGraphViewBaseC1Ev+0x92c>
        majorGrid = &major;
 80044c8:	f8c4 3c30 	str.w	r3, [r4, #3120]	; 0xc30
        lineWidth = width;
 80044cc:	f04f 0101 	mov.w	r1, #1
        dataScale = scale;
 80044d0:	f8c4 8c24 	str.w	r8, [r4, #3108]	; 0xc24
        color = newColor;
 80044d4:	f8c4 9c20 	str.w	r9, [r4, #3104]	; 0xc20
        gridInterval = abs(interval);
 80044d8:	f8c4 8c28 	str.w	r8, [r4, #3112]	; 0xc28
        lineWidth = width;
 80044dc:	f884 1c2c 	strb.w	r1, [r4, #3116]	; 0xc2c
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 80044e0:	4638      	mov	r0, r7
 80044e2:	ee1d 1a90 	vmov	r1, s27
 80044e6:	f007 fdcf 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80044ea:	4642      	mov	r2, r8
 80044ec:	f8d4 1c64 	ldr.w	r1, [r4, #3172]	; 0xc64
 80044f0:	f8d4 0c68 	ldr.w	r0, [r4, #3176]	; 0xc68
 80044f4:	f007 ff6c 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 80044f8:	234b      	movs	r3, #75	; 0x4b
 80044fa:	f8c4 3c68 	str.w	r3, [r4, #3176]	; 0xc68
        majorGrid = &major;
 80044fe:	ee1c 3a90 	vmov	r3, s25
        lineWidth = width;
 8004502:	f04f 0101 	mov.w	r1, #1
        majorGrid = &major;
 8004506:	f8c4 3c70 	str.w	r3, [r4, #3184]	; 0xc70
        dataScale = scale;
 800450a:	f8c4 8c64 	str.w	r8, [r4, #3172]	; 0xc64
        color = newColor;
 800450e:	f8c4 9c60 	str.w	r9, [r4, #3168]	; 0xc60
        lineWidth = width;
 8004512:	f884 1c6c 	strb.w	r1, [r4, #3180]	; 0xc6c
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 8004516:	4638      	mov	r0, r7
 8004518:	ee1e 1a10 	vmov	r1, s28
 800451c:	f007 fdb4 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004520:	4642      	mov	r2, r8
 8004522:	f8d4 1ca4 	ldr.w	r1, [r4, #3236]	; 0xca4
 8004526:	f8d4 0ca8 	ldr.w	r0, [r4, #3240]	; 0xca8
 800452a:	f007 ff51 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800452e:	f04f 0302 	mov.w	r3, #2
 8004532:	f884 3cac 	strb.w	r3, [r4, #3244]	; 0xcac
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 8004536:	ee1c 1a10 	vmov	r1, s24
        dataScale = scale;
 800453a:	f8c4 8ca4 	str.w	r8, [r4, #3236]	; 0xca4
        color = newColor;
 800453e:	f8c4 9ca0 	str.w	r9, [r4, #3232]	; 0xca0
        gridInterval = abs(interval);
 8004542:	f8c4 8ca8 	str.w	r8, [r4, #3240]	; 0xca8
 8004546:	4638      	mov	r0, r7
 8004548:	f007 fd9e 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800454c:	4642      	mov	r2, r8
 800454e:	f8d4 1ce4 	ldr.w	r1, [r4, #3300]	; 0xce4
 8004552:	f8d4 0ce8 	ldr.w	r0, [r4, #3304]	; 0xce8
 8004556:	f007 ff3b 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800455a:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 800455e:	2196      	movs	r1, #150	; 0x96
        lineWidth = width;
 8004560:	f884 3cec 	strb.w	r3, [r4, #3308]	; 0xcec
        dataScale = scale;
 8004564:	f8c4 8ce4 	str.w	r8, [r4, #3300]	; 0xce4
        color = newColor;
 8004568:	f8c4 9ce0 	str.w	r9, [r4, #3296]	; 0xce0
        gridInterval = abs(interval);
 800456c:	f8c4 1ce8 	str.w	r1, [r4, #3304]	; 0xce8
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 8004570:	4638      	mov	r0, r7
 8004572:	ee1c 1a90 	vmov	r1, s25
 8004576:	f007 fd87 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800457a:	4642      	mov	r2, r8
 800457c:	f8d4 1d24 	ldr.w	r1, [r4, #3364]	; 0xd24
 8004580:	f8d4 0d28 	ldr.w	r0, [r4, #3368]	; 0xd28
 8004584:	f007 ff24 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 8004588:	f04f 0204 	mov.w	r2, #4
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 800458c:	ee1e 1a90 	vmov	r1, s29
        dataScale = scale;
 8004590:	f8c4 8d24 	str.w	r8, [r4, #3364]	; 0xd24
        labelInterval = abs(interval);
 8004594:	f8c4 8d28 	str.w	r8, [r4, #3368]	; 0xd28
 8004598:	f8a4 2d30 	strh.w	r2, [r4, #3376]	; 0xd30
        color = newColor;
 800459c:	f8c4 9d20 	str.w	r9, [r4, #3360]	; 0xd20
 80045a0:	4638      	mov	r0, r7
 80045a2:	f007 fd95 	bl	800c0d0 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80045a6:	4642      	mov	r2, r8
 80045a8:	f8d4 1d70 	ldr.w	r1, [r4, #3440]	; 0xd70
 80045ac:	f8d4 0d74 	ldr.w	r0, [r4, #3444]	; 0xd74
 80045b0:	f007 ff0e 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80045b4:	2296      	movs	r2, #150	; 0x96
 80045b6:	2303      	movs	r3, #3
 80045b8:	f8c4 2d74 	str.w	r2, [r4, #3444]	; 0xd74
        labelDecimals = decimals;
 80045bc:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 80045c0:	ee1f 1a10 	vmov	r1, s30
        dataScale = scale;
 80045c4:	f8c4 8d70 	str.w	r8, [r4, #3440]	; 0xd70
 80045c8:	f8a4 3d7c 	strh.w	r3, [r4, #3452]	; 0xd7c
        labelDecimals = decimals;
 80045cc:	f8a4 2d82 	strh.w	r2, [r4, #3458]	; 0xd82
 80045d0:	f8c4 9d6c 	str.w	r9, [r4, #3436]	; 0xd6c
 80045d4:	4638      	mov	r0, r7
 80045d6:	f007 fd69 	bl	800c0ac <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 80045da:	9b08      	ldr	r3, [sp, #32]
 80045dc:	f8c4 3bd8 	str.w	r3, [r4, #3032]	; 0xbd8
 80045e0:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80045e4:	f04f 0302 	mov.w	r3, #2
 80045e8:	f884 3bdc 	strb.w	r3, [r4, #3036]	; 0xbdc
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 80045ec:	ee1d 1a10 	vmov	r1, s26
 80045f0:	f8c4 2bec 	str.w	r2, [r4, #3052]	; 0xbec
 80045f4:	4638      	mov	r0, r7
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80045f6:	f8a4 6bf0 	strh.w	r6, [r4, #3056]	; 0xbf0
 80045fa:	f007 fd45 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 80045fe:	4641      	mov	r1, r8
 8004600:	4632      	mov	r2, r6
 8004602:	4658      	mov	r0, fp
 8004604:	f7ff f982 	bl	800390c <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 8004608:	22a6      	movs	r2, #166	; 0xa6
 800460a:	9200      	str	r2, [sp, #0]
 800460c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004610:	4632      	mov	r2, r6
 8004612:	4631      	mov	r1, r6
 8004614:	4658      	mov	r0, fp
 8004616:	f7fe fb50 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 800461a:	220f      	movs	r2, #15
 800461c:	9200      	str	r2, [sp, #0]
 800461e:	4633      	mov	r3, r6
 8004620:	2218      	movs	r2, #24
 8004622:	2106      	movs	r1, #6
 8004624:	4658      	mov	r0, fp
 8004626:	f007 fe21 	bl	800c26c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 800462a:	4633      	mov	r3, r6
 800462c:	4632      	mov	r2, r6
 800462e:	4631      	mov	r1, r6
 8004630:	4658      	mov	r0, fp
 8004632:	9600      	str	r6, [sp, #0]
 8004634:	f007 fd1d 	bl	800c072 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 8004638:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800463c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004640:	4658      	mov	r0, fp
 8004642:	f7ff f845 	bl	80036d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004646:	4642      	mov	r2, r8
 8004648:	e9d5 1010 	ldrd	r1, r0, [r5, #64]	; 0x40
 800464c:	f007 fec0 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004650:	f241 3388 	movw	r3, #5000	; 0x1388
        lineWidth = width;
 8004654:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004658:	646b      	str	r3, [r5, #68]	; 0x44
        majorGrid = &major;
 800465a:	9b02      	ldr	r3, [sp, #8]
 800465c:	64eb      	str	r3, [r5, #76]	; 0x4c
        color = newColor;
 800465e:	e9c5 980f 	strd	r9, r8, [r5, #60]	; 0x3c
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004662:	9904      	ldr	r1, [sp, #16]
        lineWidth = width;
 8004664:	f885 2048 	strb.w	r2, [r5, #72]	; 0x48
 8004668:	4658      	mov	r0, fp
 800466a:	f007 fd0d 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800466e:	4642      	mov	r2, r8
 8004670:	e9d5 1020 	ldrd	r1, r0, [r5, #128]	; 0x80
 8004674:	f007 feac 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004678:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 800467c:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004680:	f8c5 3084 	str.w	r3, [r5, #132]	; 0x84
        majorGrid = &major;
 8004684:	9b03      	ldr	r3, [sp, #12]
 8004686:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
        color = newColor;
 800468a:	e9c5 981f 	strd	r9, r8, [r5, #124]	; 0x7c
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 800468e:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 8004690:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 8004694:	4658      	mov	r0, fp
 8004696:	f007 fcf7 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800469a:	4642      	mov	r2, r8
 800469c:	e9d5 1030 	ldrd	r1, r0, [r5, #192]	; 0xc0
 80046a0:	f007 fe96 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 80046a4:	f242 7310 	movw	r3, #10000	; 0x2710
 80046a8:	f8c5 30c4 	str.w	r3, [r5, #196]	; 0xc4
        lineWidth = width;
 80046ac:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80046b0:	e9c5 982f 	strd	r9, r8, [r5, #188]	; 0xbc
        lineWidth = width;
 80046b4:	f885 30c8 	strb.w	r3, [r5, #200]	; 0xc8
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 80046b8:	9902      	ldr	r1, [sp, #8]
 80046ba:	4658      	mov	r0, fp
 80046bc:	f007 fce4 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80046c0:	4642      	mov	r2, r8
 80046c2:	e9d5 1040 	ldrd	r1, r0, [r5, #256]	; 0x100
 80046c6:	f007 fe83 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80046ca:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80046ce:	e9c5 983f 	strd	r9, r8, [r5, #252]	; 0xfc
        lineWidth = width;
 80046d2:	f885 3108 	strb.w	r3, [r5, #264]	; 0x108
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 80046d6:	9903      	ldr	r1, [sp, #12]
        gridInterval = abs(interval);
 80046d8:	f8c5 8104 	str.w	r8, [r5, #260]	; 0x104
 80046dc:	4658      	mov	r0, fp
 80046de:	f007 fcd3 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80046e2:	4642      	mov	r2, r8
 80046e4:	e9d5 1050 	ldrd	r1, r0, [r5, #320]	; 0x140
 80046e8:	f007 fe72 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80046ec:	2396      	movs	r3, #150	; 0x96
 80046ee:	f8c5 3144 	str.w	r3, [r5, #324]	; 0x144
 80046f2:	230c      	movs	r3, #12
 80046f4:	f8a5 314c 	strh.w	r3, [r5, #332]	; 0x14c
        labelDecimals = decimals;
 80046f8:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80046fc:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 80046fe:	f8c5 8140 	str.w	r8, [r5, #320]	; 0x140
        labelDecimals = decimals;
 8004702:	f8a5 3152 	strh.w	r3, [r5, #338]	; 0x152
        color = newColor;
 8004706:	f8c5 913c 	str.w	r9, [r5, #316]	; 0x13c
 800470a:	4658      	mov	r0, fp
 800470c:	f007 fcce 	bl	800c0ac <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 8004710:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004714:	60ab      	str	r3, [r5, #8]
 8004716:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004718:	81ae      	strh	r6, [r5, #12]
 800471a:	f8c4 3ff4 	str.w	r3, [r4, #4084]	; 0xff4
        lineWidth = width;
 800471e:	f04f 0302 	mov.w	r3, #2
 8004722:	f884 3ff8 	strb.w	r3, [r4, #4088]	; 0xff8
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8004726:	ee1f 1a90 	vmov	r1, s31
 800472a:	4658      	mov	r0, fp
 800472c:	f007 fcac 	bl	800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 8004730:	f04f 0808 	mov.w	r8, #8
    toggleButton1.setXY(65, 211);
 8004734:	ee19 0a10 	vmov	r0, s18
 8004738:	22d3      	movs	r2, #211	; 0xd3
 800473a:	2141      	movs	r1, #65	; 0x41
 800473c:	f7fe fa7e 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
 8004740:	f04f 0307 	mov.w	r3, #7
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004744:	ee19 0a10 	vmov	r0, s18
 8004748:	aa10      	add	r2, sp, #64	; 0x40
 800474a:	a90f      	add	r1, sp, #60	; 0x3c
        originalPressed = bitmapPressed;
 800474c:	f8a5 8190 	strh.w	r8, [r5, #400]	; 0x190
 8004750:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8004754:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004758:	f009 fc17 	bl	800df8a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800475c:	9b07      	ldr	r3, [sp, #28]
 800475e:	f8c5 3184 	str.w	r3, [r5, #388]	; 0x184
    txtShowWholeGraph.setXY(1, 219);
 8004762:	22db      	movs	r2, #219	; 0xdb
 8004764:	ee18 0a10 	vmov	r0, s16
 8004768:	2101      	movs	r1, #1
 800476a:	f7fe fa67 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
 800476e:	f10d 0928 	add.w	r9, sp, #40	; 0x28
        color = newColor;
 8004772:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004776:	4648      	mov	r0, r9
 8004778:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 800477c:	f8c5 31c4 	str.w	r3, [r5, #452]	; 0x1c4
        linespace = space;
 8004780:	f8a5 61c8 	strh.w	r6, [r5, #456]	; 0x1c8
        boundingArea = calculateBoundingArea();
 8004784:	f009 f916 	bl	800d9b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004788:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800478c:	ee18 3a10 	vmov	r3, s16
 8004790:	333c      	adds	r3, #60	; 0x3c
 8004792:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004796:	4b7e      	ldr	r3, [pc, #504]	; (8004990 <_ZN19ScreenGraphViewBaseC1Ev+0x908>)
 8004798:	9310      	str	r3, [sp, #64]	; 0x40
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 800479a:	ee18 0a10 	vmov	r0, s16
 800479e:	230b      	movs	r3, #11
 80047a0:	a910      	add	r1, sp, #64	; 0x40
 80047a2:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80047a6:	f009 fb95 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 80047aa:	230f      	movs	r3, #15
 80047ac:	22a8      	movs	r2, #168	; 0xa8
 80047ae:	9300      	str	r3, [sp, #0]
 80047b0:	2102      	movs	r1, #2
 80047b2:	2384      	movs	r3, #132	; 0x84
 80047b4:	4650      	mov	r0, sl
 80047b6:	f7fe fa80 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80047ba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80047be:	f8c5 320c 	str.w	r3, [r5, #524]	; 0x20c
        boundingArea = calculateBoundingArea();
 80047c2:	f8d5 31dc 	ldr.w	r3, [r5, #476]	; 0x1dc
        linespace = space;
 80047c6:	f8a5 6210 	strh.w	r6, [r5, #528]	; 0x210
        boundingArea = calculateBoundingArea();
 80047ca:	4648      	mov	r0, r9
 80047cc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80047d0:	4651      	mov	r1, sl
 80047d2:	4798      	blx	r3
 80047d4:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80047d8:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80047dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047e0:	4b6c      	ldr	r3, [pc, #432]	; (8004994 <_ZN19ScreenGraphViewBaseC1Ev+0x90c>)
 80047e2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 80047e4:	f504 5996 	add.w	r9, r4, #4800	; 0x12c0
 80047e8:	b92b      	cbnz	r3, 80047f6 <_ZN19ScreenGraphViewBaseC1Ev+0x76e>
 80047ea:	4b6b      	ldr	r3, [pc, #428]	; (8004998 <_ZN19ScreenGraphViewBaseC1Ev+0x910>)
 80047ec:	4a6b      	ldr	r2, [pc, #428]	; (800499c <_ZN19ScreenGraphViewBaseC1Ev+0x914>)
 80047ee:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80047f0:	486b      	ldr	r0, [pc, #428]	; (80049a0 <_ZN19ScreenGraphViewBaseC1Ev+0x918>)
 80047f2:	f01b fe6b 	bl	80204cc <__assert_func>
 80047f6:	4b6b      	ldr	r3, [pc, #428]	; (80049a4 <_ZN19ScreenGraphViewBaseC1Ev+0x91c>)
 80047f8:	881b      	ldrh	r3, [r3, #0]
 80047fa:	2b08      	cmp	r3, #8
 80047fc:	d803      	bhi.n	8004806 <_ZN19ScreenGraphViewBaseC1Ev+0x77e>
 80047fe:	4b6a      	ldr	r3, [pc, #424]	; (80049a8 <_ZN19ScreenGraphViewBaseC1Ev+0x920>)
 8004800:	4a66      	ldr	r2, [pc, #408]	; (800499c <_ZN19ScreenGraphViewBaseC1Ev+0x914>)
 8004802:	2161      	movs	r1, #97	; 0x61
 8004804:	e7f4      	b.n	80047f0 <_ZN19ScreenGraphViewBaseC1Ev+0x768>
        return texts->getText(typedTextId);
 8004806:	4b69      	ldr	r3, [pc, #420]	; (80049ac <_ZN19ScreenGraphViewBaseC1Ev+0x924>)
 8004808:	4641      	mov	r1, r8
 800480a:	6818      	ldr	r0, [r3, #0]
 800480c:	f000 fa38 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 8004810:	4a67      	ldr	r2, [pc, #412]	; (80049b0 <_ZN19ScreenGraphViewBaseC1Ev+0x928>)
 8004812:	4603      	mov	r3, r0
 8004814:	4641      	mov	r1, r8
 8004816:	4648      	mov	r0, r9
 8004818:	f00f fa46 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800481c:	f04f 010a 	mov.w	r1, #10
 8004820:	4a5b      	ldr	r2, [pc, #364]	; (8004990 <_ZN19ScreenGraphViewBaseC1Ev+0x908>)
        wc1 = value;
 8004822:	f8c5 9224 	str.w	r9, [r5, #548]	; 0x224
 8004826:	f8ad 1044 	strh.w	r1, [sp, #68]	; 0x44
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 800482a:	4650      	mov	r0, sl
 800482c:	a910      	add	r1, sp, #64	; 0x40
 800482e:	9210      	str	r2, [sp, #64]	; 0x40
 8004830:	f009 fb50 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 8004834:	210f      	movs	r1, #15
 8004836:	9100      	str	r1, [sp, #0]
 8004838:	2384      	movs	r3, #132	; 0x84
 800483a:	2102      	movs	r1, #2
 800483c:	ee19 0a90 	vmov	r0, s19
 8004840:	22b7      	movs	r2, #183	; 0xb7
 8004842:	f7fe fa3a 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004846:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 800484a:	f8c5 1258 	str.w	r1, [r5, #600]	; 0x258
        boundingArea = calculateBoundingArea();
 800484e:	f04f 31ff 	mov.w	r1, #4294967295
 8004852:	e9c5 169a 	strd	r1, r6, [r5, #616]	; 0x268
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004856:	494f      	ldr	r1, [pc, #316]	; (8004994 <_ZN19ScreenGraphViewBaseC1Ev+0x90c>)
        linespace = space;
 8004858:	f8a5 625c 	strh.w	r6, [r5, #604]	; 0x25c
 800485c:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 800485e:	f8c5 6264 	str.w	r6, [r5, #612]	; 0x264
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004862:	f504 5996 	add.w	r9, r4, #4800	; 0x12c0
 8004866:	f109 0910 	add.w	r9, r9, #16
 800486a:	2b00      	cmp	r3, #0
 800486c:	d0bd      	beq.n	80047ea <_ZN19ScreenGraphViewBaseC1Ev+0x762>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800486e:	484d      	ldr	r0, [pc, #308]	; (80049a4 <_ZN19ScreenGraphViewBaseC1Ev+0x91c>)
 8004870:	8803      	ldrh	r3, [r0, #0]
 8004872:	2b07      	cmp	r3, #7
 8004874:	d9c3      	bls.n	80047fe <_ZN19ScreenGraphViewBaseC1Ev+0x776>
        return texts->getText(typedTextId);
 8004876:	4b4d      	ldr	r3, [pc, #308]	; (80049ac <_ZN19ScreenGraphViewBaseC1Ev+0x924>)
 8004878:	2107      	movs	r1, #7
 800487a:	6818      	ldr	r0, [r3, #0]
 800487c:	f000 fa00 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 8004880:	4a4b      	ldr	r2, [pc, #300]	; (80049b0 <_ZN19ScreenGraphViewBaseC1Ev+0x928>)
 8004882:	4603      	mov	r3, r0
 8004884:	4641      	mov	r1, r8
 8004886:	4648      	mov	r0, r9
 8004888:	f00f fa0e 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 800488c:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
        : typedTextId(id)
 8004890:	4a3f      	ldr	r2, [pc, #252]	; (8004990 <_ZN19ScreenGraphViewBaseC1Ev+0x908>)
 8004892:	f8c5 9270 	str.w	r9, [r5, #624]	; 0x270
 8004896:	2309      	movs	r3, #9
 8004898:	4661      	mov	r1, ip
 800489a:	ee19 0a90 	vmov	r0, s19
 800489e:	9210      	str	r2, [sp, #64]	; 0x40
 80048a0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80048a4:	f009 fb16 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 80048a8:	f04f 0c0f 	mov.w	ip, #15
 80048ac:	f8cd c000 	str.w	ip, [sp]
 80048b0:	2384      	movs	r3, #132	; 0x84
 80048b2:	2102      	movs	r1, #2
 80048b4:	ee1a 0a10 	vmov	r0, s20
 80048b8:	22c6      	movs	r2, #198	; 0xc6
 80048ba:	f7fe f9fe 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048be:	4935      	ldr	r1, [pc, #212]	; (8004994 <_ZN19ScreenGraphViewBaseC1Ev+0x90c>)
        linespace = space;
 80048c0:	f8a5 62a8 	strh.w	r6, [r5, #680]	; 0x2a8
        color = newColor;
 80048c4:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
 80048c8:	680b      	ldr	r3, [r1, #0]
 80048ca:	f8c5 c2a4 	str.w	ip, [r5, #676]	; 0x2a4
        boundingArea = calculateBoundingArea();
 80048ce:	f04f 3cff 	mov.w	ip, #4294967295
 80048d2:	e9c5 c6ad 	strd	ip, r6, [r5, #692]	; 0x2b4
 80048d6:	f8c5 62b0 	str.w	r6, [r5, #688]	; 0x2b0
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80048da:	f504 5697 	add.w	r6, r4, #4832	; 0x12e0
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d083      	beq.n	80047ea <_ZN19ScreenGraphViewBaseC1Ev+0x762>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048e2:	4830      	ldr	r0, [pc, #192]	; (80049a4 <_ZN19ScreenGraphViewBaseC1Ev+0x91c>)
 80048e4:	8803      	ldrh	r3, [r0, #0]
 80048e6:	2b05      	cmp	r3, #5
 80048e8:	d989      	bls.n	80047fe <_ZN19ScreenGraphViewBaseC1Ev+0x776>
        return texts->getText(typedTextId);
 80048ea:	4b30      	ldr	r3, [pc, #192]	; (80049ac <_ZN19ScreenGraphViewBaseC1Ev+0x924>)
 80048ec:	2105      	movs	r1, #5
 80048ee:	6818      	ldr	r0, [r3, #0]
 80048f0:	f000 f9c6 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 80048f4:	4a2e      	ldr	r2, [pc, #184]	; (80049b0 <_ZN19ScreenGraphViewBaseC1Ev+0x928>)
 80048f6:	4603      	mov	r3, r0
 80048f8:	210a      	movs	r1, #10
 80048fa:	4630      	mov	r0, r6
 80048fc:	f00f f9d4 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004900:	4a23      	ldr	r2, [pc, #140]	; (8004990 <_ZN19ScreenGraphViewBaseC1Ev+0x908>)
 8004902:	f8c5 62bc 	str.w	r6, [r5, #700]	; 0x2bc
 8004906:	2306      	movs	r3, #6
 8004908:	1d25      	adds	r5, r4, #4
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 800490a:	ee1a 0a10 	vmov	r0, s20
 800490e:	a910      	add	r1, sp, #64	; 0x40
 8004910:	9210      	str	r2, [sp, #64]	; 0x40
 8004912:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8004916:	f009 fadd 	bl	800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800491a:	ee1a 1a90 	vmov	r1, s21
 800491e:	4628      	mov	r0, r5
 8004920:	f005 fed4 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004924:	ee18 1a90 	vmov	r1, s17
 8004928:	4628      	mov	r0, r5
 800492a:	f005 fecf 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800492e:	ee1b 1a90 	vmov	r1, s23
 8004932:	4628      	mov	r0, r5
 8004934:	f005 feca 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004938:	ee1b 1a10 	vmov	r1, s22
 800493c:	4628      	mov	r0, r5
 800493e:	f005 fec5 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004942:	4639      	mov	r1, r7
 8004944:	4628      	mov	r0, r5
 8004946:	f005 fec1 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800494a:	4659      	mov	r1, fp
 800494c:	4628      	mov	r0, r5
 800494e:	f005 febd 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004952:	ee19 1a10 	vmov	r1, s18
 8004956:	4628      	mov	r0, r5
 8004958:	f005 feb8 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800495c:	ee18 1a10 	vmov	r1, s16
 8004960:	4628      	mov	r0, r5
 8004962:	f005 feb3 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004966:	4651      	mov	r1, sl
 8004968:	4628      	mov	r0, r5
 800496a:	f005 feaf 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800496e:	ee19 1a90 	vmov	r1, s19
 8004972:	4628      	mov	r0, r5
 8004974:	f005 feaa 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004978:	4628      	mov	r0, r5
 800497a:	ee1a 1a10 	vmov	r1, s20
 800497e:	f005 fea5 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004982:	4620      	mov	r0, r4
 8004984:	b013      	add	sp, #76	; 0x4c
 8004986:	ecbd 8b10 	vpop	{d8-d15}
 800498a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800498e:	bf00      	nop
 8004990:	08021e48 	.word	0x08021e48
 8004994:	2001543c 	.word	0x2001543c
 8004998:	08022510 	.word	0x08022510
 800499c:	08022612 	.word	0x08022612
 80049a0:	0802258d 	.word	0x0802258d
 80049a4:	20015440 	.word	0x20015440
 80049a8:	080225d4 	.word	0x080225d4
 80049ac:	20015448 	.word	0x20015448
 80049b0:	0802264a 	.word	0x0802264a
 80049b4:	ff1497c5 	.word	0xff1497c5

080049b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 39, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80049b8:	4770      	bx	lr
	...

080049bc <_Z23getFont_verdana_10_4bppv>:
{
 80049bc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 39, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80049be:	4d16      	ldr	r5, [pc, #88]	; (8004a18 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80049c0:	782c      	ldrb	r4, [r5, #0]
 80049c2:	f3bf 8f5b 	dmb	ish
 80049c6:	f014 0401 	ands.w	r4, r4, #1
{
 80049ca:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 39, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80049cc:	d120      	bne.n	8004a10 <_Z23getFont_verdana_10_4bppv+0x54>
 80049ce:	4628      	mov	r0, r5
 80049d0:	f01b fcca 	bl	8020368 <__cxa_guard_acquire>
 80049d4:	b1e0      	cbz	r0, 8004a10 <_Z23getFont_verdana_10_4bppv+0x54>
 80049d6:	233f      	movs	r3, #63	; 0x3f
 80049d8:	9307      	str	r3, [sp, #28]
 80049da:	4b10      	ldr	r3, [pc, #64]	; (8004a1c <_Z23getFont_verdana_10_4bppv+0x60>)
 80049dc:	9306      	str	r3, [sp, #24]
 80049de:	4b10      	ldr	r3, [pc, #64]	; (8004a20 <_Z23getFont_verdana_10_4bppv+0x64>)
 80049e0:	9305      	str	r3, [sp, #20]
 80049e2:	2301      	movs	r3, #1
 80049e4:	e9cd 4303 	strd	r4, r3, [sp, #12]
 80049e8:	9302      	str	r3, [sp, #8]
 80049ea:	2204      	movs	r2, #4
 80049ec:	2302      	movs	r3, #2
 80049ee:	e9cd 3200 	strd	r3, r2, [sp]
 80049f2:	490c      	ldr	r1, [pc, #48]	; (8004a24 <_Z23getFont_verdana_10_4bppv+0x68>)
 80049f4:	480c      	ldr	r0, [pc, #48]	; (8004a28 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80049f6:	9408      	str	r4, [sp, #32]
 80049f8:	230a      	movs	r3, #10
 80049fa:	2227      	movs	r2, #39	; 0x27
 80049fc:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004a00:	f7fd ff70 	bl	80028e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004a04:	4809      	ldr	r0, [pc, #36]	; (8004a2c <_Z23getFont_verdana_10_4bppv+0x70>)
 8004a06:	f01b fd7f 	bl	8020508 <atexit>
 8004a0a:	4628      	mov	r0, r5
 8004a0c:	f01b fcb8 	bl	8020380 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004a10:	4805      	ldr	r0, [pc, #20]	; (8004a28 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004a12:	b00d      	add	sp, #52	; 0x34
 8004a14:	bd30      	pop	{r4, r5, pc}
 8004a16:	bf00      	nop
 8004a18:	20004524 	.word	0x20004524
 8004a1c:	080258ac 	.word	0x080258ac
 8004a20:	08025930 	.word	0x08025930
 8004a24:	0802542c 	.word	0x0802542c
 8004a28:	20004528 	.word	0x20004528
 8004a2c:	080049b9 	.word	0x080049b9

08004a30 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004a30:	4770      	bx	lr
	...

08004a34 <_Z23getFont_verdana_15_4bppv>:
{
 8004a34:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004a36:	4d16      	ldr	r5, [pc, #88]	; (8004a90 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004a38:	782c      	ldrb	r4, [r5, #0]
 8004a3a:	f3bf 8f5b 	dmb	ish
 8004a3e:	f014 0401 	ands.w	r4, r4, #1
{
 8004a42:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004a44:	d120      	bne.n	8004a88 <_Z23getFont_verdana_15_4bppv+0x54>
 8004a46:	4628      	mov	r0, r5
 8004a48:	f01b fc8e 	bl	8020368 <__cxa_guard_acquire>
 8004a4c:	b1e0      	cbz	r0, 8004a88 <_Z23getFont_verdana_15_4bppv+0x54>
 8004a4e:	233f      	movs	r3, #63	; 0x3f
 8004a50:	9307      	str	r3, [sp, #28]
 8004a52:	4b10      	ldr	r3, [pc, #64]	; (8004a94 <_Z23getFont_verdana_15_4bppv+0x60>)
 8004a54:	9306      	str	r3, [sp, #24]
 8004a56:	4b10      	ldr	r3, [pc, #64]	; (8004a98 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004a58:	9305      	str	r3, [sp, #20]
 8004a5a:	2301      	movs	r3, #1
 8004a5c:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004a60:	9302      	str	r3, [sp, #8]
 8004a62:	2204      	movs	r2, #4
 8004a64:	2303      	movs	r3, #3
 8004a66:	e9cd 3200 	strd	r3, r2, [sp]
 8004a6a:	490c      	ldr	r1, [pc, #48]	; (8004a9c <_Z23getFont_verdana_15_4bppv+0x68>)
 8004a6c:	480c      	ldr	r0, [pc, #48]	; (8004aa0 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004a6e:	9408      	str	r4, [sp, #32]
 8004a70:	230f      	movs	r3, #15
 8004a72:	2226      	movs	r2, #38	; 0x26
 8004a74:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004a78:	f7fd ff34 	bl	80028e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004a7c:	4809      	ldr	r0, [pc, #36]	; (8004aa4 <_Z23getFont_verdana_15_4bppv+0x70>)
 8004a7e:	f01b fd43 	bl	8020508 <atexit>
 8004a82:	4628      	mov	r0, r5
 8004a84:	f01b fc7c 	bl	8020380 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004a88:	4805      	ldr	r0, [pc, #20]	; (8004aa0 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004a8a:	b00d      	add	sp, #52	; 0x34
 8004a8c:	bd30      	pop	{r4, r5, pc}
 8004a8e:	bf00      	nop
 8004a90:	20004550 	.word	0x20004550
 8004a94:	080258c8 	.word	0x080258c8
 8004a98:	08025934 	.word	0x08025934
 8004a9c:	08025650 	.word	0x08025650
 8004aa0:	20004554 	.word	0x20004554
 8004aa4:	08004a31 	.word	0x08004a31

08004aa8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004aa8:	4770      	bx	lr
	...

08004aac <_Z23getFont_verdana_40_4bppv>:
{
 8004aac:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004aae:	4d15      	ldr	r5, [pc, #84]	; (8004b04 <_Z23getFont_verdana_40_4bppv+0x58>)
 8004ab0:	782c      	ldrb	r4, [r5, #0]
 8004ab2:	f3bf 8f5b 	dmb	ish
 8004ab6:	f014 0401 	ands.w	r4, r4, #1
{
 8004aba:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004abc:	d11f      	bne.n	8004afe <_Z23getFont_verdana_40_4bppv+0x52>
 8004abe:	4628      	mov	r0, r5
 8004ac0:	f01b fc52 	bl	8020368 <__cxa_guard_acquire>
 8004ac4:	b1d8      	cbz	r0, 8004afe <_Z23getFont_verdana_40_4bppv+0x52>
 8004ac6:	233f      	movs	r3, #63	; 0x3f
 8004ac8:	9307      	str	r3, [sp, #28]
 8004aca:	4b0f      	ldr	r3, [pc, #60]	; (8004b08 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004acc:	9306      	str	r3, [sp, #24]
 8004ace:	4b0f      	ldr	r3, [pc, #60]	; (8004b0c <_Z23getFont_verdana_40_4bppv+0x60>)
 8004ad0:	490f      	ldr	r1, [pc, #60]	; (8004b10 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004ad2:	4810      	ldr	r0, [pc, #64]	; (8004b14 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004ad4:	9408      	str	r4, [sp, #32]
 8004ad6:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004ada:	2204      	movs	r2, #4
 8004adc:	2301      	movs	r3, #1
 8004ade:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004ae2:	9300      	str	r3, [sp, #0]
 8004ae4:	2205      	movs	r2, #5
 8004ae6:	2328      	movs	r3, #40	; 0x28
 8004ae8:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004aec:	9403      	str	r4, [sp, #12]
 8004aee:	f7fd fef9 	bl	80028e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004af2:	4809      	ldr	r0, [pc, #36]	; (8004b18 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004af4:	f01b fd08 	bl	8020508 <atexit>
 8004af8:	4628      	mov	r0, r5
 8004afa:	f01b fc41 	bl	8020380 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004afe:	4805      	ldr	r0, [pc, #20]	; (8004b14 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004b00:	b00d      	add	sp, #52	; 0x34
 8004b02:	bd30      	pop	{r4, r5, pc}
 8004b04:	2000457c 	.word	0x2000457c
 8004b08:	0802591c 	.word	0x0802591c
 8004b0c:	08025938 	.word	0x08025938
 8004b10:	08025864 	.word	0x08025864
 8004b14:	20004580 	.word	0x20004580
 8004b18:	08004aa9 	.word	0x08004aa9

08004b1c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004b1c:	2000      	movs	r0, #0
 8004b1e:	4770      	bx	lr

08004b20 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004b20:	2000      	movs	r0, #0
 8004b22:	4770      	bx	lr

08004b24 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004b24:	b40e      	push	{r1, r2, r3}
 8004b26:	b503      	push	{r0, r1, lr}
 8004b28:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004b2a:	2100      	movs	r1, #0
{
 8004b2c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004b30:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004b32:	f00c ff71 	bl	8011a18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004b36:	b002      	add	sp, #8
 8004b38:	f85d eb04 	ldr.w	lr, [sp], #4
 8004b3c:	b003      	add	sp, #12
 8004b3e:	4770      	bx	lr

08004b40 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004b40:	b40c      	push	{r2, r3}
 8004b42:	b507      	push	{r0, r1, r2, lr}
 8004b44:	ab04      	add	r3, sp, #16
 8004b46:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004b4a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004b4c:	f00c ff64 	bl	8011a18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004b50:	b003      	add	sp, #12
 8004b52:	f85d eb04 	ldr.w	lr, [sp], #4
 8004b56:	b002      	add	sp, #8
 8004b58:	4770      	bx	lr
	...

08004b5c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004b5c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004b5e:	b510      	push	{r4, lr}
 8004b60:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004b62:	b373      	cbz	r3, 8004bc2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004b64:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004b66:	b92b      	cbnz	r3, 8004b74 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004b68:	4b18      	ldr	r3, [pc, #96]	; (8004bcc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004b6a:	4a19      	ldr	r2, [pc, #100]	; (8004bd0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004b6c:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004b6e:	4819      	ldr	r0, [pc, #100]	; (8004bd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004b70:	f01b fcac 	bl	80204cc <__assert_func>
            return buffer[pos];
 8004b74:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004b76:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004b7a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004b7c:	b30b      	cbz	r3, 8004bc2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004b7e:	f00e fae4 	bl	801314a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004b82:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004b84:	2b01      	cmp	r3, #1
 8004b86:	d803      	bhi.n	8004b90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004b88:	4b13      	ldr	r3, [pc, #76]	; (8004bd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004b8a:	4a14      	ldr	r2, [pc, #80]	; (8004bdc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004b8c:	21c5      	movs	r1, #197	; 0xc5
 8004b8e:	e7ee      	b.n	8004b6e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004b90:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004b92:	1c53      	adds	r3, r2, #1
 8004b94:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004b96:	2b09      	cmp	r3, #9
 8004b98:	4619      	mov	r1, r3
 8004b9a:	bf88      	it	hi
 8004b9c:	f1a3 010a 	subhi.w	r1, r3, #10
 8004ba0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004ba4:	f640 103f 	movw	r0, #2367	; 0x93f
 8004ba8:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004baa:	4281      	cmp	r1, r0
 8004bac:	d109      	bne.n	8004bc2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004bae:	2b0a      	cmp	r3, #10
 8004bb0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004bb4:	bf28      	it	cs
 8004bb6:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004bb8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004bbc:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004bbe:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004bc0:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004bc2:	4620      	mov	r0, r4
}
 8004bc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004bc8:	f00e b9c2 	b.w	8012f50 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004bcc:	0802302c 	.word	0x0802302c
 8004bd0:	08023035 	.word	0x08023035
 8004bd4:	080230e0 	.word	0x080230e0
 8004bd8:	0802312a 	.word	0x0802312a
 8004bdc:	08023138 	.word	0x08023138

08004be0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004be0:	f00e b97d 	b.w	8012ede <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004be4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004be4:	b510      	push	{r4, lr}
 8004be6:	b086      	sub	sp, #24
 8004be8:	ac02      	add	r4, sp, #8
 8004bea:	e884 0006 	stmia.w	r4, {r1, r2}
 8004bee:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004bf0:	ab0a      	add	r3, sp, #40	; 0x28
 8004bf2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004bf4:	9301      	str	r3, [sp, #4]
 8004bf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004bf8:	9300      	str	r3, [sp, #0]
 8004bfa:	4621      	mov	r1, r4
 8004bfc:	9b08      	ldr	r3, [sp, #32]
 8004bfe:	f00b fc10 	bl	8010422 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004c02:	b006      	add	sp, #24
 8004c04:	bd10      	pop	{r4, pc}
	...

08004c08 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004c08:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004c0a:	bb18      	cbnz	r0, 8004c54 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004c0c:	4b12      	ldr	r3, [pc, #72]	; (8004c58 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004c0e:	4813      	ldr	r0, [pc, #76]	; (8004c5c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004c10:	681b      	ldr	r3, [r3, #0]
 8004c12:	4913      	ldr	r1, [pc, #76]	; (8004c60 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004c14:	b1b3      	cbz	r3, 8004c44 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004c16:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004c18:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004c1a:	441a      	add	r2, r3
 8004c1c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004c1e:	685a      	ldr	r2, [r3, #4]
 8004c20:	441a      	add	r2, r3
 8004c22:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004c24:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004c26:	4b0f      	ldr	r3, [pc, #60]	; (8004c64 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004c28:	2200      	movs	r2, #0
 8004c2a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004c2c:	f000 f838 	bl	8004ca0 <_ZN17TypedTextDatabase8getFontsEv>
 8004c30:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004c32:	f000 f833 	bl	8004c9c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004c36:	4b0c      	ldr	r3, [pc, #48]	; (8004c68 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004c38:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004c3a:	4b0c      	ldr	r3, [pc, #48]	; (8004c6c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004c3c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004c3e:	4b0c      	ldr	r3, [pc, #48]	; (8004c70 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004c40:	8018      	strh	r0, [r3, #0]
    }
}
 8004c42:	e007      	b.n	8004c54 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004c44:	4b0b      	ldr	r3, [pc, #44]	; (8004c74 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004c46:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004c48:	4b0b      	ldr	r3, [pc, #44]	; (8004c78 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004c4a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004c4c:	4b0b      	ldr	r3, [pc, #44]	; (8004c7c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004c4e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004c50:	2c00      	cmp	r4, #0
 8004c52:	d1e8      	bne.n	8004c26 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004c54:	bd38      	pop	{r3, r4, r5, pc}
 8004c56:	bf00      	nop
 8004c58:	200045a8 	.word	0x200045a8
 8004c5c:	200045ac 	.word	0x200045ac
 8004c60:	200045b0 	.word	0x200045b0
 8004c64:	200045b4 	.word	0x200045b4
 8004c68:	2001543c 	.word	0x2001543c
 8004c6c:	20015444 	.word	0x20015444
 8004c70:	20015440 	.word	0x20015440
 8004c74:	08025984 	.word	0x08025984
 8004c78:	0802593c 	.word	0x0802593c
 8004c7c:	08025af4 	.word	0x08025af4

08004c80 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004c80:	4b04      	ldr	r3, [pc, #16]	; (8004c94 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004c82:	681b      	ldr	r3, [r3, #0]
 8004c84:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004c88:	4b03      	ldr	r3, [pc, #12]	; (8004c98 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004c8a:	681b      	ldr	r3, [r3, #0]
}
 8004c8c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004c90:	4770      	bx	lr
 8004c92:	bf00      	nop
 8004c94:	200045b0 	.word	0x200045b0
 8004c98:	200045ac 	.word	0x200045ac

08004c9c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004c9c:	2012      	movs	r0, #18
 8004c9e:	4770      	bx	lr

08004ca0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004ca0:	4800      	ldr	r0, [pc, #0]	; (8004ca4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004ca2:	4770      	bx	lr
 8004ca4:	200045b8 	.word	0x200045b8

08004ca8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004ca8:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8004caa:	f7ff fec3 	bl	8004a34 <_Z23getFont_verdana_15_4bppv>
};
 8004cae:	4c04      	ldr	r4, [pc, #16]	; (8004cc0 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004cb0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004cb2:	f7ff fefb 	bl	8004aac <_Z23getFont_verdana_40_4bppv>
};
 8004cb6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004cb8:	f7ff fe80 	bl	80049bc <_Z23getFont_verdana_10_4bppv>
};
 8004cbc:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004cbe:	bd10      	pop	{r4, pc}
 8004cc0:	200045b8 	.word	0x200045b8

08004cc4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004cc4:	4770      	bx	lr

08004cc6 <_ZN19FrontendApplicationD0Ev>:
 8004cc6:	b510      	push	{r4, lr}
 8004cc8:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004ccc:	4604      	mov	r4, r0
 8004cce:	f01b fb49 	bl	8020364 <_ZdlPvj>
 8004cd2:	4620      	mov	r0, r4
 8004cd4:	bd10      	pop	{r4, pc}

08004cd6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004cd6:	b510      	push	{r4, lr}
 8004cd8:	4604      	mov	r4, r0
    {
        model.tick();
 8004cda:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004cde:	f000 f813 	bl	8004d08 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004ce2:	4620      	mov	r0, r4
    }
 8004ce4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004ce8:	f00b bf14 	b.w	8010b14 <_ZN8touchgfx11Application15handleTickEventEv>

08004cec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004cec:	b510      	push	{r4, lr}
 8004cee:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004cf0:	f7fd fbf8 	bl	80024e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004cf4:	4b01      	ldr	r3, [pc, #4]	; (8004cfc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004cf6:	6023      	str	r3, [r4, #0]
{

}
 8004cf8:	4620      	mov	r0, r4
 8004cfa:	bd10      	pop	{r4, pc}
 8004cfc:	08023214 	.word	0x08023214

08004d00 <_ZN5ModelC1Ev>:
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
Model::Model() : modelListener(0)
 8004d00:	2200      	movs	r2, #0
 8004d02:	6002      	str	r2, [r0, #0]
{

}
 8004d04:	4770      	bx	lr
	...

08004d08 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004d08:	b570      	push	{r4, r5, r6, lr}
 8004d0a:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004d0c:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 8004d0e:	4d15      	ldr	r5, [pc, #84]	; (8004d64 <_ZN5Model4tickEv+0x5c>)
modelListener->UpdateBatteryVoltage();
 8004d10:	6803      	ldr	r3, [r0, #0]
 8004d12:	689b      	ldr	r3, [r3, #8]
 8004d14:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004d16:	f8d5 3a70 	ldr.w	r3, [r5, #2672]	; 0xa70
 8004d1a:	b173      	cbz	r3, 8004d3a <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8004d1c:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8004d20:	2b01      	cmp	r3, #1
 8004d22:	d103      	bne.n	8004d2c <_ZN5Model4tickEv+0x24>
 8004d24:	6820      	ldr	r0, [r4, #0]
 8004d26:	6803      	ldr	r3, [r0, #0]
 8004d28:	68db      	ldr	r3, [r3, #12]
 8004d2a:	4798      	blx	r3
	modelListener->DrawPoint();
 8004d2c:	6820      	ldr	r0, [r4, #0]
 8004d2e:	6803      	ldr	r3, [r0, #0]
 8004d30:	68db      	ldr	r3, [r3, #12]
 8004d32:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004d34:	2300      	movs	r3, #0
 8004d36:	f8c5 3a70 	str.w	r3, [r5, #2672]	; 0xa70
}

if (ladowarka.narysujPunktNaWykresieMin){
 8004d3a:	f8d5 3a74 	ldr.w	r3, [r5, #2676]	; 0xa74
 8004d3e:	b133      	cbz	r3, 8004d4e <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004d40:	6820      	ldr	r0, [r4, #0]
 8004d42:	6803      	ldr	r3, [r0, #0]
 8004d44:	691b      	ldr	r3, [r3, #16]
 8004d46:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004d48:	2300      	movs	r3, #0
 8004d4a:	f8c5 3a74 	str.w	r3, [r5, #2676]	; 0xa74
#endif



/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004d4e:	6820      	ldr	r0, [r4, #0]
 8004d50:	6803      	ldr	r3, [r0, #0]
 8004d52:	695b      	ldr	r3, [r3, #20]
 8004d54:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004d56:	6820      	ldr	r0, [r4, #0]
 8004d58:	6803      	ldr	r3, [r0, #0]
}
 8004d5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayRunningTime();
 8004d5e:	699b      	ldr	r3, [r3, #24]
 8004d60:	4718      	bx	r3
 8004d62:	bf00      	nop
 8004d64:	20003a54 	.word	0x20003a54

08004d68 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004d68:	4770      	bx	lr

08004d6a <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004d6a:	4770      	bx	lr

08004d6c <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004d6c:	4770      	bx	lr

08004d6e <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004d6e:	4770      	bx	lr

08004d70 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004d70:	4770      	bx	lr

08004d72 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004d72:	3804      	subs	r0, #4
 8004d74:	4770      	bx	lr

08004d76 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004d76:	4770      	bx	lr

08004d78 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8004d78:	68c0      	ldr	r0, [r0, #12]
 8004d7a:	6803      	ldr	r3, [r0, #0]
 8004d7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d7e:	4718      	bx	r3

08004d80 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8004d80:	f1a0 0004 	sub.w	r0, r0, #4
 8004d84:	f7ff bff8 	b.w	8004d78 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08004d88 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8004d88:	b510      	push	{r4, lr}
 8004d8a:	2110      	movs	r1, #16
 8004d8c:	4604      	mov	r4, r0
 8004d8e:	f01b fae9 	bl	8020364 <_ZdlPvj>
 8004d92:	4620      	mov	r0, r4
 8004d94:	bd10      	pop	{r4, pc}

08004d96 <_ZThn4_N16Screen1PresenterD0Ev>:
 8004d96:	f1a0 0004 	sub.w	r0, r0, #4
 8004d9a:	e7f5      	b.n	8004d88 <_ZN16Screen1PresenterD0Ev>

08004d9c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004d9c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004d9e:	2200      	movs	r2, #0
 8004da0:	6082      	str	r2, [r0, #8]
    : view(v)
 8004da2:	4a04      	ldr	r2, [pc, #16]	; (8004db4 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004da4:	60c1      	str	r1, [r0, #12]
 8004da6:	f102 0408 	add.w	r4, r2, #8
 8004daa:	3224      	adds	r2, #36	; 0x24
 8004dac:	6004      	str	r4, [r0, #0]
 8004dae:	6042      	str	r2, [r0, #4]
}
 8004db0:	bd10      	pop	{r4, pc}
 8004db2:	bf00      	nop
 8004db4:	08023258 	.word	0x08023258

08004db8 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004db8:	4770      	bx	lr

08004dba <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004dba:	4770      	bx	lr

08004dbc <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8004dbc:	4b04      	ldr	r3, [pc, #16]	; (8004dd0 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8004dbe:	681a      	ldr	r2, [r3, #0]
 8004dc0:	4b04      	ldr	r3, [pc, #16]	; (8004dd4 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8004dc2:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8004dc4:	2201      	movs	r2, #1
 8004dc6:	611a      	str	r2, [r3, #16]
 ladowarka.ChargingTime=ChargingTime;
 8004dc8:	4a03      	ldr	r2, [pc, #12]	; (8004dd8 <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 8004dca:	6812      	ldr	r2, [r2, #0]
 8004dcc:	60da      	str	r2, [r3, #12]
#endif
}
 8004dce:	4770      	bx	lr
 8004dd0:	20000018 	.word	0x20000018
 8004dd4:	20003a54 	.word	0x20003a54
 8004dd8:	20000014 	.word	0x20000014

08004ddc <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+10;
 8004ddc:	4b0b      	ldr	r3, [pc, #44]	; (8004e0c <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8004dde:	681a      	ldr	r2, [r3, #0]
{
 8004de0:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+10;
 8004de2:	320a      	adds	r2, #10
	if (PradLadowania >400){
 8004de4:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004de8:	bfc8      	it	gt
 8004dea:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8004dee:	601a      	str	r2, [r3, #0]
{
 8004df0:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004df2:	681b      	ldr	r3, [r3, #0]
 8004df4:	4a06      	ldr	r2, [pc, #24]	; (8004e10 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004df6:	210a      	movs	r1, #10
 8004df8:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004dfc:	f00e ff54 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004e00:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004e04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004e08:	f00c bf27 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 8004e0c:	20000018 	.word	0x20000018
 8004e10:	08023298 	.word	0x08023298

08004e14 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-10;
 8004e14:	4b0a      	ldr	r3, [pc, #40]	; (8004e40 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004e16:	681a      	ldr	r2, [r3, #0]
{
 8004e18:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-10;
 8004e1a:	3a0a      	subs	r2, #10
    if (PradLadowania <10){
 8004e1c:	2a09      	cmp	r2, #9
	PradLadowania=10;}
 8004e1e:	bfd8      	it	le
 8004e20:	220a      	movle	r2, #10
 8004e22:	601a      	str	r2, [r3, #0]
{
 8004e24:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	4a06      	ldr	r2, [pc, #24]	; (8004e44 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8004e2a:	210a      	movs	r1, #10
 8004e2c:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004e30:	f00e ff3a 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004e34:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004e38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004e3c:	f00c bf0d 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 8004e40:	20000018 	.word	0x20000018
 8004e44:	08023298 	.word	0x08023298

08004e48 <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 8004e48:	4b0a      	ldr	r3, [pc, #40]	; (8004e74 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 8004e4a:	681a      	ldr	r2, [r3, #0]
{
 8004e4c:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 8004e4e:	3201      	adds	r2, #1
	if (ChargingTime >10){
 8004e50:	2a0a      	cmp	r2, #10
		ChargingTime=10;}
 8004e52:	bfc8      	it	gt
 8004e54:	220a      	movgt	r2, #10
 8004e56:	601a      	str	r2, [r3, #0]
{
 8004e58:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	4a06      	ldr	r2, [pc, #24]	; (8004e78 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 8004e5e:	2103      	movs	r1, #3
 8004e60:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8004e64:	f00e ff20 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8004e68:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8004e6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8004e70:	f00c bef3 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 8004e74:	20000014 	.word	0x20000014
 8004e78:	08023298 	.word	0x08023298

08004e7c <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 8004e7c:	4b0a      	ldr	r3, [pc, #40]	; (8004ea8 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 8004e7e:	681a      	ldr	r2, [r3, #0]
{
 8004e80:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 8004e82:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 8004e84:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 8004e86:	bfd8      	it	le
 8004e88:	2201      	movle	r2, #1
 8004e8a:	601a      	str	r2, [r3, #0]
{
 8004e8c:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	4a06      	ldr	r2, [pc, #24]	; (8004eac <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 8004e92:	2103      	movs	r1, #3
 8004e94:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8004e98:	f00e ff06 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8004e9c:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8004ea0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8004ea4:	f00c bed9 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 8004ea8:	20000014 	.word	0x20000014
 8004eac:	08023298 	.word	0x08023298

08004eb0 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004eb0:	f7fd bd8d 	b.w	80029ce <_ZN15Screen1ViewBase11setupScreenEv>

08004eb4 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8004eb4:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8004eb6:	4b09      	ldr	r3, [pc, #36]	; (8004edc <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8004eb8:	4a09      	ldr	r2, [pc, #36]	; (8004ee0 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8004ebe:	4604      	mov	r4, r0
 8004ec0:	ab01      	add	r3, sp, #4
 8004ec2:	210a      	movs	r1, #10
 8004ec4:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8004ec8:	f00f f8aa 	bl	8014020 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8004ecc:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8004ed0:	b002      	add	sp, #8
 8004ed2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8004ed6:	f00c bec0 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 8004eda:	bf00      	nop
 8004edc:	20003a54 	.word	0x20003a54
 8004ee0:	0802329b 	.word	0x0802329b

08004ee4 <_ZN11Screen1ViewD0Ev>:
 8004ee4:	b510      	push	{r4, lr}
 8004ee6:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8004eea:	4604      	mov	r4, r0
 8004eec:	f01b fa3a 	bl	8020364 <_ZdlPvj>
 8004ef0:	4620      	mov	r0, r4
 8004ef2:	bd10      	pop	{r4, pc}

08004ef4 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8004ef4:	b510      	push	{r4, lr}
 8004ef6:	4604      	mov	r4, r0
 8004ef8:	f7fd fff0 	bl	8002edc <_ZN15Screen1ViewBaseC1Ev>
 8004efc:	4b07      	ldr	r3, [pc, #28]	; (8004f1c <_ZN11Screen1ViewC1Ev+0x28>)
 8004efe:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f00:	4b07      	ldr	r3, [pc, #28]	; (8004f20 <_ZN11Screen1ViewC1Ev+0x2c>)
 8004f02:	4a08      	ldr	r2, [pc, #32]	; (8004f24 <_ZN11Screen1ViewC1Ev+0x30>)
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	210a      	movs	r1, #10
 8004f08:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8004f0c:	f00e fecc 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004f10:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 8004f14:	f00c fea1 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8004f18:	4620      	mov	r0, r4
 8004f1a:	bd10      	pop	{r4, pc}
 8004f1c:	080232a8 	.word	0x080232a8
 8004f20:	20000018 	.word	0x20000018
 8004f24:	08023298 	.word	0x08023298

08004f28 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8004f28:	4770      	bx	lr

08004f2a <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 8004f2a:	4770      	bx	lr

08004f2c <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 8004f2c:	3804      	subs	r0, #4
 8004f2e:	4770      	bx	lr

08004f30 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 8004f30:	4770      	bx	lr

08004f32 <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 8004f32:	68c0      	ldr	r0, [r0, #12]
 8004f34:	6803      	ldr	r3, [r0, #0]
 8004f36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f38:	4718      	bx	r3

08004f3a <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 8004f3a:	f1a0 0004 	sub.w	r0, r0, #4
 8004f3e:	f7ff bff8 	b.w	8004f32 <_ZN20ScreenGraphPresenter9DrawPointEv>

08004f42 <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 8004f42:	68c0      	ldr	r0, [r0, #12]
 8004f44:	6803      	ldr	r3, [r0, #0]
 8004f46:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004f48:	4718      	bx	r3

08004f4a <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 8004f4a:	f1a0 0004 	sub.w	r0, r0, #4
 8004f4e:	f7ff bff8 	b.w	8004f42 <_ZN20ScreenGraphPresenter12DrawPointMinEv>

08004f52 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 8004f52:	68c0      	ldr	r0, [r0, #12]
 8004f54:	6803      	ldr	r3, [r0, #0]
 8004f56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f58:	4718      	bx	r3

08004f5a <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 8004f5a:	f1a0 0004 	sub.w	r0, r0, #4
 8004f5e:	f7ff bff8 	b.w	8004f52 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

08004f62 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 8004f62:	68c0      	ldr	r0, [r0, #12]
 8004f64:	6803      	ldr	r3, [r0, #0]
 8004f66:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004f68:	4718      	bx	r3

08004f6a <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 8004f6a:	f1a0 0004 	sub.w	r0, r0, #4
 8004f6e:	f7ff bff8 	b.w	8004f62 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

08004f72 <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 8004f72:	b510      	push	{r4, lr}
 8004f74:	2110      	movs	r1, #16
 8004f76:	4604      	mov	r4, r0
 8004f78:	f01b f9f4 	bl	8020364 <_ZdlPvj>
 8004f7c:	4620      	mov	r0, r4
 8004f7e:	bd10      	pop	{r4, pc}

08004f80 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8004f80:	f1a0 0004 	sub.w	r0, r0, #4
 8004f84:	e7f5      	b.n	8004f72 <_ZN20ScreenGraphPresenterD0Ev>
	...

08004f88 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8004f88:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004f8a:	2200      	movs	r2, #0
 8004f8c:	6082      	str	r2, [r0, #8]
    : view(v)
 8004f8e:	4a04      	ldr	r2, [pc, #16]	; (8004fa0 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8004f90:	60c1      	str	r1, [r0, #12]
 8004f92:	f102 0408 	add.w	r4, r2, #8
 8004f96:	3230      	adds	r2, #48	; 0x30
 8004f98:	6004      	str	r4, [r0, #0]
 8004f9a:	6042      	str	r2, [r0, #4]
}
 8004f9c:	bd10      	pop	{r4, pc}
 8004f9e:	bf00      	nop
 8004fa0:	080232ec 	.word	0x080232ec

08004fa4 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8004fa4:	4770      	bx	lr

08004fa6 <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8004fa6:	4770      	bx	lr

08004fa8 <_ZN15ScreenGraphView8countMinEv>:

	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}
float ScreenGraphView::countMin(){
 8004fa8:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8004faa:	4915      	ldr	r1, [pc, #84]	; (8005000 <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 8004fac:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8004fb0:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 8004fb4:	2200      	movs	r2, #0
		if ((ladowarka.PomiaryCoSec[i] < results) && ladowarka.PomiaryCoSec[i]!=0)  results=ladowarka.PomiaryCoSec[i];
 8004fb6:	f6a1 1178 	subw	r1, r1, #2424	; 0x978
 8004fba:	f202 235e 	addw	r3, r2, #606	; 0x25e
 8004fbe:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8004fc2:	edd3 7a00 	vldr	s15, [r3]
 8004fc6:	eef4 7ac0 	vcmpe.f32	s15, s0
 8004fca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004fce:	d508      	bpl.n	8004fe2 <_ZN15ScreenGraphView8countMinEv+0x3a>
 8004fd0:	edd3 7a00 	vldr	s15, [r3]
 8004fd4:	eef5 7a40 	vcmp.f32	s15, #0.0
 8004fd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004fdc:	bf18      	it	ne
 8004fde:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 8004fe2:	3201      	adds	r2, #1
 8004fe4:	2a3b      	cmp	r2, #59	; 0x3b
 8004fe6:	d1e8      	bne.n	8004fba <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 8004fe8:	ed9f 8a06 	vldr	s16, [pc, #24]	; 8005004 <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 8004fec:	ee20 0a08 	vmul.f32	s0, s0, s16
 8004ff0:	f01b fa22 	bl	8020438 <floorf>
#else
	return 1.5;
#endif
}
 8004ff4:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8004ff8:	ecbd 8b02 	vpop	{d8}
 8004ffc:	bd08      	pop	{r3, pc}
 8004ffe:	bf00      	nop
 8005000:	200043cc 	.word	0x200043cc
 8005004:	42c80000 	.word	0x42c80000

08005008 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 8005008:	b508      	push	{r3, lr}
 800500a:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 800500e:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8005050 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 8005012:	4910      	ldr	r1, [pc, #64]	; (8005054 <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 8005014:	2300      	movs	r3, #0
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 8005016:	f203 225e 	addw	r2, r3, #606	; 0x25e
 800501a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 800501e:	edd2 7a00 	vldr	s15, [r2]
 8005022:	eef4 7ac0 	vcmpe.f32	s15, s0
 8005026:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 800502a:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 800502e:	bfc8      	it	gt
 8005030:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 8005034:	2b3b      	cmp	r3, #59	; 0x3b
 8005036:	d1ee      	bne.n	8005016 <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 8005038:	ed9f 8a07 	vldr	s16, [pc, #28]	; 8005058 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 800503c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005040:	f01b f9b8 	bl	80203b4 <ceilf>


#else
	return 1.5;
#endif
}
 8005044:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005048:	ecbd 8b02 	vpop	{d8}
 800504c:	bd08      	pop	{r3, pc}
 800504e:	bf00      	nop
 8005050:	00000000 	.word	0x00000000
 8005054:	20003a54 	.word	0x20003a54
 8005058:	42c80000 	.word	0x42c80000

0800505c <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.CzsasLadowaniaWSec;
 800505c:	4b11      	ldr	r3, [pc, #68]	; (80050a4 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 800505e:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 8005060:	f8d3 2a78 	ldr.w	r2, [r3, #2680]	; 0xa78
	m = (sec -(3600*h))/60;
 8005064:	4910      	ldr	r1, [pc, #64]	; (80050a8 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 8005066:	4604      	mov	r4, r0
	h = (sec/3600);
 8005068:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 800506c:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 8005070:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 8005074:	fb01 2203 	mla	r2, r1, r3, r2
 8005078:	213c      	movs	r1, #60	; 0x3c
 800507a:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 800507e:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 8005082:	e9cd 1200 	strd	r1, r2, [sp]
 8005086:	f504 5097 	add.w	r0, r4, #4832	; 0x12e0
 800508a:	4a08      	ldr	r2, [pc, #32]	; (80050ac <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 800508c:	210a      	movs	r1, #10
 800508e:	f00e fe0b 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8005092:	f504 5093 	add.w	r0, r4, #4704	; 0x1260
 8005096:	3014      	adds	r0, #20
}
 8005098:	b002      	add	sp, #8
 800509a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 800509e:	f00c bddc 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 80050a2:	bf00      	nop
 80050a4:	20003a54 	.word	0x20003a54
 80050a8:	fffff1f0 	.word	0xfffff1f0
 80050ac:	08023338 	.word	0x08023338

080050b0 <_ZN15ScreenGraphViewD0Ev>:
 80050b0:	b510      	push	{r4, lr}
 80050b2:	f242 51c4 	movw	r1, #9668	; 0x25c4
 80050b6:	4604      	mov	r4, r0
 80050b8:	f01b f954 	bl	8020364 <_ZdlPvj>
 80050bc:	4620      	mov	r0, r4
 80050be:	bd10      	pop	{r4, pc}

080050c0 <_ZN15ScreenGraphView11setupScreenEv>:
{
 80050c0:	b510      	push	{r4, lr}
 80050c2:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 80050c4:	f7fe fe43 	bl	8003d4e <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 80050c8:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 80050cc:	edd2 7a50 	vldr	s15, [r2, #320]	; 0x140
 80050d0:	ed9f 6a91 	vldr	s12, [pc, #580]	; 8005318 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 80050d4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80050d8:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 80050dc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80050e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050e4:	f2c0 809f 	blt.w	8005226 <_ZN15ScreenGraphView11setupScreenEv+0x166>
            return (int)(fs + 0.5f);
 80050e8:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80050ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80050f0:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80050f4:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80050f8:	edd2 7a40 	vldr	s15, [r2, #256]	; 0x100
 80050fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8005100:	2b00      	cmp	r3, #0
 8005102:	ee67 7a86 	vmul.f32	s15, s15, s12
 8005106:	bfb8      	it	lt
 8005108:	425b      	neglt	r3, r3
        if (fs >= 0)
 800510a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800510e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 8005112:	f8c2 3144 	str.w	r3, [r2, #324]	; 0x144
 8005116:	f2c0 809a 	blt.w	800524e <_ZN15ScreenGraphView11setupScreenEv+0x18e>
            return (int)(fs + 0.5f);
 800511a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800511e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005122:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005126:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 800512a:	edd2 7a20 	vldr	s15, [r2, #128]	; 0x80
 800512e:	ed9f 7a7b 	vldr	s14, [pc, #492]	; 800531c <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 8005132:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005136:	2b00      	cmp	r3, #0
 8005138:	ee67 7a87 	vmul.f32	s15, s15, s14
 800513c:	bfb8      	it	lt
 800513e:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005140:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005144:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8005148:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
 800514c:	f2c0 8093 	blt.w	8005276 <_ZN15ScreenGraphView11setupScreenEv+0x1b6>
            return (int)(fs + 0.5f);
 8005150:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005154:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005158:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800515c:	ee17 3a90 	vmov	r3, s15
 8005160:	2b00      	cmp	r3, #0
 8005162:	bfb8      	it	lt
 8005164:	425b      	neglt	r3, r3
 8005166:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
        const float fs = f * (float)scale;
 800516a:	f8d4 3d70 	ldr.w	r3, [r4, #3440]	; 0xd70
 800516e:	ed9f 6a6c 	vldr	s12, [pc, #432]	; 8005320 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 8005172:	ee07 3a90 	vmov	s15, r3
 8005176:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800517a:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 800517e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005186:	f2c0 808a 	blt.w	800529e <_ZN15ScreenGraphView11setupScreenEv+0x1de>
            return (int)(fs + 0.5f);
 800518a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800518e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005192:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005196:	ee17 3a90 	vmov	r3, s15
 800519a:	2b00      	cmp	r3, #0
 800519c:	bfb8      	it	lt
 800519e:	425b      	neglt	r3, r3
 80051a0:	f8c4 3d74 	str.w	r3, [r4, #3444]	; 0xd74
        const float fs = f * (float)scale;
 80051a4:	f8d4 3ce4 	ldr.w	r3, [r4, #3300]	; 0xce4
 80051a8:	ee07 3a90 	vmov	s15, r3
 80051ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80051b0:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 80051b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80051b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051bc:	f2c0 8083 	blt.w	80052c6 <_ZN15ScreenGraphView11setupScreenEv+0x206>
            return (int)(fs + 0.5f);
 80051c0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80051c4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80051c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051cc:	ee17 3a90 	vmov	r3, s15
 80051d0:	2b00      	cmp	r3, #0
 80051d2:	bfb8      	it	lt
 80051d4:	425b      	neglt	r3, r3
 80051d6:	f8c4 3ce8 	str.w	r3, [r4, #3304]	; 0xce8
        const float fs = f * (float)scale;
 80051da:	f8d4 3c64 	ldr.w	r3, [r4, #3172]	; 0xc64
 80051de:	ed9f 7a51 	vldr	s14, [pc, #324]	; 8005324 <_ZN15ScreenGraphView11setupScreenEv+0x264>
 80051e2:	ee07 3a90 	vmov	s15, r3
 80051e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80051ea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80051ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80051f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051f6:	db7a      	blt.n	80052ee <_ZN15ScreenGraphView11setupScreenEv+0x22e>
            return (int)(fs + 0.5f);
 80051f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80051fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005200:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005204:	ee17 3a90 	vmov	r3, s15
 8005208:	2b00      	cmp	r3, #0
 800520a:	bfb8      	it	lt
 800520c:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 800520e:	f604 508c 	addw	r0, r4, #3468	; 0xd8c
 8005212:	f8c4 3c68 	str.w	r3, [r4, #3176]	; 0xc68
 8005216:	f00c fd20 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 800521a:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 800521e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 8005222:	f00c bd1a 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005226:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 800522a:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 800522e:	ee16 3a90 	vmov	r3, s13
 8005232:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005236:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 800523a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800523e:	3b01      	subs	r3, #1
 8005240:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8005244:	ee17 1a10 	vmov	r1, s14
 8005248:	4419      	add	r1, r3
 800524a:	460b      	mov	r3, r1
 800524c:	e754      	b.n	80050f8 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 800524e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005252:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005256:	ee17 3a10 	vmov	r3, s14
 800525a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800525e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005262:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005266:	3b01      	subs	r3, #1
 8005268:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800526c:	ee17 1a90 	vmov	r1, s15
 8005270:	4419      	add	r1, r3
 8005272:	460b      	mov	r3, r1
 8005274:	e759      	b.n	800512a <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 8005276:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800527a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800527e:	ee17 3a10 	vmov	r3, s14
 8005282:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005286:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800528a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800528e:	3b01      	subs	r3, #1
 8005290:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005294:	ee17 1a90 	vmov	r1, s15
 8005298:	4419      	add	r1, r3
 800529a:	460b      	mov	r3, r1
 800529c:	e760      	b.n	8005160 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 800529e:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80052a2:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80052a6:	ee16 3a90 	vmov	r3, s13
 80052aa:	ee37 7a67 	vsub.f32	s14, s14, s15
 80052ae:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80052b2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80052b6:	3b01      	subs	r3, #1
 80052b8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80052bc:	ee17 2a10 	vmov	r2, s14
 80052c0:	441a      	add	r2, r3
 80052c2:	4613      	mov	r3, r2
 80052c4:	e769      	b.n	800519a <_ZN15ScreenGraphView11setupScreenEv+0xda>
 80052c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80052ca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80052ce:	ee17 3a10 	vmov	r3, s14
 80052d2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80052d6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80052da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80052de:	3b01      	subs	r3, #1
 80052e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052e4:	ee17 2a90 	vmov	r2, s15
 80052e8:	441a      	add	r2, r3
 80052ea:	4613      	mov	r3, r2
 80052ec:	e770      	b.n	80051d0 <_ZN15ScreenGraphView11setupScreenEv+0x110>
 80052ee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80052f2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80052f6:	ee17 3a10 	vmov	r3, s14
 80052fa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80052fe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005302:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005306:	3b01      	subs	r3, #1
 8005308:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800530c:	ee17 2a90 	vmov	r2, s15
 8005310:	441a      	add	r2, r3
 8005312:	4613      	mov	r3, r2
 8005314:	e778      	b.n	8005208 <_ZN15ScreenGraphView11setupScreenEv+0x148>
 8005316:	bf00      	nop
 8005318:	3c23d70a 	.word	0x3c23d70a
 800531c:	3ba3d70a 	.word	0x3ba3d70a
 8005320:	3dcccccd 	.word	0x3dcccccd
 8005324:	3d4ccccd 	.word	0x3d4ccccd

08005328 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005328:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 800532a:	4d11      	ldr	r5, [pc, #68]	; (8005370 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 800532c:	4a11      	ldr	r2, [pc, #68]	; (8005374 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 800532e:	682b      	ldr	r3, [r5, #0]
 8005330:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005332:	4604      	mov	r4, r0
 8005334:	ab01      	add	r3, sp, #4
 8005336:	2108      	movs	r1, #8
 8005338:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 800533c:	f00e fe70 	bl	8014020 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 8005340:	686b      	ldr	r3, [r5, #4]
 8005342:	4a0c      	ldr	r2, [pc, #48]	; (8005374 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8005344:	9301      	str	r3, [sp, #4]
 8005346:	f504 5096 	add.w	r0, r4, #4800	; 0x12c0
 800534a:	ab01      	add	r3, sp, #4
 800534c:	2108      	movs	r1, #8
 800534e:	3010      	adds	r0, #16
 8005350:	f00e fe66 	bl	8014020 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8005354:	f504 5091 	add.w	r0, r4, #4640	; 0x1220
 8005358:	3008      	adds	r0, #8
 800535a:	f00c fc7e 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 800535e:	f504 508e 	add.w	r0, r4, #4544	; 0x11c0
 8005362:	301c      	adds	r0, #28
}
 8005364:	b003      	add	sp, #12
 8005366:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 800536a:	f00c bc76 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 800536e:	bf00      	nop
 8005370:	20003a54 	.word	0x20003a54
 8005374:	0802329b 	.word	0x0802329b

08005378 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005378:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800537a:	4b24      	ldr	r3, [pc, #144]	; (800540c <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 800537c:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 8005380:	f8d0 3dc0 	ldr.w	r3, [r0, #3520]	; 0xdc0
 8005384:	ee07 3a90 	vmov	s15, r3
 8005388:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 800538c:	ed2d 8b02 	vpush	{d8}
 8005390:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005394:	4604      	mov	r4, r0
        if (fs >= 0)
 8005396:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800539a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800539e:	f600 558c 	addw	r5, r0, #3468	; 0xd8c
 80053a2:	db1e      	blt.n	80053e2 <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 80053a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053b0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80053b4:	4628      	mov	r0, r5
 80053b6:	f007 f865 	bl	800c484 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 80053ba:	6823      	ldr	r3, [r4, #0]
 80053bc:	4620      	mov	r0, r4
 80053be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053c0:	4798      	blx	r3
 80053c2:	6823      	ldr	r3, [r4, #0]
 80053c4:	4620      	mov	r0, r4
 80053c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80053c8:	eeb0 8a40 	vmov.f32	s16, s0
 80053cc:	4798      	blx	r3
 80053ce:	4628      	mov	r0, r5
 80053d0:	eef0 0a40 	vmov.f32	s1, s0
 80053d4:	eeb0 0a48 	vmov.f32	s0, s16
 80053d8:	f7fe f97a 	bl	80036d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 80053dc:	ecbd 8b02 	vpop	{d8}
 80053e0:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80053e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80053e6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80053ea:	ee17 3a10 	vmov	r3, s14
 80053ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80053f2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80053f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80053fa:	1e59      	subs	r1, r3, #1
 80053fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005400:	ee17 3a90 	vmov	r3, s15
 8005404:	440b      	add	r3, r1
 8005406:	4619      	mov	r1, r3
 8005408:	e7d4      	b.n	80053b4 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 800540a:	bf00      	nop
 800540c:	20003a54 	.word	0x20003a54

08005410 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
void ScreenGraphView::DrawPoint2Min(){
 8005410:	b570      	push	{r4, r5, r6, lr}
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 8005412:	4d52      	ldr	r5, [pc, #328]	; (800555c <_ZN15ScreenGraphView13DrawPoint2MinEv+0x14c>)
        const float fs = f * (float)scale;
 8005414:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8005418:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 800541c:	223c      	movs	r2, #60	; 0x3c
 800541e:	fb93 f3f2 	sdiv	r3, r3, r2
 8005422:	3306      	adds	r3, #6
 8005424:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8005428:	ed93 7a00 	vldr	s14, [r3]
 800542c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2Min(){
 8005430:	ed2d 8b02 	vpush	{d8}
 8005434:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005438:	4604      	mov	r4, r0
        if (fs >= 0)
 800543a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800543e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 8005442:	f500 7680 	add.w	r6, r0, #256	; 0x100
 8005446:	db74      	blt.n	8005532 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x122>
            return (int)(fs + 0.5f);
 8005448:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800544c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005450:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005454:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005458:	4630      	mov	r0, r6
 800545a:	f007 f813 	bl	800c484 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	    dynamicGraph2.setGraphRangeY((floor(ladowarka.NapiecieBaterii[0]*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10) );
 800545e:	ed95 0a06 	vldr	s0, [r5, #24]
 8005462:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 8005466:	ee20 0a08 	vmul.f32	s0, s0, s16
 800546a:	f01a ffe5 	bl	8020438 <floorf>
 800546e:	eef0 8a40 	vmov.f32	s17, s0
 8005472:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 8005476:	ee20 0a08 	vmul.f32	s0, s0, s16
 800547a:	f01a ff9b 	bl	80203b4 <ceilf>
 800547e:	4630      	mov	r0, r6
 8005480:	eec0 0a08 	vdiv.f32	s1, s0, s16
 8005484:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005488:	f7fe f922 	bl	80036d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.CzsasLadowaniaWSec>9*60 && ladowarka.CzsasLadowaniaWSec <59*60){ //jesli czas jest >9min i <59 min
 800548c:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8005490:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 8005494:	dd23      	ble.n	80054de <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
 8005496:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 800549a:	f640 53d3 	movw	r3, #3539	; 0xdd3
 800549e:	429a      	cmp	r2, r3
 80054a0:	dc1d      	bgt.n	80054de <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
		dynamicGraph2.setGraphRangeX(0,60);
 80054a2:	223c      	movs	r2, #60	; 0x3c
 80054a4:	2100      	movs	r1, #0
 80054a6:	4630      	mov	r0, r6
 80054a8:	f7fe f87c 	bl	80035a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 80054ac:	f8d4 2ca4 	ldr.w	r2, [r4, #3236]	; 0xca4
        return i * scale;
 80054b0:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	; 0xd24
 80054b4:	210a      	movs	r1, #10
 80054b6:	434a      	muls	r2, r1
 80054b8:	2a00      	cmp	r2, #0
 80054ba:	bfb8      	it	lt
 80054bc:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80054be:	f8c4 2ca8 	str.w	r2, [r4, #3240]	; 0xca8
        setIntervalScaled(abs(interval) * dataScale);
 80054c2:	f8d4 2c24 	ldr.w	r2, [r4, #3108]	; 0xc24
 80054c6:	0052      	lsls	r2, r2, #1
 80054c8:	434b      	muls	r3, r1
 80054ca:	2a00      	cmp	r2, #0
 80054cc:	bfb8      	it	lt
 80054ce:	4252      	neglt	r2, r2
 80054d0:	2b00      	cmp	r3, #0
 80054d2:	bfb8      	it	lt
 80054d4:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 80054d6:	f8c4 2c28 	str.w	r2, [r4, #3112]	; 0xc28
 80054da:	f8c4 3d28 	str.w	r3, [r4, #3368]	; 0xd28
	if (ladowarka.CzsasLadowaniaWSec >59*60){ //jesli czas jest >59 min
 80054de:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 80054e2:	f640 53d4 	movw	r3, #3540	; 0xdd4
 80054e6:	429a      	cmp	r2, r3
 80054e8:	dd20      	ble.n	800552c <_ZN15ScreenGraphView13DrawPoint2MinEv+0x11c>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 80054ea:	68ea      	ldr	r2, [r5, #12]
 80054ec:	253c      	movs	r5, #60	; 0x3c
 80054ee:	436a      	muls	r2, r5
 80054f0:	2100      	movs	r1, #0
 80054f2:	4630      	mov	r0, r6
 80054f4:	f7fe f856 	bl	80035a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 80054f8:	f8d4 2ca4 	ldr.w	r2, [r4, #3236]	; 0xca4
 80054fc:	436a      	muls	r2, r5
 80054fe:	2a00      	cmp	r2, #0
 8005500:	bfb8      	it	lt
 8005502:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005504:	f8c4 2ca8 	str.w	r2, [r4, #3240]	; 0xca8
        setIntervalScaled(abs(interval) * dataScale);
 8005508:	f8d4 2c24 	ldr.w	r2, [r4, #3108]	; 0xc24
 800550c:	230a      	movs	r3, #10
 800550e:	435a      	muls	r2, r3
 8005510:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	; 0xd24
 8005514:	2a00      	cmp	r2, #0
 8005516:	fb05 f303 	mul.w	r3, r5, r3
 800551a:	bfb8      	it	lt
 800551c:	4252      	neglt	r2, r2
 800551e:	2b00      	cmp	r3, #0
 8005520:	bfb8      	it	lt
 8005522:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 8005524:	f8c4 2c28 	str.w	r2, [r4, #3112]	; 0xc28
 8005528:	f8c4 3d28 	str.w	r3, [r4, #3368]	; 0xd28
}
 800552c:	ecbd 8b02 	vpop	{d8}
 8005530:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005532:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005536:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800553a:	ee17 3a10 	vmov	r3, s14
 800553e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005542:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005546:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800554a:	1e59      	subs	r1, r3, #1
 800554c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005550:	ee17 3a90 	vmov	r3, s15
 8005554:	440b      	add	r3, r1
 8005556:	4619      	mov	r1, r3
 8005558:	e77e      	b.n	8005458 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x48>
 800555a:	bf00      	nop
 800555c:	20003a54 	.word	0x20003a54

08005560 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8005560:	b510      	push	{r4, lr}
 8005562:	4604      	mov	r4, r0
 8005564:	f7fe fd90 	bl	8004088 <_ZN19ScreenGraphViewBaseC1Ev>
 8005568:	4b01      	ldr	r3, [pc, #4]	; (8005570 <_ZN15ScreenGraphViewC1Ev+0x10>)
 800556a:	6023      	str	r3, [r4, #0]
}
 800556c:	4620      	mov	r0, r4
 800556e:	bd10      	pop	{r4, pc}
 8005570:	08023350 	.word	0x08023350

08005574 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005574:	20f0      	movs	r0, #240	; 0xf0
 8005576:	4770      	bx	lr

08005578 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005578:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800557c:	4770      	bx	lr

0800557e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800557e:	2029      	movs	r0, #41	; 0x29
 8005580:	f7fc b9c0 	b.w	8001904 <LCD_IO_WriteReg>

08005584 <ili9341_DisplayOff>:
 8005584:	2028      	movs	r0, #40	; 0x28
 8005586:	f7fc b9bd 	b.w	8001904 <LCD_IO_WriteReg>

0800558a <ili9341_Init>:
{
 800558a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800558c:	f7fc f98e 	bl	80018ac <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8005590:	20ca      	movs	r0, #202	; 0xca
 8005592:	f7fc f9b7 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005596:	20c3      	movs	r0, #195	; 0xc3
 8005598:	f7fc f998 	bl	80018cc <LCD_IO_WriteData>
 800559c:	2008      	movs	r0, #8
 800559e:	f7fc f995 	bl	80018cc <LCD_IO_WriteData>
 80055a2:	2050      	movs	r0, #80	; 0x50
 80055a4:	f7fc f992 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80055a8:	20cf      	movs	r0, #207	; 0xcf
 80055aa:	f7fc f9ab 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80055ae:	2000      	movs	r0, #0
 80055b0:	f7fc f98c 	bl	80018cc <LCD_IO_WriteData>
 80055b4:	20c1      	movs	r0, #193	; 0xc1
 80055b6:	f7fc f989 	bl	80018cc <LCD_IO_WriteData>
 80055ba:	2030      	movs	r0, #48	; 0x30
 80055bc:	f7fc f986 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80055c0:	20ed      	movs	r0, #237	; 0xed
 80055c2:	f7fc f99f 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80055c6:	2064      	movs	r0, #100	; 0x64
 80055c8:	f7fc f980 	bl	80018cc <LCD_IO_WriteData>
 80055cc:	2003      	movs	r0, #3
 80055ce:	f7fc f97d 	bl	80018cc <LCD_IO_WriteData>
 80055d2:	2012      	movs	r0, #18
 80055d4:	f7fc f97a 	bl	80018cc <LCD_IO_WriteData>
 80055d8:	2081      	movs	r0, #129	; 0x81
 80055da:	f7fc f977 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80055de:	20e8      	movs	r0, #232	; 0xe8
 80055e0:	f7fc f990 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80055e4:	2085      	movs	r0, #133	; 0x85
 80055e6:	f7fc f971 	bl	80018cc <LCD_IO_WriteData>
 80055ea:	2000      	movs	r0, #0
 80055ec:	f7fc f96e 	bl	80018cc <LCD_IO_WriteData>
 80055f0:	2078      	movs	r0, #120	; 0x78
 80055f2:	f7fc f96b 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80055f6:	20cb      	movs	r0, #203	; 0xcb
 80055f8:	f7fc f984 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80055fc:	2039      	movs	r0, #57	; 0x39
 80055fe:	f7fc f965 	bl	80018cc <LCD_IO_WriteData>
 8005602:	202c      	movs	r0, #44	; 0x2c
 8005604:	f7fc f962 	bl	80018cc <LCD_IO_WriteData>
 8005608:	2000      	movs	r0, #0
 800560a:	f7fc f95f 	bl	80018cc <LCD_IO_WriteData>
 800560e:	2034      	movs	r0, #52	; 0x34
 8005610:	f7fc f95c 	bl	80018cc <LCD_IO_WriteData>
 8005614:	2002      	movs	r0, #2
 8005616:	f7fc f959 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800561a:	20f7      	movs	r0, #247	; 0xf7
 800561c:	f7fc f972 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005620:	2020      	movs	r0, #32
 8005622:	f7fc f953 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005626:	20ea      	movs	r0, #234	; 0xea
 8005628:	f7fc f96c 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800562c:	2000      	movs	r0, #0
 800562e:	f7fc f94d 	bl	80018cc <LCD_IO_WriteData>
 8005632:	2000      	movs	r0, #0
 8005634:	f7fc f94a 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005638:	20b1      	movs	r0, #177	; 0xb1
 800563a:	f7fc f963 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800563e:	2000      	movs	r0, #0
 8005640:	f7fc f944 	bl	80018cc <LCD_IO_WriteData>
 8005644:	201b      	movs	r0, #27
 8005646:	f7fc f941 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800564a:	20b6      	movs	r0, #182	; 0xb6
 800564c:	f7fc f95a 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005650:	200a      	movs	r0, #10
 8005652:	f7fc f93b 	bl	80018cc <LCD_IO_WriteData>
 8005656:	20a2      	movs	r0, #162	; 0xa2
 8005658:	f7fc f938 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800565c:	20c0      	movs	r0, #192	; 0xc0
 800565e:	f7fc f951 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005662:	2010      	movs	r0, #16
 8005664:	f7fc f932 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005668:	20c1      	movs	r0, #193	; 0xc1
 800566a:	f7fc f94b 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800566e:	2010      	movs	r0, #16
 8005670:	f7fc f92c 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005674:	20c5      	movs	r0, #197	; 0xc5
 8005676:	f7fc f945 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800567a:	2045      	movs	r0, #69	; 0x45
 800567c:	f7fc f926 	bl	80018cc <LCD_IO_WriteData>
 8005680:	2015      	movs	r0, #21
 8005682:	f7fc f923 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005686:	20c7      	movs	r0, #199	; 0xc7
 8005688:	f7fc f93c 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800568c:	2090      	movs	r0, #144	; 0x90
 800568e:	f7fc f91d 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005692:	2036      	movs	r0, #54	; 0x36
 8005694:	f7fc f936 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005698:	20c8      	movs	r0, #200	; 0xc8
 800569a:	f7fc f917 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800569e:	20f2      	movs	r0, #242	; 0xf2
 80056a0:	f7fc f930 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80056a4:	2000      	movs	r0, #0
 80056a6:	f7fc f911 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80056aa:	20b0      	movs	r0, #176	; 0xb0
 80056ac:	f7fc f92a 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80056b0:	20c2      	movs	r0, #194	; 0xc2
 80056b2:	f7fc f90b 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80056b6:	20b6      	movs	r0, #182	; 0xb6
 80056b8:	f7fc f924 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80056bc:	200a      	movs	r0, #10
 80056be:	f7fc f905 	bl	80018cc <LCD_IO_WriteData>
 80056c2:	20a7      	movs	r0, #167	; 0xa7
 80056c4:	f7fc f902 	bl	80018cc <LCD_IO_WriteData>
 80056c8:	2027      	movs	r0, #39	; 0x27
 80056ca:	f7fc f8ff 	bl	80018cc <LCD_IO_WriteData>
 80056ce:	2004      	movs	r0, #4
 80056d0:	f7fc f8fc 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80056d4:	202a      	movs	r0, #42	; 0x2a
 80056d6:	f7fc f915 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80056da:	2000      	movs	r0, #0
 80056dc:	f7fc f8f6 	bl	80018cc <LCD_IO_WriteData>
 80056e0:	2000      	movs	r0, #0
 80056e2:	f7fc f8f3 	bl	80018cc <LCD_IO_WriteData>
 80056e6:	2000      	movs	r0, #0
 80056e8:	f7fc f8f0 	bl	80018cc <LCD_IO_WriteData>
 80056ec:	20ef      	movs	r0, #239	; 0xef
 80056ee:	f7fc f8ed 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80056f2:	202b      	movs	r0, #43	; 0x2b
 80056f4:	f7fc f906 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80056f8:	2000      	movs	r0, #0
 80056fa:	f7fc f8e7 	bl	80018cc <LCD_IO_WriteData>
 80056fe:	2000      	movs	r0, #0
 8005700:	f7fc f8e4 	bl	80018cc <LCD_IO_WriteData>
 8005704:	2001      	movs	r0, #1
 8005706:	f7fc f8e1 	bl	80018cc <LCD_IO_WriteData>
 800570a:	203f      	movs	r0, #63	; 0x3f
 800570c:	f7fc f8de 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005710:	20f6      	movs	r0, #246	; 0xf6
 8005712:	f7fc f8f7 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005716:	2001      	movs	r0, #1
 8005718:	f7fc f8d8 	bl	80018cc <LCD_IO_WriteData>
 800571c:	2000      	movs	r0, #0
 800571e:	f7fc f8d5 	bl	80018cc <LCD_IO_WriteData>
 8005722:	2006      	movs	r0, #6
 8005724:	f7fc f8d2 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005728:	202c      	movs	r0, #44	; 0x2c
 800572a:	f7fc f8eb 	bl	8001904 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800572e:	20c8      	movs	r0, #200	; 0xc8
 8005730:	f7fc f936 	bl	80019a0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005734:	2026      	movs	r0, #38	; 0x26
 8005736:	f7fc f8e5 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800573a:	2001      	movs	r0, #1
 800573c:	f7fc f8c6 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005740:	20e0      	movs	r0, #224	; 0xe0
 8005742:	f7fc f8df 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005746:	200f      	movs	r0, #15
 8005748:	f7fc f8c0 	bl	80018cc <LCD_IO_WriteData>
 800574c:	2029      	movs	r0, #41	; 0x29
 800574e:	f7fc f8bd 	bl	80018cc <LCD_IO_WriteData>
 8005752:	2024      	movs	r0, #36	; 0x24
 8005754:	f7fc f8ba 	bl	80018cc <LCD_IO_WriteData>
 8005758:	200c      	movs	r0, #12
 800575a:	f7fc f8b7 	bl	80018cc <LCD_IO_WriteData>
 800575e:	200e      	movs	r0, #14
 8005760:	f7fc f8b4 	bl	80018cc <LCD_IO_WriteData>
 8005764:	2009      	movs	r0, #9
 8005766:	f7fc f8b1 	bl	80018cc <LCD_IO_WriteData>
 800576a:	204e      	movs	r0, #78	; 0x4e
 800576c:	f7fc f8ae 	bl	80018cc <LCD_IO_WriteData>
 8005770:	2078      	movs	r0, #120	; 0x78
 8005772:	f7fc f8ab 	bl	80018cc <LCD_IO_WriteData>
 8005776:	203c      	movs	r0, #60	; 0x3c
 8005778:	f7fc f8a8 	bl	80018cc <LCD_IO_WriteData>
 800577c:	2009      	movs	r0, #9
 800577e:	f7fc f8a5 	bl	80018cc <LCD_IO_WriteData>
 8005782:	2013      	movs	r0, #19
 8005784:	f7fc f8a2 	bl	80018cc <LCD_IO_WriteData>
 8005788:	2005      	movs	r0, #5
 800578a:	f7fc f89f 	bl	80018cc <LCD_IO_WriteData>
 800578e:	2017      	movs	r0, #23
 8005790:	f7fc f89c 	bl	80018cc <LCD_IO_WriteData>
 8005794:	2011      	movs	r0, #17
 8005796:	f7fc f899 	bl	80018cc <LCD_IO_WriteData>
 800579a:	2000      	movs	r0, #0
 800579c:	f7fc f896 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057a0:	20e1      	movs	r0, #225	; 0xe1
 80057a2:	f7fc f8af 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057a6:	2000      	movs	r0, #0
 80057a8:	f7fc f890 	bl	80018cc <LCD_IO_WriteData>
 80057ac:	2016      	movs	r0, #22
 80057ae:	f7fc f88d 	bl	80018cc <LCD_IO_WriteData>
 80057b2:	201b      	movs	r0, #27
 80057b4:	f7fc f88a 	bl	80018cc <LCD_IO_WriteData>
 80057b8:	2004      	movs	r0, #4
 80057ba:	f7fc f887 	bl	80018cc <LCD_IO_WriteData>
 80057be:	2011      	movs	r0, #17
 80057c0:	f7fc f884 	bl	80018cc <LCD_IO_WriteData>
 80057c4:	2007      	movs	r0, #7
 80057c6:	f7fc f881 	bl	80018cc <LCD_IO_WriteData>
 80057ca:	2031      	movs	r0, #49	; 0x31
 80057cc:	f7fc f87e 	bl	80018cc <LCD_IO_WriteData>
 80057d0:	2033      	movs	r0, #51	; 0x33
 80057d2:	f7fc f87b 	bl	80018cc <LCD_IO_WriteData>
 80057d6:	2042      	movs	r0, #66	; 0x42
 80057d8:	f7fc f878 	bl	80018cc <LCD_IO_WriteData>
 80057dc:	2005      	movs	r0, #5
 80057de:	f7fc f875 	bl	80018cc <LCD_IO_WriteData>
 80057e2:	200c      	movs	r0, #12
 80057e4:	f7fc f872 	bl	80018cc <LCD_IO_WriteData>
 80057e8:	200a      	movs	r0, #10
 80057ea:	f7fc f86f 	bl	80018cc <LCD_IO_WriteData>
 80057ee:	2028      	movs	r0, #40	; 0x28
 80057f0:	f7fc f86c 	bl	80018cc <LCD_IO_WriteData>
 80057f4:	202f      	movs	r0, #47	; 0x2f
 80057f6:	f7fc f869 	bl	80018cc <LCD_IO_WriteData>
 80057fa:	200f      	movs	r0, #15
 80057fc:	f7fc f866 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005800:	2011      	movs	r0, #17
 8005802:	f7fc f87f 	bl	8001904 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005806:	20c8      	movs	r0, #200	; 0xc8
 8005808:	f7fc f8ca 	bl	80019a0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800580c:	2029      	movs	r0, #41	; 0x29
 800580e:	f7fc f879 	bl	8001904 <LCD_IO_WriteReg>
}
 8005812:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8005816:	202c      	movs	r0, #44	; 0x2c
 8005818:	f7fc b874 	b.w	8001904 <LCD_IO_WriteReg>

0800581c <ili9341_ReadID>:
{
 800581c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800581e:	f7fc f845 	bl	80018ac <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005822:	2103      	movs	r1, #3
 8005824:	20d3      	movs	r0, #211	; 0xd3
 8005826:	f7fc f889 	bl	800193c <LCD_IO_ReadData>
}
 800582a:	b280      	uxth	r0, r0
 800582c:	bd08      	pop	{r3, pc}

0800582e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800582e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005830:	b2c4      	uxtb	r4, r0
 8005832:	2202      	movs	r2, #2
 8005834:	2103      	movs	r1, #3
 8005836:	4620      	mov	r0, r4
 8005838:	f7fb ffee 	bl	8001818 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800583c:	200a      	movs	r0, #10
 800583e:	f7fc f833 	bl	80018a8 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005842:	4620      	mov	r0, r4
 8005844:	2200      	movs	r2, #0
 8005846:	2103      	movs	r1, #3
 8005848:	f7fb ffe6 	bl	8001818 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 800584c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005850:	2002      	movs	r0, #2
 8005852:	f7fc b829 	b.w	80018a8 <IOE_Delay>

08005856 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005856:	b538      	push	{r3, r4, r5, lr}
 8005858:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800585a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 800585c:	f7fb ffda 	bl	8001814 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005860:	2100      	movs	r1, #0
 8005862:	4620      	mov	r0, r4
 8005864:	f7fb fff0 	bl	8001848 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005868:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800586a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800586c:	4620      	mov	r0, r4
 800586e:	f7fb ffeb 	bl	8001848 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005872:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005876:	b280      	uxth	r0, r0
 8005878:	bd38      	pop	{r3, r4, r5, pc}

0800587a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800587a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800587c:	b2c4      	uxtb	r4, r0
 800587e:	2140      	movs	r1, #64	; 0x40
 8005880:	4620      	mov	r0, r4
 8005882:	f7fb ffe1 	bl	8001848 <IOE_Read>
  
  if(state > 0)
 8005886:	0603      	lsls	r3, r0, #24
 8005888:	d507      	bpl.n	800589a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800588a:	214c      	movs	r1, #76	; 0x4c
 800588c:	4620      	mov	r0, r4
 800588e:	f7fb ffdb 	bl	8001848 <IOE_Read>
    {
      ret = 1;
 8005892:	3800      	subs	r0, #0
 8005894:	bf18      	it	ne
 8005896:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005898:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800589a:	2201      	movs	r2, #1
 800589c:	214b      	movs	r1, #75	; 0x4b
 800589e:	4620      	mov	r0, r4
 80058a0:	f7fb ffba 	bl	8001818 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80058a4:	4620      	mov	r0, r4
 80058a6:	2200      	movs	r2, #0
 80058a8:	214b      	movs	r1, #75	; 0x4b
 80058aa:	f7fb ffb5 	bl	8001818 <IOE_Write>
  uint8_t ret = 0;
 80058ae:	2000      	movs	r0, #0
 80058b0:	e7f2      	b.n	8005898 <stmpe811_TS_DetectTouch+0x1e>

080058b2 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80058b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80058b4:	2304      	movs	r3, #4
 80058b6:	b2c4      	uxtb	r4, r0
{
 80058b8:	460e      	mov	r6, r1
 80058ba:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80058bc:	21d7      	movs	r1, #215	; 0xd7
 80058be:	eb0d 0203 	add.w	r2, sp, r3
 80058c2:	4620      	mov	r0, r4
 80058c4:	f7fb ffda 	bl	800187c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80058c8:	9b01      	ldr	r3, [sp, #4]
 80058ca:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80058cc:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80058ce:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80058d2:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80058d4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80058d6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80058d8:	2201      	movs	r2, #1
 80058da:	214b      	movs	r1, #75	; 0x4b
 80058dc:	f7fb ff9c 	bl	8001818 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80058e0:	2200      	movs	r2, #0
 80058e2:	214b      	movs	r1, #75	; 0x4b
 80058e4:	4620      	mov	r0, r4
 80058e6:	f7fb ff97 	bl	8001818 <IOE_Write>
}
 80058ea:	b002      	add	sp, #8
 80058ec:	bd70      	pop	{r4, r5, r6, pc}
	...

080058f0 <stmpe811_Init>:
{
 80058f0:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80058f2:	4b0a      	ldr	r3, [pc, #40]	; (800591c <stmpe811_Init+0x2c>)
 80058f4:	781a      	ldrb	r2, [r3, #0]
 80058f6:	4290      	cmp	r0, r2
{
 80058f8:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 80058fa:	d00d      	beq.n	8005918 <stmpe811_Init+0x28>
 80058fc:	7859      	ldrb	r1, [r3, #1]
 80058fe:	4288      	cmp	r0, r1
 8005900:	d00a      	beq.n	8005918 <stmpe811_Init+0x28>
 8005902:	b10a      	cbz	r2, 8005908 <stmpe811_Init+0x18>
 8005904:	b941      	cbnz	r1, 8005918 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005906:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005908:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 800590a:	f7fb ff83 	bl	8001814 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800590e:	4620      	mov	r0, r4
}
 8005910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005914:	f7ff bf8b 	b.w	800582e <stmpe811_Reset>
}
 8005918:	bd10      	pop	{r4, pc}
 800591a:	bf00      	nop
 800591c:	200045c4 	.word	0x200045c4

08005920 <stmpe811_EnableGlobalIT>:
{
 8005920:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005922:	b2c4      	uxtb	r4, r0
 8005924:	2109      	movs	r1, #9
 8005926:	4620      	mov	r0, r4
 8005928:	f7fb ff8e 	bl	8001848 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800592c:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005930:	b2c2      	uxtb	r2, r0
 8005932:	2109      	movs	r1, #9
 8005934:	4620      	mov	r0, r4
}
 8005936:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800593a:	f7fb bf6d 	b.w	8001818 <IOE_Write>

0800593e <stmpe811_DisableGlobalIT>:
{
 800593e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005940:	b2c4      	uxtb	r4, r0
 8005942:	2109      	movs	r1, #9
 8005944:	4620      	mov	r0, r4
 8005946:	f7fb ff7f 	bl	8001848 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800594a:	2109      	movs	r1, #9
 800594c:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005950:	4620      	mov	r0, r4
}
 8005952:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005956:	f7fb bf5f 	b.w	8001818 <IOE_Write>

0800595a <stmpe811_EnableITSource>:
{
 800595a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800595c:	b2c4      	uxtb	r4, r0
{
 800595e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005960:	4620      	mov	r0, r4
 8005962:	210a      	movs	r1, #10
 8005964:	f7fb ff70 	bl	8001848 <IOE_Read>
  tmp |= Source; 
 8005968:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800596a:	b2c2      	uxtb	r2, r0
 800596c:	210a      	movs	r1, #10
 800596e:	4620      	mov	r0, r4
}
 8005970:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005974:	f7fb bf50 	b.w	8001818 <IOE_Write>

08005978 <stmpe811_TS_EnableIT>:
{
 8005978:	b507      	push	{r0, r1, r2, lr}
 800597a:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 800597c:	f7fb ff4b 	bl	8001816 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005980:	9801      	ldr	r0, [sp, #4]
 8005982:	211f      	movs	r1, #31
 8005984:	f7ff ffe9 	bl	800595a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005988:	9801      	ldr	r0, [sp, #4]
}
 800598a:	b003      	add	sp, #12
 800598c:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005990:	f7ff bfc6 	b.w	8005920 <stmpe811_EnableGlobalIT>

08005994 <stmpe811_DisableITSource>:
{
 8005994:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005996:	b2c4      	uxtb	r4, r0
{
 8005998:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800599a:	4620      	mov	r0, r4
 800599c:	210a      	movs	r1, #10
 800599e:	f7fb ff53 	bl	8001848 <IOE_Read>
  tmp &= ~Source; 
 80059a2:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80059a6:	b2c2      	uxtb	r2, r0
 80059a8:	210a      	movs	r1, #10
 80059aa:	4620      	mov	r0, r4
}
 80059ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80059b0:	f7fb bf32 	b.w	8001818 <IOE_Write>

080059b4 <stmpe811_TS_DisableIT>:
{
 80059b4:	b510      	push	{r4, lr}
 80059b6:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80059b8:	f7ff ffc1 	bl	800593e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80059bc:	4620      	mov	r0, r4
 80059be:	211f      	movs	r1, #31
}
 80059c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80059c4:	f7ff bfe6 	b.w	8005994 <stmpe811_DisableITSource>

080059c8 <stmpe811_ReadGITStatus>:
{
 80059c8:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80059ca:	b2c0      	uxtb	r0, r0
{
 80059cc:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80059ce:	210b      	movs	r1, #11
 80059d0:	f7fb ff3a 	bl	8001848 <IOE_Read>
}
 80059d4:	4020      	ands	r0, r4
 80059d6:	bd10      	pop	{r4, pc}

080059d8 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80059d8:	211f      	movs	r1, #31
 80059da:	f7ff bff5 	b.w	80059c8 <stmpe811_ReadGITStatus>

080059de <stmpe811_ClearGlobalIT>:
{
 80059de:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80059e0:	b2c0      	uxtb	r0, r0
 80059e2:	210b      	movs	r1, #11
 80059e4:	f7fb bf18 	b.w	8001818 <IOE_Write>

080059e8 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 80059e8:	211f      	movs	r1, #31
 80059ea:	f7ff bff8 	b.w	80059de <stmpe811_ClearGlobalIT>

080059ee <stmpe811_IO_EnableAF>:
{
 80059ee:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80059f0:	b2c4      	uxtb	r4, r0
{
 80059f2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80059f4:	4620      	mov	r0, r4
 80059f6:	2117      	movs	r1, #23
 80059f8:	f7fb ff26 	bl	8001848 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 80059fc:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005a00:	b2c2      	uxtb	r2, r0
 8005a02:	2117      	movs	r1, #23
 8005a04:	4620      	mov	r0, r4
}
 8005a06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005a0a:	f7fb bf05 	b.w	8001818 <IOE_Write>

08005a0e <stmpe811_TS_Start>:
{
 8005a0e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005a10:	b2c4      	uxtb	r4, r0
{
 8005a12:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005a14:	2104      	movs	r1, #4
 8005a16:	4620      	mov	r0, r4
 8005a18:	f7fb ff16 	bl	8001848 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005a1c:	2104      	movs	r1, #4
 8005a1e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005a22:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005a24:	4620      	mov	r0, r4
 8005a26:	f7fb fef7 	bl	8001818 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005a2a:	4630      	mov	r0, r6
 8005a2c:	21f0      	movs	r1, #240	; 0xf0
 8005a2e:	f7ff ffde 	bl	80059ee <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005a32:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005a36:	4620      	mov	r0, r4
 8005a38:	2104      	movs	r1, #4
 8005a3a:	f7fb feed 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005a3e:	2249      	movs	r2, #73	; 0x49
 8005a40:	2120      	movs	r1, #32
 8005a42:	4620      	mov	r0, r4
 8005a44:	f7fb fee8 	bl	8001818 <IOE_Write>
  IOE_Delay(2); 
 8005a48:	2002      	movs	r0, #2
 8005a4a:	f7fb ff2d 	bl	80018a8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005a4e:	4620      	mov	r0, r4
 8005a50:	2201      	movs	r2, #1
 8005a52:	2121      	movs	r1, #33	; 0x21
 8005a54:	f7fb fee0 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005a58:	4620      	mov	r0, r4
 8005a5a:	229a      	movs	r2, #154	; 0x9a
 8005a5c:	2141      	movs	r1, #65	; 0x41
 8005a5e:	f7fb fedb 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005a62:	4620      	mov	r0, r4
 8005a64:	2201      	movs	r2, #1
 8005a66:	214a      	movs	r1, #74	; 0x4a
 8005a68:	f7fb fed6 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a6c:	4620      	mov	r0, r4
 8005a6e:	2201      	movs	r2, #1
 8005a70:	214b      	movs	r1, #75	; 0x4b
 8005a72:	f7fb fed1 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005a76:	4620      	mov	r0, r4
 8005a78:	2200      	movs	r2, #0
 8005a7a:	214b      	movs	r1, #75	; 0x4b
 8005a7c:	f7fb fecc 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005a80:	4620      	mov	r0, r4
 8005a82:	2201      	movs	r2, #1
 8005a84:	2156      	movs	r1, #86	; 0x56
 8005a86:	f7fb fec7 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005a8a:	4620      	mov	r0, r4
 8005a8c:	2201      	movs	r2, #1
 8005a8e:	2158      	movs	r1, #88	; 0x58
 8005a90:	f7fb fec2 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005a94:	4620      	mov	r0, r4
 8005a96:	2201      	movs	r2, #1
 8005a98:	2140      	movs	r1, #64	; 0x40
 8005a9a:	f7fb febd 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005a9e:	4620      	mov	r0, r4
 8005aa0:	22ff      	movs	r2, #255	; 0xff
 8005aa2:	210b      	movs	r1, #11
 8005aa4:	f7fb feb8 	bl	8001818 <IOE_Write>
}
 8005aa8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005aac:	2002      	movs	r0, #2
 8005aae:	f7fb befb 	b.w	80018a8 <IOE_Delay>
	...

08005ab4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005ab4:	4b05      	ldr	r3, [pc, #20]	; (8005acc <SystemInit+0x18>)
 8005ab6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005aba:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005abe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005ac2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005ac6:	609a      	str	r2, [r3, #8]
#endif
}
 8005ac8:	4770      	bx	lr
 8005aca:	bf00      	nop
 8005acc:	e000ed00 	.word	0xe000ed00

08005ad0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005ad0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005ad2:	4b0b      	ldr	r3, [pc, #44]	; (8005b00 <HAL_Init+0x30>)
 8005ad4:	681a      	ldr	r2, [r3, #0]
 8005ad6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005ada:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005adc:	681a      	ldr	r2, [r3, #0]
 8005ade:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005ae2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005ae4:	681a      	ldr	r2, [r3, #0]
 8005ae6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005aea:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005aec:	2003      	movs	r0, #3
 8005aee:	f000 fa37 	bl	8005f60 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005af2:	2000      	movs	r0, #0
 8005af4:	f7fc fa12 	bl	8001f1c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005af8:	f7fb ff6c 	bl	80019d4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005afc:	2000      	movs	r0, #0
 8005afe:	bd08      	pop	{r3, pc}
 8005b00:	40023c00 	.word	0x40023c00

08005b04 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005b04:	4a03      	ldr	r2, [pc, #12]	; (8005b14 <HAL_IncTick+0x10>)
 8005b06:	4b04      	ldr	r3, [pc, #16]	; (8005b18 <HAL_IncTick+0x14>)
 8005b08:	6811      	ldr	r1, [r2, #0]
 8005b0a:	781b      	ldrb	r3, [r3, #0]
 8005b0c:	440b      	add	r3, r1
 8005b0e:	6013      	str	r3, [r2, #0]
}
 8005b10:	4770      	bx	lr
 8005b12:	bf00      	nop
 8005b14:	200045c8 	.word	0x200045c8
 8005b18:	20000080 	.word	0x20000080

08005b1c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005b1c:	4b01      	ldr	r3, [pc, #4]	; (8005b24 <HAL_GetTick+0x8>)
 8005b1e:	6818      	ldr	r0, [r3, #0]
}
 8005b20:	4770      	bx	lr
 8005b22:	bf00      	nop
 8005b24:	200045c8 	.word	0x200045c8

08005b28 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005b28:	b538      	push	{r3, r4, r5, lr}
 8005b2a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005b2c:	f7ff fff6 	bl	8005b1c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005b30:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005b32:	bf1c      	itt	ne
 8005b34:	4b05      	ldrne	r3, [pc, #20]	; (8005b4c <HAL_Delay+0x24>)
 8005b36:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005b38:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005b3a:	bf18      	it	ne
 8005b3c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005b3e:	f7ff ffed 	bl	8005b1c <HAL_GetTick>
 8005b42:	1b43      	subs	r3, r0, r5
 8005b44:	42a3      	cmp	r3, r4
 8005b46:	d3fa      	bcc.n	8005b3e <HAL_Delay+0x16>
  {
  }
}
 8005b48:	bd38      	pop	{r3, r4, r5, pc}
 8005b4a:	bf00      	nop
 8005b4c:	20000080 	.word	0x20000080

08005b50 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005b50:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005b52:	4604      	mov	r4, r0
 8005b54:	2800      	cmp	r0, #0
 8005b56:	f000 809b 	beq.w	8005c90 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005b5a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005b5c:	b925      	cbnz	r5, 8005b68 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005b5e:	f7fb ff59 	bl	8001a14 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005b62:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005b64:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005b68:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005b6a:	06db      	lsls	r3, r3, #27
 8005b6c:	f100 808e 	bmi.w	8005c8c <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005b70:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005b72:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005b76:	f023 0302 	bic.w	r3, r3, #2
 8005b7a:	f043 0302 	orr.w	r3, r3, #2
 8005b7e:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005b80:	4b44      	ldr	r3, [pc, #272]	; (8005c94 <HAL_ADC_Init+0x144>)
 8005b82:	685a      	ldr	r2, [r3, #4]
 8005b84:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005b88:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005b8a:	685a      	ldr	r2, [r3, #4]
 8005b8c:	6861      	ldr	r1, [r4, #4]
 8005b8e:	430a      	orrs	r2, r1
 8005b90:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005b92:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005b94:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005b96:	685a      	ldr	r2, [r3, #4]
 8005b98:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005b9c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005b9e:	685a      	ldr	r2, [r3, #4]
 8005ba0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005ba4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005ba6:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005ba8:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005baa:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005bae:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005bb0:	685a      	ldr	r2, [r3, #4]
 8005bb2:	430a      	orrs	r2, r1
 8005bb4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005bb6:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005bb8:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005bba:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005bbe:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005bc0:	689a      	ldr	r2, [r3, #8]
 8005bc2:	430a      	orrs	r2, r1
 8005bc4:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005bc6:	4934      	ldr	r1, [pc, #208]	; (8005c98 <HAL_ADC_Init+0x148>)
 8005bc8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005bca:	428a      	cmp	r2, r1
 8005bcc:	d052      	beq.n	8005c74 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005bce:	6899      	ldr	r1, [r3, #8]
 8005bd0:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005bd4:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005bd6:	6899      	ldr	r1, [r3, #8]
 8005bd8:	430a      	orrs	r2, r1
 8005bda:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005bdc:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005bde:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005be0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005be4:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005be6:	689a      	ldr	r2, [r3, #8]
 8005be8:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005bea:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005bec:	689a      	ldr	r2, [r3, #8]
 8005bee:	f022 0202 	bic.w	r2, r2, #2
 8005bf2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005bf4:	689a      	ldr	r2, [r3, #8]
 8005bf6:	7e21      	ldrb	r1, [r4, #24]
 8005bf8:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005bfc:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005bfe:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005c02:	2a00      	cmp	r2, #0
 8005c04:	d03e      	beq.n	8005c84 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005c06:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005c08:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005c0a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005c0e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005c10:	685a      	ldr	r2, [r3, #4]
 8005c12:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005c16:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005c18:	685a      	ldr	r2, [r3, #4]
 8005c1a:	3901      	subs	r1, #1
 8005c1c:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005c20:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005c22:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005c24:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005c26:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005c2a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005c2c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005c2e:	3901      	subs	r1, #1
 8005c30:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005c34:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005c36:	689a      	ldr	r2, [r3, #8]
 8005c38:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005c3c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8005c3e:	689a      	ldr	r2, [r3, #8]
 8005c40:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005c44:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005c48:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005c4a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005c4c:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005c4e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005c52:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005c54:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005c56:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005c58:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8005c5c:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005c5e:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005c60:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005c62:	f023 0303 	bic.w	r3, r3, #3
 8005c66:	f043 0301 	orr.w	r3, r3, #1
 8005c6a:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8005c6c:	2300      	movs	r3, #0
 8005c6e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005c72:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005c74:	689a      	ldr	r2, [r3, #8]
 8005c76:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005c7a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005c7c:	689a      	ldr	r2, [r3, #8]
 8005c7e:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005c82:	e7b2      	b.n	8005bea <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005c84:	685a      	ldr	r2, [r3, #4]
 8005c86:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005c8a:	e7c9      	b.n	8005c20 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8005c8c:	2001      	movs	r0, #1
 8005c8e:	e7ed      	b.n	8005c6c <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005c90:	2001      	movs	r0, #1
 8005c92:	e7ee      	b.n	8005c72 <HAL_ADC_Init+0x122>
 8005c94:	40012300 	.word	0x40012300
 8005c98:	0f000001 	.word	0x0f000001

08005c9c <HAL_ADC_Start>:
{
 8005c9c:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8005c9e:	2300      	movs	r3, #0
 8005ca0:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005ca2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005ca6:	2b01      	cmp	r3, #1
 8005ca8:	d060      	beq.n	8005d6c <HAL_ADC_Start+0xd0>
 8005caa:	2301      	movs	r3, #1
 8005cac:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005cb0:	6803      	ldr	r3, [r0, #0]
 8005cb2:	689a      	ldr	r2, [r3, #8]
 8005cb4:	07d2      	lsls	r2, r2, #31
 8005cb6:	d505      	bpl.n	8005cc4 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005cb8:	689a      	ldr	r2, [r3, #8]
 8005cba:	07d1      	lsls	r1, r2, #31
 8005cbc:	d414      	bmi.n	8005ce8 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8005cbe:	2000      	movs	r0, #0
}
 8005cc0:	b002      	add	sp, #8
 8005cc2:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005cc4:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005cc6:	492a      	ldr	r1, [pc, #168]	; (8005d70 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005cc8:	f042 0201 	orr.w	r2, r2, #1
 8005ccc:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005cce:	4a29      	ldr	r2, [pc, #164]	; (8005d74 <HAL_ADC_Start+0xd8>)
 8005cd0:	6812      	ldr	r2, [r2, #0]
 8005cd2:	fbb2 f2f1 	udiv	r2, r2, r1
 8005cd6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005cda:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005cdc:	9a01      	ldr	r2, [sp, #4]
 8005cde:	2a00      	cmp	r2, #0
 8005ce0:	d0ea      	beq.n	8005cb8 <HAL_ADC_Start+0x1c>
      counter--;
 8005ce2:	9a01      	ldr	r2, [sp, #4]
 8005ce4:	3a01      	subs	r2, #1
 8005ce6:	e7f8      	b.n	8005cda <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005ce8:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005cea:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005cee:	f022 0201 	bic.w	r2, r2, #1
 8005cf2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005cf6:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005cf8:	685a      	ldr	r2, [r3, #4]
 8005cfa:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005cfc:	bf41      	itttt	mi
 8005cfe:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005d00:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005d04:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005d08:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005d0a:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005d0c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005d10:	bf1c      	itt	ne
 8005d12:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005d14:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005d18:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8005d1a:	2200      	movs	r2, #0
 8005d1c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005d20:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005d24:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005d26:	4a14      	ldr	r2, [pc, #80]	; (8005d78 <HAL_ADC_Start+0xdc>)
 8005d28:	6851      	ldr	r1, [r2, #4]
 8005d2a:	f011 0f1f 	tst.w	r1, #31
 8005d2e:	4913      	ldr	r1, [pc, #76]	; (8005d7c <HAL_ADC_Start+0xe0>)
 8005d30:	d119      	bne.n	8005d66 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005d32:	428b      	cmp	r3, r1
 8005d34:	d007      	beq.n	8005d46 <HAL_ADC_Start+0xaa>
 8005d36:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8005d3a:	428b      	cmp	r3, r1
 8005d3c:	d10c      	bne.n	8005d58 <HAL_ADC_Start+0xbc>
 8005d3e:	6852      	ldr	r2, [r2, #4]
 8005d40:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005d44:	d1bb      	bne.n	8005cbe <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005d46:	6898      	ldr	r0, [r3, #8]
 8005d48:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8005d4c:	d1b7      	bne.n	8005cbe <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8005d4e:	689a      	ldr	r2, [r3, #8]
 8005d50:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005d54:	609a      	str	r2, [r3, #8]
 8005d56:	e7b3      	b.n	8005cc0 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005d58:	4909      	ldr	r1, [pc, #36]	; (8005d80 <HAL_ADC_Start+0xe4>)
 8005d5a:	428b      	cmp	r3, r1
 8005d5c:	d1af      	bne.n	8005cbe <HAL_ADC_Start+0x22>
 8005d5e:	6852      	ldr	r2, [r2, #4]
 8005d60:	f012 0f10 	tst.w	r2, #16
 8005d64:	e7ee      	b.n	8005d44 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005d66:	428b      	cmp	r3, r1
 8005d68:	d1a9      	bne.n	8005cbe <HAL_ADC_Start+0x22>
 8005d6a:	e7ec      	b.n	8005d46 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8005d6c:	2002      	movs	r0, #2
 8005d6e:	e7a7      	b.n	8005cc0 <HAL_ADC_Start+0x24>
 8005d70:	000f4240 	.word	0x000f4240
 8005d74:	2000007c 	.word	0x2000007c
 8005d78:	40012300 	.word	0x40012300
 8005d7c:	40012000 	.word	0x40012000
 8005d80:	40012200 	.word	0x40012200

08005d84 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8005d84:	6803      	ldr	r3, [r0, #0]
 8005d86:	689a      	ldr	r2, [r3, #8]
 8005d88:	0552      	lsls	r2, r2, #21
{
 8005d8a:	b570      	push	{r4, r5, r6, lr}
 8005d8c:	4604      	mov	r4, r0
 8005d8e:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8005d90:	d50b      	bpl.n	8005daa <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 8005d92:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8005d94:	05de      	lsls	r6, r3, #23
 8005d96:	d508      	bpl.n	8005daa <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8005d98:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8005d9a:	f043 0320 	orr.w	r3, r3, #32
 8005d9e:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 8005da0:	2300      	movs	r3, #0
 8005da2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 8005da6:	2001      	movs	r0, #1
}
 8005da8:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 8005daa:	f7ff feb7 	bl	8005b1c <HAL_GetTick>
 8005dae:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8005db0:	6823      	ldr	r3, [r4, #0]
 8005db2:	681a      	ldr	r2, [r3, #0]
 8005db4:	0791      	lsls	r1, r2, #30
 8005db6:	d50c      	bpl.n	8005dd2 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8005db8:	f06f 0212 	mvn.w	r2, #18
 8005dbc:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8005dbe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005dc0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005dc4:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8005dc6:	689a      	ldr	r2, [r3, #8]
 8005dc8:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 8005dcc:	d013      	beq.n	8005df6 <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 8005dce:	2000      	movs	r0, #0
 8005dd0:	e7ea      	b.n	8005da8 <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 8005dd2:	1c68      	adds	r0, r5, #1
 8005dd4:	d0ed      	beq.n	8005db2 <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8005dd6:	b945      	cbnz	r5, 8005dea <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8005dd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005dda:	f043 0304 	orr.w	r3, r3, #4
 8005dde:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 8005de0:	2300      	movs	r3, #0
 8005de2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 8005de6:	2003      	movs	r0, #3
 8005de8:	e7de      	b.n	8005da8 <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8005dea:	f7ff fe97 	bl	8005b1c <HAL_GetTick>
 8005dee:	1b80      	subs	r0, r0, r6
 8005df0:	42a8      	cmp	r0, r5
 8005df2:	d9dd      	bls.n	8005db0 <HAL_ADC_PollForConversion+0x2c>
 8005df4:	e7f0      	b.n	8005dd8 <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8005df6:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8005df8:	2800      	cmp	r0, #0
 8005dfa:	d1e8      	bne.n	8005dce <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8005dfc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8005dfe:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 8005e02:	d002      	beq.n	8005e0a <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8005e04:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8005e06:	055a      	lsls	r2, r3, #21
 8005e08:	d4e1      	bmi.n	8005dce <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8005e0a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e0c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005e10:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005e12:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e14:	04db      	lsls	r3, r3, #19
 8005e16:	d4da      	bmi.n	8005dce <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8005e18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e1a:	f043 0301 	orr.w	r3, r3, #1
 8005e1e:	6423      	str	r3, [r4, #64]	; 0x40
 8005e20:	e7c2      	b.n	8005da8 <HAL_ADC_PollForConversion+0x24>

08005e22 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8005e22:	6803      	ldr	r3, [r0, #0]
 8005e24:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005e26:	4770      	bx	lr

08005e28 <HAL_ADC_ConfigChannel>:
{
 8005e28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8005e2a:	2300      	movs	r3, #0
 8005e2c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005e2e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005e32:	2b01      	cmp	r3, #1
 8005e34:	d069      	beq.n	8005f0a <HAL_ADC_ConfigChannel+0xe2>
 8005e36:	2301      	movs	r3, #1
 8005e38:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005e3c:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005e3e:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005e40:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005e42:	2d09      	cmp	r5, #9
 8005e44:	b2ac      	uxth	r4, r5
 8005e46:	d934      	bls.n	8005eb2 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005e48:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8005e4c:	68df      	ldr	r7, [r3, #12]
 8005e4e:	3a1e      	subs	r2, #30
 8005e50:	f04f 0c07 	mov.w	ip, #7
 8005e54:	fa0c fc02 	lsl.w	ip, ip, r2
 8005e58:	ea27 070c 	bic.w	r7, r7, ip
 8005e5c:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005e5e:	68df      	ldr	r7, [r3, #12]
 8005e60:	fa06 f202 	lsl.w	r2, r6, r2
 8005e64:	433a      	orrs	r2, r7
 8005e66:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8005e68:	6849      	ldr	r1, [r1, #4]
 8005e6a:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005e6c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8005e70:	d82f      	bhi.n	8005ed2 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005e72:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005e74:	3a05      	subs	r2, #5
 8005e76:	261f      	movs	r6, #31
 8005e78:	4096      	lsls	r6, r2
 8005e7a:	ea21 0106 	bic.w	r1, r1, r6
 8005e7e:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8005e80:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005e82:	fa04 f202 	lsl.w	r2, r4, r2
 8005e86:	430a      	orrs	r2, r1
 8005e88:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8005e8a:	4a30      	ldr	r2, [pc, #192]	; (8005f4c <HAL_ADC_ConfigChannel+0x124>)
 8005e8c:	4293      	cmp	r3, r2
 8005e8e:	d10a      	bne.n	8005ea6 <HAL_ADC_ConfigChannel+0x7e>
 8005e90:	2d12      	cmp	r5, #18
 8005e92:	d13c      	bne.n	8005f0e <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8005e94:	4b2e      	ldr	r3, [pc, #184]	; (8005f50 <HAL_ADC_ConfigChannel+0x128>)
 8005e96:	685a      	ldr	r2, [r3, #4]
 8005e98:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005e9c:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8005e9e:	685a      	ldr	r2, [r3, #4]
 8005ea0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005ea4:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8005ea6:	2300      	movs	r3, #0
 8005ea8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005eac:	4618      	mov	r0, r3
}
 8005eae:	b003      	add	sp, #12
 8005eb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8005eb2:	691f      	ldr	r7, [r3, #16]
 8005eb4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8005eb8:	f04f 0c07 	mov.w	ip, #7
 8005ebc:	fa0c fc02 	lsl.w	ip, ip, r2
 8005ec0:	ea27 070c 	bic.w	r7, r7, ip
 8005ec4:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8005ec6:	691f      	ldr	r7, [r3, #16]
 8005ec8:	fa06 f202 	lsl.w	r2, r6, r2
 8005ecc:	433a      	orrs	r2, r7
 8005ece:	611a      	str	r2, [r3, #16]
 8005ed0:	e7ca      	b.n	8005e68 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8005ed2:	290c      	cmp	r1, #12
 8005ed4:	f04f 011f 	mov.w	r1, #31
 8005ed8:	d80b      	bhi.n	8005ef2 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8005eda:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8005edc:	3a23      	subs	r2, #35	; 0x23
 8005ede:	4091      	lsls	r1, r2
 8005ee0:	ea26 0101 	bic.w	r1, r6, r1
 8005ee4:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8005ee6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005ee8:	fa04 f202 	lsl.w	r2, r4, r2
 8005eec:	430a      	orrs	r2, r1
 8005eee:	631a      	str	r2, [r3, #48]	; 0x30
 8005ef0:	e7cb      	b.n	8005e8a <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8005ef2:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005ef4:	3a41      	subs	r2, #65	; 0x41
 8005ef6:	4091      	lsls	r1, r2
 8005ef8:	ea26 0101 	bic.w	r1, r6, r1
 8005efc:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8005efe:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005f00:	fa04 f202 	lsl.w	r2, r4, r2
 8005f04:	430a      	orrs	r2, r1
 8005f06:	62da      	str	r2, [r3, #44]	; 0x2c
 8005f08:	e7bf      	b.n	8005e8a <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 8005f0a:	2002      	movs	r0, #2
 8005f0c:	e7cf      	b.n	8005eae <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8005f0e:	4b11      	ldr	r3, [pc, #68]	; (8005f54 <HAL_ADC_ConfigChannel+0x12c>)
 8005f10:	429d      	cmp	r5, r3
 8005f12:	d001      	beq.n	8005f18 <HAL_ADC_ConfigChannel+0xf0>
 8005f14:	2d11      	cmp	r5, #17
 8005f16:	d1c6      	bne.n	8005ea6 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8005f18:	4b0d      	ldr	r3, [pc, #52]	; (8005f50 <HAL_ADC_ConfigChannel+0x128>)
 8005f1a:	685a      	ldr	r2, [r3, #4]
 8005f1c:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8005f20:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8005f22:	685a      	ldr	r2, [r3, #4]
 8005f24:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8005f28:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 8005f2a:	4b0a      	ldr	r3, [pc, #40]	; (8005f54 <HAL_ADC_ConfigChannel+0x12c>)
 8005f2c:	429d      	cmp	r5, r3
 8005f2e:	d1ba      	bne.n	8005ea6 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8005f30:	4b09      	ldr	r3, [pc, #36]	; (8005f58 <HAL_ADC_ConfigChannel+0x130>)
 8005f32:	4a0a      	ldr	r2, [pc, #40]	; (8005f5c <HAL_ADC_ConfigChannel+0x134>)
 8005f34:	681b      	ldr	r3, [r3, #0]
 8005f36:	fbb3 f3f2 	udiv	r3, r3, r2
 8005f3a:	220a      	movs	r2, #10
 8005f3c:	4353      	muls	r3, r2
        counter--;
 8005f3e:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8005f40:	9b01      	ldr	r3, [sp, #4]
 8005f42:	2b00      	cmp	r3, #0
 8005f44:	d0af      	beq.n	8005ea6 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 8005f46:	9b01      	ldr	r3, [sp, #4]
 8005f48:	3b01      	subs	r3, #1
 8005f4a:	e7f8      	b.n	8005f3e <HAL_ADC_ConfigChannel+0x116>
 8005f4c:	40012000 	.word	0x40012000
 8005f50:	40012300 	.word	0x40012300
 8005f54:	10000012 	.word	0x10000012
 8005f58:	2000007c 	.word	0x2000007c
 8005f5c:	000f4240 	.word	0x000f4240

08005f60 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005f60:	4907      	ldr	r1, [pc, #28]	; (8005f80 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8005f62:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005f64:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005f68:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005f6a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005f6c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005f70:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8005f72:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8005f74:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005f78:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8005f7c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8005f7e:	4770      	bx	lr
 8005f80:	e000ed00 	.word	0xe000ed00

08005f84 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8005f84:	4b16      	ldr	r3, [pc, #88]	; (8005fe0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8005f86:	b530      	push	{r4, r5, lr}
 8005f88:	68dc      	ldr	r4, [r3, #12]
 8005f8a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005f8e:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005f92:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005f94:	2d04      	cmp	r5, #4
 8005f96:	bf28      	it	cs
 8005f98:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005f9a:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005f9c:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005fa0:	bf8c      	ite	hi
 8005fa2:	3c03      	subhi	r4, #3
 8005fa4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005fa6:	fa03 f505 	lsl.w	r5, r3, r5
 8005faa:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005fae:	40a3      	lsls	r3, r4
 8005fb0:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005fb4:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8005fb6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005fb8:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005fbc:	bfac      	ite	ge
 8005fbe:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005fc2:	4a08      	ldrlt	r2, [pc, #32]	; (8005fe4 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005fc4:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005fc8:	bfb8      	it	lt
 8005fca:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005fce:	b2db      	uxtb	r3, r3
 8005fd0:	bfaa      	itet	ge
 8005fd2:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005fd6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005fd8:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005fdc:	bd30      	pop	{r4, r5, pc}
 8005fde:	bf00      	nop
 8005fe0:	e000ed00 	.word	0xe000ed00
 8005fe4:	e000ed14 	.word	0xe000ed14

08005fe8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005fe8:	2800      	cmp	r0, #0
 8005fea:	db08      	blt.n	8005ffe <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005fec:	0942      	lsrs	r2, r0, #5
 8005fee:	2301      	movs	r3, #1
 8005ff0:	f000 001f 	and.w	r0, r0, #31
 8005ff4:	fa03 f000 	lsl.w	r0, r3, r0
 8005ff8:	4b01      	ldr	r3, [pc, #4]	; (8006000 <HAL_NVIC_EnableIRQ+0x18>)
 8005ffa:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005ffe:	4770      	bx	lr
 8006000:	e000e100 	.word	0xe000e100

08006004 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006004:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006006:	4604      	mov	r4, r0
 8006008:	b150      	cbz	r0, 8006020 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800600a:	7943      	ldrb	r3, [r0, #5]
 800600c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006010:	b913      	cbnz	r3, 8006018 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006012:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006014:	f7fb fd30 	bl	8001a78 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8006018:	2301      	movs	r3, #1
 800601a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800601c:	2000      	movs	r0, #0
}
 800601e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006020:	2001      	movs	r0, #1
 8006022:	e7fc      	b.n	800601e <HAL_CRC_Init+0x1a>

08006024 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006024:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8006026:	4604      	mov	r4, r0
 8006028:	b168      	cbz	r0, 8006046 <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800602a:	7903      	ldrb	r3, [r0, #4]
 800602c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006030:	b913      	cbnz	r3, 8006038 <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8006032:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006034:	f7fb fd38 	bl	8001aa8 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8006038:	2302      	movs	r3, #2
 800603a:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800603c:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 800603e:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006040:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 8006042:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006044:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8006046:	2001      	movs	r0, #1
 8006048:	e7fc      	b.n	8006044 <HAL_DAC_Init+0x20>

0800604a <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 800604a:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 800604c:	7943      	ldrb	r3, [r0, #5]
 800604e:	2b01      	cmp	r3, #1
 8006050:	f04f 0302 	mov.w	r3, #2
 8006054:	d017      	beq.n	8006086 <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 8006056:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 8006058:	6803      	ldr	r3, [r0, #0]
 800605a:	2201      	movs	r2, #1
 800605c:	681c      	ldr	r4, [r3, #0]
 800605e:	408a      	lsls	r2, r1
 8006060:	4322      	orrs	r2, r4
 8006062:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 8006064:	b989      	cbnz	r1, 800608a <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 8006066:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8006068:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 800606a:	074c      	lsls	r4, r1, #29
 800606c:	d507      	bpl.n	800607e <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 800606e:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8006072:	2a38      	cmp	r2, #56	; 0x38
 8006074:	d103      	bne.n	800607e <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 8006076:	685a      	ldr	r2, [r3, #4]
 8006078:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 800607c:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 800607e:	2301      	movs	r3, #1
 8006080:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8006082:	2300      	movs	r3, #0
 8006084:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8006086:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 8006088:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 800608a:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 800608c:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 800608e:	0349      	lsls	r1, r1, #13
 8006090:	d5f5      	bpl.n	800607e <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 8006092:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 8006096:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 800609a:	d1f0      	bne.n	800607e <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 800609c:	685a      	ldr	r2, [r3, #4]
 800609e:	f042 0202 	orr.w	r2, r2, #2
 80060a2:	e7eb      	b.n	800607c <HAL_DAC_Start+0x32>

080060a4 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80060a4:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80060a6:	7943      	ldrb	r3, [r0, #5]
 80060a8:	2b01      	cmp	r3, #1
 80060aa:	f04f 0302 	mov.w	r3, #2
 80060ae:	d018      	beq.n	80060e2 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 80060b0:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 80060b2:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 80060b4:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 80060b6:	f640 75fe 	movw	r5, #4094	; 0xffe
 80060ba:	4095      	lsls	r5, r2
 80060bc:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 80060c0:	e9d1 3100 	ldrd	r3, r1, [r1]
 80060c4:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 80060c6:	4093      	lsls	r3, r2
 80060c8:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 80060ca:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80060cc:	6823      	ldr	r3, [r4, #0]
 80060ce:	21c0      	movs	r1, #192	; 0xc0
 80060d0:	fa01 f202 	lsl.w	r2, r1, r2
 80060d4:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80060d8:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80060da:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 80060dc:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80060de:	2300      	movs	r3, #0
 80060e0:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80060e2:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 80060e4:	bd30      	pop	{r4, r5, pc}

080060e6 <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 80060e6:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 80060e8:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 80060ea:	2400      	movs	r4, #0
 80060ec:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 80060ee:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 80060f0:	b941      	cbnz	r1, 8006104 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 80060f2:	9901      	ldr	r1, [sp, #4]
 80060f4:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 80060f6:	440a      	add	r2, r1
 80060f8:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 80060fa:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 80060fc:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 80060fe:	6013      	str	r3, [r2, #0]
}
 8006100:	b002      	add	sp, #8
 8006102:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006104:	9901      	ldr	r1, [sp, #4]
 8006106:	3114      	adds	r1, #20
 8006108:	e7f5      	b.n	80060f6 <HAL_DAC_SetValue+0x10>

0800610a <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800610a:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800610c:	4604      	mov	r4, r0
 800610e:	b330      	cbz	r0, 800615e <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006110:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006114:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006118:	b91b      	cbnz	r3, 8006122 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800611a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800611e:	f7fb fcf5 	bl	8001b0c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006122:	6822      	ldr	r2, [r4, #0]
 8006124:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006126:	2302      	movs	r3, #2
 8006128:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800612c:	6813      	ldr	r3, [r2, #0]
 800612e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006132:	430b      	orrs	r3, r1
 8006134:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8006136:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8006138:	68a1      	ldr	r1, [r4, #8]
 800613a:	f023 0307 	bic.w	r3, r3, #7
 800613e:	430b      	orrs	r3, r1
 8006140:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8006142:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006144:	68e1      	ldr	r1, [r4, #12]
 8006146:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800614a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800614e:	430b      	orrs	r3, r1
 8006150:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006152:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006154:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006156:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006158:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800615c:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800615e:	2001      	movs	r0, #1
 8006160:	e7fc      	b.n	800615c <HAL_DMA2D_Init+0x52>

08006162 <HAL_DMA2D_LineEventCallback>:
 8006162:	4770      	bx	lr

08006164 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8006164:	4770      	bx	lr

08006166 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8006166:	6803      	ldr	r3, [r0, #0]
{
 8006168:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800616a:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800616c:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800616e:	07f2      	lsls	r2, r6, #31
{
 8006170:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006172:	d514      	bpl.n	800619e <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8006174:	05e9      	lsls	r1, r5, #23
 8006176:	d512      	bpl.n	800619e <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8006178:	681a      	ldr	r2, [r3, #0]
 800617a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800617e:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8006180:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8006182:	f042 0201 	orr.w	r2, r2, #1
 8006186:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8006188:	2201      	movs	r2, #1
 800618a:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800618c:	2304      	movs	r3, #4
 800618e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006192:	2300      	movs	r3, #0
 8006194:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8006198:	6943      	ldr	r3, [r0, #20]
 800619a:	b103      	cbz	r3, 800619e <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800619c:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800619e:	06b2      	lsls	r2, r6, #26
 80061a0:	d516      	bpl.n	80061d0 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80061a2:	04ab      	lsls	r3, r5, #18
 80061a4:	d514      	bpl.n	80061d0 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80061a6:	6823      	ldr	r3, [r4, #0]
 80061a8:	681a      	ldr	r2, [r3, #0]
 80061aa:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80061ae:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80061b0:	2220      	movs	r2, #32
 80061b2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80061b4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80061b6:	f043 0302 	orr.w	r3, r3, #2
 80061ba:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80061bc:	2304      	movs	r3, #4
 80061be:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80061c2:	2300      	movs	r3, #0
 80061c4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80061c8:	6963      	ldr	r3, [r4, #20]
 80061ca:	b10b      	cbz	r3, 80061d0 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80061cc:	4620      	mov	r0, r4
 80061ce:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80061d0:	0730      	lsls	r0, r6, #28
 80061d2:	d516      	bpl.n	8006202 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80061d4:	0529      	lsls	r1, r5, #20
 80061d6:	d514      	bpl.n	8006202 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80061d8:	6823      	ldr	r3, [r4, #0]
 80061da:	681a      	ldr	r2, [r3, #0]
 80061dc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80061e0:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80061e2:	2208      	movs	r2, #8
 80061e4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80061e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80061e8:	f043 0304 	orr.w	r3, r3, #4
 80061ec:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80061ee:	2304      	movs	r3, #4
 80061f0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80061f4:	2300      	movs	r3, #0
 80061f6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80061fa:	6963      	ldr	r3, [r4, #20]
 80061fc:	b10b      	cbz	r3, 8006202 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80061fe:	4620      	mov	r0, r4
 8006200:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006202:	0772      	lsls	r2, r6, #29
 8006204:	d50b      	bpl.n	800621e <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006206:	056b      	lsls	r3, r5, #21
 8006208:	d509      	bpl.n	800621e <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800620a:	6823      	ldr	r3, [r4, #0]
 800620c:	681a      	ldr	r2, [r3, #0]
 800620e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006212:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006214:	2204      	movs	r2, #4
 8006216:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006218:	4620      	mov	r0, r4
 800621a:	f7ff ffa2 	bl	8006162 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800621e:	07b0      	lsls	r0, r6, #30
 8006220:	d514      	bpl.n	800624c <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006222:	05a9      	lsls	r1, r5, #22
 8006224:	d512      	bpl.n	800624c <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006226:	6823      	ldr	r3, [r4, #0]
 8006228:	681a      	ldr	r2, [r3, #0]
 800622a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800622e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006230:	2202      	movs	r2, #2
 8006232:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006234:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006236:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006238:	2301      	movs	r3, #1
 800623a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800623e:	2300      	movs	r3, #0
 8006240:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006244:	6923      	ldr	r3, [r4, #16]
 8006246:	b10b      	cbz	r3, 800624c <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8006248:	4620      	mov	r0, r4
 800624a:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800624c:	06f2      	lsls	r2, r6, #27
 800624e:	d513      	bpl.n	8006278 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8006250:	04eb      	lsls	r3, r5, #19
 8006252:	d511      	bpl.n	8006278 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8006254:	6823      	ldr	r3, [r4, #0]
 8006256:	681a      	ldr	r2, [r3, #0]
 8006258:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800625c:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800625e:	2210      	movs	r2, #16
 8006260:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006262:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006264:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006266:	2301      	movs	r3, #1
 8006268:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800626c:	2300      	movs	r3, #0
 800626e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8006272:	4620      	mov	r0, r4
 8006274:	f7ff ff76 	bl	8006164 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8006278:	bd70      	pop	{r4, r5, r6, pc}
	...

0800627c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800627c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800627e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8006282:	2b01      	cmp	r3, #1
 8006284:	f04f 0302 	mov.w	r3, #2
 8006288:	d02b      	beq.n	80062e2 <HAL_DMA2D_ConfigLayer+0x66>
 800628a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800628c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8006290:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006294:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8006298:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800629c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800629e:	4f18      	ldr	r7, [pc, #96]	; (8006300 <HAL_DMA2D_ConfigLayer+0x84>)
 80062a0:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80062a4:	3c09      	subs	r4, #9
 80062a6:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80062a8:	bf9c      	itt	ls
 80062aa:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80062ae:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80062b0:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80062b4:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80062b6:	bf88      	it	hi
 80062b8:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80062bc:	b999      	cbnz	r1, 80062e6 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80062be:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80062c0:	4039      	ands	r1, r7
 80062c2:	430a      	orrs	r2, r1
 80062c4:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80062c6:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80062c8:	6982      	ldr	r2, [r0, #24]
 80062ca:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80062cc:	d803      	bhi.n	80062d6 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80062ce:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80062d0:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80062d4:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80062d6:	2301      	movs	r3, #1
 80062d8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80062dc:	2300      	movs	r3, #0
 80062de:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80062e2:	4618      	mov	r0, r3

  return HAL_OK;
}
 80062e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80062e6:	69d9      	ldr	r1, [r3, #28]
 80062e8:	4039      	ands	r1, r7
 80062ea:	430a      	orrs	r2, r1
 80062ec:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80062ee:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80062f0:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80062f2:	6992      	ldr	r2, [r2, #24]
 80062f4:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 80062f6:	bf9c      	itt	ls
 80062f8:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 80062fc:	621d      	strls	r5, [r3, #32]
 80062fe:	e7ea      	b.n	80062d6 <HAL_DMA2D_ConfigLayer+0x5a>
 8006300:	00fcfff0 	.word	0x00fcfff0

08006304 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006304:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006308:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80064cc <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800630c:	4a6d      	ldr	r2, [pc, #436]	; (80064c4 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800630e:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 80064d0 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006312:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006314:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8006316:	2401      	movs	r4, #1
 8006318:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800631a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800631e:	43ac      	bics	r4, r5
 8006320:	f040 80b7 	bne.w	8006492 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006324:	684c      	ldr	r4, [r1, #4]
 8006326:	f024 0c10 	bic.w	ip, r4, #16
 800632a:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800632e:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006330:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006334:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006338:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800633a:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800633e:	d811      	bhi.n	8006364 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8006340:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006342:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006346:	68cf      	ldr	r7, [r1, #12]
 8006348:	fa07 f70e 	lsl.w	r7, r7, lr
 800634c:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8006350:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8006352:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006354:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8006358:	f3c4 1700 	ubfx	r7, r4, #4, #1
 800635c:	409f      	lsls	r7, r3
 800635e:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8006362:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8006364:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006366:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800636a:	688f      	ldr	r7, [r1, #8]
 800636c:	fa07 f70e 	lsl.w	r7, r7, lr
 8006370:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006374:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8006378:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800637a:	d116      	bne.n	80063aa <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 800637c:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8006380:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006384:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8006388:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800638c:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8006390:	f04f 0c0f 	mov.w	ip, #15
 8006394:	fa0c fc0b 	lsl.w	ip, ip, fp
 8006398:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800639c:	690f      	ldr	r7, [r1, #16]
 800639e:	fa07 f70b 	lsl.w	r7, r7, fp
 80063a2:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80063a6:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80063aa:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80063ac:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80063ae:	f004 0703 	and.w	r7, r4, #3
 80063b2:	fa07 f70e 	lsl.w	r7, r7, lr
 80063b6:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 80063b8:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80063ba:	00e5      	lsls	r5, r4, #3
 80063bc:	d569      	bpl.n	8006492 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80063be:	f04f 0b00 	mov.w	fp, #0
 80063c2:	f8cd b004 	str.w	fp, [sp, #4]
 80063c6:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80063ca:	4d3f      	ldr	r5, [pc, #252]	; (80064c8 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80063cc:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80063d0:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80063d4:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80063d8:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80063dc:	9701      	str	r7, [sp, #4]
 80063de:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80063e0:	f023 0703 	bic.w	r7, r3, #3
 80063e4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80063e8:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80063ec:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80063f0:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80063f4:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80063f8:	f04f 0c0f 	mov.w	ip, #15
 80063fc:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006400:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006402:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006406:	d04b      	beq.n	80064a0 <HAL_GPIO_Init+0x19c>
 8006408:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800640c:	42a8      	cmp	r0, r5
 800640e:	d049      	beq.n	80064a4 <HAL_GPIO_Init+0x1a0>
 8006410:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006414:	42a8      	cmp	r0, r5
 8006416:	d047      	beq.n	80064a8 <HAL_GPIO_Init+0x1a4>
 8006418:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800641c:	42a8      	cmp	r0, r5
 800641e:	d045      	beq.n	80064ac <HAL_GPIO_Init+0x1a8>
 8006420:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006424:	42a8      	cmp	r0, r5
 8006426:	d043      	beq.n	80064b0 <HAL_GPIO_Init+0x1ac>
 8006428:	4548      	cmp	r0, r9
 800642a:	d043      	beq.n	80064b4 <HAL_GPIO_Init+0x1b0>
 800642c:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006430:	42a8      	cmp	r0, r5
 8006432:	d041      	beq.n	80064b8 <HAL_GPIO_Init+0x1b4>
 8006434:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006438:	42a8      	cmp	r0, r5
 800643a:	d03f      	beq.n	80064bc <HAL_GPIO_Init+0x1b8>
 800643c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006440:	42a8      	cmp	r0, r5
 8006442:	d03d      	beq.n	80064c0 <HAL_GPIO_Init+0x1bc>
 8006444:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006448:	42a8      	cmp	r0, r5
 800644a:	bf0c      	ite	eq
 800644c:	2509      	moveq	r5, #9
 800644e:	250a      	movne	r5, #10
 8006450:	fa05 f50e 	lsl.w	r5, r5, lr
 8006454:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006458:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 800645a:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800645c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800645e:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8006462:	bf0c      	ite	eq
 8006464:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006466:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8006468:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 800646a:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800646c:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8006470:	bf0c      	ite	eq
 8006472:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006474:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8006476:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8006478:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800647a:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800647e:	bf0c      	ite	eq
 8006480:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006482:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8006484:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8006486:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8006488:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 800648a:	bf54      	ite	pl
 800648c:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 800648e:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8006490:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006492:	3301      	adds	r3, #1
 8006494:	2b10      	cmp	r3, #16
 8006496:	f47f af3d 	bne.w	8006314 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 800649a:	b003      	add	sp, #12
 800649c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80064a0:	465d      	mov	r5, fp
 80064a2:	e7d5      	b.n	8006450 <HAL_GPIO_Init+0x14c>
 80064a4:	2501      	movs	r5, #1
 80064a6:	e7d3      	b.n	8006450 <HAL_GPIO_Init+0x14c>
 80064a8:	2502      	movs	r5, #2
 80064aa:	e7d1      	b.n	8006450 <HAL_GPIO_Init+0x14c>
 80064ac:	2503      	movs	r5, #3
 80064ae:	e7cf      	b.n	8006450 <HAL_GPIO_Init+0x14c>
 80064b0:	2504      	movs	r5, #4
 80064b2:	e7cd      	b.n	8006450 <HAL_GPIO_Init+0x14c>
 80064b4:	2505      	movs	r5, #5
 80064b6:	e7cb      	b.n	8006450 <HAL_GPIO_Init+0x14c>
 80064b8:	2506      	movs	r5, #6
 80064ba:	e7c9      	b.n	8006450 <HAL_GPIO_Init+0x14c>
 80064bc:	2507      	movs	r5, #7
 80064be:	e7c7      	b.n	8006450 <HAL_GPIO_Init+0x14c>
 80064c0:	2508      	movs	r5, #8
 80064c2:	e7c5      	b.n	8006450 <HAL_GPIO_Init+0x14c>
 80064c4:	40013c00 	.word	0x40013c00
 80064c8:	40020000 	.word	0x40020000
 80064cc:	40023800 	.word	0x40023800
 80064d0:	40021400 	.word	0x40021400

080064d4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80064d4:	b10a      	cbz	r2, 80064da <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80064d6:	6181      	str	r1, [r0, #24]
  }
}
 80064d8:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80064da:	0409      	lsls	r1, r1, #16
 80064dc:	e7fb      	b.n	80064d6 <HAL_GPIO_WritePin+0x2>

080064de <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80064de:	6801      	ldr	r1, [r0, #0]
 80064e0:	694b      	ldr	r3, [r1, #20]
 80064e2:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80064e6:	f04f 0200 	mov.w	r2, #0
 80064ea:	d010      	beq.n	800650e <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80064ec:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80064f0:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80064f2:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80064f4:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80064f6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80064fa:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80064fe:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006500:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006504:	f043 0304 	orr.w	r3, r3, #4
 8006508:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800650a:	2001      	movs	r0, #1
 800650c:	4770      	bx	lr
  }
  return HAL_OK;
 800650e:	4618      	mov	r0, r3
}
 8006510:	4770      	bx	lr

08006512 <I2C_WaitOnFlagUntilTimeout>:
{
 8006512:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006516:	4606      	mov	r6, r0
 8006518:	460f      	mov	r7, r1
 800651a:	4691      	mov	r9, r2
 800651c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800651e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006522:	6833      	ldr	r3, [r6, #0]
 8006524:	f1ba 0f01 	cmp.w	sl, #1
 8006528:	bf0c      	ite	eq
 800652a:	695c      	ldreq	r4, [r3, #20]
 800652c:	699c      	ldrne	r4, [r3, #24]
 800652e:	ea27 0404 	bic.w	r4, r7, r4
 8006532:	b2a4      	uxth	r4, r4
 8006534:	fab4 f484 	clz	r4, r4
 8006538:	0964      	lsrs	r4, r4, #5
 800653a:	45a1      	cmp	r9, r4
 800653c:	d001      	beq.n	8006542 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800653e:	2000      	movs	r0, #0
 8006540:	e017      	b.n	8006572 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8006542:	1c6a      	adds	r2, r5, #1
 8006544:	d0ee      	beq.n	8006524 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006546:	f7ff fae9 	bl	8005b1c <HAL_GetTick>
 800654a:	9b08      	ldr	r3, [sp, #32]
 800654c:	1ac0      	subs	r0, r0, r3
 800654e:	42a8      	cmp	r0, r5
 8006550:	d801      	bhi.n	8006556 <I2C_WaitOnFlagUntilTimeout+0x44>
 8006552:	2d00      	cmp	r5, #0
 8006554:	d1e5      	bne.n	8006522 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006556:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006558:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800655a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800655c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006560:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006564:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006566:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800656a:	f042 0220 	orr.w	r2, r2, #32
 800656e:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8006570:	2001      	movs	r0, #1
}
 8006572:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08006576 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8006576:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800657a:	4604      	mov	r4, r0
 800657c:	460f      	mov	r7, r1
 800657e:	4616      	mov	r6, r2
 8006580:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006582:	6825      	ldr	r5, [r4, #0]
 8006584:	6968      	ldr	r0, [r5, #20]
 8006586:	ea27 0000 	bic.w	r0, r7, r0
 800658a:	b280      	uxth	r0, r0
 800658c:	b1b8      	cbz	r0, 80065be <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800658e:	696b      	ldr	r3, [r5, #20]
 8006590:	055a      	lsls	r2, r3, #21
 8006592:	d516      	bpl.n	80065c2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006594:	682b      	ldr	r3, [r5, #0]
 8006596:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800659a:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800659c:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80065a0:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80065a2:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80065a4:	2300      	movs	r3, #0
 80065a6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80065a8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80065ac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80065b0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80065b2:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80065b6:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80065b8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80065bc:	2001      	movs	r0, #1
}
 80065be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80065c2:	1c73      	adds	r3, r6, #1
 80065c4:	d0de      	beq.n	8006584 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80065c6:	f7ff faa9 	bl	8005b1c <HAL_GetTick>
 80065ca:	eba0 0008 	sub.w	r0, r0, r8
 80065ce:	42b0      	cmp	r0, r6
 80065d0:	d801      	bhi.n	80065d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80065d2:	2e00      	cmp	r6, #0
 80065d4:	d1d5      	bne.n	8006582 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80065d6:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80065d8:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80065da:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80065dc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80065e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80065e4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80065e6:	f042 0220 	orr.w	r2, r2, #32
 80065ea:	e7e4      	b.n	80065b6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080065ec <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80065ec:	b570      	push	{r4, r5, r6, lr}
 80065ee:	4604      	mov	r4, r0
 80065f0:	460d      	mov	r5, r1
 80065f2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80065f4:	6821      	ldr	r1, [r4, #0]
 80065f6:	694b      	ldr	r3, [r1, #20]
 80065f8:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80065fc:	d001      	beq.n	8006602 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80065fe:	2000      	movs	r0, #0
 8006600:	e010      	b.n	8006624 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006602:	694a      	ldr	r2, [r1, #20]
 8006604:	06d2      	lsls	r2, r2, #27
 8006606:	d50e      	bpl.n	8006626 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006608:	f06f 0210 	mvn.w	r2, #16
 800660c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800660e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006610:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006612:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006616:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800661a:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800661c:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800661e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006622:	2001      	movs	r0, #1
}
 8006624:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006626:	f7ff fa79 	bl	8005b1c <HAL_GetTick>
 800662a:	1b80      	subs	r0, r0, r6
 800662c:	42a8      	cmp	r0, r5
 800662e:	d801      	bhi.n	8006634 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006630:	2d00      	cmp	r5, #0
 8006632:	d1df      	bne.n	80065f4 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006634:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8006636:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006638:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800663a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800663e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006642:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006644:	f042 0220 	orr.w	r2, r2, #32
 8006648:	e7e8      	b.n	800661c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800664a <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800664a:	b570      	push	{r4, r5, r6, lr}
 800664c:	4604      	mov	r4, r0
 800664e:	460d      	mov	r5, r1
 8006650:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006652:	6823      	ldr	r3, [r4, #0]
 8006654:	695b      	ldr	r3, [r3, #20]
 8006656:	075b      	lsls	r3, r3, #29
 8006658:	d501      	bpl.n	800665e <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800665a:	2000      	movs	r0, #0
}
 800665c:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800665e:	4620      	mov	r0, r4
 8006660:	f7ff ff3d 	bl	80064de <I2C_IsAcknowledgeFailed>
 8006664:	b9a8      	cbnz	r0, 8006692 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006666:	1c6a      	adds	r2, r5, #1
 8006668:	d0f3      	beq.n	8006652 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800666a:	f7ff fa57 	bl	8005b1c <HAL_GetTick>
 800666e:	1b80      	subs	r0, r0, r6
 8006670:	42a8      	cmp	r0, r5
 8006672:	d801      	bhi.n	8006678 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8006674:	2d00      	cmp	r5, #0
 8006676:	d1ec      	bne.n	8006652 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006678:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800667a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800667c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800667e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006682:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006686:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006688:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800668c:	f042 0220 	orr.w	r2, r2, #32
 8006690:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006692:	2001      	movs	r0, #1
 8006694:	e7e2      	b.n	800665c <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08006696 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8006696:	b570      	push	{r4, r5, r6, lr}
 8006698:	4604      	mov	r4, r0
 800669a:	460d      	mov	r5, r1
 800669c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800669e:	6823      	ldr	r3, [r4, #0]
 80066a0:	695b      	ldr	r3, [r3, #20]
 80066a2:	061b      	lsls	r3, r3, #24
 80066a4:	d501      	bpl.n	80066aa <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80066a6:	2000      	movs	r0, #0
}
 80066a8:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80066aa:	4620      	mov	r0, r4
 80066ac:	f7ff ff17 	bl	80064de <I2C_IsAcknowledgeFailed>
 80066b0:	b9a8      	cbnz	r0, 80066de <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80066b2:	1c6a      	adds	r2, r5, #1
 80066b4:	d0f3      	beq.n	800669e <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80066b6:	f7ff fa31 	bl	8005b1c <HAL_GetTick>
 80066ba:	1b80      	subs	r0, r0, r6
 80066bc:	42a8      	cmp	r0, r5
 80066be:	d801      	bhi.n	80066c4 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80066c0:	2d00      	cmp	r5, #0
 80066c2:	d1ec      	bne.n	800669e <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80066c4:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80066c6:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80066c8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80066ca:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066ce:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066d2:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80066d4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066d8:	f042 0220 	orr.w	r2, r2, #32
 80066dc:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80066de:	2001      	movs	r0, #1
 80066e0:	e7e2      	b.n	80066a8 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

080066e4 <I2C_RequestMemoryWrite>:
{
 80066e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80066e8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80066ea:	6802      	ldr	r2, [r0, #0]
{
 80066ec:	b085      	sub	sp, #20
 80066ee:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 80066f2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80066f4:	6813      	ldr	r3, [r2, #0]
 80066f6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80066fa:	6013      	str	r3, [r2, #0]
{
 80066fc:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80066fe:	463b      	mov	r3, r7
 8006700:	f8cd 8000 	str.w	r8, [sp]
 8006704:	2200      	movs	r2, #0
 8006706:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800670a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800670c:	f7ff ff01 	bl	8006512 <I2C_WaitOnFlagUntilTimeout>
 8006710:	6823      	ldr	r3, [r4, #0]
 8006712:	b138      	cbz	r0, 8006724 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006714:	681b      	ldr	r3, [r3, #0]
 8006716:	05db      	lsls	r3, r3, #23
 8006718:	d502      	bpl.n	8006720 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800671a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800671e:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006720:	2003      	movs	r0, #3
 8006722:	e00a      	b.n	800673a <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006724:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006728:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800672a:	4919      	ldr	r1, [pc, #100]	; (8006790 <I2C_RequestMemoryWrite+0xac>)
 800672c:	4643      	mov	r3, r8
 800672e:	463a      	mov	r2, r7
 8006730:	4620      	mov	r0, r4
 8006732:	f7ff ff20 	bl	8006576 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006736:	b118      	cbz	r0, 8006740 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006738:	2001      	movs	r0, #1
}
 800673a:	b005      	add	sp, #20
 800673c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006740:	6823      	ldr	r3, [r4, #0]
 8006742:	9003      	str	r0, [sp, #12]
 8006744:	695a      	ldr	r2, [r3, #20]
 8006746:	9203      	str	r2, [sp, #12]
 8006748:	699b      	ldr	r3, [r3, #24]
 800674a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800674c:	4642      	mov	r2, r8
 800674e:	4639      	mov	r1, r7
 8006750:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006752:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006754:	f7ff ff9f 	bl	8006696 <I2C_WaitOnTXEFlagUntilTimeout>
 8006758:	b140      	cbz	r0, 800676c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800675a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800675c:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800675e:	bf01      	itttt	eq
 8006760:	6822      	ldreq	r2, [r4, #0]
 8006762:	6813      	ldreq	r3, [r2, #0]
 8006764:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006768:	6013      	streq	r3, [r2, #0]
 800676a:	e7e5      	b.n	8006738 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800676c:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006770:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006772:	d102      	bne.n	800677a <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006774:	b2ed      	uxtb	r5, r5
 8006776:	611d      	str	r5, [r3, #16]
 8006778:	e7df      	b.n	800673a <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800677a:	0a2a      	lsrs	r2, r5, #8
 800677c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800677e:	4639      	mov	r1, r7
 8006780:	4642      	mov	r2, r8
 8006782:	4620      	mov	r0, r4
 8006784:	f7ff ff87 	bl	8006696 <I2C_WaitOnTXEFlagUntilTimeout>
 8006788:	2800      	cmp	r0, #0
 800678a:	d1e6      	bne.n	800675a <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800678c:	6823      	ldr	r3, [r4, #0]
 800678e:	e7f1      	b.n	8006774 <I2C_RequestMemoryWrite+0x90>
 8006790:	00010002 	.word	0x00010002

08006794 <I2C_RequestMemoryRead>:
{
 8006794:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006798:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800679a:	6803      	ldr	r3, [r0, #0]
{
 800679c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800679e:	681a      	ldr	r2, [r3, #0]
 80067a0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80067a4:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80067a6:	681a      	ldr	r2, [r3, #0]
{
 80067a8:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80067ac:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80067b0:	601a      	str	r2, [r3, #0]
{
 80067b2:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80067b4:	463b      	mov	r3, r7
 80067b6:	f8cd 8000 	str.w	r8, [sp]
 80067ba:	2200      	movs	r2, #0
 80067bc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80067c0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80067c2:	f7ff fea6 	bl	8006512 <I2C_WaitOnFlagUntilTimeout>
 80067c6:	6823      	ldr	r3, [r4, #0]
 80067c8:	b148      	cbz	r0, 80067de <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80067ca:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80067cc:	05db      	lsls	r3, r3, #23
 80067ce:	d502      	bpl.n	80067d6 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80067d0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80067d4:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80067d6:	2003      	movs	r0, #3
}
 80067d8:	b004      	add	sp, #16
 80067da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80067de:	fa5f f986 	uxtb.w	r9, r6
 80067e2:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80067e6:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80067e8:	492a      	ldr	r1, [pc, #168]	; (8006894 <I2C_RequestMemoryRead+0x100>)
 80067ea:	4643      	mov	r3, r8
 80067ec:	463a      	mov	r2, r7
 80067ee:	4620      	mov	r0, r4
 80067f0:	f7ff fec1 	bl	8006576 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80067f4:	b108      	cbz	r0, 80067fa <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 80067f6:	2001      	movs	r0, #1
 80067f8:	e7ee      	b.n	80067d8 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80067fa:	6823      	ldr	r3, [r4, #0]
 80067fc:	9003      	str	r0, [sp, #12]
 80067fe:	695a      	ldr	r2, [r3, #20]
 8006800:	9203      	str	r2, [sp, #12]
 8006802:	699b      	ldr	r3, [r3, #24]
 8006804:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006806:	4642      	mov	r2, r8
 8006808:	4639      	mov	r1, r7
 800680a:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800680c:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800680e:	f7ff ff42 	bl	8006696 <I2C_WaitOnTXEFlagUntilTimeout>
 8006812:	b140      	cbz	r0, 8006826 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006814:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006816:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006818:	bf01      	itttt	eq
 800681a:	6822      	ldreq	r2, [r4, #0]
 800681c:	6813      	ldreq	r3, [r2, #0]
 800681e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006822:	6013      	streq	r3, [r2, #0]
 8006824:	e7e7      	b.n	80067f6 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006826:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800682a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800682c:	d11a      	bne.n	8006864 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800682e:	b2ed      	uxtb	r5, r5
 8006830:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006832:	4642      	mov	r2, r8
 8006834:	4639      	mov	r1, r7
 8006836:	4620      	mov	r0, r4
 8006838:	f7ff ff2d 	bl	8006696 <I2C_WaitOnTXEFlagUntilTimeout>
 800683c:	2800      	cmp	r0, #0
 800683e:	d1e9      	bne.n	8006814 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006840:	6822      	ldr	r2, [r4, #0]
 8006842:	6813      	ldr	r3, [r2, #0]
 8006844:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006848:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800684a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800684e:	4602      	mov	r2, r0
 8006850:	f8cd 8000 	str.w	r8, [sp]
 8006854:	463b      	mov	r3, r7
 8006856:	4620      	mov	r0, r4
 8006858:	f7ff fe5b 	bl	8006512 <I2C_WaitOnFlagUntilTimeout>
 800685c:	6822      	ldr	r2, [r4, #0]
 800685e:	b160      	cbz	r0, 800687a <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006860:	6813      	ldr	r3, [r2, #0]
 8006862:	e7b3      	b.n	80067cc <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006864:	0a2a      	lsrs	r2, r5, #8
 8006866:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006868:	4639      	mov	r1, r7
 800686a:	4642      	mov	r2, r8
 800686c:	4620      	mov	r0, r4
 800686e:	f7ff ff12 	bl	8006696 <I2C_WaitOnTXEFlagUntilTimeout>
 8006872:	2800      	cmp	r0, #0
 8006874:	d1ce      	bne.n	8006814 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006876:	6823      	ldr	r3, [r4, #0]
 8006878:	e7d9      	b.n	800682e <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800687a:	f049 0301 	orr.w	r3, r9, #1
 800687e:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006880:	4904      	ldr	r1, [pc, #16]	; (8006894 <I2C_RequestMemoryRead+0x100>)
 8006882:	4643      	mov	r3, r8
 8006884:	463a      	mov	r2, r7
 8006886:	4620      	mov	r0, r4
 8006888:	f7ff fe75 	bl	8006576 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800688c:	3800      	subs	r0, #0
 800688e:	bf18      	it	ne
 8006890:	2001      	movne	r0, #1
 8006892:	e7a1      	b.n	80067d8 <I2C_RequestMemoryRead+0x44>
 8006894:	00010002 	.word	0x00010002

08006898 <HAL_I2C_Init>:
{
 8006898:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800689a:	4604      	mov	r4, r0
 800689c:	b908      	cbnz	r0, 80068a2 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800689e:	2001      	movs	r0, #1
}
 80068a0:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80068a2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80068a6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80068aa:	b91b      	cbnz	r3, 80068b4 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80068ac:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80068b0:	f7fb f94e 	bl	8001b50 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80068b4:	2324      	movs	r3, #36	; 0x24
 80068b6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80068ba:	6823      	ldr	r3, [r4, #0]
 80068bc:	681a      	ldr	r2, [r3, #0]
 80068be:	f022 0201 	bic.w	r2, r2, #1
 80068c2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80068c4:	681a      	ldr	r2, [r3, #0]
 80068c6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80068ca:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80068cc:	681a      	ldr	r2, [r3, #0]
 80068ce:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80068d2:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80068d4:	f000 fe6e 	bl	80075b4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80068d8:	4b3f      	ldr	r3, [pc, #252]	; (80069d8 <HAL_I2C_Init+0x140>)
 80068da:	6865      	ldr	r5, [r4, #4]
 80068dc:	429d      	cmp	r5, r3
 80068de:	bf94      	ite	ls
 80068e0:	4b3e      	ldrls	r3, [pc, #248]	; (80069dc <HAL_I2C_Init+0x144>)
 80068e2:	4b3f      	ldrhi	r3, [pc, #252]	; (80069e0 <HAL_I2C_Init+0x148>)
 80068e4:	4298      	cmp	r0, r3
 80068e6:	bf8c      	ite	hi
 80068e8:	2300      	movhi	r3, #0
 80068ea:	2301      	movls	r3, #1
 80068ec:	2b00      	cmp	r3, #0
 80068ee:	d1d6      	bne.n	800689e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80068f0:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80068f2:	4e39      	ldr	r6, [pc, #228]	; (80069d8 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80068f4:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80068f6:	493b      	ldr	r1, [pc, #236]	; (80069e4 <HAL_I2C_Init+0x14c>)
 80068f8:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80068fc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006900:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006902:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006904:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006906:	bf88      	it	hi
 8006908:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 800690c:	6a13      	ldr	r3, [r2, #32]
 800690e:	bf88      	it	hi
 8006910:	4371      	mulhi	r1, r6
 8006912:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006916:	bf84      	itt	hi
 8006918:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800691c:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006920:	3101      	adds	r1, #1
 8006922:	4319      	orrs	r1, r3
 8006924:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006926:	69d1      	ldr	r1, [r2, #28]
 8006928:	1e43      	subs	r3, r0, #1
 800692a:	482b      	ldr	r0, [pc, #172]	; (80069d8 <HAL_I2C_Init+0x140>)
 800692c:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006930:	4285      	cmp	r5, r0
 8006932:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006936:	d832      	bhi.n	800699e <HAL_I2C_Init+0x106>
 8006938:	006d      	lsls	r5, r5, #1
 800693a:	f640 70fc 	movw	r0, #4092	; 0xffc
 800693e:	fbb3 f3f5 	udiv	r3, r3, r5
 8006942:	3301      	adds	r3, #1
 8006944:	4203      	tst	r3, r0
 8006946:	d042      	beq.n	80069ce <HAL_I2C_Init+0x136>
 8006948:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800694c:	430b      	orrs	r3, r1
 800694e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006950:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006954:	6811      	ldr	r1, [r2, #0]
 8006956:	4303      	orrs	r3, r0
 8006958:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800695c:	430b      	orrs	r3, r1
 800695e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006960:	6891      	ldr	r1, [r2, #8]
 8006962:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006966:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800696a:	4303      	orrs	r3, r0
 800696c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006970:	430b      	orrs	r3, r1
 8006972:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006974:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006978:	68d1      	ldr	r1, [r2, #12]
 800697a:	4303      	orrs	r3, r0
 800697c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006980:	430b      	orrs	r3, r1
 8006982:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006984:	6813      	ldr	r3, [r2, #0]
 8006986:	f043 0301 	orr.w	r3, r3, #1
 800698a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800698c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800698e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006990:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006992:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006996:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006998:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800699c:	e780      	b.n	80068a0 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800699e:	68a0      	ldr	r0, [r4, #8]
 80069a0:	b950      	cbnz	r0, 80069b8 <HAL_I2C_Init+0x120>
 80069a2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80069a6:	fbb3 f3f5 	udiv	r3, r3, r5
 80069aa:	3301      	adds	r3, #1
 80069ac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80069b0:	b17b      	cbz	r3, 80069d2 <HAL_I2C_Init+0x13a>
 80069b2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80069b6:	e7c9      	b.n	800694c <HAL_I2C_Init+0xb4>
 80069b8:	2019      	movs	r0, #25
 80069ba:	4345      	muls	r5, r0
 80069bc:	fbb3 f3f5 	udiv	r3, r3, r5
 80069c0:	3301      	adds	r3, #1
 80069c2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80069c6:	b123      	cbz	r3, 80069d2 <HAL_I2C_Init+0x13a>
 80069c8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80069cc:	e7be      	b.n	800694c <HAL_I2C_Init+0xb4>
 80069ce:	2304      	movs	r3, #4
 80069d0:	e7bc      	b.n	800694c <HAL_I2C_Init+0xb4>
 80069d2:	2301      	movs	r3, #1
 80069d4:	e7ba      	b.n	800694c <HAL_I2C_Init+0xb4>
 80069d6:	bf00      	nop
 80069d8:	000186a0 	.word	0x000186a0
 80069dc:	001e847f 	.word	0x001e847f
 80069e0:	003d08ff 	.word	0x003d08ff
 80069e4:	000f4240 	.word	0x000f4240

080069e8 <HAL_I2C_Mem_Write>:
{
 80069e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80069ec:	4604      	mov	r4, r0
 80069ee:	4699      	mov	r9, r3
 80069f0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80069f2:	460f      	mov	r7, r1
 80069f4:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80069f6:	f7ff f891 	bl	8005b1c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80069fa:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80069fe:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006a00:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006a02:	d003      	beq.n	8006a0c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006a04:	2002      	movs	r0, #2
}
 8006a06:	b003      	add	sp, #12
 8006a08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006a0c:	9000      	str	r0, [sp, #0]
 8006a0e:	493c      	ldr	r1, [pc, #240]	; (8006b00 <HAL_I2C_Mem_Write+0x118>)
 8006a10:	2319      	movs	r3, #25
 8006a12:	2201      	movs	r2, #1
 8006a14:	4620      	mov	r0, r4
 8006a16:	f7ff fd7c 	bl	8006512 <I2C_WaitOnFlagUntilTimeout>
 8006a1a:	2800      	cmp	r0, #0
 8006a1c:	d1f2      	bne.n	8006a04 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006a1e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006a22:	2b01      	cmp	r3, #1
 8006a24:	d0ee      	beq.n	8006a04 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006a26:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006a28:	2301      	movs	r3, #1
 8006a2a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006a2e:	6803      	ldr	r3, [r0, #0]
 8006a30:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006a32:	bf5e      	ittt	pl
 8006a34:	6803      	ldrpl	r3, [r0, #0]
 8006a36:	f043 0301 	orrpl.w	r3, r3, #1
 8006a3a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006a3c:	6803      	ldr	r3, [r0, #0]
 8006a3e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006a42:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006a44:	2321      	movs	r3, #33	; 0x21
 8006a46:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006a4a:	2340      	movs	r3, #64	; 0x40
 8006a4c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006a50:	2300      	movs	r3, #0
 8006a52:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006a54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006a56:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006a58:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006a5c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006a5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006a60:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006a62:	4b28      	ldr	r3, [pc, #160]	; (8006b04 <HAL_I2C_Mem_Write+0x11c>)
 8006a64:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006a66:	e9cd 6500 	strd	r6, r5, [sp]
 8006a6a:	464b      	mov	r3, r9
 8006a6c:	4642      	mov	r2, r8
 8006a6e:	4639      	mov	r1, r7
 8006a70:	4620      	mov	r0, r4
 8006a72:	f7ff fe37 	bl	80066e4 <I2C_RequestMemoryWrite>
 8006a76:	2800      	cmp	r0, #0
 8006a78:	d02a      	beq.n	8006ad0 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006a7a:	2001      	movs	r0, #1
 8006a7c:	e7c3      	b.n	8006a06 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006a7e:	f7ff fe0a 	bl	8006696 <I2C_WaitOnTXEFlagUntilTimeout>
 8006a82:	b140      	cbz	r0, 8006a96 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006a84:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006a86:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006a88:	bf01      	itttt	eq
 8006a8a:	6822      	ldreq	r2, [r4, #0]
 8006a8c:	6813      	ldreq	r3, [r2, #0]
 8006a8e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006a92:	6013      	streq	r3, [r2, #0]
 8006a94:	e7f1      	b.n	8006a7a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006a96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006a98:	6827      	ldr	r7, [r4, #0]
 8006a9a:	461a      	mov	r2, r3
 8006a9c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006aa0:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006aa2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006aa4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006aa6:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006aa8:	3a01      	subs	r2, #1
 8006aaa:	b292      	uxth	r2, r2
 8006aac:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006aae:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006ab0:	1e48      	subs	r0, r1, #1
 8006ab2:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006ab4:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006ab6:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006ab8:	d50a      	bpl.n	8006ad0 <HAL_I2C_Mem_Write+0xe8>
 8006aba:	b148      	cbz	r0, 8006ad0 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006abc:	785a      	ldrb	r2, [r3, #1]
 8006abe:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006ac0:	3302      	adds	r3, #2
 8006ac2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006ac4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006ac6:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006ac8:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006aca:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006acc:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006ace:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006ad0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006ad2:	462a      	mov	r2, r5
 8006ad4:	4631      	mov	r1, r6
 8006ad6:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006ad8:	2b00      	cmp	r3, #0
 8006ada:	d1d0      	bne.n	8006a7e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006adc:	f7ff fdb5 	bl	800664a <I2C_WaitOnBTFFlagUntilTimeout>
 8006ae0:	2800      	cmp	r0, #0
 8006ae2:	d1cf      	bne.n	8006a84 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006ae4:	6822      	ldr	r2, [r4, #0]
 8006ae6:	6813      	ldr	r3, [r2, #0]
 8006ae8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006aec:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006aee:	2320      	movs	r3, #32
 8006af0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006af4:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006af8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006afc:	e783      	b.n	8006a06 <HAL_I2C_Mem_Write+0x1e>
 8006afe:	bf00      	nop
 8006b00:	00100002 	.word	0x00100002
 8006b04:	ffff0000 	.word	0xffff0000

08006b08 <HAL_I2C_Mem_Read>:
{
 8006b08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006b0c:	4604      	mov	r4, r0
 8006b0e:	b087      	sub	sp, #28
 8006b10:	4699      	mov	r9, r3
 8006b12:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006b14:	460d      	mov	r5, r1
 8006b16:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006b18:	f7ff f800 	bl	8005b1c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b1c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006b20:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006b22:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b24:	d004      	beq.n	8006b30 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006b26:	2502      	movs	r5, #2
}
 8006b28:	4628      	mov	r0, r5
 8006b2a:	b007      	add	sp, #28
 8006b2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006b30:	9000      	str	r0, [sp, #0]
 8006b32:	4976      	ldr	r1, [pc, #472]	; (8006d0c <HAL_I2C_Mem_Read+0x204>)
 8006b34:	2319      	movs	r3, #25
 8006b36:	2201      	movs	r2, #1
 8006b38:	4620      	mov	r0, r4
 8006b3a:	f7ff fcea 	bl	8006512 <I2C_WaitOnFlagUntilTimeout>
 8006b3e:	2800      	cmp	r0, #0
 8006b40:	d1f1      	bne.n	8006b26 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006b42:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006b46:	2b01      	cmp	r3, #1
 8006b48:	d0ed      	beq.n	8006b26 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b4a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006b4c:	2301      	movs	r3, #1
 8006b4e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b52:	6803      	ldr	r3, [r0, #0]
 8006b54:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006b56:	bf5e      	ittt	pl
 8006b58:	6803      	ldrpl	r3, [r0, #0]
 8006b5a:	f043 0301 	orrpl.w	r3, r3, #1
 8006b5e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006b60:	6803      	ldr	r3, [r0, #0]
 8006b62:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006b66:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006b68:	2322      	movs	r3, #34	; 0x22
 8006b6a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006b6e:	2340      	movs	r3, #64	; 0x40
 8006b70:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b74:	2300      	movs	r3, #0
 8006b76:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006b78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006b7a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006b7c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006b80:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006b82:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006b84:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006b86:	4b62      	ldr	r3, [pc, #392]	; (8006d10 <HAL_I2C_Mem_Read+0x208>)
 8006b88:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006b8a:	4629      	mov	r1, r5
 8006b8c:	e9cd 7600 	strd	r7, r6, [sp]
 8006b90:	464b      	mov	r3, r9
 8006b92:	4642      	mov	r2, r8
 8006b94:	4620      	mov	r0, r4
 8006b96:	f7ff fdfd 	bl	8006794 <I2C_RequestMemoryRead>
 8006b9a:	4605      	mov	r5, r0
 8006b9c:	b108      	cbz	r0, 8006ba2 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006b9e:	2501      	movs	r5, #1
 8006ba0:	e7c2      	b.n	8006b28 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006ba2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006ba4:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006ba6:	b9b2      	cbnz	r2, 8006bd6 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006ba8:	9002      	str	r0, [sp, #8]
 8006baa:	695a      	ldr	r2, [r3, #20]
 8006bac:	9202      	str	r2, [sp, #8]
 8006bae:	699a      	ldr	r2, [r3, #24]
 8006bb0:	9202      	str	r2, [sp, #8]
 8006bb2:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006bb4:	681a      	ldr	r2, [r3, #0]
 8006bb6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006bba:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006bbc:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006d14 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006bc0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006bc2:	2b00      	cmp	r3, #0
 8006bc4:	d12c      	bne.n	8006c20 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006bc6:	2220      	movs	r2, #32
 8006bc8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006bcc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006bd0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006bd4:	e7a8      	b.n	8006b28 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006bd6:	2a01      	cmp	r2, #1
 8006bd8:	d10a      	bne.n	8006bf0 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006bda:	681a      	ldr	r2, [r3, #0]
 8006bdc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006be0:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006be2:	9003      	str	r0, [sp, #12]
 8006be4:	695a      	ldr	r2, [r3, #20]
 8006be6:	9203      	str	r2, [sp, #12]
 8006be8:	699a      	ldr	r2, [r3, #24]
 8006bea:	9203      	str	r2, [sp, #12]
 8006bec:	9a03      	ldr	r2, [sp, #12]
 8006bee:	e7e1      	b.n	8006bb4 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006bf0:	2a02      	cmp	r2, #2
 8006bf2:	d10e      	bne.n	8006c12 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006bf4:	681a      	ldr	r2, [r3, #0]
 8006bf6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006bfa:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006bfc:	681a      	ldr	r2, [r3, #0]
 8006bfe:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006c02:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006c04:	9004      	str	r0, [sp, #16]
 8006c06:	695a      	ldr	r2, [r3, #20]
 8006c08:	9204      	str	r2, [sp, #16]
 8006c0a:	699b      	ldr	r3, [r3, #24]
 8006c0c:	9304      	str	r3, [sp, #16]
 8006c0e:	9b04      	ldr	r3, [sp, #16]
 8006c10:	e7d4      	b.n	8006bbc <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006c12:	9005      	str	r0, [sp, #20]
 8006c14:	695a      	ldr	r2, [r3, #20]
 8006c16:	9205      	str	r2, [sp, #20]
 8006c18:	699b      	ldr	r3, [r3, #24]
 8006c1a:	9305      	str	r3, [sp, #20]
 8006c1c:	9b05      	ldr	r3, [sp, #20]
 8006c1e:	e7cd      	b.n	8006bbc <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006c20:	2b03      	cmp	r3, #3
 8006c22:	d856      	bhi.n	8006cd2 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006c24:	2b01      	cmp	r3, #1
 8006c26:	d115      	bne.n	8006c54 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006c28:	4632      	mov	r2, r6
 8006c2a:	4639      	mov	r1, r7
 8006c2c:	4620      	mov	r0, r4
 8006c2e:	f7ff fcdd 	bl	80065ec <I2C_WaitOnRXNEFlagUntilTimeout>
 8006c32:	2800      	cmp	r0, #0
 8006c34:	d1b3      	bne.n	8006b9e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006c36:	6823      	ldr	r3, [r4, #0]
 8006c38:	691a      	ldr	r2, [r3, #16]
 8006c3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006c3c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006c3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006c40:	3301      	adds	r3, #1
 8006c42:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006c44:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006c46:	3b01      	subs	r3, #1
 8006c48:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006c4a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006c4c:	3b01      	subs	r3, #1
 8006c4e:	b29b      	uxth	r3, r3
 8006c50:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006c52:	e7b5      	b.n	8006bc0 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006c54:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006c56:	9600      	str	r6, [sp, #0]
 8006c58:	463b      	mov	r3, r7
 8006c5a:	f04f 0200 	mov.w	r2, #0
 8006c5e:	4641      	mov	r1, r8
 8006c60:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006c62:	d119      	bne.n	8006c98 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006c64:	f7ff fc55 	bl	8006512 <I2C_WaitOnFlagUntilTimeout>
 8006c68:	2800      	cmp	r0, #0
 8006c6a:	d198      	bne.n	8006b9e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006c6c:	6823      	ldr	r3, [r4, #0]
 8006c6e:	681a      	ldr	r2, [r3, #0]
 8006c70:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006c74:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006c76:	691a      	ldr	r2, [r3, #16]
 8006c78:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006c7a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006c7c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006c7e:	1c53      	adds	r3, r2, #1
 8006c80:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006c82:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006c84:	3b01      	subs	r3, #1
 8006c86:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006c88:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006c8a:	3b01      	subs	r3, #1
 8006c8c:	b29b      	uxth	r3, r3
 8006c8e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006c90:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006c92:	691b      	ldr	r3, [r3, #16]
 8006c94:	7053      	strb	r3, [r2, #1]
 8006c96:	e7d2      	b.n	8006c3e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006c98:	f7ff fc3b 	bl	8006512 <I2C_WaitOnFlagUntilTimeout>
 8006c9c:	2800      	cmp	r0, #0
 8006c9e:	f47f af7e 	bne.w	8006b9e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006ca2:	6823      	ldr	r3, [r4, #0]
 8006ca4:	681a      	ldr	r2, [r3, #0]
 8006ca6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006caa:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006cac:	691a      	ldr	r2, [r3, #16]
 8006cae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006cb0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006cb2:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006cb4:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006cb6:	3301      	adds	r3, #1
 8006cb8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006cba:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006cbc:	3b01      	subs	r3, #1
 8006cbe:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006cc0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006cc2:	3b01      	subs	r3, #1
 8006cc4:	b29b      	uxth	r3, r3
 8006cc6:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006cc8:	4602      	mov	r2, r0
 8006cca:	463b      	mov	r3, r7
 8006ccc:	4641      	mov	r1, r8
 8006cce:	4620      	mov	r0, r4
 8006cd0:	e7c8      	b.n	8006c64 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006cd2:	4632      	mov	r2, r6
 8006cd4:	4639      	mov	r1, r7
 8006cd6:	4620      	mov	r0, r4
 8006cd8:	f7ff fc88 	bl	80065ec <I2C_WaitOnRXNEFlagUntilTimeout>
 8006cdc:	2800      	cmp	r0, #0
 8006cde:	f47f af5e 	bne.w	8006b9e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ce2:	6823      	ldr	r3, [r4, #0]
 8006ce4:	691a      	ldr	r2, [r3, #16]
 8006ce6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006ce8:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006cea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006cec:	1c53      	adds	r3, r2, #1
 8006cee:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006cf0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006cf2:	3b01      	subs	r3, #1
 8006cf4:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006cf6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006cf8:	3b01      	subs	r3, #1
 8006cfa:	b29b      	uxth	r3, r3
 8006cfc:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006cfe:	6823      	ldr	r3, [r4, #0]
 8006d00:	6959      	ldr	r1, [r3, #20]
 8006d02:	0749      	lsls	r1, r1, #29
 8006d04:	f57f af5c 	bpl.w	8006bc0 <HAL_I2C_Mem_Read+0xb8>
 8006d08:	e7c3      	b.n	8006c92 <HAL_I2C_Mem_Read+0x18a>
 8006d0a:	bf00      	nop
 8006d0c:	00100002 	.word	0x00100002
 8006d10:	ffff0000 	.word	0xffff0000
 8006d14:	00010004 	.word	0x00010004

08006d18 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006d18:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d1a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006d1e:	2b20      	cmp	r3, #32
 8006d20:	b2dc      	uxtb	r4, r3
 8006d22:	d116      	bne.n	8006d52 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006d24:	2324      	movs	r3, #36	; 0x24
 8006d26:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006d2a:	6803      	ldr	r3, [r0, #0]
 8006d2c:	681a      	ldr	r2, [r3, #0]
 8006d2e:	f022 0201 	bic.w	r2, r2, #1
 8006d32:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006d34:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006d36:	f022 0210 	bic.w	r2, r2, #16
 8006d3a:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006d3c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006d3e:	4311      	orrs	r1, r2
 8006d40:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006d42:	681a      	ldr	r2, [r3, #0]
 8006d44:	f042 0201 	orr.w	r2, r2, #1
 8006d48:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006d4a:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006d4e:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006d50:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006d52:	2002      	movs	r0, #2
 8006d54:	e7fc      	b.n	8006d50 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006d56 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006d56:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d58:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006d5c:	2b20      	cmp	r3, #32
 8006d5e:	b2dc      	uxtb	r4, r3
 8006d60:	d116      	bne.n	8006d90 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006d62:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006d64:	2324      	movs	r3, #36	; 0x24
 8006d66:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8006d6a:	6813      	ldr	r3, [r2, #0]
 8006d6c:	f023 0301 	bic.w	r3, r3, #1
 8006d70:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006d72:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006d74:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006d78:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8006d7a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8006d7c:	b29b      	uxth	r3, r3
 8006d7e:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006d80:	6813      	ldr	r3, [r2, #0]
 8006d82:	f043 0301 	orr.w	r3, r3, #1
 8006d86:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006d88:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006d8c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006d8e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006d90:	2002      	movs	r0, #2
 8006d92:	e7fc      	b.n	8006d8e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006d94 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006d94:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006d96:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006d9a:	01d2      	lsls	r2, r2, #7
 8006d9c:	3284      	adds	r2, #132	; 0x84
 8006d9e:	1883      	adds	r3, r0, r2
{
 8006da0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006da4:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006da6:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006da8:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006daa:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006dae:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006db2:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006db4:	68c5      	ldr	r5, [r0, #12]
 8006db6:	f10c 0701 	add.w	r7, ip, #1
 8006dba:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006dbe:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006dc2:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006dc4:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006dc6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006dca:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006dcc:	68c5      	ldr	r5, [r0, #12]
 8006dce:	68ce      	ldr	r6, [r1, #12]
 8006dd0:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006dd4:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006dd6:	689d      	ldr	r5, [r3, #8]
 8006dd8:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006ddc:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006dde:	68c7      	ldr	r7, [r0, #12]
 8006de0:	688d      	ldr	r5, [r1, #8]
 8006de2:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006de6:	3501      	adds	r5, #1
 8006de8:	443d      	add	r5, r7
 8006dea:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006dee:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006df0:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006df2:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006df4:	f025 0507 	bic.w	r5, r5, #7
 8006df8:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006dfa:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006dfe:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006e00:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006e02:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006e06:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006e0a:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006e0e:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006e12:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006e16:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006e1a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006e1e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006e20:	695d      	ldr	r5, [r3, #20]
 8006e22:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006e26:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006e28:	694d      	ldr	r5, [r1, #20]
 8006e2a:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006e2c:	69dd      	ldr	r5, [r3, #28]
 8006e2e:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006e32:	f025 0507 	bic.w	r5, r5, #7
 8006e36:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006e38:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006e3c:	433d      	orrs	r5, r7
 8006e3e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006e40:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006e42:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006e44:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006e48:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006e4a:	b31e      	cbz	r6, 8006e94 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006e4c:	2e01      	cmp	r6, #1
 8006e4e:	d023      	beq.n	8006e98 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006e50:	1eb5      	subs	r5, r6, #2
 8006e52:	2d02      	cmp	r5, #2
 8006e54:	d922      	bls.n	8006e9c <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006e56:	2e07      	cmp	r6, #7
 8006e58:	bf0c      	ite	eq
 8006e5a:	2502      	moveq	r5, #2
 8006e5c:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006e5e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006e60:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006e64:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006e66:	eba4 040c 	sub.w	r4, r4, ip
 8006e6a:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006e6c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006e6e:	436c      	muls	r4, r5
 8006e70:	436e      	muls	r6, r5
 8006e72:	3403      	adds	r4, #3
 8006e74:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006e78:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006e7a:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006e7c:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006e80:	f024 0407 	bic.w	r4, r4, #7
 8006e84:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006e86:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006e88:	5883      	ldr	r3, [r0, r2]
 8006e8a:	f043 0301 	orr.w	r3, r3, #1
 8006e8e:	5083      	str	r3, [r0, r2]
}
 8006e90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006e94:	2504      	movs	r5, #4
 8006e96:	e7e2      	b.n	8006e5e <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006e98:	2503      	movs	r5, #3
 8006e9a:	e7e0      	b.n	8006e5e <LTDC_SetConfig+0xca>
    tmp = 2U;
 8006e9c:	2502      	movs	r5, #2
 8006e9e:	e7de      	b.n	8006e5e <LTDC_SetConfig+0xca>

08006ea0 <HAL_LTDC_Init>:
{
 8006ea0:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006ea2:	4604      	mov	r4, r0
 8006ea4:	2800      	cmp	r0, #0
 8006ea6:	d063      	beq.n	8006f70 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006ea8:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006eac:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006eb0:	b91b      	cbnz	r3, 8006eba <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006eb2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006eb6:	f7fa fea7 	bl	8001c08 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006eba:	2302      	movs	r3, #2
 8006ebc:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006ec0:	6823      	ldr	r3, [r4, #0]
 8006ec2:	699a      	ldr	r2, [r3, #24]
 8006ec4:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006ec8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006eca:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006ece:	4302      	orrs	r2, r0
 8006ed0:	68e0      	ldr	r0, [r4, #12]
 8006ed2:	6999      	ldr	r1, [r3, #24]
 8006ed4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006ed6:	6920      	ldr	r0, [r4, #16]
 8006ed8:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006eda:	430a      	orrs	r2, r1
 8006edc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006ede:	689a      	ldr	r2, [r3, #8]
 8006ee0:	4924      	ldr	r1, [pc, #144]	; (8006f74 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006ee2:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006ee4:	400a      	ands	r2, r1
 8006ee6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006ee8:	689a      	ldr	r2, [r3, #8]
 8006eea:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006eee:	69a0      	ldr	r0, [r4, #24]
 8006ef0:	4302      	orrs	r2, r0
 8006ef2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006ef4:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8006ef6:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006ef8:	400a      	ands	r2, r1
 8006efa:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006efc:	68da      	ldr	r2, [r3, #12]
 8006efe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006f02:	6a20      	ldr	r0, [r4, #32]
 8006f04:	4302      	orrs	r2, r0
 8006f06:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006f08:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006f0a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006f0c:	400a      	ands	r2, r1
 8006f0e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8006f10:	691a      	ldr	r2, [r3, #16]
 8006f12:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006f16:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006f18:	4302      	orrs	r2, r0
 8006f1a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006f1c:	695a      	ldr	r2, [r3, #20]
 8006f1e:	4011      	ands	r1, r2
 8006f20:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006f22:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006f24:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006f26:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006f2a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006f2c:	430a      	orrs	r2, r1
 8006f2e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006f30:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006f32:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006f36:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006f3a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8006f3e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006f40:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006f42:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8006f46:	430a      	orrs	r2, r1
 8006f48:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8006f4c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006f50:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006f52:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006f54:	f042 0206 	orr.w	r2, r2, #6
 8006f58:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8006f5a:	699a      	ldr	r2, [r3, #24]
 8006f5c:	f042 0201 	orr.w	r2, r2, #1
 8006f60:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006f62:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006f64:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006f66:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8006f6a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8006f6e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006f70:	2001      	movs	r0, #1
 8006f72:	e7fc      	b.n	8006f6e <HAL_LTDC_Init+0xce>
 8006f74:	f000f800 	.word	0xf000f800

08006f78 <HAL_LTDC_ErrorCallback>:
 8006f78:	4770      	bx	lr

08006f7a <HAL_LTDC_ReloadEventCallback>:
 8006f7a:	4770      	bx	lr

08006f7c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006f7c:	6803      	ldr	r3, [r0, #0]
{
 8006f7e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006f80:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006f82:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006f84:	0772      	lsls	r2, r6, #29
{
 8006f86:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006f88:	d514      	bpl.n	8006fb4 <HAL_LTDC_IRQHandler+0x38>
 8006f8a:	0769      	lsls	r1, r5, #29
 8006f8c:	d512      	bpl.n	8006fb4 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8006f8e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006f90:	f022 0204 	bic.w	r2, r2, #4
 8006f94:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8006f96:	2204      	movs	r2, #4
 8006f98:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8006f9a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8006f9e:	f043 0301 	orr.w	r3, r3, #1
 8006fa2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8006fa6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006fa8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006fac:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006fb0:	f7ff ffe2 	bl	8006f78 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006fb4:	07b2      	lsls	r2, r6, #30
 8006fb6:	d516      	bpl.n	8006fe6 <HAL_LTDC_IRQHandler+0x6a>
 8006fb8:	07ab      	lsls	r3, r5, #30
 8006fba:	d514      	bpl.n	8006fe6 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006fbc:	6823      	ldr	r3, [r4, #0]
 8006fbe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006fc0:	f022 0202 	bic.w	r2, r2, #2
 8006fc4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006fc6:	2202      	movs	r2, #2
 8006fc8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006fca:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8006fce:	4313      	orrs	r3, r2
 8006fd0:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006fd4:	2304      	movs	r3, #4
 8006fd6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006fda:	2300      	movs	r3, #0
 8006fdc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006fe0:	4620      	mov	r0, r4
 8006fe2:	f7ff ffc9 	bl	8006f78 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006fe6:	07f0      	lsls	r0, r6, #31
 8006fe8:	d510      	bpl.n	800700c <HAL_LTDC_IRQHandler+0x90>
 8006fea:	07e9      	lsls	r1, r5, #31
 8006fec:	d50e      	bpl.n	800700c <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006fee:	6823      	ldr	r3, [r4, #0]
 8006ff0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006ff2:	f022 0201 	bic.w	r2, r2, #1
 8006ff6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8006ff8:	2201      	movs	r2, #1
 8006ffa:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8006ffc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8006ffe:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007002:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007006:	4620      	mov	r0, r4
 8007008:	f7fa f884 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800700c:	0732      	lsls	r2, r6, #28
 800700e:	d511      	bpl.n	8007034 <HAL_LTDC_IRQHandler+0xb8>
 8007010:	072b      	lsls	r3, r5, #28
 8007012:	d50f      	bpl.n	8007034 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007014:	6823      	ldr	r3, [r4, #0]
 8007016:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007018:	f022 0208 	bic.w	r2, r2, #8
 800701c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800701e:	2208      	movs	r2, #8
 8007020:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007022:	2301      	movs	r3, #1
 8007024:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007028:	2300      	movs	r3, #0
 800702a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800702e:	4620      	mov	r0, r4
 8007030:	f7ff ffa3 	bl	8006f7a <HAL_LTDC_ReloadEventCallback>
}
 8007034:	bd70      	pop	{r4, r5, r6, pc}

08007036 <HAL_LTDC_ConfigLayer>:
{
 8007036:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800703a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800703e:	2b01      	cmp	r3, #1
{
 8007040:	4606      	mov	r6, r0
 8007042:	460f      	mov	r7, r1
 8007044:	4694      	mov	ip, r2
 8007046:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800704a:	d01f      	beq.n	800708c <HAL_LTDC_ConfigLayer+0x56>
 800704c:	f04f 0801 	mov.w	r8, #1
 8007050:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007054:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007058:	2434      	movs	r4, #52	; 0x34
 800705a:	460d      	mov	r5, r1
 800705c:	fb04 6402 	mla	r4, r4, r2, r6
 8007060:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007062:	3438      	adds	r4, #56	; 0x38
 8007064:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007066:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007068:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800706a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800706c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800706e:	682b      	ldr	r3, [r5, #0]
 8007070:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007072:	4630      	mov	r0, r6
 8007074:	4662      	mov	r2, ip
 8007076:	4639      	mov	r1, r7
 8007078:	f7ff fe8c 	bl	8006d94 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800707c:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800707e:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007080:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8007084:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007088:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800708c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007090 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8007090:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007094:	2b01      	cmp	r3, #1
 8007096:	f04f 0302 	mov.w	r3, #2
 800709a:	d012      	beq.n	80070c2 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800709c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80070a0:	6803      	ldr	r3, [r0, #0]
 80070a2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070a4:	f022 0201 	bic.w	r2, r2, #1
 80070a8:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80070aa:	4a07      	ldr	r2, [pc, #28]	; (80070c8 <HAL_LTDC_ProgramLineEvent+0x38>)
 80070ac:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80070ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070b0:	f042 0201 	orr.w	r2, r2, #1
 80070b4:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80070b6:	2301      	movs	r3, #1
 80070b8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80070bc:	2300      	movs	r3, #0
 80070be:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80070c2:	4618      	mov	r0, r3
}
 80070c4:	4770      	bx	lr
 80070c6:	bf00      	nop
 80070c8:	40016800 	.word	0x40016800

080070cc <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80070cc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80070d0:	4604      	mov	r4, r0
 80070d2:	b340      	cbz	r0, 8007126 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80070d4:	6803      	ldr	r3, [r0, #0]
 80070d6:	07dd      	lsls	r5, r3, #31
 80070d8:	d410      	bmi.n	80070fc <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80070da:	6823      	ldr	r3, [r4, #0]
 80070dc:	0798      	lsls	r0, r3, #30
 80070de:	d45e      	bmi.n	800719e <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80070e0:	6823      	ldr	r3, [r4, #0]
 80070e2:	071a      	lsls	r2, r3, #28
 80070e4:	f100 80a0 	bmi.w	8007228 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80070e8:	6823      	ldr	r3, [r4, #0]
 80070ea:	075b      	lsls	r3, r3, #29
 80070ec:	f100 80c0 	bmi.w	8007270 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80070f0:	69a0      	ldr	r0, [r4, #24]
 80070f2:	2800      	cmp	r0, #0
 80070f4:	f040 8128 	bne.w	8007348 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80070f8:	2000      	movs	r0, #0
 80070fa:	e02b      	b.n	8007154 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80070fc:	4b8f      	ldr	r3, [pc, #572]	; (800733c <HAL_RCC_OscConfig+0x270>)
 80070fe:	689a      	ldr	r2, [r3, #8]
 8007100:	f002 020c 	and.w	r2, r2, #12
 8007104:	2a04      	cmp	r2, #4
 8007106:	d007      	beq.n	8007118 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007108:	689a      	ldr	r2, [r3, #8]
 800710a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800710e:	2a08      	cmp	r2, #8
 8007110:	d10b      	bne.n	800712a <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007112:	685a      	ldr	r2, [r3, #4]
 8007114:	0251      	lsls	r1, r2, #9
 8007116:	d508      	bpl.n	800712a <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007118:	4b88      	ldr	r3, [pc, #544]	; (800733c <HAL_RCC_OscConfig+0x270>)
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	039a      	lsls	r2, r3, #14
 800711e:	d5dc      	bpl.n	80070da <HAL_RCC_OscConfig+0xe>
 8007120:	6863      	ldr	r3, [r4, #4]
 8007122:	2b00      	cmp	r3, #0
 8007124:	d1d9      	bne.n	80070da <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8007126:	2001      	movs	r0, #1
 8007128:	e014      	b.n	8007154 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800712a:	6862      	ldr	r2, [r4, #4]
 800712c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007130:	d113      	bne.n	800715a <HAL_RCC_OscConfig+0x8e>
 8007132:	681a      	ldr	r2, [r3, #0]
 8007134:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007138:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800713a:	f7fe fcef 	bl	8005b1c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800713e:	4e7f      	ldr	r6, [pc, #508]	; (800733c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007140:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007142:	6833      	ldr	r3, [r6, #0]
 8007144:	039b      	lsls	r3, r3, #14
 8007146:	d4c8      	bmi.n	80070da <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007148:	f7fe fce8 	bl	8005b1c <HAL_GetTick>
 800714c:	1b40      	subs	r0, r0, r5
 800714e:	2864      	cmp	r0, #100	; 0x64
 8007150:	d9f7      	bls.n	8007142 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8007152:	2003      	movs	r0, #3
}
 8007154:	b002      	add	sp, #8
 8007156:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800715a:	4d78      	ldr	r5, [pc, #480]	; (800733c <HAL_RCC_OscConfig+0x270>)
 800715c:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8007160:	682b      	ldr	r3, [r5, #0]
 8007162:	d107      	bne.n	8007174 <HAL_RCC_OscConfig+0xa8>
 8007164:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007168:	602b      	str	r3, [r5, #0]
 800716a:	682b      	ldr	r3, [r5, #0]
 800716c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007170:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007172:	e7e2      	b.n	800713a <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007174:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007178:	602b      	str	r3, [r5, #0]
 800717a:	682b      	ldr	r3, [r5, #0]
 800717c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007180:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007182:	2a00      	cmp	r2, #0
 8007184:	d1d9      	bne.n	800713a <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8007186:	f7fe fcc9 	bl	8005b1c <HAL_GetTick>
 800718a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800718c:	682b      	ldr	r3, [r5, #0]
 800718e:	039f      	lsls	r7, r3, #14
 8007190:	d5a3      	bpl.n	80070da <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007192:	f7fe fcc3 	bl	8005b1c <HAL_GetTick>
 8007196:	1b80      	subs	r0, r0, r6
 8007198:	2864      	cmp	r0, #100	; 0x64
 800719a:	d9f7      	bls.n	800718c <HAL_RCC_OscConfig+0xc0>
 800719c:	e7d9      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800719e:	4b67      	ldr	r3, [pc, #412]	; (800733c <HAL_RCC_OscConfig+0x270>)
 80071a0:	689a      	ldr	r2, [r3, #8]
 80071a2:	f012 0f0c 	tst.w	r2, #12
 80071a6:	d007      	beq.n	80071b8 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80071a8:	689a      	ldr	r2, [r3, #8]
 80071aa:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80071ae:	2a08      	cmp	r2, #8
 80071b0:	d111      	bne.n	80071d6 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80071b2:	685b      	ldr	r3, [r3, #4]
 80071b4:	025e      	lsls	r6, r3, #9
 80071b6:	d40e      	bmi.n	80071d6 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80071b8:	4a60      	ldr	r2, [pc, #384]	; (800733c <HAL_RCC_OscConfig+0x270>)
 80071ba:	6813      	ldr	r3, [r2, #0]
 80071bc:	079d      	lsls	r5, r3, #30
 80071be:	d502      	bpl.n	80071c6 <HAL_RCC_OscConfig+0xfa>
 80071c0:	68e3      	ldr	r3, [r4, #12]
 80071c2:	2b01      	cmp	r3, #1
 80071c4:	d1af      	bne.n	8007126 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80071c6:	6813      	ldr	r3, [r2, #0]
 80071c8:	6921      	ldr	r1, [r4, #16]
 80071ca:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80071ce:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80071d2:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80071d4:	e784      	b.n	80070e0 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80071d6:	68e2      	ldr	r2, [r4, #12]
 80071d8:	4b59      	ldr	r3, [pc, #356]	; (8007340 <HAL_RCC_OscConfig+0x274>)
 80071da:	b1b2      	cbz	r2, 800720a <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80071dc:	2201      	movs	r2, #1
 80071de:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80071e0:	f7fe fc9c 	bl	8005b1c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80071e4:	4d55      	ldr	r5, [pc, #340]	; (800733c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80071e6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80071e8:	682b      	ldr	r3, [r5, #0]
 80071ea:	0798      	lsls	r0, r3, #30
 80071ec:	d507      	bpl.n	80071fe <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80071ee:	682b      	ldr	r3, [r5, #0]
 80071f0:	6922      	ldr	r2, [r4, #16]
 80071f2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80071f6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80071fa:	602b      	str	r3, [r5, #0]
 80071fc:	e770      	b.n	80070e0 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80071fe:	f7fe fc8d 	bl	8005b1c <HAL_GetTick>
 8007202:	1b80      	subs	r0, r0, r6
 8007204:	2802      	cmp	r0, #2
 8007206:	d9ef      	bls.n	80071e8 <HAL_RCC_OscConfig+0x11c>
 8007208:	e7a3      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800720a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800720c:	f7fe fc86 	bl	8005b1c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007210:	4e4a      	ldr	r6, [pc, #296]	; (800733c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007212:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007214:	6833      	ldr	r3, [r6, #0]
 8007216:	0799      	lsls	r1, r3, #30
 8007218:	f57f af62 	bpl.w	80070e0 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800721c:	f7fe fc7e 	bl	8005b1c <HAL_GetTick>
 8007220:	1b40      	subs	r0, r0, r5
 8007222:	2802      	cmp	r0, #2
 8007224:	d9f6      	bls.n	8007214 <HAL_RCC_OscConfig+0x148>
 8007226:	e794      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007228:	6962      	ldr	r2, [r4, #20]
 800722a:	4b45      	ldr	r3, [pc, #276]	; (8007340 <HAL_RCC_OscConfig+0x274>)
 800722c:	b182      	cbz	r2, 8007250 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800722e:	2201      	movs	r2, #1
 8007230:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007234:	f7fe fc72 	bl	8005b1c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007238:	4e40      	ldr	r6, [pc, #256]	; (800733c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800723a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800723c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800723e:	079f      	lsls	r7, r3, #30
 8007240:	f53f af52 	bmi.w	80070e8 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007244:	f7fe fc6a 	bl	8005b1c <HAL_GetTick>
 8007248:	1b40      	subs	r0, r0, r5
 800724a:	2802      	cmp	r0, #2
 800724c:	d9f6      	bls.n	800723c <HAL_RCC_OscConfig+0x170>
 800724e:	e780      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8007250:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007254:	f7fe fc62 	bl	8005b1c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007258:	4e38      	ldr	r6, [pc, #224]	; (800733c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800725a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800725c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800725e:	0798      	lsls	r0, r3, #30
 8007260:	f57f af42 	bpl.w	80070e8 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007264:	f7fe fc5a 	bl	8005b1c <HAL_GetTick>
 8007268:	1b40      	subs	r0, r0, r5
 800726a:	2802      	cmp	r0, #2
 800726c:	d9f6      	bls.n	800725c <HAL_RCC_OscConfig+0x190>
 800726e:	e770      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007270:	4b32      	ldr	r3, [pc, #200]	; (800733c <HAL_RCC_OscConfig+0x270>)
 8007272:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007274:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8007278:	d128      	bne.n	80072cc <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800727a:	9201      	str	r2, [sp, #4]
 800727c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800727e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007282:	641a      	str	r2, [r3, #64]	; 0x40
 8007284:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007286:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800728a:	9301      	str	r3, [sp, #4]
 800728c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800728e:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007290:	4d2c      	ldr	r5, [pc, #176]	; (8007344 <HAL_RCC_OscConfig+0x278>)
 8007292:	682b      	ldr	r3, [r5, #0]
 8007294:	05d9      	lsls	r1, r3, #23
 8007296:	d51b      	bpl.n	80072d0 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007298:	68a3      	ldr	r3, [r4, #8]
 800729a:	4d28      	ldr	r5, [pc, #160]	; (800733c <HAL_RCC_OscConfig+0x270>)
 800729c:	2b01      	cmp	r3, #1
 800729e:	d127      	bne.n	80072f0 <HAL_RCC_OscConfig+0x224>
 80072a0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80072a2:	f043 0301 	orr.w	r3, r3, #1
 80072a6:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80072a8:	f7fe fc38 	bl	8005b1c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80072ac:	4e23      	ldr	r6, [pc, #140]	; (800733c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80072ae:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80072b0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80072b4:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80072b6:	079b      	lsls	r3, r3, #30
 80072b8:	d539      	bpl.n	800732e <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 80072ba:	2f00      	cmp	r7, #0
 80072bc:	f43f af18 	beq.w	80070f0 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80072c0:	4a1e      	ldr	r2, [pc, #120]	; (800733c <HAL_RCC_OscConfig+0x270>)
 80072c2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80072c4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80072c8:	6413      	str	r3, [r2, #64]	; 0x40
 80072ca:	e711      	b.n	80070f0 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80072cc:	2700      	movs	r7, #0
 80072ce:	e7df      	b.n	8007290 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80072d0:	682b      	ldr	r3, [r5, #0]
 80072d2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80072d6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80072d8:	f7fe fc20 	bl	8005b1c <HAL_GetTick>
 80072dc:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80072de:	682b      	ldr	r3, [r5, #0]
 80072e0:	05da      	lsls	r2, r3, #23
 80072e2:	d4d9      	bmi.n	8007298 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80072e4:	f7fe fc1a 	bl	8005b1c <HAL_GetTick>
 80072e8:	1b80      	subs	r0, r0, r6
 80072ea:	2802      	cmp	r0, #2
 80072ec:	d9f7      	bls.n	80072de <HAL_RCC_OscConfig+0x212>
 80072ee:	e730      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80072f0:	2b05      	cmp	r3, #5
 80072f2:	d104      	bne.n	80072fe <HAL_RCC_OscConfig+0x232>
 80072f4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80072f6:	f043 0304 	orr.w	r3, r3, #4
 80072fa:	672b      	str	r3, [r5, #112]	; 0x70
 80072fc:	e7d0      	b.n	80072a0 <HAL_RCC_OscConfig+0x1d4>
 80072fe:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007300:	f022 0201 	bic.w	r2, r2, #1
 8007304:	672a      	str	r2, [r5, #112]	; 0x70
 8007306:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007308:	f022 0204 	bic.w	r2, r2, #4
 800730c:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800730e:	2b00      	cmp	r3, #0
 8007310:	d1ca      	bne.n	80072a8 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007312:	f7fe fc03 	bl	8005b1c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007316:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800731a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800731c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800731e:	0798      	lsls	r0, r3, #30
 8007320:	d5cb      	bpl.n	80072ba <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007322:	f7fe fbfb 	bl	8005b1c <HAL_GetTick>
 8007326:	1b80      	subs	r0, r0, r6
 8007328:	4540      	cmp	r0, r8
 800732a:	d9f7      	bls.n	800731c <HAL_RCC_OscConfig+0x250>
 800732c:	e711      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800732e:	f7fe fbf5 	bl	8005b1c <HAL_GetTick>
 8007332:	1b40      	subs	r0, r0, r5
 8007334:	4540      	cmp	r0, r8
 8007336:	d9bd      	bls.n	80072b4 <HAL_RCC_OscConfig+0x1e8>
 8007338:	e70b      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
 800733a:	bf00      	nop
 800733c:	40023800 	.word	0x40023800
 8007340:	42470000 	.word	0x42470000
 8007344:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8007348:	4d33      	ldr	r5, [pc, #204]	; (8007418 <HAL_RCC_OscConfig+0x34c>)
 800734a:	68ab      	ldr	r3, [r5, #8]
 800734c:	f003 030c 	and.w	r3, r3, #12
 8007350:	2b08      	cmp	r3, #8
 8007352:	d03d      	beq.n	80073d0 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007354:	4b31      	ldr	r3, [pc, #196]	; (800741c <HAL_RCC_OscConfig+0x350>)
 8007356:	2200      	movs	r2, #0
 8007358:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800735a:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800735c:	d12b      	bne.n	80073b6 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 800735e:	f7fe fbdd 	bl	8005b1c <HAL_GetTick>
 8007362:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007364:	682b      	ldr	r3, [r5, #0]
 8007366:	0199      	lsls	r1, r3, #6
 8007368:	d41f      	bmi.n	80073aa <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800736a:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800736e:	4313      	orrs	r3, r2
 8007370:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007372:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007376:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007378:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800737c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800737e:	0852      	lsrs	r2, r2, #1
 8007380:	3a01      	subs	r2, #1
 8007382:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007386:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8007388:	4b24      	ldr	r3, [pc, #144]	; (800741c <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800738a:	4d23      	ldr	r5, [pc, #140]	; (8007418 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 800738c:	2201      	movs	r2, #1
 800738e:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8007390:	f7fe fbc4 	bl	8005b1c <HAL_GetTick>
 8007394:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007396:	682b      	ldr	r3, [r5, #0]
 8007398:	019a      	lsls	r2, r3, #6
 800739a:	f53f aead 	bmi.w	80070f8 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800739e:	f7fe fbbd 	bl	8005b1c <HAL_GetTick>
 80073a2:	1b00      	subs	r0, r0, r4
 80073a4:	2802      	cmp	r0, #2
 80073a6:	d9f6      	bls.n	8007396 <HAL_RCC_OscConfig+0x2ca>
 80073a8:	e6d3      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80073aa:	f7fe fbb7 	bl	8005b1c <HAL_GetTick>
 80073ae:	1b80      	subs	r0, r0, r6
 80073b0:	2802      	cmp	r0, #2
 80073b2:	d9d7      	bls.n	8007364 <HAL_RCC_OscConfig+0x298>
 80073b4:	e6cd      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80073b6:	f7fe fbb1 	bl	8005b1c <HAL_GetTick>
 80073ba:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80073bc:	682b      	ldr	r3, [r5, #0]
 80073be:	019b      	lsls	r3, r3, #6
 80073c0:	f57f ae9a 	bpl.w	80070f8 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80073c4:	f7fe fbaa 	bl	8005b1c <HAL_GetTick>
 80073c8:	1b00      	subs	r0, r0, r4
 80073ca:	2802      	cmp	r0, #2
 80073cc:	d9f6      	bls.n	80073bc <HAL_RCC_OscConfig+0x2f0>
 80073ce:	e6c0      	b.n	8007152 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80073d0:	2801      	cmp	r0, #1
 80073d2:	f43f aebf 	beq.w	8007154 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80073d6:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80073d8:	69e2      	ldr	r2, [r4, #28]
 80073da:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 80073de:	4291      	cmp	r1, r2
 80073e0:	f47f aea1 	bne.w	8007126 <HAL_RCC_OscConfig+0x5a>
 80073e4:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80073e6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80073ea:	428a      	cmp	r2, r1
 80073ec:	f47f ae9b 	bne.w	8007126 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80073f0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80073f2:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 80073f6:	401a      	ands	r2, r3
 80073f8:	428a      	cmp	r2, r1
 80073fa:	f47f ae94 	bne.w	8007126 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80073fe:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007400:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007404:	428a      	cmp	r2, r1
 8007406:	f47f ae8e 	bne.w	8007126 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800740a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800740c:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007410:	4293      	cmp	r3, r2
 8007412:	f43f ae71 	beq.w	80070f8 <HAL_RCC_OscConfig+0x2c>
 8007416:	e686      	b.n	8007126 <HAL_RCC_OscConfig+0x5a>
 8007418:	40023800 	.word	0x40023800
 800741c:	42470000 	.word	0x42470000

08007420 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007420:	4913      	ldr	r1, [pc, #76]	; (8007470 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007422:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007424:	688b      	ldr	r3, [r1, #8]
 8007426:	f003 030c 	and.w	r3, r3, #12
 800742a:	2b04      	cmp	r3, #4
 800742c:	d01c      	beq.n	8007468 <HAL_RCC_GetSysClockFreq+0x48>
 800742e:	2b08      	cmp	r3, #8
 8007430:	d11c      	bne.n	800746c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007432:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007434:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007436:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007438:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800743c:	bf14      	ite	ne
 800743e:	480d      	ldrne	r0, [pc, #52]	; (8007474 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007440:	480d      	ldreq	r0, [pc, #52]	; (8007478 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007442:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007446:	bf18      	it	ne
 8007448:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800744a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800744e:	fba1 0100 	umull	r0, r1, r1, r0
 8007452:	f7f8 ff1d 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8007456:	4b06      	ldr	r3, [pc, #24]	; (8007470 <HAL_RCC_GetSysClockFreq+0x50>)
 8007458:	685b      	ldr	r3, [r3, #4]
 800745a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800745e:	3301      	adds	r3, #1
 8007460:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007462:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007466:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007468:	4802      	ldr	r0, [pc, #8]	; (8007474 <HAL_RCC_GetSysClockFreq+0x54>)
 800746a:	e7fc      	b.n	8007466 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800746c:	4802      	ldr	r0, [pc, #8]	; (8007478 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800746e:	e7fa      	b.n	8007466 <HAL_RCC_GetSysClockFreq+0x46>
 8007470:	40023800 	.word	0x40023800
 8007474:	007a1200 	.word	0x007a1200
 8007478:	00f42400 	.word	0x00f42400

0800747c <HAL_RCC_ClockConfig>:
{
 800747c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007480:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007482:	4604      	mov	r4, r0
 8007484:	b910      	cbnz	r0, 800748c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007486:	2001      	movs	r0, #1
}
 8007488:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800748c:	4b44      	ldr	r3, [pc, #272]	; (80075a0 <HAL_RCC_ClockConfig+0x124>)
 800748e:	681a      	ldr	r2, [r3, #0]
 8007490:	f002 020f 	and.w	r2, r2, #15
 8007494:	428a      	cmp	r2, r1
 8007496:	d328      	bcc.n	80074ea <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007498:	6822      	ldr	r2, [r4, #0]
 800749a:	0797      	lsls	r7, r2, #30
 800749c:	d42d      	bmi.n	80074fa <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800749e:	07d0      	lsls	r0, r2, #31
 80074a0:	d441      	bmi.n	8007526 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80074a2:	4b3f      	ldr	r3, [pc, #252]	; (80075a0 <HAL_RCC_ClockConfig+0x124>)
 80074a4:	681a      	ldr	r2, [r3, #0]
 80074a6:	f002 020f 	and.w	r2, r2, #15
 80074aa:	42aa      	cmp	r2, r5
 80074ac:	d866      	bhi.n	800757c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80074ae:	6822      	ldr	r2, [r4, #0]
 80074b0:	0751      	lsls	r1, r2, #29
 80074b2:	d46c      	bmi.n	800758e <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80074b4:	0713      	lsls	r3, r2, #28
 80074b6:	d507      	bpl.n	80074c8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80074b8:	4a3a      	ldr	r2, [pc, #232]	; (80075a4 <HAL_RCC_ClockConfig+0x128>)
 80074ba:	6921      	ldr	r1, [r4, #16]
 80074bc:	6893      	ldr	r3, [r2, #8]
 80074be:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80074c2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80074c6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80074c8:	f7ff ffaa 	bl	8007420 <HAL_RCC_GetSysClockFreq>
 80074cc:	4b35      	ldr	r3, [pc, #212]	; (80075a4 <HAL_RCC_ClockConfig+0x128>)
 80074ce:	4a36      	ldr	r2, [pc, #216]	; (80075a8 <HAL_RCC_ClockConfig+0x12c>)
 80074d0:	689b      	ldr	r3, [r3, #8]
 80074d2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80074d6:	5cd3      	ldrb	r3, [r2, r3]
 80074d8:	40d8      	lsrs	r0, r3
 80074da:	4b34      	ldr	r3, [pc, #208]	; (80075ac <HAL_RCC_ClockConfig+0x130>)
 80074dc:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80074de:	4b34      	ldr	r3, [pc, #208]	; (80075b0 <HAL_RCC_ClockConfig+0x134>)
 80074e0:	6818      	ldr	r0, [r3, #0]
 80074e2:	f7fa fd1b 	bl	8001f1c <HAL_InitTick>
  return HAL_OK;
 80074e6:	2000      	movs	r0, #0
 80074e8:	e7ce      	b.n	8007488 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80074ea:	b2ca      	uxtb	r2, r1
 80074ec:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80074ee:	681b      	ldr	r3, [r3, #0]
 80074f0:	f003 030f 	and.w	r3, r3, #15
 80074f4:	428b      	cmp	r3, r1
 80074f6:	d1c6      	bne.n	8007486 <HAL_RCC_ClockConfig+0xa>
 80074f8:	e7ce      	b.n	8007498 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80074fa:	4b2a      	ldr	r3, [pc, #168]	; (80075a4 <HAL_RCC_ClockConfig+0x128>)
 80074fc:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007500:	bf1e      	ittt	ne
 8007502:	6899      	ldrne	r1, [r3, #8]
 8007504:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007508:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800750a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800750c:	bf42      	ittt	mi
 800750e:	6899      	ldrmi	r1, [r3, #8]
 8007510:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007514:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007516:	4923      	ldr	r1, [pc, #140]	; (80075a4 <HAL_RCC_ClockConfig+0x128>)
 8007518:	68a0      	ldr	r0, [r4, #8]
 800751a:	688b      	ldr	r3, [r1, #8]
 800751c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007520:	4303      	orrs	r3, r0
 8007522:	608b      	str	r3, [r1, #8]
 8007524:	e7bb      	b.n	800749e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007526:	6862      	ldr	r2, [r4, #4]
 8007528:	4b1e      	ldr	r3, [pc, #120]	; (80075a4 <HAL_RCC_ClockConfig+0x128>)
 800752a:	2a01      	cmp	r2, #1
 800752c:	d11c      	bne.n	8007568 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800752e:	681b      	ldr	r3, [r3, #0]
 8007530:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007534:	d0a7      	beq.n	8007486 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007536:	4e1b      	ldr	r6, [pc, #108]	; (80075a4 <HAL_RCC_ClockConfig+0x128>)
 8007538:	68b3      	ldr	r3, [r6, #8]
 800753a:	f023 0303 	bic.w	r3, r3, #3
 800753e:	4313      	orrs	r3, r2
 8007540:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007542:	f7fe faeb 	bl	8005b1c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007546:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800754a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800754c:	68b3      	ldr	r3, [r6, #8]
 800754e:	6862      	ldr	r2, [r4, #4]
 8007550:	f003 030c 	and.w	r3, r3, #12
 8007554:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007558:	d0a3      	beq.n	80074a2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800755a:	f7fe fadf 	bl	8005b1c <HAL_GetTick>
 800755e:	1bc0      	subs	r0, r0, r7
 8007560:	4540      	cmp	r0, r8
 8007562:	d9f3      	bls.n	800754c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007564:	2003      	movs	r0, #3
 8007566:	e78f      	b.n	8007488 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007568:	1e91      	subs	r1, r2, #2
 800756a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800756c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800756e:	d802      	bhi.n	8007576 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007570:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007574:	e7de      	b.n	8007534 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007576:	f013 0f02 	tst.w	r3, #2
 800757a:	e7db      	b.n	8007534 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800757c:	b2ea      	uxtb	r2, r5
 800757e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007580:	681b      	ldr	r3, [r3, #0]
 8007582:	f003 030f 	and.w	r3, r3, #15
 8007586:	42ab      	cmp	r3, r5
 8007588:	f47f af7d 	bne.w	8007486 <HAL_RCC_ClockConfig+0xa>
 800758c:	e78f      	b.n	80074ae <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800758e:	4905      	ldr	r1, [pc, #20]	; (80075a4 <HAL_RCC_ClockConfig+0x128>)
 8007590:	68e0      	ldr	r0, [r4, #12]
 8007592:	688b      	ldr	r3, [r1, #8]
 8007594:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007598:	4303      	orrs	r3, r0
 800759a:	608b      	str	r3, [r1, #8]
 800759c:	e78a      	b.n	80074b4 <HAL_RCC_ClockConfig+0x38>
 800759e:	bf00      	nop
 80075a0:	40023c00 	.word	0x40023c00
 80075a4:	40023800 	.word	0x40023800
 80075a8:	08023398 	.word	0x08023398
 80075ac:	2000007c 	.word	0x2000007c
 80075b0:	20000084 	.word	0x20000084

080075b4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80075b4:	4b04      	ldr	r3, [pc, #16]	; (80075c8 <HAL_RCC_GetPCLK1Freq+0x14>)
 80075b6:	4a05      	ldr	r2, [pc, #20]	; (80075cc <HAL_RCC_GetPCLK1Freq+0x18>)
 80075b8:	689b      	ldr	r3, [r3, #8]
 80075ba:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80075be:	5cd3      	ldrb	r3, [r2, r3]
 80075c0:	4a03      	ldr	r2, [pc, #12]	; (80075d0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80075c2:	6810      	ldr	r0, [r2, #0]
}
 80075c4:	40d8      	lsrs	r0, r3
 80075c6:	4770      	bx	lr
 80075c8:	40023800 	.word	0x40023800
 80075cc:	080233a8 	.word	0x080233a8
 80075d0:	2000007c 	.word	0x2000007c

080075d4 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80075d4:	4b04      	ldr	r3, [pc, #16]	; (80075e8 <HAL_RCC_GetPCLK2Freq+0x14>)
 80075d6:	4a05      	ldr	r2, [pc, #20]	; (80075ec <HAL_RCC_GetPCLK2Freq+0x18>)
 80075d8:	689b      	ldr	r3, [r3, #8]
 80075da:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80075de:	5cd3      	ldrb	r3, [r2, r3]
 80075e0:	4a03      	ldr	r2, [pc, #12]	; (80075f0 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80075e2:	6810      	ldr	r0, [r2, #0]
}
 80075e4:	40d8      	lsrs	r0, r3
 80075e6:	4770      	bx	lr
 80075e8:	40023800 	.word	0x40023800
 80075ec:	080233a8 	.word	0x080233a8
 80075f0:	2000007c 	.word	0x2000007c

080075f4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80075f4:	230f      	movs	r3, #15
 80075f6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80075f8:	4b0b      	ldr	r3, [pc, #44]	; (8007628 <HAL_RCC_GetClockConfig+0x34>)
 80075fa:	689a      	ldr	r2, [r3, #8]
 80075fc:	f002 0203 	and.w	r2, r2, #3
 8007600:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007602:	689a      	ldr	r2, [r3, #8]
 8007604:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007608:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800760a:	689a      	ldr	r2, [r3, #8]
 800760c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007610:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007612:	689b      	ldr	r3, [r3, #8]
 8007614:	08db      	lsrs	r3, r3, #3
 8007616:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800761a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800761c:	4b03      	ldr	r3, [pc, #12]	; (800762c <HAL_RCC_GetClockConfig+0x38>)
 800761e:	681b      	ldr	r3, [r3, #0]
 8007620:	f003 030f 	and.w	r3, r3, #15
 8007624:	600b      	str	r3, [r1, #0]
}
 8007626:	4770      	bx	lr
 8007628:	40023800 	.word	0x40023800
 800762c:	40023c00 	.word	0x40023c00

08007630 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007630:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007632:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007636:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007638:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800763a:	f040 808c 	bne.w	8007756 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800763e:	6823      	ldr	r3, [r4, #0]
 8007640:	f013 0f0c 	tst.w	r3, #12
 8007644:	d045      	beq.n	80076d2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007646:	4b8b      	ldr	r3, [pc, #556]	; (8007874 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007648:	4d8b      	ldr	r5, [pc, #556]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 800764a:	2200      	movs	r2, #0
 800764c:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800764e:	f7fe fa65 	bl	8005b1c <HAL_GetTick>
 8007652:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007654:	682b      	ldr	r3, [r5, #0]
 8007656:	009f      	lsls	r7, r3, #2
 8007658:	f100 80cf 	bmi.w	80077fa <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800765c:	6821      	ldr	r1, [r4, #0]
 800765e:	074e      	lsls	r6, r1, #29
 8007660:	d515      	bpl.n	800768e <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007662:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007666:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800766a:	061b      	lsls	r3, r3, #24
 800766c:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007670:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007674:	4313      	orrs	r3, r2
 8007676:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800767a:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800767e:	6a22      	ldr	r2, [r4, #32]
 8007680:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007684:	3a01      	subs	r2, #1
 8007686:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800768a:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800768e:	070d      	lsls	r5, r1, #28
 8007690:	d514      	bpl.n	80076bc <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007692:	4a79      	ldr	r2, [pc, #484]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007694:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007696:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800769a:	6920      	ldr	r0, [r4, #16]
 800769c:	071b      	lsls	r3, r3, #28
 800769e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80076a2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80076a6:	430b      	orrs	r3, r1
 80076a8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80076ac:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80076b0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80076b2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80076b6:	430b      	orrs	r3, r1
 80076b8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80076bc:	4b6d      	ldr	r3, [pc, #436]	; (8007874 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80076be:	4e6e      	ldr	r6, [pc, #440]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 80076c0:	2201      	movs	r2, #1
 80076c2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80076c4:	f7fe fa2a 	bl	8005b1c <HAL_GetTick>
 80076c8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80076ca:	6833      	ldr	r3, [r6, #0]
 80076cc:	0098      	lsls	r0, r3, #2
 80076ce:	f140 809b 	bpl.w	8007808 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80076d2:	6823      	ldr	r3, [r4, #0]
 80076d4:	069b      	lsls	r3, r3, #26
 80076d6:	d533      	bpl.n	8007740 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80076d8:	2300      	movs	r3, #0
 80076da:	9301      	str	r3, [sp, #4]
 80076dc:	4b66      	ldr	r3, [pc, #408]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80076de:	4d67      	ldr	r5, [pc, #412]	; (800787c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80076e0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80076e2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80076e6:	641a      	str	r2, [r3, #64]	; 0x40
 80076e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80076ee:	9301      	str	r3, [sp, #4]
 80076f0:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80076f2:	682b      	ldr	r3, [r5, #0]
 80076f4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80076f8:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80076fa:	f7fe fa0f 	bl	8005b1c <HAL_GetTick>
 80076fe:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007700:	682b      	ldr	r3, [r5, #0]
 8007702:	05d9      	lsls	r1, r3, #23
 8007704:	f140 8087 	bpl.w	8007816 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007708:	4d5b      	ldr	r5, [pc, #364]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800770a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800770c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007710:	f040 8088 	bne.w	8007824 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007714:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007716:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800771a:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800771e:	4a56      	ldr	r2, [pc, #344]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007720:	f040 80a4 	bne.w	800786c <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007724:	6891      	ldr	r1, [r2, #8]
 8007726:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800772a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800772e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007732:	4301      	orrs	r1, r0
 8007734:	6091      	str	r1, [r2, #8]
 8007736:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007738:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800773c:	430b      	orrs	r3, r1
 800773e:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007740:	6820      	ldr	r0, [r4, #0]
 8007742:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007746:	bf1f      	itttt	ne
 8007748:	4b4d      	ldrne	r3, [pc, #308]	; (8007880 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800774a:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 800774e:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8007752:	2000      	movne	r0, #0
 8007754:	e04f      	b.n	80077f6 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8007756:	4b47      	ldr	r3, [pc, #284]	; (8007874 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007758:	4e47      	ldr	r6, [pc, #284]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 800775a:	2200      	movs	r2, #0
 800775c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800775e:	f7fe f9dd 	bl	8005b1c <HAL_GetTick>
 8007762:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007764:	6833      	ldr	r3, [r6, #0]
 8007766:	011f      	lsls	r7, r3, #4
 8007768:	d43f      	bmi.n	80077ea <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800776a:	6821      	ldr	r1, [r4, #0]
 800776c:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800776e:	bf41      	itttt	mi
 8007770:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007774:	071b      	lslmi	r3, r3, #28
 8007776:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800777a:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800777e:	0788      	lsls	r0, r1, #30
 8007780:	d515      	bpl.n	80077ae <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007782:	4a3d      	ldr	r2, [pc, #244]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007784:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007786:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800778a:	6865      	ldr	r5, [r4, #4]
 800778c:	061b      	lsls	r3, r3, #24
 800778e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007792:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8007796:	4303      	orrs	r3, r0
 8007798:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800779c:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80077a0:	69e3      	ldr	r3, [r4, #28]
 80077a2:	f020 001f 	bic.w	r0, r0, #31
 80077a6:	3b01      	subs	r3, #1
 80077a8:	4303      	orrs	r3, r0
 80077aa:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80077ae:	0649      	lsls	r1, r1, #25
 80077b0:	d50a      	bpl.n	80077c8 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80077b2:	68e3      	ldr	r3, [r4, #12]
 80077b4:	6862      	ldr	r2, [r4, #4]
 80077b6:	061b      	lsls	r3, r3, #24
 80077b8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80077bc:	68a2      	ldr	r2, [r4, #8]
 80077be:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80077c2:	4a2d      	ldr	r2, [pc, #180]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80077c4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80077c8:	4b2a      	ldr	r3, [pc, #168]	; (8007874 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80077ca:	4e2b      	ldr	r6, [pc, #172]	; (8007878 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 80077cc:	2201      	movs	r2, #1
 80077ce:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80077d0:	f7fe f9a4 	bl	8005b1c <HAL_GetTick>
 80077d4:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80077d6:	6833      	ldr	r3, [r6, #0]
 80077d8:	011a      	lsls	r2, r3, #4
 80077da:	f53f af30 	bmi.w	800763e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80077de:	f7fe f99d 	bl	8005b1c <HAL_GetTick>
 80077e2:	1b40      	subs	r0, r0, r5
 80077e4:	2802      	cmp	r0, #2
 80077e6:	d9f6      	bls.n	80077d6 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80077e8:	e004      	b.n	80077f4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80077ea:	f7fe f997 	bl	8005b1c <HAL_GetTick>
 80077ee:	1b40      	subs	r0, r0, r5
 80077f0:	2802      	cmp	r0, #2
 80077f2:	d9b7      	bls.n	8007764 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 80077f4:	2003      	movs	r0, #3
}
 80077f6:	b003      	add	sp, #12
 80077f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80077fa:	f7fe f98f 	bl	8005b1c <HAL_GetTick>
 80077fe:	1b80      	subs	r0, r0, r6
 8007800:	2802      	cmp	r0, #2
 8007802:	f67f af27 	bls.w	8007654 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007806:	e7f5      	b.n	80077f4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007808:	f7fe f988 	bl	8005b1c <HAL_GetTick>
 800780c:	1b40      	subs	r0, r0, r5
 800780e:	2802      	cmp	r0, #2
 8007810:	f67f af5b 	bls.w	80076ca <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007814:	e7ee      	b.n	80077f4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007816:	f7fe f981 	bl	8005b1c <HAL_GetTick>
 800781a:	1b80      	subs	r0, r0, r6
 800781c:	2802      	cmp	r0, #2
 800781e:	f67f af6f 	bls.w	8007700 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007822:	e7e7      	b.n	80077f4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007824:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007826:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800782a:	4293      	cmp	r3, r2
 800782c:	f43f af72 	beq.w	8007714 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007830:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007832:	4a10      	ldr	r2, [pc, #64]	; (8007874 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007834:	2101      	movs	r1, #1
 8007836:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800783a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800783e:	2100      	movs	r1, #0
 8007840:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007844:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007846:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007848:	07da      	lsls	r2, r3, #31
 800784a:	f57f af63 	bpl.w	8007714 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 800784e:	f7fe f965 	bl	8005b1c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007852:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007856:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007858:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800785a:	079b      	lsls	r3, r3, #30
 800785c:	f53f af5a 	bmi.w	8007714 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007860:	f7fe f95c 	bl	8005b1c <HAL_GetTick>
 8007864:	1b80      	subs	r0, r0, r6
 8007866:	42b8      	cmp	r0, r7
 8007868:	d9f6      	bls.n	8007858 <HAL_RCCEx_PeriphCLKConfig+0x228>
 800786a:	e7c3      	b.n	80077f4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800786c:	6891      	ldr	r1, [r2, #8]
 800786e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007872:	e75f      	b.n	8007734 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8007874:	42470000 	.word	0x42470000
 8007878:	40023800 	.word	0x40023800
 800787c:	40007000 	.word	0x40007000
 8007880:	42471000 	.word	0x42471000

08007884 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8007884:	b538      	push	{r3, r4, r5, lr}
 8007886:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8007888:	4604      	mov	r4, r0
 800788a:	b1c8      	cbz	r0, 80078c0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800788c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007890:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007894:	b91b      	cbnz	r3, 800789e <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007896:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800789a:	f7fa fad3 	bl	8001e44 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800789e:	2302      	movs	r3, #2
 80078a0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80078a4:	1d21      	adds	r1, r4, #4
 80078a6:	6820      	ldr	r0, [r4, #0]
 80078a8:	f000 fcba 	bl	8008220 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80078ac:	6862      	ldr	r2, [r4, #4]
 80078ae:	6820      	ldr	r0, [r4, #0]
 80078b0:	4629      	mov	r1, r5
 80078b2:	f000 fceb 	bl	800828c <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80078b6:	2301      	movs	r3, #1
 80078b8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80078bc:	2000      	movs	r0, #0
}
 80078be:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80078c0:	2001      	movs	r0, #1
 80078c2:	e7fc      	b.n	80078be <HAL_SDRAM_Init+0x3a>

080078c4 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80078c4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80078c6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80078ca:	2b02      	cmp	r3, #2
{
 80078cc:	4604      	mov	r4, r0
 80078ce:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80078d0:	b2d8      	uxtb	r0, r3
 80078d2:	d00d      	beq.n	80078f0 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80078d4:	2302      	movs	r3, #2
 80078d6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80078da:	6820      	ldr	r0, [r4, #0]
 80078dc:	f000 fd12 	bl	8008304 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80078e0:	682b      	ldr	r3, [r5, #0]
 80078e2:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80078e4:	bf0c      	ite	eq
 80078e6:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80078e8:	2301      	movne	r3, #1
 80078ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 80078ee:	2000      	movs	r0, #0
}
 80078f0:	bd38      	pop	{r3, r4, r5, pc}

080078f2 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80078f2:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80078f4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80078f8:	2b02      	cmp	r3, #2
{
 80078fa:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80078fc:	b2d8      	uxtb	r0, r3
 80078fe:	d009      	beq.n	8007914 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007900:	2302      	movs	r3, #2
 8007902:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007906:	6820      	ldr	r0, [r4, #0]
 8007908:	f000 fd23 	bl	8008352 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800790c:	2301      	movs	r3, #1
 800790e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007912:	2000      	movs	r0, #0
}
 8007914:	bd10      	pop	{r4, pc}

08007916 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007916:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007918:	4604      	mov	r4, r0
 800791a:	460e      	mov	r6, r1
 800791c:	4615      	mov	r5, r2
 800791e:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007920:	6822      	ldr	r2, [r4, #0]
 8007922:	6893      	ldr	r3, [r2, #8]
 8007924:	ea36 0303 	bics.w	r3, r6, r3
 8007928:	d001      	beq.n	800792e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800792a:	2000      	movs	r0, #0
 800792c:	e02d      	b.n	800798a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 800792e:	1c6b      	adds	r3, r5, #1
 8007930:	d0f7      	beq.n	8007922 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007932:	f7fe f8f3 	bl	8005b1c <HAL_GetTick>
 8007936:	1bc0      	subs	r0, r0, r7
 8007938:	4285      	cmp	r5, r0
 800793a:	d8f1      	bhi.n	8007920 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800793c:	6823      	ldr	r3, [r4, #0]
 800793e:	685a      	ldr	r2, [r3, #4]
 8007940:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007944:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007946:	6862      	ldr	r2, [r4, #4]
 8007948:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800794c:	d10a      	bne.n	8007964 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 800794e:	68a2      	ldr	r2, [r4, #8]
 8007950:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007954:	d002      	beq.n	800795c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007956:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800795a:	d103      	bne.n	8007964 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 800795c:	681a      	ldr	r2, [r3, #0]
 800795e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007962:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007964:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007966:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800796a:	d107      	bne.n	800797c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 800796c:	681a      	ldr	r2, [r3, #0]
 800796e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007972:	601a      	str	r2, [r3, #0]
 8007974:	681a      	ldr	r2, [r3, #0]
 8007976:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800797a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800797c:	2301      	movs	r3, #1
 800797e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007982:	2300      	movs	r3, #0
 8007984:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007988:	2003      	movs	r0, #3
}
 800798a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800798c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800798c:	b538      	push	{r3, r4, r5, lr}
 800798e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007990:	6842      	ldr	r2, [r0, #4]
 8007992:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007996:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007998:	d11f      	bne.n	80079da <SPI_EndRxTransaction+0x4e>
 800799a:	6882      	ldr	r2, [r0, #8]
 800799c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80079a0:	d002      	beq.n	80079a8 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80079a2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80079a6:	d107      	bne.n	80079b8 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 80079a8:	6825      	ldr	r5, [r4, #0]
 80079aa:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80079ac:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80079b0:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80079b4:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80079b6:	d007      	beq.n	80079c8 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80079b8:	460a      	mov	r2, r1
 80079ba:	2180      	movs	r1, #128	; 0x80
 80079bc:	4620      	mov	r0, r4
 80079be:	f7ff ffaa 	bl	8007916 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80079c2:	b920      	cbnz	r0, 80079ce <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80079c4:	2000      	movs	r0, #0
}
 80079c6:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80079c8:	460a      	mov	r2, r1
 80079ca:	2101      	movs	r1, #1
 80079cc:	e7f6      	b.n	80079bc <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80079ce:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80079d0:	f043 0320 	orr.w	r3, r3, #32
 80079d4:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 80079d6:	2003      	movs	r0, #3
 80079d8:	e7f5      	b.n	80079c6 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80079da:	460a      	mov	r2, r1
 80079dc:	2101      	movs	r1, #1
 80079de:	e7ee      	b.n	80079be <SPI_EndRxTransaction+0x32>

080079e0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80079e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80079e2:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80079e4:	4a12      	ldr	r2, [pc, #72]	; (8007a30 <SPI_EndRxTxTransaction+0x50>)
 80079e6:	6815      	ldr	r5, [r2, #0]
 80079e8:	4a12      	ldr	r2, [pc, #72]	; (8007a34 <SPI_EndRxTxTransaction+0x54>)
 80079ea:	fbb5 f5f2 	udiv	r5, r5, r2
 80079ee:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80079f2:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80079f4:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80079f6:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80079f8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80079fc:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80079fe:	d10b      	bne.n	8007a18 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007a00:	460a      	mov	r2, r1
 8007a02:	2180      	movs	r1, #128	; 0x80
 8007a04:	f7ff ff87 	bl	8007916 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007a08:	b178      	cbz	r0, 8007a2a <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007a0a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007a0c:	f043 0320 	orr.w	r3, r3, #32
 8007a10:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007a12:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007a14:	b003      	add	sp, #12
 8007a16:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007a18:	9b01      	ldr	r3, [sp, #4]
 8007a1a:	b133      	cbz	r3, 8007a2a <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007a1c:	9b01      	ldr	r3, [sp, #4]
 8007a1e:	3b01      	subs	r3, #1
 8007a20:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007a22:	6823      	ldr	r3, [r4, #0]
 8007a24:	689b      	ldr	r3, [r3, #8]
 8007a26:	061b      	lsls	r3, r3, #24
 8007a28:	d4f6      	bmi.n	8007a18 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007a2a:	2000      	movs	r0, #0
 8007a2c:	e7f2      	b.n	8007a14 <SPI_EndRxTxTransaction+0x34>
 8007a2e:	bf00      	nop
 8007a30:	2000007c 	.word	0x2000007c
 8007a34:	016e3600 	.word	0x016e3600

08007a38 <HAL_SPI_Init>:
{
 8007a38:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007a3a:	4604      	mov	r4, r0
 8007a3c:	2800      	cmp	r0, #0
 8007a3e:	d036      	beq.n	8007aae <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007a40:	2300      	movs	r3, #0
 8007a42:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007a44:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007a48:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007a4c:	b91b      	cbnz	r3, 8007a56 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007a4e:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007a52:	f7fa f99f 	bl	8001d94 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007a56:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007a58:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007a5a:	2302      	movs	r3, #2
 8007a5c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007a60:	680b      	ldr	r3, [r1, #0]
 8007a62:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007a66:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007a68:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007a6c:	4303      	orrs	r3, r0
 8007a6e:	68e0      	ldr	r0, [r4, #12]
 8007a70:	4303      	orrs	r3, r0
 8007a72:	6920      	ldr	r0, [r4, #16]
 8007a74:	4303      	orrs	r3, r0
 8007a76:	6960      	ldr	r0, [r4, #20]
 8007a78:	4303      	orrs	r3, r0
 8007a7a:	69e0      	ldr	r0, [r4, #28]
 8007a7c:	4303      	orrs	r3, r0
 8007a7e:	6a20      	ldr	r0, [r4, #32]
 8007a80:	4303      	orrs	r3, r0
 8007a82:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007a84:	4303      	orrs	r3, r0
 8007a86:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007a8a:	4303      	orrs	r3, r0
 8007a8c:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007a8e:	0c12      	lsrs	r2, r2, #16
 8007a90:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007a92:	f002 0204 	and.w	r2, r2, #4
 8007a96:	431a      	orrs	r2, r3
 8007a98:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007a9a:	69cb      	ldr	r3, [r1, #28]
 8007a9c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007aa0:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007aa2:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007aa4:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007aa6:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007aa8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007aac:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007aae:	2001      	movs	r0, #1
 8007ab0:	e7fc      	b.n	8007aac <HAL_SPI_Init+0x74>

08007ab2 <HAL_SPI_Transmit>:
{
 8007ab2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007ab6:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007ab8:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007abc:	2b01      	cmp	r3, #1
{
 8007abe:	4604      	mov	r4, r0
 8007ac0:	460d      	mov	r5, r1
 8007ac2:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007ac4:	f000 809d 	beq.w	8007c02 <HAL_SPI_Transmit+0x150>
 8007ac8:	2301      	movs	r3, #1
 8007aca:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007ace:	f7fe f825 	bl	8005b1c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007ad2:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007ad6:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007ad8:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007ada:	b2d8      	uxtb	r0, r3
 8007adc:	f040 808f 	bne.w	8007bfe <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007ae0:	2d00      	cmp	r5, #0
 8007ae2:	d05a      	beq.n	8007b9a <HAL_SPI_Transmit+0xe8>
 8007ae4:	2f00      	cmp	r7, #0
 8007ae6:	d058      	beq.n	8007b9a <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007ae8:	2303      	movs	r3, #3
 8007aea:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007aee:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007af0:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007af2:	2300      	movs	r3, #0
 8007af4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007af6:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007afa:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007afc:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007afe:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007b00:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007b02:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007b04:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007b06:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007b0a:	bf08      	it	eq
 8007b0c:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007b0e:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007b10:	bf04      	itt	eq
 8007b12:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007b16:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007b18:	681a      	ldr	r2, [r3, #0]
 8007b1a:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007b1c:	bf5e      	ittt	pl
 8007b1e:	681a      	ldrpl	r2, [r3, #0]
 8007b20:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007b24:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007b26:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007b2a:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007b2c:	d141      	bne.n	8007bb2 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007b2e:	b10a      	cbz	r2, 8007b34 <HAL_SPI_Transmit+0x82>
 8007b30:	2f01      	cmp	r7, #1
 8007b32:	d107      	bne.n	8007b44 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007b34:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007b38:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007b3a:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007b3c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007b3e:	3b01      	subs	r3, #1
 8007b40:	b29b      	uxth	r3, r3
 8007b42:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007b44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007b46:	b29b      	uxth	r3, r3
 8007b48:	b9a3      	cbnz	r3, 8007b74 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007b4a:	4642      	mov	r2, r8
 8007b4c:	4631      	mov	r1, r6
 8007b4e:	4620      	mov	r0, r4
 8007b50:	f7ff ff46 	bl	80079e0 <SPI_EndRxTxTransaction>
 8007b54:	2800      	cmp	r0, #0
 8007b56:	d14f      	bne.n	8007bf8 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007b58:	68a3      	ldr	r3, [r4, #8]
 8007b5a:	b933      	cbnz	r3, 8007b6a <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007b5c:	9301      	str	r3, [sp, #4]
 8007b5e:	6823      	ldr	r3, [r4, #0]
 8007b60:	68da      	ldr	r2, [r3, #12]
 8007b62:	9201      	str	r2, [sp, #4]
 8007b64:	689b      	ldr	r3, [r3, #8]
 8007b66:	9301      	str	r3, [sp, #4]
 8007b68:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007b6a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007b6c:	3800      	subs	r0, #0
 8007b6e:	bf18      	it	ne
 8007b70:	2001      	movne	r0, #1
error:
 8007b72:	e012      	b.n	8007b9a <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007b74:	6822      	ldr	r2, [r4, #0]
 8007b76:	6893      	ldr	r3, [r2, #8]
 8007b78:	0798      	lsls	r0, r3, #30
 8007b7a:	d505      	bpl.n	8007b88 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007b7c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007b7e:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007b82:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007b84:	6323      	str	r3, [r4, #48]	; 0x30
 8007b86:	e7d9      	b.n	8007b3c <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007b88:	f7fd ffc8 	bl	8005b1c <HAL_GetTick>
 8007b8c:	eba0 0008 	sub.w	r0, r0, r8
 8007b90:	42b0      	cmp	r0, r6
 8007b92:	d30b      	bcc.n	8007bac <HAL_SPI_Transmit+0xfa>
 8007b94:	1c71      	adds	r1, r6, #1
 8007b96:	d0d5      	beq.n	8007b44 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007b98:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007b9a:	2301      	movs	r3, #1
 8007b9c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007ba0:	2300      	movs	r3, #0
 8007ba2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007ba6:	b002      	add	sp, #8
 8007ba8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007bac:	2e00      	cmp	r6, #0
 8007bae:	d1c9      	bne.n	8007b44 <HAL_SPI_Transmit+0x92>
 8007bb0:	e7f2      	b.n	8007b98 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007bb2:	b10a      	cbz	r2, 8007bb8 <HAL_SPI_Transmit+0x106>
 8007bb4:	2f01      	cmp	r7, #1
 8007bb6:	d108      	bne.n	8007bca <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007bb8:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007bba:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007bbc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007bbe:	3301      	adds	r3, #1
 8007bc0:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007bc2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007bc4:	3b01      	subs	r3, #1
 8007bc6:	b29b      	uxth	r3, r3
 8007bc8:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007bca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007bcc:	b29b      	uxth	r3, r3
 8007bce:	2b00      	cmp	r3, #0
 8007bd0:	d0bb      	beq.n	8007b4a <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007bd2:	6823      	ldr	r3, [r4, #0]
 8007bd4:	689a      	ldr	r2, [r3, #8]
 8007bd6:	0792      	lsls	r2, r2, #30
 8007bd8:	d502      	bpl.n	8007be0 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007bda:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007bdc:	7812      	ldrb	r2, [r2, #0]
 8007bde:	e7ec      	b.n	8007bba <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007be0:	f7fd ff9c 	bl	8005b1c <HAL_GetTick>
 8007be4:	eba0 0008 	sub.w	r0, r0, r8
 8007be8:	42b0      	cmp	r0, r6
 8007bea:	d302      	bcc.n	8007bf2 <HAL_SPI_Transmit+0x140>
 8007bec:	1c73      	adds	r3, r6, #1
 8007bee:	d0ec      	beq.n	8007bca <HAL_SPI_Transmit+0x118>
 8007bf0:	e7d2      	b.n	8007b98 <HAL_SPI_Transmit+0xe6>
 8007bf2:	2e00      	cmp	r6, #0
 8007bf4:	d1e9      	bne.n	8007bca <HAL_SPI_Transmit+0x118>
 8007bf6:	e7cf      	b.n	8007b98 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007bf8:	2320      	movs	r3, #32
 8007bfa:	6563      	str	r3, [r4, #84]	; 0x54
 8007bfc:	e7ac      	b.n	8007b58 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007bfe:	2002      	movs	r0, #2
 8007c00:	e7cb      	b.n	8007b9a <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007c02:	2002      	movs	r0, #2
 8007c04:	e7cf      	b.n	8007ba6 <HAL_SPI_Transmit+0xf4>

08007c06 <HAL_SPI_TransmitReceive>:
{
 8007c06:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007c0a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007c0c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007c10:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007c12:	2b01      	cmp	r3, #1
{
 8007c14:	4604      	mov	r4, r0
 8007c16:	460d      	mov	r5, r1
 8007c18:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007c1a:	f000 80e6 	beq.w	8007dea <HAL_SPI_TransmitReceive+0x1e4>
 8007c1e:	2301      	movs	r3, #1
 8007c20:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007c24:	f7fd ff7a 	bl	8005b1c <HAL_GetTick>
  tmp_state           = hspi->State;
 8007c28:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007c2c:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007c2e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007c30:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007c32:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007c34:	d00a      	beq.n	8007c4c <HAL_SPI_TransmitReceive+0x46>
 8007c36:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007c3a:	f040 80d4 	bne.w	8007de6 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007c3e:	68a3      	ldr	r3, [r4, #8]
 8007c40:	2b00      	cmp	r3, #0
 8007c42:	f040 80d0 	bne.w	8007de6 <HAL_SPI_TransmitReceive+0x1e0>
 8007c46:	2904      	cmp	r1, #4
 8007c48:	f040 80cd 	bne.w	8007de6 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007c4c:	2d00      	cmp	r5, #0
 8007c4e:	d040      	beq.n	8007cd2 <HAL_SPI_TransmitReceive+0xcc>
 8007c50:	f1b9 0f00 	cmp.w	r9, #0
 8007c54:	d03d      	beq.n	8007cd2 <HAL_SPI_TransmitReceive+0xcc>
 8007c56:	2e00      	cmp	r6, #0
 8007c58:	d03b      	beq.n	8007cd2 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007c5a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007c5e:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007c62:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007c64:	bf1c      	itt	ne
 8007c66:	2305      	movne	r3, #5
 8007c68:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007c6c:	2300      	movs	r3, #0
 8007c6e:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007c70:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c74:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007c76:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007c78:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c7a:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007c7c:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c7e:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007c80:	bf58      	it	pl
 8007c82:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007c84:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007c86:	bf58      	it	pl
 8007c88:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007c8c:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007c8e:	bf58      	it	pl
 8007c90:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c92:	68e1      	ldr	r1, [r4, #12]
 8007c94:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007c98:	d152      	bne.n	8007d40 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c9a:	b10a      	cbz	r2, 8007ca0 <HAL_SPI_TransmitReceive+0x9a>
 8007c9c:	2e01      	cmp	r6, #1
 8007c9e:	d107      	bne.n	8007cb0 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007ca0:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007ca4:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007ca6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007ca8:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007caa:	3b01      	subs	r3, #1
 8007cac:	b29b      	uxth	r3, r3
 8007cae:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007cb0:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007cb2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007cb4:	b29b      	uxth	r3, r3
 8007cb6:	b973      	cbnz	r3, 8007cd6 <HAL_SPI_TransmitReceive+0xd0>
 8007cb8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007cba:	b29b      	uxth	r3, r3
 8007cbc:	b95b      	cbnz	r3, 8007cd6 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007cbe:	4642      	mov	r2, r8
 8007cc0:	4639      	mov	r1, r7
 8007cc2:	4620      	mov	r0, r4
 8007cc4:	f7ff fe8c 	bl	80079e0 <SPI_EndRxTxTransaction>
 8007cc8:	2800      	cmp	r0, #0
 8007cca:	f000 8081 	beq.w	8007dd0 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007cce:	2320      	movs	r3, #32
 8007cd0:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007cd2:	2001      	movs	r0, #1
 8007cd4:	e02b      	b.n	8007d2e <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007cd6:	6821      	ldr	r1, [r4, #0]
 8007cd8:	688b      	ldr	r3, [r1, #8]
 8007cda:	079e      	lsls	r6, r3, #30
 8007cdc:	d50d      	bpl.n	8007cfa <HAL_SPI_TransmitReceive+0xf4>
 8007cde:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ce0:	b29b      	uxth	r3, r3
 8007ce2:	b153      	cbz	r3, 8007cfa <HAL_SPI_TransmitReceive+0xf4>
 8007ce4:	b14d      	cbz	r5, 8007cfa <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007ce6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007ce8:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007cec:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007cee:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007cf0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007cf2:	3b01      	subs	r3, #1
 8007cf4:	b29b      	uxth	r3, r3
 8007cf6:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007cf8:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007cfa:	688a      	ldr	r2, [r1, #8]
 8007cfc:	f012 0201 	ands.w	r2, r2, #1
 8007d00:	d00c      	beq.n	8007d1c <HAL_SPI_TransmitReceive+0x116>
 8007d02:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007d04:	b29b      	uxth	r3, r3
 8007d06:	b14b      	cbz	r3, 8007d1c <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007d08:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007d0a:	68c9      	ldr	r1, [r1, #12]
 8007d0c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007d10:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007d12:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007d14:	3b01      	subs	r3, #1
 8007d16:	b29b      	uxth	r3, r3
 8007d18:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007d1a:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007d1c:	f7fd fefe 	bl	8005b1c <HAL_GetTick>
 8007d20:	eba0 0008 	sub.w	r0, r0, r8
 8007d24:	42b8      	cmp	r0, r7
 8007d26:	d3c4      	bcc.n	8007cb2 <HAL_SPI_TransmitReceive+0xac>
 8007d28:	1c78      	adds	r0, r7, #1
 8007d2a:	d0c2      	beq.n	8007cb2 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007d2c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007d2e:	2301      	movs	r3, #1
 8007d30:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007d34:	2300      	movs	r3, #0
 8007d36:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007d3a:	b003      	add	sp, #12
 8007d3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007d40:	b10a      	cbz	r2, 8007d46 <HAL_SPI_TransmitReceive+0x140>
 8007d42:	2e01      	cmp	r6, #1
 8007d44:	d108      	bne.n	8007d58 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d46:	782a      	ldrb	r2, [r5, #0]
 8007d48:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007d4a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007d4c:	3301      	adds	r3, #1
 8007d4e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007d50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d52:	3b01      	subs	r3, #1
 8007d54:	b29b      	uxth	r3, r3
 8007d56:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007d58:	2501      	movs	r5, #1
 8007d5a:	e02d      	b.n	8007db8 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007d5c:	6822      	ldr	r2, [r4, #0]
 8007d5e:	6893      	ldr	r3, [r2, #8]
 8007d60:	0799      	lsls	r1, r3, #30
 8007d62:	d50e      	bpl.n	8007d82 <HAL_SPI_TransmitReceive+0x17c>
 8007d64:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d66:	b29b      	uxth	r3, r3
 8007d68:	b15b      	cbz	r3, 8007d82 <HAL_SPI_TransmitReceive+0x17c>
 8007d6a:	b155      	cbz	r5, 8007d82 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007d6c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007d6e:	781b      	ldrb	r3, [r3, #0]
 8007d70:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007d72:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007d74:	3301      	adds	r3, #1
 8007d76:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007d78:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d7a:	3b01      	subs	r3, #1
 8007d7c:	b29b      	uxth	r3, r3
 8007d7e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007d80:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007d82:	6822      	ldr	r2, [r4, #0]
 8007d84:	6891      	ldr	r1, [r2, #8]
 8007d86:	f011 0101 	ands.w	r1, r1, #1
 8007d8a:	d00d      	beq.n	8007da8 <HAL_SPI_TransmitReceive+0x1a2>
 8007d8c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007d8e:	b29b      	uxth	r3, r3
 8007d90:	b153      	cbz	r3, 8007da8 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007d92:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007d94:	68d2      	ldr	r2, [r2, #12]
 8007d96:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007d98:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007d9a:	3301      	adds	r3, #1
 8007d9c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007d9e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007da0:	3b01      	subs	r3, #1
 8007da2:	b29b      	uxth	r3, r3
 8007da4:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007da6:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007da8:	f7fd feb8 	bl	8005b1c <HAL_GetTick>
 8007dac:	eba0 0008 	sub.w	r0, r0, r8
 8007db0:	42b8      	cmp	r0, r7
 8007db2:	d30a      	bcc.n	8007dca <HAL_SPI_TransmitReceive+0x1c4>
 8007db4:	1c7b      	adds	r3, r7, #1
 8007db6:	d1b9      	bne.n	8007d2c <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007db8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007dba:	b29b      	uxth	r3, r3
 8007dbc:	2b00      	cmp	r3, #0
 8007dbe:	d1cd      	bne.n	8007d5c <HAL_SPI_TransmitReceive+0x156>
 8007dc0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007dc2:	b29b      	uxth	r3, r3
 8007dc4:	2b00      	cmp	r3, #0
 8007dc6:	d1c9      	bne.n	8007d5c <HAL_SPI_TransmitReceive+0x156>
 8007dc8:	e779      	b.n	8007cbe <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007dca:	2f00      	cmp	r7, #0
 8007dcc:	d1f4      	bne.n	8007db8 <HAL_SPI_TransmitReceive+0x1b2>
 8007dce:	e7ad      	b.n	8007d2c <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007dd0:	68a3      	ldr	r3, [r4, #8]
 8007dd2:	2b00      	cmp	r3, #0
 8007dd4:	d1ab      	bne.n	8007d2e <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007dd6:	6823      	ldr	r3, [r4, #0]
 8007dd8:	9001      	str	r0, [sp, #4]
 8007dda:	68da      	ldr	r2, [r3, #12]
 8007ddc:	9201      	str	r2, [sp, #4]
 8007dde:	689b      	ldr	r3, [r3, #8]
 8007de0:	9301      	str	r3, [sp, #4]
 8007de2:	9b01      	ldr	r3, [sp, #4]
 8007de4:	e7a3      	b.n	8007d2e <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007de6:	2002      	movs	r0, #2
 8007de8:	e7a1      	b.n	8007d2e <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8007dea:	2002      	movs	r0, #2
 8007dec:	e7a5      	b.n	8007d3a <HAL_SPI_TransmitReceive+0x134>

08007dee <HAL_SPI_Receive>:
{
 8007dee:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007df2:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007df4:	6843      	ldr	r3, [r0, #4]
 8007df6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8007dfa:	4604      	mov	r4, r0
 8007dfc:	4689      	mov	r9, r1
 8007dfe:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007e00:	d10c      	bne.n	8007e1c <HAL_SPI_Receive+0x2e>
 8007e02:	6883      	ldr	r3, [r0, #8]
 8007e04:	b953      	cbnz	r3, 8007e1c <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007e06:	2304      	movs	r3, #4
 8007e08:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007e0c:	4613      	mov	r3, r2
 8007e0e:	9500      	str	r5, [sp, #0]
 8007e10:	460a      	mov	r2, r1
 8007e12:	f7ff fef8 	bl	8007c06 <HAL_SPI_TransmitReceive>
}
 8007e16:	b003      	add	sp, #12
 8007e18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8007e1c:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8007e20:	2b01      	cmp	r3, #1
 8007e22:	f000 8084 	beq.w	8007f2e <HAL_SPI_Receive+0x140>
 8007e26:	2301      	movs	r3, #1
 8007e28:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007e2c:	f7fd fe76 	bl	8005b1c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007e30:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007e34:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007e36:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007e38:	b2d8      	uxtb	r0, r3
 8007e3a:	d176      	bne.n	8007f2a <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8007e3c:	f1b9 0f00 	cmp.w	r9, #0
 8007e40:	d05a      	beq.n	8007ef8 <HAL_SPI_Receive+0x10a>
 8007e42:	2f00      	cmp	r7, #0
 8007e44:	d058      	beq.n	8007ef8 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007e46:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007e48:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8007e4c:	2304      	movs	r3, #4
 8007e4e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007e52:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8007e54:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007e56:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007e58:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8007e5c:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007e5e:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8007e60:	bf08      	it	eq
 8007e62:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007e64:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8007e66:	bf08      	it	eq
 8007e68:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8007e6c:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8007e70:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8007e72:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8007e74:	bf08      	it	eq
 8007e76:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007e78:	681a      	ldr	r2, [r3, #0]
 8007e7a:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007e7c:	bf5e      	ittt	pl
 8007e7e:	681a      	ldrpl	r2, [r3, #0]
 8007e80:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007e84:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007e86:	68e3      	ldr	r3, [r4, #12]
 8007e88:	b1f3      	cbz	r3, 8007ec8 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 8007e8a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e8c:	b29b      	uxth	r3, r3
 8007e8e:	b1fb      	cbz	r3, 8007ed0 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007e90:	6823      	ldr	r3, [r4, #0]
 8007e92:	689a      	ldr	r2, [r3, #8]
 8007e94:	07d2      	lsls	r2, r2, #31
 8007e96:	d539      	bpl.n	8007f0c <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007e98:	68da      	ldr	r2, [r3, #12]
 8007e9a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007e9c:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007ea0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007ea2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ea4:	3b01      	subs	r3, #1
 8007ea6:	b29b      	uxth	r3, r3
 8007ea8:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007eaa:	e7ee      	b.n	8007e8a <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007eac:	6823      	ldr	r3, [r4, #0]
 8007eae:	689a      	ldr	r2, [r3, #8]
 8007eb0:	07d0      	lsls	r0, r2, #31
 8007eb2:	d518      	bpl.n	8007ee6 <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007eb4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007eb6:	7b1b      	ldrb	r3, [r3, #12]
 8007eb8:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007eba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007ebc:	3301      	adds	r3, #1
 8007ebe:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007ec0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ec2:	3b01      	subs	r3, #1
 8007ec4:	b29b      	uxth	r3, r3
 8007ec6:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8007ec8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007eca:	b29b      	uxth	r3, r3
 8007ecc:	2b00      	cmp	r3, #0
 8007ece:	d1ed      	bne.n	8007eac <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007ed0:	4642      	mov	r2, r8
 8007ed2:	4629      	mov	r1, r5
 8007ed4:	4620      	mov	r0, r4
 8007ed6:	f7ff fd59 	bl	800798c <SPI_EndRxTransaction>
 8007eda:	bb18      	cbnz	r0, 8007f24 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007edc:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007ede:	3800      	subs	r0, #0
 8007ee0:	bf18      	it	ne
 8007ee2:	2001      	movne	r0, #1
error :
 8007ee4:	e008      	b.n	8007ef8 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007ee6:	f7fd fe19 	bl	8005b1c <HAL_GetTick>
 8007eea:	eba0 0008 	sub.w	r0, r0, r8
 8007eee:	42a8      	cmp	r0, r5
 8007ef0:	d309      	bcc.n	8007f06 <HAL_SPI_Receive+0x118>
 8007ef2:	1c69      	adds	r1, r5, #1
 8007ef4:	d0e8      	beq.n	8007ec8 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 8007ef6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007ef8:	2301      	movs	r3, #1
 8007efa:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007efe:	2300      	movs	r3, #0
 8007f00:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8007f04:	e787      	b.n	8007e16 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007f06:	2d00      	cmp	r5, #0
 8007f08:	d1de      	bne.n	8007ec8 <HAL_SPI_Receive+0xda>
 8007f0a:	e7f4      	b.n	8007ef6 <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007f0c:	f7fd fe06 	bl	8005b1c <HAL_GetTick>
 8007f10:	eba0 0008 	sub.w	r0, r0, r8
 8007f14:	42a8      	cmp	r0, r5
 8007f16:	d302      	bcc.n	8007f1e <HAL_SPI_Receive+0x130>
 8007f18:	1c6b      	adds	r3, r5, #1
 8007f1a:	d0b6      	beq.n	8007e8a <HAL_SPI_Receive+0x9c>
 8007f1c:	e7eb      	b.n	8007ef6 <HAL_SPI_Receive+0x108>
 8007f1e:	2d00      	cmp	r5, #0
 8007f20:	d1b3      	bne.n	8007e8a <HAL_SPI_Receive+0x9c>
 8007f22:	e7e8      	b.n	8007ef6 <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007f24:	2320      	movs	r3, #32
 8007f26:	6563      	str	r3, [r4, #84]	; 0x54
 8007f28:	e7d8      	b.n	8007edc <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 8007f2a:	2002      	movs	r0, #2
 8007f2c:	e7e4      	b.n	8007ef8 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 8007f2e:	2002      	movs	r0, #2
 8007f30:	e771      	b.n	8007e16 <HAL_SPI_Receive+0x28>

08007f32 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007f32:	6803      	ldr	r3, [r0, #0]
 8007f34:	68da      	ldr	r2, [r3, #12]
 8007f36:	f042 0201 	orr.w	r2, r2, #1
 8007f3a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007f3c:	689a      	ldr	r2, [r3, #8]
 8007f3e:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007f42:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8007f44:	bf1e      	ittt	ne
 8007f46:	681a      	ldrne	r2, [r3, #0]
 8007f48:	f042 0201 	orrne.w	r2, r2, #1
 8007f4c:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8007f4e:	2000      	movs	r0, #0
 8007f50:	4770      	bx	lr

08007f52 <HAL_TIM_OC_DelayElapsedCallback>:
 8007f52:	4770      	bx	lr

08007f54 <HAL_TIM_IC_CaptureCallback>:
 8007f54:	4770      	bx	lr

08007f56 <HAL_TIM_PWM_PulseFinishedCallback>:
 8007f56:	4770      	bx	lr

08007f58 <HAL_TIM_TriggerCallback>:
 8007f58:	4770      	bx	lr

08007f5a <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007f5a:	6803      	ldr	r3, [r0, #0]
 8007f5c:	691a      	ldr	r2, [r3, #16]
 8007f5e:	0791      	lsls	r1, r2, #30
{
 8007f60:	b510      	push	{r4, lr}
 8007f62:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007f64:	d50e      	bpl.n	8007f84 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007f66:	68da      	ldr	r2, [r3, #12]
 8007f68:	0792      	lsls	r2, r2, #30
 8007f6a:	d50b      	bpl.n	8007f84 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8007f6c:	f06f 0202 	mvn.w	r2, #2
 8007f70:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007f72:	2201      	movs	r2, #1
 8007f74:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007f76:	699b      	ldr	r3, [r3, #24]
 8007f78:	079b      	lsls	r3, r3, #30
 8007f7a:	d077      	beq.n	800806c <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007f7c:	f7ff ffea 	bl	8007f54 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007f80:	2300      	movs	r3, #0
 8007f82:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8007f84:	6823      	ldr	r3, [r4, #0]
 8007f86:	691a      	ldr	r2, [r3, #16]
 8007f88:	0750      	lsls	r0, r2, #29
 8007f8a:	d510      	bpl.n	8007fae <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8007f8c:	68da      	ldr	r2, [r3, #12]
 8007f8e:	0751      	lsls	r1, r2, #29
 8007f90:	d50d      	bpl.n	8007fae <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007f92:	f06f 0204 	mvn.w	r2, #4
 8007f96:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007f98:	2202      	movs	r2, #2
 8007f9a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007f9c:	699b      	ldr	r3, [r3, #24]
 8007f9e:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007fa2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007fa4:	d068      	beq.n	8008078 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8007fa6:	f7ff ffd5 	bl	8007f54 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007faa:	2300      	movs	r3, #0
 8007fac:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8007fae:	6823      	ldr	r3, [r4, #0]
 8007fb0:	691a      	ldr	r2, [r3, #16]
 8007fb2:	0712      	lsls	r2, r2, #28
 8007fb4:	d50f      	bpl.n	8007fd6 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007fb6:	68da      	ldr	r2, [r3, #12]
 8007fb8:	0710      	lsls	r0, r2, #28
 8007fba:	d50c      	bpl.n	8007fd6 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007fbc:	f06f 0208 	mvn.w	r2, #8
 8007fc0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007fc2:	2204      	movs	r2, #4
 8007fc4:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007fc6:	69db      	ldr	r3, [r3, #28]
 8007fc8:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007fca:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007fcc:	d05a      	beq.n	8008084 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007fce:	f7ff ffc1 	bl	8007f54 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007fd2:	2300      	movs	r3, #0
 8007fd4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007fd6:	6823      	ldr	r3, [r4, #0]
 8007fd8:	691a      	ldr	r2, [r3, #16]
 8007fda:	06d2      	lsls	r2, r2, #27
 8007fdc:	d510      	bpl.n	8008000 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8007fde:	68da      	ldr	r2, [r3, #12]
 8007fe0:	06d0      	lsls	r0, r2, #27
 8007fe2:	d50d      	bpl.n	8008000 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007fe4:	f06f 0210 	mvn.w	r2, #16
 8007fe8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007fea:	2208      	movs	r2, #8
 8007fec:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007fee:	69db      	ldr	r3, [r3, #28]
 8007ff0:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007ff4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007ff6:	d04b      	beq.n	8008090 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8007ff8:	f7ff ffac 	bl	8007f54 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007ffc:	2300      	movs	r3, #0
 8007ffe:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008000:	6823      	ldr	r3, [r4, #0]
 8008002:	691a      	ldr	r2, [r3, #16]
 8008004:	07d1      	lsls	r1, r2, #31
 8008006:	d508      	bpl.n	800801a <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008008:	68da      	ldr	r2, [r3, #12]
 800800a:	07d2      	lsls	r2, r2, #31
 800800c:	d505      	bpl.n	800801a <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800800e:	f06f 0201 	mvn.w	r2, #1
 8008012:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008014:	4620      	mov	r0, r4
 8008016:	f7f9 fcc5 	bl	80019a4 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800801a:	6823      	ldr	r3, [r4, #0]
 800801c:	691a      	ldr	r2, [r3, #16]
 800801e:	0610      	lsls	r0, r2, #24
 8008020:	d508      	bpl.n	8008034 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008022:	68da      	ldr	r2, [r3, #12]
 8008024:	0611      	lsls	r1, r2, #24
 8008026:	d505      	bpl.n	8008034 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008028:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800802c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800802e:	4620      	mov	r0, r4
 8008030:	f000 f8f5 	bl	800821e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008034:	6823      	ldr	r3, [r4, #0]
 8008036:	691a      	ldr	r2, [r3, #16]
 8008038:	0652      	lsls	r2, r2, #25
 800803a:	d508      	bpl.n	800804e <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800803c:	68da      	ldr	r2, [r3, #12]
 800803e:	0650      	lsls	r0, r2, #25
 8008040:	d505      	bpl.n	800804e <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008042:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008046:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008048:	4620      	mov	r0, r4
 800804a:	f7ff ff85 	bl	8007f58 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800804e:	6823      	ldr	r3, [r4, #0]
 8008050:	691a      	ldr	r2, [r3, #16]
 8008052:	0691      	lsls	r1, r2, #26
 8008054:	d522      	bpl.n	800809c <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8008056:	68da      	ldr	r2, [r3, #12]
 8008058:	0692      	lsls	r2, r2, #26
 800805a:	d51f      	bpl.n	800809c <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800805c:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8008060:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008062:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008064:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8008068:	f000 b8d8 	b.w	800821c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800806c:	f7ff ff71 	bl	8007f52 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008070:	4620      	mov	r0, r4
 8008072:	f7ff ff70 	bl	8007f56 <HAL_TIM_PWM_PulseFinishedCallback>
 8008076:	e783      	b.n	8007f80 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008078:	f7ff ff6b 	bl	8007f52 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800807c:	4620      	mov	r0, r4
 800807e:	f7ff ff6a 	bl	8007f56 <HAL_TIM_PWM_PulseFinishedCallback>
 8008082:	e792      	b.n	8007faa <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008084:	f7ff ff65 	bl	8007f52 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008088:	4620      	mov	r0, r4
 800808a:	f7ff ff64 	bl	8007f56 <HAL_TIM_PWM_PulseFinishedCallback>
 800808e:	e7a0      	b.n	8007fd2 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008090:	f7ff ff5f 	bl	8007f52 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008094:	4620      	mov	r0, r4
 8008096:	f7ff ff5e 	bl	8007f56 <HAL_TIM_PWM_PulseFinishedCallback>
 800809a:	e7af      	b.n	8007ffc <HAL_TIM_IRQHandler+0xa2>
}
 800809c:	bd10      	pop	{r4, pc}
	...

080080a0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80080a0:	4a30      	ldr	r2, [pc, #192]	; (8008164 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80080a2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80080a4:	4290      	cmp	r0, r2
 80080a6:	d012      	beq.n	80080ce <TIM_Base_SetConfig+0x2e>
 80080a8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80080ac:	d00f      	beq.n	80080ce <TIM_Base_SetConfig+0x2e>
 80080ae:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80080b2:	4290      	cmp	r0, r2
 80080b4:	d00b      	beq.n	80080ce <TIM_Base_SetConfig+0x2e>
 80080b6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80080ba:	4290      	cmp	r0, r2
 80080bc:	d007      	beq.n	80080ce <TIM_Base_SetConfig+0x2e>
 80080be:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80080c2:	4290      	cmp	r0, r2
 80080c4:	d003      	beq.n	80080ce <TIM_Base_SetConfig+0x2e>
 80080c6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80080ca:	4290      	cmp	r0, r2
 80080cc:	d119      	bne.n	8008102 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80080ce:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80080d0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80080d4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80080d6:	4a23      	ldr	r2, [pc, #140]	; (8008164 <TIM_Base_SetConfig+0xc4>)
 80080d8:	4290      	cmp	r0, r2
 80080da:	d029      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 80080dc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80080e0:	d026      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 80080e2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80080e6:	4290      	cmp	r0, r2
 80080e8:	d022      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 80080ea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80080ee:	4290      	cmp	r0, r2
 80080f0:	d01e      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 80080f2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80080f6:	4290      	cmp	r0, r2
 80080f8:	d01a      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 80080fa:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80080fe:	4290      	cmp	r0, r2
 8008100:	d016      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 8008102:	4a19      	ldr	r2, [pc, #100]	; (8008168 <TIM_Base_SetConfig+0xc8>)
 8008104:	4290      	cmp	r0, r2
 8008106:	d013      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 8008108:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800810c:	4290      	cmp	r0, r2
 800810e:	d00f      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 8008110:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008114:	4290      	cmp	r0, r2
 8008116:	d00b      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 8008118:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800811c:	4290      	cmp	r0, r2
 800811e:	d007      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 8008120:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008124:	4290      	cmp	r0, r2
 8008126:	d003      	beq.n	8008130 <TIM_Base_SetConfig+0x90>
 8008128:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800812c:	4290      	cmp	r0, r2
 800812e:	d103      	bne.n	8008138 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008130:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008132:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008136:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008138:	694a      	ldr	r2, [r1, #20]
 800813a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800813e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008140:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008142:	688b      	ldr	r3, [r1, #8]
 8008144:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008146:	680b      	ldr	r3, [r1, #0]
 8008148:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800814a:	4b06      	ldr	r3, [pc, #24]	; (8008164 <TIM_Base_SetConfig+0xc4>)
 800814c:	4298      	cmp	r0, r3
 800814e:	d003      	beq.n	8008158 <TIM_Base_SetConfig+0xb8>
 8008150:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008154:	4298      	cmp	r0, r3
 8008156:	d101      	bne.n	800815c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008158:	690b      	ldr	r3, [r1, #16]
 800815a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800815c:	2301      	movs	r3, #1
 800815e:	6143      	str	r3, [r0, #20]
}
 8008160:	4770      	bx	lr
 8008162:	bf00      	nop
 8008164:	40010000 	.word	0x40010000
 8008168:	40014000 	.word	0x40014000

0800816c <HAL_TIM_Base_Init>:
{
 800816c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800816e:	4604      	mov	r4, r0
 8008170:	b1a0      	cbz	r0, 800819c <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008172:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008176:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800817a:	b91b      	cbnz	r3, 8008184 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800817c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008180:	f7f9 fe3e 	bl	8001e00 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008184:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008186:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8008188:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800818c:	1d21      	adds	r1, r4, #4
 800818e:	f7ff ff87 	bl	80080a0 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8008192:	2301      	movs	r3, #1
 8008194:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8008198:	2000      	movs	r0, #0
}
 800819a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800819c:	2001      	movs	r0, #1
 800819e:	e7fc      	b.n	800819a <HAL_TIM_Base_Init+0x2e>

080081a0 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80081a0:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80081a2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80081a6:	2b01      	cmp	r3, #1
 80081a8:	f04f 0302 	mov.w	r3, #2
 80081ac:	d032      	beq.n	8008214 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80081ae:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80081b2:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80081b4:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80081b6:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80081b8:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80081ba:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80081be:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80081c0:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80081c2:	4c15      	ldr	r4, [pc, #84]	; (8008218 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 80081c4:	42a3      	cmp	r3, r4
 80081c6:	d01a      	beq.n	80081fe <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80081c8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80081cc:	d017      	beq.n	80081fe <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80081ce:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 80081d2:	42a3      	cmp	r3, r4
 80081d4:	d013      	beq.n	80081fe <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80081d6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80081da:	42a3      	cmp	r3, r4
 80081dc:	d00f      	beq.n	80081fe <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80081de:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80081e2:	42a3      	cmp	r3, r4
 80081e4:	d00b      	beq.n	80081fe <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80081e6:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 80081ea:	42a3      	cmp	r3, r4
 80081ec:	d007      	beq.n	80081fe <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80081ee:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 80081f2:	42a3      	cmp	r3, r4
 80081f4:	d003      	beq.n	80081fe <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80081f6:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 80081fa:	42a3      	cmp	r3, r4
 80081fc:	d104      	bne.n	8008208 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80081fe:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008200:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008204:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008206:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008208:	2301      	movs	r3, #1
 800820a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800820e:	2300      	movs	r3, #0
 8008210:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008214:	4618      	mov	r0, r3

  return HAL_OK;
}
 8008216:	bd30      	pop	{r4, r5, pc}
 8008218:	40010000 	.word	0x40010000

0800821c <HAL_TIMEx_CommutCallback>:
 800821c:	4770      	bx	lr

0800821e <HAL_TIMEx_BreakCallback>:
 800821e:	4770      	bx	lr

08008220 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008224:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8008226:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800822a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800822e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8008232:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008236:	6809      	ldr	r1, [r1, #0]
 8008238:	2901      	cmp	r1, #1
 800823a:	ea43 0304 	orr.w	r3, r3, r4
 800823e:	4912      	ldr	r1, [pc, #72]	; (8008288 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8008240:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008242:	d00f      	beq.n	8008264 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008244:	431a      	orrs	r2, r3
 8008246:	432a      	orrs	r2, r5
 8008248:	ea42 0308 	orr.w	r3, r2, r8
 800824c:	ea43 030e 	orr.w	r3, r3, lr
 8008250:	ea43 030c 	orr.w	r3, r3, ip
 8008254:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008256:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008258:	4333      	orrs	r3, r6
 800825a:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800825c:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800825e:	2000      	movs	r0, #0
 8008260:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008264:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8008266:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008268:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800826a:	ea45 0208 	orr.w	r2, r5, r8
 800826e:	ea42 020e 	orr.w	r2, r2, lr
 8008272:	ea42 020c 	orr.w	r2, r2, ip
 8008276:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8008278:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800827c:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800827e:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008280:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008282:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8008284:	6042      	str	r2, [r0, #4]
 8008286:	e7ea      	b.n	800825e <FMC_SDRAM_Init+0x3e>
 8008288:	ffff8000 	.word	0xffff8000

0800828c <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 800828c:	68cb      	ldr	r3, [r1, #12]
{
 800828e:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008290:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008292:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008294:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008296:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8008298:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800829a:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800829e:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80082a0:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80082a2:	3b01      	subs	r3, #1
 80082a4:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80082a6:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80082a8:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80082aa:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 80082ac:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80082ae:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80082b0:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80082b4:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80082b8:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 80082bc:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80082c0:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 80082c4:	d00c      	beq.n	80082e0 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80082c6:	ea43 030c 	orr.w	r3, r3, ip
 80082ca:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80082cc:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80082ce:	4333      	orrs	r3, r6
 80082d0:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80082d2:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80082d6:	430b      	orrs	r3, r1
 80082d8:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80082da:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80082dc:	2000      	movs	r0, #0
 80082de:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80082e0:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80082e2:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 80082e6:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80082ea:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80082ec:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80082ee:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 80082f2:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80082f4:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80082f6:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80082f8:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80082fc:	430a      	orrs	r2, r1
 80082fe:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008300:	60c2      	str	r2, [r0, #12]
 8008302:	e7eb      	b.n	80082dc <FMC_SDRAM_Timing_Init+0x50>

08008304 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008304:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8008306:	2300      	movs	r3, #0
 8008308:	9301      	str	r3, [sp, #4]
{
 800830a:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800830c:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008310:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008312:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008314:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8008318:	688a      	ldr	r2, [r1, #8]
 800831a:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800831c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008320:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008322:	9b01      	ldr	r3, [sp, #4]
 8008324:	6103      	str	r3, [r0, #16]
{
 8008326:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8008328:	f7fd fbf8 	bl	8005b1c <HAL_GetTick>
 800832c:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800832e:	69a3      	ldr	r3, [r4, #24]
 8008330:	f013 0320 	ands.w	r3, r3, #32
 8008334:	d101      	bne.n	800833a <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8008336:	4618      	mov	r0, r3
 8008338:	e003      	b.n	8008342 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800833a:	1c6b      	adds	r3, r5, #1
 800833c:	d0f7      	beq.n	800832e <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800833e:	b915      	cbnz	r5, 8008346 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8008340:	2003      	movs	r0, #3
}
 8008342:	b002      	add	sp, #8
 8008344:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008346:	f7fd fbe9 	bl	8005b1c <HAL_GetTick>
 800834a:	1b80      	subs	r0, r0, r6
 800834c:	42a8      	cmp	r0, r5
 800834e:	d9ee      	bls.n	800832e <FMC_SDRAM_SendCommand+0x2a>
 8008350:	e7f6      	b.n	8008340 <FMC_SDRAM_SendCommand+0x3c>

08008352 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8008352:	6943      	ldr	r3, [r0, #20]
 8008354:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8008358:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800835a:	2000      	movs	r0, #0
 800835c:	4770      	bx	lr
	...

08008360 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008360:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008364:	b113      	cbz	r3, 800836c <osKernelInitialize+0xc>
    stat = osErrorISR;
 8008366:	f06f 0005 	mvn.w	r0, #5
 800836a:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800836c:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008370:	4b07      	ldr	r3, [pc, #28]	; (8008390 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8008372:	b912      	cbnz	r2, 800837a <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008374:	f3ef 8211 	mrs	r2, BASEPRI
 8008378:	b112      	cbz	r2, 8008380 <osKernelInitialize+0x20>
 800837a:	681a      	ldr	r2, [r3, #0]
 800837c:	2a02      	cmp	r2, #2
 800837e:	d0f2      	beq.n	8008366 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8008380:	6818      	ldr	r0, [r3, #0]
 8008382:	b910      	cbnz	r0, 800838a <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008384:	2201      	movs	r2, #1
 8008386:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008388:	4770      	bx	lr
    } else {
      stat = osError;
 800838a:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800838e:	4770      	bx	lr
 8008390:	2000488c 	.word	0x2000488c

08008394 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008394:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008396:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800839a:	b113      	cbz	r3, 80083a2 <osKernelStart+0xe>
    stat = osErrorISR;
 800839c:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80083a0:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80083a2:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80083a6:	4b0a      	ldr	r3, [pc, #40]	; (80083d0 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80083a8:	b912      	cbnz	r2, 80083b0 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80083aa:	f3ef 8211 	mrs	r2, BASEPRI
 80083ae:	b112      	cbz	r2, 80083b6 <osKernelStart+0x22>
 80083b0:	681a      	ldr	r2, [r3, #0]
 80083b2:	2a02      	cmp	r2, #2
 80083b4:	d0f2      	beq.n	800839c <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80083b6:	681a      	ldr	r2, [r3, #0]
 80083b8:	2a01      	cmp	r2, #1
 80083ba:	d105      	bne.n	80083c8 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80083bc:	2202      	movs	r2, #2
 80083be:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80083c0:	f001 fbd8 	bl	8009b74 <vTaskStartScheduler>
      stat = osOK;
 80083c4:	2000      	movs	r0, #0
 80083c6:	e7eb      	b.n	80083a0 <osKernelStart+0xc>
      stat = osError;
 80083c8:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80083cc:	e7e8      	b.n	80083a0 <osKernelStart+0xc>
 80083ce:	bf00      	nop
 80083d0:	2000488c 	.word	0x2000488c

080083d4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80083d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80083d6:	b087      	sub	sp, #28
 80083d8:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80083da:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80083dc:	460b      	mov	r3, r1
  hTask = NULL;
 80083de:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80083e0:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80083e4:	bb22      	cbnz	r2, 8008430 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80083e6:	f3ef 8210 	mrs	r2, PRIMASK
 80083ea:	b912      	cbnz	r2, 80083f2 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80083ec:	f3ef 8211 	mrs	r2, BASEPRI
 80083f0:	b11a      	cbz	r2, 80083fa <osThreadNew+0x26>
 80083f2:	4a22      	ldr	r2, [pc, #136]	; (800847c <osThreadNew+0xa8>)
 80083f4:	6812      	ldr	r2, [r2, #0]
 80083f6:	2a02      	cmp	r2, #2
 80083f8:	d01a      	beq.n	8008430 <osThreadNew+0x5c>
 80083fa:	b1c8      	cbz	r0, 8008430 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80083fc:	2c00      	cmp	r4, #0
 80083fe:	d02f      	beq.n	8008460 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008400:	69a5      	ldr	r5, [r4, #24]
 8008402:	2d00      	cmp	r5, #0
 8008404:	bf08      	it	eq
 8008406:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008408:	1e6a      	subs	r2, r5, #1
 800840a:	2a37      	cmp	r2, #55	; 0x37
 800840c:	46ac      	mov	ip, r5
 800840e:	d82b      	bhi.n	8008468 <osThreadNew+0x94>
 8008410:	6862      	ldr	r2, [r4, #4]
 8008412:	07d2      	lsls	r2, r2, #31
 8008414:	d428      	bmi.n	8008468 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008416:	6966      	ldr	r6, [r4, #20]
 8008418:	b16e      	cbz	r6, 8008436 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800841a:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800841c:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008420:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008422:	b157      	cbz	r7, 800843a <osThreadNew+0x66>
 8008424:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8008428:	d902      	bls.n	8008430 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800842a:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800842c:	b104      	cbz	r4, 8008430 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800842e:	b9ee      	cbnz	r6, 800846c <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008430:	9805      	ldr	r0, [sp, #20]
}
 8008432:	b007      	add	sp, #28
 8008434:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008436:	2280      	movs	r2, #128	; 0x80
 8008438:	e7f0      	b.n	800841c <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800843a:	f1be 0f00 	cmp.w	lr, #0
 800843e:	d1f7      	bne.n	8008430 <osThreadNew+0x5c>
      if (mem == 0) {
 8008440:	6924      	ldr	r4, [r4, #16]
 8008442:	2c00      	cmp	r4, #0
 8008444:	d1f4      	bne.n	8008430 <osThreadNew+0x5c>
 8008446:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008448:	a905      	add	r1, sp, #20
 800844a:	e9cd c100 	strd	ip, r1, [sp]
 800844e:	b292      	uxth	r2, r2
 8008450:	4621      	mov	r1, r4
 8008452:	f001 fb61 	bl	8009b18 <xTaskCreate>
 8008456:	2801      	cmp	r0, #1
          hTask = NULL;
 8008458:	bf1c      	itt	ne
 800845a:	2300      	movne	r3, #0
 800845c:	9305      	strne	r3, [sp, #20]
 800845e:	e7e7      	b.n	8008430 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8008460:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008464:	2280      	movs	r2, #128	; 0x80
 8008466:	e7ef      	b.n	8008448 <osThreadNew+0x74>
        return (NULL);
 8008468:	2000      	movs	r0, #0
 800846a:	e7e2      	b.n	8008432 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800846c:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008470:	9500      	str	r5, [sp, #0]
 8008472:	f001 fb19 	bl	8009aa8 <xTaskCreateStatic>
 8008476:	9005      	str	r0, [sp, #20]
 8008478:	e7da      	b.n	8008430 <osThreadNew+0x5c>
 800847a:	bf00      	nop
 800847c:	2000488c 	.word	0x2000488c

08008480 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8008480:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008482:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008486:	b113      	cbz	r3, 800848e <osDelay+0xe>
    stat = osErrorISR;
 8008488:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800848c:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800848e:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008492:	b913      	cbnz	r3, 800849a <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008494:	f3ef 8311 	mrs	r3, BASEPRI
 8008498:	b11b      	cbz	r3, 80084a2 <osDelay+0x22>
 800849a:	4b05      	ldr	r3, [pc, #20]	; (80084b0 <osDelay+0x30>)
 800849c:	681b      	ldr	r3, [r3, #0]
 800849e:	2b02      	cmp	r3, #2
 80084a0:	d0f2      	beq.n	8008488 <osDelay+0x8>
    if (ticks != 0U) {
 80084a2:	2800      	cmp	r0, #0
 80084a4:	d0f2      	beq.n	800848c <osDelay+0xc>
      vTaskDelay(ticks);
 80084a6:	f001 fccd 	bl	8009e44 <vTaskDelay>
    stat = osOK;
 80084aa:	2000      	movs	r0, #0
 80084ac:	e7ee      	b.n	800848c <osDelay+0xc>
 80084ae:	bf00      	nop
 80084b0:	2000488c 	.word	0x2000488c

080084b4 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80084b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80084b6:	460e      	mov	r6, r1
 80084b8:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084ba:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80084be:	b11b      	cbz	r3, 80084c8 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80084c0:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80084c2:	4620      	mov	r0, r4
 80084c4:	b002      	add	sp, #8
 80084c6:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084c8:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80084cc:	b913      	cbnz	r3, 80084d4 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084ce:	f3ef 8311 	mrs	r3, BASEPRI
 80084d2:	b11b      	cbz	r3, 80084dc <osSemaphoreNew+0x28>
 80084d4:	4b21      	ldr	r3, [pc, #132]	; (800855c <osSemaphoreNew+0xa8>)
 80084d6:	681b      	ldr	r3, [r3, #0]
 80084d8:	2b02      	cmp	r3, #2
 80084da:	d0f1      	beq.n	80084c0 <osSemaphoreNew+0xc>
 80084dc:	2800      	cmp	r0, #0
 80084de:	d0ef      	beq.n	80084c0 <osSemaphoreNew+0xc>
 80084e0:	42b0      	cmp	r0, r6
 80084e2:	d3ed      	bcc.n	80084c0 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 80084e4:	b1ed      	cbz	r5, 8008522 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80084e6:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80084ea:	b1c3      	cbz	r3, 800851e <osSemaphoreNew+0x6a>
 80084ec:	2a4f      	cmp	r2, #79	; 0x4f
 80084ee:	d9e7      	bls.n	80084c0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80084f0:	2801      	cmp	r0, #1
 80084f2:	d129      	bne.n	8008548 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80084f4:	2203      	movs	r2, #3
 80084f6:	9200      	str	r2, [sp, #0]
 80084f8:	2200      	movs	r2, #0
 80084fa:	4611      	mov	r1, r2
 80084fc:	f000 fd2b 	bl	8008f56 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008500:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008502:	2800      	cmp	r0, #0
 8008504:	d0dc      	beq.n	80084c0 <osSemaphoreNew+0xc>
 8008506:	b1ce      	cbz	r6, 800853c <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008508:	2300      	movs	r3, #0
 800850a:	461a      	mov	r2, r3
 800850c:	4619      	mov	r1, r3
 800850e:	f000 fdd7 	bl	80090c0 <xQueueGenericSend>
 8008512:	2801      	cmp	r0, #1
 8008514:	d012      	beq.n	800853c <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8008516:	4620      	mov	r0, r4
 8008518:	f001 f912 	bl	8009740 <vQueueDelete>
 800851c:	e7d0      	b.n	80084c0 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800851e:	2a00      	cmp	r2, #0
 8008520:	d1ce      	bne.n	80084c0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008522:	2801      	cmp	r0, #1
 8008524:	d104      	bne.n	8008530 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8008526:	2203      	movs	r2, #3
 8008528:	2100      	movs	r1, #0
 800852a:	f000 fd62 	bl	8008ff2 <xQueueGenericCreate>
 800852e:	e7e7      	b.n	8008500 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008530:	4631      	mov	r1, r6
 8008532:	f000 fda7 	bl	8009084 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008536:	4604      	mov	r4, r0
 8008538:	2800      	cmp	r0, #0
 800853a:	d0c1      	beq.n	80084c0 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 800853c:	b95d      	cbnz	r5, 8008556 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800853e:	4629      	mov	r1, r5
 8008540:	4620      	mov	r0, r4
 8008542:	f001 f8d7 	bl	80096f4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008546:	e7bc      	b.n	80084c2 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008548:	461a      	mov	r2, r3
 800854a:	4631      	mov	r1, r6
 800854c:	f000 fd78 	bl	8009040 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008550:	4604      	mov	r4, r0
 8008552:	2800      	cmp	r0, #0
 8008554:	d0b4      	beq.n	80084c0 <osSemaphoreNew+0xc>
          name = attr->name;
 8008556:	682d      	ldr	r5, [r5, #0]
 8008558:	e7f1      	b.n	800853e <osSemaphoreNew+0x8a>
 800855a:	bf00      	nop
 800855c:	2000488c 	.word	0x2000488c

08008560 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008560:	b513      	push	{r0, r1, r4, lr}
 8008562:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008564:	b918      	cbnz	r0, 800856e <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8008566:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800856a:	b002      	add	sp, #8
 800856c:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800856e:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008572:	b163      	cbz	r3, 800858e <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8008574:	2c00      	cmp	r4, #0
 8008576:	d1f6      	bne.n	8008566 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008578:	aa01      	add	r2, sp, #4
 800857a:	4621      	mov	r1, r4
      yield = pdFALSE;
 800857c:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800857e:	f001 f869 	bl	8009654 <xQueueReceiveFromISR>
 8008582:	2801      	cmp	r0, #1
 8008584:	d113      	bne.n	80085ae <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8008586:	9b01      	ldr	r3, [sp, #4]
 8008588:	b9a3      	cbnz	r3, 80085b4 <osSemaphoreAcquire+0x54>
  stat = osOK;
 800858a:	2000      	movs	r0, #0
 800858c:	e7ed      	b.n	800856a <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800858e:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008592:	b913      	cbnz	r3, 800859a <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008594:	f3ef 8311 	mrs	r3, BASEPRI
 8008598:	b11b      	cbz	r3, 80085a2 <osSemaphoreAcquire+0x42>
 800859a:	4b0d      	ldr	r3, [pc, #52]	; (80085d0 <osSemaphoreAcquire+0x70>)
 800859c:	681b      	ldr	r3, [r3, #0]
 800859e:	2b02      	cmp	r3, #2
 80085a0:	d0e8      	beq.n	8008574 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80085a2:	4621      	mov	r1, r4
 80085a4:	f000 ff93 	bl	80094ce <xQueueSemaphoreTake>
 80085a8:	2801      	cmp	r0, #1
 80085aa:	d0ee      	beq.n	800858a <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 80085ac:	b96c      	cbnz	r4, 80085ca <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 80085ae:	f06f 0002 	mvn.w	r0, #2
 80085b2:	e7da      	b.n	800856a <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80085b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80085b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80085bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80085c0:	f3bf 8f4f 	dsb	sy
 80085c4:	f3bf 8f6f 	isb	sy
 80085c8:	e7df      	b.n	800858a <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 80085ca:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80085ce:	e7cc      	b.n	800856a <osSemaphoreAcquire+0xa>
 80085d0:	2000488c 	.word	0x2000488c

080085d4 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80085d4:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80085d6:	b370      	cbz	r0, 8008636 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085d8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80085dc:	b14b      	cbz	r3, 80085f2 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 80085de:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80085e0:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80085e2:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80085e4:	f000 fe80 	bl	80092e8 <xQueueGiveFromISR>
 80085e8:	2801      	cmp	r0, #1
 80085ea:	d014      	beq.n	8008616 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80085ec:	f06f 0002 	mvn.w	r0, #2
 80085f0:	e014      	b.n	800861c <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085f2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80085f6:	b913      	cbnz	r3, 80085fe <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085f8:	f3ef 8311 	mrs	r3, BASEPRI
 80085fc:	b11b      	cbz	r3, 8008606 <osSemaphoreRelease+0x32>
 80085fe:	4b0f      	ldr	r3, [pc, #60]	; (800863c <osSemaphoreRelease+0x68>)
 8008600:	681b      	ldr	r3, [r3, #0]
 8008602:	2b02      	cmp	r3, #2
 8008604:	d0eb      	beq.n	80085de <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008606:	2300      	movs	r3, #0
 8008608:	461a      	mov	r2, r3
 800860a:	4619      	mov	r1, r3
 800860c:	f000 fd58 	bl	80090c0 <xQueueGenericSend>
 8008610:	2801      	cmp	r0, #1
 8008612:	d002      	beq.n	800861a <osSemaphoreRelease+0x46>
 8008614:	e7ea      	b.n	80085ec <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008616:	9b01      	ldr	r3, [sp, #4]
 8008618:	b913      	cbnz	r3, 8008620 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800861a:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800861c:	b002      	add	sp, #8
 800861e:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008620:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008624:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008628:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800862c:	f3bf 8f4f 	dsb	sy
 8008630:	f3bf 8f6f 	isb	sy
 8008634:	e7f1      	b.n	800861a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8008636:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800863a:	e7ef      	b.n	800861c <osSemaphoreRelease+0x48>
 800863c:	2000488c 	.word	0x2000488c

08008640 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008640:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008642:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008644:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008648:	b11b      	cbz	r3, 8008652 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800864a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800864c:	4628      	mov	r0, r5
 800864e:	b002      	add	sp, #8
 8008650:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008652:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008656:	b913      	cbnz	r3, 800865e <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008658:	f3ef 8311 	mrs	r3, BASEPRI
 800865c:	b11b      	cbz	r3, 8008666 <osMessageQueueNew+0x26>
 800865e:	4b1a      	ldr	r3, [pc, #104]	; (80086c8 <osMessageQueueNew+0x88>)
 8008660:	681b      	ldr	r3, [r3, #0]
 8008662:	2b02      	cmp	r3, #2
 8008664:	d0f1      	beq.n	800864a <osMessageQueueNew+0xa>
 8008666:	2800      	cmp	r0, #0
 8008668:	d0ef      	beq.n	800864a <osMessageQueueNew+0xa>
 800866a:	2900      	cmp	r1, #0
 800866c:	d0ed      	beq.n	800864a <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800866e:	b1ec      	cbz	r4, 80086ac <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008670:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008674:	b193      	cbz	r3, 800869c <osMessageQueueNew+0x5c>
 8008676:	2a4f      	cmp	r2, #79	; 0x4f
 8008678:	d9e7      	bls.n	800864a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800867a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800867c:	2a00      	cmp	r2, #0
 800867e:	d0e4      	beq.n	800864a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008680:	6966      	ldr	r6, [r4, #20]
 8008682:	fb01 f500 	mul.w	r5, r1, r0
 8008686:	42ae      	cmp	r6, r5
 8008688:	d3df      	bcc.n	800864a <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800868a:	2500      	movs	r5, #0
 800868c:	9500      	str	r5, [sp, #0]
 800868e:	f000 fc62 	bl	8008f56 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008692:	4605      	mov	r5, r0
 8008694:	2800      	cmp	r0, #0
 8008696:	d0d8      	beq.n	800864a <osMessageQueueNew+0xa>
        name = attr->name;
 8008698:	6824      	ldr	r4, [r4, #0]
 800869a:	e00f      	b.n	80086bc <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800869c:	2a00      	cmp	r2, #0
 800869e:	d1d4      	bne.n	800864a <osMessageQueueNew+0xa>
 80086a0:	6923      	ldr	r3, [r4, #16]
 80086a2:	2b00      	cmp	r3, #0
 80086a4:	d1d1      	bne.n	800864a <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80086a6:	6963      	ldr	r3, [r4, #20]
 80086a8:	2b00      	cmp	r3, #0
 80086aa:	d1ce      	bne.n	800864a <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80086ac:	2200      	movs	r2, #0
 80086ae:	f000 fca0 	bl	8008ff2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80086b2:	4605      	mov	r5, r0
 80086b4:	2800      	cmp	r0, #0
 80086b6:	d0c8      	beq.n	800864a <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80086b8:	2c00      	cmp	r4, #0
 80086ba:	d1ed      	bne.n	8008698 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80086bc:	4621      	mov	r1, r4
 80086be:	4628      	mov	r0, r5
 80086c0:	f001 f818 	bl	80096f4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80086c4:	e7c2      	b.n	800864c <osMessageQueueNew+0xc>
 80086c6:	bf00      	nop
 80086c8:	2000488c 	.word	0x2000488c

080086cc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80086cc:	b513      	push	{r0, r1, r4, lr}
 80086ce:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086d0:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80086d4:	b123      	cbz	r3, 80086e0 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80086d6:	b9d8      	cbnz	r0, 8008710 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80086d8:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80086dc:	b002      	add	sp, #8
 80086de:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086e0:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80086e4:	b913      	cbnz	r3, 80086ec <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086e6:	f3ef 8311 	mrs	r3, BASEPRI
 80086ea:	b11b      	cbz	r3, 80086f4 <osMessageQueuePut+0x28>
 80086ec:	4b17      	ldr	r3, [pc, #92]	; (800874c <osMessageQueuePut+0x80>)
 80086ee:	681b      	ldr	r3, [r3, #0]
 80086f0:	2b02      	cmp	r3, #2
 80086f2:	d0f0      	beq.n	80086d6 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80086f4:	2800      	cmp	r0, #0
 80086f6:	d0ef      	beq.n	80086d8 <osMessageQueuePut+0xc>
 80086f8:	2900      	cmp	r1, #0
 80086fa:	d0ed      	beq.n	80086d8 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80086fc:	2300      	movs	r3, #0
 80086fe:	4622      	mov	r2, r4
 8008700:	f000 fcde 	bl	80090c0 <xQueueGenericSend>
 8008704:	2801      	cmp	r0, #1
 8008706:	d010      	beq.n	800872a <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008708:	b9e4      	cbnz	r4, 8008744 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800870a:	f06f 0002 	mvn.w	r0, #2
 800870e:	e7e5      	b.n	80086dc <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008710:	2900      	cmp	r1, #0
 8008712:	d0e1      	beq.n	80086d8 <osMessageQueuePut+0xc>
 8008714:	2c00      	cmp	r4, #0
 8008716:	d1df      	bne.n	80086d8 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008718:	4623      	mov	r3, r4
 800871a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800871c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800871e:	f000 fd82 	bl	8009226 <xQueueGenericSendFromISR>
 8008722:	2801      	cmp	r0, #1
 8008724:	d1f1      	bne.n	800870a <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008726:	9b01      	ldr	r3, [sp, #4]
 8008728:	b90b      	cbnz	r3, 800872e <osMessageQueuePut+0x62>
  stat = osOK;
 800872a:	2000      	movs	r0, #0
 800872c:	e7d6      	b.n	80086dc <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800872e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008732:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008736:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800873a:	f3bf 8f4f 	dsb	sy
 800873e:	f3bf 8f6f 	isb	sy
 8008742:	e7f2      	b.n	800872a <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008744:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008748:	e7c8      	b.n	80086dc <osMessageQueuePut+0x10>
 800874a:	bf00      	nop
 800874c:	2000488c 	.word	0x2000488c

08008750 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008750:	b513      	push	{r0, r1, r4, lr}
 8008752:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008754:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008758:	b123      	cbz	r3, 8008764 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800875a:	b9d0      	cbnz	r0, 8008792 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800875c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008760:	b002      	add	sp, #8
 8008762:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008764:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008768:	b913      	cbnz	r3, 8008770 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800876a:	f3ef 8311 	mrs	r3, BASEPRI
 800876e:	b11b      	cbz	r3, 8008778 <osMessageQueueGet+0x28>
 8008770:	4b16      	ldr	r3, [pc, #88]	; (80087cc <osMessageQueueGet+0x7c>)
 8008772:	681b      	ldr	r3, [r3, #0]
 8008774:	2b02      	cmp	r3, #2
 8008776:	d0f0      	beq.n	800875a <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008778:	2800      	cmp	r0, #0
 800877a:	d0ef      	beq.n	800875c <osMessageQueueGet+0xc>
 800877c:	2900      	cmp	r1, #0
 800877e:	d0ed      	beq.n	800875c <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008780:	4622      	mov	r2, r4
 8008782:	f000 fe05 	bl	8009390 <xQueueReceive>
 8008786:	2801      	cmp	r0, #1
 8008788:	d00f      	beq.n	80087aa <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 800878a:	b9dc      	cbnz	r4, 80087c4 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 800878c:	f06f 0002 	mvn.w	r0, #2
 8008790:	e7e6      	b.n	8008760 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008792:	2900      	cmp	r1, #0
 8008794:	d0e2      	beq.n	800875c <osMessageQueueGet+0xc>
 8008796:	2c00      	cmp	r4, #0
 8008798:	d1e0      	bne.n	800875c <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800879a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800879c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800879e:	f000 ff59 	bl	8009654 <xQueueReceiveFromISR>
 80087a2:	2801      	cmp	r0, #1
 80087a4:	d1f2      	bne.n	800878c <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80087a6:	9b01      	ldr	r3, [sp, #4]
 80087a8:	b90b      	cbnz	r3, 80087ae <osMessageQueueGet+0x5e>
  stat = osOK;
 80087aa:	2000      	movs	r0, #0
 80087ac:	e7d8      	b.n	8008760 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80087ae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80087b2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80087b6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80087ba:	f3bf 8f4f 	dsb	sy
 80087be:	f3bf 8f6f 	isb	sy
 80087c2:	e7f2      	b.n	80087aa <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 80087c4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80087c8:	e7ca      	b.n	8008760 <osMessageQueueGet+0x10>
 80087ca:	bf00      	nop
 80087cc:	2000488c 	.word	0x2000488c

080087d0 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80087d0:	4b03      	ldr	r3, [pc, #12]	; (80087e0 <vApplicationGetIdleTaskMemory+0x10>)
 80087d2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80087d4:	4b03      	ldr	r3, [pc, #12]	; (80087e4 <vApplicationGetIdleTaskMemory+0x14>)
 80087d6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80087d8:	2380      	movs	r3, #128	; 0x80
 80087da:	6013      	str	r3, [r2, #0]
}
 80087dc:	4770      	bx	lr
 80087de:	bf00      	nop
 80087e0:	200047cc 	.word	0x200047cc
 80087e4:	200045cc 	.word	0x200045cc

080087e8 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80087e8:	4b03      	ldr	r3, [pc, #12]	; (80087f8 <vApplicationGetTimerTaskMemory+0x10>)
 80087ea:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80087ec:	4b03      	ldr	r3, [pc, #12]	; (80087fc <vApplicationGetTimerTaskMemory+0x14>)
 80087ee:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80087f0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80087f4:	6013      	str	r3, [r2, #0]
}
 80087f6:	4770      	bx	lr
 80087f8:	20004c90 	.word	0x20004c90
 80087fc:	20004890 	.word	0x20004890

08008800 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008800:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008802:	4b0f      	ldr	r3, [pc, #60]	; (8008840 <prvInsertBlockIntoFreeList+0x40>)
 8008804:	461a      	mov	r2, r3
 8008806:	681b      	ldr	r3, [r3, #0]
 8008808:	4283      	cmp	r3, r0
 800880a:	d3fb      	bcc.n	8008804 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800880c:	6854      	ldr	r4, [r2, #4]
 800880e:	1911      	adds	r1, r2, r4
 8008810:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008812:	bf01      	itttt	eq
 8008814:	6841      	ldreq	r1, [r0, #4]
 8008816:	4610      	moveq	r0, r2
 8008818:	1909      	addeq	r1, r1, r4
 800881a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800881c:	6844      	ldr	r4, [r0, #4]
 800881e:	1901      	adds	r1, r0, r4
 8008820:	428b      	cmp	r3, r1
 8008822:	d107      	bne.n	8008834 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008824:	4907      	ldr	r1, [pc, #28]	; (8008844 <prvInsertBlockIntoFreeList+0x44>)
 8008826:	6809      	ldr	r1, [r1, #0]
 8008828:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800882a:	bf1f      	itttt	ne
 800882c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800882e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008830:	1909      	addne	r1, r1, r4
 8008832:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008834:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008836:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008838:	bf18      	it	ne
 800883a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800883c:	bd10      	pop	{r4, pc}
 800883e:	bf00      	nop
 8008840:	20014d60 	.word	0x20014d60
 8008844:	20004d50 	.word	0x20004d50

08008848 <pvPortMalloc>:
{
 8008848:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800884c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800884e:	f001 f9e1 	bl	8009c14 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008852:	4840      	ldr	r0, [pc, #256]	; (8008954 <pvPortMalloc+0x10c>)
 8008854:	4d40      	ldr	r5, [pc, #256]	; (8008958 <pvPortMalloc+0x110>)
 8008856:	6803      	ldr	r3, [r0, #0]
 8008858:	bb0b      	cbnz	r3, 800889e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800885a:	4940      	ldr	r1, [pc, #256]	; (800895c <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800885c:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800885e:	bf1f      	itttt	ne
 8008860:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008862:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008866:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 800886a:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800886c:	bf14      	ite	ne
 800886e:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008870:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008874:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008876:	4e3a      	ldr	r6, [pc, #232]	; (8008960 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8008878:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800887a:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800887e:	2300      	movs	r3, #0
 8008880:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008882:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008884:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008888:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800888a:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800888e:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008890:	4a34      	ldr	r2, [pc, #208]	; (8008964 <pvPortMalloc+0x11c>)
 8008892:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008894:	4a34      	ldr	r2, [pc, #208]	; (8008968 <pvPortMalloc+0x120>)
 8008896:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008898:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800889c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800889e:	682f      	ldr	r7, [r5, #0]
 80088a0:	4227      	tst	r7, r4
 80088a2:	d151      	bne.n	8008948 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 80088a4:	2c00      	cmp	r4, #0
 80088a6:	d042      	beq.n	800892e <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 80088a8:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80088ac:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80088ae:	bf1c      	itt	ne
 80088b0:	f023 0307 	bicne.w	r3, r3, #7
 80088b4:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80088b6:	2b00      	cmp	r3, #0
 80088b8:	d046      	beq.n	8008948 <pvPortMalloc+0x100>
 80088ba:	4c2b      	ldr	r4, [pc, #172]	; (8008968 <pvPortMalloc+0x120>)
 80088bc:	6826      	ldr	r6, [r4, #0]
 80088be:	429e      	cmp	r6, r3
 80088c0:	d342      	bcc.n	8008948 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 80088c2:	4a27      	ldr	r2, [pc, #156]	; (8008960 <pvPortMalloc+0x118>)
 80088c4:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80088c6:	6869      	ldr	r1, [r5, #4]
 80088c8:	4299      	cmp	r1, r3
 80088ca:	d204      	bcs.n	80088d6 <pvPortMalloc+0x8e>
 80088cc:	f8d5 c000 	ldr.w	ip, [r5]
 80088d0:	f1bc 0f00 	cmp.w	ip, #0
 80088d4:	d115      	bne.n	8008902 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80088d6:	6800      	ldr	r0, [r0, #0]
 80088d8:	42a8      	cmp	r0, r5
 80088da:	d035      	beq.n	8008948 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80088dc:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80088de:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80088e0:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80088e4:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80088e6:	2910      	cmp	r1, #16
 80088e8:	d912      	bls.n	8008910 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80088ea:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80088ec:	0742      	lsls	r2, r0, #29
 80088ee:	d00b      	beq.n	8008908 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80088f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088f4:	f383 8811 	msr	BASEPRI, r3
 80088f8:	f3bf 8f6f 	isb	sy
 80088fc:	f3bf 8f4f 	dsb	sy
 8008900:	e7fe      	b.n	8008900 <pvPortMalloc+0xb8>
 8008902:	462a      	mov	r2, r5
 8008904:	4665      	mov	r5, ip
 8008906:	e7de      	b.n	80088c6 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008908:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800890a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800890c:	f7ff ff78 	bl	8008800 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008910:	4914      	ldr	r1, [pc, #80]	; (8008964 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008912:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008914:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008916:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008918:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800891a:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 800891c:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008920:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008922:	bf38      	it	cc
 8008924:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008926:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800892a:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 800892c:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 800892e:	f001 fa15 	bl	8009d5c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008932:	0763      	lsls	r3, r4, #29
 8008934:	d00a      	beq.n	800894c <pvPortMalloc+0x104>
 8008936:	f04f 0350 	mov.w	r3, #80	; 0x50
 800893a:	f383 8811 	msr	BASEPRI, r3
 800893e:	f3bf 8f6f 	isb	sy
 8008942:	f3bf 8f4f 	dsb	sy
 8008946:	e7fe      	b.n	8008946 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008948:	2400      	movs	r4, #0
 800894a:	e7f0      	b.n	800892e <pvPortMalloc+0xe6>
}
 800894c:	4620      	mov	r0, r4
 800894e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008952:	bf00      	nop
 8008954:	20004d50 	.word	0x20004d50
 8008958:	20014d54 	.word	0x20014d54
 800895c:	20004d54 	.word	0x20004d54
 8008960:	20014d60 	.word	0x20014d60
 8008964:	20014d5c 	.word	0x20014d5c
 8008968:	20014d58 	.word	0x20014d58

0800896c <vPortFree>:
{
 800896c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800896e:	4604      	mov	r4, r0
 8008970:	b370      	cbz	r0, 80089d0 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008972:	4a18      	ldr	r2, [pc, #96]	; (80089d4 <vPortFree+0x68>)
 8008974:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008978:	6812      	ldr	r2, [r2, #0]
 800897a:	4213      	tst	r3, r2
 800897c:	d108      	bne.n	8008990 <vPortFree+0x24>
 800897e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008982:	f383 8811 	msr	BASEPRI, r3
 8008986:	f3bf 8f6f 	isb	sy
 800898a:	f3bf 8f4f 	dsb	sy
 800898e:	e7fe      	b.n	800898e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008990:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008994:	b141      	cbz	r1, 80089a8 <vPortFree+0x3c>
 8008996:	f04f 0350 	mov.w	r3, #80	; 0x50
 800899a:	f383 8811 	msr	BASEPRI, r3
 800899e:	f3bf 8f6f 	isb	sy
 80089a2:	f3bf 8f4f 	dsb	sy
 80089a6:	e7fe      	b.n	80089a6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80089a8:	ea23 0302 	bic.w	r3, r3, r2
 80089ac:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80089b0:	f001 f930 	bl	8009c14 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80089b4:	4a08      	ldr	r2, [pc, #32]	; (80089d8 <vPortFree+0x6c>)
 80089b6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80089ba:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80089bc:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80089c0:	440b      	add	r3, r1
 80089c2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80089c4:	f7ff ff1c 	bl	8008800 <prvInsertBlockIntoFreeList>
}
 80089c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 80089cc:	f001 b9c6 	b.w	8009d5c <xTaskResumeAll>
}
 80089d0:	bd10      	pop	{r4, pc}
 80089d2:	bf00      	nop
 80089d4:	20014d54 	.word	0x20014d54
 80089d8:	20014d58 	.word	0x20014d58

080089dc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80089dc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80089e0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80089e4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80089e8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80089ea:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80089ec:	2300      	movs	r3, #0
 80089ee:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80089f0:	4770      	bx	lr

080089f2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80089f2:	2300      	movs	r3, #0
 80089f4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80089f6:	4770      	bx	lr

080089f8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80089f8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80089fa:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80089fc:	689a      	ldr	r2, [r3, #8]
 80089fe:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008a00:	689a      	ldr	r2, [r3, #8]
 8008a02:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008a04:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008a06:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008a08:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008a0a:	3301      	adds	r3, #1
 8008a0c:	6003      	str	r3, [r0, #0]
}
 8008a0e:	4770      	bx	lr

08008a10 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008a10:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008a12:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008a14:	1c63      	adds	r3, r4, #1
 8008a16:	d10a      	bne.n	8008a2e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008a18:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008a1a:	685a      	ldr	r2, [r3, #4]
 8008a1c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008a1e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008a20:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008a22:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008a24:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008a26:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008a28:	3301      	adds	r3, #1
 8008a2a:	6003      	str	r3, [r0, #0]
}
 8008a2c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008a2e:	f100 0208 	add.w	r2, r0, #8
 8008a32:	4613      	mov	r3, r2
 8008a34:	6852      	ldr	r2, [r2, #4]
 8008a36:	6815      	ldr	r5, [r2, #0]
 8008a38:	42a5      	cmp	r5, r4
 8008a3a:	d9fa      	bls.n	8008a32 <vListInsert+0x22>
 8008a3c:	e7ed      	b.n	8008a1a <vListInsert+0xa>

08008a3e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008a3e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008a42:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008a44:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008a46:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008a48:	6859      	ldr	r1, [r3, #4]
 8008a4a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008a4c:	bf08      	it	eq
 8008a4e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008a50:	2200      	movs	r2, #0
 8008a52:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008a54:	681a      	ldr	r2, [r3, #0]
 8008a56:	3a01      	subs	r2, #1
 8008a58:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008a5a:	6818      	ldr	r0, [r3, #0]
}
 8008a5c:	4770      	bx	lr
	...

08008a60 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008a60:	4808      	ldr	r0, [pc, #32]	; (8008a84 <prvPortStartFirstTask+0x24>)
 8008a62:	6800      	ldr	r0, [r0, #0]
 8008a64:	6800      	ldr	r0, [r0, #0]
 8008a66:	f380 8808 	msr	MSP, r0
 8008a6a:	f04f 0000 	mov.w	r0, #0
 8008a6e:	f380 8814 	msr	CONTROL, r0
 8008a72:	b662      	cpsie	i
 8008a74:	b661      	cpsie	f
 8008a76:	f3bf 8f4f 	dsb	sy
 8008a7a:	f3bf 8f6f 	isb	sy
 8008a7e:	df00      	svc	0
 8008a80:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008a82:	0000      	.short	0x0000
 8008a84:	e000ed08 	.word	0xe000ed08

08008a88 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008a88:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008a98 <vPortEnableVFP+0x10>
 8008a8c:	6801      	ldr	r1, [r0, #0]
 8008a8e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008a92:	6001      	str	r1, [r0, #0]
 8008a94:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008a96:	0000      	.short	0x0000
 8008a98:	e000ed88 	.word	0xe000ed88

08008a9c <prvTaskExitError>:
{
 8008a9c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008a9e:	2300      	movs	r3, #0
 8008aa0:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008aa2:	4b0d      	ldr	r3, [pc, #52]	; (8008ad8 <prvTaskExitError+0x3c>)
 8008aa4:	681b      	ldr	r3, [r3, #0]
 8008aa6:	3301      	adds	r3, #1
 8008aa8:	d008      	beq.n	8008abc <prvTaskExitError+0x20>
 8008aaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008aae:	f383 8811 	msr	BASEPRI, r3
 8008ab2:	f3bf 8f6f 	isb	sy
 8008ab6:	f3bf 8f4f 	dsb	sy
 8008aba:	e7fe      	b.n	8008aba <prvTaskExitError+0x1e>
 8008abc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ac0:	f383 8811 	msr	BASEPRI, r3
 8008ac4:	f3bf 8f6f 	isb	sy
 8008ac8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008acc:	9b01      	ldr	r3, [sp, #4]
 8008ace:	2b00      	cmp	r3, #0
 8008ad0:	d0fc      	beq.n	8008acc <prvTaskExitError+0x30>
}
 8008ad2:	b002      	add	sp, #8
 8008ad4:	4770      	bx	lr
 8008ad6:	bf00      	nop
 8008ad8:	20000088 	.word	0x20000088

08008adc <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008adc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008ae0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008ae4:	4b07      	ldr	r3, [pc, #28]	; (8008b04 <pxPortInitialiseStack+0x28>)
 8008ae6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008aea:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008aee:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008af2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008af6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008afa:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008afe:	3844      	subs	r0, #68	; 0x44
 8008b00:	4770      	bx	lr
 8008b02:	bf00      	nop
 8008b04:	08008a9d 	.word	0x08008a9d
	...

08008b10 <SVC_Handler>:
	__asm volatile (
 8008b10:	4b07      	ldr	r3, [pc, #28]	; (8008b30 <pxCurrentTCBConst2>)
 8008b12:	6819      	ldr	r1, [r3, #0]
 8008b14:	6808      	ldr	r0, [r1, #0]
 8008b16:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b1a:	f380 8809 	msr	PSP, r0
 8008b1e:	f3bf 8f6f 	isb	sy
 8008b22:	f04f 0000 	mov.w	r0, #0
 8008b26:	f380 8811 	msr	BASEPRI, r0
 8008b2a:	4770      	bx	lr
 8008b2c:	f3af 8000 	nop.w

08008b30 <pxCurrentTCBConst2>:
 8008b30:	20014db0 	.word	0x20014db0

08008b34 <vPortEnterCritical>:
 8008b34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b38:	f383 8811 	msr	BASEPRI, r3
 8008b3c:	f3bf 8f6f 	isb	sy
 8008b40:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008b44:	4a0a      	ldr	r2, [pc, #40]	; (8008b70 <vPortEnterCritical+0x3c>)
 8008b46:	6813      	ldr	r3, [r2, #0]
 8008b48:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008b4a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008b4c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008b4e:	d10e      	bne.n	8008b6e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008b50:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b54:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008b58:	b2db      	uxtb	r3, r3
 8008b5a:	b143      	cbz	r3, 8008b6e <vPortEnterCritical+0x3a>
 8008b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b60:	f383 8811 	msr	BASEPRI, r3
 8008b64:	f3bf 8f6f 	isb	sy
 8008b68:	f3bf 8f4f 	dsb	sy
 8008b6c:	e7fe      	b.n	8008b6c <vPortEnterCritical+0x38>
}
 8008b6e:	4770      	bx	lr
 8008b70:	20000088 	.word	0x20000088

08008b74 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008b74:	4a08      	ldr	r2, [pc, #32]	; (8008b98 <vPortExitCritical+0x24>)
 8008b76:	6813      	ldr	r3, [r2, #0]
 8008b78:	b943      	cbnz	r3, 8008b8c <vPortExitCritical+0x18>
 8008b7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b7e:	f383 8811 	msr	BASEPRI, r3
 8008b82:	f3bf 8f6f 	isb	sy
 8008b86:	f3bf 8f4f 	dsb	sy
 8008b8a:	e7fe      	b.n	8008b8a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008b8c:	3b01      	subs	r3, #1
 8008b8e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008b90:	b90b      	cbnz	r3, 8008b96 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008b92:	f383 8811 	msr	BASEPRI, r3
}
 8008b96:	4770      	bx	lr
 8008b98:	20000088 	.word	0x20000088
 8008b9c:	00000000 	.word	0x00000000

08008ba0 <PendSV_Handler>:
	__asm volatile
 8008ba0:	f3ef 8009 	mrs	r0, PSP
 8008ba4:	f3bf 8f6f 	isb	sy
 8008ba8:	4b15      	ldr	r3, [pc, #84]	; (8008c00 <pxCurrentTCBConst>)
 8008baa:	681a      	ldr	r2, [r3, #0]
 8008bac:	f01e 0f10 	tst.w	lr, #16
 8008bb0:	bf08      	it	eq
 8008bb2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008bb6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bba:	6010      	str	r0, [r2, #0]
 8008bbc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008bc0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008bc4:	f380 8811 	msr	BASEPRI, r0
 8008bc8:	f3bf 8f4f 	dsb	sy
 8008bcc:	f3bf 8f6f 	isb	sy
 8008bd0:	f001 f95c 	bl	8009e8c <vTaskSwitchContext>
 8008bd4:	f04f 0000 	mov.w	r0, #0
 8008bd8:	f380 8811 	msr	BASEPRI, r0
 8008bdc:	bc09      	pop	{r0, r3}
 8008bde:	6819      	ldr	r1, [r3, #0]
 8008be0:	6808      	ldr	r0, [r1, #0]
 8008be2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008be6:	f01e 0f10 	tst.w	lr, #16
 8008bea:	bf08      	it	eq
 8008bec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008bf0:	f380 8809 	msr	PSP, r0
 8008bf4:	f3bf 8f6f 	isb	sy
 8008bf8:	4770      	bx	lr
 8008bfa:	bf00      	nop
 8008bfc:	f3af 8000 	nop.w

08008c00 <pxCurrentTCBConst>:
 8008c00:	20014db0 	.word	0x20014db0

08008c04 <SysTick_Handler>:
{
 8008c04:	b508      	push	{r3, lr}
	__asm volatile
 8008c06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c0a:	f383 8811 	msr	BASEPRI, r3
 8008c0e:	f3bf 8f6f 	isb	sy
 8008c12:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008c16:	f001 f80b 	bl	8009c30 <xTaskIncrementTick>
 8008c1a:	b128      	cbz	r0, 8008c28 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008c1c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c20:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008c24:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008c28:	2300      	movs	r3, #0
 8008c2a:	f383 8811 	msr	BASEPRI, r3
}
 8008c2e:	bd08      	pop	{r3, pc}

08008c30 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008c30:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008c34:	2300      	movs	r3, #0
 8008c36:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008c38:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008c3a:	4b05      	ldr	r3, [pc, #20]	; (8008c50 <vPortSetupTimerInterrupt+0x20>)
 8008c3c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008c40:	681b      	ldr	r3, [r3, #0]
 8008c42:	fbb3 f3f1 	udiv	r3, r3, r1
 8008c46:	3b01      	subs	r3, #1
 8008c48:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008c4a:	2307      	movs	r3, #7
 8008c4c:	6113      	str	r3, [r2, #16]
}
 8008c4e:	4770      	bx	lr
 8008c50:	2000007c 	.word	0x2000007c

08008c54 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008c54:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008c58:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008c5a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008c5e:	4a3a      	ldr	r2, [pc, #232]	; (8008d48 <xPortStartScheduler+0xf4>)
 8008c60:	4291      	cmp	r1, r2
 8008c62:	d108      	bne.n	8008c76 <xPortStartScheduler+0x22>
	__asm volatile
 8008c64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c68:	f383 8811 	msr	BASEPRI, r3
 8008c6c:	f3bf 8f6f 	isb	sy
 8008c70:	f3bf 8f4f 	dsb	sy
 8008c74:	e7fe      	b.n	8008c74 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008c76:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008c7a:	4b34      	ldr	r3, [pc, #208]	; (8008d4c <xPortStartScheduler+0xf8>)
 8008c7c:	429a      	cmp	r2, r3
 8008c7e:	d108      	bne.n	8008c92 <xPortStartScheduler+0x3e>
 8008c80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c84:	f383 8811 	msr	BASEPRI, r3
 8008c88:	f3bf 8f6f 	isb	sy
 8008c8c:	f3bf 8f4f 	dsb	sy
 8008c90:	e7fe      	b.n	8008c90 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008c92:	4b2f      	ldr	r3, [pc, #188]	; (8008d50 <xPortStartScheduler+0xfc>)
 8008c94:	781a      	ldrb	r2, [r3, #0]
 8008c96:	b2d2      	uxtb	r2, r2
 8008c98:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008c9a:	22ff      	movs	r2, #255	; 0xff
 8008c9c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008c9e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008ca0:	4a2c      	ldr	r2, [pc, #176]	; (8008d54 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008ca2:	b2db      	uxtb	r3, r3
 8008ca4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008ca8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008cac:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008cb0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008cb2:	4a29      	ldr	r2, [pc, #164]	; (8008d58 <xPortStartScheduler+0x104>)
 8008cb4:	2307      	movs	r3, #7
 8008cb6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008cb8:	2100      	movs	r1, #0
 8008cba:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008cbe:	0600      	lsls	r0, r0, #24
 8008cc0:	f103 34ff 	add.w	r4, r3, #4294967295
 8008cc4:	d40c      	bmi.n	8008ce0 <xPortStartScheduler+0x8c>
 8008cc6:	b111      	cbz	r1, 8008cce <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008cc8:	2b03      	cmp	r3, #3
 8008cca:	6013      	str	r3, [r2, #0]
 8008ccc:	d011      	beq.n	8008cf2 <xPortStartScheduler+0x9e>
 8008cce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cd2:	f383 8811 	msr	BASEPRI, r3
 8008cd6:	f3bf 8f6f 	isb	sy
 8008cda:	f3bf 8f4f 	dsb	sy
 8008cde:	e7fe      	b.n	8008cde <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008ce0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008ce4:	005b      	lsls	r3, r3, #1
 8008ce6:	b2db      	uxtb	r3, r3
 8008ce8:	f88d 3003 	strb.w	r3, [sp, #3]
 8008cec:	2101      	movs	r1, #1
 8008cee:	4623      	mov	r3, r4
 8008cf0:	e7e3      	b.n	8008cba <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008cf2:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008cf6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008cf8:	9b01      	ldr	r3, [sp, #4]
 8008cfa:	4a15      	ldr	r2, [pc, #84]	; (8008d50 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008cfc:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008d00:	b2db      	uxtb	r3, r3
 8008d02:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008d04:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008d08:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008d0c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008d10:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008d14:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008d18:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008d1c:	f7ff ff88 	bl	8008c30 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008d20:	4b0e      	ldr	r3, [pc, #56]	; (8008d5c <xPortStartScheduler+0x108>)
 8008d22:	2500      	movs	r5, #0
 8008d24:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008d26:	f7ff feaf 	bl	8008a88 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008d2a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008d2e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008d32:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008d36:	f7ff fe93 	bl	8008a60 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008d3a:	f001 f8a7 	bl	8009e8c <vTaskSwitchContext>
	prvTaskExitError();
 8008d3e:	f7ff fead 	bl	8008a9c <prvTaskExitError>
}
 8008d42:	4628      	mov	r0, r5
 8008d44:	b003      	add	sp, #12
 8008d46:	bd30      	pop	{r4, r5, pc}
 8008d48:	410fc271 	.word	0x410fc271
 8008d4c:	410fc270 	.word	0x410fc270
 8008d50:	e000e400 	.word	0xe000e400
 8008d54:	20014d68 	.word	0x20014d68
 8008d58:	20014d6c 	.word	0x20014d6c
 8008d5c:	20000088 	.word	0x20000088

08008d60 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008d60:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008d64:	2b0f      	cmp	r3, #15
 8008d66:	d90e      	bls.n	8008d86 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008d68:	4a11      	ldr	r2, [pc, #68]	; (8008db0 <vPortValidateInterruptPriority+0x50>)
 8008d6a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008d6c:	4a11      	ldr	r2, [pc, #68]	; (8008db4 <vPortValidateInterruptPriority+0x54>)
 8008d6e:	7812      	ldrb	r2, [r2, #0]
 8008d70:	429a      	cmp	r2, r3
 8008d72:	d908      	bls.n	8008d86 <vPortValidateInterruptPriority+0x26>
 8008d74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d78:	f383 8811 	msr	BASEPRI, r3
 8008d7c:	f3bf 8f6f 	isb	sy
 8008d80:	f3bf 8f4f 	dsb	sy
 8008d84:	e7fe      	b.n	8008d84 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008d86:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d8a:	4a0b      	ldr	r2, [pc, #44]	; (8008db8 <vPortValidateInterruptPriority+0x58>)
 8008d8c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008d90:	6812      	ldr	r2, [r2, #0]
 8008d92:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008d96:	4293      	cmp	r3, r2
 8008d98:	d908      	bls.n	8008dac <vPortValidateInterruptPriority+0x4c>
 8008d9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d9e:	f383 8811 	msr	BASEPRI, r3
 8008da2:	f3bf 8f6f 	isb	sy
 8008da6:	f3bf 8f4f 	dsb	sy
 8008daa:	e7fe      	b.n	8008daa <vPortValidateInterruptPriority+0x4a>
	}
 8008dac:	4770      	bx	lr
 8008dae:	bf00      	nop
 8008db0:	e000e3f0 	.word	0xe000e3f0
 8008db4:	20014d68 	.word	0x20014d68
 8008db8:	20014d6c 	.word	0x20014d6c

08008dbc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008dbc:	b510      	push	{r4, lr}
 8008dbe:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008dc0:	f7ff feb8 	bl	8008b34 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008dc4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008dc6:	f7ff fed5 	bl	8008b74 <vPortExitCritical>

	return xReturn;
}
 8008dca:	fab4 f084 	clz	r0, r4
 8008dce:	0940      	lsrs	r0, r0, #5
 8008dd0:	bd10      	pop	{r4, pc}

08008dd2 <prvCopyDataToQueue>:
{
 8008dd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008dd4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008dd6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008dd8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8008dda:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008ddc:	b952      	cbnz	r2, 8008df4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008dde:	6807      	ldr	r7, [r0, #0]
 8008de0:	bb47      	cbnz	r7, 8008e34 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008de2:	6880      	ldr	r0, [r0, #8]
 8008de4:	f001 f9ae 	bl	800a144 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008de8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008dea:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008dec:	3601      	adds	r6, #1
 8008dee:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008df0:	4628      	mov	r0, r5
 8008df2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008df4:	b965      	cbnz	r5, 8008e10 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008df6:	6840      	ldr	r0, [r0, #4]
 8008df8:	f017 fce0 	bl	80207bc <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008dfc:	6863      	ldr	r3, [r4, #4]
 8008dfe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008e00:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008e02:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008e04:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008e06:	4293      	cmp	r3, r2
 8008e08:	d3f0      	bcc.n	8008dec <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008e0a:	6823      	ldr	r3, [r4, #0]
 8008e0c:	6063      	str	r3, [r4, #4]
 8008e0e:	e7ed      	b.n	8008dec <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008e10:	68c0      	ldr	r0, [r0, #12]
 8008e12:	f017 fcd3 	bl	80207bc <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008e16:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008e18:	68e3      	ldr	r3, [r4, #12]
 8008e1a:	4251      	negs	r1, r2
 8008e1c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008e1e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008e20:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008e22:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008e24:	bf3e      	ittt	cc
 8008e26:	68a3      	ldrcc	r3, [r4, #8]
 8008e28:	185b      	addcc	r3, r3, r1
 8008e2a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008e2c:	2d02      	cmp	r5, #2
 8008e2e:	d101      	bne.n	8008e34 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008e30:	b116      	cbz	r6, 8008e38 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008e32:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008e34:	2500      	movs	r5, #0
 8008e36:	e7d9      	b.n	8008dec <prvCopyDataToQueue+0x1a>
 8008e38:	4635      	mov	r5, r6
 8008e3a:	e7d7      	b.n	8008dec <prvCopyDataToQueue+0x1a>

08008e3c <prvCopyDataFromQueue>:
{
 8008e3c:	4603      	mov	r3, r0
 8008e3e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008e40:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008e42:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008e44:	b16a      	cbz	r2, 8008e62 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008e46:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008e48:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008e4a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008e4c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008e4e:	bf28      	it	cs
 8008e50:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008e52:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008e54:	bf28      	it	cs
 8008e56:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008e58:	68d9      	ldr	r1, [r3, #12]
}
 8008e5a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008e5e:	f017 bcad 	b.w	80207bc <memcpy>
}
 8008e62:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008e66:	4770      	bx	lr

08008e68 <prvUnlockQueue>:
{
 8008e68:	b570      	push	{r4, r5, r6, lr}
 8008e6a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008e6c:	f7ff fe62 	bl	8008b34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008e70:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008e74:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008e78:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008e7a:	2d00      	cmp	r5, #0
 8008e7c:	dc14      	bgt.n	8008ea8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008e7e:	23ff      	movs	r3, #255	; 0xff
 8008e80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008e84:	f7ff fe76 	bl	8008b74 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008e88:	f7ff fe54 	bl	8008b34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008e8c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008e90:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008e94:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008e96:	2d00      	cmp	r5, #0
 8008e98:	dc12      	bgt.n	8008ec0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008e9a:	23ff      	movs	r3, #255	; 0xff
 8008e9c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008ea0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008ea4:	f7ff be66 	b.w	8008b74 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008ea8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008eaa:	2b00      	cmp	r3, #0
 8008eac:	d0e7      	beq.n	8008e7e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008eae:	4630      	mov	r0, r6
 8008eb0:	f001 f864 	bl	8009f7c <xTaskRemoveFromEventList>
 8008eb4:	b108      	cbz	r0, 8008eba <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008eb6:	f001 f8ed 	bl	800a094 <vTaskMissedYield>
			--cTxLock;
 8008eba:	3d01      	subs	r5, #1
 8008ebc:	b26d      	sxtb	r5, r5
 8008ebe:	e7dc      	b.n	8008e7a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008ec0:	6923      	ldr	r3, [r4, #16]
 8008ec2:	2b00      	cmp	r3, #0
 8008ec4:	d0e9      	beq.n	8008e9a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008ec6:	4630      	mov	r0, r6
 8008ec8:	f001 f858 	bl	8009f7c <xTaskRemoveFromEventList>
 8008ecc:	b108      	cbz	r0, 8008ed2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008ece:	f001 f8e1 	bl	800a094 <vTaskMissedYield>
				--cRxLock;
 8008ed2:	3d01      	subs	r5, #1
 8008ed4:	b26d      	sxtb	r5, r5
 8008ed6:	e7de      	b.n	8008e96 <prvUnlockQueue+0x2e>

08008ed8 <xQueueGenericReset>:
{
 8008ed8:	b538      	push	{r3, r4, r5, lr}
 8008eda:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008edc:	4604      	mov	r4, r0
 8008ede:	b940      	cbnz	r0, 8008ef2 <xQueueGenericReset+0x1a>
 8008ee0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ee4:	f383 8811 	msr	BASEPRI, r3
 8008ee8:	f3bf 8f6f 	isb	sy
 8008eec:	f3bf 8f4f 	dsb	sy
 8008ef0:	e7fe      	b.n	8008ef0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008ef2:	f7ff fe1f 	bl	8008b34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008ef6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8008efa:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008efc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008efe:	434b      	muls	r3, r1
 8008f00:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008f02:	1a5b      	subs	r3, r3, r1
 8008f04:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008f06:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008f08:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008f0a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8008f0c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008f0e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008f10:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008f14:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008f18:	b9a5      	cbnz	r5, 8008f44 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f1a:	6923      	ldr	r3, [r4, #16]
 8008f1c:	b173      	cbz	r3, 8008f3c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f1e:	f104 0010 	add.w	r0, r4, #16
 8008f22:	f001 f82b 	bl	8009f7c <xTaskRemoveFromEventList>
 8008f26:	b148      	cbz	r0, 8008f3c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008f28:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008f2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f30:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008f34:	f3bf 8f4f 	dsb	sy
 8008f38:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008f3c:	f7ff fe1a 	bl	8008b74 <vPortExitCritical>
}
 8008f40:	2001      	movs	r0, #1
 8008f42:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008f44:	f104 0010 	add.w	r0, r4, #16
 8008f48:	f7ff fd48 	bl	80089dc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008f4c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008f50:	f7ff fd44 	bl	80089dc <vListInitialise>
 8008f54:	e7f2      	b.n	8008f3c <xQueueGenericReset+0x64>

08008f56 <xQueueGenericCreateStatic>:
	{
 8008f56:	b513      	push	{r0, r1, r4, lr}
 8008f58:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008f5a:	b940      	cbnz	r0, 8008f6e <xQueueGenericCreateStatic+0x18>
 8008f5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f60:	f383 8811 	msr	BASEPRI, r3
 8008f64:	f3bf 8f6f 	isb	sy
 8008f68:	f3bf 8f4f 	dsb	sy
 8008f6c:	e7fe      	b.n	8008f6c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8008f6e:	b943      	cbnz	r3, 8008f82 <xQueueGenericCreateStatic+0x2c>
 8008f70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f74:	f383 8811 	msr	BASEPRI, r3
 8008f78:	f3bf 8f6f 	isb	sy
 8008f7c:	f3bf 8f4f 	dsb	sy
 8008f80:	e7fe      	b.n	8008f80 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008f82:	b14a      	cbz	r2, 8008f98 <xQueueGenericCreateStatic+0x42>
 8008f84:	b991      	cbnz	r1, 8008fac <xQueueGenericCreateStatic+0x56>
 8008f86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f8a:	f383 8811 	msr	BASEPRI, r3
 8008f8e:	f3bf 8f6f 	isb	sy
 8008f92:	f3bf 8f4f 	dsb	sy
 8008f96:	e7fe      	b.n	8008f96 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008f98:	b141      	cbz	r1, 8008fac <xQueueGenericCreateStatic+0x56>
 8008f9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f9e:	f383 8811 	msr	BASEPRI, r3
 8008fa2:	f3bf 8f6f 	isb	sy
 8008fa6:	f3bf 8f4f 	dsb	sy
 8008faa:	e7fe      	b.n	8008faa <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008fac:	2350      	movs	r3, #80	; 0x50
 8008fae:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008fb0:	9b01      	ldr	r3, [sp, #4]
 8008fb2:	2b50      	cmp	r3, #80	; 0x50
 8008fb4:	d008      	beq.n	8008fc8 <xQueueGenericCreateStatic+0x72>
 8008fb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fba:	f383 8811 	msr	BASEPRI, r3
 8008fbe:	f3bf 8f6f 	isb	sy
 8008fc2:	f3bf 8f4f 	dsb	sy
 8008fc6:	e7fe      	b.n	8008fc6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008fc8:	2900      	cmp	r1, #0
 8008fca:	bf08      	it	eq
 8008fcc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008fce:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008fd0:	6022      	str	r2, [r4, #0]
 8008fd2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008fd4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008fd8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008fdc:	4619      	mov	r1, r3
 8008fde:	4620      	mov	r0, r4
 8008fe0:	f7ff ff7a 	bl	8008ed8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008fe4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8008fe8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8008fec:	4620      	mov	r0, r4
 8008fee:	b002      	add	sp, #8
 8008ff0:	bd10      	pop	{r4, pc}

08008ff2 <xQueueGenericCreate>:
	{
 8008ff2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ff4:	460d      	mov	r5, r1
 8008ff6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008ff8:	4606      	mov	r6, r0
 8008ffa:	b940      	cbnz	r0, 800900e <xQueueGenericCreate+0x1c>
 8008ffc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009000:	f383 8811 	msr	BASEPRI, r3
 8009004:	f3bf 8f6f 	isb	sy
 8009008:	f3bf 8f4f 	dsb	sy
 800900c:	e7fe      	b.n	800900c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800900e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009010:	3050      	adds	r0, #80	; 0x50
 8009012:	f7ff fc19 	bl	8008848 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009016:	4604      	mov	r4, r0
 8009018:	b170      	cbz	r0, 8009038 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800901a:	2300      	movs	r3, #0
 800901c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009020:	b165      	cbz	r5, 800903c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009022:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009026:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800902a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800902c:	2101      	movs	r1, #1
 800902e:	4620      	mov	r0, r4
 8009030:	f7ff ff52 	bl	8008ed8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009034:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009038:	4620      	mov	r0, r4
 800903a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800903c:	4603      	mov	r3, r0
 800903e:	e7f2      	b.n	8009026 <xQueueGenericCreate+0x34>

08009040 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009040:	b513      	push	{r0, r1, r4, lr}
 8009042:	4613      	mov	r3, r2
 8009044:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009046:	b940      	cbnz	r0, 800905a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009048:	f04f 0350 	mov.w	r3, #80	; 0x50
 800904c:	f383 8811 	msr	BASEPRI, r3
 8009050:	f3bf 8f6f 	isb	sy
 8009054:	f3bf 8f4f 	dsb	sy
 8009058:	e7fe      	b.n	8009058 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800905a:	4288      	cmp	r0, r1
 800905c:	d208      	bcs.n	8009070 <xQueueCreateCountingSemaphoreStatic+0x30>
 800905e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009062:	f383 8811 	msr	BASEPRI, r3
 8009066:	f3bf 8f6f 	isb	sy
 800906a:	f3bf 8f4f 	dsb	sy
 800906e:	e7fe      	b.n	800906e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009070:	2202      	movs	r2, #2
 8009072:	9200      	str	r2, [sp, #0]
 8009074:	2200      	movs	r2, #0
 8009076:	4611      	mov	r1, r2
 8009078:	f7ff ff6d 	bl	8008f56 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800907c:	b100      	cbz	r0, 8009080 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800907e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8009080:	b002      	add	sp, #8
 8009082:	bd10      	pop	{r4, pc}

08009084 <xQueueCreateCountingSemaphore>:
	{
 8009084:	b510      	push	{r4, lr}
 8009086:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009088:	b940      	cbnz	r0, 800909c <xQueueCreateCountingSemaphore+0x18>
 800908a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800908e:	f383 8811 	msr	BASEPRI, r3
 8009092:	f3bf 8f6f 	isb	sy
 8009096:	f3bf 8f4f 	dsb	sy
 800909a:	e7fe      	b.n	800909a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800909c:	4288      	cmp	r0, r1
 800909e:	d208      	bcs.n	80090b2 <xQueueCreateCountingSemaphore+0x2e>
 80090a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090a4:	f383 8811 	msr	BASEPRI, r3
 80090a8:	f3bf 8f6f 	isb	sy
 80090ac:	f3bf 8f4f 	dsb	sy
 80090b0:	e7fe      	b.n	80090b0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80090b2:	2202      	movs	r2, #2
 80090b4:	2100      	movs	r1, #0
 80090b6:	f7ff ff9c 	bl	8008ff2 <xQueueGenericCreate>
		if( xHandle != NULL )
 80090ba:	b100      	cbz	r0, 80090be <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80090bc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80090be:	bd10      	pop	{r4, pc}

080090c0 <xQueueGenericSend>:
{
 80090c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80090c4:	b085      	sub	sp, #20
 80090c6:	4688      	mov	r8, r1
 80090c8:	9201      	str	r2, [sp, #4]
 80090ca:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80090cc:	4604      	mov	r4, r0
 80090ce:	b940      	cbnz	r0, 80090e2 <xQueueGenericSend+0x22>
 80090d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090d4:	f383 8811 	msr	BASEPRI, r3
 80090d8:	f3bf 8f6f 	isb	sy
 80090dc:	f3bf 8f4f 	dsb	sy
 80090e0:	e7fe      	b.n	80090e0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80090e2:	b951      	cbnz	r1, 80090fa <xQueueGenericSend+0x3a>
 80090e4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80090e6:	b143      	cbz	r3, 80090fa <xQueueGenericSend+0x3a>
 80090e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ec:	f383 8811 	msr	BASEPRI, r3
 80090f0:	f3bf 8f6f 	isb	sy
 80090f4:	f3bf 8f4f 	dsb	sy
 80090f8:	e7fe      	b.n	80090f8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80090fa:	2f02      	cmp	r7, #2
 80090fc:	d10b      	bne.n	8009116 <xQueueGenericSend+0x56>
 80090fe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009100:	2b01      	cmp	r3, #1
 8009102:	d008      	beq.n	8009116 <xQueueGenericSend+0x56>
 8009104:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009108:	f383 8811 	msr	BASEPRI, r3
 800910c:	f3bf 8f6f 	isb	sy
 8009110:	f3bf 8f4f 	dsb	sy
 8009114:	e7fe      	b.n	8009114 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009116:	f000 ffc3 	bl	800a0a0 <xTaskGetSchedulerState>
 800911a:	4606      	mov	r6, r0
 800911c:	b950      	cbnz	r0, 8009134 <xQueueGenericSend+0x74>
 800911e:	9b01      	ldr	r3, [sp, #4]
 8009120:	b14b      	cbz	r3, 8009136 <xQueueGenericSend+0x76>
 8009122:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009126:	f383 8811 	msr	BASEPRI, r3
 800912a:	f3bf 8f6f 	isb	sy
 800912e:	f3bf 8f4f 	dsb	sy
 8009132:	e7fe      	b.n	8009132 <xQueueGenericSend+0x72>
 8009134:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009136:	f04f 0900 	mov.w	r9, #0
 800913a:	e037      	b.n	80091ac <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800913c:	9d01      	ldr	r5, [sp, #4]
 800913e:	b91d      	cbnz	r5, 8009148 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009140:	f7ff fd18 	bl	8008b74 <vPortExitCritical>
			return errQUEUE_FULL;
 8009144:	2000      	movs	r0, #0
 8009146:	e052      	b.n	80091ee <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009148:	b916      	cbnz	r6, 8009150 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800914a:	a802      	add	r0, sp, #8
 800914c:	f000 ff5a 	bl	800a004 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009150:	f7ff fd10 	bl	8008b74 <vPortExitCritical>
		vTaskSuspendAll();
 8009154:	f000 fd5e 	bl	8009c14 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009158:	f7ff fcec 	bl	8008b34 <vPortEnterCritical>
 800915c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009160:	2bff      	cmp	r3, #255	; 0xff
 8009162:	bf08      	it	eq
 8009164:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009168:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800916c:	2bff      	cmp	r3, #255	; 0xff
 800916e:	bf08      	it	eq
 8009170:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8009174:	f7ff fcfe 	bl	8008b74 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009178:	a901      	add	r1, sp, #4
 800917a:	a802      	add	r0, sp, #8
 800917c:	f000 ff4e 	bl	800a01c <xTaskCheckForTimeOut>
 8009180:	2800      	cmp	r0, #0
 8009182:	d14a      	bne.n	800921a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009184:	f7ff fcd6 	bl	8008b34 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009188:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800918a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800918c:	429a      	cmp	r2, r3
 800918e:	d131      	bne.n	80091f4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009190:	f7ff fcf0 	bl	8008b74 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009194:	9901      	ldr	r1, [sp, #4]
 8009196:	f104 0010 	add.w	r0, r4, #16
 800919a:	f000 feb7 	bl	8009f0c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800919e:	4620      	mov	r0, r4
 80091a0:	f7ff fe62 	bl	8008e68 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80091a4:	f000 fdda 	bl	8009d5c <xTaskResumeAll>
 80091a8:	b360      	cbz	r0, 8009204 <xQueueGenericSend+0x144>
 80091aa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80091ac:	f7ff fcc2 	bl	8008b34 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80091b0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80091b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80091b4:	429a      	cmp	r2, r3
 80091b6:	d301      	bcc.n	80091bc <xQueueGenericSend+0xfc>
 80091b8:	2f02      	cmp	r7, #2
 80091ba:	d1bf      	bne.n	800913c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80091bc:	463a      	mov	r2, r7
 80091be:	4641      	mov	r1, r8
 80091c0:	4620      	mov	r0, r4
 80091c2:	f7ff fe06 	bl	8008dd2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80091c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80091c8:	b11b      	cbz	r3, 80091d2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80091ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80091ce:	f000 fed5 	bl	8009f7c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80091d2:	b148      	cbz	r0, 80091e8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 80091d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80091d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80091dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80091e0:	f3bf 8f4f 	dsb	sy
 80091e4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80091e8:	f7ff fcc4 	bl	8008b74 <vPortExitCritical>
				return pdPASS;
 80091ec:	2001      	movs	r0, #1
}
 80091ee:	b005      	add	sp, #20
 80091f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 80091f4:	f7ff fcbe 	bl	8008b74 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80091f8:	4620      	mov	r0, r4
 80091fa:	f7ff fe35 	bl	8008e68 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80091fe:	f000 fdad 	bl	8009d5c <xTaskResumeAll>
 8009202:	e7d2      	b.n	80091aa <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009204:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009208:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800920c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009210:	f3bf 8f4f 	dsb	sy
 8009214:	f3bf 8f6f 	isb	sy
 8009218:	e7c7      	b.n	80091aa <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800921a:	4620      	mov	r0, r4
 800921c:	f7ff fe24 	bl	8008e68 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009220:	f000 fd9c 	bl	8009d5c <xTaskResumeAll>
 8009224:	e78e      	b.n	8009144 <xQueueGenericSend+0x84>

08009226 <xQueueGenericSendFromISR>:
{
 8009226:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800922a:	4689      	mov	r9, r1
 800922c:	4690      	mov	r8, r2
 800922e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009230:	4604      	mov	r4, r0
 8009232:	b940      	cbnz	r0, 8009246 <xQueueGenericSendFromISR+0x20>
 8009234:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009238:	f383 8811 	msr	BASEPRI, r3
 800923c:	f3bf 8f6f 	isb	sy
 8009240:	f3bf 8f4f 	dsb	sy
 8009244:	e7fe      	b.n	8009244 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009246:	b951      	cbnz	r1, 800925e <xQueueGenericSendFromISR+0x38>
 8009248:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800924a:	b143      	cbz	r3, 800925e <xQueueGenericSendFromISR+0x38>
 800924c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009250:	f383 8811 	msr	BASEPRI, r3
 8009254:	f3bf 8f6f 	isb	sy
 8009258:	f3bf 8f4f 	dsb	sy
 800925c:	e7fe      	b.n	800925c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800925e:	2f02      	cmp	r7, #2
 8009260:	d10b      	bne.n	800927a <xQueueGenericSendFromISR+0x54>
 8009262:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009264:	2b01      	cmp	r3, #1
 8009266:	d008      	beq.n	800927a <xQueueGenericSendFromISR+0x54>
 8009268:	f04f 0350 	mov.w	r3, #80	; 0x50
 800926c:	f383 8811 	msr	BASEPRI, r3
 8009270:	f3bf 8f6f 	isb	sy
 8009274:	f3bf 8f4f 	dsb	sy
 8009278:	e7fe      	b.n	8009278 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800927a:	f7ff fd71 	bl	8008d60 <vPortValidateInterruptPriority>
	__asm volatile
 800927e:	f3ef 8611 	mrs	r6, BASEPRI
 8009282:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009286:	f383 8811 	msr	BASEPRI, r3
 800928a:	f3bf 8f6f 	isb	sy
 800928e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009292:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009294:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009296:	429a      	cmp	r2, r3
 8009298:	d301      	bcc.n	800929e <xQueueGenericSendFromISR+0x78>
 800929a:	2f02      	cmp	r7, #2
 800929c:	d122      	bne.n	80092e4 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800929e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80092a2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80092a4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80092a6:	4649      	mov	r1, r9
 80092a8:	4620      	mov	r0, r4
 80092aa:	f7ff fd92 	bl	8008dd2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80092ae:	1c6b      	adds	r3, r5, #1
 80092b0:	d113      	bne.n	80092da <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80092b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80092b4:	b90b      	cbnz	r3, 80092ba <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80092b6:	2001      	movs	r0, #1
 80092b8:	e00b      	b.n	80092d2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80092ba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80092be:	f000 fe5d 	bl	8009f7c <xTaskRemoveFromEventList>
 80092c2:	2800      	cmp	r0, #0
 80092c4:	d0f7      	beq.n	80092b6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80092c6:	f1b8 0f00 	cmp.w	r8, #0
 80092ca:	d0f4      	beq.n	80092b6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80092cc:	2001      	movs	r0, #1
 80092ce:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80092d2:	f386 8811 	msr	BASEPRI, r6
}
 80092d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80092da:	3501      	adds	r5, #1
 80092dc:	b26d      	sxtb	r5, r5
 80092de:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80092e2:	e7e8      	b.n	80092b6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 80092e4:	2000      	movs	r0, #0
 80092e6:	e7f4      	b.n	80092d2 <xQueueGenericSendFromISR+0xac>

080092e8 <xQueueGiveFromISR>:
{
 80092e8:	b570      	push	{r4, r5, r6, lr}
 80092ea:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80092ec:	4604      	mov	r4, r0
 80092ee:	b940      	cbnz	r0, 8009302 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80092f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092f4:	f383 8811 	msr	BASEPRI, r3
 80092f8:	f3bf 8f6f 	isb	sy
 80092fc:	f3bf 8f4f 	dsb	sy
 8009300:	e7fe      	b.n	8009300 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009302:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009304:	b143      	cbz	r3, 8009318 <xQueueGiveFromISR+0x30>
 8009306:	f04f 0350 	mov.w	r3, #80	; 0x50
 800930a:	f383 8811 	msr	BASEPRI, r3
 800930e:	f3bf 8f6f 	isb	sy
 8009312:	f3bf 8f4f 	dsb	sy
 8009316:	e7fe      	b.n	8009316 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009318:	6803      	ldr	r3, [r0, #0]
 800931a:	b953      	cbnz	r3, 8009332 <xQueueGiveFromISR+0x4a>
 800931c:	6883      	ldr	r3, [r0, #8]
 800931e:	b143      	cbz	r3, 8009332 <xQueueGiveFromISR+0x4a>
 8009320:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009324:	f383 8811 	msr	BASEPRI, r3
 8009328:	f3bf 8f6f 	isb	sy
 800932c:	f3bf 8f4f 	dsb	sy
 8009330:	e7fe      	b.n	8009330 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009332:	f7ff fd15 	bl	8008d60 <vPortValidateInterruptPriority>
	__asm volatile
 8009336:	f3ef 8611 	mrs	r6, BASEPRI
 800933a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800933e:	f383 8811 	msr	BASEPRI, r3
 8009342:	f3bf 8f6f 	isb	sy
 8009346:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800934a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800934c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800934e:	4293      	cmp	r3, r2
 8009350:	d91c      	bls.n	800938c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009352:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009356:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009358:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800935a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800935c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800935e:	d110      	bne.n	8009382 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009360:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009362:	b90b      	cbnz	r3, 8009368 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009364:	2001      	movs	r0, #1
 8009366:	e009      	b.n	800937c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009368:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800936c:	f000 fe06 	bl	8009f7c <xTaskRemoveFromEventList>
 8009370:	2800      	cmp	r0, #0
 8009372:	d0f7      	beq.n	8009364 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009374:	2d00      	cmp	r5, #0
 8009376:	d0f5      	beq.n	8009364 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009378:	2001      	movs	r0, #1
 800937a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800937c:	f386 8811 	msr	BASEPRI, r6
}
 8009380:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009382:	3301      	adds	r3, #1
 8009384:	b25b      	sxtb	r3, r3
 8009386:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800938a:	e7eb      	b.n	8009364 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800938c:	2000      	movs	r0, #0
 800938e:	e7f5      	b.n	800937c <xQueueGiveFromISR+0x94>

08009390 <xQueueReceive>:
{
 8009390:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009394:	460f      	mov	r7, r1
 8009396:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009398:	4604      	mov	r4, r0
 800939a:	b940      	cbnz	r0, 80093ae <xQueueReceive+0x1e>
	__asm volatile
 800939c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093a0:	f383 8811 	msr	BASEPRI, r3
 80093a4:	f3bf 8f6f 	isb	sy
 80093a8:	f3bf 8f4f 	dsb	sy
 80093ac:	e7fe      	b.n	80093ac <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80093ae:	b951      	cbnz	r1, 80093c6 <xQueueReceive+0x36>
 80093b0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80093b2:	b143      	cbz	r3, 80093c6 <xQueueReceive+0x36>
 80093b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093b8:	f383 8811 	msr	BASEPRI, r3
 80093bc:	f3bf 8f6f 	isb	sy
 80093c0:	f3bf 8f4f 	dsb	sy
 80093c4:	e7fe      	b.n	80093c4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80093c6:	f000 fe6b 	bl	800a0a0 <xTaskGetSchedulerState>
 80093ca:	4606      	mov	r6, r0
 80093cc:	b950      	cbnz	r0, 80093e4 <xQueueReceive+0x54>
 80093ce:	9b01      	ldr	r3, [sp, #4]
 80093d0:	b14b      	cbz	r3, 80093e6 <xQueueReceive+0x56>
 80093d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093d6:	f383 8811 	msr	BASEPRI, r3
 80093da:	f3bf 8f6f 	isb	sy
 80093de:	f3bf 8f4f 	dsb	sy
 80093e2:	e7fe      	b.n	80093e2 <xQueueReceive+0x52>
 80093e4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80093e6:	f04f 0800 	mov.w	r8, #0
 80093ea:	e03d      	b.n	8009468 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80093ec:	9d01      	ldr	r5, [sp, #4]
 80093ee:	b91d      	cbnz	r5, 80093f8 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 80093f0:	f7ff fbc0 	bl	8008b74 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80093f4:	2000      	movs	r0, #0
 80093f6:	e056      	b.n	80094a6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 80093f8:	b916      	cbnz	r6, 8009400 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80093fa:	a802      	add	r0, sp, #8
 80093fc:	f000 fe02 	bl	800a004 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009400:	f7ff fbb8 	bl	8008b74 <vPortExitCritical>
		vTaskSuspendAll();
 8009404:	f000 fc06 	bl	8009c14 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009408:	f7ff fb94 	bl	8008b34 <vPortEnterCritical>
 800940c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009410:	2bff      	cmp	r3, #255	; 0xff
 8009412:	bf08      	it	eq
 8009414:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009418:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800941c:	2bff      	cmp	r3, #255	; 0xff
 800941e:	bf08      	it	eq
 8009420:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009424:	f7ff fba6 	bl	8008b74 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009428:	a901      	add	r1, sp, #4
 800942a:	a802      	add	r0, sp, #8
 800942c:	f000 fdf6 	bl	800a01c <xTaskCheckForTimeOut>
 8009430:	2800      	cmp	r0, #0
 8009432:	d141      	bne.n	80094b8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009434:	4620      	mov	r0, r4
 8009436:	f7ff fcc1 	bl	8008dbc <prvIsQueueEmpty>
 800943a:	b3b8      	cbz	r0, 80094ac <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800943c:	9901      	ldr	r1, [sp, #4]
 800943e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009442:	f000 fd63 	bl	8009f0c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009446:	4620      	mov	r0, r4
 8009448:	f7ff fd0e 	bl	8008e68 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800944c:	f000 fc86 	bl	8009d5c <xTaskResumeAll>
 8009450:	b948      	cbnz	r0, 8009466 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009452:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009456:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800945a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800945e:	f3bf 8f4f 	dsb	sy
 8009462:	f3bf 8f6f 	isb	sy
 8009466:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009468:	f7ff fb64 	bl	8008b34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800946c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800946e:	2d00      	cmp	r5, #0
 8009470:	d0bc      	beq.n	80093ec <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009472:	4639      	mov	r1, r7
 8009474:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009476:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009478:	f7ff fce0 	bl	8008e3c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800947c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800947e:	6923      	ldr	r3, [r4, #16]
 8009480:	b173      	cbz	r3, 80094a0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009482:	f104 0010 	add.w	r0, r4, #16
 8009486:	f000 fd79 	bl	8009f7c <xTaskRemoveFromEventList>
 800948a:	b148      	cbz	r0, 80094a0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800948c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009490:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009494:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009498:	f3bf 8f4f 	dsb	sy
 800949c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80094a0:	f7ff fb68 	bl	8008b74 <vPortExitCritical>
				return pdPASS;
 80094a4:	2001      	movs	r0, #1
}
 80094a6:	b004      	add	sp, #16
 80094a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80094ac:	4620      	mov	r0, r4
 80094ae:	f7ff fcdb 	bl	8008e68 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80094b2:	f000 fc53 	bl	8009d5c <xTaskResumeAll>
 80094b6:	e7d6      	b.n	8009466 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80094b8:	4620      	mov	r0, r4
 80094ba:	f7ff fcd5 	bl	8008e68 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80094be:	f000 fc4d 	bl	8009d5c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80094c2:	4620      	mov	r0, r4
 80094c4:	f7ff fc7a 	bl	8008dbc <prvIsQueueEmpty>
 80094c8:	2800      	cmp	r0, #0
 80094ca:	d0cc      	beq.n	8009466 <xQueueReceive+0xd6>
 80094cc:	e792      	b.n	80093f4 <xQueueReceive+0x64>

080094ce <xQueueSemaphoreTake>:
{
 80094ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 80094d0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80094d2:	4604      	mov	r4, r0
{
 80094d4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80094d6:	b940      	cbnz	r0, 80094ea <xQueueSemaphoreTake+0x1c>
 80094d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094dc:	f383 8811 	msr	BASEPRI, r3
 80094e0:	f3bf 8f6f 	isb	sy
 80094e4:	f3bf 8f4f 	dsb	sy
 80094e8:	e7fe      	b.n	80094e8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80094ea:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80094ec:	b145      	cbz	r5, 8009500 <xQueueSemaphoreTake+0x32>
 80094ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094f2:	f383 8811 	msr	BASEPRI, r3
 80094f6:	f3bf 8f6f 	isb	sy
 80094fa:	f3bf 8f4f 	dsb	sy
 80094fe:	e7fe      	b.n	80094fe <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009500:	f000 fdce 	bl	800a0a0 <xTaskGetSchedulerState>
 8009504:	4606      	mov	r6, r0
 8009506:	b950      	cbnz	r0, 800951e <xQueueSemaphoreTake+0x50>
 8009508:	9b01      	ldr	r3, [sp, #4]
 800950a:	b15b      	cbz	r3, 8009524 <xQueueSemaphoreTake+0x56>
 800950c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009510:	f383 8811 	msr	BASEPRI, r3
 8009514:	f3bf 8f6f 	isb	sy
 8009518:	f3bf 8f4f 	dsb	sy
 800951c:	e7fe      	b.n	800951c <xQueueSemaphoreTake+0x4e>
 800951e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009520:	2700      	movs	r7, #0
 8009522:	e053      	b.n	80095cc <xQueueSemaphoreTake+0xfe>
 8009524:	4605      	mov	r5, r0
 8009526:	e7fb      	b.n	8009520 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009528:	9b01      	ldr	r3, [sp, #4]
 800952a:	b963      	cbnz	r3, 8009546 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800952c:	b145      	cbz	r5, 8009540 <xQueueSemaphoreTake+0x72>
 800952e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009532:	f383 8811 	msr	BASEPRI, r3
 8009536:	f3bf 8f6f 	isb	sy
 800953a:	f3bf 8f4f 	dsb	sy
 800953e:	e7fe      	b.n	800953e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009540:	f7ff fb18 	bl	8008b74 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009544:	e062      	b.n	800960c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009546:	b916      	cbnz	r6, 800954e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009548:	a802      	add	r0, sp, #8
 800954a:	f000 fd5b 	bl	800a004 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800954e:	f7ff fb11 	bl	8008b74 <vPortExitCritical>
		vTaskSuspendAll();
 8009552:	f000 fb5f 	bl	8009c14 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009556:	f7ff faed 	bl	8008b34 <vPortEnterCritical>
 800955a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800955e:	2bff      	cmp	r3, #255	; 0xff
 8009560:	bf08      	it	eq
 8009562:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009566:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800956a:	2bff      	cmp	r3, #255	; 0xff
 800956c:	bf08      	it	eq
 800956e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009572:	f7ff faff 	bl	8008b74 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009576:	a901      	add	r1, sp, #4
 8009578:	a802      	add	r0, sp, #8
 800957a:	f000 fd4f 	bl	800a01c <xTaskCheckForTimeOut>
 800957e:	2800      	cmp	r0, #0
 8009580:	d14d      	bne.n	800961e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009582:	4620      	mov	r0, r4
 8009584:	f7ff fc1a 	bl	8008dbc <prvIsQueueEmpty>
 8009588:	2800      	cmp	r0, #0
 800958a:	d042      	beq.n	8009612 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800958c:	6823      	ldr	r3, [r4, #0]
 800958e:	b93b      	cbnz	r3, 80095a0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8009590:	f7ff fad0 	bl	8008b34 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009594:	68a0      	ldr	r0, [r4, #8]
 8009596:	f000 fd93 	bl	800a0c0 <xTaskPriorityInherit>
 800959a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800959c:	f7ff faea 	bl	8008b74 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80095a0:	9901      	ldr	r1, [sp, #4]
 80095a2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80095a6:	f000 fcb1 	bl	8009f0c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80095aa:	4620      	mov	r0, r4
 80095ac:	f7ff fc5c 	bl	8008e68 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80095b0:	f000 fbd4 	bl	8009d5c <xTaskResumeAll>
 80095b4:	b948      	cbnz	r0, 80095ca <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80095b6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095ba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095be:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095c2:	f3bf 8f4f 	dsb	sy
 80095c6:	f3bf 8f6f 	isb	sy
 80095ca:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80095cc:	f7ff fab2 	bl	8008b34 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80095d0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80095d2:	2b00      	cmp	r3, #0
 80095d4:	d0a8      	beq.n	8009528 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80095d6:	3b01      	subs	r3, #1
 80095d8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80095da:	6823      	ldr	r3, [r4, #0]
 80095dc:	b913      	cbnz	r3, 80095e4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80095de:	f000 fe47 	bl	800a270 <pvTaskIncrementMutexHeldCount>
 80095e2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80095e4:	6923      	ldr	r3, [r4, #16]
 80095e6:	b173      	cbz	r3, 8009606 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095e8:	f104 0010 	add.w	r0, r4, #16
 80095ec:	f000 fcc6 	bl	8009f7c <xTaskRemoveFromEventList>
 80095f0:	b148      	cbz	r0, 8009606 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 80095f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095fe:	f3bf 8f4f 	dsb	sy
 8009602:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009606:	f7ff fab5 	bl	8008b74 <vPortExitCritical>
				return pdPASS;
 800960a:	2501      	movs	r5, #1
}
 800960c:	4628      	mov	r0, r5
 800960e:	b005      	add	sp, #20
 8009610:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009612:	4620      	mov	r0, r4
 8009614:	f7ff fc28 	bl	8008e68 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009618:	f000 fba0 	bl	8009d5c <xTaskResumeAll>
 800961c:	e7d5      	b.n	80095ca <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800961e:	4620      	mov	r0, r4
 8009620:	f7ff fc22 	bl	8008e68 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009624:	f000 fb9a 	bl	8009d5c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009628:	4620      	mov	r0, r4
 800962a:	f7ff fbc7 	bl	8008dbc <prvIsQueueEmpty>
 800962e:	2800      	cmp	r0, #0
 8009630:	d0cb      	beq.n	80095ca <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009632:	2d00      	cmp	r5, #0
 8009634:	d0ea      	beq.n	800960c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009636:	f7ff fa7d 	bl	8008b34 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800963a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800963c:	b119      	cbz	r1, 8009646 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800963e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009640:	6819      	ldr	r1, [r3, #0]
 8009642:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009646:	68a0      	ldr	r0, [r4, #8]
 8009648:	f000 fdc0 	bl	800a1cc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800964c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800964e:	f7ff fa91 	bl	8008b74 <vPortExitCritical>
 8009652:	e7db      	b.n	800960c <xQueueSemaphoreTake+0x13e>

08009654 <xQueueReceiveFromISR>:
{
 8009654:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009658:	4689      	mov	r9, r1
 800965a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800965c:	4605      	mov	r5, r0
 800965e:	b940      	cbnz	r0, 8009672 <xQueueReceiveFromISR+0x1e>
 8009660:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009664:	f383 8811 	msr	BASEPRI, r3
 8009668:	f3bf 8f6f 	isb	sy
 800966c:	f3bf 8f4f 	dsb	sy
 8009670:	e7fe      	b.n	8009670 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009672:	b951      	cbnz	r1, 800968a <xQueueReceiveFromISR+0x36>
 8009674:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009676:	b143      	cbz	r3, 800968a <xQueueReceiveFromISR+0x36>
 8009678:	f04f 0350 	mov.w	r3, #80	; 0x50
 800967c:	f383 8811 	msr	BASEPRI, r3
 8009680:	f3bf 8f6f 	isb	sy
 8009684:	f3bf 8f4f 	dsb	sy
 8009688:	e7fe      	b.n	8009688 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800968a:	f7ff fb69 	bl	8008d60 <vPortValidateInterruptPriority>
	__asm volatile
 800968e:	f3ef 8711 	mrs	r7, BASEPRI
 8009692:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009696:	f383 8811 	msr	BASEPRI, r3
 800969a:	f3bf 8f6f 	isb	sy
 800969e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80096a2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80096a4:	b31c      	cbz	r4, 80096ee <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80096a6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096aa:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80096ac:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096ae:	4628      	mov	r0, r5
 80096b0:	f7ff fbc4 	bl	8008e3c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096b4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80096b6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096b8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80096ba:	d113      	bne.n	80096e4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096bc:	692b      	ldr	r3, [r5, #16]
 80096be:	b90b      	cbnz	r3, 80096c4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80096c0:	2001      	movs	r0, #1
 80096c2:	e00b      	b.n	80096dc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096c4:	f105 0010 	add.w	r0, r5, #16
 80096c8:	f000 fc58 	bl	8009f7c <xTaskRemoveFromEventList>
 80096cc:	2800      	cmp	r0, #0
 80096ce:	d0f7      	beq.n	80096c0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80096d0:	f1b8 0f00 	cmp.w	r8, #0
 80096d4:	d0f4      	beq.n	80096c0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80096d6:	2001      	movs	r0, #1
 80096d8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80096dc:	f387 8811 	msr	BASEPRI, r7
}
 80096e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80096e4:	3601      	adds	r6, #1
 80096e6:	b276      	sxtb	r6, r6
 80096e8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80096ec:	e7e8      	b.n	80096c0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80096ee:	4620      	mov	r0, r4
 80096f0:	e7f4      	b.n	80096dc <xQueueReceiveFromISR+0x88>
	...

080096f4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80096f4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80096f6:	4a07      	ldr	r2, [pc, #28]	; (8009714 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80096f8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80096fa:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80096fe:	b92c      	cbnz	r4, 800970c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009700:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009704:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009708:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800970a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800970c:	3301      	adds	r3, #1
 800970e:	2b08      	cmp	r3, #8
 8009710:	d1f3      	bne.n	80096fa <vQueueAddToRegistry+0x6>
 8009712:	e7fa      	b.n	800970a <vQueueAddToRegistry+0x16>
 8009714:	20014d70 	.word	0x20014d70

08009718 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009718:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800971a:	4a08      	ldr	r2, [pc, #32]	; (800973c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800971c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800971e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009722:	684c      	ldr	r4, [r1, #4]
 8009724:	4284      	cmp	r4, r0
 8009726:	d104      	bne.n	8009732 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009728:	2000      	movs	r0, #0
 800972a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800972e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009730:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009732:	3301      	adds	r3, #1
 8009734:	2b08      	cmp	r3, #8
 8009736:	d1f2      	bne.n	800971e <vQueueUnregisterQueue+0x6>
 8009738:	e7fa      	b.n	8009730 <vQueueUnregisterQueue+0x18>
 800973a:	bf00      	nop
 800973c:	20014d70 	.word	0x20014d70

08009740 <vQueueDelete>:
{
 8009740:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009742:	4604      	mov	r4, r0
 8009744:	b940      	cbnz	r0, 8009758 <vQueueDelete+0x18>
	__asm volatile
 8009746:	f04f 0350 	mov.w	r3, #80	; 0x50
 800974a:	f383 8811 	msr	BASEPRI, r3
 800974e:	f3bf 8f6f 	isb	sy
 8009752:	f3bf 8f4f 	dsb	sy
 8009756:	e7fe      	b.n	8009756 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009758:	f7ff ffde 	bl	8009718 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800975c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009760:	b923      	cbnz	r3, 800976c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009762:	4620      	mov	r0, r4
}
 8009764:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009768:	f7ff b900 	b.w	800896c <vPortFree>
}
 800976c:	bd10      	pop	{r4, pc}

0800976e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800976e:	b570      	push	{r4, r5, r6, lr}
 8009770:	4604      	mov	r4, r0
 8009772:	460d      	mov	r5, r1
 8009774:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009776:	f7ff f9dd 	bl	8008b34 <vPortEnterCritical>
 800977a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800977e:	2bff      	cmp	r3, #255	; 0xff
 8009780:	bf04      	itt	eq
 8009782:	2300      	moveq	r3, #0
 8009784:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009788:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800978c:	2bff      	cmp	r3, #255	; 0xff
 800978e:	bf04      	itt	eq
 8009790:	2300      	moveq	r3, #0
 8009792:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009796:	f7ff f9ed 	bl	8008b74 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800979a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800979c:	b92b      	cbnz	r3, 80097aa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800979e:	4632      	mov	r2, r6
 80097a0:	4629      	mov	r1, r5
 80097a2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80097a6:	f000 fbcb 	bl	8009f40 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80097aa:	4620      	mov	r0, r4
	}
 80097ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80097b0:	f7ff bb5a 	b.w	8008e68 <prvUnlockQueue>

080097b4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80097b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80097b8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80097ba:	f7ff f9bb 	bl	8008b34 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80097be:	4b30      	ldr	r3, [pc, #192]	; (8009880 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80097c0:	4e30      	ldr	r6, [pc, #192]	; (8009884 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80097c2:	681a      	ldr	r2, [r3, #0]
 80097c4:	4f30      	ldr	r7, [pc, #192]	; (8009888 <prvAddNewTaskToReadyList+0xd4>)
 80097c6:	3201      	adds	r2, #1
 80097c8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80097ca:	6835      	ldr	r5, [r6, #0]
 80097cc:	2d00      	cmp	r5, #0
 80097ce:	d14b      	bne.n	8009868 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80097d0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80097d2:	681b      	ldr	r3, [r3, #0]
 80097d4:	2b01      	cmp	r3, #1
 80097d6:	d11f      	bne.n	8009818 <prvAddNewTaskToReadyList+0x64>
 80097d8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80097da:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80097dc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80097de:	f7ff f8fd 	bl	80089dc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80097e2:	2d38      	cmp	r5, #56	; 0x38
 80097e4:	f108 0814 	add.w	r8, r8, #20
 80097e8:	d1f7      	bne.n	80097da <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80097ea:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80098b0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80097ee:	4d27      	ldr	r5, [pc, #156]	; (800988c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80097f0:	4640      	mov	r0, r8
 80097f2:	f7ff f8f3 	bl	80089dc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80097f6:	4628      	mov	r0, r5
 80097f8:	f7ff f8f0 	bl	80089dc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80097fc:	4824      	ldr	r0, [pc, #144]	; (8009890 <prvAddNewTaskToReadyList+0xdc>)
 80097fe:	f7ff f8ed 	bl	80089dc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009802:	4824      	ldr	r0, [pc, #144]	; (8009894 <prvAddNewTaskToReadyList+0xe0>)
 8009804:	f7ff f8ea 	bl	80089dc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009808:	4823      	ldr	r0, [pc, #140]	; (8009898 <prvAddNewTaskToReadyList+0xe4>)
 800980a:	f7ff f8e7 	bl	80089dc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800980e:	4b23      	ldr	r3, [pc, #140]	; (800989c <prvAddNewTaskToReadyList+0xe8>)
 8009810:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009814:	4b22      	ldr	r3, [pc, #136]	; (80098a0 <prvAddNewTaskToReadyList+0xec>)
 8009816:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009818:	4a22      	ldr	r2, [pc, #136]	; (80098a4 <prvAddNewTaskToReadyList+0xf0>)
 800981a:	6813      	ldr	r3, [r2, #0]
 800981c:	3301      	adds	r3, #1
 800981e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009820:	4a21      	ldr	r2, [pc, #132]	; (80098a8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009822:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009824:	6811      	ldr	r1, [r2, #0]
 8009826:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009828:	2014      	movs	r0, #20
 800982a:	428b      	cmp	r3, r1
 800982c:	fb00 7003 	mla	r0, r0, r3, r7
 8009830:	f104 0104 	add.w	r1, r4, #4
 8009834:	bf88      	it	hi
 8009836:	6013      	strhi	r3, [r2, #0]
 8009838:	f7ff f8de 	bl	80089f8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800983c:	f7ff f99a 	bl	8008b74 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009840:	4b1a      	ldr	r3, [pc, #104]	; (80098ac <prvAddNewTaskToReadyList+0xf8>)
 8009842:	681b      	ldr	r3, [r3, #0]
 8009844:	b173      	cbz	r3, 8009864 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009846:	6833      	ldr	r3, [r6, #0]
 8009848:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800984a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800984c:	429a      	cmp	r2, r3
 800984e:	d209      	bcs.n	8009864 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009850:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009854:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009858:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800985c:	f3bf 8f4f 	dsb	sy
 8009860:	f3bf 8f6f 	isb	sy
}
 8009864:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009868:	4b10      	ldr	r3, [pc, #64]	; (80098ac <prvAddNewTaskToReadyList+0xf8>)
 800986a:	681b      	ldr	r3, [r3, #0]
 800986c:	2b00      	cmp	r3, #0
 800986e:	d1d3      	bne.n	8009818 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009870:	6833      	ldr	r3, [r6, #0]
 8009872:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009874:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009876:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009878:	bf98      	it	ls
 800987a:	6034      	strls	r4, [r6, #0]
 800987c:	e7cc      	b.n	8009818 <prvAddNewTaskToReadyList+0x64>
 800987e:	bf00      	nop
 8009880:	2001521c 	.word	0x2001521c
 8009884:	20014db0 	.word	0x20014db0
 8009888:	20014dbc 	.word	0x20014dbc
 800988c:	20015248 	.word	0x20015248
 8009890:	20015264 	.word	0x20015264
 8009894:	20015290 	.word	0x20015290
 8009898:	2001527c 	.word	0x2001527c
 800989c:	20014db4 	.word	0x20014db4
 80098a0:	20014db8 	.word	0x20014db8
 80098a4:	2001522c 	.word	0x2001522c
 80098a8:	20015230 	.word	0x20015230
 80098ac:	20015278 	.word	0x20015278
 80098b0:	20015234 	.word	0x20015234

080098b4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80098b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80098b6:	4b15      	ldr	r3, [pc, #84]	; (800990c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80098b8:	4e15      	ldr	r6, [pc, #84]	; (8009910 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80098ba:	681d      	ldr	r5, [r3, #0]
{
 80098bc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80098be:	6830      	ldr	r0, [r6, #0]
 80098c0:	3004      	adds	r0, #4
{
 80098c2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80098c4:	f7ff f8bb 	bl	8008a3e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80098c8:	1c63      	adds	r3, r4, #1
 80098ca:	d107      	bne.n	80098dc <prvAddCurrentTaskToDelayedList+0x28>
 80098cc:	b137      	cbz	r7, 80098dc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80098ce:	6831      	ldr	r1, [r6, #0]
 80098d0:	4810      	ldr	r0, [pc, #64]	; (8009914 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80098d2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80098d6:	3104      	adds	r1, #4
 80098d8:	f7ff b88e 	b.w	80089f8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80098dc:	6833      	ldr	r3, [r6, #0]
 80098de:	192c      	adds	r4, r5, r4
 80098e0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80098e2:	d307      	bcc.n	80098f4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80098e4:	4b0c      	ldr	r3, [pc, #48]	; (8009918 <prvAddCurrentTaskToDelayedList+0x64>)
 80098e6:	6818      	ldr	r0, [r3, #0]
 80098e8:	6831      	ldr	r1, [r6, #0]
}
 80098ea:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80098ee:	3104      	adds	r1, #4
 80098f0:	f7ff b88e 	b.w	8008a10 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80098f4:	4b09      	ldr	r3, [pc, #36]	; (800991c <prvAddCurrentTaskToDelayedList+0x68>)
 80098f6:	6818      	ldr	r0, [r3, #0]
 80098f8:	6831      	ldr	r1, [r6, #0]
 80098fa:	3104      	adds	r1, #4
 80098fc:	f7ff f888 	bl	8008a10 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009900:	4b07      	ldr	r3, [pc, #28]	; (8009920 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009902:	681a      	ldr	r2, [r3, #0]
 8009904:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009906:	bf88      	it	hi
 8009908:	601c      	strhi	r4, [r3, #0]
}
 800990a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800990c:	200152a4 	.word	0x200152a4
 8009910:	20014db0 	.word	0x20014db0
 8009914:	2001527c 	.word	0x2001527c
 8009918:	20014db8 	.word	0x20014db8
 800991c:	20014db4 	.word	0x20014db4
 8009920:	2001525c 	.word	0x2001525c

08009924 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009924:	4a06      	ldr	r2, [pc, #24]	; (8009940 <prvResetNextTaskUnblockTime+0x1c>)
 8009926:	6813      	ldr	r3, [r2, #0]
 8009928:	6819      	ldr	r1, [r3, #0]
 800992a:	4b06      	ldr	r3, [pc, #24]	; (8009944 <prvResetNextTaskUnblockTime+0x20>)
 800992c:	b919      	cbnz	r1, 8009936 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800992e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009932:	601a      	str	r2, [r3, #0]
}
 8009934:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009936:	6812      	ldr	r2, [r2, #0]
 8009938:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800993a:	68d2      	ldr	r2, [r2, #12]
 800993c:	6852      	ldr	r2, [r2, #4]
 800993e:	e7f8      	b.n	8009932 <prvResetNextTaskUnblockTime+0xe>
 8009940:	20014db4 	.word	0x20014db4
 8009944:	2001525c 	.word	0x2001525c

08009948 <prvDeleteTCB>:
	{
 8009948:	b510      	push	{r4, lr}
 800994a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800994c:	3058      	adds	r0, #88	; 0x58
 800994e:	f017 fb27 	bl	8020fa0 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009952:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009956:	b93b      	cbnz	r3, 8009968 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009958:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800995a:	f7ff f807 	bl	800896c <vPortFree>
				vPortFree( pxTCB );
 800995e:	4620      	mov	r0, r4
	}
 8009960:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009964:	f7ff b802 	b.w	800896c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009968:	2b01      	cmp	r3, #1
 800996a:	d0f8      	beq.n	800995e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800996c:	2b02      	cmp	r3, #2
 800996e:	d008      	beq.n	8009982 <prvDeleteTCB+0x3a>
 8009970:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009974:	f383 8811 	msr	BASEPRI, r3
 8009978:	f3bf 8f6f 	isb	sy
 800997c:	f3bf 8f4f 	dsb	sy
 8009980:	e7fe      	b.n	8009980 <prvDeleteTCB+0x38>
	}
 8009982:	bd10      	pop	{r4, pc}

08009984 <prvIdleTask>:
{
 8009984:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009986:	4c13      	ldr	r4, [pc, #76]	; (80099d4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009988:	4f13      	ldr	r7, [pc, #76]	; (80099d8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800998a:	4d14      	ldr	r5, [pc, #80]	; (80099dc <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800998c:	6823      	ldr	r3, [r4, #0]
 800998e:	b973      	cbnz	r3, 80099ae <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009990:	4b13      	ldr	r3, [pc, #76]	; (80099e0 <prvIdleTask+0x5c>)
 8009992:	681b      	ldr	r3, [r3, #0]
 8009994:	2b01      	cmp	r3, #1
 8009996:	d9f8      	bls.n	800998a <prvIdleTask+0x6>
				taskYIELD();
 8009998:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800999c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80099a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80099a4:	f3bf 8f4f 	dsb	sy
 80099a8:	f3bf 8f6f 	isb	sy
 80099ac:	e7ed      	b.n	800998a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80099ae:	f7ff f8c1 	bl	8008b34 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80099b2:	68fb      	ldr	r3, [r7, #12]
 80099b4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80099b6:	1d30      	adds	r0, r6, #4
 80099b8:	f7ff f841 	bl	8008a3e <uxListRemove>
				--uxCurrentNumberOfTasks;
 80099bc:	682b      	ldr	r3, [r5, #0]
 80099be:	3b01      	subs	r3, #1
 80099c0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80099c2:	6823      	ldr	r3, [r4, #0]
 80099c4:	3b01      	subs	r3, #1
 80099c6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80099c8:	f7ff f8d4 	bl	8008b74 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80099cc:	4630      	mov	r0, r6
 80099ce:	f7ff ffbb 	bl	8009948 <prvDeleteTCB>
 80099d2:	e7db      	b.n	800998c <prvIdleTask+0x8>
 80099d4:	20015220 	.word	0x20015220
 80099d8:	20015290 	.word	0x20015290
 80099dc:	2001521c 	.word	0x2001521c
 80099e0:	20014dbc 	.word	0x20014dbc

080099e4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80099e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80099e8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80099ec:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80099f0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80099f2:	4606      	mov	r6, r0
 80099f4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80099f6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80099f8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80099fa:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80099fc:	f016 feec 	bl	80207d8 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009a00:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009a02:	f1a9 0904 	sub.w	r9, r9, #4
 8009a06:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009a08:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009a0c:	2d00      	cmp	r5, #0
 8009a0e:	d042      	beq.n	8009a96 <prvInitialiseNewTask.constprop.0+0xb2>
 8009a10:	1e6b      	subs	r3, r5, #1
 8009a12:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009a16:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009a18:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009a1c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009a20:	b108      	cbz	r0, 8009a26 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009a22:	42ab      	cmp	r3, r5
 8009a24:	d1f8      	bne.n	8009a18 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009a26:	2300      	movs	r3, #0
 8009a28:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009a2c:	9d08      	ldr	r5, [sp, #32]
 8009a2e:	2d37      	cmp	r5, #55	; 0x37
 8009a30:	bf28      	it	cs
 8009a32:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009a34:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009a38:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009a3a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009a3c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009a3e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009a42:	f7fe ffd6 	bl	80089f2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a46:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009a4a:	f104 0018 	add.w	r0, r4, #24
 8009a4e:	f7fe ffd0 	bl	80089f2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009a52:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009a56:	2260      	movs	r2, #96	; 0x60
 8009a58:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009a5a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a5c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009a5e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009a60:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009a64:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009a68:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009a6c:	f016 feb4 	bl	80207d8 <memset>
 8009a70:	4b0a      	ldr	r3, [pc, #40]	; (8009a9c <prvInitialiseNewTask.constprop.0+0xb8>)
 8009a72:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009a74:	4b0a      	ldr	r3, [pc, #40]	; (8009aa0 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009a76:	6623      	str	r3, [r4, #96]	; 0x60
 8009a78:	4b0a      	ldr	r3, [pc, #40]	; (8009aa4 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009a7a:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009a7c:	463a      	mov	r2, r7
 8009a7e:	4631      	mov	r1, r6
 8009a80:	4648      	mov	r0, r9
 8009a82:	f7ff f82b 	bl	8008adc <pxPortInitialiseStack>
 8009a86:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009a88:	f1b8 0f00 	cmp.w	r8, #0
 8009a8c:	d001      	beq.n	8009a92 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009a8e:	f8c8 4000 	str.w	r4, [r8]
}
 8009a92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009a96:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009a9a:	e7c7      	b.n	8009a2c <prvInitialiseNewTask.constprop.0+0x48>
 8009a9c:	080242f4 	.word	0x080242f4
 8009aa0:	08024314 	.word	0x08024314
 8009aa4:	080242d4 	.word	0x080242d4

08009aa8 <xTaskCreateStatic>:
	{
 8009aa8:	b570      	push	{r4, r5, r6, lr}
 8009aaa:	b086      	sub	sp, #24
 8009aac:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009ab0:	b945      	cbnz	r5, 8009ac4 <xTaskCreateStatic+0x1c>
 8009ab2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ab6:	f383 8811 	msr	BASEPRI, r3
 8009aba:	f3bf 8f6f 	isb	sy
 8009abe:	f3bf 8f4f 	dsb	sy
 8009ac2:	e7fe      	b.n	8009ac2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009ac4:	b944      	cbnz	r4, 8009ad8 <xTaskCreateStatic+0x30>
 8009ac6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009aca:	f383 8811 	msr	BASEPRI, r3
 8009ace:	f3bf 8f6f 	isb	sy
 8009ad2:	f3bf 8f4f 	dsb	sy
 8009ad6:	e7fe      	b.n	8009ad6 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009ad8:	26c0      	movs	r6, #192	; 0xc0
 8009ada:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009adc:	9e05      	ldr	r6, [sp, #20]
 8009ade:	2ec0      	cmp	r6, #192	; 0xc0
 8009ae0:	d008      	beq.n	8009af4 <xTaskCreateStatic+0x4c>
 8009ae2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ae6:	f383 8811 	msr	BASEPRI, r3
 8009aea:	f3bf 8f6f 	isb	sy
 8009aee:	f3bf 8f4f 	dsb	sy
 8009af2:	e7fe      	b.n	8009af2 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009af4:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009af6:	2502      	movs	r5, #2
 8009af8:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009afc:	ad04      	add	r5, sp, #16
 8009afe:	9501      	str	r5, [sp, #4]
 8009b00:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009b02:	9402      	str	r4, [sp, #8]
 8009b04:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009b06:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009b08:	f7ff ff6c 	bl	80099e4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009b0c:	4620      	mov	r0, r4
 8009b0e:	f7ff fe51 	bl	80097b4 <prvAddNewTaskToReadyList>
	}
 8009b12:	9804      	ldr	r0, [sp, #16]
 8009b14:	b006      	add	sp, #24
 8009b16:	bd70      	pop	{r4, r5, r6, pc}

08009b18 <xTaskCreate>:
	{
 8009b18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b1c:	4607      	mov	r7, r0
 8009b1e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009b20:	0090      	lsls	r0, r2, #2
	{
 8009b22:	4688      	mov	r8, r1
 8009b24:	4616      	mov	r6, r2
 8009b26:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009b28:	f7fe fe8e 	bl	8008848 <pvPortMalloc>
			if( pxStack != NULL )
 8009b2c:	4605      	mov	r5, r0
 8009b2e:	b1e8      	cbz	r0, 8009b6c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009b30:	20c0      	movs	r0, #192	; 0xc0
 8009b32:	f7fe fe89 	bl	8008848 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009b36:	4604      	mov	r4, r0
 8009b38:	b1a8      	cbz	r0, 8009b66 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009b3a:	2300      	movs	r3, #0
 8009b3c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009b40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009b42:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009b44:	9301      	str	r3, [sp, #4]
 8009b46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009b48:	9002      	str	r0, [sp, #8]
 8009b4a:	9300      	str	r3, [sp, #0]
 8009b4c:	4632      	mov	r2, r6
 8009b4e:	464b      	mov	r3, r9
 8009b50:	4641      	mov	r1, r8
 8009b52:	4638      	mov	r0, r7
 8009b54:	f7ff ff46 	bl	80099e4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009b58:	4620      	mov	r0, r4
 8009b5a:	f7ff fe2b 	bl	80097b4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009b5e:	2001      	movs	r0, #1
	}
 8009b60:	b005      	add	sp, #20
 8009b62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009b66:	4628      	mov	r0, r5
 8009b68:	f7fe ff00 	bl	800896c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009b6c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009b70:	e7f6      	b.n	8009b60 <xTaskCreate+0x48>
	...

08009b74 <vTaskStartScheduler>:
{
 8009b74:	b510      	push	{r4, lr}
 8009b76:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009b78:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009b7a:	aa07      	add	r2, sp, #28
 8009b7c:	a906      	add	r1, sp, #24
 8009b7e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009b80:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009b84:	f7fe fe24 	bl	80087d0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009b88:	9b05      	ldr	r3, [sp, #20]
 8009b8a:	9302      	str	r3, [sp, #8]
 8009b8c:	9b06      	ldr	r3, [sp, #24]
 8009b8e:	9a07      	ldr	r2, [sp, #28]
 8009b90:	4919      	ldr	r1, [pc, #100]	; (8009bf8 <vTaskStartScheduler+0x84>)
 8009b92:	481a      	ldr	r0, [pc, #104]	; (8009bfc <vTaskStartScheduler+0x88>)
 8009b94:	e9cd 4300 	strd	r4, r3, [sp]
 8009b98:	4623      	mov	r3, r4
 8009b9a:	f7ff ff85 	bl	8009aa8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009b9e:	b340      	cbz	r0, 8009bf2 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009ba0:	f000 fbc4 	bl	800a32c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009ba4:	2801      	cmp	r0, #1
 8009ba6:	d119      	bne.n	8009bdc <vTaskStartScheduler+0x68>
 8009ba8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bac:	f383 8811 	msr	BASEPRI, r3
 8009bb0:	f3bf 8f6f 	isb	sy
 8009bb4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009bb8:	4b11      	ldr	r3, [pc, #68]	; (8009c00 <vTaskStartScheduler+0x8c>)
 8009bba:	4a12      	ldr	r2, [pc, #72]	; (8009c04 <vTaskStartScheduler+0x90>)
 8009bbc:	681b      	ldr	r3, [r3, #0]
 8009bbe:	3358      	adds	r3, #88	; 0x58
 8009bc0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009bc2:	4b11      	ldr	r3, [pc, #68]	; (8009c08 <vTaskStartScheduler+0x94>)
 8009bc4:	f04f 32ff 	mov.w	r2, #4294967295
 8009bc8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009bca:	4b10      	ldr	r3, [pc, #64]	; (8009c0c <vTaskStartScheduler+0x98>)
 8009bcc:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009bce:	4b10      	ldr	r3, [pc, #64]	; (8009c10 <vTaskStartScheduler+0x9c>)
 8009bd0:	601c      	str	r4, [r3, #0]
}
 8009bd2:	b008      	add	sp, #32
 8009bd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009bd8:	f7ff b83c 	b.w	8008c54 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009bdc:	3001      	adds	r0, #1
 8009bde:	d108      	bne.n	8009bf2 <vTaskStartScheduler+0x7e>
 8009be0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009be4:	f383 8811 	msr	BASEPRI, r3
 8009be8:	f3bf 8f6f 	isb	sy
 8009bec:	f3bf 8f4f 	dsb	sy
 8009bf0:	e7fe      	b.n	8009bf0 <vTaskStartScheduler+0x7c>
}
 8009bf2:	b008      	add	sp, #32
 8009bf4:	bd10      	pop	{r4, pc}
 8009bf6:	bf00      	nop
 8009bf8:	080233b0 	.word	0x080233b0
 8009bfc:	08009985 	.word	0x08009985
 8009c00:	20014db0 	.word	0x20014db0
 8009c04:	20000104 	.word	0x20000104
 8009c08:	2001525c 	.word	0x2001525c
 8009c0c:	20015278 	.word	0x20015278
 8009c10:	200152a4 	.word	0x200152a4

08009c14 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009c14:	4a02      	ldr	r2, [pc, #8]	; (8009c20 <vTaskSuspendAll+0xc>)
 8009c16:	6813      	ldr	r3, [r2, #0]
 8009c18:	3301      	adds	r3, #1
 8009c1a:	6013      	str	r3, [r2, #0]
}
 8009c1c:	4770      	bx	lr
 8009c1e:	bf00      	nop
 8009c20:	20015228 	.word	0x20015228

08009c24 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009c24:	4b01      	ldr	r3, [pc, #4]	; (8009c2c <xTaskGetTickCount+0x8>)
 8009c26:	6818      	ldr	r0, [r3, #0]
}
 8009c28:	4770      	bx	lr
 8009c2a:	bf00      	nop
 8009c2c:	200152a4 	.word	0x200152a4

08009c30 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c30:	4b3f      	ldr	r3, [pc, #252]	; (8009d30 <xTaskIncrementTick+0x100>)
 8009c32:	681b      	ldr	r3, [r3, #0]
{
 8009c34:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c38:	2b00      	cmp	r3, #0
 8009c3a:	d173      	bne.n	8009d24 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009c3c:	4b3d      	ldr	r3, [pc, #244]	; (8009d34 <xTaskIncrementTick+0x104>)
 8009c3e:	681d      	ldr	r5, [r3, #0]
 8009c40:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009c42:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009c44:	b9bd      	cbnz	r5, 8009c76 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009c46:	4b3c      	ldr	r3, [pc, #240]	; (8009d38 <xTaskIncrementTick+0x108>)
 8009c48:	681a      	ldr	r2, [r3, #0]
 8009c4a:	6812      	ldr	r2, [r2, #0]
 8009c4c:	b142      	cbz	r2, 8009c60 <xTaskIncrementTick+0x30>
 8009c4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c52:	f383 8811 	msr	BASEPRI, r3
 8009c56:	f3bf 8f6f 	isb	sy
 8009c5a:	f3bf 8f4f 	dsb	sy
 8009c5e:	e7fe      	b.n	8009c5e <xTaskIncrementTick+0x2e>
 8009c60:	4a36      	ldr	r2, [pc, #216]	; (8009d3c <xTaskIncrementTick+0x10c>)
 8009c62:	6819      	ldr	r1, [r3, #0]
 8009c64:	6810      	ldr	r0, [r2, #0]
 8009c66:	6018      	str	r0, [r3, #0]
 8009c68:	6011      	str	r1, [r2, #0]
 8009c6a:	4a35      	ldr	r2, [pc, #212]	; (8009d40 <xTaskIncrementTick+0x110>)
 8009c6c:	6813      	ldr	r3, [r2, #0]
 8009c6e:	3301      	adds	r3, #1
 8009c70:	6013      	str	r3, [r2, #0]
 8009c72:	f7ff fe57 	bl	8009924 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009c76:	4e33      	ldr	r6, [pc, #204]	; (8009d44 <xTaskIncrementTick+0x114>)
 8009c78:	4f33      	ldr	r7, [pc, #204]	; (8009d48 <xTaskIncrementTick+0x118>)
 8009c7a:	6833      	ldr	r3, [r6, #0]
 8009c7c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009d54 <xTaskIncrementTick+0x124>
 8009c80:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009c82:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009c86:	d911      	bls.n	8009cac <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009c88:	f8d8 3000 	ldr.w	r3, [r8]
 8009c8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c8e:	2214      	movs	r2, #20
 8009c90:	4353      	muls	r3, r2
 8009c92:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009c94:	2b02      	cmp	r3, #2
 8009c96:	bf28      	it	cs
 8009c98:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009c9a:	4b2c      	ldr	r3, [pc, #176]	; (8009d4c <xTaskIncrementTick+0x11c>)
 8009c9c:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009c9e:	2b00      	cmp	r3, #0
}
 8009ca0:	bf0c      	ite	eq
 8009ca2:	4620      	moveq	r0, r4
 8009ca4:	2001      	movne	r0, #1
 8009ca6:	b003      	add	sp, #12
 8009ca8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009cac:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009d38 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009cb0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009d58 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009cb4:	f8d9 3000 	ldr.w	r3, [r9]
 8009cb8:	681b      	ldr	r3, [r3, #0]
 8009cba:	b91b      	cbnz	r3, 8009cc4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cbc:	f04f 33ff 	mov.w	r3, #4294967295
 8009cc0:	6033      	str	r3, [r6, #0]
					break;
 8009cc2:	e7e1      	b.n	8009c88 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009cc4:	f8d9 3000 	ldr.w	r3, [r9]
 8009cc8:	68db      	ldr	r3, [r3, #12]
 8009cca:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009cce:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009cd2:	4295      	cmp	r5, r2
 8009cd4:	d201      	bcs.n	8009cda <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009cd6:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009cd8:	e7d6      	b.n	8009c88 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009cda:	f10b 0104 	add.w	r1, fp, #4
 8009cde:	4608      	mov	r0, r1
 8009ce0:	9101      	str	r1, [sp, #4]
 8009ce2:	f7fe feac 	bl	8008a3e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009ce6:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009cea:	9901      	ldr	r1, [sp, #4]
 8009cec:	b122      	cbz	r2, 8009cf8 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009cee:	f10b 0018 	add.w	r0, fp, #24
 8009cf2:	f7fe fea4 	bl	8008a3e <uxListRemove>
 8009cf6:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009cf8:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009cfc:	f8da 2000 	ldr.w	r2, [sl]
 8009d00:	2314      	movs	r3, #20
 8009d02:	4290      	cmp	r0, r2
 8009d04:	bf88      	it	hi
 8009d06:	f8ca 0000 	strhi.w	r0, [sl]
 8009d0a:	fb03 7000 	mla	r0, r3, r0, r7
 8009d0e:	f7fe fe73 	bl	80089f8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009d12:	f8d8 1000 	ldr.w	r1, [r8]
 8009d16:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009d1a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009d1c:	429a      	cmp	r2, r3
 8009d1e:	bf28      	it	cs
 8009d20:	2401      	movcs	r4, #1
 8009d22:	e7c7      	b.n	8009cb4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009d24:	4a0a      	ldr	r2, [pc, #40]	; (8009d50 <xTaskIncrementTick+0x120>)
 8009d26:	6813      	ldr	r3, [r2, #0]
 8009d28:	3301      	adds	r3, #1
 8009d2a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009d2c:	2400      	movs	r4, #0
 8009d2e:	e7b4      	b.n	8009c9a <xTaskIncrementTick+0x6a>
 8009d30:	20015228 	.word	0x20015228
 8009d34:	200152a4 	.word	0x200152a4
 8009d38:	20014db4 	.word	0x20014db4
 8009d3c:	20014db8 	.word	0x20014db8
 8009d40:	20015260 	.word	0x20015260
 8009d44:	2001525c 	.word	0x2001525c
 8009d48:	20014dbc 	.word	0x20014dbc
 8009d4c:	200152a8 	.word	0x200152a8
 8009d50:	20015224 	.word	0x20015224
 8009d54:	20014db0 	.word	0x20014db0
 8009d58:	20015230 	.word	0x20015230

08009d5c <xTaskResumeAll>:
{
 8009d5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009d5e:	4c31      	ldr	r4, [pc, #196]	; (8009e24 <xTaskResumeAll+0xc8>)
 8009d60:	6823      	ldr	r3, [r4, #0]
 8009d62:	b943      	cbnz	r3, 8009d76 <xTaskResumeAll+0x1a>
 8009d64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d68:	f383 8811 	msr	BASEPRI, r3
 8009d6c:	f3bf 8f6f 	isb	sy
 8009d70:	f3bf 8f4f 	dsb	sy
 8009d74:	e7fe      	b.n	8009d74 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009d76:	f7fe fedd 	bl	8008b34 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009d7a:	6823      	ldr	r3, [r4, #0]
 8009d7c:	3b01      	subs	r3, #1
 8009d7e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d80:	6824      	ldr	r4, [r4, #0]
 8009d82:	b12c      	cbz	r4, 8009d90 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009d84:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009d86:	f7fe fef5 	bl	8008b74 <vPortExitCritical>
}
 8009d8a:	4620      	mov	r0, r4
 8009d8c:	b003      	add	sp, #12
 8009d8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009d90:	4b25      	ldr	r3, [pc, #148]	; (8009e28 <xTaskResumeAll+0xcc>)
 8009d92:	681b      	ldr	r3, [r3, #0]
 8009d94:	2b00      	cmp	r3, #0
 8009d96:	d0f5      	beq.n	8009d84 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009d98:	4d24      	ldr	r5, [pc, #144]	; (8009e2c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009d9a:	4e25      	ldr	r6, [pc, #148]	; (8009e30 <xTaskResumeAll+0xd4>)
 8009d9c:	4f25      	ldr	r7, [pc, #148]	; (8009e34 <xTaskResumeAll+0xd8>)
 8009d9e:	e01e      	b.n	8009dde <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009da0:	68eb      	ldr	r3, [r5, #12]
 8009da2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009da4:	f104 0018 	add.w	r0, r4, #24
 8009da8:	f7fe fe49 	bl	8008a3e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009dac:	1d21      	adds	r1, r4, #4
 8009dae:	4608      	mov	r0, r1
 8009db0:	9101      	str	r1, [sp, #4]
 8009db2:	f7fe fe44 	bl	8008a3e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009db6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009db8:	6832      	ldr	r2, [r6, #0]
 8009dba:	9901      	ldr	r1, [sp, #4]
 8009dbc:	2014      	movs	r0, #20
 8009dbe:	4293      	cmp	r3, r2
 8009dc0:	fb00 7003 	mla	r0, r0, r3, r7
 8009dc4:	bf88      	it	hi
 8009dc6:	6033      	strhi	r3, [r6, #0]
 8009dc8:	f7fe fe16 	bl	80089f8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009dcc:	4b1a      	ldr	r3, [pc, #104]	; (8009e38 <xTaskResumeAll+0xdc>)
 8009dce:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009dd0:	681b      	ldr	r3, [r3, #0]
 8009dd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dd4:	429a      	cmp	r2, r3
 8009dd6:	d302      	bcc.n	8009dde <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009dd8:	4b18      	ldr	r3, [pc, #96]	; (8009e3c <xTaskResumeAll+0xe0>)
 8009dda:	2201      	movs	r2, #1
 8009ddc:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009dde:	682b      	ldr	r3, [r5, #0]
 8009de0:	2b00      	cmp	r3, #0
 8009de2:	d1dd      	bne.n	8009da0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009de4:	b10c      	cbz	r4, 8009dea <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009de6:	f7ff fd9d 	bl	8009924 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009dea:	4d15      	ldr	r5, [pc, #84]	; (8009e40 <xTaskResumeAll+0xe4>)
 8009dec:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009dee:	b144      	cbz	r4, 8009e02 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009df0:	4e12      	ldr	r6, [pc, #72]	; (8009e3c <xTaskResumeAll+0xe0>)
 8009df2:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009df4:	f7ff ff1c 	bl	8009c30 <xTaskIncrementTick>
 8009df8:	b100      	cbz	r0, 8009dfc <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009dfa:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009dfc:	3c01      	subs	r4, #1
 8009dfe:	d1f9      	bne.n	8009df4 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009e00:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009e02:	4b0e      	ldr	r3, [pc, #56]	; (8009e3c <xTaskResumeAll+0xe0>)
 8009e04:	681b      	ldr	r3, [r3, #0]
 8009e06:	2b00      	cmp	r3, #0
 8009e08:	d0bc      	beq.n	8009d84 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009e0a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e0e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e12:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e16:	f3bf 8f4f 	dsb	sy
 8009e1a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009e1e:	2401      	movs	r4, #1
 8009e20:	e7b1      	b.n	8009d86 <xTaskResumeAll+0x2a>
 8009e22:	bf00      	nop
 8009e24:	20015228 	.word	0x20015228
 8009e28:	2001521c 	.word	0x2001521c
 8009e2c:	20015264 	.word	0x20015264
 8009e30:	20015230 	.word	0x20015230
 8009e34:	20014dbc 	.word	0x20014dbc
 8009e38:	20014db0 	.word	0x20014db0
 8009e3c:	200152a8 	.word	0x200152a8
 8009e40:	20015224 	.word	0x20015224

08009e44 <vTaskDelay>:
	{
 8009e44:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009e46:	b950      	cbnz	r0, 8009e5e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009e48:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e4c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e50:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e54:	f3bf 8f4f 	dsb	sy
 8009e58:	f3bf 8f6f 	isb	sy
	}
 8009e5c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009e5e:	4b0a      	ldr	r3, [pc, #40]	; (8009e88 <vTaskDelay+0x44>)
 8009e60:	6819      	ldr	r1, [r3, #0]
 8009e62:	b141      	cbz	r1, 8009e76 <vTaskDelay+0x32>
 8009e64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e68:	f383 8811 	msr	BASEPRI, r3
 8009e6c:	f3bf 8f6f 	isb	sy
 8009e70:	f3bf 8f4f 	dsb	sy
 8009e74:	e7fe      	b.n	8009e74 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009e76:	f7ff fecd 	bl	8009c14 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009e7a:	f7ff fd1b 	bl	80098b4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009e7e:	f7ff ff6d 	bl	8009d5c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009e82:	2800      	cmp	r0, #0
 8009e84:	d0e0      	beq.n	8009e48 <vTaskDelay+0x4>
 8009e86:	e7e9      	b.n	8009e5c <vTaskDelay+0x18>
 8009e88:	20015228 	.word	0x20015228

08009e8c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009e8c:	4b19      	ldr	r3, [pc, #100]	; (8009ef4 <vTaskSwitchContext+0x68>)
 8009e8e:	681a      	ldr	r2, [r3, #0]
 8009e90:	4b19      	ldr	r3, [pc, #100]	; (8009ef8 <vTaskSwitchContext+0x6c>)
{
 8009e92:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009e94:	b112      	cbz	r2, 8009e9c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009e96:	2201      	movs	r2, #1
 8009e98:	601a      	str	r2, [r3, #0]
}
 8009e9a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e9c:	4d17      	ldr	r5, [pc, #92]	; (8009efc <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8009e9e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ea0:	682a      	ldr	r2, [r5, #0]
 8009ea2:	4917      	ldr	r1, [pc, #92]	; (8009f00 <vTaskSwitchContext+0x74>)
 8009ea4:	2614      	movs	r6, #20
 8009ea6:	fb06 f302 	mul.w	r3, r6, r2
 8009eaa:	18c8      	adds	r0, r1, r3
 8009eac:	58cc      	ldr	r4, [r1, r3]
 8009eae:	b1ac      	cbz	r4, 8009edc <vTaskSwitchContext+0x50>
 8009eb0:	6844      	ldr	r4, [r0, #4]
 8009eb2:	3308      	adds	r3, #8
 8009eb4:	6864      	ldr	r4, [r4, #4]
 8009eb6:	6044      	str	r4, [r0, #4]
 8009eb8:	440b      	add	r3, r1
 8009eba:	429c      	cmp	r4, r3
 8009ebc:	bf04      	itt	eq
 8009ebe:	6863      	ldreq	r3, [r4, #4]
 8009ec0:	6043      	streq	r3, [r0, #4]
 8009ec2:	2314      	movs	r3, #20
 8009ec4:	fb03 1102 	mla	r1, r3, r2, r1
 8009ec8:	684b      	ldr	r3, [r1, #4]
 8009eca:	68d9      	ldr	r1, [r3, #12]
 8009ecc:	4b0d      	ldr	r3, [pc, #52]	; (8009f04 <vTaskSwitchContext+0x78>)
 8009ece:	6019      	str	r1, [r3, #0]
 8009ed0:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009ed2:	681b      	ldr	r3, [r3, #0]
 8009ed4:	4a0c      	ldr	r2, [pc, #48]	; (8009f08 <vTaskSwitchContext+0x7c>)
 8009ed6:	3358      	adds	r3, #88	; 0x58
 8009ed8:	6013      	str	r3, [r2, #0]
}
 8009eda:	e7de      	b.n	8009e9a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009edc:	b942      	cbnz	r2, 8009ef0 <vTaskSwitchContext+0x64>
 8009ede:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ee2:	f383 8811 	msr	BASEPRI, r3
 8009ee6:	f3bf 8f6f 	isb	sy
 8009eea:	f3bf 8f4f 	dsb	sy
 8009eee:	e7fe      	b.n	8009eee <vTaskSwitchContext+0x62>
 8009ef0:	3a01      	subs	r2, #1
 8009ef2:	e7d8      	b.n	8009ea6 <vTaskSwitchContext+0x1a>
 8009ef4:	20015228 	.word	0x20015228
 8009ef8:	200152a8 	.word	0x200152a8
 8009efc:	20015230 	.word	0x20015230
 8009f00:	20014dbc 	.word	0x20014dbc
 8009f04:	20014db0 	.word	0x20014db0
 8009f08:	20000104 	.word	0x20000104

08009f0c <vTaskPlaceOnEventList>:
{
 8009f0c:	b510      	push	{r4, lr}
 8009f0e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009f10:	b940      	cbnz	r0, 8009f24 <vTaskPlaceOnEventList+0x18>
 8009f12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f16:	f383 8811 	msr	BASEPRI, r3
 8009f1a:	f3bf 8f6f 	isb	sy
 8009f1e:	f3bf 8f4f 	dsb	sy
 8009f22:	e7fe      	b.n	8009f22 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009f24:	4b05      	ldr	r3, [pc, #20]	; (8009f3c <vTaskPlaceOnEventList+0x30>)
 8009f26:	6819      	ldr	r1, [r3, #0]
 8009f28:	3118      	adds	r1, #24
 8009f2a:	f7fe fd71 	bl	8008a10 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009f2e:	4620      	mov	r0, r4
 8009f30:	2101      	movs	r1, #1
}
 8009f32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009f36:	f7ff bcbd 	b.w	80098b4 <prvAddCurrentTaskToDelayedList>
 8009f3a:	bf00      	nop
 8009f3c:	20014db0 	.word	0x20014db0

08009f40 <vTaskPlaceOnEventListRestricted>:
	{
 8009f40:	b538      	push	{r3, r4, r5, lr}
 8009f42:	460d      	mov	r5, r1
 8009f44:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009f46:	b940      	cbnz	r0, 8009f5a <vTaskPlaceOnEventListRestricted+0x1a>
 8009f48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f4c:	f383 8811 	msr	BASEPRI, r3
 8009f50:	f3bf 8f6f 	isb	sy
 8009f54:	f3bf 8f4f 	dsb	sy
 8009f58:	e7fe      	b.n	8009f58 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009f5a:	4b07      	ldr	r3, [pc, #28]	; (8009f78 <vTaskPlaceOnEventListRestricted+0x38>)
 8009f5c:	6819      	ldr	r1, [r3, #0]
 8009f5e:	3118      	adds	r1, #24
 8009f60:	f7fe fd4a 	bl	80089f8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009f64:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009f66:	4621      	mov	r1, r4
 8009f68:	bf0c      	ite	eq
 8009f6a:	4628      	moveq	r0, r5
 8009f6c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009f70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009f74:	f7ff bc9e 	b.w	80098b4 <prvAddCurrentTaskToDelayedList>
 8009f78:	20014db0 	.word	0x20014db0

08009f7c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f7c:	68c3      	ldr	r3, [r0, #12]
{
 8009f7e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f80:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009f82:	b944      	cbnz	r4, 8009f96 <xTaskRemoveFromEventList+0x1a>
 8009f84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f88:	f383 8811 	msr	BASEPRI, r3
 8009f8c:	f3bf 8f6f 	isb	sy
 8009f90:	f3bf 8f4f 	dsb	sy
 8009f94:	e7fe      	b.n	8009f94 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009f96:	f104 0118 	add.w	r1, r4, #24
 8009f9a:	4608      	mov	r0, r1
 8009f9c:	9101      	str	r1, [sp, #4]
 8009f9e:	f7fe fd4e 	bl	8008a3e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009fa2:	4b12      	ldr	r3, [pc, #72]	; (8009fec <xTaskRemoveFromEventList+0x70>)
 8009fa4:	9901      	ldr	r1, [sp, #4]
 8009fa6:	681b      	ldr	r3, [r3, #0]
 8009fa8:	b9eb      	cbnz	r3, 8009fe6 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009faa:	1d21      	adds	r1, r4, #4
 8009fac:	4608      	mov	r0, r1
 8009fae:	9101      	str	r1, [sp, #4]
 8009fb0:	f7fe fd45 	bl	8008a3e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009fb4:	4a0e      	ldr	r2, [pc, #56]	; (8009ff0 <xTaskRemoveFromEventList+0x74>)
 8009fb6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009fb8:	6810      	ldr	r0, [r2, #0]
 8009fba:	9901      	ldr	r1, [sp, #4]
 8009fbc:	4283      	cmp	r3, r0
 8009fbe:	bf88      	it	hi
 8009fc0:	6013      	strhi	r3, [r2, #0]
 8009fc2:	4a0c      	ldr	r2, [pc, #48]	; (8009ff4 <xTaskRemoveFromEventList+0x78>)
 8009fc4:	2014      	movs	r0, #20
 8009fc6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009fca:	f7fe fd15 	bl	80089f8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009fce:	4b0a      	ldr	r3, [pc, #40]	; (8009ff8 <xTaskRemoveFromEventList+0x7c>)
 8009fd0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009fd2:	681b      	ldr	r3, [r3, #0]
 8009fd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009fd6:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009fd8:	bf85      	ittet	hi
 8009fda:	4b08      	ldrhi	r3, [pc, #32]	; (8009ffc <xTaskRemoveFromEventList+0x80>)
 8009fdc:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8009fde:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8009fe0:	6018      	strhi	r0, [r3, #0]
}
 8009fe2:	b002      	add	sp, #8
 8009fe4:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009fe6:	4806      	ldr	r0, [pc, #24]	; (800a000 <xTaskRemoveFromEventList+0x84>)
 8009fe8:	e7ef      	b.n	8009fca <xTaskRemoveFromEventList+0x4e>
 8009fea:	bf00      	nop
 8009fec:	20015228 	.word	0x20015228
 8009ff0:	20015230 	.word	0x20015230
 8009ff4:	20014dbc 	.word	0x20014dbc
 8009ff8:	20014db0 	.word	0x20014db0
 8009ffc:	200152a8 	.word	0x200152a8
 800a000:	20015264 	.word	0x20015264

0800a004 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a004:	4b03      	ldr	r3, [pc, #12]	; (800a014 <vTaskInternalSetTimeOutState+0x10>)
 800a006:	681b      	ldr	r3, [r3, #0]
 800a008:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a00a:	4b03      	ldr	r3, [pc, #12]	; (800a018 <vTaskInternalSetTimeOutState+0x14>)
 800a00c:	681b      	ldr	r3, [r3, #0]
 800a00e:	6043      	str	r3, [r0, #4]
}
 800a010:	4770      	bx	lr
 800a012:	bf00      	nop
 800a014:	20015260 	.word	0x20015260
 800a018:	200152a4 	.word	0x200152a4

0800a01c <xTaskCheckForTimeOut>:
{
 800a01c:	b570      	push	{r4, r5, r6, lr}
 800a01e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a020:	4605      	mov	r5, r0
 800a022:	b940      	cbnz	r0, 800a036 <xTaskCheckForTimeOut+0x1a>
 800a024:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a028:	f383 8811 	msr	BASEPRI, r3
 800a02c:	f3bf 8f6f 	isb	sy
 800a030:	f3bf 8f4f 	dsb	sy
 800a034:	e7fe      	b.n	800a034 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a036:	b941      	cbnz	r1, 800a04a <xTaskCheckForTimeOut+0x2e>
 800a038:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a03c:	f383 8811 	msr	BASEPRI, r3
 800a040:	f3bf 8f6f 	isb	sy
 800a044:	f3bf 8f4f 	dsb	sy
 800a048:	e7fe      	b.n	800a048 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a04a:	f7fe fd73 	bl	8008b34 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a04e:	4b0f      	ldr	r3, [pc, #60]	; (800a08c <xTaskCheckForTimeOut+0x70>)
 800a050:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a052:	6823      	ldr	r3, [r4, #0]
 800a054:	1c5a      	adds	r2, r3, #1
 800a056:	d010      	beq.n	800a07a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a058:	480d      	ldr	r0, [pc, #52]	; (800a090 <xTaskCheckForTimeOut+0x74>)
 800a05a:	682e      	ldr	r6, [r5, #0]
 800a05c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a05e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a060:	4286      	cmp	r6, r0
 800a062:	d001      	beq.n	800a068 <xTaskCheckForTimeOut+0x4c>
 800a064:	428a      	cmp	r2, r1
 800a066:	d90f      	bls.n	800a088 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a068:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a06a:	4283      	cmp	r3, r0
 800a06c:	d90a      	bls.n	800a084 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a06e:	1a5b      	subs	r3, r3, r1
 800a070:	4413      	add	r3, r2
 800a072:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a074:	4628      	mov	r0, r5
 800a076:	f7ff ffc5 	bl	800a004 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a07a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a07c:	f7fe fd7a 	bl	8008b74 <vPortExitCritical>
}
 800a080:	4620      	mov	r0, r4
 800a082:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a084:	2300      	movs	r3, #0
 800a086:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a088:	2401      	movs	r4, #1
 800a08a:	e7f7      	b.n	800a07c <xTaskCheckForTimeOut+0x60>
 800a08c:	200152a4 	.word	0x200152a4
 800a090:	20015260 	.word	0x20015260

0800a094 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a094:	4b01      	ldr	r3, [pc, #4]	; (800a09c <vTaskMissedYield+0x8>)
 800a096:	2201      	movs	r2, #1
 800a098:	601a      	str	r2, [r3, #0]
}
 800a09a:	4770      	bx	lr
 800a09c:	200152a8 	.word	0x200152a8

0800a0a0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a0a0:	4b05      	ldr	r3, [pc, #20]	; (800a0b8 <xTaskGetSchedulerState+0x18>)
 800a0a2:	681b      	ldr	r3, [r3, #0]
 800a0a4:	b133      	cbz	r3, 800a0b4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a0a6:	4b05      	ldr	r3, [pc, #20]	; (800a0bc <xTaskGetSchedulerState+0x1c>)
 800a0a8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a0aa:	2b00      	cmp	r3, #0
 800a0ac:	bf0c      	ite	eq
 800a0ae:	2002      	moveq	r0, #2
 800a0b0:	2000      	movne	r0, #0
 800a0b2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a0b4:	2001      	movs	r0, #1
	}
 800a0b6:	4770      	bx	lr
 800a0b8:	20015278 	.word	0x20015278
 800a0bc:	20015228 	.word	0x20015228

0800a0c0 <xTaskPriorityInherit>:
	{
 800a0c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a0c2:	4604      	mov	r4, r0
 800a0c4:	b348      	cbz	r0, 800a11a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a0c6:	4d1c      	ldr	r5, [pc, #112]	; (800a138 <xTaskPriorityInherit+0x78>)
 800a0c8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a0ca:	682a      	ldr	r2, [r5, #0]
 800a0cc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a0ce:	4293      	cmp	r3, r2
 800a0d0:	d229      	bcs.n	800a126 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a0d2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a0d4:	4e19      	ldr	r6, [pc, #100]	; (800a13c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a0d6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a0d8:	bfa1      	itttt	ge
 800a0da:	682a      	ldrge	r2, [r5, #0]
 800a0dc:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a0de:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a0e2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a0e4:	2214      	movs	r2, #20
 800a0e6:	fb02 6303 	mla	r3, r2, r3, r6
 800a0ea:	6942      	ldr	r2, [r0, #20]
 800a0ec:	429a      	cmp	r2, r3
 800a0ee:	d116      	bne.n	800a11e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a0f0:	1d01      	adds	r1, r0, #4
 800a0f2:	4608      	mov	r0, r1
 800a0f4:	9101      	str	r1, [sp, #4]
 800a0f6:	f7fe fca2 	bl	8008a3e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a0fa:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a0fc:	4a10      	ldr	r2, [pc, #64]	; (800a140 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a0fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a100:	6810      	ldr	r0, [r2, #0]
 800a102:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a104:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a106:	4283      	cmp	r3, r0
 800a108:	f04f 0014 	mov.w	r0, #20
 800a10c:	fb00 6003 	mla	r0, r0, r3, r6
 800a110:	bf88      	it	hi
 800a112:	6013      	strhi	r3, [r2, #0]
 800a114:	f7fe fc70 	bl	80089f8 <vListInsertEnd>
				xReturn = pdTRUE;
 800a118:	2001      	movs	r0, #1
	}
 800a11a:	b002      	add	sp, #8
 800a11c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a11e:	682b      	ldr	r3, [r5, #0]
 800a120:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a122:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a124:	e7f8      	b.n	800a118 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a126:	682b      	ldr	r3, [r5, #0]
 800a128:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a12a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a12c:	42a0      	cmp	r0, r4
 800a12e:	bf2c      	ite	cs
 800a130:	2000      	movcs	r0, #0
 800a132:	2001      	movcc	r0, #1
 800a134:	e7f1      	b.n	800a11a <xTaskPriorityInherit+0x5a>
 800a136:	bf00      	nop
 800a138:	20014db0 	.word	0x20014db0
 800a13c:	20014dbc 	.word	0x20014dbc
 800a140:	20015230 	.word	0x20015230

0800a144 <xTaskPriorityDisinherit>:
	{
 800a144:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a146:	b910      	cbnz	r0, 800a14e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a148:	2000      	movs	r0, #0
	}
 800a14a:	b002      	add	sp, #8
 800a14c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a14e:	4b1c      	ldr	r3, [pc, #112]	; (800a1c0 <xTaskPriorityDisinherit+0x7c>)
 800a150:	681c      	ldr	r4, [r3, #0]
 800a152:	4284      	cmp	r4, r0
 800a154:	d008      	beq.n	800a168 <xTaskPriorityDisinherit+0x24>
 800a156:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a15a:	f383 8811 	msr	BASEPRI, r3
 800a15e:	f3bf 8f6f 	isb	sy
 800a162:	f3bf 8f4f 	dsb	sy
 800a166:	e7fe      	b.n	800a166 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a168:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a16a:	b943      	cbnz	r3, 800a17e <xTaskPriorityDisinherit+0x3a>
 800a16c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a170:	f383 8811 	msr	BASEPRI, r3
 800a174:	f3bf 8f6f 	isb	sy
 800a178:	f3bf 8f4f 	dsb	sy
 800a17c:	e7fe      	b.n	800a17c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a17e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a180:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a182:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a184:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a186:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a188:	d0de      	beq.n	800a148 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a18a:	2b00      	cmp	r3, #0
 800a18c:	d1dc      	bne.n	800a148 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a18e:	1d21      	adds	r1, r4, #4
 800a190:	4608      	mov	r0, r1
 800a192:	9101      	str	r1, [sp, #4]
 800a194:	f7fe fc53 	bl	8008a3e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a198:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a19a:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a19c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a19e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a1a2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a1a4:	4a07      	ldr	r2, [pc, #28]	; (800a1c4 <xTaskPriorityDisinherit+0x80>)
 800a1a6:	6810      	ldr	r0, [r2, #0]
 800a1a8:	4283      	cmp	r3, r0
 800a1aa:	bf88      	it	hi
 800a1ac:	6013      	strhi	r3, [r2, #0]
 800a1ae:	4a06      	ldr	r2, [pc, #24]	; (800a1c8 <xTaskPriorityDisinherit+0x84>)
 800a1b0:	2014      	movs	r0, #20
 800a1b2:	fb00 2003 	mla	r0, r0, r3, r2
 800a1b6:	f7fe fc1f 	bl	80089f8 <vListInsertEnd>
					xReturn = pdTRUE;
 800a1ba:	2001      	movs	r0, #1
		return xReturn;
 800a1bc:	e7c5      	b.n	800a14a <xTaskPriorityDisinherit+0x6>
 800a1be:	bf00      	nop
 800a1c0:	20014db0 	.word	0x20014db0
 800a1c4:	20015230 	.word	0x20015230
 800a1c8:	20014dbc 	.word	0x20014dbc

0800a1cc <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a1cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a1ce:	4604      	mov	r4, r0
 800a1d0:	2800      	cmp	r0, #0
 800a1d2:	d044      	beq.n	800a25e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a1d4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a1d6:	b942      	cbnz	r2, 800a1ea <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a1d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1dc:	f383 8811 	msr	BASEPRI, r3
 800a1e0:	f3bf 8f6f 	isb	sy
 800a1e4:	f3bf 8f4f 	dsb	sy
 800a1e8:	e7fe      	b.n	800a1e8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a1ea:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a1ec:	4299      	cmp	r1, r3
 800a1ee:	bf38      	it	cc
 800a1f0:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a1f2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a1f4:	428b      	cmp	r3, r1
 800a1f6:	d032      	beq.n	800a25e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a1f8:	2a01      	cmp	r2, #1
 800a1fa:	d130      	bne.n	800a25e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a1fc:	4a19      	ldr	r2, [pc, #100]	; (800a264 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a1fe:	6812      	ldr	r2, [r2, #0]
 800a200:	4282      	cmp	r2, r0
 800a202:	d108      	bne.n	800a216 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a204:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a208:	f383 8811 	msr	BASEPRI, r3
 800a20c:	f3bf 8f6f 	isb	sy
 800a210:	f3bf 8f4f 	dsb	sy
 800a214:	e7fe      	b.n	800a214 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a216:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a218:	4d13      	ldr	r5, [pc, #76]	; (800a268 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a21a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a21c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a21e:	f04f 0214 	mov.w	r2, #20
 800a222:	fb02 5303 	mla	r3, r2, r3, r5
 800a226:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a228:	bfa4      	itt	ge
 800a22a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a22e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a230:	429a      	cmp	r2, r3
 800a232:	d114      	bne.n	800a25e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a234:	1d01      	adds	r1, r0, #4
 800a236:	4608      	mov	r0, r1
 800a238:	9101      	str	r1, [sp, #4]
 800a23a:	f7fe fc00 	bl	8008a3e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a23e:	4a0b      	ldr	r2, [pc, #44]	; (800a26c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a240:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a242:	6810      	ldr	r0, [r2, #0]
 800a244:	9901      	ldr	r1, [sp, #4]
 800a246:	4283      	cmp	r3, r0
 800a248:	f04f 0014 	mov.w	r0, #20
 800a24c:	fb00 5003 	mla	r0, r0, r3, r5
 800a250:	bf88      	it	hi
 800a252:	6013      	strhi	r3, [r2, #0]
	}
 800a254:	b003      	add	sp, #12
 800a256:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a25a:	f7fe bbcd 	b.w	80089f8 <vListInsertEnd>
	}
 800a25e:	b003      	add	sp, #12
 800a260:	bd30      	pop	{r4, r5, pc}
 800a262:	bf00      	nop
 800a264:	20014db0 	.word	0x20014db0
 800a268:	20014dbc 	.word	0x20014dbc
 800a26c:	20015230 	.word	0x20015230

0800a270 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a270:	4b04      	ldr	r3, [pc, #16]	; (800a284 <pvTaskIncrementMutexHeldCount+0x14>)
 800a272:	681a      	ldr	r2, [r3, #0]
 800a274:	b11a      	cbz	r2, 800a27e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a276:	6819      	ldr	r1, [r3, #0]
 800a278:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a27a:	3201      	adds	r2, #1
 800a27c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a27e:	6818      	ldr	r0, [r3, #0]
	}
 800a280:	4770      	bx	lr
 800a282:	bf00      	nop
 800a284:	20014db0 	.word	0x20014db0

0800a288 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a288:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a28a:	4c11      	ldr	r4, [pc, #68]	; (800a2d0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a28c:	f7fe fc52 	bl	8008b34 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a290:	6825      	ldr	r5, [r4, #0]
 800a292:	b9bd      	cbnz	r5, 800a2c4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a294:	4f0f      	ldr	r7, [pc, #60]	; (800a2d4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a296:	4e10      	ldr	r6, [pc, #64]	; (800a2d8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a298:	4638      	mov	r0, r7
 800a29a:	f7fe fb9f 	bl	80089dc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a29e:	4630      	mov	r0, r6
 800a2a0:	f7fe fb9c 	bl	80089dc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a2a4:	4b0d      	ldr	r3, [pc, #52]	; (800a2dc <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a2a6:	4a0e      	ldr	r2, [pc, #56]	; (800a2e0 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a2a8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a2aa:	4b0e      	ldr	r3, [pc, #56]	; (800a2e4 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a2ac:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a2ae:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a2b0:	200a      	movs	r0, #10
 800a2b2:	4b0d      	ldr	r3, [pc, #52]	; (800a2e8 <prvCheckForValidListAndQueue+0x60>)
 800a2b4:	9500      	str	r5, [sp, #0]
 800a2b6:	f7fe fe4e 	bl	8008f56 <xQueueGenericCreateStatic>
 800a2ba:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a2bc:	b110      	cbz	r0, 800a2c4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a2be:	490b      	ldr	r1, [pc, #44]	; (800a2ec <prvCheckForValidListAndQueue+0x64>)
 800a2c0:	f7ff fa18 	bl	80096f4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a2c4:	b003      	add	sp, #12
 800a2c6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a2ca:	f7fe bc53 	b.w	8008b74 <vPortExitCritical>
 800a2ce:	bf00      	nop
 800a2d0:	200153d0 	.word	0x200153d0
 800a2d4:	20015354 	.word	0x20015354
 800a2d8:	20015368 	.word	0x20015368
 800a2dc:	200152ac 	.word	0x200152ac
 800a2e0:	200152b4 	.word	0x200152b4
 800a2e4:	200152b0 	.word	0x200152b0
 800a2e8:	20015380 	.word	0x20015380
 800a2ec:	080233b5 	.word	0x080233b5

0800a2f0 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a2f0:	4291      	cmp	r1, r2
{
 800a2f2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a2f4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a2f6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a2f8:	d80a      	bhi.n	800a310 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2fa:	1ad2      	subs	r2, r2, r3
 800a2fc:	6983      	ldr	r3, [r0, #24]
 800a2fe:	429a      	cmp	r2, r3
 800a300:	d20d      	bcs.n	800a31e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a302:	4b08      	ldr	r3, [pc, #32]	; (800a324 <prvInsertTimerInActiveList+0x34>)
 800a304:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a306:	6818      	ldr	r0, [r3, #0]
 800a308:	f7fe fb82 	bl	8008a10 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a30c:	2000      	movs	r0, #0
}
 800a30e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a310:	429a      	cmp	r2, r3
 800a312:	d201      	bcs.n	800a318 <prvInsertTimerInActiveList+0x28>
 800a314:	4299      	cmp	r1, r3
 800a316:	d202      	bcs.n	800a31e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a318:	4b03      	ldr	r3, [pc, #12]	; (800a328 <prvInsertTimerInActiveList+0x38>)
 800a31a:	1d01      	adds	r1, r0, #4
 800a31c:	e7f3      	b.n	800a306 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a31e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a320:	e7f5      	b.n	800a30e <prvInsertTimerInActiveList+0x1e>
 800a322:	bf00      	nop
 800a324:	200152b0 	.word	0x200152b0
 800a328:	200152ac 	.word	0x200152ac

0800a32c <xTimerCreateTimerTask>:
{
 800a32c:	b510      	push	{r4, lr}
 800a32e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a330:	f7ff ffaa 	bl	800a288 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a334:	4b12      	ldr	r3, [pc, #72]	; (800a380 <xTimerCreateTimerTask+0x54>)
 800a336:	681b      	ldr	r3, [r3, #0]
 800a338:	b1b3      	cbz	r3, 800a368 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a33a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a33c:	aa07      	add	r2, sp, #28
 800a33e:	a906      	add	r1, sp, #24
 800a340:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a342:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a346:	f7fe fa4f 	bl	80087e8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a34a:	9b05      	ldr	r3, [sp, #20]
 800a34c:	9302      	str	r3, [sp, #8]
 800a34e:	9b06      	ldr	r3, [sp, #24]
 800a350:	9301      	str	r3, [sp, #4]
 800a352:	2302      	movs	r3, #2
 800a354:	9300      	str	r3, [sp, #0]
 800a356:	9a07      	ldr	r2, [sp, #28]
 800a358:	490a      	ldr	r1, [pc, #40]	; (800a384 <xTimerCreateTimerTask+0x58>)
 800a35a:	480b      	ldr	r0, [pc, #44]	; (800a388 <xTimerCreateTimerTask+0x5c>)
 800a35c:	4623      	mov	r3, r4
 800a35e:	f7ff fba3 	bl	8009aa8 <xTaskCreateStatic>
 800a362:	4b0a      	ldr	r3, [pc, #40]	; (800a38c <xTimerCreateTimerTask+0x60>)
 800a364:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a366:	b940      	cbnz	r0, 800a37a <xTimerCreateTimerTask+0x4e>
 800a368:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a36c:	f383 8811 	msr	BASEPRI, r3
 800a370:	f3bf 8f6f 	isb	sy
 800a374:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a378:	e7fe      	b.n	800a378 <xTimerCreateTimerTask+0x4c>
}
 800a37a:	2001      	movs	r0, #1
 800a37c:	b008      	add	sp, #32
 800a37e:	bd10      	pop	{r4, pc}
 800a380:	200153d0 	.word	0x200153d0
 800a384:	080233ba 	.word	0x080233ba
 800a388:	0800a495 	.word	0x0800a495
 800a38c:	200153d4 	.word	0x200153d4

0800a390 <xTimerGenericCommand>:
{
 800a390:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a392:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a394:	4604      	mov	r4, r0
{
 800a396:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a398:	b940      	cbnz	r0, 800a3ac <xTimerGenericCommand+0x1c>
 800a39a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a39e:	f383 8811 	msr	BASEPRI, r3
 800a3a2:	f3bf 8f6f 	isb	sy
 800a3a6:	f3bf 8f4f 	dsb	sy
 800a3aa:	e7fe      	b.n	800a3aa <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a3ac:	4d0d      	ldr	r5, [pc, #52]	; (800a3e4 <xTimerGenericCommand+0x54>)
 800a3ae:	6828      	ldr	r0, [r5, #0]
 800a3b0:	b180      	cbz	r0, 800a3d4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a3b2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a3b4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a3b8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a3ba:	dc0d      	bgt.n	800a3d8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a3bc:	f7ff fe70 	bl	800a0a0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a3c0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a3c2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a3c4:	bf08      	it	eq
 800a3c6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a3c8:	6828      	ldr	r0, [r5, #0]
 800a3ca:	bf18      	it	ne
 800a3cc:	461a      	movne	r2, r3
 800a3ce:	4669      	mov	r1, sp
 800a3d0:	f7fe fe76 	bl	80090c0 <xQueueGenericSend>
}
 800a3d4:	b004      	add	sp, #16
 800a3d6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a3d8:	2300      	movs	r3, #0
 800a3da:	4669      	mov	r1, sp
 800a3dc:	f7fe ff23 	bl	8009226 <xQueueGenericSendFromISR>
 800a3e0:	e7f8      	b.n	800a3d4 <xTimerGenericCommand+0x44>
 800a3e2:	bf00      	nop
 800a3e4:	200153d0 	.word	0x200153d0

0800a3e8 <prvSampleTimeNow>:
{
 800a3e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a3ec:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a490 <prvSampleTimeNow+0xa8>
{
 800a3f0:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a3f2:	f7ff fc17 	bl	8009c24 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a3f6:	f8d8 3000 	ldr.w	r3, [r8]
 800a3fa:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a3fc:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a3fe:	d940      	bls.n	800a482 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a400:	4f21      	ldr	r7, [pc, #132]	; (800a488 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a402:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a406:	683b      	ldr	r3, [r7, #0]
 800a408:	681a      	ldr	r2, [r3, #0]
 800a40a:	b95a      	cbnz	r2, 800a424 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a40c:	4a1f      	ldr	r2, [pc, #124]	; (800a48c <prvSampleTimeNow+0xa4>)
 800a40e:	6811      	ldr	r1, [r2, #0]
 800a410:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a412:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a414:	2301      	movs	r3, #1
}
 800a416:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a418:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a41a:	f8c8 5000 	str.w	r5, [r8]
}
 800a41e:	b004      	add	sp, #16
 800a420:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a424:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a426:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a428:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a42c:	1d21      	adds	r1, r4, #4
 800a42e:	4608      	mov	r0, r1
 800a430:	9103      	str	r1, [sp, #12]
 800a432:	f7fe fb04 	bl	8008a3e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a436:	6a23      	ldr	r3, [r4, #32]
 800a438:	4620      	mov	r0, r4
 800a43a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a43c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a440:	9903      	ldr	r1, [sp, #12]
 800a442:	f013 0f04 	tst.w	r3, #4
 800a446:	d0de      	beq.n	800a406 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a448:	69a3      	ldr	r3, [r4, #24]
 800a44a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a44c:	459a      	cmp	sl, r3
 800a44e:	d205      	bcs.n	800a45c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a450:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a452:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a454:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a456:	f7fe fadb 	bl	8008a10 <vListInsert>
 800a45a:	e7d4      	b.n	800a406 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a45c:	2300      	movs	r3, #0
 800a45e:	f8cd 9000 	str.w	r9, [sp]
 800a462:	4652      	mov	r2, sl
 800a464:	4619      	mov	r1, r3
 800a466:	4620      	mov	r0, r4
 800a468:	f7ff ff92 	bl	800a390 <xTimerGenericCommand>
				configASSERT( xResult );
 800a46c:	2800      	cmp	r0, #0
 800a46e:	d1ca      	bne.n	800a406 <prvSampleTimeNow+0x1e>
 800a470:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a474:	f383 8811 	msr	BASEPRI, r3
 800a478:	f3bf 8f6f 	isb	sy
 800a47c:	f3bf 8f4f 	dsb	sy
 800a480:	e7fe      	b.n	800a480 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a482:	2300      	movs	r3, #0
 800a484:	e7c7      	b.n	800a416 <prvSampleTimeNow+0x2e>
 800a486:	bf00      	nop
 800a488:	200152ac 	.word	0x200152ac
 800a48c:	200152b0 	.word	0x200152b0
 800a490:	2001537c 	.word	0x2001537c

0800a494 <prvTimerTask>:
{
 800a494:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a498:	4d6e      	ldr	r5, [pc, #440]	; (800a654 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a49a:	4e6f      	ldr	r6, [pc, #444]	; (800a658 <prvTimerTask+0x1c4>)
{
 800a49c:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a49e:	682b      	ldr	r3, [r5, #0]
 800a4a0:	f8d3 8000 	ldr.w	r8, [r3]
 800a4a4:	f1b8 0f00 	cmp.w	r8, #0
 800a4a8:	d035      	beq.n	800a516 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a4aa:	68db      	ldr	r3, [r3, #12]
 800a4ac:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a4b0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a4b2:	f7ff fbaf 	bl	8009c14 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a4b6:	a804      	add	r0, sp, #16
 800a4b8:	f7ff ff96 	bl	800a3e8 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a4bc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a4be:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a4c0:	2b00      	cmp	r3, #0
 800a4c2:	d169      	bne.n	800a598 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a4c4:	2c00      	cmp	r4, #0
 800a4c6:	d14c      	bne.n	800a562 <prvTimerTask+0xce>
 800a4c8:	4540      	cmp	r0, r8
 800a4ca:	d350      	bcc.n	800a56e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a4cc:	f7ff fc46 	bl	8009d5c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4d0:	682b      	ldr	r3, [r5, #0]
 800a4d2:	68db      	ldr	r3, [r3, #12]
 800a4d4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a4d6:	1d38      	adds	r0, r7, #4
 800a4d8:	f7fe fab1 	bl	8008a3e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a4dc:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a4e0:	0758      	lsls	r0, r3, #29
 800a4e2:	d51a      	bpl.n	800a51a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a4e4:	69b9      	ldr	r1, [r7, #24]
 800a4e6:	4643      	mov	r3, r8
 800a4e8:	464a      	mov	r2, r9
 800a4ea:	4441      	add	r1, r8
 800a4ec:	4638      	mov	r0, r7
 800a4ee:	f7ff feff 	bl	800a2f0 <prvInsertTimerInActiveList>
 800a4f2:	b1b0      	cbz	r0, 800a522 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a4f4:	9400      	str	r4, [sp, #0]
 800a4f6:	4623      	mov	r3, r4
 800a4f8:	4642      	mov	r2, r8
 800a4fa:	4621      	mov	r1, r4
 800a4fc:	4638      	mov	r0, r7
 800a4fe:	f7ff ff47 	bl	800a390 <xTimerGenericCommand>
			configASSERT( xResult );
 800a502:	b970      	cbnz	r0, 800a522 <prvTimerTask+0x8e>
 800a504:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a508:	f383 8811 	msr	BASEPRI, r3
 800a50c:	f3bf 8f6f 	isb	sy
 800a510:	f3bf 8f4f 	dsb	sy
 800a514:	e7fe      	b.n	800a514 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a516:	2401      	movs	r4, #1
 800a518:	e7cb      	b.n	800a4b2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a51a:	f023 0301 	bic.w	r3, r3, #1
 800a51e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a522:	6a3b      	ldr	r3, [r7, #32]
 800a524:	4638      	mov	r0, r7
 800a526:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a528:	6830      	ldr	r0, [r6, #0]
 800a52a:	2200      	movs	r2, #0
 800a52c:	a904      	add	r1, sp, #16
 800a52e:	f7fe ff2f 	bl	8009390 <xQueueReceive>
 800a532:	2800      	cmp	r0, #0
 800a534:	d0b3      	beq.n	800a49e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a536:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a538:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a53a:	2b00      	cmp	r3, #0
 800a53c:	db2f      	blt.n	800a59e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a53e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a540:	6963      	ldr	r3, [r4, #20]
 800a542:	2b00      	cmp	r3, #0
 800a544:	d132      	bne.n	800a5ac <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a546:	a803      	add	r0, sp, #12
 800a548:	f7ff ff4e 	bl	800a3e8 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a54c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a54e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a550:	2b09      	cmp	r3, #9
 800a552:	d8e9      	bhi.n	800a528 <prvTimerTask+0x94>
 800a554:	e8df f003 	tbb	[pc, r3]
 800a558:	572e2e2e 	.word	0x572e2e2e
 800a55c:	2e2e765e 	.word	0x2e2e765e
 800a560:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a562:	4b3e      	ldr	r3, [pc, #248]	; (800a65c <prvTimerTask+0x1c8>)
 800a564:	681b      	ldr	r3, [r3, #0]
 800a566:	681c      	ldr	r4, [r3, #0]
 800a568:	fab4 f484 	clz	r4, r4
 800a56c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a56e:	6830      	ldr	r0, [r6, #0]
 800a570:	4622      	mov	r2, r4
 800a572:	eba8 0109 	sub.w	r1, r8, r9
 800a576:	f7ff f8fa 	bl	800976e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a57a:	f7ff fbef 	bl	8009d5c <xTaskResumeAll>
 800a57e:	2800      	cmp	r0, #0
 800a580:	d1d2      	bne.n	800a528 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a582:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a586:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a58a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a58e:	f3bf 8f4f 	dsb	sy
 800a592:	f3bf 8f6f 	isb	sy
 800a596:	e7c7      	b.n	800a528 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a598:	f7ff fbe0 	bl	8009d5c <xTaskResumeAll>
}
 800a59c:	e7c4      	b.n	800a528 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a59e:	9b05      	ldr	r3, [sp, #20]
 800a5a0:	9907      	ldr	r1, [sp, #28]
 800a5a2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a5a4:	9b04      	ldr	r3, [sp, #16]
 800a5a6:	2b00      	cmp	r3, #0
 800a5a8:	dbbe      	blt.n	800a528 <prvTimerTask+0x94>
 800a5aa:	e7c8      	b.n	800a53e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a5ac:	1d20      	adds	r0, r4, #4
 800a5ae:	f7fe fa46 	bl	8008a3e <uxListRemove>
 800a5b2:	e7c8      	b.n	800a546 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a5b4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a5b8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a5ba:	f043 0301 	orr.w	r3, r3, #1
 800a5be:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a5c2:	9b05      	ldr	r3, [sp, #20]
 800a5c4:	4620      	mov	r0, r4
 800a5c6:	4419      	add	r1, r3
 800a5c8:	f7ff fe92 	bl	800a2f0 <prvInsertTimerInActiveList>
 800a5cc:	2800      	cmp	r0, #0
 800a5ce:	d0ab      	beq.n	800a528 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a5d0:	6a23      	ldr	r3, [r4, #32]
 800a5d2:	4620      	mov	r0, r4
 800a5d4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a5d6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a5da:	0759      	lsls	r1, r3, #29
 800a5dc:	d5a4      	bpl.n	800a528 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a5de:	69a2      	ldr	r2, [r4, #24]
 800a5e0:	9905      	ldr	r1, [sp, #20]
 800a5e2:	2300      	movs	r3, #0
 800a5e4:	440a      	add	r2, r1
 800a5e6:	9300      	str	r3, [sp, #0]
 800a5e8:	4619      	mov	r1, r3
 800a5ea:	4620      	mov	r0, r4
 800a5ec:	f7ff fed0 	bl	800a390 <xTimerGenericCommand>
							configASSERT( xResult );
 800a5f0:	2800      	cmp	r0, #0
 800a5f2:	d199      	bne.n	800a528 <prvTimerTask+0x94>
 800a5f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5f8:	f383 8811 	msr	BASEPRI, r3
 800a5fc:	f3bf 8f6f 	isb	sy
 800a600:	f3bf 8f4f 	dsb	sy
 800a604:	e7fe      	b.n	800a604 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a606:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a60a:	f023 0301 	bic.w	r3, r3, #1
 800a60e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a612:	e789      	b.n	800a528 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a614:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a618:	f043 0301 	orr.w	r3, r3, #1
 800a61c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a620:	9905      	ldr	r1, [sp, #20]
 800a622:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a624:	b941      	cbnz	r1, 800a638 <prvTimerTask+0x1a4>
 800a626:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a62a:	f383 8811 	msr	BASEPRI, r3
 800a62e:	f3bf 8f6f 	isb	sy
 800a632:	f3bf 8f4f 	dsb	sy
 800a636:	e7fe      	b.n	800a636 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a638:	4603      	mov	r3, r0
 800a63a:	4401      	add	r1, r0
 800a63c:	4620      	mov	r0, r4
 800a63e:	f7ff fe57 	bl	800a2f0 <prvInsertTimerInActiveList>
					break;
 800a642:	e771      	b.n	800a528 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a644:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a648:	079a      	lsls	r2, r3, #30
 800a64a:	d4de      	bmi.n	800a60a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a64c:	4620      	mov	r0, r4
 800a64e:	f7fe f98d 	bl	800896c <vPortFree>
 800a652:	e769      	b.n	800a528 <prvTimerTask+0x94>
 800a654:	200152ac 	.word	0x200152ac
 800a658:	200153d0 	.word	0x200153d0
 800a65c:	200152b0 	.word	0x200152b0

0800a660 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a660:	8880      	ldrh	r0, [r0, #4]
 800a662:	4770      	bx	lr

0800a664 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a664:	b570      	push	{r4, r5, r6, lr}
 800a666:	6803      	ldr	r3, [r0, #0]
 800a668:	4605      	mov	r5, r0
 800a66a:	460c      	mov	r4, r1
 800a66c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a66e:	2100      	movs	r1, #0
 800a670:	4798      	blx	r3
 800a672:	682b      	ldr	r3, [r5, #0]
 800a674:	4606      	mov	r6, r0
 800a676:	6a1b      	ldr	r3, [r3, #32]
 800a678:	4628      	mov	r0, r5
 800a67a:	4798      	blx	r3
 800a67c:	1ba4      	subs	r4, r4, r6
 800a67e:	b2a4      	uxth	r4, r4
 800a680:	fbb4 f0f0 	udiv	r0, r4, r0
 800a684:	bd70      	pop	{r4, r5, r6, pc}

0800a686 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a686:	2300      	movs	r3, #0
 800a688:	8083      	strh	r3, [r0, #4]
 800a68a:	4770      	bx	lr

0800a68c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a68c:	b510      	push	{r4, lr}
 800a68e:	6803      	ldr	r3, [r0, #0]
 800a690:	8881      	ldrh	r1, [r0, #4]
 800a692:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a694:	4604      	mov	r4, r0
 800a696:	4798      	blx	r3
 800a698:	88a3      	ldrh	r3, [r4, #4]
 800a69a:	3301      	adds	r3, #1
 800a69c:	80a3      	strh	r3, [r4, #4]
 800a69e:	bd10      	pop	{r4, pc}

0800a6a0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a6a0:	6803      	ldr	r3, [r0, #0]
 800a6a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a6a4:	4718      	bx	r3

0800a6a6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a6a6:	4770      	bx	lr

0800a6a8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a6a8:	4a02      	ldr	r2, [pc, #8]	; (800a6b4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a6aa:	6002      	str	r2, [r0, #0]
 800a6ac:	2200      	movs	r2, #0
 800a6ae:	8082      	strh	r2, [r0, #4]
 800a6b0:	4770      	bx	lr
 800a6b2:	bf00      	nop
 800a6b4:	080233cc 	.word	0x080233cc

0800a6b8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a6b8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a6ba:	2000      	movs	r0, #0
 800a6bc:	b12b      	cbz	r3, 800a6ca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a6be:	b920      	cbnz	r0, 800a6ca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a6c0:	1a5a      	subs	r2, r3, r1
 800a6c2:	4250      	negs	r0, r2
 800a6c4:	4150      	adcs	r0, r2
 800a6c6:	699b      	ldr	r3, [r3, #24]
 800a6c8:	e7f8      	b.n	800a6bc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a6ca:	4770      	bx	lr

0800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a6cc:	2300      	movs	r3, #0
 800a6ce:	6148      	str	r0, [r1, #20]
 800a6d0:	618b      	str	r3, [r1, #24]
 800a6d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a6d4:	b913      	cbnz	r3, 800a6dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a6d6:	6281      	str	r1, [r0, #40]	; 0x28
 800a6d8:	4770      	bx	lr
 800a6da:	4613      	mov	r3, r2
 800a6dc:	699a      	ldr	r2, [r3, #24]
 800a6de:	2a00      	cmp	r2, #0
 800a6e0:	d1fb      	bne.n	800a6da <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a6e2:	6199      	str	r1, [r3, #24]
 800a6e4:	4770      	bx	lr

0800a6e6 <_ZN8touchgfx9Container9removeAllEv>:
 800a6e6:	2200      	movs	r2, #0
 800a6e8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a6ea:	b123      	cbz	r3, 800a6f6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a6ec:	6999      	ldr	r1, [r3, #24]
 800a6ee:	6281      	str	r1, [r0, #40]	; 0x28
 800a6f0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a6f4:	e7f8      	b.n	800a6e8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a6f6:	4770      	bx	lr

0800a6f8 <_ZN8touchgfx9Container6unlinkEv>:
 800a6f8:	2300      	movs	r3, #0
 800a6fa:	6283      	str	r3, [r0, #40]	; 0x28
 800a6fc:	4770      	bx	lr

0800a6fe <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a6fe:	2200      	movs	r2, #0
 800a700:	8002      	strh	r2, [r0, #0]
 800a702:	8042      	strh	r2, [r0, #2]
 800a704:	8082      	strh	r2, [r0, #4]
 800a706:	80c2      	strh	r2, [r0, #6]
 800a708:	4770      	bx	lr

0800a70a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a70a:	b570      	push	{r4, r5, r6, lr}
 800a70c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a70e:	460d      	mov	r5, r1
 800a710:	4616      	mov	r6, r2
 800a712:	b13c      	cbz	r4, 800a724 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a714:	6823      	ldr	r3, [r4, #0]
 800a716:	4620      	mov	r0, r4
 800a718:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a71a:	4632      	mov	r2, r6
 800a71c:	4629      	mov	r1, r5
 800a71e:	4798      	blx	r3
 800a720:	69a4      	ldr	r4, [r4, #24]
 800a722:	e7f6      	b.n	800a712 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a724:	bd70      	pop	{r4, r5, r6, pc}

0800a726 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a726:	b538      	push	{r3, r4, r5, lr}
 800a728:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a72a:	460d      	mov	r5, r1
 800a72c:	b134      	cbz	r4, 800a73c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a72e:	682b      	ldr	r3, [r5, #0]
 800a730:	4621      	mov	r1, r4
 800a732:	689b      	ldr	r3, [r3, #8]
 800a734:	4628      	mov	r0, r5
 800a736:	4798      	blx	r3
 800a738:	69a4      	ldr	r4, [r4, #24]
 800a73a:	e7f7      	b.n	800a72c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a73c:	bd38      	pop	{r3, r4, r5, pc}

0800a73e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800a73e:	b510      	push	{r4, lr}
 800a740:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a742:	b12c      	cbz	r4, 800a750 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800a744:	6823      	ldr	r3, [r4, #0]
 800a746:	4620      	mov	r0, r4
 800a748:	699b      	ldr	r3, [r3, #24]
 800a74a:	4798      	blx	r3
 800a74c:	69a4      	ldr	r4, [r4, #24]
 800a74e:	e7f8      	b.n	800a742 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800a750:	bd10      	pop	{r4, pc}

0800a752 <_ZN8touchgfx9ContainerD1Ev>:
 800a752:	4770      	bx	lr

0800a754 <_ZN8touchgfx9ContainerD0Ev>:
 800a754:	b510      	push	{r4, lr}
 800a756:	212c      	movs	r1, #44	; 0x2c
 800a758:	4604      	mov	r4, r0
 800a75a:	f015 fe03 	bl	8020364 <_ZdlPvj>
 800a75e:	4620      	mov	r0, r4
 800a760:	bd10      	pop	{r4, pc}

0800a762 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a762:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a764:	b19b      	cbz	r3, 800a78e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a766:	428b      	cmp	r3, r1
 800a768:	d109      	bne.n	800a77e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a76a:	699a      	ldr	r2, [r3, #24]
 800a76c:	2100      	movs	r1, #0
 800a76e:	6159      	str	r1, [r3, #20]
 800a770:	6282      	str	r2, [r0, #40]	; 0x28
 800a772:	b902      	cbnz	r2, 800a776 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a774:	4770      	bx	lr
 800a776:	6199      	str	r1, [r3, #24]
 800a778:	4770      	bx	lr
 800a77a:	4613      	mov	r3, r2
 800a77c:	b13a      	cbz	r2, 800a78e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a77e:	699a      	ldr	r2, [r3, #24]
 800a780:	428a      	cmp	r2, r1
 800a782:	d1fa      	bne.n	800a77a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a784:	698a      	ldr	r2, [r1, #24]
 800a786:	619a      	str	r2, [r3, #24]
 800a788:	2300      	movs	r3, #0
 800a78a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a78e:	4770      	bx	lr

0800a790 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a790:	b410      	push	{r4}
 800a792:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a794:	4604      	mov	r4, r0
 800a796:	b92b      	cbnz	r3, 800a7a4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a798:	6803      	ldr	r3, [r0, #0]
 800a79a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a79e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a7a0:	4611      	mov	r1, r2
 800a7a2:	4718      	bx	r3
 800a7a4:	b941      	cbnz	r1, 800a7b8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a7a6:	6193      	str	r3, [r2, #24]
 800a7a8:	6282      	str	r2, [r0, #40]	; 0x28
 800a7aa:	6154      	str	r4, [r2, #20]
 800a7ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a7b0:	4770      	bx	lr
 800a7b2:	4603      	mov	r3, r0
 800a7b4:	2800      	cmp	r0, #0
 800a7b6:	d0f9      	beq.n	800a7ac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a7b8:	4299      	cmp	r1, r3
 800a7ba:	6998      	ldr	r0, [r3, #24]
 800a7bc:	d1f9      	bne.n	800a7b2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a7be:	6190      	str	r0, [r2, #24]
 800a7c0:	618a      	str	r2, [r1, #24]
 800a7c2:	e7f2      	b.n	800a7aa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a7c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a7c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a7c8:	461f      	mov	r7, r3
 800a7ca:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a7ce:	460d      	mov	r5, r1
 800a7d0:	4616      	mov	r6, r2
 800a7d2:	b103      	cbz	r3, 800a7d6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a7d4:	6038      	str	r0, [r7, #0]
 800a7d6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a7d8:	b314      	cbz	r4, 800a820 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a7da:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a7de:	b1eb      	cbz	r3, 800a81c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a7e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a7e4:	428d      	cmp	r5, r1
 800a7e6:	db19      	blt.n	800a81c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a7e8:	8923      	ldrh	r3, [r4, #8]
 800a7ea:	b289      	uxth	r1, r1
 800a7ec:	440b      	add	r3, r1
 800a7ee:	b21b      	sxth	r3, r3
 800a7f0:	429d      	cmp	r5, r3
 800a7f2:	da13      	bge.n	800a81c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a7f4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a7f8:	4296      	cmp	r6, r2
 800a7fa:	db0f      	blt.n	800a81c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a7fc:	8963      	ldrh	r3, [r4, #10]
 800a7fe:	b292      	uxth	r2, r2
 800a800:	4413      	add	r3, r2
 800a802:	b21b      	sxth	r3, r3
 800a804:	429e      	cmp	r6, r3
 800a806:	da09      	bge.n	800a81c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a808:	6823      	ldr	r3, [r4, #0]
 800a80a:	1ab2      	subs	r2, r6, r2
 800a80c:	1a69      	subs	r1, r5, r1
 800a80e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800a812:	b212      	sxth	r2, r2
 800a814:	463b      	mov	r3, r7
 800a816:	b209      	sxth	r1, r1
 800a818:	4620      	mov	r0, r4
 800a81a:	47c0      	blx	r8
 800a81c:	69a4      	ldr	r4, [r4, #24]
 800a81e:	e7db      	b.n	800a7d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a820:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a824 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a828:	4c6e      	ldr	r4, [pc, #440]	; (800a9e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a82a:	b0a1      	sub	sp, #132	; 0x84
 800a82c:	6824      	ldr	r4, [r4, #0]
 800a82e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800a830:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800a834:	9303      	str	r3, [sp, #12]
 800a836:	2400      	movs	r4, #0
 800a838:	802c      	strh	r4, [r5, #0]
 800a83a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800a83c:	802c      	strh	r4, [r5, #0]
 800a83e:	601c      	str	r4, [r3, #0]
 800a840:	4606      	mov	r6, r0
 800a842:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a846:	f7ff ffbd 	bl	800a7c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a84a:	f1b9 0f03 	cmp.w	r9, #3
 800a84e:	f340 80c2 	ble.w	800a9d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a852:	4631      	mov	r1, r6
 800a854:	a80c      	add	r0, sp, #48	; 0x30
 800a856:	f007 fa9b 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a85a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800a85e:	9306      	str	r3, [sp, #24]
 800a860:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800a864:	9307      	str	r3, [sp, #28]
 800a866:	9b03      	ldr	r3, [sp, #12]
 800a868:	f8d3 a000 	ldr.w	sl, [r3]
 800a86c:	f1ba 0f00 	cmp.w	sl, #0
 800a870:	f000 80b4 	beq.w	800a9dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a874:	4651      	mov	r1, sl
 800a876:	a810      	add	r0, sp, #64	; 0x40
 800a878:	f007 fa8a 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a87c:	9b01      	ldr	r3, [sp, #4]
 800a87e:	9a06      	ldr	r2, [sp, #24]
 800a880:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800a884:	189d      	adds	r5, r3, r2
 800a886:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800a88a:	9a07      	ldr	r2, [sp, #28]
 800a88c:	2002      	movs	r0, #2
 800a88e:	fb91 f1f0 	sdiv	r1, r1, r0
 800a892:	4419      	add	r1, r3
 800a894:	1a6d      	subs	r5, r5, r1
 800a896:	9b02      	ldr	r3, [sp, #8]
 800a898:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800a89c:	4413      	add	r3, r2
 800a89e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800a8a2:	fb92 f2f0 	sdiv	r2, r2, r0
 800a8a6:	440a      	add	r2, r1
 800a8a8:	1a9b      	subs	r3, r3, r2
 800a8aa:	435b      	muls	r3, r3
 800a8ac:	fb05 3505 	mla	r5, r5, r5, r3
 800a8b0:	4f4d      	ldr	r7, [pc, #308]	; (800a9e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800a8b2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a8b4:	ac10      	add	r4, sp, #64	; 0x40
 800a8b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a8b8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a8ba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a8bc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a8be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a8c0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a8c4:	f1b9 0f0c 	cmp.w	r9, #12
 800a8c8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a8cc:	f04f 0303 	mov.w	r3, #3
 800a8d0:	bfc8      	it	gt
 800a8d2:	4698      	movgt	r8, r3
 800a8d4:	f8cd 9000 	str.w	r9, [sp]
 800a8d8:	f04f 0400 	mov.w	r4, #0
 800a8dc:	bfdc      	itt	le
 800a8de:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a8e2:	fb92 f8f3 	sdivle	r8, r2, r3
 800a8e6:	1c63      	adds	r3, r4, #1
 800a8e8:	aa10      	add	r2, sp, #64	; 0x40
 800a8ea:	f004 0401 	and.w	r4, r4, #1
 800a8ee:	9308      	str	r3, [sp, #32]
 800a8f0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a8f4:	9b00      	ldr	r3, [sp, #0]
 800a8f6:	fb93 f3f8 	sdiv	r3, r3, r8
 800a8fa:	b29b      	uxth	r3, r3
 800a8fc:	3404      	adds	r4, #4
 800a8fe:	f04f 0b00 	mov.w	fp, #0
 800a902:	9304      	str	r3, [sp, #16]
 800a904:	9a04      	ldr	r2, [sp, #16]
 800a906:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a90a:	fb13 f302 	smulbb	r3, r3, r2
 800a90e:	9a01      	ldr	r2, [sp, #4]
 800a910:	b29b      	uxth	r3, r3
 800a912:	1899      	adds	r1, r3, r2
 800a914:	9305      	str	r3, [sp, #20]
 800a916:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a91a:	b209      	sxth	r1, r1
 800a91c:	4299      	cmp	r1, r3
 800a91e:	db4d      	blt.n	800a9bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a920:	8932      	ldrh	r2, [r6, #8]
 800a922:	4413      	add	r3, r2
 800a924:	b21b      	sxth	r3, r3
 800a926:	4299      	cmp	r1, r3
 800a928:	da48      	bge.n	800a9bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a92a:	9b04      	ldr	r3, [sp, #16]
 800a92c:	6827      	ldr	r7, [r4, #0]
 800a92e:	fb17 f703 	smulbb	r7, r7, r3
 800a932:	9b02      	ldr	r3, [sp, #8]
 800a934:	b2bf      	uxth	r7, r7
 800a936:	18fa      	adds	r2, r7, r3
 800a938:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a93c:	b212      	sxth	r2, r2
 800a93e:	429a      	cmp	r2, r3
 800a940:	db3c      	blt.n	800a9bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a942:	8970      	ldrh	r0, [r6, #10]
 800a944:	4403      	add	r3, r0
 800a946:	b21b      	sxth	r3, r3
 800a948:	429a      	cmp	r2, r3
 800a94a:	da37      	bge.n	800a9bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a94c:	2300      	movs	r3, #0
 800a94e:	930b      	str	r3, [sp, #44]	; 0x2c
 800a950:	4630      	mov	r0, r6
 800a952:	ab0b      	add	r3, sp, #44	; 0x2c
 800a954:	f7ff ff36 	bl	800a7c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a958:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a95a:	b37a      	cbz	r2, 800a9bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a95c:	4552      	cmp	r2, sl
 800a95e:	d02d      	beq.n	800a9bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a960:	4611      	mov	r1, r2
 800a962:	a80e      	add	r0, sp, #56	; 0x38
 800a964:	9209      	str	r2, [sp, #36]	; 0x24
 800a966:	f007 fa13 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a96a:	9a06      	ldr	r2, [sp, #24]
 800a96c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800a970:	9b01      	ldr	r3, [sp, #4]
 800a972:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800a976:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800a97a:	4413      	add	r3, r2
 800a97c:	f04f 0e02 	mov.w	lr, #2
 800a980:	fb91 f1fe 	sdiv	r1, r1, lr
 800a984:	4401      	add	r1, r0
 800a986:	1a58      	subs	r0, r3, r1
 800a988:	9a07      	ldr	r2, [sp, #28]
 800a98a:	9b02      	ldr	r3, [sp, #8]
 800a98c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800a990:	fb9c fcfe 	sdiv	ip, ip, lr
 800a994:	4413      	add	r3, r2
 800a996:	448c      	add	ip, r1
 800a998:	eba3 030c 	sub.w	r3, r3, ip
 800a99c:	435b      	muls	r3, r3
 800a99e:	fb00 3300 	mla	r3, r0, r0, r3
 800a9a2:	42ab      	cmp	r3, r5
 800a9a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a9a6:	d208      	bcs.n	800a9ba <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a9a8:	9803      	ldr	r0, [sp, #12]
 800a9aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a9ac:	6001      	str	r1, [r0, #0]
 800a9ae:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800a9b0:	9805      	ldr	r0, [sp, #20]
 800a9b2:	8008      	strh	r0, [r1, #0]
 800a9b4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a9b6:	461d      	mov	r5, r3
 800a9b8:	800f      	strh	r7, [r1, #0]
 800a9ba:	4692      	mov	sl, r2
 800a9bc:	f10b 0b01 	add.w	fp, fp, #1
 800a9c0:	f1bb 0f04 	cmp.w	fp, #4
 800a9c4:	f104 0408 	add.w	r4, r4, #8
 800a9c8:	d19c      	bne.n	800a904 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a9ca:	9b00      	ldr	r3, [sp, #0]
 800a9cc:	9c08      	ldr	r4, [sp, #32]
 800a9ce:	444b      	add	r3, r9
 800a9d0:	4544      	cmp	r4, r8
 800a9d2:	9300      	str	r3, [sp, #0]
 800a9d4:	d187      	bne.n	800a8e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a9d6:	b021      	add	sp, #132	; 0x84
 800a9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a9dc:	f04f 35ff 	mov.w	r5, #4294967295
 800a9e0:	e766      	b.n	800a8b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a9e2:	bf00      	nop
 800a9e4:	200153e4 	.word	0x200153e4
 800a9e8:	0802171c 	.word	0x0802171c

0800a9ec <_ZN8touchgfx4RectaNERKS0_>:
 800a9ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a9f0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a9f4:	888c      	ldrh	r4, [r1, #4]
 800a9f6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a9fa:	443c      	add	r4, r7
 800a9fc:	b2a4      	uxth	r4, r4
 800a9fe:	fa0f f884 	sxth.w	r8, r4
 800aa02:	45c1      	cmp	r9, r8
 800aa04:	da2f      	bge.n	800aa66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aa06:	8882      	ldrh	r2, [r0, #4]
 800aa08:	444a      	add	r2, r9
 800aa0a:	b292      	uxth	r2, r2
 800aa0c:	fa0f fe82 	sxth.w	lr, r2
 800aa10:	4577      	cmp	r7, lr
 800aa12:	da28      	bge.n	800aa66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aa14:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800aa18:	88cb      	ldrh	r3, [r1, #6]
 800aa1a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800aa1e:	442b      	add	r3, r5
 800aa20:	b21b      	sxth	r3, r3
 800aa22:	429e      	cmp	r6, r3
 800aa24:	da1f      	bge.n	800aa66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aa26:	88c3      	ldrh	r3, [r0, #6]
 800aa28:	4433      	add	r3, r6
 800aa2a:	b29b      	uxth	r3, r3
 800aa2c:	fa0f fc83 	sxth.w	ip, r3
 800aa30:	4565      	cmp	r5, ip
 800aa32:	da18      	bge.n	800aa66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aa34:	454f      	cmp	r7, r9
 800aa36:	bfb8      	it	lt
 800aa38:	464f      	movlt	r7, r9
 800aa3a:	42b5      	cmp	r5, r6
 800aa3c:	bfb8      	it	lt
 800aa3e:	4635      	movlt	r5, r6
 800aa40:	45f0      	cmp	r8, lr
 800aa42:	bfd8      	it	le
 800aa44:	4622      	movle	r2, r4
 800aa46:	1bd2      	subs	r2, r2, r7
 800aa48:	8082      	strh	r2, [r0, #4]
 800aa4a:	884a      	ldrh	r2, [r1, #2]
 800aa4c:	88c9      	ldrh	r1, [r1, #6]
 800aa4e:	8007      	strh	r7, [r0, #0]
 800aa50:	440a      	add	r2, r1
 800aa52:	b292      	uxth	r2, r2
 800aa54:	b211      	sxth	r1, r2
 800aa56:	458c      	cmp	ip, r1
 800aa58:	bfa8      	it	ge
 800aa5a:	4613      	movge	r3, r2
 800aa5c:	1b5b      	subs	r3, r3, r5
 800aa5e:	80c3      	strh	r3, [r0, #6]
 800aa60:	8045      	strh	r5, [r0, #2]
 800aa62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa66:	2300      	movs	r3, #0
 800aa68:	8003      	strh	r3, [r0, #0]
 800aa6a:	8043      	strh	r3, [r0, #2]
 800aa6c:	8083      	strh	r3, [r0, #4]
 800aa6e:	80c3      	strh	r3, [r0, #6]
 800aa70:	e7f7      	b.n	800aa62 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800aa72:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800aa76:	2b00      	cmp	r3, #0
 800aa78:	dd06      	ble.n	800aa88 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800aa7a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800aa7e:	2800      	cmp	r0, #0
 800aa80:	bfcc      	ite	gt
 800aa82:	2000      	movgt	r0, #0
 800aa84:	2001      	movle	r0, #1
 800aa86:	4770      	bx	lr
 800aa88:	2001      	movs	r0, #1
 800aa8a:	4770      	bx	lr

0800aa8c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800aa8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa90:	2300      	movs	r3, #0
 800aa92:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800aa94:	8003      	strh	r3, [r0, #0]
 800aa96:	4604      	mov	r4, r0
 800aa98:	8043      	strh	r3, [r0, #2]
 800aa9a:	8083      	strh	r3, [r0, #4]
 800aa9c:	80c3      	strh	r3, [r0, #6]
 800aa9e:	2d00      	cmp	r5, #0
 800aaa0:	d040      	beq.n	800ab24 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800aaa2:	1d28      	adds	r0, r5, #4
 800aaa4:	f7ff ffe5 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aaa8:	b988      	cbnz	r0, 800aace <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800aaaa:	4620      	mov	r0, r4
 800aaac:	f7ff ffe1 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aab0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800aab4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800aab8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800aabc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800aac0:	b138      	cbz	r0, 800aad2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800aac2:	8022      	strh	r2, [r4, #0]
 800aac4:	8063      	strh	r3, [r4, #2]
 800aac6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800aaca:	f8a4 c006 	strh.w	ip, [r4, #6]
 800aace:	69ad      	ldr	r5, [r5, #24]
 800aad0:	e7e5      	b.n	800aa9e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800aad2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800aad6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800aada:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800aade:	4290      	cmp	r0, r2
 800aae0:	4607      	mov	r7, r0
 800aae2:	bfa8      	it	ge
 800aae4:	4617      	movge	r7, r2
 800aae6:	4472      	add	r2, lr
 800aae8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800aaec:	8027      	strh	r7, [r4, #0]
 800aaee:	4299      	cmp	r1, r3
 800aaf0:	460e      	mov	r6, r1
 800aaf2:	4440      	add	r0, r8
 800aaf4:	bfa8      	it	ge
 800aaf6:	461e      	movge	r6, r3
 800aaf8:	4471      	add	r1, lr
 800aafa:	4463      	add	r3, ip
 800aafc:	b200      	sxth	r0, r0
 800aafe:	b212      	sxth	r2, r2
 800ab00:	b209      	sxth	r1, r1
 800ab02:	b21b      	sxth	r3, r3
 800ab04:	4290      	cmp	r0, r2
 800ab06:	bfac      	ite	ge
 800ab08:	ebc7 0200 	rsbge	r2, r7, r0
 800ab0c:	ebc7 0202 	rsblt	r2, r7, r2
 800ab10:	4299      	cmp	r1, r3
 800ab12:	bfac      	ite	ge
 800ab14:	ebc6 0301 	rsbge	r3, r6, r1
 800ab18:	ebc6 0303 	rsblt	r3, r6, r3
 800ab1c:	8066      	strh	r6, [r4, #2]
 800ab1e:	80a2      	strh	r2, [r4, #4]
 800ab20:	80e3      	strh	r3, [r4, #6]
 800ab22:	e7d4      	b.n	800aace <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ab24:	4620      	mov	r0, r4
 800ab26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab2a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ab2a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ab2e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ab32:	b383      	cbz	r3, 800ab96 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ab34:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab36:	b374      	cbz	r4, 800ab96 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ab38:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ab3c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ab40:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ab44:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ab48:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ab4c:	b303      	cbz	r3, 800ab90 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ab4e:	4668      	mov	r0, sp
 800ab50:	1d21      	adds	r1, r4, #4
 800ab52:	f8ad 5000 	strh.w	r5, [sp]
 800ab56:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ab5a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ab5e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ab62:	f7ff ff43 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800ab66:	4668      	mov	r0, sp
 800ab68:	f7ff ff83 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ab6c:	b980      	cbnz	r0, 800ab90 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ab6e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ab72:	88a2      	ldrh	r2, [r4, #4]
 800ab74:	1a9b      	subs	r3, r3, r2
 800ab76:	f8ad 3000 	strh.w	r3, [sp]
 800ab7a:	88e2      	ldrh	r2, [r4, #6]
 800ab7c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ab80:	1a9b      	subs	r3, r3, r2
 800ab82:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ab86:	6823      	ldr	r3, [r4, #0]
 800ab88:	4669      	mov	r1, sp
 800ab8a:	689b      	ldr	r3, [r3, #8]
 800ab8c:	4620      	mov	r0, r4
 800ab8e:	4798      	blx	r3
 800ab90:	69a4      	ldr	r4, [r4, #24]
 800ab92:	2c00      	cmp	r4, #0
 800ab94:	d1d8      	bne.n	800ab48 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ab96:	b002      	add	sp, #8
 800ab98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab9c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ab9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ab9e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800aba2:	460d      	mov	r5, r1
 800aba4:	4616      	mov	r6, r2
 800aba6:	b323      	cbz	r3, 800abf2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aba8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800abaa:	b314      	cbz	r4, 800abf2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800abac:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800abb0:	b1eb      	cbz	r3, 800abee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800abb2:	6828      	ldr	r0, [r5, #0]
 800abb4:	6869      	ldr	r1, [r5, #4]
 800abb6:	466b      	mov	r3, sp
 800abb8:	c303      	stmia	r3!, {r0, r1}
 800abba:	4668      	mov	r0, sp
 800abbc:	1d21      	adds	r1, r4, #4
 800abbe:	f7ff ff15 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800abc2:	4668      	mov	r0, sp
 800abc4:	f7ff ff55 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800abc8:	b988      	cbnz	r0, 800abee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800abca:	f8bd 3000 	ldrh.w	r3, [sp]
 800abce:	88a2      	ldrh	r2, [r4, #4]
 800abd0:	1a9b      	subs	r3, r3, r2
 800abd2:	f8ad 3000 	strh.w	r3, [sp]
 800abd6:	88e2      	ldrh	r2, [r4, #6]
 800abd8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800abdc:	1a9b      	subs	r3, r3, r2
 800abde:	f8ad 3002 	strh.w	r3, [sp, #2]
 800abe2:	6823      	ldr	r3, [r4, #0]
 800abe4:	4632      	mov	r2, r6
 800abe6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800abe8:	4669      	mov	r1, sp
 800abea:	4620      	mov	r0, r4
 800abec:	4798      	blx	r3
 800abee:	69a4      	ldr	r4, [r4, #24]
 800abf0:	e7db      	b.n	800abaa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800abf2:	b002      	add	sp, #8
 800abf4:	bd70      	pop	{r4, r5, r6, pc}

0800abf6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800abf6:	b513      	push	{r0, r1, r4, lr}
 800abf8:	6803      	ldr	r3, [r0, #0]
 800abfa:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800abfe:	2300      	movs	r3, #0
 800ac00:	e9cd 3300 	strd	r3, r3, [sp]
 800ac04:	466b      	mov	r3, sp
 800ac06:	47a0      	blx	r4
 800ac08:	b002      	add	sp, #8
 800ac0a:	bd10      	pop	{r4, pc}

0800ac0c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ac0c:	2301      	movs	r3, #1
 800ac0e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ac12:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800ac16:	4770      	bx	lr

0800ac18 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ac18:	2301      	movs	r3, #1
 800ac1a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ac1e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800ac22:	4770      	bx	lr

0800ac24 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ac24:	6843      	ldr	r3, [r0, #4]
 800ac26:	2201      	movs	r2, #1
 800ac28:	725a      	strb	r2, [r3, #9]
 800ac2a:	6840      	ldr	r0, [r0, #4]
 800ac2c:	6803      	ldr	r3, [r0, #0]
 800ac2e:	691b      	ldr	r3, [r3, #16]
 800ac30:	4718      	bx	r3

0800ac32 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ac32:	6840      	ldr	r0, [r0, #4]
 800ac34:	6803      	ldr	r3, [r0, #0]
 800ac36:	689b      	ldr	r3, [r3, #8]
 800ac38:	4718      	bx	r3

0800ac3a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ac3a:	b530      	push	{r4, r5, lr}
 800ac3c:	b08b      	sub	sp, #44	; 0x2c
 800ac3e:	6804      	ldr	r4, [r0, #0]
 800ac40:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ac44:	9509      	str	r5, [sp, #36]	; 0x24
 800ac46:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ac4a:	9508      	str	r5, [sp, #32]
 800ac4c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ac50:	9507      	str	r5, [sp, #28]
 800ac52:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ac56:	9506      	str	r5, [sp, #24]
 800ac58:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ac5c:	9505      	str	r5, [sp, #20]
 800ac5e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ac62:	9504      	str	r5, [sp, #16]
 800ac64:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ac68:	9503      	str	r5, [sp, #12]
 800ac6a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ac6e:	9502      	str	r5, [sp, #8]
 800ac70:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ac74:	e9cd 3500 	strd	r3, r5, [sp]
 800ac78:	4613      	mov	r3, r2
 800ac7a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800ac7c:	2200      	movs	r2, #0
 800ac7e:	47a0      	blx	r4
 800ac80:	b00b      	add	sp, #44	; 0x2c
 800ac82:	bd30      	pop	{r4, r5, pc}

0800ac84 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ac84:	4b04      	ldr	r3, [pc, #16]	; (800ac98 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ac86:	781b      	ldrb	r3, [r3, #0]
 800ac88:	b123      	cbz	r3, 800ac94 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ac8a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800ac8e:	f080 0001 	eor.w	r0, r0, #1
 800ac92:	4770      	bx	lr
 800ac94:	2001      	movs	r0, #1
 800ac96:	4770      	bx	lr
 800ac98:	200153e2 	.word	0x200153e2

0800ac9c <_ZN8touchgfx3HAL8endFrameEv>:
 800ac9c:	b510      	push	{r4, lr}
 800ac9e:	4604      	mov	r4, r0
 800aca0:	6840      	ldr	r0, [r0, #4]
 800aca2:	6803      	ldr	r3, [r0, #0]
 800aca4:	689b      	ldr	r3, [r3, #8]
 800aca6:	4798      	blx	r3
 800aca8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800acac:	b113      	cbz	r3, 800acb4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800acae:	2301      	movs	r3, #1
 800acb0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800acb4:	bd10      	pop	{r4, pc}

0800acb6 <_ZN8touchgfx3HAL10initializeEv>:
 800acb6:	b510      	push	{r4, lr}
 800acb8:	4604      	mov	r4, r0
 800acba:	f7f5 fe15 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800acbe:	6860      	ldr	r0, [r4, #4]
 800acc0:	6803      	ldr	r3, [r0, #0]
 800acc2:	68db      	ldr	r3, [r3, #12]
 800acc4:	4798      	blx	r3
 800acc6:	68e0      	ldr	r0, [r4, #12]
 800acc8:	6803      	ldr	r3, [r0, #0]
 800acca:	689b      	ldr	r3, [r3, #8]
 800accc:	4798      	blx	r3
 800acce:	6823      	ldr	r3, [r4, #0]
 800acd0:	4620      	mov	r0, r4
 800acd2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800acd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800acd8:	4718      	bx	r3
	...

0800acdc <_ZN8touchgfx3HAL4tickEv>:
 800acdc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800acde:	6803      	ldr	r3, [r0, #0]
 800ace0:	4d5b      	ldr	r5, [pc, #364]	; (800ae50 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ace2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ace6:	4604      	mov	r4, r0
 800ace8:	4798      	blx	r3
 800acea:	2800      	cmp	r0, #0
 800acec:	f000 8095 	beq.w	800ae1a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800acf0:	2001      	movs	r0, #1
 800acf2:	f7f5 fd25 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800acf6:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800acfa:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800acfe:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800ad02:	2600      	movs	r6, #0
 800ad04:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800ad08:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ad0c:	b133      	cbz	r3, 800ad1c <_ZN8touchgfx3HAL4tickEv+0x40>
 800ad0e:	6823      	ldr	r3, [r4, #0]
 800ad10:	4620      	mov	r0, r4
 800ad12:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ad16:	4798      	blx	r3
 800ad18:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800ad1c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ad20:	6862      	ldr	r2, [r4, #4]
 800ad22:	f083 0301 	eor.w	r3, r3, #1
 800ad26:	7253      	strb	r3, [r2, #9]
 800ad28:	2601      	movs	r6, #1
 800ad2a:	702e      	strb	r6, [r5, #0]
 800ad2c:	f005 fffe 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
 800ad30:	6803      	ldr	r3, [r0, #0]
 800ad32:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ad34:	4798      	blx	r3
 800ad36:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ad3a:	b90b      	cbnz	r3, 800ad40 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ad3c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800ad40:	f005 fff4 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
 800ad44:	6803      	ldr	r3, [r0, #0]
 800ad46:	695b      	ldr	r3, [r3, #20]
 800ad48:	4798      	blx	r3
 800ad4a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ad4c:	6803      	ldr	r3, [r0, #0]
 800ad4e:	691b      	ldr	r3, [r3, #16]
 800ad50:	4798      	blx	r3
 800ad52:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ad56:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800ad5a:	3b01      	subs	r3, #1
 800ad5c:	b2db      	uxtb	r3, r3
 800ad5e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800ad62:	b10a      	cbz	r2, 800ad68 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ad64:	2b00      	cmp	r3, #0
 800ad66:	d1eb      	bne.n	800ad40 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ad68:	4a3a      	ldr	r2, [pc, #232]	; (800ae54 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ad6a:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800ad6e:	7813      	ldrb	r3, [r2, #0]
 800ad70:	3301      	adds	r3, #1
 800ad72:	b25b      	sxtb	r3, r3
 800ad74:	4299      	cmp	r1, r3
 800ad76:	7013      	strb	r3, [r2, #0]
 800ad78:	dc10      	bgt.n	800ad9c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ad7a:	68e0      	ldr	r0, [r4, #12]
 800ad7c:	2300      	movs	r3, #0
 800ad7e:	7013      	strb	r3, [r2, #0]
 800ad80:	6803      	ldr	r3, [r0, #0]
 800ad82:	aa03      	add	r2, sp, #12
 800ad84:	68db      	ldr	r3, [r3, #12]
 800ad86:	a902      	add	r1, sp, #8
 800ad88:	4798      	blx	r3
 800ad8a:	6823      	ldr	r3, [r4, #0]
 800ad8c:	2800      	cmp	r0, #0
 800ad8e:	d050      	beq.n	800ae32 <_ZN8touchgfx3HAL4tickEv+0x156>
 800ad90:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ad94:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ad98:	4620      	mov	r0, r4
 800ad9a:	4798      	blx	r3
 800ad9c:	6960      	ldr	r0, [r4, #20]
 800ad9e:	2300      	movs	r3, #0
 800ada0:	f88d 3007 	strb.w	r3, [sp, #7]
 800ada4:	b158      	cbz	r0, 800adbe <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ada6:	6803      	ldr	r3, [r0, #0]
 800ada8:	f10d 0107 	add.w	r1, sp, #7
 800adac:	68db      	ldr	r3, [r3, #12]
 800adae:	4798      	blx	r3
 800adb0:	b128      	cbz	r0, 800adbe <_ZN8touchgfx3HAL4tickEv+0xe2>
 800adb2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800adb4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800adb8:	6803      	ldr	r3, [r0, #0]
 800adba:	68db      	ldr	r3, [r3, #12]
 800adbc:	4798      	blx	r3
 800adbe:	f104 001c 	add.w	r0, r4, #28
 800adc2:	f014 ff07 	bl	801fbd4 <_ZN8touchgfx8Gestures4tickEv>
 800adc6:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800adca:	b30b      	cbz	r3, 800ae10 <_ZN8touchgfx3HAL4tickEv+0x134>
 800adcc:	6920      	ldr	r0, [r4, #16]
 800adce:	6803      	ldr	r3, [r0, #0]
 800add0:	691b      	ldr	r3, [r3, #16]
 800add2:	4798      	blx	r3
 800add4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800add6:	4606      	mov	r6, r0
 800add8:	b903      	cbnz	r3, 800addc <_ZN8touchgfx3HAL4tickEv+0x100>
 800adda:	6720      	str	r0, [r4, #112]	; 0x70
 800addc:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800adde:	4a1e      	ldr	r2, [pc, #120]	; (800ae58 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800ade0:	1af3      	subs	r3, r6, r3
 800ade2:	4293      	cmp	r3, r2
 800ade4:	d914      	bls.n	800ae10 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ade6:	6920      	ldr	r0, [r4, #16]
 800ade8:	6803      	ldr	r3, [r0, #0]
 800adea:	699b      	ldr	r3, [r3, #24]
 800adec:	4798      	blx	r3
 800adee:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800adf0:	2264      	movs	r2, #100	; 0x64
 800adf2:	1af3      	subs	r3, r6, r3
 800adf4:	fbb3 f3f2 	udiv	r3, r3, r2
 800adf8:	fbb0 f0f3 	udiv	r0, r0, r3
 800adfc:	2800      	cmp	r0, #0
 800adfe:	dc1d      	bgt.n	800ae3c <_ZN8touchgfx3HAL4tickEv+0x160>
 800ae00:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800ae04:	6920      	ldr	r0, [r4, #16]
 800ae06:	6803      	ldr	r3, [r0, #0]
 800ae08:	2100      	movs	r1, #0
 800ae0a:	69db      	ldr	r3, [r3, #28]
 800ae0c:	4798      	blx	r3
 800ae0e:	6726      	str	r6, [r4, #112]	; 0x70
 800ae10:	f005 ff8c 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
 800ae14:	6803      	ldr	r3, [r0, #0]
 800ae16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ae18:	4798      	blx	r3
 800ae1a:	6823      	ldr	r3, [r4, #0]
 800ae1c:	4620      	mov	r0, r4
 800ae1e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ae22:	4798      	blx	r3
 800ae24:	2001      	movs	r0, #1
 800ae26:	f7f5 fc8c 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ae2a:	2300      	movs	r3, #0
 800ae2c:	702b      	strb	r3, [r5, #0]
 800ae2e:	b004      	add	sp, #16
 800ae30:	bd70      	pop	{r4, r5, r6, pc}
 800ae32:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800ae36:	4620      	mov	r0, r4
 800ae38:	4798      	blx	r3
 800ae3a:	e7af      	b.n	800ad9c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ae3c:	2863      	cmp	r0, #99	; 0x63
 800ae3e:	bfcb      	itete	gt
 800ae40:	2300      	movgt	r3, #0
 800ae42:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800ae46:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800ae4a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800ae4e:	e7d9      	b.n	800ae04 <_ZN8touchgfx3HAL4tickEv+0x128>
 800ae50:	200153e8 	.word	0x200153e8
 800ae54:	200153e9 	.word	0x200153e9
 800ae58:	05f5e100 	.word	0x05f5e100

0800ae5c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ae5c:	f7f5 bd74 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ae60 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ae60:	6581      	str	r1, [r0, #88]	; 0x58
 800ae62:	301c      	adds	r0, #28
 800ae64:	f014 beb4 	b.w	801fbd0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ae68 <_ZN8touchgfx3HAL5touchEll>:
 800ae68:	b530      	push	{r4, r5, lr}
 800ae6a:	b087      	sub	sp, #28
 800ae6c:	4604      	mov	r4, r0
 800ae6e:	a804      	add	r0, sp, #16
 800ae70:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ae74:	f005 fd1c 	bl	80108b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ae78:	9b04      	ldr	r3, [sp, #16]
 800ae7a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ae7e:	a906      	add	r1, sp, #24
 800ae80:	9b05      	ldr	r3, [sp, #20]
 800ae82:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ae86:	a803      	add	r0, sp, #12
 800ae88:	f005 fd64 	bl	8010954 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ae8c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800ae90:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ae94:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ae98:	f104 001c 	add.w	r0, r4, #28
 800ae9c:	b189      	cbz	r1, 800aec2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800ae9e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800aea2:	9300      	str	r3, [sp, #0]
 800aea4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800aea8:	4613      	mov	r3, r2
 800aeaa:	462a      	mov	r2, r5
 800aeac:	f014 fea0 	bl	801fbf0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800aeb0:	b128      	cbz	r0, 800aebe <_ZN8touchgfx3HAL5touchEll+0x56>
 800aeb2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800aeb6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800aeb8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800aebc:	6623      	str	r3, [r4, #96]	; 0x60
 800aebe:	b007      	add	sp, #28
 800aec0:	bd30      	pop	{r4, r5, pc}
 800aec2:	f014 fed5 	bl	801fc70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800aec6:	2301      	movs	r3, #1
 800aec8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800aecc:	e7f1      	b.n	800aeb2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800aece <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800aece:	b510      	push	{r4, lr}
 800aed0:	2b00      	cmp	r3, #0
 800aed2:	d046      	beq.n	800af62 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800aed4:	ea81 0002 	eor.w	r0, r1, r2
 800aed8:	07c4      	lsls	r4, r0, #31
 800aeda:	d508      	bpl.n	800aeee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800aedc:	440b      	add	r3, r1
 800aede:	3a01      	subs	r2, #1
 800aee0:	428b      	cmp	r3, r1
 800aee2:	d93e      	bls.n	800af62 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800aee4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800aee8:	f801 0b01 	strb.w	r0, [r1], #1
 800aeec:	e7f8      	b.n	800aee0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800aeee:	07d0      	lsls	r0, r2, #31
 800aef0:	bf42      	ittt	mi
 800aef2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800aef6:	f801 0b01 	strbmi.w	r0, [r1], #1
 800aefa:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800aefe:	2b01      	cmp	r3, #1
 800af00:	d911      	bls.n	800af26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800af02:	ea81 0402 	eor.w	r4, r1, r2
 800af06:	07a4      	lsls	r4, r4, #30
 800af08:	4610      	mov	r0, r2
 800af0a:	d022      	beq.n	800af52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800af0c:	f023 0401 	bic.w	r4, r3, #1
 800af10:	440c      	add	r4, r1
 800af12:	428c      	cmp	r4, r1
 800af14:	4602      	mov	r2, r0
 800af16:	d904      	bls.n	800af22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800af18:	8812      	ldrh	r2, [r2, #0]
 800af1a:	f821 2b02 	strh.w	r2, [r1], #2
 800af1e:	3002      	adds	r0, #2
 800af20:	e7f7      	b.n	800af12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800af22:	f003 0301 	and.w	r3, r3, #1
 800af26:	f023 0003 	bic.w	r0, r3, #3
 800af2a:	4408      	add	r0, r1
 800af2c:	4288      	cmp	r0, r1
 800af2e:	4614      	mov	r4, r2
 800af30:	d904      	bls.n	800af3c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800af32:	6824      	ldr	r4, [r4, #0]
 800af34:	f841 4b04 	str.w	r4, [r1], #4
 800af38:	3204      	adds	r2, #4
 800af3a:	e7f7      	b.n	800af2c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800af3c:	f003 0303 	and.w	r3, r3, #3
 800af40:	440b      	add	r3, r1
 800af42:	3a01      	subs	r2, #1
 800af44:	428b      	cmp	r3, r1
 800af46:	d90c      	bls.n	800af62 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800af48:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800af4c:	f801 0b01 	strb.w	r0, [r1], #1
 800af50:	e7f8      	b.n	800af44 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800af52:	0790      	lsls	r0, r2, #30
 800af54:	d0e7      	beq.n	800af26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800af56:	f832 0b02 	ldrh.w	r0, [r2], #2
 800af5a:	f821 0b02 	strh.w	r0, [r1], #2
 800af5e:	3b02      	subs	r3, #2
 800af60:	e7e1      	b.n	800af26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800af62:	2001      	movs	r0, #1
 800af64:	bd10      	pop	{r4, pc}

0800af66 <_ZN8touchgfx3HAL7noTouchEv>:
 800af66:	b510      	push	{r4, lr}
 800af68:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800af6c:	4604      	mov	r4, r0
 800af6e:	b153      	cbz	r3, 800af86 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800af70:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800af74:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800af78:	2101      	movs	r1, #1
 800af7a:	301c      	adds	r0, #28
 800af7c:	f014 fe78 	bl	801fc70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800af80:	2300      	movs	r3, #0
 800af82:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800af86:	bd10      	pop	{r4, pc}

0800af88 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800af88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af8c:	b085      	sub	sp, #20
 800af8e:	ad04      	add	r5, sp, #16
 800af90:	4604      	mov	r4, r0
 800af92:	2000      	movs	r0, #0
 800af94:	f845 0d04 	str.w	r0, [r5, #-4]!
 800af98:	69a0      	ldr	r0, [r4, #24]
 800af9a:	6806      	ldr	r6, [r0, #0]
 800af9c:	9501      	str	r5, [sp, #4]
 800af9e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800afa2:	9500      	str	r5, [sp, #0]
 800afa4:	6835      	ldr	r5, [r6, #0]
 800afa6:	4699      	mov	r9, r3
 800afa8:	460f      	mov	r7, r1
 800afaa:	4690      	mov	r8, r2
 800afac:	47a8      	blx	r5
 800afae:	4d10      	ldr	r5, [pc, #64]	; (800aff0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800afb0:	4606      	mov	r6, r0
 800afb2:	f8a5 9000 	strh.w	r9, [r5]
 800afb6:	f7f7 fa1d 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800afba:	6803      	ldr	r3, [r0, #0]
 800afbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800afbe:	4798      	blx	r3
 800afc0:	b128      	cbz	r0, 800afce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800afc2:	2801      	cmp	r0, #1
 800afc4:	d00b      	beq.n	800afde <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800afc6:	4630      	mov	r0, r6
 800afc8:	b005      	add	sp, #20
 800afca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800afce:	882b      	ldrh	r3, [r5, #0]
 800afd0:	fb08 7203 	mla	r2, r8, r3, r7
 800afd4:	9b03      	ldr	r3, [sp, #12]
 800afd6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800afda:	63e3      	str	r3, [r4, #60]	; 0x3c
 800afdc:	e7f3      	b.n	800afc6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800afde:	882a      	ldrh	r2, [r5, #0]
 800afe0:	9b03      	ldr	r3, [sp, #12]
 800afe2:	fb08 7202 	mla	r2, r8, r2, r7
 800afe6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800afea:	1a9a      	subs	r2, r3, r2
 800afec:	63e2      	str	r2, [r4, #60]	; 0x3c
 800afee:	e7ea      	b.n	800afc6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800aff0:	200153de 	.word	0x200153de

0800aff4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800aff4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aff6:	b08b      	sub	sp, #44	; 0x2c
 800aff8:	4617      	mov	r7, r2
 800affa:	4604      	mov	r4, r0
 800affc:	460e      	mov	r6, r1
 800affe:	461d      	mov	r5, r3
 800b000:	f7f7 f9f8 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800b004:	6803      	ldr	r3, [r0, #0]
 800b006:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b008:	4798      	blx	r3
 800b00a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b00e:	9007      	str	r0, [sp, #28]
 800b010:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b014:	4b0d      	ldr	r3, [pc, #52]	; (800b04c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b016:	6822      	ldr	r2, [r4, #0]
 800b018:	881b      	ldrh	r3, [r3, #0]
 800b01a:	9306      	str	r3, [sp, #24]
 800b01c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b020:	9305      	str	r3, [sp, #20]
 800b022:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b026:	9304      	str	r3, [sp, #16]
 800b028:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b02c:	9303      	str	r3, [sp, #12]
 800b02e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b032:	9302      	str	r3, [sp, #8]
 800b034:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b038:	e9cd 5300 	strd	r5, r3, [sp]
 800b03c:	4631      	mov	r1, r6
 800b03e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b040:	463b      	mov	r3, r7
 800b042:	2200      	movs	r2, #0
 800b044:	4620      	mov	r0, r4
 800b046:	47a8      	blx	r5
 800b048:	b00b      	add	sp, #44	; 0x2c
 800b04a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b04c:	200153de 	.word	0x200153de

0800b050 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b050:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b054:	4698      	mov	r8, r3
 800b056:	6803      	ldr	r3, [r0, #0]
 800b058:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b05a:	4b15      	ldr	r3, [pc, #84]	; (800b0b0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b05c:	b08b      	sub	sp, #44	; 0x2c
 800b05e:	4617      	mov	r7, r2
 800b060:	f8b3 9000 	ldrh.w	r9, [r3]
 800b064:	460e      	mov	r6, r1
 800b066:	4604      	mov	r4, r0
 800b068:	f7f7 f9c4 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800b06c:	6803      	ldr	r3, [r0, #0]
 800b06e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b070:	4798      	blx	r3
 800b072:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b076:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b07a:	2302      	movs	r3, #2
 800b07c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b080:	2301      	movs	r3, #1
 800b082:	9305      	str	r3, [sp, #20]
 800b084:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b088:	9304      	str	r3, [sp, #16]
 800b08a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b08e:	9303      	str	r3, [sp, #12]
 800b090:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b094:	9302      	str	r3, [sp, #8]
 800b096:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b09a:	2200      	movs	r2, #0
 800b09c:	e9cd 8300 	strd	r8, r3, [sp]
 800b0a0:	4631      	mov	r1, r6
 800b0a2:	463b      	mov	r3, r7
 800b0a4:	4620      	mov	r0, r4
 800b0a6:	47a8      	blx	r5
 800b0a8:	b00b      	add	sp, #44	; 0x2c
 800b0aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b0ae:	bf00      	nop
 800b0b0:	200153de 	.word	0x200153de

0800b0b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b0b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0b8:	4698      	mov	r8, r3
 800b0ba:	6803      	ldr	r3, [r0, #0]
 800b0bc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b0be:	4b11      	ldr	r3, [pc, #68]	; (800b104 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b0c0:	b087      	sub	sp, #28
 800b0c2:	f8b3 9000 	ldrh.w	r9, [r3]
 800b0c6:	460e      	mov	r6, r1
 800b0c8:	4617      	mov	r7, r2
 800b0ca:	4604      	mov	r4, r0
 800b0cc:	f7f7 f992 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800b0d0:	6803      	ldr	r3, [r0, #0]
 800b0d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0d4:	4798      	blx	r3
 800b0d6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b0da:	f8cd 900c 	str.w	r9, [sp, #12]
 800b0de:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b0e2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b0e6:	9302      	str	r3, [sp, #8]
 800b0e8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b0ec:	9301      	str	r3, [sp, #4]
 800b0ee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b0f2:	9300      	str	r3, [sp, #0]
 800b0f4:	463a      	mov	r2, r7
 800b0f6:	4643      	mov	r3, r8
 800b0f8:	4631      	mov	r1, r6
 800b0fa:	4620      	mov	r0, r4
 800b0fc:	47a8      	blx	r5
 800b0fe:	b007      	add	sp, #28
 800b100:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b104:	200153de 	.word	0x200153de

0800b108 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b10c:	4604      	mov	r4, r0
 800b10e:	b08f      	sub	sp, #60	; 0x3c
 800b110:	4610      	mov	r0, r2
 800b112:	460d      	mov	r5, r1
 800b114:	4691      	mov	r9, r2
 800b116:	461e      	mov	r6, r3
 800b118:	f008 ffa4 	bl	8014064 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b11c:	2800      	cmp	r0, #0
 800b11e:	f000 809d 	beq.w	800b25c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b122:	6823      	ldr	r3, [r4, #0]
 800b124:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b2c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b128:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b12a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b2c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b12e:	4f61      	ldr	r7, [pc, #388]	; (800b2b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b130:	4620      	mov	r0, r4
 800b132:	4798      	blx	r3
 800b134:	6823      	ldr	r3, [r4, #0]
 800b136:	4620      	mov	r0, r4
 800b138:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b13a:	4798      	blx	r3
 800b13c:	f8bb 3000 	ldrh.w	r3, [fp]
 800b140:	9301      	str	r3, [sp, #4]
 800b142:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b146:	f8ba 3000 	ldrh.w	r3, [sl]
 800b14a:	9302      	str	r3, [sp, #8]
 800b14c:	883b      	ldrh	r3, [r7, #0]
 800b14e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b152:	9303      	str	r3, [sp, #12]
 800b154:	4b58      	ldr	r3, [pc, #352]	; (800b2b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b156:	9305      	str	r3, [sp, #20]
 800b158:	881a      	ldrh	r2, [r3, #0]
 800b15a:	9204      	str	r2, [sp, #16]
 800b15c:	4640      	mov	r0, r8
 800b15e:	f009 f815 	bl	801418c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b162:	8038      	strh	r0, [r7, #0]
 800b164:	4640      	mov	r0, r8
 800b166:	f009 f845 	bl	80141f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b16a:	9b05      	ldr	r3, [sp, #20]
 800b16c:	b280      	uxth	r0, r0
 800b16e:	8018      	strh	r0, [r3, #0]
 800b170:	4b52      	ldr	r3, [pc, #328]	; (800b2bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b172:	781b      	ldrb	r3, [r3, #0]
 800b174:	2b00      	cmp	r3, #0
 800b176:	d174      	bne.n	800b262 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b178:	883b      	ldrh	r3, [r7, #0]
 800b17a:	f8ab 3000 	strh.w	r3, [fp]
 800b17e:	f8aa 0000 	strh.w	r0, [sl]
 800b182:	4648      	mov	r0, r9
 800b184:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b188:	f008 ff6c 	bl	8014064 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b18c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b190:	2200      	movs	r2, #0
 800b192:	4611      	mov	r1, r2
 800b194:	4628      	mov	r0, r5
 800b196:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b19a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b19e:	f7f7 fd4d 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
 800b1a2:	2301      	movs	r3, #1
 800b1a4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b1a8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b1ac:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b1b0:	2b00      	cmp	r3, #0
 800b1b2:	dd5c      	ble.n	800b26e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b1b4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b1b8:	2b00      	cmp	r3, #0
 800b1ba:	dd58      	ble.n	800b26e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b1bc:	462a      	mov	r2, r5
 800b1be:	ab0a      	add	r3, sp, #40	; 0x28
 800b1c0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b1c4:	6851      	ldr	r1, [r2, #4]
 800b1c6:	c303      	stmia	r3!, {r0, r1}
 800b1c8:	4631      	mov	r1, r6
 800b1ca:	a80a      	add	r0, sp, #40	; 0x28
 800b1cc:	f7ff fc0e 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800b1d0:	4b38      	ldr	r3, [pc, #224]	; (800b2b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b1d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b1d6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b1da:	2100      	movs	r1, #0
 800b1dc:	aa0a      	add	r2, sp, #40	; 0x28
 800b1de:	4b36      	ldr	r3, [pc, #216]	; (800b2b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b1e0:	910c      	str	r1, [sp, #48]	; 0x30
 800b1e2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b1e6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b1ea:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b1ee:	ab08      	add	r3, sp, #32
 800b1f0:	e883 0003 	stmia.w	r3, {r0, r1}
 800b1f4:	4618      	mov	r0, r3
 800b1f6:	a90c      	add	r1, sp, #48	; 0x30
 800b1f8:	f7ff fbf8 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800b1fc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b1fe:	2b00      	cmp	r3, #0
 800b200:	d13c      	bne.n	800b27c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b202:	2000      	movs	r0, #0
 800b204:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b208:	2600      	movs	r6, #0
 800b20a:	682a      	ldr	r2, [r5, #0]
 800b20c:	696b      	ldr	r3, [r5, #20]
 800b20e:	616e      	str	r6, [r5, #20]
 800b210:	9305      	str	r3, [sp, #20]
 800b212:	6892      	ldr	r2, [r2, #8]
 800b214:	a908      	add	r1, sp, #32
 800b216:	4628      	mov	r0, r5
 800b218:	4790      	blx	r2
 800b21a:	9b05      	ldr	r3, [sp, #20]
 800b21c:	616b      	str	r3, [r5, #20]
 800b21e:	4652      	mov	r2, sl
 800b220:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b224:	4649      	mov	r1, r9
 800b226:	4628      	mov	r0, r5
 800b228:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b22c:	f7f7 fd06 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
 800b230:	4b23      	ldr	r3, [pc, #140]	; (800b2c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b232:	9a01      	ldr	r2, [sp, #4]
 800b234:	801a      	strh	r2, [r3, #0]
 800b236:	4b23      	ldr	r3, [pc, #140]	; (800b2c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b238:	9a02      	ldr	r2, [sp, #8]
 800b23a:	801a      	strh	r2, [r3, #0]
 800b23c:	4b1d      	ldr	r3, [pc, #116]	; (800b2b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b23e:	9a03      	ldr	r2, [sp, #12]
 800b240:	801a      	strh	r2, [r3, #0]
 800b242:	4b1d      	ldr	r3, [pc, #116]	; (800b2b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b244:	9a04      	ldr	r2, [sp, #16]
 800b246:	801a      	strh	r2, [r3, #0]
 800b248:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b24c:	6823      	ldr	r3, [r4, #0]
 800b24e:	4620      	mov	r0, r4
 800b250:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b252:	4798      	blx	r3
 800b254:	6823      	ldr	r3, [r4, #0]
 800b256:	4620      	mov	r0, r4
 800b258:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b25a:	4798      	blx	r3
 800b25c:	b00f      	add	sp, #60	; 0x3c
 800b25e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b262:	883b      	ldrh	r3, [r7, #0]
 800b264:	f8ab 0000 	strh.w	r0, [fp]
 800b268:	f8aa 3000 	strh.w	r3, [sl]
 800b26c:	e789      	b.n	800b182 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b26e:	462a      	mov	r2, r5
 800b270:	ab0a      	add	r3, sp, #40	; 0x28
 800b272:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b276:	6851      	ldr	r1, [r2, #4]
 800b278:	c303      	stmia	r3!, {r0, r1}
 800b27a:	e7a9      	b.n	800b1d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b27c:	a807      	add	r0, sp, #28
 800b27e:	f009 f8f5 	bl	801446c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b282:	4606      	mov	r6, r0
 800b284:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b286:	6803      	ldr	r3, [r0, #0]
 800b288:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b28a:	4798      	blx	r3
 800b28c:	4286      	cmp	r6, r0
 800b28e:	d1b8      	bne.n	800b202 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b290:	f7f7 f8b0 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800b294:	6803      	ldr	r3, [r0, #0]
 800b296:	4606      	mov	r6, r0
 800b298:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b29a:	9305      	str	r3, [sp, #20]
 800b29c:	a807      	add	r0, sp, #28
 800b29e:	f009 f8e5 	bl	801446c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b2a2:	9b05      	ldr	r3, [sp, #20]
 800b2a4:	4601      	mov	r1, r0
 800b2a6:	4630      	mov	r0, r6
 800b2a8:	4798      	blx	r3
 800b2aa:	f080 0001 	eor.w	r0, r0, #1
 800b2ae:	b2c0      	uxtb	r0, r0
 800b2b0:	e7a8      	b.n	800b204 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b2b2:	bf00      	nop
 800b2b4:	200153d8 	.word	0x200153d8
 800b2b8:	200153da 	.word	0x200153da
 800b2bc:	200153dc 	.word	0x200153dc
 800b2c0:	200153de 	.word	0x200153de
 800b2c4:	200153e0 	.word	0x200153e0

0800b2c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b2c8:	b510      	push	{r4, lr}
 800b2ca:	4b07      	ldr	r3, [pc, #28]	; (800b2e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b2cc:	781b      	ldrb	r3, [r3, #0]
 800b2ce:	4604      	mov	r4, r0
 800b2d0:	b13b      	cbz	r3, 800b2e2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b2d2:	6803      	ldr	r3, [r0, #0]
 800b2d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b2d6:	4798      	blx	r3
 800b2d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b2da:	4283      	cmp	r3, r0
 800b2dc:	d101      	bne.n	800b2e2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b2de:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b2e0:	bd10      	pop	{r4, pc}
 800b2e2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b2e4:	e7fc      	b.n	800b2e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b2e6:	bf00      	nop
 800b2e8:	200153e2 	.word	0x200153e2

0800b2ec <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b2ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2f0:	b08a      	sub	sp, #40	; 0x28
 800b2f2:	461d      	mov	r5, r3
 800b2f4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b2f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b2fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b300:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b304:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b308:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b30c:	2400      	movs	r4, #0
 800b30e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b312:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b316:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b31a:	4690      	mov	r8, r2
 800b31c:	4607      	mov	r7, r0
 800b31e:	9404      	str	r4, [sp, #16]
 800b320:	f88d 4020 	strb.w	r4, [sp, #32]
 800b324:	f7ff ffd0 	bl	800b2c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b328:	fb06 8505 	mla	r5, r6, r5, r8
 800b32c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b330:	6878      	ldr	r0, [r7, #4]
 800b332:	9505      	str	r5, [sp, #20]
 800b334:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b338:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b33c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b340:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b344:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b348:	6803      	ldr	r3, [r0, #0]
 800b34a:	a901      	add	r1, sp, #4
 800b34c:	685b      	ldr	r3, [r3, #4]
 800b34e:	4798      	blx	r3
 800b350:	b00a      	add	sp, #40	; 0x28
 800b352:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b356 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b356:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b35a:	b08b      	sub	sp, #44	; 0x2c
 800b35c:	2400      	movs	r4, #0
 800b35e:	461d      	mov	r5, r3
 800b360:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b364:	4688      	mov	r8, r1
 800b366:	4691      	mov	r9, r2
 800b368:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b36c:	9404      	str	r4, [sp, #16]
 800b36e:	4607      	mov	r7, r0
 800b370:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b374:	f7ff ffa8 	bl	800b2c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b378:	fb06 9505 	mla	r5, r6, r5, r9
 800b37c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b380:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b384:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b388:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b38c:	6878      	ldr	r0, [r7, #4]
 800b38e:	9505      	str	r5, [sp, #20]
 800b390:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b394:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b398:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b39c:	f8cd 8010 	str.w	r8, [sp, #16]
 800b3a0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b3a4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b3a8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b3ac:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b3b0:	6803      	ldr	r3, [r0, #0]
 800b3b2:	a901      	add	r1, sp, #4
 800b3b4:	685b      	ldr	r3, [r3, #4]
 800b3b6:	4798      	blx	r3
 800b3b8:	b00b      	add	sp, #44	; 0x2c
 800b3ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b3c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b3c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3c4:	b08a      	sub	sp, #40	; 0x28
 800b3c6:	4698      	mov	r8, r3
 800b3c8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b3cc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b3d0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b3d4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b3d8:	2300      	movs	r3, #0
 800b3da:	2d0b      	cmp	r5, #11
 800b3dc:	4606      	mov	r6, r0
 800b3de:	9304      	str	r3, [sp, #16]
 800b3e0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b3e4:	d138      	bne.n	800b458 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b3e6:	2380      	movs	r3, #128	; 0x80
 800b3e8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b3ec:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b3f0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b3f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b3f8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b3fc:	f88d 0020 	strb.w	r0, [sp, #32]
 800b400:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b404:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b408:	4630      	mov	r0, r6
 800b40a:	9203      	str	r2, [sp, #12]
 800b40c:	f7ff ff5c 	bl	800b2c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b410:	2c0b      	cmp	r4, #11
 800b412:	bf98      	it	ls
 800b414:	4b1b      	ldrls	r3, [pc, #108]	; (800b484 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b416:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b41a:	bf98      	it	ls
 800b41c:	5d19      	ldrbls	r1, [r3, r4]
 800b41e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b422:	bf88      	it	hi
 800b424:	2100      	movhi	r1, #0
 800b426:	fb02 8307 	mla	r3, r2, r7, r8
 800b42a:	10c9      	asrs	r1, r1, #3
 800b42c:	fb01 0003 	mla	r0, r1, r3, r0
 800b430:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b434:	9005      	str	r0, [sp, #20]
 800b436:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b43a:	6870      	ldr	r0, [r6, #4]
 800b43c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b440:	2300      	movs	r3, #0
 800b442:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b446:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b44a:	6803      	ldr	r3, [r0, #0]
 800b44c:	a901      	add	r1, sp, #4
 800b44e:	685b      	ldr	r3, [r3, #4]
 800b450:	4798      	blx	r3
 800b452:	b00a      	add	sp, #40	; 0x28
 800b454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b458:	2d02      	cmp	r5, #2
 800b45a:	d109      	bne.n	800b470 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b45c:	28ff      	cmp	r0, #255	; 0xff
 800b45e:	d105      	bne.n	800b46c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b460:	f1bc 0f00 	cmp.w	ip, #0
 800b464:	bf14      	ite	ne
 800b466:	2340      	movne	r3, #64	; 0x40
 800b468:	2320      	moveq	r3, #32
 800b46a:	e7bd      	b.n	800b3e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b46c:	2340      	movs	r3, #64	; 0x40
 800b46e:	e7bb      	b.n	800b3e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b470:	28ff      	cmp	r0, #255	; 0xff
 800b472:	d105      	bne.n	800b480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b474:	f1bc 0f00 	cmp.w	ip, #0
 800b478:	bf14      	ite	ne
 800b47a:	2304      	movne	r3, #4
 800b47c:	2301      	moveq	r3, #1
 800b47e:	e7b3      	b.n	800b3e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b480:	2304      	movs	r3, #4
 800b482:	e7b1      	b.n	800b3e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b484:	08023488 	.word	0x08023488

0800b488 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b48c:	b08b      	sub	sp, #44	; 0x2c
 800b48e:	461d      	mov	r5, r3
 800b490:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b494:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b498:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b49c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b4a0:	bf14      	ite	ne
 800b4a2:	2308      	movne	r3, #8
 800b4a4:	2302      	moveq	r3, #2
 800b4a6:	2400      	movs	r4, #0
 800b4a8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b4ac:	4688      	mov	r8, r1
 800b4ae:	4693      	mov	fp, r2
 800b4b0:	9404      	str	r4, [sp, #16]
 800b4b2:	4607      	mov	r7, r0
 800b4b4:	f7ff ff08 	bl	800b2c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b4b8:	2e0b      	cmp	r6, #11
 800b4ba:	bf98      	it	ls
 800b4bc:	4b15      	ldrls	r3, [pc, #84]	; (800b514 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b4be:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b4c2:	bf98      	it	ls
 800b4c4:	5d9c      	ldrbls	r4, [r3, r6]
 800b4c6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b4ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b4ce:	fb05 b50a 	mla	r5, r5, sl, fp
 800b4d2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b4d6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b4da:	10e4      	asrs	r4, r4, #3
 800b4dc:	fb04 0405 	mla	r4, r4, r5, r0
 800b4e0:	2300      	movs	r3, #0
 800b4e2:	6878      	ldr	r0, [r7, #4]
 800b4e4:	9405      	str	r4, [sp, #20]
 800b4e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b4ea:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b4ee:	f8cd 8010 	str.w	r8, [sp, #16]
 800b4f2:	f88d 9020 	strb.w	r9, [sp, #32]
 800b4f6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b4fa:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b4fe:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b502:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b506:	6803      	ldr	r3, [r0, #0]
 800b508:	a901      	add	r1, sp, #4
 800b50a:	685b      	ldr	r3, [r3, #4]
 800b50c:	4798      	blx	r3
 800b50e:	b00b      	add	sp, #44	; 0x2c
 800b510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b514:	08023488 	.word	0x08023488

0800b518 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b51c:	461e      	mov	r6, r3
 800b51e:	4b0a      	ldr	r3, [pc, #40]	; (800b548 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b520:	460f      	mov	r7, r1
 800b522:	881d      	ldrh	r5, [r3, #0]
 800b524:	4690      	mov	r8, r2
 800b526:	f7f6 ff65 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800b52a:	6803      	ldr	r3, [r0, #0]
 800b52c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b52e:	4798      	blx	r3
 800b530:	280b      	cmp	r0, #11
 800b532:	bf9a      	itte	ls
 800b534:	4b05      	ldrls	r3, [pc, #20]	; (800b54c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b536:	5c1c      	ldrbls	r4, [r3, r0]
 800b538:	2400      	movhi	r4, #0
 800b53a:	fb08 7005 	mla	r0, r8, r5, r7
 800b53e:	10e4      	asrs	r4, r4, #3
 800b540:	fb04 6000 	mla	r0, r4, r0, r6
 800b544:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b548:	200153de 	.word	0x200153de
 800b54c:	08023488 	.word	0x08023488

0800b550 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b550:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b552:	b08b      	sub	sp, #44	; 0x2c
 800b554:	461f      	mov	r7, r3
 800b556:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b55a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b55e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b562:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b566:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b56a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b56e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b572:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b576:	2500      	movs	r5, #0
 800b578:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b57c:	f88d 3020 	strb.w	r3, [sp, #32]
 800b580:	4604      	mov	r4, r0
 800b582:	4616      	mov	r6, r2
 800b584:	9504      	str	r5, [sp, #16]
 800b586:	f7ff fe9f 	bl	800b2c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b58a:	463a      	mov	r2, r7
 800b58c:	4631      	mov	r1, r6
 800b58e:	4603      	mov	r3, r0
 800b590:	4620      	mov	r0, r4
 800b592:	f7ff ffc1 	bl	800b518 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b596:	4b0e      	ldr	r3, [pc, #56]	; (800b5d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b598:	9005      	str	r0, [sp, #20]
 800b59a:	881b      	ldrh	r3, [r3, #0]
 800b59c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b5a0:	f7f6 ff28 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800b5a4:	6803      	ldr	r3, [r0, #0]
 800b5a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5a8:	4798      	blx	r3
 800b5aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b5ac:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b5b0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b5b4:	9304      	str	r3, [sp, #16]
 800b5b6:	6860      	ldr	r0, [r4, #4]
 800b5b8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b5bc:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b5c0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b5c4:	6803      	ldr	r3, [r0, #0]
 800b5c6:	a901      	add	r1, sp, #4
 800b5c8:	685b      	ldr	r3, [r3, #4]
 800b5ca:	4798      	blx	r3
 800b5cc:	b00b      	add	sp, #44	; 0x2c
 800b5ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b5d0:	200153de 	.word	0x200153de

0800b5d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b5d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b5d6:	b08d      	sub	sp, #52	; 0x34
 800b5d8:	466b      	mov	r3, sp
 800b5da:	e883 0006 	stmia.w	r3, {r1, r2}
 800b5de:	2300      	movs	r3, #0
 800b5e0:	9306      	str	r3, [sp, #24]
 800b5e2:	6803      	ldr	r3, [r0, #0]
 800b5e4:	f8bd 6000 	ldrh.w	r6, [sp]
 800b5e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b5ea:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b5ee:	2501      	movs	r5, #1
 800b5f0:	9503      	str	r5, [sp, #12]
 800b5f2:	4604      	mov	r4, r0
 800b5f4:	4798      	blx	r3
 800b5f6:	463a      	mov	r2, r7
 800b5f8:	4631      	mov	r1, r6
 800b5fa:	4603      	mov	r3, r0
 800b5fc:	4620      	mov	r0, r4
 800b5fe:	f7ff ff8b 	bl	800b518 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b602:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b604:	9307      	str	r3, [sp, #28]
 800b606:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b60a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b60e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b612:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b616:	4b0f      	ldr	r3, [pc, #60]	; (800b654 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b618:	9004      	str	r0, [sp, #16]
 800b61a:	881b      	ldrh	r3, [r3, #0]
 800b61c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b620:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b624:	f7f6 fee6 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800b628:	6803      	ldr	r3, [r0, #0]
 800b62a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b62c:	4798      	blx	r3
 800b62e:	23ff      	movs	r3, #255	; 0xff
 800b630:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b634:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b638:	6860      	ldr	r0, [r4, #4]
 800b63a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b63e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b642:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b646:	6803      	ldr	r3, [r0, #0]
 800b648:	a903      	add	r1, sp, #12
 800b64a:	685b      	ldr	r3, [r3, #4]
 800b64c:	4798      	blx	r3
 800b64e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b650:	b00d      	add	sp, #52	; 0x34
 800b652:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b654:	200153de 	.word	0x200153de

0800b658 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b65c:	b08c      	sub	sp, #48	; 0x30
 800b65e:	461e      	mov	r6, r3
 800b660:	466d      	mov	r5, sp
 800b662:	2300      	movs	r3, #0
 800b664:	e885 0006 	stmia.w	r5, {r1, r2}
 800b668:	9306      	str	r3, [sp, #24]
 800b66a:	6803      	ldr	r3, [r0, #0]
 800b66c:	f8bd 7000 	ldrh.w	r7, [sp]
 800b670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b672:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b676:	2501      	movs	r5, #1
 800b678:	9503      	str	r5, [sp, #12]
 800b67a:	4604      	mov	r4, r0
 800b67c:	4798      	blx	r3
 800b67e:	4642      	mov	r2, r8
 800b680:	4639      	mov	r1, r7
 800b682:	4603      	mov	r3, r0
 800b684:	4620      	mov	r0, r4
 800b686:	f7ff ff47 	bl	800b518 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b68a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b68e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b692:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b696:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b69a:	4b11      	ldr	r3, [pc, #68]	; (800b6e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b69c:	9004      	str	r0, [sp, #16]
 800b69e:	881b      	ldrh	r3, [r3, #0]
 800b6a0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b6a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b6a6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b6aa:	9607      	str	r6, [sp, #28]
 800b6ac:	f7f6 fea2 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800b6b0:	6803      	ldr	r3, [r0, #0]
 800b6b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6b4:	4798      	blx	r3
 800b6b6:	23ff      	movs	r3, #255	; 0xff
 800b6b8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b6bc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b6c0:	6860      	ldr	r0, [r4, #4]
 800b6c2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b6c6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b6ca:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b6ce:	6803      	ldr	r3, [r0, #0]
 800b6d0:	a903      	add	r1, sp, #12
 800b6d2:	685b      	ldr	r3, [r3, #4]
 800b6d4:	4798      	blx	r3
 800b6d6:	4630      	mov	r0, r6
 800b6d8:	b00c      	add	sp, #48	; 0x30
 800b6da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6de:	bf00      	nop
 800b6e0:	200153de 	.word	0x200153de

0800b6e4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b6e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b6e6:	b085      	sub	sp, #20
 800b6e8:	ac02      	add	r4, sp, #8
 800b6ea:	e884 0006 	stmia.w	r4, {r1, r2}
 800b6ee:	4605      	mov	r5, r0
 800b6f0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b6f4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b6f8:	f7ff fde6 	bl	800b2c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6fc:	463a      	mov	r2, r7
 800b6fe:	4603      	mov	r3, r0
 800b700:	4631      	mov	r1, r6
 800b702:	4628      	mov	r0, r5
 800b704:	f7ff ff08 	bl	800b518 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b708:	4a05      	ldr	r2, [pc, #20]	; (800b720 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b70a:	682b      	ldr	r3, [r5, #0]
 800b70c:	8812      	ldrh	r2, [r2, #0]
 800b70e:	9200      	str	r2, [sp, #0]
 800b710:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800b712:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b716:	4603      	mov	r3, r0
 800b718:	4628      	mov	r0, r5
 800b71a:	47b0      	blx	r6
 800b71c:	b005      	add	sp, #20
 800b71e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b720:	200153de 	.word	0x200153de

0800b724 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b724:	b570      	push	{r4, r5, r6, lr}
 800b726:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b72a:	4604      	mov	r4, r0
 800b72c:	b19b      	cbz	r3, 800b756 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b72e:	2002      	movs	r0, #2
 800b730:	f7f5 f808 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b734:	2300      	movs	r3, #0
 800b736:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b73a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b73e:	6823      	ldr	r3, [r4, #0]
 800b740:	4620      	mov	r0, r4
 800b742:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800b746:	f7ff fdbf 	bl	800b2c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b74a:	462b      	mov	r3, r5
 800b74c:	4601      	mov	r1, r0
 800b74e:	4620      	mov	r0, r4
 800b750:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b754:	4718      	bx	r3
 800b756:	bd70      	pop	{r4, r5, r6, pc}

0800b758 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b758:	b538      	push	{r3, r4, r5, lr}
 800b75a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800b75e:	428b      	cmp	r3, r1
 800b760:	4604      	mov	r4, r0
 800b762:	460d      	mov	r5, r1
 800b764:	d006      	beq.n	800b774 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b766:	6803      	ldr	r3, [r0, #0]
 800b768:	b929      	cbnz	r1, 800b776 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b76a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b76e:	4798      	blx	r3
 800b770:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800b774:	bd38      	pop	{r3, r4, r5, pc}
 800b776:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800b77a:	e7f8      	b.n	800b76e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b77c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b77c:	b510      	push	{r4, lr}
 800b77e:	4b0d      	ldr	r3, [pc, #52]	; (800b7b4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b780:	781b      	ldrb	r3, [r3, #0]
 800b782:	4604      	mov	r4, r0
 800b784:	b95b      	cbnz	r3, 800b79e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b786:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b78a:	2b02      	cmp	r3, #2
 800b78c:	d007      	beq.n	800b79e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b78e:	6840      	ldr	r0, [r0, #4]
 800b790:	f000 f92a 	bl	800b9e8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b794:	b118      	cbz	r0, 800b79e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b796:	6862      	ldr	r2, [r4, #4]
 800b798:	7a53      	ldrb	r3, [r2, #9]
 800b79a:	2b00      	cmp	r3, #0
 800b79c:	d0fc      	beq.n	800b798 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b79e:	f7f5 f8cb 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b7a2:	4620      	mov	r0, r4
 800b7a4:	2100      	movs	r1, #0
 800b7a6:	f7ff ffd7 	bl	800b758 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b7aa:	4620      	mov	r0, r4
 800b7ac:	f7ff fd8c 	bl	800b2c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7b0:	bd10      	pop	{r4, pc}
 800b7b2:	bf00      	nop
 800b7b4:	200153e2 	.word	0x200153e2

0800b7b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b7b8:	b570      	push	{r4, r5, r6, lr}
 800b7ba:	4604      	mov	r4, r0
 800b7bc:	6803      	ldr	r3, [r0, #0]
 800b7be:	b919      	cbnz	r1, 800b7c8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b7c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b7c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7c6:	4718      	bx	r3
 800b7c8:	2200      	movs	r2, #0
 800b7ca:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800b7ce:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800b7d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b7d4:	4798      	blx	r3
 800b7d6:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800b7da:	4605      	mov	r5, r0
 800b7dc:	2101      	movs	r1, #1
 800b7de:	4620      	mov	r0, r4
 800b7e0:	f7ff ffba 	bl	800b758 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b7e4:	4628      	mov	r0, r5
 800b7e6:	bd70      	pop	{r4, r5, r6, pc}

0800b7e8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b7e8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b7ec:	1a13      	subs	r3, r2, r0
 800b7ee:	4258      	negs	r0, r3
 800b7f0:	4158      	adcs	r0, r3
 800b7f2:	4770      	bx	lr

0800b7f4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b7f4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b7f8:	1a9b      	subs	r3, r3, r2
 800b7fa:	2b00      	cmp	r3, #0
 800b7fc:	bfdc      	itt	le
 800b7fe:	6882      	ldrle	r2, [r0, #8]
 800b800:	189b      	addle	r3, r3, r2
 800b802:	2b01      	cmp	r3, #1
 800b804:	bfcc      	ite	gt
 800b806:	2000      	movgt	r0, #0
 800b808:	2001      	movle	r0, #1
 800b80a:	4770      	bx	lr

0800b80c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b80c:	6902      	ldr	r2, [r0, #16]
 800b80e:	6843      	ldr	r3, [r0, #4]
 800b810:	2024      	movs	r0, #36	; 0x24
 800b812:	fb00 3002 	mla	r0, r0, r2, r3
 800b816:	4770      	bx	lr

0800b818 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b818:	6803      	ldr	r3, [r0, #0]
 800b81a:	691b      	ldr	r3, [r3, #16]
 800b81c:	4718      	bx	r3

0800b81e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b81e:	b570      	push	{r4, r5, r6, lr}
 800b820:	2301      	movs	r3, #1
 800b822:	7203      	strb	r3, [r0, #8]
 800b824:	4604      	mov	r4, r0
 800b826:	6840      	ldr	r0, [r0, #4]
 800b828:	6803      	ldr	r3, [r0, #0]
 800b82a:	699b      	ldr	r3, [r3, #24]
 800b82c:	4798      	blx	r3
 800b82e:	6803      	ldr	r3, [r0, #0]
 800b830:	2b40      	cmp	r3, #64	; 0x40
 800b832:	4605      	mov	r5, r0
 800b834:	d00c      	beq.n	800b850 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b836:	d810      	bhi.n	800b85a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b838:	2b04      	cmp	r3, #4
 800b83a:	d01d      	beq.n	800b878 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b83c:	d804      	bhi.n	800b848 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b83e:	2b01      	cmp	r3, #1
 800b840:	d006      	beq.n	800b850 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b842:	2b02      	cmp	r3, #2
 800b844:	d02c      	beq.n	800b8a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b846:	bd70      	pop	{r4, r5, r6, pc}
 800b848:	2b08      	cmp	r3, #8
 800b84a:	d01d      	beq.n	800b888 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b84c:	2b20      	cmp	r3, #32
 800b84e:	d1fa      	bne.n	800b846 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b850:	6823      	ldr	r3, [r4, #0]
 800b852:	4620      	mov	r0, r4
 800b854:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b856:	4798      	blx	r3
 800b858:	e013      	b.n	800b882 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b85a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b85e:	d0f7      	beq.n	800b850 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b860:	d804      	bhi.n	800b86c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b862:	2b80      	cmp	r3, #128	; 0x80
 800b864:	d0f4      	beq.n	800b850 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b866:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b86a:	e7f0      	b.n	800b84e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b86c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b870:	d0ee      	beq.n	800b850 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b872:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b876:	e7e5      	b.n	800b844 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b878:	6823      	ldr	r3, [r4, #0]
 800b87a:	7f01      	ldrb	r1, [r0, #28]
 800b87c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b87e:	4620      	mov	r0, r4
 800b880:	4798      	blx	r3
 800b882:	6823      	ldr	r3, [r4, #0]
 800b884:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b886:	e006      	b.n	800b896 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b888:	6823      	ldr	r3, [r4, #0]
 800b88a:	7f01      	ldrb	r1, [r0, #28]
 800b88c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b88e:	4620      	mov	r0, r4
 800b890:	4798      	blx	r3
 800b892:	6823      	ldr	r3, [r4, #0]
 800b894:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b896:	4629      	mov	r1, r5
 800b898:	4620      	mov	r0, r4
 800b89a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b89e:	4718      	bx	r3
 800b8a0:	6823      	ldr	r3, [r4, #0]
 800b8a2:	4620      	mov	r0, r4
 800b8a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b8a6:	4798      	blx	r3
 800b8a8:	e7f3      	b.n	800b892 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b8aa <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b8aa:	4770      	bx	lr

0800b8ac <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b8ac:	4770      	bx	lr

0800b8ae <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b8ae:	4770      	bx	lr

0800b8b0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b8b0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b8b4:	1ad2      	subs	r2, r2, r3
 800b8b6:	2a00      	cmp	r2, #0
 800b8b8:	b510      	push	{r4, lr}
 800b8ba:	bfdc      	itt	le
 800b8bc:	6884      	ldrle	r4, [r0, #8]
 800b8be:	1912      	addle	r2, r2, r4
 800b8c0:	2a01      	cmp	r2, #1
 800b8c2:	dd16      	ble.n	800b8f2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b8c4:	6842      	ldr	r2, [r0, #4]
 800b8c6:	2424      	movs	r4, #36	; 0x24
 800b8c8:	fb04 2303 	mla	r3, r4, r3, r2
 800b8cc:	f101 0220 	add.w	r2, r1, #32
 800b8d0:	f851 4b04 	ldr.w	r4, [r1], #4
 800b8d4:	f843 4b04 	str.w	r4, [r3], #4
 800b8d8:	4291      	cmp	r1, r2
 800b8da:	d1f9      	bne.n	800b8d0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b8dc:	780a      	ldrb	r2, [r1, #0]
 800b8de:	701a      	strb	r2, [r3, #0]
 800b8e0:	68c3      	ldr	r3, [r0, #12]
 800b8e2:	6882      	ldr	r2, [r0, #8]
 800b8e4:	f3bf 8f5b 	dmb	ish
 800b8e8:	3301      	adds	r3, #1
 800b8ea:	429a      	cmp	r2, r3
 800b8ec:	bfd8      	it	le
 800b8ee:	1a9b      	suble	r3, r3, r2
 800b8f0:	60c3      	str	r3, [r0, #12]
 800b8f2:	bd10      	pop	{r4, pc}

0800b8f4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b8f4:	6903      	ldr	r3, [r0, #16]
 800b8f6:	6882      	ldr	r2, [r0, #8]
 800b8f8:	f3bf 8f5b 	dmb	ish
 800b8fc:	3301      	adds	r3, #1
 800b8fe:	429a      	cmp	r2, r3
 800b900:	bfd8      	it	le
 800b902:	1a9b      	suble	r3, r3, r2
 800b904:	6103      	str	r3, [r0, #16]
 800b906:	4770      	bx	lr

0800b908 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b908:	b570      	push	{r4, r5, r6, lr}
 800b90a:	4604      	mov	r4, r0
 800b90c:	460e      	mov	r6, r1
 800b90e:	6860      	ldr	r0, [r4, #4]
 800b910:	6803      	ldr	r3, [r0, #0]
 800b912:	685b      	ldr	r3, [r3, #4]
 800b914:	4798      	blx	r3
 800b916:	2800      	cmp	r0, #0
 800b918:	d1f9      	bne.n	800b90e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b91a:	4d0d      	ldr	r5, [pc, #52]	; (800b950 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b91c:	6828      	ldr	r0, [r5, #0]
 800b91e:	6803      	ldr	r3, [r0, #0]
 800b920:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b922:	4798      	blx	r3
 800b924:	f7f5 f816 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b928:	6828      	ldr	r0, [r5, #0]
 800b92a:	2101      	movs	r1, #1
 800b92c:	f7ff ff14 	bl	800b758 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b930:	6860      	ldr	r0, [r4, #4]
 800b932:	6803      	ldr	r3, [r0, #0]
 800b934:	4631      	mov	r1, r6
 800b936:	689b      	ldr	r3, [r3, #8]
 800b938:	4798      	blx	r3
 800b93a:	6823      	ldr	r3, [r4, #0]
 800b93c:	4620      	mov	r0, r4
 800b93e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b940:	4798      	blx	r3
 800b942:	6828      	ldr	r0, [r5, #0]
 800b944:	6803      	ldr	r3, [r0, #0]
 800b946:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b94a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b94c:	4718      	bx	r3
 800b94e:	bf00      	nop
 800b950:	200153e4 	.word	0x200153e4

0800b954 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b954:	b508      	push	{r3, lr}
 800b956:	f7f4 ffef 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b95a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b95e:	f7f4 bff3 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b962 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b962:	b510      	push	{r4, lr}
 800b964:	2114      	movs	r1, #20
 800b966:	4604      	mov	r4, r0
 800b968:	f014 fcfc 	bl	8020364 <_ZdlPvj>
 800b96c:	4620      	mov	r0, r4
 800b96e:	bd10      	pop	{r4, pc}

0800b970 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b970:	b510      	push	{r4, lr}
 800b972:	4604      	mov	r4, r0
 800b974:	6840      	ldr	r0, [r0, #4]
 800b976:	6803      	ldr	r3, [r0, #0]
 800b978:	681b      	ldr	r3, [r3, #0]
 800b97a:	4798      	blx	r3
 800b97c:	b948      	cbnz	r0, 800b992 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b97e:	7a63      	ldrb	r3, [r4, #9]
 800b980:	b13b      	cbz	r3, 800b992 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b982:	7a23      	ldrb	r3, [r4, #8]
 800b984:	b92b      	cbnz	r3, 800b992 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b986:	6823      	ldr	r3, [r4, #0]
 800b988:	4620      	mov	r0, r4
 800b98a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b98c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b990:	4718      	bx	r3
 800b992:	bd10      	pop	{r4, pc}

0800b994 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b994:	b570      	push	{r4, r5, r6, lr}
 800b996:	4604      	mov	r4, r0
 800b998:	6840      	ldr	r0, [r0, #4]
 800b99a:	6803      	ldr	r3, [r0, #0]
 800b99c:	681b      	ldr	r3, [r3, #0]
 800b99e:	4798      	blx	r3
 800b9a0:	4605      	mov	r5, r0
 800b9a2:	b930      	cbnz	r0, 800b9b2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b9a4:	7a23      	ldrb	r3, [r4, #8]
 800b9a6:	b123      	cbz	r3, 800b9b2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b9a8:	6860      	ldr	r0, [r4, #4]
 800b9aa:	6803      	ldr	r3, [r0, #0]
 800b9ac:	695b      	ldr	r3, [r3, #20]
 800b9ae:	4798      	blx	r3
 800b9b0:	7225      	strb	r5, [r4, #8]
 800b9b2:	6860      	ldr	r0, [r4, #4]
 800b9b4:	6803      	ldr	r3, [r0, #0]
 800b9b6:	681b      	ldr	r3, [r3, #0]
 800b9b8:	4798      	blx	r3
 800b9ba:	b928      	cbnz	r0, 800b9c8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b9bc:	6823      	ldr	r3, [r4, #0]
 800b9be:	4620      	mov	r0, r4
 800b9c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9c6:	4718      	bx	r3
 800b9c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9cc:	f7f4 bfca 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b9d0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b9d0:	b510      	push	{r4, lr}
 800b9d2:	4c04      	ldr	r4, [pc, #16]	; (800b9e4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b9d4:	6082      	str	r2, [r0, #8]
 800b9d6:	2200      	movs	r2, #0
 800b9d8:	e9c0 4100 	strd	r4, r1, [r0]
 800b9dc:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b9e0:	bd10      	pop	{r4, pc}
 800b9e2:	bf00      	nop
 800b9e4:	0802349c 	.word	0x0802349c

0800b9e8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b9e8:	6840      	ldr	r0, [r0, #4]
 800b9ea:	6803      	ldr	r3, [r0, #0]
 800b9ec:	681b      	ldr	r3, [r3, #0]
 800b9ee:	4718      	bx	r3

0800b9f0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b9f0:	4b06      	ldr	r3, [pc, #24]	; (800ba0c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800b9f2:	60c1      	str	r1, [r0, #12]
 800b9f4:	094a      	lsrs	r2, r1, #5
 800b9f6:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800b9fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800b9fe:	4313      	orrs	r3, r2
 800ba00:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800ba04:	4319      	orrs	r1, r3
 800ba06:	8201      	strh	r1, [r0, #16]
 800ba08:	4770      	bx	lr
 800ba0a:	bf00      	nop
 800ba0c:	fffff800 	.word	0xfffff800

0800ba10 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800ba10:	f1a0 0008 	sub.w	r0, r0, #8
 800ba14:	e7ec      	b.n	800b9f0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800ba16:	bf00      	nop

0800ba18 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800ba18:	b508      	push	{r3, lr}
 800ba1a:	4b05      	ldr	r3, [pc, #20]	; (800ba30 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800ba1c:	6818      	ldr	r0, [r3, #0]
 800ba1e:	6803      	ldr	r3, [r0, #0]
 800ba20:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800ba24:	4798      	blx	r3
 800ba26:	1e43      	subs	r3, r0, #1
 800ba28:	4258      	negs	r0, r3
 800ba2a:	4158      	adcs	r0, r3
 800ba2c:	bd08      	pop	{r3, pc}
 800ba2e:	bf00      	nop
 800ba30:	200153e4 	.word	0x200153e4

0800ba34 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800ba34:	4770      	bx	lr

0800ba36 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800ba36:	3808      	subs	r0, #8
 800ba38:	4770      	bx	lr

0800ba3a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800ba3a:	b430      	push	{r4, r5}
 800ba3c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800ba40:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800ba44:	8a02      	ldrh	r2, [r0, #16]
 800ba46:	9202      	str	r2, [sp, #8]
 800ba48:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800ba4c:	68c2      	ldr	r2, [r0, #12]
 800ba4e:	4629      	mov	r1, r5
 800ba50:	4620      	mov	r0, r4
 800ba52:	bc30      	pop	{r4, r5}
 800ba54:	f7f5 b944 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800ba58 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800ba58:	f7f5 b938 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800ba5c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800ba5c:	b510      	push	{r4, lr}
 800ba5e:	2114      	movs	r1, #20
 800ba60:	4604      	mov	r4, r0
 800ba62:	f014 fc7f 	bl	8020364 <_ZdlPvj>
 800ba66:	4620      	mov	r0, r4
 800ba68:	bd10      	pop	{r4, pc}

0800ba6a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800ba6a:	f1a0 0008 	sub.w	r0, r0, #8
 800ba6e:	e7f5      	b.n	800ba5c <_ZN8touchgfx13PainterRGB565D0Ev>

0800ba70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800ba70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ba72:	6803      	ldr	r3, [r0, #0]
 800ba74:	460d      	mov	r5, r1
 800ba76:	4604      	mov	r4, r0
 800ba78:	4601      	mov	r1, r0
 800ba7a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800ba7c:	a802      	add	r0, sp, #8
 800ba7e:	4798      	blx	r3
 800ba80:	6828      	ldr	r0, [r5, #0]
 800ba82:	6869      	ldr	r1, [r5, #4]
 800ba84:	466b      	mov	r3, sp
 800ba86:	c303      	stmia	r3!, {r0, r1}
 800ba88:	4668      	mov	r0, sp
 800ba8a:	4619      	mov	r1, r3
 800ba8c:	f7fe ffae 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800ba90:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ba92:	b1a8      	cbz	r0, 800bac0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800ba94:	6803      	ldr	r3, [r0, #0]
 800ba96:	1d21      	adds	r1, r4, #4
 800ba98:	68db      	ldr	r3, [r3, #12]
 800ba9a:	4798      	blx	r3
 800ba9c:	b180      	cbz	r0, 800bac0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800ba9e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800baa2:	2b00      	cmp	r3, #0
 800baa4:	dd0c      	ble.n	800bac0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800baa6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800baaa:	2d00      	cmp	r5, #0
 800baac:	dd08      	ble.n	800bac0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800baae:	4a2d      	ldr	r2, [pc, #180]	; (800bb64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800bab0:	7812      	ldrb	r2, [r2, #0]
 800bab2:	b13a      	cbz	r2, 800bac4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800bab4:	2a01      	cmp	r2, #1
 800bab6:	d02d      	beq.n	800bb14 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800bab8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800baba:	6803      	ldr	r3, [r0, #0]
 800babc:	691b      	ldr	r3, [r3, #16]
 800babe:	4798      	blx	r3
 800bac0:	b004      	add	sp, #16
 800bac2:	bd70      	pop	{r4, r5, r6, pc}
 800bac4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bac8:	441d      	add	r5, r3
 800baca:	b2ad      	uxth	r5, r5
 800bacc:	b22e      	sxth	r6, r5
 800bace:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800bad2:	42b3      	cmp	r3, r6
 800bad4:	daf0      	bge.n	800bab8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bad6:	6823      	ldr	r3, [r4, #0]
 800bad8:	4669      	mov	r1, sp
 800bada:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800badc:	4620      	mov	r0, r4
 800bade:	4798      	blx	r3
 800bae0:	b940      	cbnz	r0, 800baf4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800bae2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bae6:	2b01      	cmp	r3, #1
 800bae8:	d004      	beq.n	800baf4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800baea:	3301      	adds	r3, #1
 800baec:	105b      	asrs	r3, r3, #1
 800baee:	f8ad 3006 	strh.w	r3, [sp, #6]
 800baf2:	e7f0      	b.n	800bad6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800baf4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800baf8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bafc:	4413      	add	r3, r2
 800bafe:	b29b      	uxth	r3, r3
 800bb00:	441a      	add	r2, r3
 800bb02:	b212      	sxth	r2, r2
 800bb04:	4296      	cmp	r6, r2
 800bb06:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bb0a:	dae0      	bge.n	800bace <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bb0c:	1aeb      	subs	r3, r5, r3
 800bb0e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bb12:	e7dc      	b.n	800bace <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bb14:	f8bd 5000 	ldrh.w	r5, [sp]
 800bb18:	441d      	add	r5, r3
 800bb1a:	b2ad      	uxth	r5, r5
 800bb1c:	b22e      	sxth	r6, r5
 800bb1e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bb22:	42b3      	cmp	r3, r6
 800bb24:	dac8      	bge.n	800bab8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bb26:	6823      	ldr	r3, [r4, #0]
 800bb28:	4669      	mov	r1, sp
 800bb2a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bb2c:	4620      	mov	r0, r4
 800bb2e:	4798      	blx	r3
 800bb30:	b940      	cbnz	r0, 800bb44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bb32:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bb36:	2b01      	cmp	r3, #1
 800bb38:	d004      	beq.n	800bb44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bb3a:	3301      	adds	r3, #1
 800bb3c:	105b      	asrs	r3, r3, #1
 800bb3e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bb42:	e7f0      	b.n	800bb26 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800bb44:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800bb48:	f8bd 3000 	ldrh.w	r3, [sp]
 800bb4c:	4413      	add	r3, r2
 800bb4e:	b29b      	uxth	r3, r3
 800bb50:	441a      	add	r2, r3
 800bb52:	b212      	sxth	r2, r2
 800bb54:	4296      	cmp	r6, r2
 800bb56:	f8ad 3000 	strh.w	r3, [sp]
 800bb5a:	dae0      	bge.n	800bb1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bb5c:	1aeb      	subs	r3, r5, r3
 800bb5e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bb62:	e7dc      	b.n	800bb1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bb64:	200153dc 	.word	0x200153dc

0800bb68 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800bb68:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bb6a:	6803      	ldr	r3, [r0, #0]
 800bb6c:	4604      	mov	r4, r0
 800bb6e:	4601      	mov	r1, r0
 800bb70:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bb72:	4668      	mov	r0, sp
 800bb74:	4798      	blx	r3
 800bb76:	2100      	movs	r1, #0
 800bb78:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bb7c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bb80:	9102      	str	r1, [sp, #8]
 800bb82:	4668      	mov	r0, sp
 800bb84:	a902      	add	r1, sp, #8
 800bb86:	f8ad 200c 	strh.w	r2, [sp, #12]
 800bb8a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800bb8e:	f7fe ff2d 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800bb92:	6823      	ldr	r3, [r4, #0]
 800bb94:	4669      	mov	r1, sp
 800bb96:	691b      	ldr	r3, [r3, #16]
 800bb98:	4620      	mov	r0, r4
 800bb9a:	4798      	blx	r3
 800bb9c:	b004      	add	sp, #16
 800bb9e:	bd10      	pop	{r4, pc}

0800bba0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800bba0:	2101      	movs	r1, #1
 800bba2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800bba6:	490b      	ldr	r1, [pc, #44]	; (800bbd4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800bba8:	6001      	str	r1, [r0, #0]
 800bbaa:	2200      	movs	r2, #0
 800bbac:	21ff      	movs	r1, #255	; 0xff
 800bbae:	8082      	strh	r2, [r0, #4]
 800bbb0:	80c2      	strh	r2, [r0, #6]
 800bbb2:	8102      	strh	r2, [r0, #8]
 800bbb4:	8142      	strh	r2, [r0, #10]
 800bbb6:	8182      	strh	r2, [r0, #12]
 800bbb8:	81c2      	strh	r2, [r0, #14]
 800bbba:	8202      	strh	r2, [r0, #16]
 800bbbc:	8242      	strh	r2, [r0, #18]
 800bbbe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bbc2:	61c2      	str	r2, [r0, #28]
 800bbc4:	8402      	strh	r2, [r0, #32]
 800bbc6:	8442      	strh	r2, [r0, #34]	; 0x22
 800bbc8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bbcc:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800bbd0:	6282      	str	r2, [r0, #40]	; 0x28
 800bbd2:	4770      	bx	lr
 800bbd4:	080234f8 	.word	0x080234f8

0800bbd8 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800bbd8:	6301      	str	r1, [r0, #48]	; 0x30
 800bbda:	4770      	bx	lr

0800bbdc <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800bbdc:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bbde:	4770      	bx	lr

0800bbe0 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800bbe0:	6341      	str	r1, [r0, #52]	; 0x34
 800bbe2:	4770      	bx	lr

0800bbe4 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800bbe4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800bbe6:	4770      	bx	lr

0800bbe8 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800bbe8:	4770      	bx	lr

0800bbea <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800bbea:	4608      	mov	r0, r1
 800bbec:	4770      	bx	lr

0800bbee <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800bbee:	4608      	mov	r0, r1
 800bbf0:	4770      	bx	lr

0800bbf2 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800bbf2:	b530      	push	{r4, r5, lr}
 800bbf4:	460d      	mov	r5, r1
 800bbf6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bbf8:	8949      	ldrh	r1, [r1, #10]
 800bbfa:	1ac9      	subs	r1, r1, r3
 800bbfc:	6803      	ldr	r3, [r0, #0]
 800bbfe:	b085      	sub	sp, #20
 800bc00:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800bc04:	f10d 0206 	add.w	r2, sp, #6
 800bc08:	b209      	sxth	r1, r1
 800bc0a:	4604      	mov	r4, r0
 800bc0c:	4798      	blx	r3
 800bc0e:	b1a0      	cbz	r0, 800bc3a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bc10:	792b      	ldrb	r3, [r5, #4]
 800bc12:	b993      	cbnz	r3, 800bc3a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bc14:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bc18:	b178      	cbz	r0, 800bc3a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bc1a:	6803      	ldr	r3, [r0, #0]
 800bc1c:	68db      	ldr	r3, [r3, #12]
 800bc1e:	4798      	blx	r3
 800bc20:	b158      	cbz	r0, 800bc3a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bc22:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bc26:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bc2a:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bc2e:	9503      	str	r5, [sp, #12]
 800bc30:	6803      	ldr	r3, [r0, #0]
 800bc32:	aa02      	add	r2, sp, #8
 800bc34:	689b      	ldr	r3, [r3, #8]
 800bc36:	4621      	mov	r1, r4
 800bc38:	4798      	blx	r3
 800bc3a:	b005      	add	sp, #20
 800bc3c:	bd30      	pop	{r4, r5, pc}

0800bc3e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800bc3e:	b510      	push	{r4, lr}
 800bc40:	428a      	cmp	r2, r1
 800bc42:	bfbe      	ittt	lt
 800bc44:	460b      	movlt	r3, r1
 800bc46:	4611      	movlt	r1, r2
 800bc48:	461a      	movlt	r2, r3
 800bc4a:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800bc4e:	428b      	cmp	r3, r1
 800bc50:	4604      	mov	r4, r0
 800bc52:	d103      	bne.n	800bc5c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800bc54:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800bc58:	4293      	cmp	r3, r2
 800bc5a:	d011      	beq.n	800bc80 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800bc5c:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800bc60:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800bc64:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800bc68:	f005 fff7 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bc6c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bc70:	f005 fff3 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bc74:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800bc78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bc7c:	f005 bfed 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bc80:	bd10      	pop	{r4, pc}

0800bc82 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800bc82:	b510      	push	{r4, lr}
 800bc84:	428a      	cmp	r2, r1
 800bc86:	bfbe      	ittt	lt
 800bc88:	460b      	movlt	r3, r1
 800bc8a:	4611      	movlt	r1, r2
 800bc8c:	461a      	movlt	r2, r3
 800bc8e:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800bc92:	428b      	cmp	r3, r1
 800bc94:	4604      	mov	r4, r0
 800bc96:	d103      	bne.n	800bca0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800bc98:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800bc9c:	4293      	cmp	r3, r2
 800bc9e:	d011      	beq.n	800bcc4 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800bca0:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800bca4:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800bca8:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800bcac:	f005 ffd5 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bcb0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bcb4:	f005 ffd1 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bcb8:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800bcbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bcc0:	f005 bfcb 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bcc4:	bd10      	pop	{r4, pc}

0800bcc6 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800bcc6:	2300      	movs	r3, #0
 800bcc8:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800bccc:	3038      	adds	r0, #56	; 0x38
 800bcce:	f005 bfc4 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>

0800bcd2 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800bcd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bcd6:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800bcda:	4605      	mov	r5, r0
 800bcdc:	4688      	mov	r8, r1
 800bcde:	4617      	mov	r7, r2
 800bce0:	2b00      	cmp	r3, #0
 800bce2:	d03f      	beq.n	800bd64 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800bce4:	6803      	ldr	r3, [r0, #0]
 800bce6:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800bcea:	4798      	blx	r3
 800bcec:	682b      	ldr	r3, [r5, #0]
 800bcee:	4604      	mov	r4, r0
 800bcf0:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800bcf4:	4628      	mov	r0, r5
 800bcf6:	4798      	blx	r3
 800bcf8:	4284      	cmp	r4, r0
 800bcfa:	bfc8      	it	gt
 800bcfc:	4623      	movgt	r3, r4
 800bcfe:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800bd02:	bfc4      	itt	gt
 800bd04:	4604      	movgt	r4, r0
 800bd06:	4618      	movgt	r0, r3
 800bd08:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800bd0c:	42b3      	cmp	r3, r6
 800bd0e:	da29      	bge.n	800bd64 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800bd10:	42b0      	cmp	r0, r6
 800bd12:	bfa8      	it	ge
 800bd14:	4630      	movge	r0, r6
 800bd16:	2800      	cmp	r0, #0
 800bd18:	db24      	blt.n	800bd64 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800bd1a:	f1b8 0f00 	cmp.w	r8, #0
 800bd1e:	d11e      	bne.n	800bd5e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800bd20:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800bd24:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800bd28:	460c      	mov	r4, r1
 800bd2a:	009a      	lsls	r2, r3, #2
 800bd2c:	4298      	cmp	r0, r3
 800bd2e:	dd0b      	ble.n	800bd48 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800bd30:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800bd34:	58b6      	ldr	r6, [r6, r2]
 800bd36:	42b1      	cmp	r1, r6
 800bd38:	bfa8      	it	ge
 800bd3a:	4631      	movge	r1, r6
 800bd3c:	42b4      	cmp	r4, r6
 800bd3e:	bfb8      	it	lt
 800bd40:	4634      	movlt	r4, r6
 800bd42:	3301      	adds	r3, #1
 800bd44:	3204      	adds	r2, #4
 800bd46:	e7f1      	b.n	800bd2c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800bd48:	1bc9      	subs	r1, r1, r7
 800bd4a:	193a      	adds	r2, r7, r4
 800bd4c:	4291      	cmp	r1, r2
 800bd4e:	d009      	beq.n	800bd64 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800bd50:	682b      	ldr	r3, [r5, #0]
 800bd52:	4628      	mov	r0, r5
 800bd54:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800bd58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bd5c:	4718      	bx	r3
 800bd5e:	427c      	negs	r4, r7
 800bd60:	4639      	mov	r1, r7
 800bd62:	e7e2      	b.n	800bd2a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800bd64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bd68 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800bd68:	b530      	push	{r4, r5, lr}
 800bd6a:	790b      	ldrb	r3, [r1, #4]
 800bd6c:	2b02      	cmp	r3, #2
 800bd6e:	b085      	sub	sp, #20
 800bd70:	4604      	mov	r4, r0
 800bd72:	460d      	mov	r5, r1
 800bd74:	d020      	beq.n	800bdb8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bd76:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bd78:	88c9      	ldrh	r1, [r1, #6]
 800bd7a:	1ac9      	subs	r1, r1, r3
 800bd7c:	6803      	ldr	r3, [r0, #0]
 800bd7e:	f10d 0206 	add.w	r2, sp, #6
 800bd82:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800bd86:	b209      	sxth	r1, r1
 800bd88:	4798      	blx	r3
 800bd8a:	b1a8      	cbz	r0, 800bdb8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bd8c:	792b      	ldrb	r3, [r5, #4]
 800bd8e:	2b01      	cmp	r3, #1
 800bd90:	d812      	bhi.n	800bdb8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bd92:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800bd96:	b178      	cbz	r0, 800bdb8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bd98:	6803      	ldr	r3, [r0, #0]
 800bd9a:	68db      	ldr	r3, [r3, #12]
 800bd9c:	4798      	blx	r3
 800bd9e:	b158      	cbz	r0, 800bdb8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bda0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bda4:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800bda8:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bdac:	9503      	str	r5, [sp, #12]
 800bdae:	6803      	ldr	r3, [r0, #0]
 800bdb0:	aa02      	add	r2, sp, #8
 800bdb2:	689b      	ldr	r3, [r3, #8]
 800bdb4:	4621      	mov	r1, r4
 800bdb6:	4798      	blx	r3
 800bdb8:	b005      	add	sp, #20
 800bdba:	bd30      	pop	{r4, r5, pc}

0800bdbc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800bdbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdc0:	4604      	mov	r4, r0
 800bdc2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800bdc6:	9e06      	ldr	r6, [sp, #24]
 800bdc8:	4690      	mov	r8, r2
 800bdca:	461f      	mov	r7, r3
 800bdcc:	b928      	cbnz	r0, 800bdda <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800bdce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bdd2:	8033      	strh	r3, [r6, #0]
 800bdd4:	803b      	strh	r3, [r7, #0]
 800bdd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bdda:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800bdde:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800bde2:	1883      	adds	r3, r0, r2
 800bde4:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800bde8:	1ad2      	subs	r2, r2, r3
 800bdea:	b212      	sxth	r2, r2
 800bdec:	2a01      	cmp	r2, #1
 800bdee:	dc07      	bgt.n	800be00 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800bdf0:	2300      	movs	r3, #0
 800bdf2:	803b      	strh	r3, [r7, #0]
 800bdf4:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800bdf8:	3b01      	subs	r3, #1
 800bdfa:	8033      	strh	r3, [r6, #0]
 800bdfc:	2001      	movs	r0, #1
 800bdfe:	e7ea      	b.n	800bdd6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800be00:	1a08      	subs	r0, r1, r0
 800be02:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800be06:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800be0a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800be0c:	1a5b      	subs	r3, r3, r1
 800be0e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800be12:	d45b      	bmi.n	800becc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800be14:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800be18:	fb93 f1f5 	sdiv	r1, r3, r5
 800be1c:	2302      	movs	r3, #2
 800be1e:	fb91 f1f3 	sdiv	r1, r1, r3
 800be22:	3a01      	subs	r2, #1
 800be24:	f006 f8da 	bl	8011fdc <_ZN8touchgfx6muldivElll>
 800be28:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800be2c:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800be30:	2900      	cmp	r1, #0
 800be32:	db57      	blt.n	800bee4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800be34:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800be38:	2502      	movs	r5, #2
 800be3a:	fb93 f3fc 	sdiv	r3, r3, ip
 800be3e:	fb93 f3f5 	sdiv	r3, r3, r5
 800be42:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800be46:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800be4a:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800be4e:	1a52      	subs	r2, r2, r1
 800be50:	eba8 0003 	sub.w	r0, r8, r3
 800be54:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800be58:	d450      	bmi.n	800befc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800be5a:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800be5e:	fb92 f1fc 	sdiv	r1, r2, ip
 800be62:	2202      	movs	r2, #2
 800be64:	fb91 f1f2 	sdiv	r1, r1, r2
 800be68:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800be6c:	4413      	add	r3, r2
 800be6e:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800be72:	1ad2      	subs	r2, r2, r3
 800be74:	b212      	sxth	r2, r2
 800be76:	3a01      	subs	r2, #1
 800be78:	f006 f8b0 	bl	8011fdc <_ZN8touchgfx6muldivElll>
 800be7c:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800be80:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800be82:	2b00      	cmp	r3, #0
 800be84:	db46      	blt.n	800bf14 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800be86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800be8a:	fb93 f3f2 	sdiv	r3, r3, r2
 800be8e:	2202      	movs	r2, #2
 800be90:	fb93 f3f2 	sdiv	r3, r3, r2
 800be94:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800be98:	429d      	cmp	r5, r3
 800be9a:	bfde      	ittt	le
 800be9c:	461a      	movle	r2, r3
 800be9e:	462b      	movle	r3, r5
 800bea0:	4615      	movle	r5, r2
 800bea2:	2d00      	cmp	r5, #0
 800bea4:	bfa4      	itt	ge
 800bea6:	351f      	addge	r5, #31
 800bea8:	116d      	asrge	r5, r5, #5
 800beaa:	f04f 0020 	mov.w	r0, #32
 800beae:	bfb8      	it	lt
 800beb0:	fb95 f5f0 	sdivlt	r5, r5, r0
 800beb4:	b22d      	sxth	r5, r5
 800beb6:	2d00      	cmp	r5, #0
 800beb8:	b21b      	sxth	r3, r3
 800beba:	fb93 f3f0 	sdiv	r3, r3, r0
 800bebe:	803b      	strh	r3, [r7, #0]
 800bec0:	8035      	strh	r5, [r6, #0]
 800bec2:	da33      	bge.n	800bf2c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800bec4:	2000      	movs	r0, #0
 800bec6:	8030      	strh	r0, [r6, #0]
 800bec8:	8038      	strh	r0, [r7, #0]
 800beca:	e784      	b.n	800bdd6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800becc:	f06f 0101 	mvn.w	r1, #1
 800bed0:	fb01 5303 	mla	r3, r1, r3, r5
 800bed4:	1e59      	subs	r1, r3, #1
 800bed6:	2302      	movs	r3, #2
 800bed8:	fb91 f1f5 	sdiv	r1, r1, r5
 800bedc:	fb91 f1f3 	sdiv	r1, r1, r3
 800bee0:	4249      	negs	r1, r1
 800bee2:	e79e      	b.n	800be22 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800bee4:	f06f 0301 	mvn.w	r3, #1
 800bee8:	fb03 c301 	mla	r3, r3, r1, ip
 800beec:	3b01      	subs	r3, #1
 800beee:	2502      	movs	r5, #2
 800bef0:	fb93 f3fc 	sdiv	r3, r3, ip
 800bef4:	fb93 f3f5 	sdiv	r3, r3, r5
 800bef8:	425b      	negs	r3, r3
 800befa:	e7a2      	b.n	800be42 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800befc:	f06f 0101 	mvn.w	r1, #1
 800bf00:	fb01 c202 	mla	r2, r1, r2, ip
 800bf04:	1e51      	subs	r1, r2, #1
 800bf06:	2202      	movs	r2, #2
 800bf08:	fb91 f1fc 	sdiv	r1, r1, ip
 800bf0c:	fb91 f1f2 	sdiv	r1, r1, r2
 800bf10:	4249      	negs	r1, r1
 800bf12:	e7a9      	b.n	800be68 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800bf14:	f06f 0101 	mvn.w	r1, #1
 800bf18:	fb01 2303 	mla	r3, r1, r3, r2
 800bf1c:	3b01      	subs	r3, #1
 800bf1e:	fb93 f3f2 	sdiv	r3, r3, r2
 800bf22:	2202      	movs	r2, #2
 800bf24:	fb93 f3f2 	sdiv	r3, r3, r2
 800bf28:	425b      	negs	r3, r3
 800bf2a:	e7b3      	b.n	800be94 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800bf2c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800bf30:	f9b7 2000 	ldrsh.w	r2, [r7]
 800bf34:	4293      	cmp	r3, r2
 800bf36:	dc05      	bgt.n	800bf44 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800bf38:	3b01      	subs	r3, #1
 800bf3a:	b21b      	sxth	r3, r3
 800bf3c:	8033      	strh	r3, [r6, #0]
 800bf3e:	2000      	movs	r0, #0
 800bf40:	803b      	strh	r3, [r7, #0]
 800bf42:	e748      	b.n	800bdd6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800bf44:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800bf48:	803a      	strh	r2, [r7, #0]
 800bf4a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800bf4e:	f9b6 2000 	ldrsh.w	r2, [r6]
 800bf52:	4293      	cmp	r3, r2
 800bf54:	bfdc      	itt	le
 800bf56:	f103 33ff 	addle.w	r3, r3, #4294967295
 800bf5a:	b21a      	sxthle	r2, r3
 800bf5c:	8032      	strh	r2, [r6, #0]
 800bf5e:	e74d      	b.n	800bdfc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800bf60 <_ZN8touchgfx9ContainerC1Ev>:
 800bf60:	2101      	movs	r1, #1
 800bf62:	2200      	movs	r2, #0
 800bf64:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800bf68:	4909      	ldr	r1, [pc, #36]	; (800bf90 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800bf6a:	8082      	strh	r2, [r0, #4]
 800bf6c:	80c2      	strh	r2, [r0, #6]
 800bf6e:	8102      	strh	r2, [r0, #8]
 800bf70:	8142      	strh	r2, [r0, #10]
 800bf72:	8182      	strh	r2, [r0, #12]
 800bf74:	81c2      	strh	r2, [r0, #14]
 800bf76:	8202      	strh	r2, [r0, #16]
 800bf78:	8242      	strh	r2, [r0, #18]
 800bf7a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bf7e:	61c2      	str	r2, [r0, #28]
 800bf80:	8402      	strh	r2, [r0, #32]
 800bf82:	8442      	strh	r2, [r0, #34]	; 0x22
 800bf84:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bf88:	6001      	str	r1, [r0, #0]
 800bf8a:	6282      	str	r2, [r0, #40]	; 0x28
 800bf8c:	4770      	bx	lr
 800bf8e:	bf00      	nop
 800bf90:	08023400 	.word	0x08023400

0800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800bf94:	6800      	ldr	r0, [r0, #0]
 800bf96:	2800      	cmp	r0, #0
 800bf98:	bfbd      	ittte	lt
 800bf9a:	380f      	sublt	r0, #15
 800bf9c:	2320      	movlt	r3, #32
 800bf9e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800bfa2:	3010      	addge	r0, #16
 800bfa4:	bfa8      	it	ge
 800bfa6:	1140      	asrge	r0, r0, #5
 800bfa8:	4770      	bx	lr

0800bfaa <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800bfaa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfae:	4605      	mov	r5, r0
 800bfb0:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800bfb4:	4688      	mov	r8, r1
 800bfb6:	4691      	mov	r9, r2
 800bfb8:	469a      	mov	sl, r3
 800bfba:	b360      	cbz	r0, 800c016 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800bfbc:	2700      	movs	r7, #0
 800bfbe:	f04f 3bff 	mov.w	fp, #4294967295
 800bfc2:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800bfc6:	b23e      	sxth	r6, r7
 800bfc8:	42b3      	cmp	r3, r6
 800bfca:	dd23      	ble.n	800c014 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800bfcc:	682b      	ldr	r3, [r5, #0]
 800bfce:	4631      	mov	r1, r6
 800bfd0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800bfd4:	4628      	mov	r0, r5
 800bfd6:	4798      	blx	r3
 800bfd8:	9001      	str	r0, [sp, #4]
 800bfda:	a801      	add	r0, sp, #4
 800bfdc:	f7ff ffda 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bfe0:	682b      	ldr	r3, [r5, #0]
 800bfe2:	eba0 0008 	sub.w	r0, r0, r8
 800bfe6:	b204      	sxth	r4, r0
 800bfe8:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800bfec:	4631      	mov	r1, r6
 800bfee:	4628      	mov	r0, r5
 800bff0:	4798      	blx	r3
 800bff2:	9001      	str	r0, [sp, #4]
 800bff4:	a801      	add	r0, sp, #4
 800bff6:	f7ff ffcd 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bffa:	eba0 0009 	sub.w	r0, r0, r9
 800bffe:	fb10 f000 	smulbb	r0, r0, r0
 800c002:	fb04 0404 	mla	r4, r4, r4, r0
 800c006:	455c      	cmp	r4, fp
 800c008:	bf3c      	itt	cc
 800c00a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c00e:	46a3      	movcc	fp, r4
 800c010:	3701      	adds	r7, #1
 800c012:	e7d6      	b.n	800bfc2 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c014:	2001      	movs	r0, #1
 800c016:	b003      	add	sp, #12
 800c018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c01c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c01c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c020:	4604      	mov	r4, r0
 800c022:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c026:	4688      	mov	r8, r1
 800c028:	4691      	mov	r9, r2
 800c02a:	b1f8      	cbz	r0, 800c06c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c02c:	2500      	movs	r5, #0
 800c02e:	f04f 37ff 	mov.w	r7, #4294967295
 800c032:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c036:	b22e      	sxth	r6, r5
 800c038:	42b3      	cmp	r3, r6
 800c03a:	dd16      	ble.n	800c06a <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c03c:	6823      	ldr	r3, [r4, #0]
 800c03e:	4631      	mov	r1, r6
 800c040:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c044:	4620      	mov	r0, r4
 800c046:	4798      	blx	r3
 800c048:	9001      	str	r0, [sp, #4]
 800c04a:	a801      	add	r0, sp, #4
 800c04c:	f7ff ffa2 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c050:	b200      	sxth	r0, r0
 800c052:	eba0 0008 	sub.w	r0, r0, r8
 800c056:	2800      	cmp	r0, #0
 800c058:	bfb8      	it	lt
 800c05a:	4240      	neglt	r0, r0
 800c05c:	42b8      	cmp	r0, r7
 800c05e:	bf3c      	itt	cc
 800c060:	f8a9 6000 	strhcc.w	r6, [r9]
 800c064:	4607      	movcc	r7, r0
 800c066:	3501      	adds	r5, #1
 800c068:	e7e3      	b.n	800c032 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c06a:	2001      	movs	r0, #1
 800c06c:	b003      	add	sp, #12
 800c06e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c072 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c072:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c076:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c07a:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c07e:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c082:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c086:	4770      	bx	lr

0800c088 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c088:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c08a:	4604      	mov	r4, r0
 800c08c:	3038      	adds	r0, #56	; 0x38
 800c08e:	460d      	mov	r5, r1
 800c090:	f7fe fb1c 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c094:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c098:	9200      	str	r2, [sp, #0]
 800c09a:	2200      	movs	r2, #0
 800c09c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c0a0:	4611      	mov	r1, r2
 800c0a2:	4628      	mov	r0, r5
 800c0a4:	f7f6 fe09 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c0a8:	b003      	add	sp, #12
 800c0aa:	bd30      	pop	{r4, r5, pc}

0800c0ac <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c0ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c0ae:	4604      	mov	r4, r0
 800c0b0:	3064      	adds	r0, #100	; 0x64
 800c0b2:	460d      	mov	r5, r1
 800c0b4:	f7fe fb0a 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c0b8:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c0bc:	9200      	str	r2, [sp, #0]
 800c0be:	2200      	movs	r2, #0
 800c0c0:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c0c4:	4611      	mov	r1, r2
 800c0c6:	4628      	mov	r0, r5
 800c0c8:	f7f6 fdf7 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c0cc:	b003      	add	sp, #12
 800c0ce:	bd30      	pop	{r4, r5, pc}

0800c0d0 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c0d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c0d2:	4604      	mov	r4, r0
 800c0d4:	30e8      	adds	r0, #232	; 0xe8
 800c0d6:	460d      	mov	r5, r1
 800c0d8:	f7fe faf8 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c0dc:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c0e0:	9200      	str	r2, [sp, #0]
 800c0e2:	2200      	movs	r2, #0
 800c0e4:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c0e8:	4611      	mov	r1, r2
 800c0ea:	4628      	mov	r0, r5
 800c0ec:	f7f6 fde5 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c0f0:	b003      	add	sp, #12
 800c0f2:	bd30      	pop	{r4, r5, pc}

0800c0f4 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c0f4:	b538      	push	{r3, r4, r5, lr}
 800c0f6:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c0fa:	428b      	cmp	r3, r1
 800c0fc:	460d      	mov	r5, r1
 800c0fe:	dd08      	ble.n	800c112 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c100:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c102:	b134      	cbz	r4, 800c112 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c104:	6823      	ldr	r3, [r4, #0]
 800c106:	4620      	mov	r0, r4
 800c108:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c10a:	4629      	mov	r1, r5
 800c10c:	4798      	blx	r3
 800c10e:	69a4      	ldr	r4, [r4, #24]
 800c110:	e7f7      	b.n	800c102 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c112:	bd38      	pop	{r3, r4, r5, pc}

0800c114 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c114:	b570      	push	{r4, r5, r6, lr}
 800c116:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c11a:	4606      	mov	r6, r0
 800c11c:	460d      	mov	r5, r1
 800c11e:	b134      	cbz	r4, 800c12e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c120:	6823      	ldr	r3, [r4, #0]
 800c122:	4620      	mov	r0, r4
 800c124:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c126:	4629      	mov	r1, r5
 800c128:	4798      	blx	r3
 800c12a:	69a4      	ldr	r4, [r4, #24]
 800c12c:	e7f7      	b.n	800c11e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c12e:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c132:	b134      	cbz	r4, 800c142 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c134:	6823      	ldr	r3, [r4, #0]
 800c136:	4620      	mov	r0, r4
 800c138:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c13a:	4629      	mov	r1, r5
 800c13c:	4798      	blx	r3
 800c13e:	69a4      	ldr	r4, [r4, #24]
 800c140:	e7f7      	b.n	800c132 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c142:	bd70      	pop	{r4, r5, r6, pc}

0800c144 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c144:	b538      	push	{r3, r4, r5, lr}
 800c146:	4604      	mov	r4, r0
 800c148:	2500      	movs	r5, #0
 800c14a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c14e:	42ab      	cmp	r3, r5
 800c150:	db05      	blt.n	800c15e <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c152:	b229      	sxth	r1, r5
 800c154:	4620      	mov	r0, r4
 800c156:	f7ff ffdd 	bl	800c114 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c15a:	3501      	adds	r5, #1
 800c15c:	e7f5      	b.n	800c14a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c15e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c162:	f005 fd7a 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 800c166:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c16a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c16e:	f005 bd74 	b.w	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>

0800c172 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c172:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c174:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c176:	4604      	mov	r4, r0
 800c178:	b15d      	cbz	r5, 800c192 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c17a:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c17e:	9200      	str	r2, [sp, #0]
 800c180:	2200      	movs	r2, #0
 800c182:	4628      	mov	r0, r5
 800c184:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c188:	4611      	mov	r1, r2
 800c18a:	f7f6 fd96 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c18e:	69ad      	ldr	r5, [r5, #24]
 800c190:	e7f2      	b.n	800c178 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c192:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c196:	b15d      	cbz	r5, 800c1b0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c198:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c19c:	9200      	str	r2, [sp, #0]
 800c19e:	2200      	movs	r2, #0
 800c1a0:	4628      	mov	r0, r5
 800c1a2:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c1a6:	4611      	mov	r1, r2
 800c1a8:	f7f6 fd87 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c1ac:	69ad      	ldr	r5, [r5, #24]
 800c1ae:	e7f2      	b.n	800c196 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c1b0:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c1b4:	b15d      	cbz	r5, 800c1ce <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c1b6:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c1ba:	9200      	str	r2, [sp, #0]
 800c1bc:	2200      	movs	r2, #0
 800c1be:	4628      	mov	r0, r5
 800c1c0:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c1c4:	4611      	mov	r1, r2
 800c1c6:	f7f6 fd78 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c1ca:	69ad      	ldr	r5, [r5, #24]
 800c1cc:	e7f2      	b.n	800c1b4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c1ce:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c1d2:	b15d      	cbz	r5, 800c1ec <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c1d4:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c1d8:	9200      	str	r2, [sp, #0]
 800c1da:	2200      	movs	r2, #0
 800c1dc:	4628      	mov	r0, r5
 800c1de:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c1e2:	4611      	mov	r1, r2
 800c1e4:	f7f6 fd69 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c1e8:	69ad      	ldr	r5, [r5, #24]
 800c1ea:	e7f2      	b.n	800c1d2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c1ec:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c1f0:	b15d      	cbz	r5, 800c20a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c1f2:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c1f6:	9200      	str	r2, [sp, #0]
 800c1f8:	2200      	movs	r2, #0
 800c1fa:	4628      	mov	r0, r5
 800c1fc:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c200:	4611      	mov	r1, r2
 800c202:	f7f6 fd5a 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c206:	69ad      	ldr	r5, [r5, #24]
 800c208:	e7f2      	b.n	800c1f0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c20a:	6823      	ldr	r3, [r4, #0]
 800c20c:	695b      	ldr	r3, [r3, #20]
 800c20e:	4620      	mov	r0, r4
 800c210:	b003      	add	sp, #12
 800c212:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c216:	4718      	bx	r3

0800c218 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c218:	b430      	push	{r4, r5}
 800c21a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c21e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c222:	b28a      	uxth	r2, r1
 800c224:	1b15      	subs	r5, r2, r4
 800c226:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c22a:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c22e:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c232:	442c      	add	r4, r5
 800c234:	1b12      	subs	r2, r2, r4
 800c236:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c23a:	8101      	strh	r1, [r0, #8]
 800c23c:	bc30      	pop	{r4, r5}
 800c23e:	f7ff bf98 	b.w	800c172 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c242 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c242:	b430      	push	{r4, r5}
 800c244:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c248:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c24c:	b28a      	uxth	r2, r1
 800c24e:	1b15      	subs	r5, r2, r4
 800c250:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c254:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c258:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c25c:	442c      	add	r4, r5
 800c25e:	1b12      	subs	r2, r2, r4
 800c260:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c264:	8141      	strh	r1, [r0, #10]
 800c266:	bc30      	pop	{r4, r5}
 800c268:	f7ff bf83 	b.w	800c172 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c26c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c26c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c270:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c274:	fa1f fa83 	uxth.w	sl, r3
 800c278:	4699      	mov	r9, r3
 800c27a:	8903      	ldrh	r3, [r0, #8]
 800c27c:	4604      	mov	r4, r0
 800c27e:	4615      	mov	r5, r2
 800c280:	fa1f f887 	uxth.w	r8, r7
 800c284:	4452      	add	r2, sl
 800c286:	8940      	ldrh	r0, [r0, #10]
 800c288:	1a9b      	subs	r3, r3, r2
 800c28a:	eb08 0201 	add.w	r2, r8, r1
 800c28e:	1a80      	subs	r0, r0, r2
 800c290:	b200      	sxth	r0, r0
 800c292:	460e      	mov	r6, r1
 800c294:	9000      	str	r0, [sp, #0]
 800c296:	460a      	mov	r2, r1
 800c298:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c29c:	4629      	mov	r1, r5
 800c29e:	b21b      	sxth	r3, r3
 800c2a0:	f7f6 fd0b 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2a4:	2200      	movs	r2, #0
 800c2a6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c2aa:	9600      	str	r6, [sp, #0]
 800c2ac:	4611      	mov	r1, r2
 800c2ae:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c2b2:	f7f6 fd02 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2b6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c2ba:	9300      	str	r3, [sp, #0]
 800c2bc:	2200      	movs	r2, #0
 800c2be:	462b      	mov	r3, r5
 800c2c0:	4611      	mov	r1, r2
 800c2c2:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c2c6:	f7f6 fcf8 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2ca:	8921      	ldrh	r1, [r4, #8]
 800c2cc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c2d0:	9300      	str	r3, [sp, #0]
 800c2d2:	eba1 010a 	sub.w	r1, r1, sl
 800c2d6:	464b      	mov	r3, r9
 800c2d8:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c2dc:	2200      	movs	r2, #0
 800c2de:	b209      	sxth	r1, r1
 800c2e0:	f7f6 fceb 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2e4:	8962      	ldrh	r2, [r4, #10]
 800c2e6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c2ea:	9700      	str	r7, [sp, #0]
 800c2ec:	eba2 0208 	sub.w	r2, r2, r8
 800c2f0:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c2f4:	b212      	sxth	r2, r2
 800c2f6:	2100      	movs	r1, #0
 800c2f8:	f7f6 fcdf 	bl	8002cba <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2fc:	4620      	mov	r0, r4
 800c2fe:	b002      	add	sp, #8
 800c300:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c304:	f7ff bf35 	b.w	800c172 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c308 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c30c:	b085      	sub	sp, #20
 800c30e:	4604      	mov	r4, r0
 800c310:	9103      	str	r1, [sp, #12]
 800c312:	f7ff fe25 	bl	800bf60 <_ZN8touchgfx9ContainerC1Ev>
 800c316:	4b2d      	ldr	r3, [pc, #180]	; (800c3cc <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c318:	6023      	str	r3, [r4, #0]
 800c31a:	2601      	movs	r6, #1
 800c31c:	23ff      	movs	r3, #255	; 0xff
 800c31e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c322:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c326:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c32a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c32e:	4658      	mov	r0, fp
 800c330:	f7ff fe16 	bl	800bf60 <_ZN8touchgfx9ContainerC1Ev>
 800c334:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c338:	4648      	mov	r0, r9
 800c33a:	f7ff fe11 	bl	800bf60 <_ZN8touchgfx9ContainerC1Ev>
 800c33e:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c342:	4640      	mov	r0, r8
 800c344:	f7ff fe0c 	bl	800bf60 <_ZN8touchgfx9ContainerC1Ev>
 800c348:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c34c:	4650      	mov	r0, sl
 800c34e:	f7ff fe07 	bl	800bf60 <_ZN8touchgfx9ContainerC1Ev>
 800c352:	4638      	mov	r0, r7
 800c354:	f7ff fe04 	bl	800bf60 <_ZN8touchgfx9ContainerC1Ev>
 800c358:	2500      	movs	r5, #0
 800c35a:	9903      	ldr	r1, [sp, #12]
 800c35c:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c360:	4620      	mov	r0, r4
 800c362:	4659      	mov	r1, fp
 800c364:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c368:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c36c:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c370:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c374:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c378:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c37c:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c380:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c384:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c388:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c38c:	f7fe f99e 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c390:	4651      	mov	r1, sl
 800c392:	4620      	mov	r0, r4
 800c394:	f7fe f99a 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c398:	4649      	mov	r1, r9
 800c39a:	4620      	mov	r0, r4
 800c39c:	f7fe f996 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c3a0:	4641      	mov	r1, r8
 800c3a2:	4620      	mov	r0, r4
 800c3a4:	f7fe f992 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c3a8:	4639      	mov	r1, r7
 800c3aa:	4620      	mov	r0, r4
 800c3ac:	f7fe f98e 	bl	800a6cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c3b0:	4620      	mov	r0, r4
 800c3b2:	9500      	str	r5, [sp, #0]
 800c3b4:	462b      	mov	r3, r5
 800c3b6:	462a      	mov	r2, r5
 800c3b8:	4629      	mov	r1, r5
 800c3ba:	f7ff ff57 	bl	800c26c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c3be:	4620      	mov	r0, r4
 800c3c0:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c3c4:	b005      	add	sp, #20
 800c3c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3ca:	bf00      	nop
 800c3cc:	08023708 	.word	0x08023708

0800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c3d0:	4291      	cmp	r1, r2
 800c3d2:	4613      	mov	r3, r2
 800c3d4:	d003      	beq.n	800c3de <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c3d6:	460a      	mov	r2, r1
 800c3d8:	4619      	mov	r1, r3
 800c3da:	f005 bdff 	b.w	8011fdc <_ZN8touchgfx6muldivElll>
 800c3de:	4770      	bx	lr

0800c3e0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c3e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3e4:	6803      	ldr	r3, [r0, #0]
 800c3e6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c3ea:	460d      	mov	r5, r1
 800c3ec:	4604      	mov	r4, r0
 800c3ee:	4798      	blx	r3
 800c3f0:	42a8      	cmp	r0, r5
 800c3f2:	4606      	mov	r6, r0
 800c3f4:	d024      	beq.n	800c440 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c3f6:	6823      	ldr	r3, [r4, #0]
 800c3f8:	4601      	mov	r1, r0
 800c3fa:	462a      	mov	r2, r5
 800c3fc:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c400:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c404:	f7ff ffe4 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c408:	462a      	mov	r2, r5
 800c40a:	4680      	mov	r8, r0
 800c40c:	4631      	mov	r1, r6
 800c40e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c412:	f7ff ffdd 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c416:	4641      	mov	r1, r8
 800c418:	4602      	mov	r2, r0
 800c41a:	4620      	mov	r0, r4
 800c41c:	47b8      	blx	r7
 800c41e:	462a      	mov	r2, r5
 800c420:	4631      	mov	r1, r6
 800c422:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c426:	f7ff ffd3 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c42a:	462a      	mov	r2, r5
 800c42c:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c430:	4631      	mov	r1, r6
 800c432:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c436:	f7ff ffcb 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c43a:	6325      	str	r5, [r4, #48]	; 0x30
 800c43c:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c440:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c444 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c444:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c448:	4604      	mov	r4, r0
 800c44a:	460f      	mov	r7, r1
 800c44c:	b1ba      	cbz	r2, 800c47e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c44e:	6803      	ldr	r3, [r0, #0]
 800c450:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c454:	4798      	blx	r3
 800c456:	2600      	movs	r6, #0
 800c458:	4681      	mov	r9, r0
 800c45a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c45e:	b235      	sxth	r5, r6
 800c460:	42ab      	cmp	r3, r5
 800c462:	f106 0601 	add.w	r6, r6, #1
 800c466:	dd0a      	ble.n	800c47e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c468:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c46c:	463a      	mov	r2, r7
 800c46e:	4649      	mov	r1, r9
 800c470:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c474:	f7ff ffac 	bl	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c478:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c47c:	e7ed      	b.n	800c45a <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c47e:	6367      	str	r7, [r4, #52]	; 0x34
 800c480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c484 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c484:	b570      	push	{r4, r5, r6, lr}
 800c486:	6803      	ldr	r3, [r0, #0]
 800c488:	4604      	mov	r4, r0
 800c48a:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800c48e:	460d      	mov	r5, r1
 800c490:	4798      	blx	r3
 800c492:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c496:	3301      	adds	r3, #1
 800c498:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800c49c:	6823      	ldr	r3, [r4, #0]
 800c49e:	4629      	mov	r1, r5
 800c4a0:	4620      	mov	r0, r4
 800c4a2:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800c4a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c4aa:	4718      	bx	r3

0800c4ac <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c4ac:	4770      	bx	lr

0800c4ae <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c4ae:	b510      	push	{r4, lr}
 800c4b0:	2130      	movs	r1, #48	; 0x30
 800c4b2:	4604      	mov	r4, r0
 800c4b4:	f013 ff56 	bl	8020364 <_ZdlPvj>
 800c4b8:	4620      	mov	r0, r4
 800c4ba:	bd10      	pop	{r4, pc}

0800c4bc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c4bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c4be:	4604      	mov	r4, r0
 800c4c0:	4608      	mov	r0, r1
 800c4c2:	460d      	mov	r5, r1
 800c4c4:	f7fe fad5 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c4c8:	b978      	cbnz	r0, 800c4ea <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c4ca:	4620      	mov	r0, r4
 800c4cc:	f7fe fad1 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c4d0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c4d4:	b150      	cbz	r0, 800c4ec <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c4d6:	8026      	strh	r6, [r4, #0]
 800c4d8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c4dc:	8063      	strh	r3, [r4, #2]
 800c4de:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c4e2:	80a3      	strh	r3, [r4, #4]
 800c4e4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c4e8:	80e3      	strh	r3, [r4, #6]
 800c4ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c4ec:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c4f0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c4f4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c4f8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c4fc:	88ed      	ldrh	r5, [r5, #6]
 800c4fe:	42b1      	cmp	r1, r6
 800c500:	460f      	mov	r7, r1
 800c502:	bfa8      	it	ge
 800c504:	4637      	movge	r7, r6
 800c506:	4293      	cmp	r3, r2
 800c508:	4618      	mov	r0, r3
 800c50a:	4466      	add	r6, ip
 800c50c:	bfa8      	it	ge
 800c50e:	4610      	movge	r0, r2
 800c510:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c514:	8027      	strh	r7, [r4, #0]
 800c516:	442a      	add	r2, r5
 800c518:	88e5      	ldrh	r5, [r4, #6]
 800c51a:	8060      	strh	r0, [r4, #2]
 800c51c:	4461      	add	r1, ip
 800c51e:	442b      	add	r3, r5
 800c520:	b236      	sxth	r6, r6
 800c522:	b209      	sxth	r1, r1
 800c524:	b212      	sxth	r2, r2
 800c526:	b21b      	sxth	r3, r3
 800c528:	428e      	cmp	r6, r1
 800c52a:	bfac      	ite	ge
 800c52c:	ebc7 0106 	rsbge	r1, r7, r6
 800c530:	ebc7 0101 	rsblt	r1, r7, r1
 800c534:	429a      	cmp	r2, r3
 800c536:	bfac      	ite	ge
 800c538:	ebc0 0202 	rsbge	r2, r0, r2
 800c53c:	ebc0 0203 	rsblt	r2, r0, r3
 800c540:	80a1      	strh	r1, [r4, #4]
 800c542:	80e2      	strh	r2, [r4, #6]
 800c544:	e7d1      	b.n	800c4ea <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c546 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c546:	6800      	ldr	r0, [r0, #0]
 800c548:	2800      	cmp	r0, #0
 800c54a:	bfb9      	ittee	lt
 800c54c:	2320      	movlt	r3, #32
 800c54e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c552:	301f      	addge	r0, #31
 800c554:	1140      	asrge	r0, r0, #5
 800c556:	4770      	bx	lr

0800c558 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c55c:	6803      	ldr	r3, [r0, #0]
 800c55e:	6945      	ldr	r5, [r0, #20]
 800c560:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c562:	b093      	sub	sp, #76	; 0x4c
 800c564:	4604      	mov	r4, r0
 800c566:	460f      	mov	r7, r1
 800c568:	2d00      	cmp	r5, #0
 800c56a:	f000 81ad 	beq.w	800c8c8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c56e:	696d      	ldr	r5, [r5, #20]
 800c570:	4798      	blx	r3
 800c572:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c576:	2b00      	cmp	r3, #0
 800c578:	d077      	beq.n	800c66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c57a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c57e:	fb13 f000 	smulbb	r0, r3, r0
 800c582:	b283      	uxth	r3, r0
 800c584:	1c58      	adds	r0, r3, #1
 800c586:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800c58a:	1200      	asrs	r0, r0, #8
 800c58c:	d06d      	beq.n	800c66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c58e:	b2c3      	uxtb	r3, r0
 800c590:	9308      	str	r3, [sp, #32]
 800c592:	6823      	ldr	r3, [r4, #0]
 800c594:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800c598:	462a      	mov	r2, r5
 800c59a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c59e:	4621      	mov	r1, r4
 800c5a0:	4640      	mov	r0, r8
 800c5a2:	4798      	blx	r3
 800c5a4:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c5a8:	ae0e      	add	r6, sp, #56	; 0x38
 800c5aa:	e886 0003 	stmia.w	r6, {r0, r1}
 800c5ae:	4639      	mov	r1, r7
 800c5b0:	4630      	mov	r0, r6
 800c5b2:	f7fe fa1b 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800c5b6:	6823      	ldr	r3, [r4, #0]
 800c5b8:	4629      	mov	r1, r5
 800c5ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c5be:	4620      	mov	r0, r4
 800c5c0:	4798      	blx	r3
 800c5c2:	6823      	ldr	r3, [r4, #0]
 800c5c4:	4607      	mov	r7, r0
 800c5c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c5ca:	4629      	mov	r1, r5
 800c5cc:	4620      	mov	r0, r4
 800c5ce:	4798      	blx	r3
 800c5d0:	4681      	mov	r9, r0
 800c5d2:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800c5d6:	0103      	lsls	r3, r0, #4
 800c5d8:	9309      	str	r3, [sp, #36]	; 0x24
 800c5da:	6823      	ldr	r3, [r4, #0]
 800c5dc:	4629      	mov	r1, r5
 800c5de:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800c5e2:	4620      	mov	r0, r4
 800c5e4:	4798      	blx	r3
 800c5e6:	b203      	sxth	r3, r0
 800c5e8:	9306      	str	r3, [sp, #24]
 800c5ea:	6823      	ldr	r3, [r4, #0]
 800c5ec:	4629      	mov	r1, r5
 800c5ee:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c5f2:	4620      	mov	r0, r4
 800c5f4:	4798      	blx	r3
 800c5f6:	2f00      	cmp	r7, #0
 800c5f8:	b203      	sxth	r3, r0
 800c5fa:	9307      	str	r3, [sp, #28]
 800c5fc:	d138      	bne.n	800c670 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800c5fe:	f1b9 0f00 	cmp.w	r9, #0
 800c602:	d132      	bne.n	800c66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c604:	6823      	ldr	r3, [r4, #0]
 800c606:	464a      	mov	r2, r9
 800c608:	4629      	mov	r1, r5
 800c60a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c60e:	4620      	mov	r0, r4
 800c610:	4798      	blx	r3
 800c612:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c614:	1ac0      	subs	r0, r0, r3
 800c616:	9010      	str	r0, [sp, #64]	; 0x40
 800c618:	4640      	mov	r0, r8
 800c61a:	f7ff fcbb 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c61e:	6823      	ldr	r3, [r4, #0]
 800c620:	4607      	mov	r7, r0
 800c622:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c626:	4629      	mov	r1, r5
 800c628:	4620      	mov	r0, r4
 800c62a:	4798      	blx	r3
 800c62c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c630:	1a38      	subs	r0, r7, r0
 800c632:	fa0f f880 	sxth.w	r8, r0
 800c636:	eb13 0f08 	cmn.w	r3, r8
 800c63a:	d416      	bmi.n	800c66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c63c:	6823      	ldr	r3, [r4, #0]
 800c63e:	4629      	mov	r1, r5
 800c640:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c644:	4620      	mov	r0, r4
 800c646:	4798      	blx	r3
 800c648:	4580      	cmp	r8, r0
 800c64a:	da0e      	bge.n	800c66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c64c:	9a08      	ldr	r2, [sp, #32]
 800c64e:	6823      	ldr	r3, [r4, #0]
 800c650:	9202      	str	r2, [sp, #8]
 800c652:	b23f      	sxth	r7, r7
 800c654:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c658:	9201      	str	r2, [sp, #4]
 800c65a:	9700      	str	r7, [sp, #0]
 800c65c:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800c660:	4631      	mov	r1, r6
 800c662:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c666:	4620      	mov	r0, r4
 800c668:	47a8      	blx	r5
 800c66a:	b013      	add	sp, #76	; 0x4c
 800c66c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c670:	ddfb      	ble.n	800c66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c672:	6823      	ldr	r3, [r4, #0]
 800c674:	4629      	mov	r1, r5
 800c676:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c67a:	4620      	mov	r0, r4
 800c67c:	4798      	blx	r3
 800c67e:	6823      	ldr	r3, [r4, #0]
 800c680:	4683      	mov	fp, r0
 800c682:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800c686:	4629      	mov	r1, r5
 800c688:	4620      	mov	r0, r4
 800c68a:	4798      	blx	r3
 800c68c:	eba0 030b 	sub.w	r3, r0, fp
 800c690:	2b00      	cmp	r3, #0
 800c692:	bfb8      	it	lt
 800c694:	425b      	neglt	r3, r3
 800c696:	fb93 f3f7 	sdiv	r3, r3, r7
 800c69a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c69e:	4680      	mov	r8, r0
 800c6a0:	dce3      	bgt.n	800c66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c6a2:	6823      	ldr	r3, [r4, #0]
 800c6a4:	465a      	mov	r2, fp
 800c6a6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c6aa:	4629      	mov	r1, r5
 800c6ac:	4620      	mov	r0, r4
 800c6ae:	4798      	blx	r3
 800c6b0:	6823      	ldr	r3, [r4, #0]
 800c6b2:	4606      	mov	r6, r0
 800c6b4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c6b8:	4642      	mov	r2, r8
 800c6ba:	4629      	mov	r1, r5
 800c6bc:	4620      	mov	r0, r4
 800c6be:	4798      	blx	r3
 800c6c0:	42b0      	cmp	r0, r6
 800c6c2:	bfa2      	ittt	ge
 800c6c4:	4643      	movge	r3, r8
 800c6c6:	46d8      	movge	r8, fp
 800c6c8:	469b      	movge	fp, r3
 800c6ca:	45d8      	cmp	r8, fp
 800c6cc:	bfac      	ite	ge
 800c6ce:	f04f 33ff 	movge.w	r3, #4294967295
 800c6d2:	2301      	movlt	r3, #1
 800c6d4:	fb98 f6f7 	sdiv	r6, r8, r7
 800c6d8:	fb9b f2f7 	sdiv	r2, fp, r7
 800c6dc:	1af6      	subs	r6, r6, r3
 800c6de:	441a      	add	r2, r3
 800c6e0:	4296      	cmp	r6, r2
 800c6e2:	bfac      	ite	ge
 800c6e4:	f04f 3aff 	movge.w	sl, #4294967295
 800c6e8:	f04f 0a01 	movlt.w	sl, #1
 800c6ec:	f1b9 0f00 	cmp.w	r9, #0
 800c6f0:	d13e      	bne.n	800c770 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800c6f2:	fb07 fb0a 	mul.w	fp, r7, sl
 800c6f6:	eb0a 0802 	add.w	r8, sl, r2
 800c6fa:	4377      	muls	r7, r6
 800c6fc:	45b0      	cmp	r8, r6
 800c6fe:	d0b4      	beq.n	800c66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c700:	6823      	ldr	r3, [r4, #0]
 800c702:	463a      	mov	r2, r7
 800c704:	4629      	mov	r1, r5
 800c706:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c70a:	4620      	mov	r0, r4
 800c70c:	4798      	blx	r3
 800c70e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c710:	1ac0      	subs	r0, r0, r3
 800c712:	9010      	str	r0, [sp, #64]	; 0x40
 800c714:	a810      	add	r0, sp, #64	; 0x40
 800c716:	f7ff fc3d 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c71a:	6823      	ldr	r3, [r4, #0]
 800c71c:	4681      	mov	r9, r0
 800c71e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c722:	4629      	mov	r1, r5
 800c724:	4620      	mov	r0, r4
 800c726:	4798      	blx	r3
 800c728:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c72c:	eba9 0000 	sub.w	r0, r9, r0
 800c730:	b203      	sxth	r3, r0
 800c732:	42da      	cmn	r2, r3
 800c734:	9304      	str	r3, [sp, #16]
 800c736:	d418      	bmi.n	800c76a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c738:	6822      	ldr	r2, [r4, #0]
 800c73a:	4629      	mov	r1, r5
 800c73c:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800c740:	4620      	mov	r0, r4
 800c742:	4790      	blx	r2
 800c744:	9b04      	ldr	r3, [sp, #16]
 800c746:	4283      	cmp	r3, r0
 800c748:	da0f      	bge.n	800c76a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c74a:	9b08      	ldr	r3, [sp, #32]
 800c74c:	9302      	str	r3, [sp, #8]
 800c74e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c752:	6822      	ldr	r2, [r4, #0]
 800c754:	9301      	str	r3, [sp, #4]
 800c756:	fa0f f389 	sxth.w	r3, r9
 800c75a:	9300      	str	r3, [sp, #0]
 800c75c:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800c760:	a90e      	add	r1, sp, #56	; 0x38
 800c762:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c766:	4620      	mov	r0, r4
 800c768:	47c8      	blx	r9
 800c76a:	4456      	add	r6, sl
 800c76c:	445f      	add	r7, fp
 800c76e:	e7c5      	b.n	800c6fc <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800c770:	fb98 f8f9 	sdiv	r8, r8, r9
 800c774:	eba8 0203 	sub.w	r2, r8, r3
 800c778:	fb9b f8f9 	sdiv	r8, fp, r9
 800c77c:	4498      	add	r8, r3
 800c77e:	4542      	cmp	r2, r8
 800c780:	bfac      	ite	ge
 800c782:	f04f 33ff 	movge.w	r3, #4294967295
 800c786:	2301      	movlt	r3, #1
 800c788:	930a      	str	r3, [sp, #40]	; 0x28
 800c78a:	6823      	ldr	r3, [r4, #0]
 800c78c:	9204      	str	r2, [sp, #16]
 800c78e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c792:	fb02 f209 	mul.w	r2, r2, r9
 800c796:	4629      	mov	r1, r5
 800c798:	4620      	mov	r0, r4
 800c79a:	4798      	blx	r3
 800c79c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800c7a0:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800c7a4:	4658      	mov	r0, fp
 800c7a6:	f7ff fbf5 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c7aa:	b203      	sxth	r3, r0
 800c7ac:	9305      	str	r3, [sp, #20]
 800c7ae:	6823      	ldr	r3, [r4, #0]
 800c7b0:	fb06 f207 	mul.w	r2, r6, r7
 800c7b4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c7b8:	4629      	mov	r1, r5
 800c7ba:	4620      	mov	r0, r4
 800c7bc:	4798      	blx	r3
 800c7be:	9010      	str	r0, [sp, #64]	; 0x40
 800c7c0:	4658      	mov	r0, fp
 800c7c2:	f7ff fbe7 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c7c6:	fb07 f20a 	mul.w	r2, r7, sl
 800c7ca:	920b      	str	r2, [sp, #44]	; 0x2c
 800c7cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c7ce:	4442      	add	r2, r8
 800c7d0:	b203      	sxth	r3, r0
 800c7d2:	920c      	str	r2, [sp, #48]	; 0x30
 800c7d4:	9a05      	ldr	r2, [sp, #20]
 800c7d6:	429a      	cmp	r2, r3
 800c7d8:	dc16      	bgt.n	800c808 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800c7da:	eb06 080a 	add.w	r8, r6, sl
 800c7de:	fb07 f808 	mul.w	r8, r7, r8
 800c7e2:	9a05      	ldr	r2, [sp, #20]
 800c7e4:	429a      	cmp	r2, r3
 800c7e6:	db54      	blt.n	800c892 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800c7e8:	6823      	ldr	r3, [r4, #0]
 800c7ea:	4642      	mov	r2, r8
 800c7ec:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c7f0:	4629      	mov	r1, r5
 800c7f2:	4620      	mov	r0, r4
 800c7f4:	4798      	blx	r3
 800c7f6:	9010      	str	r0, [sp, #64]	; 0x40
 800c7f8:	4658      	mov	r0, fp
 800c7fa:	f7ff fbcb 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c7fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c800:	4456      	add	r6, sl
 800c802:	b203      	sxth	r3, r0
 800c804:	4490      	add	r8, r2
 800c806:	e7ec      	b.n	800c7e2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800c808:	6823      	ldr	r3, [r4, #0]
 800c80a:	fb07 f206 	mul.w	r2, r7, r6
 800c80e:	4629      	mov	r1, r5
 800c810:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c814:	4620      	mov	r0, r4
 800c816:	4798      	blx	r3
 800c818:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c81a:	1ac0      	subs	r0, r0, r3
 800c81c:	9010      	str	r0, [sp, #64]	; 0x40
 800c81e:	4658      	mov	r0, fp
 800c820:	f7ff fbb8 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c824:	6823      	ldr	r3, [r4, #0]
 800c826:	4680      	mov	r8, r0
 800c828:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c82c:	4629      	mov	r1, r5
 800c82e:	4620      	mov	r0, r4
 800c830:	4798      	blx	r3
 800c832:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c836:	eba8 0000 	sub.w	r0, r8, r0
 800c83a:	b203      	sxth	r3, r0
 800c83c:	42da      	cmn	r2, r3
 800c83e:	930d      	str	r3, [sp, #52]	; 0x34
 800c840:	d418      	bmi.n	800c874 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c842:	6822      	ldr	r2, [r4, #0]
 800c844:	4629      	mov	r1, r5
 800c846:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800c84a:	4620      	mov	r0, r4
 800c84c:	4790      	blx	r2
 800c84e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c850:	4283      	cmp	r3, r0
 800c852:	da0f      	bge.n	800c874 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c854:	9b08      	ldr	r3, [sp, #32]
 800c856:	9302      	str	r3, [sp, #8]
 800c858:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c85c:	6822      	ldr	r2, [r4, #0]
 800c85e:	9301      	str	r3, [sp, #4]
 800c860:	fa0f f388 	sxth.w	r3, r8
 800c864:	9300      	str	r3, [sp, #0]
 800c866:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800c86a:	a90e      	add	r1, sp, #56	; 0x38
 800c86c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c870:	4620      	mov	r0, r4
 800c872:	47c0      	blx	r8
 800c874:	6823      	ldr	r3, [r4, #0]
 800c876:	4456      	add	r6, sl
 800c878:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c87c:	fb06 f207 	mul.w	r2, r6, r7
 800c880:	4629      	mov	r1, r5
 800c882:	4620      	mov	r0, r4
 800c884:	4798      	blx	r3
 800c886:	9010      	str	r0, [sp, #64]	; 0x40
 800c888:	4658      	mov	r0, fp
 800c88a:	f7ff fb83 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c88e:	b203      	sxth	r3, r0
 800c890:	e7a0      	b.n	800c7d4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c892:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c894:	930d      	str	r3, [sp, #52]	; 0x34
 800c896:	9b04      	ldr	r3, [sp, #16]
 800c898:	4413      	add	r3, r2
 800c89a:	9304      	str	r3, [sp, #16]
 800c89c:	9a04      	ldr	r2, [sp, #16]
 800c89e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c8a0:	4293      	cmp	r3, r2
 800c8a2:	f43f aee2 	beq.w	800c66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c8a6:	9b04      	ldr	r3, [sp, #16]
 800c8a8:	6822      	ldr	r2, [r4, #0]
 800c8aa:	4629      	mov	r1, r5
 800c8ac:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800c8b0:	4620      	mov	r0, r4
 800c8b2:	fb03 f209 	mul.w	r2, r3, r9
 800c8b6:	47c0      	blx	r8
 800c8b8:	9010      	str	r0, [sp, #64]	; 0x40
 800c8ba:	4658      	mov	r0, fp
 800c8bc:	f7ff fb6a 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c8c0:	b203      	sxth	r3, r0
 800c8c2:	9305      	str	r3, [sp, #20]
 800c8c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c8c6:	e785      	b.n	800c7d4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c8c8:	4798      	blx	r3
 800c8ca:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c8ce:	deff      	udf	#255	; 0xff

0800c8d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800c8d0:	b510      	push	{r4, lr}
 800c8d2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800c8d6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800c8da:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800c8de:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800c8e2:	13a4      	asrs	r4, r4, #14
 800c8e4:	139b      	asrs	r3, r3, #14
 800c8e6:	429c      	cmp	r4, r3
 800c8e8:	bfb8      	it	lt
 800c8ea:	461c      	movlt	r4, r3
 800c8ec:	2c01      	cmp	r4, #1
 800c8ee:	dd07      	ble.n	800c900 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800c8f0:	fb91 f1f4 	sdiv	r1, r1, r4
 800c8f4:	fb90 f0f4 	sdiv	r0, r0, r4
 800c8f8:	f7ff ffea 	bl	800c8d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c8fc:	4360      	muls	r0, r4
 800c8fe:	bd10      	pop	{r4, pc}
 800c900:	4340      	muls	r0, r0
 800c902:	fb01 0101 	mla	r1, r1, r1, r0
 800c906:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800c90a:	bfb4      	ite	lt
 800c90c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800c910:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800c914:	2000      	movs	r0, #0
 800c916:	18c2      	adds	r2, r0, r3
 800c918:	428a      	cmp	r2, r1
 800c91a:	bf9c      	itt	ls
 800c91c:	1898      	addls	r0, r3, r2
 800c91e:	1a89      	subls	r1, r1, r2
 800c920:	089b      	lsrs	r3, r3, #2
 800c922:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800c926:	d1f6      	bne.n	800c916 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800c928:	e7e9      	b.n	800c8fe <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800c92a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800c92a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c92c:	9906      	ldr	r1, [sp, #24]
 800c92e:	4291      	cmp	r1, r2
 800c930:	bfbc      	itt	lt
 800c932:	9206      	strlt	r2, [sp, #24]
 800c934:	460a      	movlt	r2, r1
 800c936:	9907      	ldr	r1, [sp, #28]
 800c938:	428b      	cmp	r3, r1
 800c93a:	4606      	mov	r6, r0
 800c93c:	461c      	mov	r4, r3
 800c93e:	f04f 0020 	mov.w	r0, #32
 800c942:	bfc8      	it	gt
 800c944:	460c      	movgt	r4, r1
 800c946:	fb92 f5f0 	sdiv	r5, r2, r0
 800c94a:	fb94 f4f0 	sdiv	r4, r4, r0
 800c94e:	a806      	add	r0, sp, #24
 800c950:	bfc8      	it	gt
 800c952:	9307      	strgt	r3, [sp, #28]
 800c954:	f7ff fdf7 	bl	800c546 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c958:	4607      	mov	r7, r0
 800c95a:	a807      	add	r0, sp, #28
 800c95c:	f7ff fdf3 	bl	800c546 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c960:	1b7a      	subs	r2, r7, r5
 800c962:	1b00      	subs	r0, r0, r4
 800c964:	80f0      	strh	r0, [r6, #6]
 800c966:	8035      	strh	r5, [r6, #0]
 800c968:	8074      	strh	r4, [r6, #2]
 800c96a:	80b2      	strh	r2, [r6, #4]
 800c96c:	4630      	mov	r0, r6
 800c96e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c970 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800c970:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c972:	9c08      	ldr	r4, [sp, #32]
 800c974:	2602      	movs	r6, #2
 800c976:	3401      	adds	r4, #1
 800c978:	fb94 f4f6 	sdiv	r4, r4, r6
 800c97c:	18a6      	adds	r6, r4, r2
 800c97e:	191f      	adds	r7, r3, r4
 800c980:	e9cd 6700 	strd	r6, r7, [sp]
 800c984:	1b1b      	subs	r3, r3, r4
 800c986:	1b12      	subs	r2, r2, r4
 800c988:	4605      	mov	r5, r0
 800c98a:	f7ff ffce 	bl	800c92a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800c98e:	4628      	mov	r0, r5
 800c990:	b003      	add	sp, #12
 800c992:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c994 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800c994:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c998:	6943      	ldr	r3, [r0, #20]
 800c99a:	b087      	sub	sp, #28
 800c99c:	4606      	mov	r6, r0
 800c99e:	460d      	mov	r5, r1
 800c9a0:	2b00      	cmp	r3, #0
 800c9a2:	d072      	beq.n	800ca8a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800c9a4:	695c      	ldr	r4, [r3, #20]
 800c9a6:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800c9aa:	6823      	ldr	r3, [r4, #0]
 800c9ac:	4620      	mov	r0, r4
 800c9ae:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c9b2:	4798      	blx	r3
 800c9b4:	6823      	ldr	r3, [r4, #0]
 800c9b6:	4680      	mov	r8, r0
 800c9b8:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c9bc:	4629      	mov	r1, r5
 800c9be:	4620      	mov	r0, r4
 800c9c0:	4798      	blx	r3
 800c9c2:	017f      	lsls	r7, r7, #5
 800c9c4:	4603      	mov	r3, r0
 800c9c6:	9700      	str	r7, [sp, #0]
 800c9c8:	4642      	mov	r2, r8
 800c9ca:	4631      	mov	r1, r6
 800c9cc:	a802      	add	r0, sp, #8
 800c9ce:	f7ff ffcf 	bl	800c970 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c9d2:	2d00      	cmp	r5, #0
 800c9d4:	dd1b      	ble.n	800ca0e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800c9d6:	6823      	ldr	r3, [r4, #0]
 800c9d8:	f105 38ff 	add.w	r8, r5, #4294967295
 800c9dc:	fa0f f888 	sxth.w	r8, r8
 800c9e0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c9e4:	4641      	mov	r1, r8
 800c9e6:	4620      	mov	r0, r4
 800c9e8:	4798      	blx	r3
 800c9ea:	6823      	ldr	r3, [r4, #0]
 800c9ec:	4681      	mov	r9, r0
 800c9ee:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c9f2:	4641      	mov	r1, r8
 800c9f4:	4620      	mov	r0, r4
 800c9f6:	4798      	blx	r3
 800c9f8:	4631      	mov	r1, r6
 800c9fa:	4603      	mov	r3, r0
 800c9fc:	9700      	str	r7, [sp, #0]
 800c9fe:	a804      	add	r0, sp, #16
 800ca00:	464a      	mov	r2, r9
 800ca02:	f7ff ffb5 	bl	800c970 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800ca06:	a904      	add	r1, sp, #16
 800ca08:	a802      	add	r0, sp, #8
 800ca0a:	f7ff fd57 	bl	800c4bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ca0e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800ca12:	3b01      	subs	r3, #1
 800ca14:	429d      	cmp	r5, r3
 800ca16:	da19      	bge.n	800ca4c <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800ca18:	6823      	ldr	r3, [r4, #0]
 800ca1a:	3501      	adds	r5, #1
 800ca1c:	b22d      	sxth	r5, r5
 800ca1e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ca22:	4629      	mov	r1, r5
 800ca24:	4620      	mov	r0, r4
 800ca26:	4798      	blx	r3
 800ca28:	6823      	ldr	r3, [r4, #0]
 800ca2a:	4680      	mov	r8, r0
 800ca2c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ca30:	4629      	mov	r1, r5
 800ca32:	4620      	mov	r0, r4
 800ca34:	4798      	blx	r3
 800ca36:	4631      	mov	r1, r6
 800ca38:	4603      	mov	r3, r0
 800ca3a:	9700      	str	r7, [sp, #0]
 800ca3c:	a804      	add	r0, sp, #16
 800ca3e:	4642      	mov	r2, r8
 800ca40:	f7ff ff96 	bl	800c970 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800ca44:	a904      	add	r1, sp, #16
 800ca46:	a802      	add	r0, sp, #8
 800ca48:	f7ff fd38 	bl	800c4bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ca4c:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800ca50:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800ca54:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800ca58:	18ca      	adds	r2, r1, r3
 800ca5a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800ca5e:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ca62:	1a9b      	subs	r3, r3, r2
 800ca64:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ca68:	2200      	movs	r2, #0
 800ca6a:	a904      	add	r1, sp, #16
 800ca6c:	a802      	add	r0, sp, #8
 800ca6e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ca72:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ca76:	f7fd ffb9 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800ca7a:	6833      	ldr	r3, [r6, #0]
 800ca7c:	a902      	add	r1, sp, #8
 800ca7e:	691b      	ldr	r3, [r3, #16]
 800ca80:	4630      	mov	r0, r6
 800ca82:	4798      	blx	r3
 800ca84:	b007      	add	sp, #28
 800ca86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ca8a:	681b      	ldr	r3, [r3, #0]
 800ca8c:	deff      	udf	#255	; 0xff

0800ca8e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800ca8e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800ca92:	2b00      	cmp	r3, #0
 800ca94:	da05      	bge.n	800caa2 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800ca96:	880a      	ldrh	r2, [r1, #0]
 800ca98:	b29b      	uxth	r3, r3
 800ca9a:	441a      	add	r2, r3
 800ca9c:	425b      	negs	r3, r3
 800ca9e:	800a      	strh	r2, [r1, #0]
 800caa0:	808b      	strh	r3, [r1, #4]
 800caa2:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800caa6:	2b00      	cmp	r3, #0
 800caa8:	da05      	bge.n	800cab6 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800caaa:	884a      	ldrh	r2, [r1, #2]
 800caac:	b29b      	uxth	r3, r3
 800caae:	441a      	add	r2, r3
 800cab0:	425b      	negs	r3, r3
 800cab2:	804a      	strh	r2, [r1, #2]
 800cab4:	80cb      	strh	r3, [r1, #6]
 800cab6:	4770      	bx	lr

0800cab8 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800cab8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800caba:	4604      	mov	r4, r0
 800cabc:	460d      	mov	r5, r1
 800cabe:	6801      	ldr	r1, [r0, #0]
 800cac0:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800cac4:	9001      	str	r0, [sp, #4]
 800cac6:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800caca:	9000      	str	r0, [sp, #0]
 800cacc:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800cad0:	a802      	add	r0, sp, #8
 800cad2:	4621      	mov	r1, r4
 800cad4:	47b0      	blx	r6
 800cad6:	a902      	add	r1, sp, #8
 800cad8:	4620      	mov	r0, r4
 800cada:	f7ff ffd8 	bl	800ca8e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800cade:	a802      	add	r0, sp, #8
 800cae0:	4629      	mov	r1, r5
 800cae2:	f7fd ff83 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800cae6:	a802      	add	r0, sp, #8
 800cae8:	f7fd ffc3 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800caec:	b968      	cbnz	r0, 800cb0a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800caee:	6823      	ldr	r3, [r4, #0]
 800caf0:	a902      	add	r1, sp, #8
 800caf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800caf4:	4620      	mov	r0, r4
 800caf6:	4798      	blx	r3
 800caf8:	f7f5 fc7c 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800cafc:	6803      	ldr	r3, [r0, #0]
 800cafe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cb00:	6a1d      	ldr	r5, [r3, #32]
 800cb02:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800cb06:	a902      	add	r1, sp, #8
 800cb08:	47a8      	blx	r5
 800cb0a:	b004      	add	sp, #16
 800cb0c:	bd70      	pop	{r4, r5, r6, pc}

0800cb0e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800cb0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb12:	b08b      	sub	sp, #44	; 0x2c
 800cb14:	461e      	mov	r6, r3
 800cb16:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800cb1a:	9304      	str	r3, [sp, #16]
 800cb1c:	429e      	cmp	r6, r3
 800cb1e:	4689      	mov	r9, r1
 800cb20:	4615      	mov	r5, r2
 800cb22:	d072      	beq.n	800cc0a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800cb24:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cb28:	015b      	lsls	r3, r3, #5
 800cb2a:	9303      	str	r3, [sp, #12]
 800cb2c:	6813      	ldr	r3, [r2, #0]
 800cb2e:	4610      	mov	r0, r2
 800cb30:	4631      	mov	r1, r6
 800cb32:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cb36:	4798      	blx	r3
 800cb38:	ab0a      	add	r3, sp, #40	; 0x28
 800cb3a:	4634      	mov	r4, r6
 800cb3c:	f843 0d10 	str.w	r0, [r3, #-16]!
 800cb40:	4618      	mov	r0, r3
 800cb42:	f7ff fa27 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb46:	682b      	ldr	r3, [r5, #0]
 800cb48:	4631      	mov	r1, r6
 800cb4a:	0147      	lsls	r7, r0, #5
 800cb4c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cb50:	4628      	mov	r0, r5
 800cb52:	4798      	blx	r3
 800cb54:	ab0a      	add	r3, sp, #40	; 0x28
 800cb56:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800cb5a:	4618      	mov	r0, r3
 800cb5c:	f7ff fa1a 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb60:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800cb64:	4642      	mov	r2, r8
 800cb66:	4639      	mov	r1, r7
 800cb68:	4648      	mov	r0, r9
 800cb6a:	f013 fba9 	bl	80202c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cb6e:	2301      	movs	r3, #1
 800cb70:	9300      	str	r3, [sp, #0]
 800cb72:	9b00      	ldr	r3, [sp, #0]
 800cb74:	441c      	add	r4, r3
 800cb76:	682b      	ldr	r3, [r5, #0]
 800cb78:	b224      	sxth	r4, r4
 800cb7a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cb7e:	4621      	mov	r1, r4
 800cb80:	4628      	mov	r0, r5
 800cb82:	4798      	blx	r3
 800cb84:	9008      	str	r0, [sp, #32]
 800cb86:	a808      	add	r0, sp, #32
 800cb88:	f7ff fa04 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb8c:	0143      	lsls	r3, r0, #5
 800cb8e:	9301      	str	r3, [sp, #4]
 800cb90:	682b      	ldr	r3, [r5, #0]
 800cb92:	4621      	mov	r1, r4
 800cb94:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cb98:	4628      	mov	r0, r5
 800cb9a:	4798      	blx	r3
 800cb9c:	9009      	str	r0, [sp, #36]	; 0x24
 800cb9e:	a809      	add	r0, sp, #36	; 0x24
 800cba0:	f7ff f9f8 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cba4:	0143      	lsls	r3, r0, #5
 800cba6:	9302      	str	r3, [sp, #8]
 800cba8:	9b01      	ldr	r3, [sp, #4]
 800cbaa:	eba3 0b07 	sub.w	fp, r3, r7
 800cbae:	9b02      	ldr	r3, [sp, #8]
 800cbb0:	eba3 0a08 	sub.w	sl, r3, r8
 800cbb4:	4651      	mov	r1, sl
 800cbb6:	4658      	mov	r0, fp
 800cbb8:	f7ff fe8a 	bl	800c8d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cbbc:	b318      	cbz	r0, 800cc06 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800cbbe:	4602      	mov	r2, r0
 800cbc0:	4651      	mov	r1, sl
 800cbc2:	9005      	str	r0, [sp, #20]
 800cbc4:	9803      	ldr	r0, [sp, #12]
 800cbc6:	f005 fa09 	bl	8011fdc <_ZN8touchgfx6muldivElll>
 800cbca:	2302      	movs	r3, #2
 800cbcc:	fb90 faf3 	sdiv	sl, r0, r3
 800cbd0:	9b05      	ldr	r3, [sp, #20]
 800cbd2:	9803      	ldr	r0, [sp, #12]
 800cbd4:	461a      	mov	r2, r3
 800cbd6:	4659      	mov	r1, fp
 800cbd8:	f005 fa00 	bl	8011fdc <_ZN8touchgfx6muldivElll>
 800cbdc:	2302      	movs	r3, #2
 800cbde:	eba7 010a 	sub.w	r1, r7, sl
 800cbe2:	fb90 fbf3 	sdiv	fp, r0, r3
 800cbe6:	4648      	mov	r0, r9
 800cbe8:	eb0b 0208 	add.w	r2, fp, r8
 800cbec:	f013 fa3e 	bl	802006c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cbf0:	9b02      	ldr	r3, [sp, #8]
 800cbf2:	eb03 020b 	add.w	r2, r3, fp
 800cbf6:	9b01      	ldr	r3, [sp, #4]
 800cbf8:	4648      	mov	r0, r9
 800cbfa:	eba3 010a 	sub.w	r1, r3, sl
 800cbfe:	f013 fa35 	bl	802006c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cc02:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800cc06:	42a6      	cmp	r6, r4
 800cc08:	db02      	blt.n	800cc10 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800cc0a:	b00b      	add	sp, #44	; 0x2c
 800cc0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc10:	9b00      	ldr	r3, [sp, #0]
 800cc12:	9a04      	ldr	r2, [sp, #16]
 800cc14:	42a2      	cmp	r2, r4
 800cc16:	bf08      	it	eq
 800cc18:	f04f 33ff 	moveq.w	r3, #4294967295
 800cc1c:	e7a8      	b.n	800cb70 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800cc20 <_ZN8touchgfx6CanvasD1Ev>:
 800cc20:	b510      	push	{r4, lr}
 800cc22:	4b04      	ldr	r3, [pc, #16]	; (800cc34 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800cc24:	4604      	mov	r4, r0
 800cc26:	f840 3b20 	str.w	r3, [r0], #32
 800cc2a:	f001 fd31 	bl	800e690 <_ZN8touchgfx7OutlineD1Ev>
 800cc2e:	4620      	mov	r0, r4
 800cc30:	bd10      	pop	{r4, pc}
 800cc32:	bf00      	nop
 800cc34:	08023838 	.word	0x08023838

0800cc38 <_ZN8touchgfx6CanvasD0Ev>:
 800cc38:	b510      	push	{r4, lr}
 800cc3a:	4604      	mov	r4, r0
 800cc3c:	f7ff fff0 	bl	800cc20 <_ZN8touchgfx6CanvasD1Ev>
 800cc40:	4620      	mov	r0, r4
 800cc42:	2170      	movs	r1, #112	; 0x70
 800cc44:	f013 fb8e 	bl	8020364 <_ZdlPvj>
 800cc48:	4620      	mov	r0, r4
 800cc4a:	bd10      	pop	{r4, pc}

0800cc4c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800cc4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc50:	6943      	ldr	r3, [r0, #20]
 800cc52:	b0a2      	sub	sp, #136	; 0x88
 800cc54:	4606      	mov	r6, r0
 800cc56:	460f      	mov	r7, r1
 800cc58:	2b00      	cmp	r3, #0
 800cc5a:	d06a      	beq.n	800cd32 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800cc5c:	695c      	ldr	r4, [r3, #20]
 800cc5e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cc62:	2b01      	cmp	r3, #1
 800cc64:	dc04      	bgt.n	800cc70 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800cc66:	2401      	movs	r4, #1
 800cc68:	4620      	mov	r0, r4
 800cc6a:	b022      	add	sp, #136	; 0x88
 800cc6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc70:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cc74:	ad22      	add	r5, sp, #136	; 0x88
 800cc76:	011b      	lsls	r3, r3, #4
 800cc78:	f845 3d70 	str.w	r3, [r5, #-112]!
 800cc7c:	4628      	mov	r0, r5
 800cc7e:	f7ff fc62 	bl	800c546 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cc82:	8839      	ldrh	r1, [r7, #0]
 800cc84:	88ba      	ldrh	r2, [r7, #4]
 800cc86:	6823      	ldr	r3, [r4, #0]
 800cc88:	b280      	uxth	r0, r0
 800cc8a:	440a      	add	r2, r1
 800cc8c:	4402      	add	r2, r0
 800cc8e:	1a09      	subs	r1, r1, r0
 800cc90:	f10d 000e 	add.w	r0, sp, #14
 800cc94:	9000      	str	r0, [sp, #0]
 800cc96:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800cc9a:	b212      	sxth	r2, r2
 800cc9c:	ab03      	add	r3, sp, #12
 800cc9e:	b209      	sxth	r1, r1
 800cca0:	4620      	mov	r0, r4
 800cca2:	47c0      	blx	r8
 800cca4:	2800      	cmp	r0, #0
 800cca6:	d0de      	beq.n	800cc66 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800cca8:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800ccac:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800ccb0:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800ccb4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ccb8:	18ca      	adds	r2, r1, r3
 800ccba:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800ccbe:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ccc2:	1a9b      	subs	r3, r3, r2
 800ccc4:	4639      	mov	r1, r7
 800ccc6:	2200      	movs	r2, #0
 800ccc8:	a804      	add	r0, sp, #16
 800ccca:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ccce:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ccd2:	f7fd fe8b 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800ccd6:	aa04      	add	r2, sp, #16
 800ccd8:	4631      	mov	r1, r6
 800ccda:	4628      	mov	r0, r5
 800ccdc:	f013 f918 	bl	801ff10 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800cce0:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800cce4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cce8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800ccec:	2f00      	cmp	r7, #0
 800ccee:	dd03      	ble.n	800ccf8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800ccf0:	42bb      	cmp	r3, r7
 800ccf2:	da01      	bge.n	800ccf8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800ccf4:	42ba      	cmp	r2, r7
 800ccf6:	da0f      	bge.n	800cd18 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800ccf8:	9200      	str	r2, [sp, #0]
 800ccfa:	4622      	mov	r2, r4
 800ccfc:	4629      	mov	r1, r5
 800ccfe:	4630      	mov	r0, r6
 800cd00:	f7ff ff05 	bl	800cb0e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800cd04:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800cd08:	4628      	mov	r0, r5
 800cd0a:	f013 fa2b 	bl	8020164 <_ZN8touchgfx6Canvas6renderEh>
 800cd0e:	4604      	mov	r4, r0
 800cd10:	4628      	mov	r0, r5
 800cd12:	f7ff ff85 	bl	800cc20 <_ZN8touchgfx6CanvasD1Ev>
 800cd16:	e7a7      	b.n	800cc68 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800cd18:	1e7a      	subs	r2, r7, #1
 800cd1a:	b212      	sxth	r2, r2
 800cd1c:	9200      	str	r2, [sp, #0]
 800cd1e:	4629      	mov	r1, r5
 800cd20:	4622      	mov	r2, r4
 800cd22:	4630      	mov	r0, r6
 800cd24:	f7ff fef3 	bl	800cb0e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800cd28:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cd2c:	9300      	str	r3, [sp, #0]
 800cd2e:	463b      	mov	r3, r7
 800cd30:	e7e3      	b.n	800ccfa <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800cd32:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800cd36:	deff      	udf	#255	; 0xff

0800cd38 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800cd38:	4770      	bx	lr

0800cd3a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800cd3a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800cd3c:	b118      	cbz	r0, 800cd46 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800cd3e:	6803      	ldr	r3, [r0, #0]
 800cd40:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cd44:	4718      	bx	r3
 800cd46:	4770      	bx	lr

0800cd48 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800cd48:	680b      	ldr	r3, [r1, #0]
 800cd4a:	4608      	mov	r0, r1
 800cd4c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800cd50:	4718      	bx	r3

0800cd52 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800cd52:	680b      	ldr	r3, [r1, #0]
 800cd54:	4608      	mov	r0, r1
 800cd56:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800cd5a:	4718      	bx	r3

0800cd5c <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800cd5c:	680b      	ldr	r3, [r1, #0]
 800cd5e:	4608      	mov	r0, r1
 800cd60:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800cd64:	4718      	bx	r3

0800cd66 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800cd66:	680b      	ldr	r3, [r1, #0]
 800cd68:	4608      	mov	r0, r1
 800cd6a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800cd6e:	4718      	bx	r3

0800cd70 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800cd70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd74:	4a37      	ldr	r2, [pc, #220]	; (800ce54 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800cd76:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800cd78:	8812      	ldrh	r2, [r2, #0]
 800cd7a:	429a      	cmp	r2, r3
 800cd7c:	b087      	sub	sp, #28
 800cd7e:	4604      	mov	r4, r0
 800cd80:	4689      	mov	r9, r1
 800cd82:	d937      	bls.n	800cdf4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cd84:	4a34      	ldr	r2, [pc, #208]	; (800ce58 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800cd86:	6812      	ldr	r2, [r2, #0]
 800cd88:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800cd8c:	4b33      	ldr	r3, [pc, #204]	; (800ce5c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800cd8e:	681b      	ldr	r3, [r3, #0]
 800cd90:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800cd94:	f1b8 0f00 	cmp.w	r8, #0
 800cd98:	d02c      	beq.n	800cdf4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cd9a:	6803      	ldr	r3, [r0, #0]
 800cd9c:	6945      	ldr	r5, [r0, #20]
 800cd9e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800cda0:	2d00      	cmp	r5, #0
 800cda2:	d052      	beq.n	800ce4a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800cda4:	696f      	ldr	r7, [r5, #20]
 800cda6:	4798      	blx	r3
 800cda8:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800cdac:	fb15 f000 	smulbb	r0, r5, r0
 800cdb0:	b280      	uxth	r0, r0
 800cdb2:	1c45      	adds	r5, r0, #1
 800cdb4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800cdb8:	122d      	asrs	r5, r5, #8
 800cdba:	d01b      	beq.n	800cdf4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cdbc:	6823      	ldr	r3, [r4, #0]
 800cdbe:	4639      	mov	r1, r7
 800cdc0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cdc4:	4620      	mov	r0, r4
 800cdc6:	4798      	blx	r3
 800cdc8:	6823      	ldr	r3, [r4, #0]
 800cdca:	4606      	mov	r6, r0
 800cdcc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800cdd0:	4639      	mov	r1, r7
 800cdd2:	4620      	mov	r0, r4
 800cdd4:	4798      	blx	r3
 800cdd6:	b2ed      	uxtb	r5, r5
 800cdd8:	4683      	mov	fp, r0
 800cdda:	b970      	cbnz	r0, 800cdfa <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800cddc:	b96e      	cbnz	r6, 800cdfa <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800cdde:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800cde2:	6823      	ldr	r3, [r4, #0]
 800cde4:	9600      	str	r6, [sp, #0]
 800cde6:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800cdea:	4642      	mov	r2, r8
 800cdec:	463b      	mov	r3, r7
 800cdee:	4649      	mov	r1, r9
 800cdf0:	4620      	mov	r0, r4
 800cdf2:	47a8      	blx	r5
 800cdf4:	b007      	add	sp, #28
 800cdf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdfa:	2e00      	cmp	r6, #0
 800cdfc:	ddfa      	ble.n	800cdf4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cdfe:	6823      	ldr	r3, [r4, #0]
 800ce00:	4639      	mov	r1, r7
 800ce02:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800ce06:	4620      	mov	r0, r4
 800ce08:	4798      	blx	r3
 800ce0a:	6823      	ldr	r3, [r4, #0]
 800ce0c:	4682      	mov	sl, r0
 800ce0e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800ce12:	4639      	mov	r1, r7
 800ce14:	4620      	mov	r0, r4
 800ce16:	4798      	blx	r3
 800ce18:	4582      	cmp	sl, r0
 800ce1a:	bfde      	ittt	le
 800ce1c:	4603      	movle	r3, r0
 800ce1e:	4650      	movle	r0, sl
 800ce20:	469a      	movle	sl, r3
 800ce22:	ebaa 0300 	sub.w	r3, sl, r0
 800ce26:	fb93 f3f6 	sdiv	r3, r3, r6
 800ce2a:	2b64      	cmp	r3, #100	; 0x64
 800ce2c:	dce2      	bgt.n	800cdf4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ce2e:	e9cd b503 	strd	fp, r5, [sp, #12]
 800ce32:	e9cd a601 	strd	sl, r6, [sp, #4]
 800ce36:	6823      	ldr	r3, [r4, #0]
 800ce38:	9000      	str	r0, [sp, #0]
 800ce3a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800ce3e:	4642      	mov	r2, r8
 800ce40:	463b      	mov	r3, r7
 800ce42:	4649      	mov	r1, r9
 800ce44:	4620      	mov	r0, r4
 800ce46:	47a8      	blx	r5
 800ce48:	e7d4      	b.n	800cdf4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ce4a:	4798      	blx	r3
 800ce4c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800ce50:	deff      	udf	#255	; 0xff
 800ce52:	bf00      	nop
 800ce54:	20015440 	.word	0x20015440
 800ce58:	2001543c 	.word	0x2001543c
 800ce5c:	20015444 	.word	0x20015444

0800ce60 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800ce60:	4770      	bx	lr

0800ce62 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800ce62:	4770      	bx	lr

0800ce64 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800ce64:	b538      	push	{r3, r4, r5, lr}
 800ce66:	680a      	ldr	r2, [r1, #0]
 800ce68:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800ce6c:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800ce70:	4608      	mov	r0, r1
 800ce72:	4790      	blx	r2
 800ce74:	4629      	mov	r1, r5
 800ce76:	4602      	mov	r2, r0
 800ce78:	4620      	mov	r0, r4
 800ce7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ce7e:	f7ff baa7 	b.w	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800ce82 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800ce82:	b538      	push	{r3, r4, r5, lr}
 800ce84:	680a      	ldr	r2, [r1, #0]
 800ce86:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800ce8a:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800ce8e:	4608      	mov	r0, r1
 800ce90:	4790      	blx	r2
 800ce92:	4629      	mov	r1, r5
 800ce94:	4602      	mov	r2, r0
 800ce96:	4620      	mov	r0, r4
 800ce98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ce9c:	f7ff ba98 	b.w	800c3d0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800cea0 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800cea0:	b510      	push	{r4, lr}
 800cea2:	214c      	movs	r1, #76	; 0x4c
 800cea4:	4604      	mov	r4, r0
 800cea6:	f013 fa5d 	bl	8020364 <_ZdlPvj>
 800ceaa:	4620      	mov	r0, r4
 800ceac:	bd10      	pop	{r4, pc}

0800ceae <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800ceae:	b510      	push	{r4, lr}
 800ceb0:	214c      	movs	r1, #76	; 0x4c
 800ceb2:	4604      	mov	r4, r0
 800ceb4:	f013 fa56 	bl	8020364 <_ZdlPvj>
 800ceb8:	4620      	mov	r0, r4
 800ceba:	bd10      	pop	{r4, pc}

0800cebc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800cebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cec0:	b08d      	sub	sp, #52	; 0x34
 800cec2:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800cec6:	9309      	str	r3, [sp, #36]	; 0x24
 800cec8:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800cecc:	930a      	str	r3, [sp, #40]	; 0x28
 800cece:	4606      	mov	r6, r0
 800ced0:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800ced4:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800ced8:	f1b9 0f00 	cmp.w	r9, #0
 800cedc:	d117      	bne.n	800cf0e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800cede:	2f00      	cmp	r7, #0
 800cee0:	dc7c      	bgt.n	800cfdc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800cee2:	f1b8 0f00 	cmp.w	r8, #0
 800cee6:	da01      	bge.n	800ceec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800cee8:	2f00      	cmp	r7, #0
 800ceea:	d17a      	bne.n	800cfe2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800ceec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ceee:	9318      	str	r3, [sp, #96]	; 0x60
 800cef0:	2300      	movs	r3, #0
 800cef2:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800cef6:	6832      	ldr	r2, [r6, #0]
 800cef8:	9907      	ldr	r1, [sp, #28]
 800cefa:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800cefe:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800cf02:	4630      	mov	r0, r6
 800cf04:	46a4      	mov	ip, r4
 800cf06:	b00d      	add	sp, #52	; 0x34
 800cf08:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf0c:	4760      	bx	ip
 800cf0e:	fb97 f4f9 	sdiv	r4, r7, r9
 800cf12:	1e63      	subs	r3, r4, #1
 800cf14:	9305      	str	r3, [sp, #20]
 800cf16:	f1ba 0f00 	cmp.w	sl, #0
 800cf1a:	d122      	bne.n	800cf62 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800cf1c:	fb98 faf9 	sdiv	sl, r8, r9
 800cf20:	fb03 f509 	mul.w	r5, r3, r9
 800cf24:	f10a 0a02 	add.w	sl, sl, #2
 800cf28:	9b05      	ldr	r3, [sp, #20]
 800cf2a:	459a      	cmp	sl, r3
 800cf2c:	d059      	beq.n	800cfe2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800cf2e:	42af      	cmp	r7, r5
 800cf30:	dc5a      	bgt.n	800cfe8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800cf32:	45a8      	cmp	r8, r5
 800cf34:	da01      	bge.n	800cf3a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800cf36:	42af      	cmp	r7, r5
 800cf38:	db0e      	blt.n	800cf58 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800cf3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cf3c:	9302      	str	r3, [sp, #8]
 800cf3e:	9905      	ldr	r1, [sp, #20]
 800cf40:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800cf42:	6832      	ldr	r2, [r6, #0]
 800cf44:	434b      	muls	r3, r1
 800cf46:	e9cd 5300 	strd	r5, r3, [sp]
 800cf4a:	9907      	ldr	r1, [sp, #28]
 800cf4c:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800cf50:	4630      	mov	r0, r6
 800cf52:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800cf56:	47d8      	blx	fp
 800cf58:	9b05      	ldr	r3, [sp, #20]
 800cf5a:	3301      	adds	r3, #1
 800cf5c:	9305      	str	r3, [sp, #20]
 800cf5e:	444d      	add	r5, r9
 800cf60:	e7e2      	b.n	800cf28 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800cf62:	fb97 f3fa 	sdiv	r3, r7, sl
 800cf66:	3b01      	subs	r3, #1
 800cf68:	9306      	str	r3, [sp, #24]
 800cf6a:	9a06      	ldr	r2, [sp, #24]
 800cf6c:	fb98 f3fa 	sdiv	r3, r8, sl
 800cf70:	fb02 fb0a 	mul.w	fp, r2, sl
 800cf74:	9a05      	ldr	r2, [sp, #20]
 800cf76:	3302      	adds	r3, #2
 800cf78:	fb02 f509 	mul.w	r5, r2, r9
 800cf7c:	930b      	str	r3, [sp, #44]	; 0x2c
 800cf7e:	45ab      	cmp	fp, r5
 800cf80:	dd1d      	ble.n	800cfbe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800cf82:	42af      	cmp	r7, r5
 800cf84:	dc08      	bgt.n	800cf98 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800cf86:	45a8      	cmp	r8, r5
 800cf88:	da08      	bge.n	800cf9c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800cf8a:	42af      	cmp	r7, r5
 800cf8c:	da06      	bge.n	800cf9c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800cf8e:	9b05      	ldr	r3, [sp, #20]
 800cf90:	3301      	adds	r3, #1
 800cf92:	9305      	str	r3, [sp, #20]
 800cf94:	444d      	add	r5, r9
 800cf96:	e7f2      	b.n	800cf7e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800cf98:	45a8      	cmp	r8, r5
 800cf9a:	dcf8      	bgt.n	800cf8e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800cf9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cf9e:	9302      	str	r3, [sp, #8]
 800cfa0:	9905      	ldr	r1, [sp, #20]
 800cfa2:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800cfa4:	6832      	ldr	r2, [r6, #0]
 800cfa6:	434b      	muls	r3, r1
 800cfa8:	e9cd 5300 	strd	r5, r3, [sp]
 800cfac:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800cfb0:	9907      	ldr	r1, [sp, #28]
 800cfb2:	461c      	mov	r4, r3
 800cfb4:	4630      	mov	r0, r6
 800cfb6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800cfba:	47a0      	blx	r4
 800cfbc:	e7e7      	b.n	800cf8e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800cfbe:	45ab      	cmp	fp, r5
 800cfc0:	db04      	blt.n	800cfcc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800cfc2:	9b05      	ldr	r3, [sp, #20]
 800cfc4:	3301      	adds	r3, #1
 800cfc6:	9305      	str	r3, [sp, #20]
 800cfc8:	444d      	add	r5, r9
 800cfca:	e7f8      	b.n	800cfbe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800cfcc:	9b06      	ldr	r3, [sp, #24]
 800cfce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cfd0:	3301      	adds	r3, #1
 800cfd2:	4293      	cmp	r3, r2
 800cfd4:	9306      	str	r3, [sp, #24]
 800cfd6:	d004      	beq.n	800cfe2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800cfd8:	44d3      	add	fp, sl
 800cfda:	e7d0      	b.n	800cf7e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800cfdc:	f1b8 0f00 	cmp.w	r8, #0
 800cfe0:	dd84      	ble.n	800ceec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800cfe2:	b00d      	add	sp, #52	; 0x34
 800cfe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfe8:	45a8      	cmp	r8, r5
 800cfea:	dcb5      	bgt.n	800cf58 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800cfec:	e7a5      	b.n	800cf3a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800cfee <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800cfee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cff2:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800cff6:	b089      	sub	sp, #36	; 0x24
 800cff8:	2c00      	cmp	r4, #0
 800cffa:	9007      	str	r0, [sp, #28]
 800cffc:	468a      	mov	sl, r1
 800cffe:	4693      	mov	fp, r2
 800d000:	461d      	mov	r5, r3
 800d002:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d006:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d00a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d00e:	dd03      	ble.n	800d018 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d010:	4564      	cmp	r4, ip
 800d012:	dd01      	ble.n	800d018 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d014:	42b4      	cmp	r4, r6
 800d016:	dd0e      	ble.n	800d036 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d018:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d01c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d020:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d024:	9807      	ldr	r0, [sp, #28]
 800d026:	462b      	mov	r3, r5
 800d028:	465a      	mov	r2, fp
 800d02a:	4651      	mov	r1, sl
 800d02c:	b009      	add	sp, #36	; 0x24
 800d02e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d032:	f7ff bf43 	b.w	800cebc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d036:	f104 3eff 	add.w	lr, r4, #4294967295
 800d03a:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d03e:	9702      	str	r7, [sp, #8]
 800d040:	e9cd ce00 	strd	ip, lr, [sp]
 800d044:	f7ff ff3a 	bl	800cebc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d048:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d04c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d050:	9412      	str	r4, [sp, #72]	; 0x48
 800d052:	e7e7      	b.n	800d024 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d054 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d054:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d058:	f1b3 0900 	subs.w	r9, r3, #0
 800d05c:	460d      	mov	r5, r1
 800d05e:	4690      	mov	r8, r2
 800d060:	9f08      	ldr	r7, [sp, #32]
 800d062:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d066:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d068:	da18      	bge.n	800d09c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d06a:	2a01      	cmp	r2, #1
 800d06c:	dd16      	ble.n	800d09c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d06e:	232d      	movs	r3, #45	; 0x2d
 800d070:	800b      	strh	r3, [r1, #0]
 800d072:	f1c9 0900 	rsb	r9, r9, #0
 800d076:	2001      	movs	r0, #1
 800d078:	2f00      	cmp	r7, #0
 800d07a:	d111      	bne.n	800d0a0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d07c:	eba8 0100 	sub.w	r1, r8, r0
 800d080:	2302      	movs	r3, #2
 800d082:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d086:	fb96 f3f3 	sdiv	r3, r6, r3
 800d08a:	4a24      	ldr	r2, [pc, #144]	; (800d11c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d08c:	444b      	add	r3, r9
 800d08e:	b289      	uxth	r1, r1
 800d090:	fb93 f3f6 	sdiv	r3, r3, r6
 800d094:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d098:	f006 be06 	b.w	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d09c:	2000      	movs	r0, #0
 800d09e:	e7eb      	b.n	800d078 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d0a0:	dd39      	ble.n	800d116 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d0a2:	fb99 f4f6 	sdiv	r4, r9, r6
 800d0a6:	eba8 0100 	sub.w	r1, r8, r0
 800d0aa:	4623      	mov	r3, r4
 800d0ac:	4a1b      	ldr	r2, [pc, #108]	; (800d11c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d0ae:	b289      	uxth	r1, r1
 800d0b0:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d0b4:	f006 fdf8 	bl	8013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d0b8:	4628      	mov	r0, r5
 800d0ba:	f006 fa81 	bl	80135c0 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d0be:	f108 38ff 	add.w	r8, r8, #4294967295
 800d0c2:	4580      	cmp	r8, r0
 800d0c4:	dd27      	ble.n	800d116 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d0c6:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d0ca:	fb06 9314 	mls	r3, r6, r4, r9
 800d0ce:	3001      	adds	r0, #1
 800d0d0:	2200      	movs	r2, #0
 800d0d2:	f04f 090a 	mov.w	r9, #10
 800d0d6:	f107 3aff 	add.w	sl, r7, #4294967295
 800d0da:	f04f 0e02 	mov.w	lr, #2
 800d0de:	fb96 fefe 	sdiv	lr, r6, lr
 800d0e2:	4580      	cmp	r8, r0
 800d0e4:	4684      	mov	ip, r0
 800d0e6:	dd13      	ble.n	800d110 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d0e8:	fb09 f303 	mul.w	r3, r9, r3
 800d0ec:	4592      	cmp	sl, r2
 800d0ee:	f102 0201 	add.w	r2, r2, #1
 800d0f2:	bf08      	it	eq
 800d0f4:	4473      	addeq	r3, lr
 800d0f6:	f100 0c01 	add.w	ip, r0, #1
 800d0fa:	fb93 f4f6 	sdiv	r4, r3, r6
 800d0fe:	4297      	cmp	r7, r2
 800d100:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d104:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d108:	fb06 3314 	mls	r3, r6, r4, r3
 800d10c:	4660      	mov	r0, ip
 800d10e:	d1e8      	bne.n	800d0e2 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d110:	2300      	movs	r3, #0
 800d112:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d116:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d11a:	bf00      	nop
 800d11c:	08023298 	.word	0x08023298

0800d120 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d120:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d124:	4a6b      	ldr	r2, [pc, #428]	; (800d2d4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d126:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d128:	8812      	ldrh	r2, [r2, #0]
 800d12a:	429a      	cmp	r2, r3
 800d12c:	b092      	sub	sp, #72	; 0x48
 800d12e:	4604      	mov	r4, r0
 800d130:	460e      	mov	r6, r1
 800d132:	d93a      	bls.n	800d1aa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d134:	4a68      	ldr	r2, [pc, #416]	; (800d2d8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d136:	6812      	ldr	r2, [r2, #0]
 800d138:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d13c:	4b67      	ldr	r3, [pc, #412]	; (800d2dc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d13e:	681b      	ldr	r3, [r3, #0]
 800d140:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d144:	f1b8 0f00 	cmp.w	r8, #0
 800d148:	d02f      	beq.n	800d1aa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d14a:	6803      	ldr	r3, [r0, #0]
 800d14c:	6945      	ldr	r5, [r0, #20]
 800d14e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d150:	2d00      	cmp	r5, #0
 800d152:	f000 80ba 	beq.w	800d2ca <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d156:	696f      	ldr	r7, [r5, #20]
 800d158:	4798      	blx	r3
 800d15a:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d15e:	fb13 f000 	smulbb	r0, r3, r0
 800d162:	b280      	uxth	r0, r0
 800d164:	1c43      	adds	r3, r0, #1
 800d166:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d16a:	0a03      	lsrs	r3, r0, #8
 800d16c:	d01d      	beq.n	800d1aa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d16e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d170:	6823      	ldr	r3, [r4, #0]
 800d172:	434e      	muls	r6, r1
 800d174:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d178:	4639      	mov	r1, r7
 800d17a:	4620      	mov	r0, r4
 800d17c:	4798      	blx	r3
 800d17e:	6823      	ldr	r3, [r4, #0]
 800d180:	4605      	mov	r5, r0
 800d182:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d186:	4639      	mov	r1, r7
 800d188:	4620      	mov	r0, r4
 800d18a:	4798      	blx	r3
 800d18c:	2d00      	cmp	r5, #0
 800d18e:	dd0f      	ble.n	800d1b0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d190:	fb96 f3f5 	sdiv	r3, r6, r5
 800d194:	436b      	muls	r3, r5
 800d196:	1b9a      	subs	r2, r3, r6
 800d198:	4253      	negs	r3, r2
 800d19a:	4153      	adcs	r3, r2
 800d19c:	2800      	cmp	r0, #0
 800d19e:	dd09      	ble.n	800d1b4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d1a0:	fb96 f2f0 	sdiv	r2, r6, r0
 800d1a4:	4350      	muls	r0, r2
 800d1a6:	42b0      	cmp	r0, r6
 800d1a8:	d10e      	bne.n	800d1c8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d1aa:	b012      	add	sp, #72	; 0x48
 800d1ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d1b0:	2300      	movs	r3, #0
 800d1b2:	e7f3      	b.n	800d19c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d1b4:	d108      	bne.n	800d1c8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d1b6:	2d00      	cmp	r5, #0
 800d1b8:	f040 8084 	bne.w	800d2c4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d1bc:	2e00      	cmp	r6, #0
 800d1be:	d055      	beq.n	800d26c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d1c0:	2b00      	cmp	r3, #0
 800d1c2:	d0f2      	beq.n	800d1aa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d1c4:	462a      	mov	r2, r5
 800d1c6:	e007      	b.n	800d1d8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d1c8:	2b00      	cmp	r3, #0
 800d1ca:	d0ee      	beq.n	800d1aa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d1cc:	2d00      	cmp	r5, #0
 800d1ce:	d0f9      	beq.n	800d1c4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d1d0:	fb96 f2f5 	sdiv	r2, r6, r5
 800d1d4:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d1d6:	436a      	muls	r2, r5
 800d1d8:	683b      	ldr	r3, [r7, #0]
 800d1da:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d2e0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d1de:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d1e2:	4631      	mov	r1, r6
 800d1e4:	4638      	mov	r0, r7
 800d1e6:	4798      	blx	r3
 800d1e8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d1ea:	9302      	str	r3, [sp, #8]
 800d1ec:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d1f0:	9301      	str	r3, [sp, #4]
 800d1f2:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d1f6:	9300      	str	r3, [sp, #0]
 800d1f8:	a908      	add	r1, sp, #32
 800d1fa:	4603      	mov	r3, r0
 800d1fc:	2214      	movs	r2, #20
 800d1fe:	4620      	mov	r0, r4
 800d200:	f7ff ff28 	bl	800d054 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d204:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d208:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d20a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d20e:	f8d8 3000 	ldr.w	r3, [r8]
 800d212:	d12d      	bne.n	800d270 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d214:	f8d9 0000 	ldr.w	r0, [r9]
 800d218:	699d      	ldr	r5, [r3, #24]
 800d21a:	f7f7 fd31 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d21e:	aa08      	add	r2, sp, #32
 800d220:	4601      	mov	r1, r0
 800d222:	4640      	mov	r0, r8
 800d224:	47a8      	blx	r5
 800d226:	4605      	mov	r5, r0
 800d228:	683b      	ldr	r3, [r7, #0]
 800d22a:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d22e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d232:	4631      	mov	r1, r6
 800d234:	4638      	mov	r0, r7
 800d236:	4798      	blx	r3
 800d238:	ab12      	add	r3, sp, #72	; 0x48
 800d23a:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d23e:	4618      	mov	r0, r3
 800d240:	f7fe fea8 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d244:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d248:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d24c:	4440      	add	r0, r8
 800d24e:	6823      	ldr	r3, [r4, #0]
 800d250:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d254:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d258:	2200      	movs	r2, #0
 800d25a:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d25e:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d262:	691b      	ldr	r3, [r3, #16]
 800d264:	a906      	add	r1, sp, #24
 800d266:	4620      	mov	r0, r4
 800d268:	4798      	blx	r3
 800d26a:	e79e      	b.n	800d1aa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d26c:	4632      	mov	r2, r6
 800d26e:	e7b3      	b.n	800d1d8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d270:	f8d9 0000 	ldr.w	r0, [r9]
 800d274:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d276:	f7f7 fd03 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d27a:	aa08      	add	r2, sp, #32
 800d27c:	4601      	mov	r1, r0
 800d27e:	4640      	mov	r0, r8
 800d280:	47a8      	blx	r5
 800d282:	f8d8 3000 	ldr.w	r3, [r8]
 800d286:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d288:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d28c:	4605      	mov	r5, r0
 800d28e:	f8d9 0000 	ldr.w	r0, [r9]
 800d292:	f7f7 fcf5 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d296:	aa08      	add	r2, sp, #32
 800d298:	4601      	mov	r1, r0
 800d29a:	4640      	mov	r0, r8
 800d29c:	47d0      	blx	sl
 800d29e:	f8d8 3000 	ldr.w	r3, [r8]
 800d2a2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d2a4:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d2a8:	fb15 f500 	smulbb	r5, r5, r0
 800d2ac:	f8d9 0000 	ldr.w	r0, [r9]
 800d2b0:	f7f7 fce6 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d2b4:	aa08      	add	r2, sp, #32
 800d2b6:	4601      	mov	r1, r0
 800d2b8:	4640      	mov	r0, r8
 800d2ba:	47d0      	blx	sl
 800d2bc:	b2ad      	uxth	r5, r5
 800d2be:	4405      	add	r5, r0
 800d2c0:	b2ad      	uxth	r5, r5
 800d2c2:	e7b1      	b.n	800d228 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d2c4:	2b00      	cmp	r3, #0
 800d2c6:	d183      	bne.n	800d1d0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d2c8:	e76f      	b.n	800d1aa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d2ca:	4798      	blx	r3
 800d2cc:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d2d0:	deff      	udf	#255	; 0xff
 800d2d2:	bf00      	nop
 800d2d4:	20015440 	.word	0x20015440
 800d2d8:	2001543c 	.word	0x2001543c
 800d2dc:	20015444 	.word	0x20015444
 800d2e0:	20015448 	.word	0x20015448

0800d2e4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2e8:	461d      	mov	r5, r3
 800d2ea:	b099      	sub	sp, #100	; 0x64
 800d2ec:	681b      	ldr	r3, [r3, #0]
 800d2ee:	4604      	mov	r4, r0
 800d2f0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d2f4:	4689      	mov	r9, r1
 800d2f6:	4628      	mov	r0, r5
 800d2f8:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d2fa:	4690      	mov	r8, r2
 800d2fc:	4798      	blx	r3
 800d2fe:	af18      	add	r7, sp, #96	; 0x60
 800d300:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d304:	4638      	mov	r0, r7
 800d306:	f7fe fe45 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d30a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d30e:	1ac0      	subs	r0, r0, r3
 800d310:	b200      	sxth	r0, r0
 800d312:	2800      	cmp	r0, #0
 800d314:	f2c0 80b0 	blt.w	800d478 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d318:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d31c:	441a      	add	r2, r3
 800d31e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d322:	1a9b      	subs	r3, r3, r2
 800d324:	b21b      	sxth	r3, r3
 800d326:	4298      	cmp	r0, r3
 800d328:	f280 80a6 	bge.w	800d478 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d32c:	682b      	ldr	r3, [r5, #0]
 800d32e:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d332:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d336:	4628      	mov	r0, r5
 800d338:	4798      	blx	r3
 800d33a:	682b      	ldr	r3, [r5, #0]
 800d33c:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d340:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d344:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d348:	4606      	mov	r6, r0
 800d34a:	4628      	mov	r0, r5
 800d34c:	4798      	blx	r3
 800d34e:	f8cd a000 	str.w	sl, [sp]
 800d352:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d356:	4633      	mov	r3, r6
 800d358:	4639      	mov	r1, r7
 800d35a:	2214      	movs	r2, #20
 800d35c:	4620      	mov	r0, r4
 800d35e:	f7ff fe79 	bl	800d054 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d362:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d366:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d368:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800d4d8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d36c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d370:	f8d8 3000 	ldr.w	r3, [r8]
 800d374:	f040 8083 	bne.w	800d47e <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d378:	f8da 0000 	ldr.w	r0, [sl]
 800d37c:	699e      	ldr	r6, [r3, #24]
 800d37e:	f7f7 fc7f 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d382:	463a      	mov	r2, r7
 800d384:	4601      	mov	r1, r0
 800d386:	4640      	mov	r0, r8
 800d388:	47b0      	blx	r6
 800d38a:	4606      	mov	r6, r0
 800d38c:	682b      	ldr	r3, [r5, #0]
 800d38e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d390:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d394:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d398:	4628      	mov	r0, r5
 800d39a:	4798      	blx	r3
 800d39c:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d3a0:	ad05      	add	r5, sp, #20
 800d3a2:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d3a6:	4658      	mov	r0, fp
 800d3a8:	f7fe fdf4 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d3ac:	4450      	add	r0, sl
 800d3ae:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d3b2:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d3b6:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d3ba:	f04f 0a00 	mov.w	sl, #0
 800d3be:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d3c2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d3c6:	f8ad a016 	strh.w	sl, [sp, #22]
 800d3ca:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d3ce:	ae07      	add	r6, sp, #28
 800d3d0:	e886 0003 	stmia.w	r6, {r0, r1}
 800d3d4:	4649      	mov	r1, r9
 800d3d6:	4630      	mov	r0, r6
 800d3d8:	f7fd fb08 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800d3dc:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d3e0:	4553      	cmp	r3, sl
 800d3e2:	dd49      	ble.n	800d478 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d3e4:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d3e8:	4553      	cmp	r3, sl
 800d3ea:	dd45      	ble.n	800d478 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d3ec:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d3f0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d3f4:	1a9b      	subs	r3, r3, r2
 800d3f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d3fa:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d3fe:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d402:	1a9b      	subs	r3, r3, r2
 800d404:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d408:	6823      	ldr	r3, [r4, #0]
 800d40a:	4620      	mov	r0, r4
 800d40c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d40e:	4629      	mov	r1, r5
 800d410:	4798      	blx	r3
 800d412:	4b30      	ldr	r3, [pc, #192]	; (800d4d4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d414:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d418:	681b      	ldr	r3, [r3, #0]
 800d41a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d41e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d420:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d424:	785b      	ldrb	r3, [r3, #1]
 800d426:	920b      	str	r2, [sp, #44]	; 0x2c
 800d428:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d42c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d430:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d434:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d438:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d43c:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d440:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d444:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d448:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d44c:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d450:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d454:	f7f4 ffce 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800d458:	4b1f      	ldr	r3, [pc, #124]	; (800d4d8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d45a:	4604      	mov	r4, r0
 800d45c:	4649      	mov	r1, r9
 800d45e:	6818      	ldr	r0, [r3, #0]
 800d460:	f7f7 fc0e 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d464:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d468:	e9cd b000 	strd	fp, r0, [sp]
 800d46c:	4633      	mov	r3, r6
 800d46e:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d472:	4620      	mov	r0, r4
 800d474:	f7f7 fbb6 	bl	8004be4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d478:	b019      	add	sp, #100	; 0x64
 800d47a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d47e:	f8da 0000 	ldr.w	r0, [sl]
 800d482:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d484:	f7f7 fbfc 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d488:	463a      	mov	r2, r7
 800d48a:	4601      	mov	r1, r0
 800d48c:	4640      	mov	r0, r8
 800d48e:	47b0      	blx	r6
 800d490:	f8d8 3000 	ldr.w	r3, [r8]
 800d494:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d496:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d49a:	4606      	mov	r6, r0
 800d49c:	f8da 0000 	ldr.w	r0, [sl]
 800d4a0:	f7f7 fbee 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d4a4:	463a      	mov	r2, r7
 800d4a6:	4601      	mov	r1, r0
 800d4a8:	4640      	mov	r0, r8
 800d4aa:	47d8      	blx	fp
 800d4ac:	f8d8 3000 	ldr.w	r3, [r8]
 800d4b0:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d4b2:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d4b6:	fb16 f600 	smulbb	r6, r6, r0
 800d4ba:	f8da 0000 	ldr.w	r0, [sl]
 800d4be:	f7f7 fbdf 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d4c2:	463a      	mov	r2, r7
 800d4c4:	4601      	mov	r1, r0
 800d4c6:	4640      	mov	r0, r8
 800d4c8:	47d8      	blx	fp
 800d4ca:	b2b6      	uxth	r6, r6
 800d4cc:	4406      	add	r6, r0
 800d4ce:	b2b6      	uxth	r6, r6
 800d4d0:	e75c      	b.n	800d38c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d4d2:	bf00      	nop
 800d4d4:	2001543c 	.word	0x2001543c
 800d4d8:	20015448 	.word	0x20015448

0800d4dc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4e0:	4698      	mov	r8, r3
 800d4e2:	b099      	sub	sp, #100	; 0x64
 800d4e4:	681b      	ldr	r3, [r3, #0]
 800d4e6:	4604      	mov	r4, r0
 800d4e8:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d4ec:	4689      	mov	r9, r1
 800d4ee:	4640      	mov	r0, r8
 800d4f0:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d4f2:	4617      	mov	r7, r2
 800d4f4:	4798      	blx	r3
 800d4f6:	ae18      	add	r6, sp, #96	; 0x60
 800d4f8:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d4fc:	4630      	mov	r0, r6
 800d4fe:	f7fe fd49 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d502:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800d506:	1ac0      	subs	r0, r0, r3
 800d508:	b200      	sxth	r0, r0
 800d50a:	2800      	cmp	r0, #0
 800d50c:	f2c0 80c0 	blt.w	800d690 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d510:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800d514:	441a      	add	r2, r3
 800d516:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800d51a:	1a9b      	subs	r3, r3, r2
 800d51c:	b21b      	sxth	r3, r3
 800d51e:	4298      	cmp	r0, r3
 800d520:	f280 80b6 	bge.w	800d690 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d524:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d526:	9302      	str	r3, [sp, #8]
 800d528:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d52c:	9301      	str	r3, [sp, #4]
 800d52e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d532:	9300      	str	r3, [sp, #0]
 800d534:	4631      	mov	r1, r6
 800d536:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d538:	f8df a174 	ldr.w	sl, [pc, #372]	; 800d6b0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800d53c:	2214      	movs	r2, #20
 800d53e:	4620      	mov	r0, r4
 800d540:	f7ff fd88 	bl	800d054 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d544:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d548:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d54a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d54e:	683b      	ldr	r3, [r7, #0]
 800d550:	f040 80a1 	bne.w	800d696 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800d554:	f8da 0000 	ldr.w	r0, [sl]
 800d558:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d55a:	f7f7 fb91 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d55e:	4632      	mov	r2, r6
 800d560:	4601      	mov	r1, r0
 800d562:	4638      	mov	r0, r7
 800d564:	47a8      	blx	r5
 800d566:	683b      	ldr	r3, [r7, #0]
 800d568:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d56a:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d56e:	4605      	mov	r5, r0
 800d570:	f8da 0000 	ldr.w	r0, [sl]
 800d574:	f7f7 fb84 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d578:	4632      	mov	r2, r6
 800d57a:	4601      	mov	r1, r0
 800d57c:	4638      	mov	r0, r7
 800d57e:	47d8      	blx	fp
 800d580:	683b      	ldr	r3, [r7, #0]
 800d582:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d584:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d588:	fb15 f500 	smulbb	r5, r5, r0
 800d58c:	f8da 0000 	ldr.w	r0, [sl]
 800d590:	f7f7 fb76 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d594:	4632      	mov	r2, r6
 800d596:	4601      	mov	r1, r0
 800d598:	4638      	mov	r0, r7
 800d59a:	47d8      	blx	fp
 800d59c:	b2ad      	uxth	r5, r5
 800d59e:	4405      	add	r5, r0
 800d5a0:	b2ad      	uxth	r5, r5
 800d5a2:	f8d8 3000 	ldr.w	r3, [r8]
 800d5a6:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d5a8:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d5ac:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800d5b0:	4640      	mov	r0, r8
 800d5b2:	4798      	blx	r3
 800d5b4:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d5b8:	f04f 0800 	mov.w	r8, #0
 800d5bc:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d5c0:	4658      	mov	r0, fp
 800d5c2:	f7fe fce7 	bl	800bf94 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d5c6:	4450      	add	r0, sl
 800d5c8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d5cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d5d0:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d5d4:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d5d8:	f8ad 8014 	strh.w	r8, [sp, #20]
 800d5dc:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d5e0:	ad05      	add	r5, sp, #20
 800d5e2:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d5e6:	f10d 0a1c 	add.w	sl, sp, #28
 800d5ea:	e88a 0003 	stmia.w	sl, {r0, r1}
 800d5ee:	4649      	mov	r1, r9
 800d5f0:	4650      	mov	r0, sl
 800d5f2:	f7fd f9fb 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800d5f6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d5fa:	4543      	cmp	r3, r8
 800d5fc:	dd48      	ble.n	800d690 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d5fe:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d602:	4543      	cmp	r3, r8
 800d604:	dd44      	ble.n	800d690 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d606:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d60a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d60e:	1a9b      	subs	r3, r3, r2
 800d610:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d614:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d618:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d61c:	1a9b      	subs	r3, r3, r2
 800d61e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d622:	6823      	ldr	r3, [r4, #0]
 800d624:	4620      	mov	r0, r4
 800d626:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d628:	4629      	mov	r1, r5
 800d62a:	4798      	blx	r3
 800d62c:	4b1f      	ldr	r3, [pc, #124]	; (800d6ac <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800d62e:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d632:	681b      	ldr	r3, [r3, #0]
 800d634:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d638:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d63a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d63e:	785b      	ldrb	r3, [r3, #1]
 800d640:	920b      	str	r2, [sp, #44]	; 0x2c
 800d642:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d646:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d64a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d64e:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d652:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d656:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d65a:	9709      	str	r7, [sp, #36]	; 0x24
 800d65c:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d660:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800d664:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800d668:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800d66c:	f7f4 fec2 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800d670:	4b0f      	ldr	r3, [pc, #60]	; (800d6b0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800d672:	4604      	mov	r4, r0
 800d674:	4649      	mov	r1, r9
 800d676:	6818      	ldr	r0, [r3, #0]
 800d678:	f7f7 fb02 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d67c:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800d680:	e9cd b000 	strd	fp, r0, [sp]
 800d684:	4653      	mov	r3, sl
 800d686:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d68a:	4620      	mov	r0, r4
 800d68c:	f7f7 faaa 	bl	8004be4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d690:	b019      	add	sp, #100	; 0x64
 800d692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d696:	f8da 0000 	ldr.w	r0, [sl]
 800d69a:	699d      	ldr	r5, [r3, #24]
 800d69c:	f7f7 faf0 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d6a0:	4632      	mov	r2, r6
 800d6a2:	4601      	mov	r1, r0
 800d6a4:	4638      	mov	r0, r7
 800d6a6:	47a8      	blx	r5
 800d6a8:	4605      	mov	r5, r0
 800d6aa:	e77a      	b.n	800d5a2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800d6ac:	2001543c 	.word	0x2001543c
 800d6b0:	20015448 	.word	0x20015448

0800d6b4 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800d6b4:	b510      	push	{r4, lr}
 800d6b6:	4604      	mov	r4, r0
 800d6b8:	f7fe fb05 	bl	800bcc6 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800d6bc:	2300      	movs	r3, #0
 800d6be:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800d6c2:	bd10      	pop	{r4, pc}

0800d6c4 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800d6c4:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800d6c8:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800d6cc:	429a      	cmp	r2, r3
 800d6ce:	d101      	bne.n	800d6d4 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800d6d0:	f7fe bd38 	b.w	800c144 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d6d4:	4770      	bx	lr

0800d6d6 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800d6d6:	b538      	push	{r3, r4, r5, lr}
 800d6d8:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800d6dc:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800d6e0:	42a5      	cmp	r5, r4
 800d6e2:	da04      	bge.n	800d6ee <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800d6e4:	6803      	ldr	r3, [r0, #0]
 800d6e6:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800d6ea:	4798      	blx	r3
 800d6ec:	bd38      	pop	{r3, r4, r5, pc}
 800d6ee:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800d6f2:	4408      	add	r0, r1
 800d6f4:	1b00      	subs	r0, r0, r4
 800d6f6:	e7f9      	b.n	800d6ec <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800d6f8 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800d6f8:	b570      	push	{r4, r5, r6, lr}
 800d6fa:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800d6fe:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800d702:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800d706:	4604      	mov	r4, r0
 800d708:	1c6b      	adds	r3, r5, #1
 800d70a:	b21b      	sxth	r3, r3
 800d70c:	42ae      	cmp	r6, r5
 800d70e:	bf08      	it	eq
 800d710:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800d714:	fb93 f0f2 	sdiv	r0, r3, r2
 800d718:	fb02 3010 	mls	r0, r2, r0, r3
 800d71c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800d720:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800d724:	4296      	cmp	r6, r2
 800d726:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800d72a:	d108      	bne.n	800d73e <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800d72c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800d730:	f004 fa93 	bl	8011c5a <_ZNK8touchgfx8Drawable10invalidateEv>
 800d734:	4620      	mov	r0, r4
 800d736:	f7fe fd05 	bl	800c144 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d73a:	4628      	mov	r0, r5
 800d73c:	bd70      	pop	{r4, r5, r6, pc}
 800d73e:	4629      	mov	r1, r5
 800d740:	4620      	mov	r0, r4
 800d742:	f7fe fcd7 	bl	800c0f4 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800d746:	e7f8      	b.n	800d73a <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800d748 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800d748:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800d74c:	4770      	bx	lr

0800d74e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800d74e:	b510      	push	{r4, lr}
 800d750:	4604      	mov	r4, r0
 800d752:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d754:	b150      	cbz	r0, 800d76c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d756:	6803      	ldr	r3, [r0, #0]
 800d758:	68db      	ldr	r3, [r3, #12]
 800d75a:	4798      	blx	r3
 800d75c:	b130      	cbz	r0, 800d76c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d75e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d760:	6803      	ldr	r3, [r0, #0]
 800d762:	4621      	mov	r1, r4
 800d764:	689b      	ldr	r3, [r3, #8]
 800d766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d76a:	4718      	bx	r3
 800d76c:	bd10      	pop	{r4, pc}

0800d76e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800d76e:	b570      	push	{r4, r5, r6, lr}
 800d770:	790b      	ldrb	r3, [r1, #4]
 800d772:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800d776:	2b00      	cmp	r3, #0
 800d778:	bf0c      	ite	eq
 800d77a:	2301      	moveq	r3, #1
 800d77c:	2300      	movne	r3, #0
 800d77e:	4604      	mov	r4, r0
 800d780:	460e      	mov	r6, r1
 800d782:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800d786:	d109      	bne.n	800d79c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800d788:	b14d      	cbz	r5, 800d79e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800d78a:	7933      	ldrb	r3, [r6, #4]
 800d78c:	2b01      	cmp	r3, #1
 800d78e:	d10c      	bne.n	800d7aa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d790:	6823      	ldr	r3, [r4, #0]
 800d792:	4620      	mov	r0, r4
 800d794:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800d796:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d79a:	4718      	bx	r3
 800d79c:	b12d      	cbz	r5, 800d7aa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d79e:	6823      	ldr	r3, [r4, #0]
 800d7a0:	4620      	mov	r0, r4
 800d7a2:	695b      	ldr	r3, [r3, #20]
 800d7a4:	4798      	blx	r3
 800d7a6:	2d00      	cmp	r5, #0
 800d7a8:	d1ef      	bne.n	800d78a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800d7aa:	bd70      	pop	{r4, r5, r6, pc}

0800d7ac <_ZN8touchgfx12ToggleButtonD1Ev>:
 800d7ac:	4770      	bx	lr

0800d7ae <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800d7ae:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d7b2:	b133      	cbz	r3, 800d7c2 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800d7b4:	790b      	ldrb	r3, [r1, #4]
 800d7b6:	2b01      	cmp	r3, #1
 800d7b8:	bf01      	itttt	eq
 800d7ba:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800d7bc:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800d7be:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800d7c0:	8603      	strheq	r3, [r0, #48]	; 0x30
 800d7c2:	f7ff bfd4 	b.w	800d76e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800d7c6 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800d7c6:	8813      	ldrh	r3, [r2, #0]
 800d7c8:	8683      	strh	r3, [r0, #52]	; 0x34
 800d7ca:	f000 bbde 	b.w	800df8a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800d7ce <_ZN8touchgfx12ToggleButtonD0Ev>:
 800d7ce:	b510      	push	{r4, lr}
 800d7d0:	2138      	movs	r1, #56	; 0x38
 800d7d2:	4604      	mov	r4, r0
 800d7d4:	f012 fdc6 	bl	8020364 <_ZdlPvj>
 800d7d8:	4620      	mov	r0, r4
 800d7da:	bd10      	pop	{r4, pc}

0800d7dc <_ZNK8touchgfx6Button17invalidateContentEv>:
 800d7dc:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800d7e0:	b12a      	cbz	r2, 800d7ee <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d7e2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d7e6:	b112      	cbz	r2, 800d7ee <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d7e8:	6803      	ldr	r3, [r0, #0]
 800d7ea:	695b      	ldr	r3, [r3, #20]
 800d7ec:	4718      	bx	r3
 800d7ee:	4770      	bx	lr

0800d7f0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d7f0:	2000      	movs	r0, #0
 800d7f2:	4770      	bx	lr

0800d7f4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d7f4:	4b07      	ldr	r3, [pc, #28]	; (800d814 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d7f6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d7f8:	881b      	ldrh	r3, [r3, #0]
 800d7fa:	4293      	cmp	r3, r2
 800d7fc:	bf81      	itttt	hi
 800d7fe:	4b06      	ldrhi	r3, [pc, #24]	; (800d818 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d800:	681b      	ldrhi	r3, [r3, #0]
 800d802:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d806:	7858      	ldrbhi	r0, [r3, #1]
 800d808:	bf8c      	ite	hi
 800d80a:	f000 0003 	andhi.w	r0, r0, #3
 800d80e:	2000      	movls	r0, #0
 800d810:	4770      	bx	lr
 800d812:	bf00      	nop
 800d814:	20015440 	.word	0x20015440
 800d818:	2001543c 	.word	0x2001543c

0800d81c <_ZN8touchgfx8TextAreaD1Ev>:
 800d81c:	4770      	bx	lr
	...

0800d820 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d824:	4b10      	ldr	r3, [pc, #64]	; (800d868 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d826:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d828:	881b      	ldrh	r3, [r3, #0]
 800d82a:	428b      	cmp	r3, r1
 800d82c:	4604      	mov	r4, r0
 800d82e:	d918      	bls.n	800d862 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d830:	6803      	ldr	r3, [r0, #0]
 800d832:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800d834:	4b0d      	ldr	r3, [pc, #52]	; (800d86c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d836:	6818      	ldr	r0, [r3, #0]
 800d838:	f7f7 fa22 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d83c:	6823      	ldr	r3, [r4, #0]
 800d83e:	4606      	mov	r6, r0
 800d840:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d842:	4620      	mov	r0, r4
 800d844:	4798      	blx	r3
 800d846:	6823      	ldr	r3, [r4, #0]
 800d848:	4607      	mov	r7, r0
 800d84a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d84e:	4620      	mov	r0, r4
 800d850:	4798      	blx	r3
 800d852:	463a      	mov	r2, r7
 800d854:	4603      	mov	r3, r0
 800d856:	4631      	mov	r1, r6
 800d858:	4620      	mov	r0, r4
 800d85a:	46ac      	mov	ip, r5
 800d85c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d860:	4760      	bx	ip
 800d862:	2000      	movs	r0, #0
 800d864:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d868:	20015440 	.word	0x20015440
 800d86c:	20015448 	.word	0x20015448

0800d870 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d870:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d874:	4b17      	ldr	r3, [pc, #92]	; (800d8d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d876:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d878:	881b      	ldrh	r3, [r3, #0]
 800d87a:	428b      	cmp	r3, r1
 800d87c:	4604      	mov	r4, r0
 800d87e:	d926      	bls.n	800d8ce <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d880:	4b15      	ldr	r3, [pc, #84]	; (800d8d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d882:	681b      	ldr	r3, [r3, #0]
 800d884:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d888:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d88c:	4b13      	ldr	r3, [pc, #76]	; (800d8dc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d88e:	7855      	ldrb	r5, [r2, #1]
 800d890:	681b      	ldr	r3, [r3, #0]
 800d892:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d896:	6833      	ldr	r3, [r6, #0]
 800d898:	69df      	ldr	r7, [r3, #28]
 800d89a:	4b11      	ldr	r3, [pc, #68]	; (800d8e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d89c:	6818      	ldr	r0, [r3, #0]
 800d89e:	f7f7 f9ef 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d8a2:	6823      	ldr	r3, [r4, #0]
 800d8a4:	4680      	mov	r8, r0
 800d8a6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d8a8:	4620      	mov	r0, r4
 800d8aa:	4798      	blx	r3
 800d8ac:	6823      	ldr	r3, [r4, #0]
 800d8ae:	4681      	mov	r9, r0
 800d8b0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d8b4:	4620      	mov	r0, r4
 800d8b6:	4798      	blx	r3
 800d8b8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d8bc:	9000      	str	r0, [sp, #0]
 800d8be:	464b      	mov	r3, r9
 800d8c0:	4642      	mov	r2, r8
 800d8c2:	4629      	mov	r1, r5
 800d8c4:	4630      	mov	r0, r6
 800d8c6:	47b8      	blx	r7
 800d8c8:	b003      	add	sp, #12
 800d8ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d8ce:	2000      	movs	r0, #0
 800d8d0:	e7fa      	b.n	800d8c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d8d2:	bf00      	nop
 800d8d4:	20015440 	.word	0x20015440
 800d8d8:	2001543c 	.word	0x2001543c
 800d8dc:	20015444 	.word	0x20015444
 800d8e0:	20015448 	.word	0x20015448

0800d8e4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d8e4:	b40e      	push	{r1, r2, r3}
 800d8e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d8ea:	4b2f      	ldr	r3, [pc, #188]	; (800d9a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d8ec:	881a      	ldrh	r2, [r3, #0]
 800d8ee:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800d8f0:	429a      	cmp	r2, r3
 800d8f2:	b09d      	sub	sp, #116	; 0x74
 800d8f4:	4604      	mov	r4, r0
 800d8f6:	d954      	bls.n	800d9a2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800d8f8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800d9ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d8fc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800d9b0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800d900:	aa26      	add	r2, sp, #152	; 0x98
 800d902:	9202      	str	r2, [sp, #8]
 800d904:	f8d9 2000 	ldr.w	r2, [r9]
 800d908:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d90c:	f8d8 3000 	ldr.w	r3, [r8]
 800d910:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d914:	682b      	ldr	r3, [r5, #0]
 800d916:	4628      	mov	r0, r5
 800d918:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d91a:	4798      	blx	r3
 800d91c:	b207      	sxth	r7, r0
 800d91e:	4606      	mov	r6, r0
 800d920:	a803      	add	r0, sp, #12
 800d922:	f004 feea 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 800d926:	682b      	ldr	r3, [r5, #0]
 800d928:	4628      	mov	r0, r5
 800d92a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d92c:	4798      	blx	r3
 800d92e:	682b      	ldr	r3, [r5, #0]
 800d930:	4682      	mov	sl, r0
 800d932:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d934:	4628      	mov	r0, r5
 800d936:	4798      	blx	r3
 800d938:	4653      	mov	r3, sl
 800d93a:	9000      	str	r0, [sp, #0]
 800d93c:	9a02      	ldr	r2, [sp, #8]
 800d93e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800d940:	a803      	add	r0, sp, #12
 800d942:	f004 ff35 	bl	80127b0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d946:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d948:	f8d9 3000 	ldr.w	r3, [r9]
 800d94c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800d950:	8925      	ldrh	r5, [r4, #8]
 800d952:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d956:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800d95a:	eba5 050c 	sub.w	r5, r5, ip
 800d95e:	784a      	ldrb	r2, [r1, #1]
 800d960:	f8d8 3000 	ldr.w	r3, [r8]
 800d964:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800d968:	b22d      	sxth	r5, r5
 800d96a:	9500      	str	r5, [sp, #0]
 800d96c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d970:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d974:	a803      	add	r0, sp, #12
 800d976:	f002 fd2f 	bl	80103d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d97a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800d97e:	18b9      	adds	r1, r7, r2
 800d980:	2900      	cmp	r1, #0
 800d982:	b203      	sxth	r3, r0
 800d984:	dd0b      	ble.n	800d99e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800d986:	3b01      	subs	r3, #1
 800d988:	fb13 f302 	smulbb	r3, r3, r2
 800d98c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d990:	b21f      	sxth	r7, r3
 800d992:	4638      	mov	r0, r7
 800d994:	b01d      	add	sp, #116	; 0x74
 800d996:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d99a:	b003      	add	sp, #12
 800d99c:	4770      	bx	lr
 800d99e:	2b00      	cmp	r3, #0
 800d9a0:	dcf7      	bgt.n	800d992 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d9a2:	2700      	movs	r7, #0
 800d9a4:	e7f5      	b.n	800d992 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d9a6:	bf00      	nop
 800d9a8:	20015440 	.word	0x20015440
 800d9ac:	2001543c 	.word	0x2001543c
 800d9b0:	20015444 	.word	0x20015444

0800d9b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800d9b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9b8:	4bbb      	ldr	r3, [pc, #748]	; (800dca8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800d9ba:	460c      	mov	r4, r1
 800d9bc:	881b      	ldrh	r3, [r3, #0]
 800d9be:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800d9c0:	428b      	cmp	r3, r1
 800d9c2:	b0a9      	sub	sp, #164	; 0xa4
 800d9c4:	4681      	mov	r9, r0
 800d9c6:	d809      	bhi.n	800d9dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800d9c8:	2300      	movs	r3, #0
 800d9ca:	f04f 32ff 	mov.w	r2, #4294967295
 800d9ce:	e9c0 3200 	strd	r3, r2, [r0]
 800d9d2:	6083      	str	r3, [r0, #8]
 800d9d4:	4648      	mov	r0, r9
 800d9d6:	b029      	add	sp, #164	; 0xa4
 800d9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9dc:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800dcb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800d9e0:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800dcb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800d9e4:	f8db 3000 	ldr.w	r3, [fp]
 800d9e8:	f8d8 0000 	ldr.w	r0, [r8]
 800d9ec:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d9f0:	4bae      	ldr	r3, [pc, #696]	; (800dcac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800d9f2:	681b      	ldr	r3, [r3, #0]
 800d9f4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d9f8:	f7f7 f942 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800d9fc:	682b      	ldr	r3, [r5, #0]
 800d9fe:	4607      	mov	r7, r0
 800da00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800da02:	4628      	mov	r0, r5
 800da04:	4798      	blx	r3
 800da06:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800da08:	f8cd 800c 	str.w	r8, [sp, #12]
 800da0c:	4430      	add	r0, r6
 800da0e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800da12:	b283      	uxth	r3, r0
 800da14:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800da18:	9302      	str	r3, [sp, #8]
 800da1a:	4650      	mov	r0, sl
 800da1c:	2e00      	cmp	r6, #0
 800da1e:	f040 8091 	bne.w	800db44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800da22:	f004 fe6a 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 800da26:	682b      	ldr	r3, [r5, #0]
 800da28:	4628      	mov	r0, r5
 800da2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800da2c:	4798      	blx	r3
 800da2e:	682b      	ldr	r3, [r5, #0]
 800da30:	9005      	str	r0, [sp, #20]
 800da32:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800da34:	4628      	mov	r0, r5
 800da36:	4798      	blx	r3
 800da38:	6823      	ldr	r3, [r4, #0]
 800da3a:	4680      	mov	r8, r0
 800da3c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800da3e:	4620      	mov	r0, r4
 800da40:	4798      	blx	r3
 800da42:	6822      	ldr	r2, [r4, #0]
 800da44:	9004      	str	r0, [sp, #16]
 800da46:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800da4a:	4620      	mov	r0, r4
 800da4c:	4790      	blx	r2
 800da4e:	9905      	ldr	r1, [sp, #20]
 800da50:	9b04      	ldr	r3, [sp, #16]
 800da52:	9001      	str	r0, [sp, #4]
 800da54:	9300      	str	r3, [sp, #0]
 800da56:	460a      	mov	r2, r1
 800da58:	4643      	mov	r3, r8
 800da5a:	4639      	mov	r1, r7
 800da5c:	4650      	mov	r0, sl
 800da5e:	f004 febc 	bl	80127da <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800da62:	4637      	mov	r7, r6
 800da64:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800da66:	f8db 3000 	ldr.w	r3, [fp]
 800da6a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800da6e:	4629      	mov	r1, r5
 800da70:	785b      	ldrb	r3, [r3, #1]
 800da72:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800da76:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800da7a:	4650      	mov	r0, sl
 800da7c:	f002 f9fe 	bl	800fe7c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800da80:	4287      	cmp	r7, r0
 800da82:	bfb8      	it	lt
 800da84:	b207      	sxthlt	r7, r0
 800da86:	3601      	adds	r6, #1
 800da88:	4650      	mov	r0, sl
 800da8a:	b2b6      	uxth	r6, r6
 800da8c:	f004 fe5c 	bl	8012748 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800da90:	2800      	cmp	r0, #0
 800da92:	d0e7      	beq.n	800da64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800da94:	9b02      	ldr	r3, [sp, #8]
 800da96:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800da9a:	fb13 f606 	smulbb	r6, r3, r6
 800da9e:	eba6 0608 	sub.w	r6, r6, r8
 800daa2:	b2b6      	uxth	r6, r6
 800daa4:	fa0f f886 	sxth.w	r8, r6
 800daa8:	f1b8 0f00 	cmp.w	r8, #0
 800daac:	dd06      	ble.n	800dabc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800daae:	682b      	ldr	r3, [r5, #0]
 800dab0:	4628      	mov	r0, r5
 800dab2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dab4:	4798      	blx	r3
 800dab6:	4430      	add	r0, r6
 800dab8:	fa0f f880 	sxth.w	r8, r0
 800dabc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800dac0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dac4:	6823      	ldr	r3, [r4, #0]
 800dac6:	bf08      	it	eq
 800dac8:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800dacc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800dace:	bf18      	it	ne
 800dad0:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800dad4:	4620      	mov	r0, r4
 800dad6:	4798      	blx	r3
 800dad8:	2801      	cmp	r0, #1
 800dada:	b2ba      	uxth	r2, r7
 800dadc:	f000 80d1 	beq.w	800dc82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800dae0:	2802      	cmp	r0, #2
 800dae2:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800dae6:	f000 80d2 	beq.w	800dc8e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800daea:	b21e      	sxth	r6, r3
 800daec:	7a29      	ldrb	r1, [r5, #8]
 800daee:	7a6d      	ldrb	r5, [r5, #9]
 800daf0:	1a76      	subs	r6, r6, r1
 800daf2:	4429      	add	r1, r5
 800daf4:	440a      	add	r2, r1
 800daf6:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800dafa:	b2b3      	uxth	r3, r6
 800dafc:	b292      	uxth	r2, r2
 800dafe:	2902      	cmp	r1, #2
 800db00:	b21f      	sxth	r7, r3
 800db02:	b216      	sxth	r6, r2
 800db04:	f000 80c6 	beq.w	800dc94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800db08:	2903      	cmp	r1, #3
 800db0a:	f000 80d5 	beq.w	800dcb8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800db0e:	2901      	cmp	r1, #1
 800db10:	f040 80db 	bne.w	800dcca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800db14:	8923      	ldrh	r3, [r4, #8]
 800db16:	4632      	mov	r2, r6
 800db18:	eba3 0308 	sub.w	r3, r3, r8
 800db1c:	4646      	mov	r6, r8
 800db1e:	463d      	mov	r5, r7
 800db20:	4690      	mov	r8, r2
 800db22:	b21f      	sxth	r7, r3
 800db24:	9b03      	ldr	r3, [sp, #12]
 800db26:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800db28:	6818      	ldr	r0, [r3, #0]
 800db2a:	f7f7 f8a9 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800db2e:	f8a9 7000 	strh.w	r7, [r9]
 800db32:	f8a9 5002 	strh.w	r5, [r9, #2]
 800db36:	f8a9 6004 	strh.w	r6, [r9, #4]
 800db3a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800db3e:	f8c9 0008 	str.w	r0, [r9, #8]
 800db42:	e747      	b.n	800d9d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800db44:	f004 fdd9 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 800db48:	682b      	ldr	r3, [r5, #0]
 800db4a:	4628      	mov	r0, r5
 800db4c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800db4e:	4798      	blx	r3
 800db50:	682b      	ldr	r3, [r5, #0]
 800db52:	4606      	mov	r6, r0
 800db54:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800db56:	4628      	mov	r0, r5
 800db58:	4798      	blx	r3
 800db5a:	6823      	ldr	r3, [r4, #0]
 800db5c:	4680      	mov	r8, r0
 800db5e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800db60:	4620      	mov	r0, r4
 800db62:	4798      	blx	r3
 800db64:	6822      	ldr	r2, [r4, #0]
 800db66:	9004      	str	r0, [sp, #16]
 800db68:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800db6c:	4620      	mov	r0, r4
 800db6e:	4790      	blx	r2
 800db70:	9b04      	ldr	r3, [sp, #16]
 800db72:	9001      	str	r0, [sp, #4]
 800db74:	4632      	mov	r2, r6
 800db76:	9300      	str	r3, [sp, #0]
 800db78:	4639      	mov	r1, r7
 800db7a:	4643      	mov	r3, r8
 800db7c:	4650      	mov	r0, sl
 800db7e:	f004 fe2c 	bl	80127da <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800db82:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800db86:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800db8a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800db8c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800db90:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800db94:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800db98:	bf0a      	itet	eq
 800db9a:	4642      	moveq	r2, r8
 800db9c:	461a      	movne	r2, r3
 800db9e:	4698      	moveq	r8, r3
 800dba0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800dba4:	1ad2      	subs	r2, r2, r3
 800dba6:	f8db 3000 	ldr.w	r3, [fp]
 800dbaa:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800dbae:	7859      	ldrb	r1, [r3, #1]
 800dbb0:	f8cd a020 	str.w	sl, [sp, #32]
 800dbb4:	2300      	movs	r3, #0
 800dbb6:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800dbba:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dbbe:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800dbc2:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800dbc6:	950a      	str	r5, [sp, #40]	; 0x28
 800dbc8:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800dbcc:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800dbd0:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800dbd4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800dbd8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800dbdc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800dbe0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800dbe4:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800dbe8:	b350      	cbz	r0, 800dc40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dbea:	682b      	ldr	r3, [r5, #0]
 800dbec:	4628      	mov	r0, r5
 800dbee:	695b      	ldr	r3, [r3, #20]
 800dbf0:	4798      	blx	r3
 800dbf2:	4607      	mov	r7, r0
 800dbf4:	b320      	cbz	r0, 800dc40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dbf6:	980a      	ldr	r0, [sp, #40]	; 0x28
 800dbf8:	6803      	ldr	r3, [r0, #0]
 800dbfa:	4639      	mov	r1, r7
 800dbfc:	68db      	ldr	r3, [r3, #12]
 800dbfe:	4798      	blx	r3
 800dc00:	4606      	mov	r6, r0
 800dc02:	b1e8      	cbz	r0, 800dc40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dc04:	7b43      	ldrb	r3, [r0, #13]
 800dc06:	7a82      	ldrb	r2, [r0, #10]
 800dc08:	005b      	lsls	r3, r3, #1
 800dc0a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dc0e:	4313      	orrs	r3, r2
 800dc10:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800dc14:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800dc18:	2b04      	cmp	r3, #4
 800dc1a:	d111      	bne.n	800dc40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dc1c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800dc1e:	6803      	ldr	r3, [r0, #0]
 800dc20:	4632      	mov	r2, r6
 800dc22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc24:	4639      	mov	r1, r7
 800dc26:	4798      	blx	r3
 800dc28:	7b73      	ldrb	r3, [r6, #13]
 800dc2a:	005b      	lsls	r3, r3, #1
 800dc2c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800dc30:	7ab3      	ldrb	r3, [r6, #10]
 800dc32:	4313      	orrs	r3, r2
 800dc34:	4418      	add	r0, r3
 800dc36:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800dc3a:	4418      	add	r0, r3
 800dc3c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800dc40:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800dc44:	2600      	movs	r6, #0
 800dc46:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800dc4a:	4637      	mov	r7, r6
 800dc4c:	45c3      	cmp	fp, r8
 800dc4e:	bfd4      	ite	le
 800dc50:	2100      	movle	r1, #0
 800dc52:	2101      	movgt	r1, #1
 800dc54:	a807      	add	r0, sp, #28
 800dc56:	f002 faf0 	bl	801023a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800dc5a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800dc5e:	429f      	cmp	r7, r3
 800dc60:	bfb8      	it	lt
 800dc62:	b21f      	sxthlt	r7, r3
 800dc64:	9b02      	ldr	r3, [sp, #8]
 800dc66:	eba8 0803 	sub.w	r8, r8, r3
 800dc6a:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800dc6e:	3601      	adds	r6, #1
 800dc70:	b2b6      	uxth	r6, r6
 800dc72:	fa0f f888 	sxth.w	r8, r8
 800dc76:	2b00      	cmp	r3, #0
 800dc78:	f43f af0c 	beq.w	800da94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800dc7c:	45c2      	cmp	sl, r8
 800dc7e:	dbe5      	blt.n	800dc4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800dc80:	e708      	b.n	800da94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800dc82:	1bf6      	subs	r6, r6, r7
 800dc84:	2702      	movs	r7, #2
 800dc86:	fb96 f6f7 	sdiv	r6, r6, r7
 800dc8a:	b236      	sxth	r6, r6
 800dc8c:	e72e      	b.n	800daec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800dc8e:	4413      	add	r3, r2
 800dc90:	1af6      	subs	r6, r6, r3
 800dc92:	e7fa      	b.n	800dc8a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800dc94:	8925      	ldrh	r5, [r4, #8]
 800dc96:	1aad      	subs	r5, r5, r2
 800dc98:	1aed      	subs	r5, r5, r3
 800dc9a:	b22f      	sxth	r7, r5
 800dc9c:	8965      	ldrh	r5, [r4, #10]
 800dc9e:	eba5 0508 	sub.w	r5, r5, r8
 800dca2:	b22d      	sxth	r5, r5
 800dca4:	e73e      	b.n	800db24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800dca6:	bf00      	nop
 800dca8:	20015440 	.word	0x20015440
 800dcac:	20015444 	.word	0x20015444
 800dcb0:	2001543c 	.word	0x2001543c
 800dcb4:	20015448 	.word	0x20015448
 800dcb8:	8965      	ldrh	r5, [r4, #10]
 800dcba:	1aad      	subs	r5, r5, r2
 800dcbc:	1aed      	subs	r5, r5, r3
 800dcbe:	4633      	mov	r3, r6
 800dcc0:	b22d      	sxth	r5, r5
 800dcc2:	4646      	mov	r6, r8
 800dcc4:	2700      	movs	r7, #0
 800dcc6:	4698      	mov	r8, r3
 800dcc8:	e72c      	b.n	800db24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800dcca:	2500      	movs	r5, #0
 800dccc:	e72a      	b.n	800db24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800dcce:	bf00      	nop

0800dcd0 <_ZN8touchgfx8TextAreaD0Ev>:
 800dcd0:	b510      	push	{r4, lr}
 800dcd2:	2148      	movs	r1, #72	; 0x48
 800dcd4:	4604      	mov	r4, r0
 800dcd6:	f012 fb45 	bl	8020364 <_ZdlPvj>
 800dcda:	4620      	mov	r0, r4
 800dcdc:	bd10      	pop	{r4, pc}
	...

0800dce0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800dce0:	b513      	push	{r0, r1, r4, lr}
 800dce2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800dce6:	4604      	mov	r4, r0
 800dce8:	b1fb      	cbz	r3, 800dd2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dcea:	4b16      	ldr	r3, [pc, #88]	; (800dd44 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800dcec:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dcee:	881b      	ldrh	r3, [r3, #0]
 800dcf0:	428b      	cmp	r3, r1
 800dcf2:	d91a      	bls.n	800dd2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dcf4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800dcf8:	2b00      	cmp	r3, #0
 800dcfa:	dd16      	ble.n	800dd2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dcfc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800dd00:	2b00      	cmp	r3, #0
 800dd02:	dd12      	ble.n	800dd2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dd04:	4b10      	ldr	r3, [pc, #64]	; (800dd48 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800dd06:	6818      	ldr	r0, [r3, #0]
 800dd08:	f7f6 ffba 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800dd0c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800dd10:	6822      	ldr	r2, [r4, #0]
 800dd12:	2b00      	cmp	r3, #0
 800dd14:	db06      	blt.n	800dd24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800dd16:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800dd1a:	2b00      	cmp	r3, #0
 800dd1c:	db02      	blt.n	800dd24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800dd1e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800dd20:	4298      	cmp	r0, r3
 800dd22:	d004      	beq.n	800dd2e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800dd24:	6953      	ldr	r3, [r2, #20]
 800dd26:	4620      	mov	r0, r4
 800dd28:	4798      	blx	r3
 800dd2a:	b002      	add	sp, #8
 800dd2c:	bd10      	pop	{r4, pc}
 800dd2e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800dd32:	c903      	ldmia	r1, {r0, r1}
 800dd34:	466b      	mov	r3, sp
 800dd36:	e883 0003 	stmia.w	r3, {r0, r1}
 800dd3a:	6912      	ldr	r2, [r2, #16]
 800dd3c:	4619      	mov	r1, r3
 800dd3e:	4620      	mov	r0, r4
 800dd40:	4790      	blx	r2
 800dd42:	e7f2      	b.n	800dd2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800dd44:	20015440 	.word	0x20015440
 800dd48:	20015448 	.word	0x20015448

0800dd4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800dd4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd50:	4b44      	ldr	r3, [pc, #272]	; (800de64 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800dd52:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800dd54:	881b      	ldrh	r3, [r3, #0]
 800dd56:	4293      	cmp	r3, r2
 800dd58:	b08e      	sub	sp, #56	; 0x38
 800dd5a:	4604      	mov	r4, r0
 800dd5c:	d97e      	bls.n	800de5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800dd5e:	6808      	ldr	r0, [r1, #0]
 800dd60:	4d41      	ldr	r5, [pc, #260]	; (800de68 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800dd62:	6849      	ldr	r1, [r1, #4]
 800dd64:	ab05      	add	r3, sp, #20
 800dd66:	c303      	stmia	r3!, {r0, r1}
 800dd68:	4611      	mov	r1, r2
 800dd6a:	6828      	ldr	r0, [r5, #0]
 800dd6c:	f7f6 ff88 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800dd70:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800dd74:	2b00      	cmp	r3, #0
 800dd76:	db11      	blt.n	800dd9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dd78:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800dd7c:	2b00      	cmp	r3, #0
 800dd7e:	db0d      	blt.n	800dd9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dd80:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800dd82:	4298      	cmp	r0, r3
 800dd84:	d10a      	bne.n	800dd9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dd86:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800dd8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800dd8e:	ab09      	add	r3, sp, #36	; 0x24
 800dd90:	e883 0003 	stmia.w	r3, {r0, r1}
 800dd94:	4619      	mov	r1, r3
 800dd96:	a805      	add	r0, sp, #20
 800dd98:	f7fc fe28 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800dd9c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800dda0:	2b00      	cmp	r3, #0
 800dda2:	dd5b      	ble.n	800de5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800dda4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800dda8:	2b00      	cmp	r3, #0
 800ddaa:	dd57      	ble.n	800de5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ddac:	4f2f      	ldr	r7, [pc, #188]	; (800de6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800ddae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ddb0:	683b      	ldr	r3, [r7, #0]
 800ddb2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800ddb6:	4b2e      	ldr	r3, [pc, #184]	; (800de70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800ddb8:	681b      	ldr	r3, [r3, #0]
 800ddba:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800ddbe:	2e00      	cmp	r6, #0
 800ddc0:	d04c      	beq.n	800de5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ddc2:	6823      	ldr	r3, [r4, #0]
 800ddc4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800ddc8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800ddca:	4620      	mov	r0, r4
 800ddcc:	4798      	blx	r3
 800ddce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ddd0:	683b      	ldr	r3, [r7, #0]
 800ddd2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800ddd6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800ddda:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800ddde:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800dde0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800dde4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800dde8:	785b      	ldrb	r3, [r3, #1]
 800ddea:	9609      	str	r6, [sp, #36]	; 0x24
 800ddec:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ddf0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800ddf4:	4b1f      	ldr	r3, [pc, #124]	; (800de74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800ddf6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800ddfa:	681b      	ldr	r3, [r3, #0]
 800ddfc:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800de00:	910b      	str	r1, [sp, #44]	; 0x2c
 800de02:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800de06:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800de0a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800de0e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800de12:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800de16:	b10a      	cbz	r2, 800de1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800de18:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800de1a:	b906      	cbnz	r6, 800de1e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800de1c:	689e      	ldr	r6, [r3, #8]
 800de1e:	af07      	add	r7, sp, #28
 800de20:	4621      	mov	r1, r4
 800de22:	4638      	mov	r0, r7
 800de24:	f003 ffb4 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de28:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800de2a:	6828      	ldr	r0, [r5, #0]
 800de2c:	f7f6 ff28 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800de30:	6823      	ldr	r3, [r4, #0]
 800de32:	4605      	mov	r5, r0
 800de34:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800de36:	4620      	mov	r0, r4
 800de38:	4798      	blx	r3
 800de3a:	6823      	ldr	r3, [r4, #0]
 800de3c:	4680      	mov	r8, r0
 800de3e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800de42:	4620      	mov	r0, r4
 800de44:	4798      	blx	r3
 800de46:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800de4a:	ab09      	add	r3, sp, #36	; 0x24
 800de4c:	9300      	str	r3, [sp, #0]
 800de4e:	9501      	str	r5, [sp, #4]
 800de50:	ab05      	add	r3, sp, #20
 800de52:	e897 0006 	ldmia.w	r7, {r1, r2}
 800de56:	4630      	mov	r0, r6
 800de58:	f7f6 fec4 	bl	8004be4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800de5c:	b00e      	add	sp, #56	; 0x38
 800de5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de62:	bf00      	nop
 800de64:	20015440 	.word	0x20015440
 800de68:	20015448 	.word	0x20015448
 800de6c:	2001543c 	.word	0x2001543c
 800de70:	20015444 	.word	0x20015444
 800de74:	200153e4 	.word	0x200153e4

0800de78 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800de78:	b570      	push	{r4, r5, r6, lr}
 800de7a:	6803      	ldr	r3, [r0, #0]
 800de7c:	4604      	mov	r4, r0
 800de7e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800de80:	4615      	mov	r5, r2
 800de82:	4798      	blx	r3
 800de84:	6823      	ldr	r3, [r4, #0]
 800de86:	4629      	mov	r1, r5
 800de88:	4620      	mov	r0, r4
 800de8a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800de8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de90:	4718      	bx	r3
	...

0800de94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800de94:	b538      	push	{r3, r4, r5, lr}
 800de96:	4b0e      	ldr	r3, [pc, #56]	; (800ded0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800de98:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800de9a:	881b      	ldrh	r3, [r3, #0]
 800de9c:	429a      	cmp	r2, r3
 800de9e:	4604      	mov	r4, r0
 800dea0:	d214      	bcs.n	800decc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800dea2:	6803      	ldr	r3, [r0, #0]
 800dea4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800dea6:	4798      	blx	r3
 800dea8:	6823      	ldr	r3, [r4, #0]
 800deaa:	4605      	mov	r5, r0
 800deac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800deae:	4620      	mov	r0, r4
 800deb0:	4798      	blx	r3
 800deb2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800deb6:	b22d      	sxth	r5, r5
 800deb8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800debc:	4601      	mov	r1, r0
 800debe:	bf06      	itte	eq
 800dec0:	4602      	moveq	r2, r0
 800dec2:	4629      	moveq	r1, r5
 800dec4:	462a      	movne	r2, r5
 800dec6:	4620      	mov	r0, r4
 800dec8:	f7ff ffd6 	bl	800de78 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800decc:	bd38      	pop	{r3, r4, r5, pc}
 800dece:	bf00      	nop
 800ded0:	20015440 	.word	0x20015440

0800ded4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800ded4:	b530      	push	{r4, r5, lr}
 800ded6:	888b      	ldrh	r3, [r1, #4]
 800ded8:	8583      	strh	r3, [r0, #44]	; 0x2c
 800deda:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800dede:	b085      	sub	sp, #20
 800dee0:	4604      	mov	r4, r0
 800dee2:	b923      	cbnz	r3, 800deee <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800dee4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800dee8:	b90b      	cbnz	r3, 800deee <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800deea:	f7ff ffd3 	bl	800de94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800deee:	6823      	ldr	r3, [r4, #0]
 800def0:	466d      	mov	r5, sp
 800def2:	4621      	mov	r1, r4
 800def4:	4628      	mov	r0, r5
 800def6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800defa:	4798      	blx	r3
 800defc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800df00:	343c      	adds	r4, #60	; 0x3c
 800df02:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800df06:	b005      	add	sp, #20
 800df08:	bd30      	pop	{r4, r5, pc}

0800df0a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800df0a:	2300      	movs	r3, #0
 800df0c:	8083      	strh	r3, [r0, #4]
 800df0e:	80c3      	strh	r3, [r0, #6]
 800df10:	8003      	strh	r3, [r0, #0]
 800df12:	8043      	strh	r3, [r0, #2]
 800df14:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800df18:	2bff      	cmp	r3, #255	; 0xff
 800df1a:	bf01      	itttt	eq
 800df1c:	890b      	ldrheq	r3, [r1, #8]
 800df1e:	8083      	strheq	r3, [r0, #4]
 800df20:	894b      	ldrheq	r3, [r1, #10]
 800df22:	80c3      	strheq	r3, [r0, #6]
 800df24:	4770      	bx	lr
	...

0800df28 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800df28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800df2a:	4604      	mov	r4, r0
 800df2c:	6808      	ldr	r0, [r1, #0]
 800df2e:	6849      	ldr	r1, [r1, #4]
 800df30:	466b      	mov	r3, sp
 800df32:	c303      	stmia	r3!, {r0, r1}
 800df34:	6823      	ldr	r3, [r4, #0]
 800df36:	4669      	mov	r1, sp
 800df38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800df3a:	4620      	mov	r0, r4
 800df3c:	4798      	blx	r3
 800df3e:	4b08      	ldr	r3, [pc, #32]	; (800df60 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800df40:	681b      	ldr	r3, [r3, #0]
 800df42:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800df46:	b10a      	cbz	r2, 800df4c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800df48:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800df4a:	b900      	cbnz	r0, 800df4e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800df4c:	6898      	ldr	r0, [r3, #8]
 800df4e:	6803      	ldr	r3, [r0, #0]
 800df50:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800df52:	6a1d      	ldr	r5, [r3, #32]
 800df54:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800df58:	4669      	mov	r1, sp
 800df5a:	47a8      	blx	r5
 800df5c:	b003      	add	sp, #12
 800df5e:	bd30      	pop	{r4, r5, pc}
 800df60:	200153e4 	.word	0x200153e4

0800df64 <_ZN8touchgfx3BoxD1Ev>:
 800df64:	4770      	bx	lr

0800df66 <_ZN8touchgfx3BoxD0Ev>:
 800df66:	b510      	push	{r4, lr}
 800df68:	212c      	movs	r1, #44	; 0x2c
 800df6a:	4604      	mov	r4, r0
 800df6c:	f012 f9fa 	bl	8020364 <_ZdlPvj>
 800df70:	4620      	mov	r0, r4
 800df72:	bd10      	pop	{r4, pc}

0800df74 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800df74:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800df78:	b12a      	cbz	r2, 800df86 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800df7a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800df7e:	b112      	cbz	r2, 800df86 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800df80:	6803      	ldr	r3, [r0, #0]
 800df82:	695b      	ldr	r3, [r3, #20]
 800df84:	4718      	bx	r3
 800df86:	4770      	bx	lr

0800df88 <_ZN8touchgfx6ButtonD1Ev>:
 800df88:	4770      	bx	lr

0800df8a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800df8a:	b570      	push	{r4, r5, r6, lr}
 800df8c:	880b      	ldrh	r3, [r1, #0]
 800df8e:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800df90:	4605      	mov	r5, r0
 800df92:	8813      	ldrh	r3, [r2, #0]
 800df94:	f825 3f30 	strh.w	r3, [r5, #48]!
 800df98:	4604      	mov	r4, r0
 800df9a:	4628      	mov	r0, r5
 800df9c:	f006 f8f6 	bl	801418c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dfa0:	4606      	mov	r6, r0
 800dfa2:	4628      	mov	r0, r5
 800dfa4:	f006 f926 	bl	80141f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dfa8:	6823      	ldr	r3, [r4, #0]
 800dfaa:	4605      	mov	r5, r0
 800dfac:	4631      	mov	r1, r6
 800dfae:	4620      	mov	r0, r4
 800dfb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dfb2:	4798      	blx	r3
 800dfb4:	6823      	ldr	r3, [r4, #0]
 800dfb6:	4629      	mov	r1, r5
 800dfb8:	4620      	mov	r0, r4
 800dfba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dfbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dfc0:	4718      	bx	r3

0800dfc2 <_ZN8touchgfx6ButtonD0Ev>:
 800dfc2:	b510      	push	{r4, lr}
 800dfc4:	2134      	movs	r1, #52	; 0x34
 800dfc6:	4604      	mov	r4, r0
 800dfc8:	f012 f9cc 	bl	8020364 <_ZdlPvj>
 800dfcc:	4620      	mov	r0, r4
 800dfce:	bd10      	pop	{r4, pc}

0800dfd0 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800dfd0:	b510      	push	{r4, lr}
 800dfd2:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800dfd6:	2bff      	cmp	r3, #255	; 0xff
 800dfd8:	4604      	mov	r4, r0
 800dfda:	d006      	beq.n	800dfea <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800dfdc:	2300      	movs	r3, #0
 800dfde:	8003      	strh	r3, [r0, #0]
 800dfe0:	8043      	strh	r3, [r0, #2]
 800dfe2:	8083      	strh	r3, [r0, #4]
 800dfe4:	80c3      	strh	r3, [r0, #6]
 800dfe6:	4620      	mov	r0, r4
 800dfe8:	bd10      	pop	{r4, pc}
 800dfea:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800dfee:	b11b      	cbz	r3, 800dff8 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800dff0:	3130      	adds	r1, #48	; 0x30
 800dff2:	f006 f933 	bl	801425c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800dff6:	e7f6      	b.n	800dfe6 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800dff8:	312e      	adds	r1, #46	; 0x2e
 800dffa:	e7fa      	b.n	800dff2 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800dffc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800dffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e000:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e004:	b08a      	sub	sp, #40	; 0x28
 800e006:	4604      	mov	r4, r0
 800e008:	4688      	mov	r8, r1
 800e00a:	2b00      	cmp	r3, #0
 800e00c:	d066      	beq.n	800e0dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e00e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e010:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e014:	a805      	add	r0, sp, #20
 800e016:	f006 f8b9 	bl	801418c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e01a:	4607      	mov	r7, r0
 800e01c:	a805      	add	r0, sp, #20
 800e01e:	f006 f8e9 	bl	80141f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e022:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e026:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e02a:	4432      	add	r2, r6
 800e02c:	b292      	uxth	r2, r2
 800e02e:	2300      	movs	r3, #0
 800e030:	fa0f fc82 	sxth.w	ip, r2
 800e034:	459c      	cmp	ip, r3
 800e036:	9306      	str	r3, [sp, #24]
 800e038:	dd52      	ble.n	800e0e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e03a:	42b7      	cmp	r7, r6
 800e03c:	dd50      	ble.n	800e0e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e03e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e042:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e046:	442b      	add	r3, r5
 800e048:	b29b      	uxth	r3, r3
 800e04a:	b219      	sxth	r1, r3
 800e04c:	2900      	cmp	r1, #0
 800e04e:	dd47      	ble.n	800e0e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e050:	42a8      	cmp	r0, r5
 800e052:	dd45      	ble.n	800e0e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e054:	4567      	cmp	r7, ip
 800e056:	bfb8      	it	lt
 800e058:	b2ba      	uxthlt	r2, r7
 800e05a:	4288      	cmp	r0, r1
 800e05c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e060:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e064:	bfb8      	it	lt
 800e066:	b283      	uxthlt	r3, r0
 800e068:	1b92      	subs	r2, r2, r6
 800e06a:	1b5b      	subs	r3, r3, r5
 800e06c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e070:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e074:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e078:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e07c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e080:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e084:	429a      	cmp	r2, r3
 800e086:	d026      	beq.n	800e0d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e088:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e08c:	2b00      	cmp	r3, #0
 800e08e:	dd22      	ble.n	800e0d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e090:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e094:	2b00      	cmp	r3, #0
 800e096:	dd1e      	ble.n	800e0d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e098:	2300      	movs	r3, #0
 800e09a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e09e:	6823      	ldr	r3, [r4, #0]
 800e0a0:	a908      	add	r1, sp, #32
 800e0a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e0a4:	4620      	mov	r0, r4
 800e0a6:	4798      	blx	r3
 800e0a8:	4b0f      	ldr	r3, [pc, #60]	; (800e0e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e0aa:	681b      	ldr	r3, [r3, #0]
 800e0ac:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e0b0:	b10a      	cbz	r2, 800e0b6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e0b2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e0b4:	b900      	cbnz	r0, 800e0b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e0b6:	6898      	ldr	r0, [r3, #8]
 800e0b8:	6801      	ldr	r1, [r0, #0]
 800e0ba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e0be:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e0c2:	2501      	movs	r5, #1
 800e0c4:	9502      	str	r5, [sp, #8]
 800e0c6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e0ca:	9401      	str	r4, [sp, #4]
 800e0cc:	ac06      	add	r4, sp, #24
 800e0ce:	9400      	str	r4, [sp, #0]
 800e0d0:	688c      	ldr	r4, [r1, #8]
 800e0d2:	a905      	add	r1, sp, #20
 800e0d4:	47a0      	blx	r4
 800e0d6:	b00a      	add	sp, #40	; 0x28
 800e0d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e0dc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e0de:	e797      	b.n	800e010 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e0e0:	2300      	movs	r3, #0
 800e0e2:	9307      	str	r3, [sp, #28]
 800e0e4:	e7ca      	b.n	800e07c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e0e6:	bf00      	nop
 800e0e8:	200153e4 	.word	0x200153e4

0800e0ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e0ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e0f0:	4b2f      	ldr	r3, [pc, #188]	; (800e1b0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e0f2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e0f4:	881b      	ldrh	r3, [r3, #0]
 800e0f6:	4293      	cmp	r3, r2
 800e0f8:	b08d      	sub	sp, #52	; 0x34
 800e0fa:	4604      	mov	r4, r0
 800e0fc:	460f      	mov	r7, r1
 800e0fe:	d954      	bls.n	800e1aa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e100:	4b2c      	ldr	r3, [pc, #176]	; (800e1b4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e102:	6819      	ldr	r1, [r3, #0]
 800e104:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e108:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e10c:	4a2a      	ldr	r2, [pc, #168]	; (800e1b8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e10e:	6812      	ldr	r2, [r2, #0]
 800e110:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e114:	2900      	cmp	r1, #0
 800e116:	d048      	beq.n	800e1aa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e118:	785a      	ldrb	r2, [r3, #1]
 800e11a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e11e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e122:	4b26      	ldr	r3, [pc, #152]	; (800e1bc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e124:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e128:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e12c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e130:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e132:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e136:	9107      	str	r1, [sp, #28]
 800e138:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e13c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e140:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e144:	681a      	ldr	r2, [r3, #0]
 800e146:	f88d 8020 	strb.w	r8, [sp, #32]
 800e14a:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e14e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e152:	9609      	str	r6, [sp, #36]	; 0x24
 800e154:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e158:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e15c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e160:	b10b      	cbz	r3, 800e166 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e162:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e164:	b905      	cbnz	r5, 800e168 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e166:	6895      	ldr	r5, [r2, #8]
 800e168:	ae05      	add	r6, sp, #20
 800e16a:	4621      	mov	r1, r4
 800e16c:	4630      	mov	r0, r6
 800e16e:	f003 fe0f 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e172:	4b13      	ldr	r3, [pc, #76]	; (800e1c0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e174:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e176:	6818      	ldr	r0, [r3, #0]
 800e178:	f7f6 fd82 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800e17c:	6823      	ldr	r3, [r4, #0]
 800e17e:	4680      	mov	r8, r0
 800e180:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e182:	4620      	mov	r0, r4
 800e184:	4798      	blx	r3
 800e186:	6823      	ldr	r3, [r4, #0]
 800e188:	4681      	mov	r9, r0
 800e18a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e18e:	4620      	mov	r0, r4
 800e190:	4798      	blx	r3
 800e192:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e196:	ab07      	add	r3, sp, #28
 800e198:	9300      	str	r3, [sp, #0]
 800e19a:	f8cd 8004 	str.w	r8, [sp, #4]
 800e19e:	463b      	mov	r3, r7
 800e1a0:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e1a4:	4628      	mov	r0, r5
 800e1a6:	f7f6 fd1d 	bl	8004be4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e1aa:	b00d      	add	sp, #52	; 0x34
 800e1ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e1b0:	20015440 	.word	0x20015440
 800e1b4:	2001543c 	.word	0x2001543c
 800e1b8:	20015444 	.word	0x20015444
 800e1bc:	200153e4 	.word	0x200153e4
 800e1c0:	20015448 	.word	0x20015448

0800e1c4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e1c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1c8:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e1cc:	b0a0      	sub	sp, #128	; 0x80
 800e1ce:	4604      	mov	r4, r0
 800e1d0:	b193      	cbz	r3, 800e1f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e1d2:	4b30      	ldr	r3, [pc, #192]	; (800e294 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e1d4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e1d6:	881b      	ldrh	r3, [r3, #0]
 800e1d8:	428b      	cmp	r3, r1
 800e1da:	d90d      	bls.n	800e1f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e1dc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e1e0:	2b00      	cmp	r3, #0
 800e1e2:	dd09      	ble.n	800e1f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e1e4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e1e8:	2b00      	cmp	r3, #0
 800e1ea:	dd05      	ble.n	800e1f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e1ec:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e1f0:	b12b      	cbz	r3, 800e1fe <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e1f2:	6803      	ldr	r3, [r0, #0]
 800e1f4:	695b      	ldr	r3, [r3, #20]
 800e1f6:	4798      	blx	r3
 800e1f8:	b020      	add	sp, #128	; 0x80
 800e1fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1fe:	4b26      	ldr	r3, [pc, #152]	; (800e298 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e200:	681b      	ldr	r3, [r3, #0]
 800e202:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e206:	4b25      	ldr	r3, [pc, #148]	; (800e29c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e208:	681b      	ldr	r3, [r3, #0]
 800e20a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e20e:	4b24      	ldr	r3, [pc, #144]	; (800e2a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e210:	6818      	ldr	r0, [r3, #0]
 800e212:	f7f6 fd35 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800e216:	4606      	mov	r6, r0
 800e218:	a807      	add	r0, sp, #28
 800e21a:	f004 fa6e 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 800e21e:	682b      	ldr	r3, [r5, #0]
 800e220:	4628      	mov	r0, r5
 800e222:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e224:	4798      	blx	r3
 800e226:	682b      	ldr	r3, [r5, #0]
 800e228:	4607      	mov	r7, r0
 800e22a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e22c:	4628      	mov	r0, r5
 800e22e:	4798      	blx	r3
 800e230:	6823      	ldr	r3, [r4, #0]
 800e232:	4605      	mov	r5, r0
 800e234:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e236:	4620      	mov	r0, r4
 800e238:	4798      	blx	r3
 800e23a:	6823      	ldr	r3, [r4, #0]
 800e23c:	4680      	mov	r8, r0
 800e23e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e242:	4620      	mov	r0, r4
 800e244:	4798      	blx	r3
 800e246:	462b      	mov	r3, r5
 800e248:	e9cd 8000 	strd	r8, r0, [sp]
 800e24c:	463a      	mov	r2, r7
 800e24e:	a807      	add	r0, sp, #28
 800e250:	4631      	mov	r1, r6
 800e252:	f004 fac2 	bl	80127da <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e256:	a807      	add	r0, sp, #28
 800e258:	f004 fe7a 	bl	8012f50 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e25c:	280a      	cmp	r0, #10
 800e25e:	d103      	bne.n	800e268 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e260:	6823      	ldr	r3, [r4, #0]
 800e262:	4620      	mov	r0, r4
 800e264:	695b      	ldr	r3, [r3, #20]
 800e266:	e7c6      	b.n	800e1f6 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e268:	a807      	add	r0, sp, #28
 800e26a:	f004 fe71 	bl	8012f50 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e26e:	2800      	cmp	r0, #0
 800e270:	d1f4      	bne.n	800e25c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e272:	ad04      	add	r5, sp, #16
 800e274:	4621      	mov	r1, r4
 800e276:	4628      	mov	r0, r5
 800e278:	f7ff fb9c 	bl	800d9b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e27c:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e280:	6822      	ldr	r2, [r4, #0]
 800e282:	ab02      	add	r3, sp, #8
 800e284:	e883 0003 	stmia.w	r3, {r0, r1}
 800e288:	6912      	ldr	r2, [r2, #16]
 800e28a:	4619      	mov	r1, r3
 800e28c:	4620      	mov	r0, r4
 800e28e:	4790      	blx	r2
 800e290:	e7b2      	b.n	800e1f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e292:	bf00      	nop
 800e294:	20015440 	.word	0x20015440
 800e298:	2001543c 	.word	0x2001543c
 800e29c:	20015444 	.word	0x20015444
 800e2a0:	20015448 	.word	0x20015448

0800e2a4 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e2a4:	4770      	bx	lr

0800e2a6 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e2a6:	b510      	push	{r4, lr}
 800e2a8:	2134      	movs	r1, #52	; 0x34
 800e2aa:	4604      	mov	r4, r0
 800e2ac:	f012 f85a 	bl	8020364 <_ZdlPvj>
 800e2b0:	4620      	mov	r0, r4
 800e2b2:	bd10      	pop	{r4, pc}

0800e2b4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e2b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2b8:	4604      	mov	r4, r0
 800e2ba:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e2bc:	8962      	ldrh	r2, [r4, #10]
 800e2be:	b218      	sxth	r0, r3
 800e2c0:	460e      	mov	r6, r1
 800e2c2:	005b      	lsls	r3, r3, #1
 800e2c4:	8921      	ldrh	r1, [r4, #8]
 800e2c6:	b29b      	uxth	r3, r3
 800e2c8:	1ac9      	subs	r1, r1, r3
 800e2ca:	b08e      	sub	sp, #56	; 0x38
 800e2cc:	b209      	sxth	r1, r1
 800e2ce:	1ad3      	subs	r3, r2, r3
 800e2d0:	b21b      	sxth	r3, r3
 800e2d2:	2900      	cmp	r1, #0
 800e2d4:	f8ad 0000 	strh.w	r0, [sp]
 800e2d8:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e2dc:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e2e0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e2e4:	dd5e      	ble.n	800e3a4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e2e6:	2b00      	cmp	r3, #0
 800e2e8:	dd5c      	ble.n	800e3a4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e2ea:	6830      	ldr	r0, [r6, #0]
 800e2ec:	6871      	ldr	r1, [r6, #4]
 800e2ee:	ab02      	add	r3, sp, #8
 800e2f0:	c303      	stmia	r3!, {r0, r1}
 800e2f2:	4669      	mov	r1, sp
 800e2f4:	a802      	add	r0, sp, #8
 800e2f6:	f7fc fb79 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800e2fa:	4620      	mov	r0, r4
 800e2fc:	a902      	add	r1, sp, #8
 800e2fe:	f7ff fe13 	bl	800df28 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e302:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e304:	2800      	cmp	r0, #0
 800e306:	d05f      	beq.n	800e3c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e308:	8963      	ldrh	r3, [r4, #10]
 800e30a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e30e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e312:	1a1f      	subs	r7, r3, r0
 800e314:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e318:	b202      	sxth	r2, r0
 800e31a:	2500      	movs	r5, #0
 800e31c:	b21b      	sxth	r3, r3
 800e31e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e322:	1a09      	subs	r1, r1, r0
 800e324:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e328:	9506      	str	r5, [sp, #24]
 800e32a:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e32e:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e332:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e336:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e33a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e33e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e342:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e346:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e34a:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e34e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e352:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e356:	af04      	add	r7, sp, #16
 800e358:	ab06      	add	r3, sp, #24
 800e35a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e35e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e362:	e887 0003 	stmia.w	r7, {r0, r1}
 800e366:	4631      	mov	r1, r6
 800e368:	4638      	mov	r0, r7
 800e36a:	f7fc fb3f 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800e36e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e372:	2b00      	cmp	r3, #0
 800e374:	dd12      	ble.n	800e39c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e376:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e37a:	2b00      	cmp	r3, #0
 800e37c:	dd0e      	ble.n	800e39c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e37e:	6823      	ldr	r3, [r4, #0]
 800e380:	4639      	mov	r1, r7
 800e382:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e384:	4620      	mov	r0, r4
 800e386:	4798      	blx	r3
 800e388:	f7f4 f834 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800e38c:	6803      	ldr	r3, [r0, #0]
 800e38e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e390:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e394:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e398:	4639      	mov	r1, r7
 800e39a:	47c0      	blx	r8
 800e39c:	3501      	adds	r5, #1
 800e39e:	2d04      	cmp	r5, #4
 800e3a0:	d1da      	bne.n	800e358 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e3a2:	e011      	b.n	800e3c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e3a4:	6830      	ldr	r0, [r6, #0]
 800e3a6:	6871      	ldr	r1, [r6, #4]
 800e3a8:	ab06      	add	r3, sp, #24
 800e3aa:	c303      	stmia	r3!, {r0, r1}
 800e3ac:	6823      	ldr	r3, [r4, #0]
 800e3ae:	a906      	add	r1, sp, #24
 800e3b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e3b2:	4620      	mov	r0, r4
 800e3b4:	4798      	blx	r3
 800e3b6:	f7f4 f81d 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800e3ba:	6803      	ldr	r3, [r0, #0]
 800e3bc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e3be:	6a1d      	ldr	r5, [r3, #32]
 800e3c0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e3c4:	a906      	add	r1, sp, #24
 800e3c6:	47a8      	blx	r5
 800e3c8:	b00e      	add	sp, #56	; 0x38
 800e3ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e3ce <_ZN8touchgfx5ImageD1Ev>:
 800e3ce:	4770      	bx	lr

0800e3d0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e3d0:	b570      	push	{r4, r5, r6, lr}
 800e3d2:	880b      	ldrh	r3, [r1, #0]
 800e3d4:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e3d6:	4604      	mov	r4, r0
 800e3d8:	4608      	mov	r0, r1
 800e3da:	460d      	mov	r5, r1
 800e3dc:	f005 fed6 	bl	801418c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e3e0:	4606      	mov	r6, r0
 800e3e2:	4628      	mov	r0, r5
 800e3e4:	f005 ff06 	bl	80141f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e3e8:	6823      	ldr	r3, [r4, #0]
 800e3ea:	4605      	mov	r5, r0
 800e3ec:	4631      	mov	r1, r6
 800e3ee:	4620      	mov	r0, r4
 800e3f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e3f2:	4798      	blx	r3
 800e3f4:	6823      	ldr	r3, [r4, #0]
 800e3f6:	4629      	mov	r1, r5
 800e3f8:	4620      	mov	r0, r4
 800e3fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e3fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e400:	4718      	bx	r3

0800e402 <_ZN8touchgfx5ImageD0Ev>:
 800e402:	b510      	push	{r4, lr}
 800e404:	212c      	movs	r1, #44	; 0x2c
 800e406:	4604      	mov	r4, r0
 800e408:	f011 ffac 	bl	8020364 <_ZdlPvj>
 800e40c:	4620      	mov	r0, r4
 800e40e:	bd10      	pop	{r4, pc}

0800e410 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e410:	b510      	push	{r4, lr}
 800e412:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e416:	2bff      	cmp	r3, #255	; 0xff
 800e418:	4604      	mov	r4, r0
 800e41a:	d006      	beq.n	800e42a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e41c:	2300      	movs	r3, #0
 800e41e:	8003      	strh	r3, [r0, #0]
 800e420:	8043      	strh	r3, [r0, #2]
 800e422:	8083      	strh	r3, [r0, #4]
 800e424:	80c3      	strh	r3, [r0, #6]
 800e426:	4620      	mov	r0, r4
 800e428:	bd10      	pop	{r4, pc}
 800e42a:	3126      	adds	r1, #38	; 0x26
 800e42c:	f005 ff16 	bl	801425c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e430:	e7f9      	b.n	800e426 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e432 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e432:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e436:	b12a      	cbz	r2, 800e444 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e438:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e43c:	b112      	cbz	r2, 800e444 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e43e:	6803      	ldr	r3, [r0, #0]
 800e440:	695b      	ldr	r3, [r3, #20]
 800e442:	4718      	bx	r3
 800e444:	4770      	bx	lr
	...

0800e448 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e44c:	4604      	mov	r4, r0
 800e44e:	b088      	sub	sp, #32
 800e450:	f854 3b26 	ldr.w	r3, [r4], #38
 800e454:	2500      	movs	r5, #0
 800e456:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e458:	460f      	mov	r7, r1
 800e45a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e45e:	a904      	add	r1, sp, #16
 800e460:	4606      	mov	r6, r0
 800e462:	4798      	blx	r3
 800e464:	4620      	mov	r0, r4
 800e466:	f005 fe91 	bl	801418c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e46a:	4680      	mov	r8, r0
 800e46c:	4620      	mov	r0, r4
 800e46e:	f005 fec1 	bl	80141f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e472:	9506      	str	r5, [sp, #24]
 800e474:	ad06      	add	r5, sp, #24
 800e476:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e47a:	4639      	mov	r1, r7
 800e47c:	4628      	mov	r0, r5
 800e47e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e482:	f7fc fab3 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800e486:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e48a:	2b00      	cmp	r3, #0
 800e48c:	dd19      	ble.n	800e4c2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e48e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e492:	2b00      	cmp	r3, #0
 800e494:	dd15      	ble.n	800e4c2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e496:	4b0c      	ldr	r3, [pc, #48]	; (800e4c8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e498:	681b      	ldr	r3, [r3, #0]
 800e49a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e49e:	b10a      	cbz	r2, 800e4a4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e4a0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e4a2:	b900      	cbnz	r0, 800e4a6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e4a4:	6898      	ldr	r0, [r3, #8]
 800e4a6:	6801      	ldr	r1, [r0, #0]
 800e4a8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e4ac:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e4b0:	2701      	movs	r7, #1
 800e4b2:	9702      	str	r7, [sp, #8]
 800e4b4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e4b8:	e9cd 5600 	strd	r5, r6, [sp]
 800e4bc:	688d      	ldr	r5, [r1, #8]
 800e4be:	4621      	mov	r1, r4
 800e4c0:	47a8      	blx	r5
 800e4c2:	b008      	add	sp, #32
 800e4c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e4c8:	200153e4 	.word	0x200153e4

0800e4cc <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800e4cc:	4770      	bx	lr

0800e4ce <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e4ce:	b510      	push	{r4, lr}
 800e4d0:	2148      	movs	r1, #72	; 0x48
 800e4d2:	4604      	mov	r4, r0
 800e4d4:	f011 ff46 	bl	8020364 <_ZdlPvj>
 800e4d8:	4620      	mov	r0, r4
 800e4da:	bd10      	pop	{r4, pc}

0800e4dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800e4dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e4e0:	b08d      	sub	sp, #52	; 0x34
 800e4e2:	4604      	mov	r4, r0
 800e4e4:	4688      	mov	r8, r1
 800e4e6:	f7ff fd89 	bl	800dffc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800e4ea:	4a4d      	ldr	r2, [pc, #308]	; (800e620 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800e4ec:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e4ee:	8812      	ldrh	r2, [r2, #0]
 800e4f0:	429a      	cmp	r2, r3
 800e4f2:	f240 8081 	bls.w	800e5f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e4f6:	4e4b      	ldr	r6, [pc, #300]	; (800e624 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800e4f8:	6832      	ldr	r2, [r6, #0]
 800e4fa:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e4fe:	4b4a      	ldr	r3, [pc, #296]	; (800e628 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800e500:	681b      	ldr	r3, [r3, #0]
 800e502:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800e506:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e50a:	2300      	movs	r3, #0
 800e50c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800e510:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e514:	2b03      	cmp	r3, #3
 800e516:	d811      	bhi.n	800e53c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e518:	e8df f003 	tbb	[pc, r3]
 800e51c:	71027102 	.word	0x71027102
 800e520:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e524:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e528:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e52c:	1a9b      	subs	r3, r3, r2
 800e52e:	2002      	movs	r0, #2
 800e530:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e534:	fb93 f3f0 	sdiv	r3, r3, r0
 800e538:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e53c:	ad03      	add	r5, sp, #12
 800e53e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e542:	f10d 0914 	add.w	r9, sp, #20
 800e546:	e889 0003 	stmia.w	r9, {r0, r1}
 800e54a:	4641      	mov	r1, r8
 800e54c:	4648      	mov	r0, r9
 800e54e:	f7fc fa4d 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 800e552:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e556:	2b00      	cmp	r3, #0
 800e558:	dd4e      	ble.n	800e5f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e55a:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e55e:	2b00      	cmp	r3, #0
 800e560:	dd4a      	ble.n	800e5f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e562:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e566:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e56a:	1a9b      	subs	r3, r3, r2
 800e56c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e570:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e574:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e578:	1a9b      	subs	r3, r3, r2
 800e57a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e57e:	6823      	ldr	r3, [r4, #0]
 800e580:	4629      	mov	r1, r5
 800e582:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e584:	4620      	mov	r0, r4
 800e586:	4798      	blx	r3
 800e588:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e58c:	2b00      	cmp	r3, #0
 800e58e:	d045      	beq.n	800e61c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800e590:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e592:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e594:	6833      	ldr	r3, [r6, #0]
 800e596:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800e59a:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800e59e:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e5a2:	785b      	ldrb	r3, [r3, #1]
 800e5a4:	9209      	str	r2, [sp, #36]	; 0x24
 800e5a6:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800e5aa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e5ae:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e5b2:	2300      	movs	r3, #0
 800e5b4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800e5b8:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800e5bc:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e5c0:	4b1a      	ldr	r3, [pc, #104]	; (800e62c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800e5c2:	9707      	str	r7, [sp, #28]
 800e5c4:	681b      	ldr	r3, [r3, #0]
 800e5c6:	f88d 6020 	strb.w	r6, [sp, #32]
 800e5ca:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e5ce:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800e5d2:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800e5d6:	b10a      	cbz	r2, 800e5dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800e5d8:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800e5da:	b904      	cbnz	r4, 800e5de <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800e5dc:	689c      	ldr	r4, [r3, #8]
 800e5de:	4b14      	ldr	r3, [pc, #80]	; (800e630 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800e5e0:	6818      	ldr	r0, [r3, #0]
 800e5e2:	f7f6 fb4d 	bl	8004c80 <_ZNK8touchgfx5Texts7getTextEt>
 800e5e6:	ab07      	add	r3, sp, #28
 800e5e8:	9001      	str	r0, [sp, #4]
 800e5ea:	9300      	str	r3, [sp, #0]
 800e5ec:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e5f0:	464b      	mov	r3, r9
 800e5f2:	4620      	mov	r0, r4
 800e5f4:	f7f6 faf6 	bl	8004be4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e5f8:	b00d      	add	sp, #52	; 0x34
 800e5fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e5fe:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e602:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800e606:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e60a:	1a9b      	subs	r3, r3, r2
 800e60c:	2002      	movs	r0, #2
 800e60e:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e612:	fb93 f3f0 	sdiv	r3, r3, r0
 800e616:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e61a:	e78f      	b.n	800e53c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e61c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e61e:	e7b8      	b.n	800e592 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800e620:	20015440 	.word	0x20015440
 800e624:	2001543c 	.word	0x2001543c
 800e628:	20015444 	.word	0x20015444
 800e62c:	200153e4 	.word	0x200153e4
 800e630:	20015448 	.word	0x20015448

0800e634 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800e634:	b510      	push	{r4, lr}
 800e636:	2101      	movs	r1, #1
 800e638:	4c13      	ldr	r4, [pc, #76]	; (800e688 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800e63a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800e63e:	2200      	movs	r2, #0
 800e640:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800e644:	6004      	str	r4, [r0, #0]
 800e646:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e64a:	4c10      	ldr	r4, [pc, #64]	; (800e68c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800e64c:	8082      	strh	r2, [r0, #4]
 800e64e:	80c2      	strh	r2, [r0, #6]
 800e650:	8102      	strh	r2, [r0, #8]
 800e652:	8142      	strh	r2, [r0, #10]
 800e654:	8182      	strh	r2, [r0, #12]
 800e656:	81c2      	strh	r2, [r0, #14]
 800e658:	8202      	strh	r2, [r0, #16]
 800e65a:	8242      	strh	r2, [r0, #18]
 800e65c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e660:	61c2      	str	r2, [r0, #28]
 800e662:	8402      	strh	r2, [r0, #32]
 800e664:	8442      	strh	r2, [r0, #34]	; 0x22
 800e666:	6282      	str	r2, [r0, #40]	; 0x28
 800e668:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800e66c:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e66e:	8601      	strh	r1, [r0, #48]	; 0x30
 800e670:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800e674:	6344      	str	r4, [r0, #52]	; 0x34
 800e676:	8701      	strh	r1, [r0, #56]	; 0x38
 800e678:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800e67c:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800e680:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800e684:	bd10      	pop	{r4, pc}
 800e686:	bf00      	nop
 800e688:	08023e80 	.word	0x08023e80
 800e68c:	08021e48 	.word	0x08021e48

0800e690 <_ZN8touchgfx7OutlineD1Ev>:
 800e690:	4770      	bx	lr

0800e692 <_ZN8touchgfx7OutlineD0Ev>:
 800e692:	b510      	push	{r4, lr}
 800e694:	2130      	movs	r1, #48	; 0x30
 800e696:	4604      	mov	r4, r0
 800e698:	f011 fe64 	bl	8020364 <_ZdlPvj>
 800e69c:	4620      	mov	r0, r4
 800e69e:	bd10      	pop	{r4, pc}

0800e6a0 <_ZN8touchgfx7Outline5resetEv>:
 800e6a0:	b510      	push	{r4, lr}
 800e6a2:	4604      	mov	r4, r0
 800e6a4:	f000 fe8c 	bl	800f3c0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e6a8:	60e0      	str	r0, [r4, #12]
 800e6aa:	f000 fe8f 	bl	800f3cc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e6ae:	68e3      	ldr	r3, [r4, #12]
 800e6b0:	6123      	str	r3, [r4, #16]
 800e6b2:	08c0      	lsrs	r0, r0, #3
 800e6b4:	2200      	movs	r2, #0
 800e6b6:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e6ba:	3801      	subs	r0, #1
 800e6bc:	6060      	str	r0, [r4, #4]
 800e6be:	60a2      	str	r2, [r4, #8]
 800e6c0:	8019      	strh	r1, [r3, #0]
 800e6c2:	8059      	strh	r1, [r3, #2]
 800e6c4:	809a      	strh	r2, [r3, #4]
 800e6c6:	80da      	strh	r2, [r3, #6]
 800e6c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e6ca:	f023 0301 	bic.w	r3, r3, #1
 800e6ce:	f043 0302 	orr.w	r3, r3, #2
 800e6d2:	6263      	str	r3, [r4, #36]	; 0x24
 800e6d4:	bd10      	pop	{r4, pc}
	...

0800e6d8 <_ZN8touchgfx7OutlineC1Ev>:
 800e6d8:	b510      	push	{r4, lr}
 800e6da:	4b0a      	ldr	r3, [pc, #40]	; (800e704 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800e6dc:	6003      	str	r3, [r0, #0]
 800e6de:	2300      	movs	r3, #0
 800e6e0:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800e6e4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e6e8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e6ec:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800e6f0:	6243      	str	r3, [r0, #36]	; 0x24
 800e6f2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800e6f6:	4604      	mov	r4, r0
 800e6f8:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800e6fc:	f7ff ffd0 	bl	800e6a0 <_ZN8touchgfx7Outline5resetEv>
 800e700:	4620      	mov	r0, r4
 800e702:	bd10      	pop	{r4, pc}
 800e704:	08023ef4 	.word	0x08023ef4

0800e708 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800e708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e70c:	b093      	sub	sp, #76	; 0x4c
 800e70e:	1156      	asrs	r6, r2, #5
 800e710:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800e712:	9305      	str	r3, [sp, #20]
 800e714:	f004 051f 	and.w	r5, r4, #31
 800e718:	1153      	asrs	r3, r2, #5
 800e71a:	9504      	str	r5, [sp, #16]
 800e71c:	1165      	asrs	r5, r4, #5
 800e71e:	9303      	str	r3, [sp, #12]
 800e720:	42ae      	cmp	r6, r5
 800e722:	ea4f 1364 	mov.w	r3, r4, asr #5
 800e726:	9306      	str	r3, [sp, #24]
 800e728:	f002 031f 	and.w	r3, r2, #31
 800e72c:	f040 80f8 	bne.w	800e920 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800e730:	9c04      	ldr	r4, [sp, #16]
 800e732:	9a05      	ldr	r2, [sp, #20]
 800e734:	42a3      	cmp	r3, r4
 800e736:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800e73a:	6902      	ldr	r2, [r0, #16]
 800e73c:	d125      	bne.n	800e78a <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800e73e:	f9b2 3000 	ldrsh.w	r3, [r2]
 800e742:	459e      	cmp	lr, r3
 800e744:	d103      	bne.n	800e74e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800e746:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e74a:	429e      	cmp	r6, r3
 800e74c:	d035      	beq.n	800e7ba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e74e:	88d1      	ldrh	r1, [r2, #6]
 800e750:	8893      	ldrh	r3, [r2, #4]
 800e752:	430b      	orrs	r3, r1
 800e754:	d010      	beq.n	800e778 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e756:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e75a:	2b00      	cmp	r3, #0
 800e75c:	db0c      	blt.n	800e778 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e75e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800e760:	428b      	cmp	r3, r1
 800e762:	da09      	bge.n	800e778 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e764:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e768:	428b      	cmp	r3, r1
 800e76a:	bf38      	it	cc
 800e76c:	3208      	addcc	r2, #8
 800e76e:	f103 0301 	add.w	r3, r3, #1
 800e772:	bf38      	it	cc
 800e774:	6102      	strcc	r2, [r0, #16]
 800e776:	6083      	str	r3, [r0, #8]
 800e778:	6903      	ldr	r3, [r0, #16]
 800e77a:	9a03      	ldr	r2, [sp, #12]
 800e77c:	f8a3 e000 	strh.w	lr, [r3]
 800e780:	805a      	strh	r2, [r3, #2]
 800e782:	2200      	movs	r2, #0
 800e784:	809a      	strh	r2, [r3, #4]
 800e786:	80da      	strh	r2, [r3, #6]
 800e788:	e017      	b.n	800e7ba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e78a:	9c05      	ldr	r4, [sp, #20]
 800e78c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800e790:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800e794:	f004 041f 	and.w	r4, r4, #31
 800e798:	114e      	asrs	r6, r1, #5
 800e79a:	9402      	str	r4, [sp, #8]
 800e79c:	9c04      	ldr	r4, [sp, #16]
 800e79e:	4576      	cmp	r6, lr
 800e7a0:	f001 0c1f 	and.w	ip, r1, #31
 800e7a4:	eba4 0403 	sub.w	r4, r4, r3
 800e7a8:	d10a      	bne.n	800e7c0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800e7aa:	9b02      	ldr	r3, [sp, #8]
 800e7ac:	449c      	add	ip, r3
 800e7ae:	44a0      	add	r8, r4
 800e7b0:	fb04 a40c 	mla	r4, r4, ip, sl
 800e7b4:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e7b8:	80d4      	strh	r4, [r2, #6]
 800e7ba:	b013      	add	sp, #76	; 0x4c
 800e7bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7c0:	9d05      	ldr	r5, [sp, #20]
 800e7c2:	1a69      	subs	r1, r5, r1
 800e7c4:	bf5b      	ittet	pl
 800e7c6:	f1cc 0520 	rsbpl	r5, ip, #32
 800e7ca:	436c      	mulpl	r4, r5
 800e7cc:	2500      	movmi	r5, #0
 800e7ce:	2520      	movpl	r5, #32
 800e7d0:	bf44      	itt	mi
 800e7d2:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e7d6:	4249      	negmi	r1, r1
 800e7d8:	9501      	str	r5, [sp, #4]
 800e7da:	9f01      	ldr	r7, [sp, #4]
 800e7dc:	fb94 f5f1 	sdiv	r5, r4, r1
 800e7e0:	fb01 4415 	mls	r4, r1, r5, r4
 800e7e4:	bf54      	ite	pl
 800e7e6:	f04f 0901 	movpl.w	r9, #1
 800e7ea:	f04f 39ff 	movmi.w	r9, #4294967295
 800e7ee:	2c00      	cmp	r4, #0
 800e7f0:	bfb8      	it	lt
 800e7f2:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e7f6:	44bc      	add	ip, r7
 800e7f8:	44a8      	add	r8, r5
 800e7fa:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e7fe:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e802:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e806:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e80a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e80e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800e812:	bfb8      	it	lt
 800e814:	1864      	addlt	r4, r4, r1
 800e816:	ea58 0202 	orrs.w	r2, r8, r2
 800e81a:	444e      	add	r6, r9
 800e81c:	d011      	beq.n	800e842 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e81e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e822:	f1b8 0f00 	cmp.w	r8, #0
 800e826:	db0c      	blt.n	800e842 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e828:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800e82a:	4590      	cmp	r8, r2
 800e82c:	da09      	bge.n	800e842 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e82e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800e832:	4590      	cmp	r8, r2
 800e834:	bf3c      	itt	cc
 800e836:	f10c 0208 	addcc.w	r2, ip, #8
 800e83a:	6102      	strcc	r2, [r0, #16]
 800e83c:	f108 0201 	add.w	r2, r8, #1
 800e840:	6082      	str	r2, [r0, #8]
 800e842:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e846:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e84a:	f8ac 6000 	strh.w	r6, [ip]
 800e84e:	2700      	movs	r7, #0
 800e850:	45b6      	cmp	lr, r6
 800e852:	f8ac 2002 	strh.w	r2, [ip, #2]
 800e856:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e85a:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e85e:	442b      	add	r3, r5
 800e860:	d04d      	beq.n	800e8fe <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800e862:	9f04      	ldr	r7, [sp, #16]
 800e864:	1aff      	subs	r7, r7, r3
 800e866:	443d      	add	r5, r7
 800e868:	016d      	lsls	r5, r5, #5
 800e86a:	fb95 f8f1 	sdiv	r8, r5, r1
 800e86e:	fb01 5518 	mls	r5, r1, r8, r5
 800e872:	2d00      	cmp	r5, #0
 800e874:	bfb8      	it	lt
 800e876:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e87a:	f108 0701 	add.w	r7, r8, #1
 800e87e:	bfb8      	it	lt
 800e880:	186d      	addlt	r5, r5, r1
 800e882:	1a64      	subs	r4, r4, r1
 800e884:	9703      	str	r7, [sp, #12]
 800e886:	f04f 0a00 	mov.w	sl, #0
 800e88a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e88e:	1964      	adds	r4, r4, r5
 800e890:	bf58      	it	pl
 800e892:	9f03      	ldrpl	r7, [sp, #12]
 800e894:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e898:	bf48      	it	mi
 800e89a:	4647      	movmi	r7, r8
 800e89c:	44bb      	add	fp, r7
 800e89e:	f8ac b004 	strh.w	fp, [ip, #4]
 800e8a2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e8a6:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e8aa:	f8ac b006 	strh.w	fp, [ip, #6]
 800e8ae:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e8b2:	443b      	add	r3, r7
 800e8b4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e8b8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e8bc:	bf58      	it	pl
 800e8be:	1a64      	subpl	r4, r4, r1
 800e8c0:	ea5b 0707 	orrs.w	r7, fp, r7
 800e8c4:	444e      	add	r6, r9
 800e8c6:	d011      	beq.n	800e8ec <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e8c8:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e8cc:	f1bb 0f00 	cmp.w	fp, #0
 800e8d0:	db0c      	blt.n	800e8ec <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e8d2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e8d4:	45bb      	cmp	fp, r7
 800e8d6:	da09      	bge.n	800e8ec <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e8d8:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e8dc:	45bb      	cmp	fp, r7
 800e8de:	bf3c      	itt	cc
 800e8e0:	f10c 0708 	addcc.w	r7, ip, #8
 800e8e4:	6107      	strcc	r7, [r0, #16]
 800e8e6:	f10b 0701 	add.w	r7, fp, #1
 800e8ea:	6087      	str	r7, [r0, #8]
 800e8ec:	6907      	ldr	r7, [r0, #16]
 800e8ee:	45b6      	cmp	lr, r6
 800e8f0:	803e      	strh	r6, [r7, #0]
 800e8f2:	807a      	strh	r2, [r7, #2]
 800e8f4:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e8f8:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e8fc:	d1c5      	bne.n	800e88a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800e8fe:	9a04      	ldr	r2, [sp, #16]
 800e900:	1ad3      	subs	r3, r2, r3
 800e902:	6902      	ldr	r2, [r0, #16]
 800e904:	8891      	ldrh	r1, [r2, #4]
 800e906:	88d6      	ldrh	r6, [r2, #6]
 800e908:	4419      	add	r1, r3
 800e90a:	8091      	strh	r1, [r2, #4]
 800e90c:	9902      	ldr	r1, [sp, #8]
 800e90e:	f101 0c20 	add.w	ip, r1, #32
 800e912:	9901      	ldr	r1, [sp, #4]
 800e914:	ebac 0c01 	sub.w	ip, ip, r1
 800e918:	fb03 630c 	mla	r3, r3, ip, r6
 800e91c:	80d3      	strh	r3, [r2, #6]
 800e91e:	e74c      	b.n	800e7ba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e920:	9d05      	ldr	r5, [sp, #20]
 800e922:	1aa2      	subs	r2, r4, r2
 800e924:	eba5 0501 	sub.w	r5, r5, r1
 800e928:	9508      	str	r5, [sp, #32]
 800e92a:	9202      	str	r2, [sp, #8]
 800e92c:	f140 8128 	bpl.w	800eb80 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800e930:	9a03      	ldr	r2, [sp, #12]
 800e932:	2a00      	cmp	r2, #0
 800e934:	f6ff af41 	blt.w	800e7ba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e938:	9a02      	ldr	r2, [sp, #8]
 800e93a:	4252      	negs	r2, r2
 800e93c:	9202      	str	r2, [sp, #8]
 800e93e:	9a06      	ldr	r2, [sp, #24]
 800e940:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800e944:	f04f 34ff 	mov.w	r4, #4294967295
 800e948:	9206      	str	r2, [sp, #24]
 800e94a:	462a      	mov	r2, r5
 800e94c:	940b      	str	r4, [sp, #44]	; 0x2c
 800e94e:	435a      	muls	r2, r3
 800e950:	2400      	movs	r4, #0
 800e952:	9d02      	ldr	r5, [sp, #8]
 800e954:	9401      	str	r4, [sp, #4]
 800e956:	9c02      	ldr	r4, [sp, #8]
 800e958:	fb92 f4f4 	sdiv	r4, r2, r4
 800e95c:	fb05 2214 	mls	r2, r5, r4, r2
 800e960:	2a00      	cmp	r2, #0
 800e962:	9207      	str	r2, [sp, #28]
 800e964:	bfbc      	itt	lt
 800e966:	1952      	addlt	r2, r2, r5
 800e968:	9207      	strlt	r2, [sp, #28]
 800e96a:	9a01      	ldr	r2, [sp, #4]
 800e96c:	6905      	ldr	r5, [r0, #16]
 800e96e:	bfb8      	it	lt
 800e970:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e974:	eb04 0901 	add.w	r9, r4, r1
 800e978:	429a      	cmp	r2, r3
 800e97a:	ea4f 1669 	mov.w	r6, r9, asr #5
 800e97e:	f040 8112 	bne.w	800eba6 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800e982:	f9b5 3000 	ldrsh.w	r3, [r5]
 800e986:	429e      	cmp	r6, r3
 800e988:	d104      	bne.n	800e994 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800e98a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e98e:	9a03      	ldr	r2, [sp, #12]
 800e990:	429a      	cmp	r2, r3
 800e992:	d01b      	beq.n	800e9cc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e994:	88ea      	ldrh	r2, [r5, #6]
 800e996:	88ab      	ldrh	r3, [r5, #4]
 800e998:	4313      	orrs	r3, r2
 800e99a:	d010      	beq.n	800e9be <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e99c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e9a0:	2a00      	cmp	r2, #0
 800e9a2:	db0c      	blt.n	800e9be <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e9a4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e9a6:	429a      	cmp	r2, r3
 800e9a8:	da09      	bge.n	800e9be <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e9aa:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800e9ae:	429a      	cmp	r2, r3
 800e9b0:	bf38      	it	cc
 800e9b2:	3508      	addcc	r5, #8
 800e9b4:	f102 0201 	add.w	r2, r2, #1
 800e9b8:	bf38      	it	cc
 800e9ba:	6105      	strcc	r5, [r0, #16]
 800e9bc:	6082      	str	r2, [r0, #8]
 800e9be:	6903      	ldr	r3, [r0, #16]
 800e9c0:	9a03      	ldr	r2, [sp, #12]
 800e9c2:	805a      	strh	r2, [r3, #2]
 800e9c4:	2200      	movs	r2, #0
 800e9c6:	801e      	strh	r6, [r3, #0]
 800e9c8:	809a      	strh	r2, [r3, #4]
 800e9ca:	80da      	strh	r2, [r3, #6]
 800e9cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e9ce:	9a03      	ldr	r2, [sp, #12]
 800e9d0:	6901      	ldr	r1, [r0, #16]
 800e9d2:	441a      	add	r2, r3
 800e9d4:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e9d8:	42b3      	cmp	r3, r6
 800e9da:	d103      	bne.n	800e9e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800e9dc:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e9e0:	429a      	cmp	r2, r3
 800e9e2:	d01a      	beq.n	800ea1a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800e9e4:	88cc      	ldrh	r4, [r1, #6]
 800e9e6:	888b      	ldrh	r3, [r1, #4]
 800e9e8:	4323      	orrs	r3, r4
 800e9ea:	d010      	beq.n	800ea0e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e9ec:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e9f0:	2c00      	cmp	r4, #0
 800e9f2:	db0c      	blt.n	800ea0e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e9f4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e9f6:	429c      	cmp	r4, r3
 800e9f8:	da09      	bge.n	800ea0e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e9fa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e9fe:	429c      	cmp	r4, r3
 800ea00:	bf38      	it	cc
 800ea02:	3108      	addcc	r1, #8
 800ea04:	f104 0401 	add.w	r4, r4, #1
 800ea08:	bf38      	it	cc
 800ea0a:	6101      	strcc	r1, [r0, #16]
 800ea0c:	6084      	str	r4, [r0, #8]
 800ea0e:	6903      	ldr	r3, [r0, #16]
 800ea10:	2100      	movs	r1, #0
 800ea12:	801e      	strh	r6, [r3, #0]
 800ea14:	805a      	strh	r2, [r3, #2]
 800ea16:	8099      	strh	r1, [r3, #4]
 800ea18:	80d9      	strh	r1, [r3, #6]
 800ea1a:	9b06      	ldr	r3, [sp, #24]
 800ea1c:	4293      	cmp	r3, r2
 800ea1e:	f000 8082 	beq.w	800eb26 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800ea22:	9b08      	ldr	r3, [sp, #32]
 800ea24:	9c02      	ldr	r4, [sp, #8]
 800ea26:	9902      	ldr	r1, [sp, #8]
 800ea28:	015b      	lsls	r3, r3, #5
 800ea2a:	fb93 f1f1 	sdiv	r1, r3, r1
 800ea2e:	fb04 3311 	mls	r3, r4, r1, r3
 800ea32:	2b00      	cmp	r3, #0
 800ea34:	9103      	str	r1, [sp, #12]
 800ea36:	9308      	str	r3, [sp, #32]
 800ea38:	da04      	bge.n	800ea44 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800ea3a:	1e4b      	subs	r3, r1, #1
 800ea3c:	9303      	str	r3, [sp, #12]
 800ea3e:	9b08      	ldr	r3, [sp, #32]
 800ea40:	4423      	add	r3, r4
 800ea42:	9308      	str	r3, [sp, #32]
 800ea44:	9b07      	ldr	r3, [sp, #28]
 800ea46:	9902      	ldr	r1, [sp, #8]
 800ea48:	1a5b      	subs	r3, r3, r1
 800ea4a:	9307      	str	r3, [sp, #28]
 800ea4c:	9b01      	ldr	r3, [sp, #4]
 800ea4e:	f1c3 0320 	rsb	r3, r3, #32
 800ea52:	930e      	str	r3, [sp, #56]	; 0x38
 800ea54:	990e      	ldr	r1, [sp, #56]	; 0x38
 800ea56:	9b01      	ldr	r3, [sp, #4]
 800ea58:	1a5b      	subs	r3, r3, r1
 800ea5a:	464f      	mov	r7, r9
 800ea5c:	930a      	str	r3, [sp, #40]	; 0x28
 800ea5e:	2600      	movs	r6, #0
 800ea60:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800ea64:	185b      	adds	r3, r3, r1
 800ea66:	bf58      	it	pl
 800ea68:	9902      	ldrpl	r1, [sp, #8]
 800ea6a:	9307      	str	r3, [sp, #28]
 800ea6c:	bf5d      	ittte	pl
 800ea6e:	1a5b      	subpl	r3, r3, r1
 800ea70:	9307      	strpl	r3, [sp, #28]
 800ea72:	9b03      	ldrpl	r3, [sp, #12]
 800ea74:	9903      	ldrmi	r1, [sp, #12]
 800ea76:	bf58      	it	pl
 800ea78:	1c59      	addpl	r1, r3, #1
 800ea7a:	4489      	add	r9, r1
 800ea7c:	2a00      	cmp	r2, #0
 800ea7e:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800ea82:	db2e      	blt.n	800eae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ea84:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ea86:	4293      	cmp	r3, r2
 800ea88:	dd2b      	ble.n	800eae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ea8a:	9c01      	ldr	r4, [sp, #4]
 800ea8c:	6905      	ldr	r5, [r0, #16]
 800ea8e:	46a0      	mov	r8, r4
 800ea90:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800ea92:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800ea96:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800ea9a:	45a0      	cmp	r8, r4
 800ea9c:	f040 814f 	bne.w	800ed3e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800eaa0:	f9b5 1000 	ldrsh.w	r1, [r5]
 800eaa4:	4551      	cmp	r1, sl
 800eaa6:	d103      	bne.n	800eab0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800eaa8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800eaac:	4291      	cmp	r1, r2
 800eaae:	d018      	beq.n	800eae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eab0:	ea5c 010e 	orrs.w	r1, ip, lr
 800eab4:	d00f      	beq.n	800ead6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800eab6:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800eaba:	2900      	cmp	r1, #0
 800eabc:	db0b      	blt.n	800ead6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800eabe:	428b      	cmp	r3, r1
 800eac0:	dd09      	ble.n	800ead6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800eac2:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800eac6:	4299      	cmp	r1, r3
 800eac8:	bf38      	it	cc
 800eaca:	3508      	addcc	r5, #8
 800eacc:	f101 0101 	add.w	r1, r1, #1
 800ead0:	bf38      	it	cc
 800ead2:	6105      	strcc	r5, [r0, #16]
 800ead4:	6081      	str	r1, [r0, #8]
 800ead6:	6903      	ldr	r3, [r0, #16]
 800ead8:	f8a3 a000 	strh.w	sl, [r3]
 800eadc:	805a      	strh	r2, [r3, #2]
 800eade:	809e      	strh	r6, [r3, #4]
 800eae0:	80de      	strh	r6, [r3, #6]
 800eae2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800eae4:	6901      	ldr	r1, [r0, #16]
 800eae6:	441a      	add	r2, r3
 800eae8:	88cc      	ldrh	r4, [r1, #6]
 800eaea:	888b      	ldrh	r3, [r1, #4]
 800eaec:	4323      	orrs	r3, r4
 800eaee:	d010      	beq.n	800eb12 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800eaf0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800eaf4:	2c00      	cmp	r4, #0
 800eaf6:	db0c      	blt.n	800eb12 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800eaf8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800eafa:	429c      	cmp	r4, r3
 800eafc:	da09      	bge.n	800eb12 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800eafe:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800eb02:	429c      	cmp	r4, r3
 800eb04:	bf38      	it	cc
 800eb06:	3108      	addcc	r1, #8
 800eb08:	f104 0401 	add.w	r4, r4, #1
 800eb0c:	bf38      	it	cc
 800eb0e:	6101      	strcc	r1, [r0, #16]
 800eb10:	6084      	str	r4, [r0, #8]
 800eb12:	6903      	ldr	r3, [r0, #16]
 800eb14:	f8a3 a000 	strh.w	sl, [r3]
 800eb18:	805a      	strh	r2, [r3, #2]
 800eb1a:	809e      	strh	r6, [r3, #4]
 800eb1c:	80de      	strh	r6, [r3, #6]
 800eb1e:	9b06      	ldr	r3, [sp, #24]
 800eb20:	4293      	cmp	r3, r2
 800eb22:	464f      	mov	r7, r9
 800eb24:	d19c      	bne.n	800ea60 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800eb26:	9b01      	ldr	r3, [sp, #4]
 800eb28:	6907      	ldr	r7, [r0, #16]
 800eb2a:	f1c3 0620 	rsb	r6, r3, #32
 800eb2e:	9b05      	ldr	r3, [sp, #20]
 800eb30:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800eb34:	9b04      	ldr	r3, [sp, #16]
 800eb36:	429e      	cmp	r6, r3
 800eb38:	f040 81cc 	bne.w	800eed4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800eb3c:	f9b7 3000 	ldrsh.w	r3, [r7]
 800eb40:	459e      	cmp	lr, r3
 800eb42:	d104      	bne.n	800eb4e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800eb44:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800eb48:	429a      	cmp	r2, r3
 800eb4a:	f43f ae36 	beq.w	800e7ba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eb4e:	88f9      	ldrh	r1, [r7, #6]
 800eb50:	88bb      	ldrh	r3, [r7, #4]
 800eb52:	430b      	orrs	r3, r1
 800eb54:	d010      	beq.n	800eb78 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eb56:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800eb5a:	2b00      	cmp	r3, #0
 800eb5c:	db0c      	blt.n	800eb78 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eb5e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800eb60:	428b      	cmp	r3, r1
 800eb62:	da09      	bge.n	800eb78 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eb64:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800eb68:	428b      	cmp	r3, r1
 800eb6a:	bf38      	it	cc
 800eb6c:	3708      	addcc	r7, #8
 800eb6e:	f103 0301 	add.w	r3, r3, #1
 800eb72:	bf38      	it	cc
 800eb74:	6107      	strcc	r7, [r0, #16]
 800eb76:	6083      	str	r3, [r0, #8]
 800eb78:	6903      	ldr	r3, [r0, #16]
 800eb7a:	f8a3 e000 	strh.w	lr, [r3]
 800eb7e:	e5ff      	b.n	800e780 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800eb80:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800eb82:	9c03      	ldr	r4, [sp, #12]
 800eb84:	42a2      	cmp	r2, r4
 800eb86:	f6ff ae18 	blt.w	800e7ba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eb8a:	9c06      	ldr	r4, [sp, #24]
 800eb8c:	42a2      	cmp	r2, r4
 800eb8e:	bfb8      	it	lt
 800eb90:	3201      	addlt	r2, #1
 800eb92:	9c08      	ldr	r4, [sp, #32]
 800eb94:	bfb8      	it	lt
 800eb96:	9206      	strlt	r2, [sp, #24]
 800eb98:	f1c3 0220 	rsb	r2, r3, #32
 800eb9c:	4362      	muls	r2, r4
 800eb9e:	2401      	movs	r4, #1
 800eba0:	940b      	str	r4, [sp, #44]	; 0x2c
 800eba2:	2420      	movs	r4, #32
 800eba4:	e6d5      	b.n	800e952 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800eba6:	f009 021f 	and.w	r2, r9, #31
 800ebaa:	ea4f 1861 	mov.w	r8, r1, asr #5
 800ebae:	920c      	str	r2, [sp, #48]	; 0x30
 800ebb0:	9a01      	ldr	r2, [sp, #4]
 800ebb2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800ebb6:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800ebba:	45b0      	cmp	r8, r6
 800ebbc:	f001 011f 	and.w	r1, r1, #31
 800ebc0:	eba2 0203 	sub.w	r2, r2, r3
 800ebc4:	d108      	bne.n	800ebd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800ebc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ebc8:	4419      	add	r1, r3
 800ebca:	4496      	add	lr, r2
 800ebcc:	fb02 a101 	mla	r1, r2, r1, sl
 800ebd0:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ebd4:	80e9      	strh	r1, [r5, #6]
 800ebd6:	e6f9      	b.n	800e9cc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ebd8:	2c00      	cmp	r4, #0
 800ebda:	f2c0 80a9 	blt.w	800ed30 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800ebde:	2701      	movs	r7, #1
 800ebe0:	f1c1 0c20 	rsb	ip, r1, #32
 800ebe4:	970a      	str	r7, [sp, #40]	; 0x28
 800ebe6:	fb02 f20c 	mul.w	r2, r2, ip
 800ebea:	2720      	movs	r7, #32
 800ebec:	9709      	str	r7, [sp, #36]	; 0x24
 800ebee:	fb92 fcf4 	sdiv	ip, r2, r4
 800ebf2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ebf4:	fb04 221c 	mls	r2, r4, ip, r2
 800ebf8:	2a00      	cmp	r2, #0
 800ebfa:	bfb8      	it	lt
 800ebfc:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800ec00:	4439      	add	r1, r7
 800ec02:	fb0c a101 	mla	r1, ip, r1, sl
 800ec06:	80e9      	strh	r1, [r5, #6]
 800ec08:	44e6      	add	lr, ip
 800ec0a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ec0c:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ec10:	eb08 0501 	add.w	r5, r8, r1
 800ec14:	6901      	ldr	r1, [r0, #16]
 800ec16:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800ec1a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800ec1e:	bfb8      	it	lt
 800ec20:	1912      	addlt	r2, r2, r4
 800ec22:	ea58 070e 	orrs.w	r7, r8, lr
 800ec26:	d010      	beq.n	800ec4a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ec28:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800ec2c:	f1be 0f00 	cmp.w	lr, #0
 800ec30:	db0b      	blt.n	800ec4a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ec32:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ec34:	45be      	cmp	lr, r7
 800ec36:	da08      	bge.n	800ec4a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ec38:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800ec3c:	45be      	cmp	lr, r7
 800ec3e:	bf3c      	itt	cc
 800ec40:	3108      	addcc	r1, #8
 800ec42:	6101      	strcc	r1, [r0, #16]
 800ec44:	f10e 0101 	add.w	r1, lr, #1
 800ec48:	6081      	str	r1, [r0, #8]
 800ec4a:	6901      	ldr	r1, [r0, #16]
 800ec4c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800ec50:	800d      	strh	r5, [r1, #0]
 800ec52:	f04f 0e00 	mov.w	lr, #0
 800ec56:	42ae      	cmp	r6, r5
 800ec58:	f8a1 8002 	strh.w	r8, [r1, #2]
 800ec5c:	f8a1 e004 	strh.w	lr, [r1, #4]
 800ec60:	f8a1 e006 	strh.w	lr, [r1, #6]
 800ec64:	4463      	add	r3, ip
 800ec66:	d054      	beq.n	800ed12 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800ec68:	9901      	ldr	r1, [sp, #4]
 800ec6a:	1ac9      	subs	r1, r1, r3
 800ec6c:	4461      	add	r1, ip
 800ec6e:	0149      	lsls	r1, r1, #5
 800ec70:	fb91 fef4 	sdiv	lr, r1, r4
 800ec74:	fb04 111e 	mls	r1, r4, lr, r1
 800ec78:	2900      	cmp	r1, #0
 800ec7a:	bfb8      	it	lt
 800ec7c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800ec80:	f10e 0701 	add.w	r7, lr, #1
 800ec84:	bfb8      	it	lt
 800ec86:	1909      	addlt	r1, r1, r4
 800ec88:	1b12      	subs	r2, r2, r4
 800ec8a:	970d      	str	r7, [sp, #52]	; 0x34
 800ec8c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800ec90:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800ec92:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800ec96:	1852      	adds	r2, r2, r1
 800ec98:	bf54      	ite	pl
 800ec9a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800ec9e:	46f4      	movmi	ip, lr
 800eca0:	44e3      	add	fp, ip
 800eca2:	f8aa b004 	strh.w	fp, [sl, #4]
 800eca6:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800ecaa:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800ecae:	f8aa b006 	strh.w	fp, [sl, #6]
 800ecb2:	4463      	add	r3, ip
 800ecb4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ecb8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ecbc:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800ecc0:	bf58      	it	pl
 800ecc2:	1b12      	subpl	r2, r2, r4
 800ecc4:	443d      	add	r5, r7
 800ecc6:	ea5b 070a 	orrs.w	r7, fp, sl
 800ecca:	d014      	beq.n	800ecf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800eccc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800ecd0:	f1ba 0f00 	cmp.w	sl, #0
 800ecd4:	db0f      	blt.n	800ecf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ecd6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ecd8:	45ba      	cmp	sl, r7
 800ecda:	da0c      	bge.n	800ecf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ecdc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800ece0:	45ba      	cmp	sl, r7
 800ece2:	bf38      	it	cc
 800ece4:	f10c 0c08 	addcc.w	ip, ip, #8
 800ece8:	f10a 0a01 	add.w	sl, sl, #1
 800ecec:	bf38      	it	cc
 800ecee:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800ecf2:	f8c0 a008 	str.w	sl, [r0, #8]
 800ecf6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ecfa:	f04f 0700 	mov.w	r7, #0
 800ecfe:	42ae      	cmp	r6, r5
 800ed00:	f8ac 5000 	strh.w	r5, [ip]
 800ed04:	f8ac 8002 	strh.w	r8, [ip, #2]
 800ed08:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ed0c:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ed10:	d1bc      	bne.n	800ec8c <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800ed12:	6904      	ldr	r4, [r0, #16]
 800ed14:	9a01      	ldr	r2, [sp, #4]
 800ed16:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ed18:	1ad3      	subs	r3, r2, r3
 800ed1a:	88a2      	ldrh	r2, [r4, #4]
 800ed1c:	441a      	add	r2, r3
 800ed1e:	80a2      	strh	r2, [r4, #4]
 800ed20:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ed22:	3120      	adds	r1, #32
 800ed24:	1a89      	subs	r1, r1, r2
 800ed26:	88e2      	ldrh	r2, [r4, #6]
 800ed28:	fb03 2301 	mla	r3, r3, r1, r2
 800ed2c:	80e3      	strh	r3, [r4, #6]
 800ed2e:	e64d      	b.n	800e9cc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ed30:	f04f 37ff 	mov.w	r7, #4294967295
 800ed34:	970a      	str	r7, [sp, #40]	; 0x28
 800ed36:	434a      	muls	r2, r1
 800ed38:	4264      	negs	r4, r4
 800ed3a:	2700      	movs	r7, #0
 800ed3c:	e756      	b.n	800ebec <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800ed3e:	ea4f 1867 	mov.w	r8, r7, asr #5
 800ed42:	f009 031f 	and.w	r3, r9, #31
 800ed46:	45d0      	cmp	r8, sl
 800ed48:	f007 071f 	and.w	r7, r7, #31
 800ed4c:	930f      	str	r3, [sp, #60]	; 0x3c
 800ed4e:	fa1f fc8c 	uxth.w	ip, ip
 800ed52:	fa1f fe8e 	uxth.w	lr, lr
 800ed56:	d10a      	bne.n	800ed6e <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800ed58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ed5a:	449c      	add	ip, r3
 800ed5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ed5e:	f8a5 c004 	strh.w	ip, [r5, #4]
 800ed62:	441f      	add	r7, r3
 800ed64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ed66:	fb03 e707 	mla	r7, r3, r7, lr
 800ed6a:	80ef      	strh	r7, [r5, #6]
 800ed6c:	e6b9      	b.n	800eae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ed6e:	2900      	cmp	r1, #0
 800ed70:	f2c0 80a8 	blt.w	800eec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800ed74:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ed76:	f1c7 0320 	rsb	r3, r7, #32
 800ed7a:	4363      	muls	r3, r4
 800ed7c:	2401      	movs	r4, #1
 800ed7e:	940d      	str	r4, [sp, #52]	; 0x34
 800ed80:	2420      	movs	r4, #32
 800ed82:	940c      	str	r4, [sp, #48]	; 0x30
 800ed84:	fb93 f4f1 	sdiv	r4, r3, r1
 800ed88:	fb01 3b14 	mls	fp, r1, r4, r3
 800ed8c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ed8e:	f1bb 0f00 	cmp.w	fp, #0
 800ed92:	bfb8      	it	lt
 800ed94:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800ed98:	441f      	add	r7, r3
 800ed9a:	fb04 e707 	mla	r7, r4, r7, lr
 800ed9e:	44a4      	add	ip, r4
 800eda0:	f8a5 c004 	strh.w	ip, [r5, #4]
 800eda4:	80ef      	strh	r7, [r5, #6]
 800eda6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800edaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800edac:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800edb0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800edb4:	bfb8      	it	lt
 800edb6:	448b      	addlt	fp, r1
 800edb8:	eb08 0503 	add.w	r5, r8, r3
 800edbc:	ea5e 0307 	orrs.w	r3, lr, r7
 800edc0:	d011      	beq.n	800ede6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800edc2:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800edc6:	f1be 0f00 	cmp.w	lr, #0
 800edca:	db0c      	blt.n	800ede6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800edcc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800edce:	45be      	cmp	lr, r7
 800edd0:	da09      	bge.n	800ede6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800edd2:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800edd6:	45be      	cmp	lr, r7
 800edd8:	bf3c      	itt	cc
 800edda:	f10c 0708 	addcc.w	r7, ip, #8
 800edde:	6107      	strcc	r7, [r0, #16]
 800ede0:	f10e 0701 	add.w	r7, lr, #1
 800ede4:	6087      	str	r7, [r0, #8]
 800ede6:	6907      	ldr	r7, [r0, #16]
 800ede8:	b213      	sxth	r3, r2
 800edea:	9310      	str	r3, [sp, #64]	; 0x40
 800edec:	807b      	strh	r3, [r7, #2]
 800edee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800edf0:	803d      	strh	r5, [r7, #0]
 800edf2:	4555      	cmp	r5, sl
 800edf4:	80be      	strh	r6, [r7, #4]
 800edf6:	80fe      	strh	r6, [r7, #6]
 800edf8:	eb04 0c03 	add.w	ip, r4, r3
 800edfc:	d051      	beq.n	800eea2 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800edfe:	9b01      	ldr	r3, [sp, #4]
 800ee00:	eba3 070c 	sub.w	r7, r3, ip
 800ee04:	443c      	add	r4, r7
 800ee06:	0164      	lsls	r4, r4, #5
 800ee08:	fb94 f8f1 	sdiv	r8, r4, r1
 800ee0c:	fb01 4418 	mls	r4, r1, r8, r4
 800ee10:	2c00      	cmp	r4, #0
 800ee12:	bfb8      	it	lt
 800ee14:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ee18:	ebab 0301 	sub.w	r3, fp, r1
 800ee1c:	f108 0701 	add.w	r7, r8, #1
 800ee20:	bfb8      	it	lt
 800ee22:	1864      	addlt	r4, r4, r1
 800ee24:	9309      	str	r3, [sp, #36]	; 0x24
 800ee26:	9711      	str	r7, [sp, #68]	; 0x44
 800ee28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ee2a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800ee2e:	191b      	adds	r3, r3, r4
 800ee30:	bf58      	it	pl
 800ee32:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800ee34:	f8be b004 	ldrh.w	fp, [lr, #4]
 800ee38:	9309      	str	r3, [sp, #36]	; 0x24
 800ee3a:	bf48      	it	mi
 800ee3c:	4647      	movmi	r7, r8
 800ee3e:	44bb      	add	fp, r7
 800ee40:	f8ae b004 	strh.w	fp, [lr, #4]
 800ee44:	f8be b006 	ldrh.w	fp, [lr, #6]
 800ee48:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ee4c:	f8ae b006 	strh.w	fp, [lr, #6]
 800ee50:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800ee54:	44bc      	add	ip, r7
 800ee56:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800ee58:	f8be b006 	ldrh.w	fp, [lr, #6]
 800ee5c:	443d      	add	r5, r7
 800ee5e:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800ee62:	bf5c      	itt	pl
 800ee64:	1a5b      	subpl	r3, r3, r1
 800ee66:	9309      	strpl	r3, [sp, #36]	; 0x24
 800ee68:	ea5b 0307 	orrs.w	r3, fp, r7
 800ee6c:	d011      	beq.n	800ee92 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800ee6e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800ee72:	f1bb 0f00 	cmp.w	fp, #0
 800ee76:	db0c      	blt.n	800ee92 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800ee78:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ee7a:	45bb      	cmp	fp, r7
 800ee7c:	da09      	bge.n	800ee92 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800ee7e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ee82:	45bb      	cmp	fp, r7
 800ee84:	bf3c      	itt	cc
 800ee86:	f10e 0708 	addcc.w	r7, lr, #8
 800ee8a:	6107      	strcc	r7, [r0, #16]
 800ee8c:	f10b 0701 	add.w	r7, fp, #1
 800ee90:	6087      	str	r7, [r0, #8]
 800ee92:	6907      	ldr	r7, [r0, #16]
 800ee94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ee96:	803d      	strh	r5, [r7, #0]
 800ee98:	4555      	cmp	r5, sl
 800ee9a:	807b      	strh	r3, [r7, #2]
 800ee9c:	80be      	strh	r6, [r7, #4]
 800ee9e:	80fe      	strh	r6, [r7, #6]
 800eea0:	d1c2      	bne.n	800ee28 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800eea2:	9b01      	ldr	r3, [sp, #4]
 800eea4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800eea6:	eba3 0c0c 	sub.w	ip, r3, ip
 800eeaa:	6903      	ldr	r3, [r0, #16]
 800eeac:	8899      	ldrh	r1, [r3, #4]
 800eeae:	4461      	add	r1, ip
 800eeb0:	8099      	strh	r1, [r3, #4]
 800eeb2:	990c      	ldr	r1, [sp, #48]	; 0x30
 800eeb4:	3720      	adds	r7, #32
 800eeb6:	1a7f      	subs	r7, r7, r1
 800eeb8:	88d9      	ldrh	r1, [r3, #6]
 800eeba:	fb0c 1c07 	mla	ip, ip, r7, r1
 800eebe:	f8a3 c006 	strh.w	ip, [r3, #6]
 800eec2:	e60e      	b.n	800eae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eec4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800eec6:	f04f 34ff 	mov.w	r4, #4294967295
 800eeca:	940d      	str	r4, [sp, #52]	; 0x34
 800eecc:	437b      	muls	r3, r7
 800eece:	4249      	negs	r1, r1
 800eed0:	2400      	movs	r4, #0
 800eed2:	e756      	b.n	800ed82 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800eed4:	9905      	ldr	r1, [sp, #20]
 800eed6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800eeda:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800eede:	f001 011f 	and.w	r1, r1, #31
 800eee2:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800eee6:	9102      	str	r1, [sp, #8]
 800eee8:	9904      	ldr	r1, [sp, #16]
 800eeea:	45f3      	cmp	fp, lr
 800eeec:	f009 0c1f 	and.w	ip, r9, #31
 800eef0:	eba1 0406 	sub.w	r4, r1, r6
 800eef4:	d108      	bne.n	800ef08 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800eef6:	9b02      	ldr	r3, [sp, #8]
 800eef8:	449c      	add	ip, r3
 800eefa:	44a0      	add	r8, r4
 800eefc:	fb04 a40c 	mla	r4, r4, ip, sl
 800ef00:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ef04:	80fc      	strh	r4, [r7, #6]
 800ef06:	e458      	b.n	800e7ba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ef08:	9905      	ldr	r1, [sp, #20]
 800ef0a:	ebb1 0109 	subs.w	r1, r1, r9
 800ef0e:	bf5b      	ittet	pl
 800ef10:	f1cc 0520 	rsbpl	r5, ip, #32
 800ef14:	436c      	mulpl	r4, r5
 800ef16:	2500      	movmi	r5, #0
 800ef18:	2520      	movpl	r5, #32
 800ef1a:	bf44      	itt	mi
 800ef1c:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ef20:	4249      	negmi	r1, r1
 800ef22:	9501      	str	r5, [sp, #4]
 800ef24:	9b01      	ldr	r3, [sp, #4]
 800ef26:	fb94 f5f1 	sdiv	r5, r4, r1
 800ef2a:	fb01 4415 	mls	r4, r1, r5, r4
 800ef2e:	bf54      	ite	pl
 800ef30:	f04f 0901 	movpl.w	r9, #1
 800ef34:	f04f 39ff 	movmi.w	r9, #4294967295
 800ef38:	2c00      	cmp	r4, #0
 800ef3a:	bfb8      	it	lt
 800ef3c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ef40:	449c      	add	ip, r3
 800ef42:	44a8      	add	r8, r5
 800ef44:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ef48:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ef4c:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ef50:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ef54:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ef58:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ef5c:	bfb8      	it	lt
 800ef5e:	1864      	addlt	r4, r4, r1
 800ef60:	ea58 0707 	orrs.w	r7, r8, r7
 800ef64:	eb0b 0309 	add.w	r3, fp, r9
 800ef68:	d011      	beq.n	800ef8e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ef6a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ef6e:	f1b8 0f00 	cmp.w	r8, #0
 800ef72:	db0c      	blt.n	800ef8e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ef74:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ef76:	45b8      	cmp	r8, r7
 800ef78:	da09      	bge.n	800ef8e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ef7a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800ef7e:	45b8      	cmp	r8, r7
 800ef80:	bf3c      	itt	cc
 800ef82:	f10c 0708 	addcc.w	r7, ip, #8
 800ef86:	6107      	strcc	r7, [r0, #16]
 800ef88:	f108 0701 	add.w	r7, r8, #1
 800ef8c:	6087      	str	r7, [r0, #8]
 800ef8e:	6907      	ldr	r7, [r0, #16]
 800ef90:	f04f 0c00 	mov.w	ip, #0
 800ef94:	b212      	sxth	r2, r2
 800ef96:	459e      	cmp	lr, r3
 800ef98:	803b      	strh	r3, [r7, #0]
 800ef9a:	807a      	strh	r2, [r7, #2]
 800ef9c:	f8a7 c004 	strh.w	ip, [r7, #4]
 800efa0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800efa4:	442e      	add	r6, r5
 800efa6:	d04d      	beq.n	800f044 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800efa8:	9f04      	ldr	r7, [sp, #16]
 800efaa:	1bbf      	subs	r7, r7, r6
 800efac:	443d      	add	r5, r7
 800efae:	016d      	lsls	r5, r5, #5
 800efb0:	fb95 f8f1 	sdiv	r8, r5, r1
 800efb4:	fb01 5518 	mls	r5, r1, r8, r5
 800efb8:	4565      	cmp	r5, ip
 800efba:	bfb8      	it	lt
 800efbc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800efc0:	f108 0701 	add.w	r7, r8, #1
 800efc4:	bfb8      	it	lt
 800efc6:	186d      	addlt	r5, r5, r1
 800efc8:	1a64      	subs	r4, r4, r1
 800efca:	9703      	str	r7, [sp, #12]
 800efcc:	f04f 0a00 	mov.w	sl, #0
 800efd0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800efd4:	1964      	adds	r4, r4, r5
 800efd6:	bf58      	it	pl
 800efd8:	9f03      	ldrpl	r7, [sp, #12]
 800efda:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800efde:	bf48      	it	mi
 800efe0:	4647      	movmi	r7, r8
 800efe2:	44bb      	add	fp, r7
 800efe4:	f8ac b004 	strh.w	fp, [ip, #4]
 800efe8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800efec:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800eff0:	f8ac b006 	strh.w	fp, [ip, #6]
 800eff4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eff8:	443e      	add	r6, r7
 800effa:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800effe:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f002:	bf58      	it	pl
 800f004:	1a64      	subpl	r4, r4, r1
 800f006:	ea5b 0707 	orrs.w	r7, fp, r7
 800f00a:	444b      	add	r3, r9
 800f00c:	d011      	beq.n	800f032 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f00e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f012:	f1bb 0f00 	cmp.w	fp, #0
 800f016:	db0c      	blt.n	800f032 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f018:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f01a:	45bb      	cmp	fp, r7
 800f01c:	da09      	bge.n	800f032 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f01e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f022:	45bb      	cmp	fp, r7
 800f024:	bf3c      	itt	cc
 800f026:	f10c 0708 	addcc.w	r7, ip, #8
 800f02a:	6107      	strcc	r7, [r0, #16]
 800f02c:	f10b 0701 	add.w	r7, fp, #1
 800f030:	6087      	str	r7, [r0, #8]
 800f032:	6907      	ldr	r7, [r0, #16]
 800f034:	459e      	cmp	lr, r3
 800f036:	803b      	strh	r3, [r7, #0]
 800f038:	807a      	strh	r2, [r7, #2]
 800f03a:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f03e:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f042:	d1c5      	bne.n	800efd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f044:	9b04      	ldr	r3, [sp, #16]
 800f046:	1b9e      	subs	r6, r3, r6
 800f048:	6903      	ldr	r3, [r0, #16]
 800f04a:	889a      	ldrh	r2, [r3, #4]
 800f04c:	4432      	add	r2, r6
 800f04e:	809a      	strh	r2, [r3, #4]
 800f050:	9a02      	ldr	r2, [sp, #8]
 800f052:	f102 0c20 	add.w	ip, r2, #32
 800f056:	9a01      	ldr	r2, [sp, #4]
 800f058:	ebac 0c02 	sub.w	ip, ip, r2
 800f05c:	88da      	ldrh	r2, [r3, #6]
 800f05e:	fb06 260c 	mla	r6, r6, ip, r2
 800f062:	80de      	strh	r6, [r3, #6]
 800f064:	f7ff bba9 	b.w	800e7ba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f068 <_ZN8touchgfx7Outline6lineToEii>:
 800f068:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f06a:	079b      	lsls	r3, r3, #30
 800f06c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f06e:	460e      	mov	r6, r1
 800f070:	4615      	mov	r5, r2
 800f072:	d511      	bpl.n	800f098 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f074:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f078:	ea86 0701 	eor.w	r7, r6, r1
 800f07c:	ea85 0302 	eor.w	r3, r5, r2
 800f080:	433b      	orrs	r3, r7
 800f082:	d009      	beq.n	800f098 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f084:	4633      	mov	r3, r6
 800f086:	9500      	str	r5, [sp, #0]
 800f088:	f7ff fb3e 	bl	800e708 <_ZN8touchgfx7Outline10renderLineEiiii>
 800f08c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f08e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f092:	f043 0301 	orr.w	r3, r3, #1
 800f096:	6243      	str	r3, [r0, #36]	; 0x24
 800f098:	b003      	add	sp, #12
 800f09a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f09c <_ZN8touchgfx7Outline6moveToEii>:
 800f09c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f09e:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f0a0:	4615      	mov	r5, r2
 800f0a2:	079a      	lsls	r2, r3, #30
 800f0a4:	4604      	mov	r4, r0
 800f0a6:	460e      	mov	r6, r1
 800f0a8:	d401      	bmi.n	800f0ae <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f0aa:	f7ff faf9 	bl	800e6a0 <_ZN8touchgfx7Outline5resetEv>
 800f0ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f0b0:	07db      	lsls	r3, r3, #31
 800f0b2:	d504      	bpl.n	800f0be <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f0b4:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f0b8:	4620      	mov	r0, r4
 800f0ba:	f7ff ffd5 	bl	800f068 <_ZN8touchgfx7Outline6lineToEii>
 800f0be:	6923      	ldr	r3, [r4, #16]
 800f0c0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f0c4:	1170      	asrs	r0, r6, #5
 800f0c6:	4290      	cmp	r0, r2
 800f0c8:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f0cc:	d103      	bne.n	800f0d6 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f0ce:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f0d2:	4291      	cmp	r1, r2
 800f0d4:	d01a      	beq.n	800f10c <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f0d6:	88df      	ldrh	r7, [r3, #6]
 800f0d8:	889a      	ldrh	r2, [r3, #4]
 800f0da:	433a      	orrs	r2, r7
 800f0dc:	d010      	beq.n	800f100 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f0de:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f0e2:	2a00      	cmp	r2, #0
 800f0e4:	db0c      	blt.n	800f100 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f0e6:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f0e8:	42ba      	cmp	r2, r7
 800f0ea:	da09      	bge.n	800f100 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f0ec:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f0f0:	42ba      	cmp	r2, r7
 800f0f2:	bf38      	it	cc
 800f0f4:	3308      	addcc	r3, #8
 800f0f6:	f102 0201 	add.w	r2, r2, #1
 800f0fa:	bf38      	it	cc
 800f0fc:	6123      	strcc	r3, [r4, #16]
 800f0fe:	60a2      	str	r2, [r4, #8]
 800f100:	6923      	ldr	r3, [r4, #16]
 800f102:	2200      	movs	r2, #0
 800f104:	8018      	strh	r0, [r3, #0]
 800f106:	8059      	strh	r1, [r3, #2]
 800f108:	809a      	strh	r2, [r3, #4]
 800f10a:	80da      	strh	r2, [r3, #6]
 800f10c:	6166      	str	r6, [r4, #20]
 800f10e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f112:	6225      	str	r5, [r4, #32]
 800f114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f116 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f116:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f11a:	b0d0      	sub	sp, #320	; 0x140
 800f11c:	466c      	mov	r4, sp
 800f11e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f122:	4627      	mov	r7, r4
 800f124:	1a0d      	subs	r5, r1, r0
 800f126:	2d48      	cmp	r5, #72	; 0x48
 800f128:	f100 0308 	add.w	r3, r0, #8
 800f12c:	f340 80d5 	ble.w	800f2da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f130:	112d      	asrs	r5, r5, #4
 800f132:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f136:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f13a:	6816      	ldr	r6, [r2, #0]
 800f13c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f140:	6006      	str	r6, [r0, #0]
 800f142:	6856      	ldr	r6, [r2, #4]
 800f144:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f148:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f14c:	6046      	str	r6, [r0, #4]
 800f14e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f152:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f156:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f15a:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f15e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f162:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f166:	4565      	cmp	r5, ip
 800f168:	f1a1 0208 	sub.w	r2, r1, #8
 800f16c:	db06      	blt.n	800f17c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f16e:	d119      	bne.n	800f1a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f170:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f174:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f178:	42ae      	cmp	r6, r5
 800f17a:	dd13      	ble.n	800f1a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f17c:	460e      	mov	r6, r1
 800f17e:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f182:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f186:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f18a:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f18e:	601d      	str	r5, [r3, #0]
 800f190:	6875      	ldr	r5, [r6, #4]
 800f192:	605d      	str	r5, [r3, #4]
 800f194:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f198:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f19c:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f1a0:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f1a4:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f1a8:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f1ac:	42ae      	cmp	r6, r5
 800f1ae:	db06      	blt.n	800f1be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f1b0:	d116      	bne.n	800f1e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f1b2:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f1b6:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f1ba:	45ac      	cmp	ip, r5
 800f1bc:	da10      	bge.n	800f1e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f1be:	681d      	ldr	r5, [r3, #0]
 800f1c0:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f1c4:	6005      	str	r5, [r0, #0]
 800f1c6:	685d      	ldr	r5, [r3, #4]
 800f1c8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f1cc:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f1d0:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f1d4:	6045      	str	r5, [r0, #4]
 800f1d6:	8146      	strh	r6, [r0, #10]
 800f1d8:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f1dc:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f1e0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f1e4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f1e8:	4565      	cmp	r5, ip
 800f1ea:	db06      	blt.n	800f1fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f1ec:	d119      	bne.n	800f222 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f1ee:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f1f2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f1f6:	42ae      	cmp	r6, r5
 800f1f8:	da13      	bge.n	800f222 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f1fa:	460e      	mov	r6, r1
 800f1fc:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f200:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f204:	6005      	str	r5, [r0, #0]
 800f206:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f20a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f20e:	6875      	ldr	r5, [r6, #4]
 800f210:	6045      	str	r5, [r0, #4]
 800f212:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f216:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f21a:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f21e:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f222:	3308      	adds	r3, #8
 800f224:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f228:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f22c:	45e6      	cmp	lr, ip
 800f22e:	dbf8      	blt.n	800f222 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f230:	d105      	bne.n	800f23e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f232:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f236:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f23a:	42ae      	cmp	r6, r5
 800f23c:	dbf1      	blt.n	800f222 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f23e:	4615      	mov	r5, r2
 800f240:	3a08      	subs	r2, #8
 800f242:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f246:	45b4      	cmp	ip, r6
 800f248:	dbf9      	blt.n	800f23e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f24a:	d105      	bne.n	800f258 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f24c:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f250:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f254:	45b0      	cmp	r8, r6
 800f256:	dbf2      	blt.n	800f23e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f258:	4293      	cmp	r3, r2
 800f25a:	f1a5 0608 	sub.w	r6, r5, #8
 800f25e:	d816      	bhi.n	800f28e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f260:	f8d6 c000 	ldr.w	ip, [r6]
 800f264:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f268:	f8c3 c000 	str.w	ip, [r3]
 800f26c:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f270:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f274:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f278:	f8c3 c004 	str.w	ip, [r3, #4]
 800f27c:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f280:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f284:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f288:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f28c:	e7c9      	b.n	800f222 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f28e:	f8d6 e000 	ldr.w	lr, [r6]
 800f292:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f296:	f8c0 e000 	str.w	lr, [r0]
 800f29a:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f29e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f2a2:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f2a6:	f8c0 e004 	str.w	lr, [r0, #4]
 800f2aa:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f2ae:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f2b2:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f2b6:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f2ba:	1acd      	subs	r5, r1, r3
 800f2bc:	1a16      	subs	r6, r2, r0
 800f2be:	10ed      	asrs	r5, r5, #3
 800f2c0:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f2c4:	bfb5      	itete	lt
 800f2c6:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f2ca:	e9c4 3100 	strdge	r3, r1, [r4]
 800f2ce:	460a      	movlt	r2, r1
 800f2d0:	4603      	movge	r3, r0
 800f2d2:	3408      	adds	r4, #8
 800f2d4:	4618      	mov	r0, r3
 800f2d6:	4611      	mov	r1, r2
 800f2d8:	e724      	b.n	800f124 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f2da:	4299      	cmp	r1, r3
 800f2dc:	d928      	bls.n	800f330 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f2de:	f1a3 0210 	sub.w	r2, r3, #16
 800f2e2:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f2e6:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f2ea:	45ac      	cmp	ip, r5
 800f2ec:	db06      	blt.n	800f2fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f2ee:	d11d      	bne.n	800f32c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f2f0:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f2f4:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f2f8:	42ae      	cmp	r6, r5
 800f2fa:	da17      	bge.n	800f32c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f2fc:	4615      	mov	r5, r2
 800f2fe:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f302:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f306:	6116      	str	r6, [r2, #16]
 800f308:	686e      	ldr	r6, [r5, #4]
 800f30a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f30e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f312:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f316:	42a8      	cmp	r0, r5
 800f318:	6156      	str	r6, [r2, #20]
 800f31a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f31e:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f322:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f326:	f1a2 0208 	sub.w	r2, r2, #8
 800f32a:	d1da      	bne.n	800f2e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f32c:	3308      	adds	r3, #8
 800f32e:	e7d4      	b.n	800f2da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f330:	42bc      	cmp	r4, r7
 800f332:	d903      	bls.n	800f33c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f334:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f338:	3c08      	subs	r4, #8
 800f33a:	e6f3      	b.n	800f124 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f33c:	b050      	add	sp, #320	; 0x140
 800f33e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f342 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f342:	b510      	push	{r4, lr}
 800f344:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f346:	07da      	lsls	r2, r3, #31
 800f348:	4604      	mov	r4, r0
 800f34a:	d507      	bpl.n	800f35c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f34c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f350:	f7ff fe8a 	bl	800f068 <_ZN8touchgfx7Outline6lineToEii>
 800f354:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f356:	f023 0301 	bic.w	r3, r3, #1
 800f35a:	6243      	str	r3, [r0, #36]	; 0x24
 800f35c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f35e:	079b      	lsls	r3, r3, #30
 800f360:	d521      	bpl.n	800f3a6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f362:	6923      	ldr	r3, [r4, #16]
 800f364:	88d9      	ldrh	r1, [r3, #6]
 800f366:	889a      	ldrh	r2, [r3, #4]
 800f368:	430a      	orrs	r2, r1
 800f36a:	d010      	beq.n	800f38e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f36c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f370:	2a00      	cmp	r2, #0
 800f372:	db0c      	blt.n	800f38e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f374:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f376:	428a      	cmp	r2, r1
 800f378:	da09      	bge.n	800f38e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f37a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f37e:	4291      	cmp	r1, r2
 800f380:	bf88      	it	hi
 800f382:	3308      	addhi	r3, #8
 800f384:	f102 0201 	add.w	r2, r2, #1
 800f388:	bf88      	it	hi
 800f38a:	6123      	strhi	r3, [r4, #16]
 800f38c:	60a2      	str	r2, [r4, #8]
 800f38e:	68a1      	ldr	r1, [r4, #8]
 800f390:	b129      	cbz	r1, 800f39e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f392:	6863      	ldr	r3, [r4, #4]
 800f394:	4299      	cmp	r1, r3
 800f396:	d802      	bhi.n	800f39e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f398:	68e0      	ldr	r0, [r4, #12]
 800f39a:	f7ff febc 	bl	800f116 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f39e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f3a0:	f023 0302 	bic.w	r3, r3, #2
 800f3a4:	6263      	str	r3, [r4, #36]	; 0x24
 800f3a6:	68e0      	ldr	r0, [r4, #12]
 800f3a8:	bd10      	pop	{r4, pc}
	...

0800f3ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f3ac:	4b02      	ldr	r3, [pc, #8]	; (800f3b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f3ae:	6018      	str	r0, [r3, #0]
 800f3b0:	4b02      	ldr	r3, [pc, #8]	; (800f3bc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f3b2:	6019      	str	r1, [r3, #0]
 800f3b4:	4770      	bx	lr
 800f3b6:	bf00      	nop
 800f3b8:	200153ec 	.word	0x200153ec
 800f3bc:	200153f0 	.word	0x200153f0

0800f3c0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f3c0:	4b01      	ldr	r3, [pc, #4]	; (800f3c8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f3c2:	6818      	ldr	r0, [r3, #0]
 800f3c4:	4770      	bx	lr
 800f3c6:	bf00      	nop
 800f3c8:	200153ec 	.word	0x200153ec

0800f3cc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f3cc:	4b01      	ldr	r3, [pc, #4]	; (800f3d4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f3ce:	6818      	ldr	r0, [r3, #0]
 800f3d0:	4770      	bx	lr
 800f3d2:	bf00      	nop
 800f3d4:	200153f0 	.word	0x200153f0

0800f3d8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f3d8:	b510      	push	{r4, lr}
 800f3da:	6803      	ldr	r3, [r0, #0]
 800f3dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f3de:	460c      	mov	r4, r1
 800f3e0:	4798      	blx	r3
 800f3e2:	1b03      	subs	r3, r0, r4
 800f3e4:	4258      	negs	r0, r3
 800f3e6:	4158      	adcs	r0, r3
 800f3e8:	bd10      	pop	{r4, pc}
	...

0800f3ec <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f3ec:	4b01      	ldr	r3, [pc, #4]	; (800f3f4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f3ee:	6019      	str	r1, [r3, #0]
 800f3f0:	4770      	bx	lr
 800f3f2:	bf00      	nop
 800f3f4:	200153f4 	.word	0x200153f4

0800f3f8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f3f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3fc:	4696      	mov	lr, r2
 800f3fe:	4605      	mov	r5, r0
 800f400:	4614      	mov	r4, r2
 800f402:	460e      	mov	r6, r1
 800f404:	461f      	mov	r7, r3
 800f406:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f40a:	b097      	sub	sp, #92	; 0x5c
 800f40c:	f10d 0c1c 	add.w	ip, sp, #28
 800f410:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f414:	f8de 3000 	ldr.w	r3, [lr]
 800f418:	f8cc 3000 	str.w	r3, [ip]
 800f41c:	f104 0e14 	add.w	lr, r4, #20
 800f420:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f424:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f428:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f42c:	f8de 3000 	ldr.w	r3, [lr]
 800f430:	f8cc 3000 	str.w	r3, [ip]
 800f434:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f438:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f43c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f440:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f444:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f448:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f44c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f450:	f8de 3000 	ldr.w	r3, [lr]
 800f454:	f8cc 3000 	str.w	r3, [ip]
 800f458:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f45a:	682b      	ldr	r3, [r5, #0]
 800f45c:	9201      	str	r2, [sp, #4]
 800f45e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f462:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f464:	9200      	str	r2, [sp, #0]
 800f466:	f8cd 8008 	str.w	r8, [sp, #8]
 800f46a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f46e:	aa07      	add	r2, sp, #28
 800f470:	463b      	mov	r3, r7
 800f472:	4631      	mov	r1, r6
 800f474:	4628      	mov	r0, r5
 800f476:	47d8      	blx	fp
 800f478:	46a6      	mov	lr, r4
 800f47a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f47e:	f10d 0c1c 	add.w	ip, sp, #28
 800f482:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f486:	f8de 3000 	ldr.w	r3, [lr]
 800f48a:	f8cc 3000 	str.w	r3, [ip]
 800f48e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f492:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f496:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f49a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f49e:	343c      	adds	r4, #60	; 0x3c
 800f4a0:	f8de 3000 	ldr.w	r3, [lr]
 800f4a4:	f8cc 3000 	str.w	r3, [ip]
 800f4a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f4aa:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f4ae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f4b2:	6823      	ldr	r3, [r4, #0]
 800f4b4:	f8cc 3000 	str.w	r3, [ip]
 800f4b8:	682b      	ldr	r3, [r5, #0]
 800f4ba:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f4be:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f4c0:	9201      	str	r2, [sp, #4]
 800f4c2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f4c4:	9200      	str	r2, [sp, #0]
 800f4c6:	f8cd 8008 	str.w	r8, [sp, #8]
 800f4ca:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f4cc:	aa07      	add	r2, sp, #28
 800f4ce:	463b      	mov	r3, r7
 800f4d0:	4631      	mov	r1, r6
 800f4d2:	4628      	mov	r0, r5
 800f4d4:	47a0      	blx	r4
 800f4d6:	b017      	add	sp, #92	; 0x5c
 800f4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f4dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4e0:	b08d      	sub	sp, #52	; 0x34
 800f4e2:	4688      	mov	r8, r1
 800f4e4:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f4e6:	f8d3 c000 	ldr.w	ip, [r3]
 800f4ea:	680f      	ldr	r7, [r1, #0]
 800f4ec:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f4f0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f4f4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f4f8:	edd3 6a07 	vldr	s13, [r3, #28]
 800f4fc:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f4fe:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f502:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f506:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f50a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f50e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f512:	eba7 070c 	sub.w	r7, r7, ip
 800f516:	42bc      	cmp	r4, r7
 800f518:	bfa8      	it	ge
 800f51a:	463c      	movge	r4, r7
 800f51c:	ee07 4a90 	vmov	s15, r4
 800f520:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f524:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f528:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f52c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f530:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f534:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f538:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f53c:	eb09 0e0c 	add.w	lr, r9, ip
 800f540:	4571      	cmp	r1, lr
 800f542:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f546:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f54a:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f54e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f552:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f556:	f340 808d 	ble.w	800f674 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f55a:	eba1 060e 	sub.w	r6, r1, lr
 800f55e:	fb96 f5f4 	sdiv	r5, r6, r4
 800f562:	ee07 5a10 	vmov	s14, r5
 800f566:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f56a:	2d00      	cmp	r5, #0
 800f56c:	fb04 6615 	mls	r6, r4, r5, r6
 800f570:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f574:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f578:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f57c:	dd13      	ble.n	800f5a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f57e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f582:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f586:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f58a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f58e:	bf18      	it	ne
 800f590:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f594:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f598:	bf08      	it	eq
 800f59a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f59e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f5a2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f5a6:	fb05 f204 	mul.w	r2, r5, r4
 800f5aa:	1abf      	subs	r7, r7, r2
 800f5ac:	4494      	add	ip, r2
 800f5ae:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f5b2:	4411      	add	r1, r2
 800f5b4:	eb09 020c 	add.w	r2, r9, ip
 800f5b8:	443a      	add	r2, r7
 800f5ba:	b209      	sxth	r1, r1
 800f5bc:	428a      	cmp	r2, r1
 800f5be:	bfc4      	itt	gt
 800f5c0:	eba1 0209 	subgt.w	r2, r1, r9
 800f5c4:	eba2 070c 	subgt.w	r7, r2, ip
 800f5c8:	2f00      	cmp	r7, #0
 800f5ca:	dd50      	ble.n	800f66e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f5cc:	fb97 f1f4 	sdiv	r1, r7, r4
 800f5d0:	fb04 7211 	mls	r2, r4, r1, r7
 800f5d4:	b90a      	cbnz	r2, 800f5da <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f5d6:	3901      	subs	r1, #1
 800f5d8:	4622      	mov	r2, r4
 800f5da:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f5de:	6840      	ldr	r0, [r0, #4]
 800f5e0:	900b      	str	r0, [sp, #44]	; 0x2c
 800f5e2:	f8d0 a000 	ldr.w	sl, [r0]
 800f5e6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800f5e8:	9008      	str	r0, [sp, #32]
 800f5ea:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800f5ee:	9818      	ldr	r0, [sp, #96]	; 0x60
 800f5f0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800f5f4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f5f8:	695b      	ldr	r3, [r3, #20]
 800f5fa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f5fc:	445b      	add	r3, fp
 800f5fe:	eef0 6a42 	vmov.f32	s13, s4
 800f602:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f606:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f60a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f60e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f612:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f616:	9307      	str	r3, [sp, #28]
 800f618:	ee17 7a90 	vmov	r7, s15
 800f61c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f620:	eeb0 7a61 	vmov.f32	s14, s3
 800f624:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f628:	ee16 3a90 	vmov	r3, s13
 800f62c:	fb97 f7f4 	sdiv	r7, r7, r4
 800f630:	ee17 ca90 	vmov	ip, s15
 800f634:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f638:	fb9c fcf4 	sdiv	ip, ip, r4
 800f63c:	fb0c 3306 	mla	r3, ip, r6, r3
 800f640:	9302      	str	r3, [sp, #8]
 800f642:	ee17 3a10 	vmov	r3, s14
 800f646:	44b6      	add	lr, r6
 800f648:	fb04 e505 	mla	r5, r4, r5, lr
 800f64c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f650:	fb07 3706 	mla	r7, r7, r6, r3
 800f654:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f658:	e9cd 4700 	strd	r4, r7, [sp]
 800f65c:	2900      	cmp	r1, #0
 800f65e:	bfcc      	ite	gt
 800f660:	46a1      	movgt	r9, r4
 800f662:	4691      	movle	r9, r2
 800f664:	eba9 0306 	sub.w	r3, r9, r6
 800f668:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f66c:	47a0      	blx	r4
 800f66e:	b00d      	add	sp, #52	; 0x34
 800f670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f674:	2500      	movs	r5, #0
 800f676:	462e      	mov	r6, r5
 800f678:	e799      	b.n	800f5ae <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f67c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f67c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f680:	b0db      	sub	sp, #364	; 0x16c
 800f682:	461d      	mov	r5, r3
 800f684:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800f688:	930a      	str	r3, [sp, #40]	; 0x28
 800f68a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800f68e:	930b      	str	r3, [sp, #44]	; 0x2c
 800f690:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800f694:	9310      	str	r3, [sp, #64]	; 0x40
 800f696:	6803      	ldr	r3, [r0, #0]
 800f698:	910f      	str	r1, [sp, #60]	; 0x3c
 800f69a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800f69c:	9009      	str	r0, [sp, #36]	; 0x24
 800f69e:	4614      	mov	r4, r2
 800f6a0:	4629      	mov	r1, r5
 800f6a2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800f6a6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800f6aa:	47b8      	blx	r7
 800f6ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6ae:	6058      	str	r0, [r3, #4]
 800f6b0:	2800      	cmp	r0, #0
 800f6b2:	f000 83a1 	beq.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f6b6:	682b      	ldr	r3, [r5, #0]
 800f6b8:	9314      	str	r3, [sp, #80]	; 0x50
 800f6ba:	686b      	ldr	r3, [r5, #4]
 800f6bc:	9315      	str	r3, [sp, #84]	; 0x54
 800f6be:	4bc4      	ldr	r3, [pc, #784]	; (800f9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f6c0:	ed94 7a02 	vldr	s14, [r4, #8]
 800f6c4:	7819      	ldrb	r1, [r3, #0]
 800f6c6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f6ca:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800f6ce:	2900      	cmp	r1, #0
 800f6d0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f6d4:	bf16      	itet	ne
 800f6d6:	4619      	movne	r1, r3
 800f6d8:	4611      	moveq	r1, r2
 800f6da:	4613      	movne	r3, r2
 800f6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6e0:	9116      	str	r1, [sp, #88]	; 0x58
 800f6e2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800f6e6:	f240 8387 	bls.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f6ea:	ed94 7a07 	vldr	s14, [r4, #28]
 800f6ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f6f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6f6:	f240 837f 	bls.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f6fa:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800f6fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f702:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f706:	f240 8377 	bls.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f70a:	6822      	ldr	r2, [r4, #0]
 800f70c:	4bb1      	ldr	r3, [pc, #708]	; (800f9d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f70e:	429a      	cmp	r2, r3
 800f710:	f2c0 8372 	blt.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f714:	49b0      	ldr	r1, [pc, #704]	; (800f9d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f716:	6963      	ldr	r3, [r4, #20]
 800f718:	428a      	cmp	r2, r1
 800f71a:	f300 836d 	bgt.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f71e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f722:	48ae      	ldr	r0, [pc, #696]	; (800f9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f724:	33ff      	adds	r3, #255	; 0xff
 800f726:	4283      	cmp	r3, r0
 800f728:	f200 8366 	bhi.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f72c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f72e:	4dac      	ldr	r5, [pc, #688]	; (800f9e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f730:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f734:	33ff      	adds	r3, #255	; 0xff
 800f736:	42ab      	cmp	r3, r5
 800f738:	f200 835e 	bhi.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f73c:	6862      	ldr	r2, [r4, #4]
 800f73e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800f742:	33ff      	adds	r3, #255	; 0xff
 800f744:	4283      	cmp	r3, r0
 800f746:	f200 8357 	bhi.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f74a:	69a1      	ldr	r1, [r4, #24]
 800f74c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800f750:	33ff      	adds	r3, #255	; 0xff
 800f752:	4283      	cmp	r3, r0
 800f754:	f200 8350 	bhi.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f758:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f75a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800f75e:	30ff      	adds	r0, #255	; 0xff
 800f760:	42a8      	cmp	r0, r5
 800f762:	f200 8349 	bhi.w	800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f766:	428a      	cmp	r2, r1
 800f768:	f280 8110 	bge.w	800f98c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f76c:	429a      	cmp	r2, r3
 800f76e:	f300 8119 	bgt.w	800f9a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f772:	4299      	cmp	r1, r3
 800f774:	f280 811d 	bge.w	800f9b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f778:	2502      	movs	r5, #2
 800f77a:	2701      	movs	r7, #1
 800f77c:	46a9      	mov	r9, r5
 800f77e:	46b8      	mov	r8, r7
 800f780:	f04f 0a00 	mov.w	sl, #0
 800f784:	4621      	mov	r1, r4
 800f786:	a849      	add	r0, sp, #292	; 0x124
 800f788:	f003 fcfe 	bl	8013188 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f78c:	4622      	mov	r2, r4
 800f78e:	4653      	mov	r3, sl
 800f790:	a949      	add	r1, sp, #292	; 0x124
 800f792:	f8cd 9000 	str.w	r9, [sp]
 800f796:	a819      	add	r0, sp, #100	; 0x64
 800f798:	f003 fe26 	bl	80133e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f79c:	4622      	mov	r2, r4
 800f79e:	4653      	mov	r3, sl
 800f7a0:	a949      	add	r1, sp, #292	; 0x124
 800f7a2:	f8cd 8000 	str.w	r8, [sp]
 800f7a6:	a829      	add	r0, sp, #164	; 0xa4
 800f7a8:	f003 fe1e 	bl	80133e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f7ac:	4643      	mov	r3, r8
 800f7ae:	4622      	mov	r2, r4
 800f7b0:	a949      	add	r1, sp, #292	; 0x124
 800f7b2:	f8cd 9000 	str.w	r9, [sp]
 800f7b6:	a839      	add	r0, sp, #228	; 0xe4
 800f7b8:	f003 fe16 	bl	80133e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f7bc:	42af      	cmp	r7, r5
 800f7be:	bfb5      	itete	lt
 800f7c0:	2300      	movlt	r3, #0
 800f7c2:	2301      	movge	r3, #1
 800f7c4:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f7c6:	930e      	strge	r3, [sp, #56]	; 0x38
 800f7c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f7ca:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f7ce:	af12      	add	r7, sp, #72	; 0x48
 800f7d0:	bfb9      	ittee	lt
 800f7d2:	ad29      	addlt	r5, sp, #164	; 0xa4
 800f7d4:	ac19      	addlt	r4, sp, #100	; 0x64
 800f7d6:	ad19      	addge	r5, sp, #100	; 0x64
 800f7d8:	ac29      	addge	r4, sp, #164	; 0xa4
 800f7da:	e887 0003 	stmia.w	r7, {r0, r1}
 800f7de:	b928      	cbnz	r0, 800f7ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f7e0:	4b80      	ldr	r3, [pc, #512]	; (800f9e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f7e2:	6818      	ldr	r0, [r3, #0]
 800f7e4:	6803      	ldr	r3, [r0, #0]
 800f7e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f7e8:	4798      	blx	r3
 800f7ea:	6038      	str	r0, [r7, #0]
 800f7ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f7ee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f7f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f7f6:	930c      	str	r3, [sp, #48]	; 0x30
 800f7f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f7fa:	6963      	ldr	r3, [r4, #20]
 800f7fc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800f7fe:	440b      	add	r3, r1
 800f800:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f804:	4408      	add	r0, r1
 800f806:	b200      	sxth	r0, r0
 800f808:	4283      	cmp	r3, r0
 800f80a:	900d      	str	r0, [sp, #52]	; 0x34
 800f80c:	f280 80dd 	bge.w	800f9ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f810:	428b      	cmp	r3, r1
 800f812:	da08      	bge.n	800f826 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f814:	2a00      	cmp	r2, #0
 800f816:	dd06      	ble.n	800f826 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f818:	1acb      	subs	r3, r1, r3
 800f81a:	429a      	cmp	r2, r3
 800f81c:	f2c0 80e4 	blt.w	800f9e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f820:	2b00      	cmp	r3, #0
 800f822:	f300 80e2 	bgt.w	800f9ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f826:	6967      	ldr	r7, [r4, #20]
 800f828:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f82a:	443b      	add	r3, r7
 800f82c:	461f      	mov	r7, r3
 800f82e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f830:	1bdf      	subs	r7, r3, r7
 800f832:	4297      	cmp	r7, r2
 800f834:	bfa8      	it	ge
 800f836:	4617      	movge	r7, r2
 800f838:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f83c:	2f00      	cmp	r7, #0
 800f83e:	f340 8166 	ble.w	800fb0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f842:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f844:	6829      	ldr	r1, [r5, #0]
 800f846:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f84a:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f84e:	6820      	ldr	r0, [r4, #0]
 800f850:	4411      	add	r1, r2
 800f852:	4299      	cmp	r1, r3
 800f854:	dd1a      	ble.n	800f88c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f856:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f85a:	440b      	add	r3, r1
 800f85c:	4402      	add	r2, r0
 800f85e:	b21b      	sxth	r3, r3
 800f860:	429a      	cmp	r2, r3
 800f862:	dc13      	bgt.n	800f88c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f864:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f866:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f868:	681b      	ldr	r3, [r3, #0]
 800f86a:	9206      	str	r2, [sp, #24]
 800f86c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f86e:	9205      	str	r2, [sp, #20]
 800f870:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f872:	9500      	str	r5, [sp, #0]
 800f874:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f878:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f87a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f87c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f880:	a912      	add	r1, sp, #72	; 0x48
 800f882:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800f886:	aa49      	add	r2, sp, #292	; 0x124
 800f888:	4623      	mov	r3, r4
 800f88a:	47c8      	blx	r9
 800f88c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f890:	441a      	add	r2, r3
 800f892:	6963      	ldr	r3, [r4, #20]
 800f894:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f898:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f89c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f8a0:	68a1      	ldr	r1, [r4, #8]
 800f8a2:	ed94 6a08 	vldr	s12, [r4, #32]
 800f8a6:	6022      	str	r2, [r4, #0]
 800f8a8:	3301      	adds	r3, #1
 800f8aa:	6163      	str	r3, [r4, #20]
 800f8ac:	69a3      	ldr	r3, [r4, #24]
 800f8ae:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f8b2:	3b01      	subs	r3, #1
 800f8b4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f8b8:	61a3      	str	r3, [r4, #24]
 800f8ba:	6923      	ldr	r3, [r4, #16]
 800f8bc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f8c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f8c4:	edd4 6a07 	vldr	s13, [r4, #28]
 800f8c8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f8cc:	440b      	add	r3, r1
 800f8ce:	68e1      	ldr	r1, [r4, #12]
 800f8d0:	6123      	str	r3, [r4, #16]
 800f8d2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f8d6:	428b      	cmp	r3, r1
 800f8d8:	edc4 6a07 	vstr	s13, [r4, #28]
 800f8dc:	db15      	blt.n	800f90a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f8de:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f8e2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f8e6:	3201      	adds	r2, #1
 800f8e8:	edc4 6a07 	vstr	s13, [r4, #28]
 800f8ec:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f8f0:	6022      	str	r2, [r4, #0]
 800f8f2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f8f6:	1a5b      	subs	r3, r3, r1
 800f8f8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f8fc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f900:	6123      	str	r3, [r4, #16]
 800f902:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f906:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f90a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f90e:	441a      	add	r2, r3
 800f910:	696b      	ldr	r3, [r5, #20]
 800f912:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f916:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f91a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f91e:	68a9      	ldr	r1, [r5, #8]
 800f920:	ed95 6a08 	vldr	s12, [r5, #32]
 800f924:	602a      	str	r2, [r5, #0]
 800f926:	3301      	adds	r3, #1
 800f928:	616b      	str	r3, [r5, #20]
 800f92a:	69ab      	ldr	r3, [r5, #24]
 800f92c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f930:	3b01      	subs	r3, #1
 800f932:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f936:	61ab      	str	r3, [r5, #24]
 800f938:	692b      	ldr	r3, [r5, #16]
 800f93a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f93e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f942:	edd5 6a07 	vldr	s13, [r5, #28]
 800f946:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f94a:	440b      	add	r3, r1
 800f94c:	68e9      	ldr	r1, [r5, #12]
 800f94e:	612b      	str	r3, [r5, #16]
 800f950:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f954:	428b      	cmp	r3, r1
 800f956:	edc5 6a07 	vstr	s13, [r5, #28]
 800f95a:	db15      	blt.n	800f988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f95c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f960:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f964:	3201      	adds	r2, #1
 800f966:	edc5 6a07 	vstr	s13, [r5, #28]
 800f96a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f96e:	602a      	str	r2, [r5, #0]
 800f970:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f974:	1a5b      	subs	r3, r3, r1
 800f976:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f97a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f97e:	612b      	str	r3, [r5, #16]
 800f980:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f984:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f988:	3f01      	subs	r7, #1
 800f98a:	e757      	b.n	800f83c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f98c:	4299      	cmp	r1, r3
 800f98e:	dc13      	bgt.n	800f9b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f990:	429a      	cmp	r2, r3
 800f992:	da14      	bge.n	800f9be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f994:	2502      	movs	r5, #2
 800f996:	2703      	movs	r7, #3
 800f998:	46a9      	mov	r9, r5
 800f99a:	f04f 0800 	mov.w	r8, #0
 800f99e:	f04f 0a01 	mov.w	sl, #1
 800f9a2:	e6ef      	b.n	800f784 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f9a4:	2501      	movs	r5, #1
 800f9a6:	2700      	movs	r7, #0
 800f9a8:	46a9      	mov	r9, r5
 800f9aa:	46b8      	mov	r8, r7
 800f9ac:	f04f 0a02 	mov.w	sl, #2
 800f9b0:	e6e8      	b.n	800f784 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f9b2:	2501      	movs	r5, #1
 800f9b4:	2702      	movs	r7, #2
 800f9b6:	e6e1      	b.n	800f77c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f9b8:	2500      	movs	r5, #0
 800f9ba:	2701      	movs	r7, #1
 800f9bc:	e7f4      	b.n	800f9a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f9be:	2702      	movs	r7, #2
 800f9c0:	2503      	movs	r5, #3
 800f9c2:	f04f 0900 	mov.w	r9, #0
 800f9c6:	46b8      	mov	r8, r7
 800f9c8:	e7e9      	b.n	800f99e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f9ca:	4613      	mov	r3, r2
 800f9cc:	e728      	b.n	800f820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f9ce:	bf00      	nop
 800f9d0:	200153dc 	.word	0x200153dc
 800f9d4:	fffd8f01 	.word	0xfffd8f01
 800f9d8:	00027100 	.word	0x00027100
 800f9dc:	0004e1ff 	.word	0x0004e1ff
 800f9e0:	0004e1fe 	.word	0x0004e1fe
 800f9e4:	200153e4 	.word	0x200153e4
 800f9e8:	4613      	mov	r3, r2
 800f9ea:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f9ec:	9111      	str	r1, [sp, #68]	; 0x44
 800f9ee:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800f9f2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800f9f6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800f9f8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800f9fc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800fa00:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800fa04:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800fa08:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800fa0c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800fa10:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800fa14:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800fa18:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800fa1c:	469e      	mov	lr, r3
 800fa1e:	469c      	mov	ip, r3
 800fa20:	f04f 0900 	mov.w	r9, #0
 800fa24:	f1bc 0f00 	cmp.w	ip, #0
 800fa28:	d147      	bne.n	800faba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fa2a:	eb03 0c07 	add.w	ip, r3, r7
 800fa2e:	1ad7      	subs	r7, r2, r3
 800fa30:	f1b9 0f00 	cmp.w	r9, #0
 800fa34:	d009      	beq.n	800fa4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fa36:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800fa3a:	9029      	str	r0, [sp, #164]	; 0xa4
 800fa3c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800fa40:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800fa44:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800fa48:	912d      	str	r1, [sp, #180]	; 0xb4
 800fa4a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fa4c:	9111      	str	r1, [sp, #68]	; 0x44
 800fa4e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fa52:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fa56:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fa5a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fa5e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fa62:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fa66:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fa6a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fa6e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fa72:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fa76:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fa7a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fa7e:	f04f 0800 	mov.w	r8, #0
 800fa82:	f1be 0f00 	cmp.w	lr, #0
 800fa86:	d031      	beq.n	800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fa88:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fa8a:	4431      	add	r1, r6
 800fa8c:	4549      	cmp	r1, r9
 800fa8e:	4450      	add	r0, sl
 800fa90:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fa94:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fa98:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fa9c:	db08      	blt.n	800fab0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800fa9e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800faa2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800faa6:	ee37 7a06 	vadd.f32	s14, s14, s12
 800faaa:	3001      	adds	r0, #1
 800faac:	eba1 0109 	sub.w	r1, r1, r9
 800fab0:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fab4:	f04f 0801 	mov.w	r8, #1
 800fab8:	e7e3      	b.n	800fa82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800faba:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fabc:	4431      	add	r1, r6
 800fabe:	4541      	cmp	r1, r8
 800fac0:	4450      	add	r0, sl
 800fac2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fac6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800faca:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800face:	db08      	blt.n	800fae2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800fad0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fad4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fad8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fadc:	3001      	adds	r0, #1
 800fade:	eba1 0108 	sub.w	r1, r1, r8
 800fae2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800fae6:	f04f 0901 	mov.w	r9, #1
 800faea:	e79b      	b.n	800fa24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800faec:	449c      	add	ip, r3
 800faee:	1aff      	subs	r7, r7, r3
 800faf0:	f1b8 0f00 	cmp.w	r8, #0
 800faf4:	d009      	beq.n	800fb0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800faf6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fafa:	9019      	str	r0, [sp, #100]	; 0x64
 800fafc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800fb00:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800fb04:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fb08:	911d      	str	r1, [sp, #116]	; 0x74
 800fb0a:	1ad2      	subs	r2, r2, r3
 800fb0c:	e68b      	b.n	800f826 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fb0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb10:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800fb12:	2b00      	cmp	r3, #0
 800fb14:	f000 80d1 	beq.w	800fcba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800fb18:	ad19      	add	r5, sp, #100	; 0x64
 800fb1a:	ac39      	add	r4, sp, #228	; 0xe4
 800fb1c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fb1e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fb22:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fb26:	930c      	str	r3, [sp, #48]	; 0x30
 800fb28:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fb2a:	6963      	ldr	r3, [r4, #20]
 800fb2c:	440b      	add	r3, r1
 800fb2e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fb32:	4408      	add	r0, r1
 800fb34:	b200      	sxth	r0, r0
 800fb36:	4283      	cmp	r3, r0
 800fb38:	900d      	str	r0, [sp, #52]	; 0x34
 800fb3a:	f280 80c1 	bge.w	800fcc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800fb3e:	428b      	cmp	r3, r1
 800fb40:	da08      	bge.n	800fb54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fb42:	2a00      	cmp	r2, #0
 800fb44:	dd06      	ble.n	800fb54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fb46:	1acb      	subs	r3, r1, r3
 800fb48:	429a      	cmp	r2, r3
 800fb4a:	f2c0 80bb 	blt.w	800fcc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800fb4e:	2b00      	cmp	r3, #0
 800fb50:	f300 80b9 	bgt.w	800fcc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800fb54:	6967      	ldr	r7, [r4, #20]
 800fb56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fb58:	443b      	add	r3, r7
 800fb5a:	461f      	mov	r7, r3
 800fb5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fb5e:	1bdf      	subs	r7, r3, r7
 800fb60:	4297      	cmp	r7, r2
 800fb62:	bfa8      	it	ge
 800fb64:	4617      	movge	r7, r2
 800fb66:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fb6a:	2f00      	cmp	r7, #0
 800fb6c:	f340 813c 	ble.w	800fde8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800fb70:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fb72:	6829      	ldr	r1, [r5, #0]
 800fb74:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fb78:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fb7c:	6820      	ldr	r0, [r4, #0]
 800fb7e:	4411      	add	r1, r2
 800fb80:	4299      	cmp	r1, r3
 800fb82:	dd1a      	ble.n	800fbba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fb84:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fb88:	440b      	add	r3, r1
 800fb8a:	4402      	add	r2, r0
 800fb8c:	b21b      	sxth	r3, r3
 800fb8e:	429a      	cmp	r2, r3
 800fb90:	dc13      	bgt.n	800fbba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fb92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fb94:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fb96:	681b      	ldr	r3, [r3, #0]
 800fb98:	9206      	str	r2, [sp, #24]
 800fb9a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fb9c:	9205      	str	r2, [sp, #20]
 800fb9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fba0:	9500      	str	r5, [sp, #0]
 800fba2:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fba6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fba8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fbaa:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fbae:	a912      	add	r1, sp, #72	; 0x48
 800fbb0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fbb4:	aa49      	add	r2, sp, #292	; 0x124
 800fbb6:	4623      	mov	r3, r4
 800fbb8:	47c8      	blx	r9
 800fbba:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fbbe:	441a      	add	r2, r3
 800fbc0:	6963      	ldr	r3, [r4, #20]
 800fbc2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fbc6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fbca:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fbce:	68a1      	ldr	r1, [r4, #8]
 800fbd0:	ed94 6a08 	vldr	s12, [r4, #32]
 800fbd4:	6022      	str	r2, [r4, #0]
 800fbd6:	3301      	adds	r3, #1
 800fbd8:	6163      	str	r3, [r4, #20]
 800fbda:	69a3      	ldr	r3, [r4, #24]
 800fbdc:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fbe0:	3b01      	subs	r3, #1
 800fbe2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fbe6:	61a3      	str	r3, [r4, #24]
 800fbe8:	6923      	ldr	r3, [r4, #16]
 800fbea:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fbee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fbf2:	edd4 6a07 	vldr	s13, [r4, #28]
 800fbf6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fbfa:	440b      	add	r3, r1
 800fbfc:	68e1      	ldr	r1, [r4, #12]
 800fbfe:	6123      	str	r3, [r4, #16]
 800fc00:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fc04:	428b      	cmp	r3, r1
 800fc06:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc0a:	db15      	blt.n	800fc38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800fc0c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fc10:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fc14:	3201      	adds	r2, #1
 800fc16:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc1a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fc1e:	6022      	str	r2, [r4, #0]
 800fc20:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fc24:	1a5b      	subs	r3, r3, r1
 800fc26:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fc2a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fc2e:	6123      	str	r3, [r4, #16]
 800fc30:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fc34:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fc38:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fc3c:	441a      	add	r2, r3
 800fc3e:	696b      	ldr	r3, [r5, #20]
 800fc40:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fc44:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fc48:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fc4c:	68a9      	ldr	r1, [r5, #8]
 800fc4e:	ed95 6a08 	vldr	s12, [r5, #32]
 800fc52:	602a      	str	r2, [r5, #0]
 800fc54:	3301      	adds	r3, #1
 800fc56:	616b      	str	r3, [r5, #20]
 800fc58:	69ab      	ldr	r3, [r5, #24]
 800fc5a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fc5e:	3b01      	subs	r3, #1
 800fc60:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fc64:	61ab      	str	r3, [r5, #24]
 800fc66:	692b      	ldr	r3, [r5, #16]
 800fc68:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fc6c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc70:	edd5 6a07 	vldr	s13, [r5, #28]
 800fc74:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fc78:	440b      	add	r3, r1
 800fc7a:	68e9      	ldr	r1, [r5, #12]
 800fc7c:	612b      	str	r3, [r5, #16]
 800fc7e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fc82:	428b      	cmp	r3, r1
 800fc84:	edc5 6a07 	vstr	s13, [r5, #28]
 800fc88:	db15      	blt.n	800fcb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800fc8a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fc8e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fc92:	3201      	adds	r2, #1
 800fc94:	edc5 6a07 	vstr	s13, [r5, #28]
 800fc98:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fc9c:	602a      	str	r2, [r5, #0]
 800fc9e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fca2:	1a5b      	subs	r3, r3, r1
 800fca4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fca8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fcac:	612b      	str	r3, [r5, #16]
 800fcae:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fcb2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fcb6:	3f01      	subs	r7, #1
 800fcb8:	e757      	b.n	800fb6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800fcba:	ad39      	add	r5, sp, #228	; 0xe4
 800fcbc:	ac19      	add	r4, sp, #100	; 0x64
 800fcbe:	e72d      	b.n	800fb1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800fcc0:	4613      	mov	r3, r2
 800fcc2:	e744      	b.n	800fb4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800fcc4:	4613      	mov	r3, r2
 800fcc6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800fcca:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800fccc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800fcd0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800fcd4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800fcd8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800fcdc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800fce0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800fce4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800fce8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800fcea:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800fcee:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800fcf2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800fcf6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800fcfa:	960e      	str	r6, [sp, #56]	; 0x38
 800fcfc:	469e      	mov	lr, r3
 800fcfe:	461f      	mov	r7, r3
 800fd00:	f04f 0900 	mov.w	r9, #0
 800fd04:	2f00      	cmp	r7, #0
 800fd06:	d146      	bne.n	800fd96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800fd08:	449c      	add	ip, r3
 800fd0a:	1ad7      	subs	r7, r2, r3
 800fd0c:	f1b9 0f00 	cmp.w	r9, #0
 800fd10:	d009      	beq.n	800fd26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800fd12:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800fd16:	9039      	str	r0, [sp, #228]	; 0xe4
 800fd18:	913d      	str	r1, [sp, #244]	; 0xf4
 800fd1a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800fd1e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800fd22:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800fd26:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fd28:	910e      	str	r1, [sp, #56]	; 0x38
 800fd2a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fd2e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fd32:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fd36:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fd3a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fd3e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fd42:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fd46:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fd4a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fd4e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fd52:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fd56:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fd5a:	f04f 0800 	mov.w	r8, #0
 800fd5e:	f1be 0f00 	cmp.w	lr, #0
 800fd62:	d030      	beq.n	800fdc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800fd64:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800fd66:	4431      	add	r1, r6
 800fd68:	4549      	cmp	r1, r9
 800fd6a:	4450      	add	r0, sl
 800fd6c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fd70:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fd74:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fd78:	db08      	blt.n	800fd8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800fd7a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fd7e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fd82:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fd86:	3001      	adds	r0, #1
 800fd88:	eba1 0109 	sub.w	r1, r1, r9
 800fd8c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fd90:	f04f 0801 	mov.w	r8, #1
 800fd94:	e7e3      	b.n	800fd5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800fd96:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800fd98:	4431      	add	r1, r6
 800fd9a:	4541      	cmp	r1, r8
 800fd9c:	4450      	add	r0, sl
 800fd9e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fda2:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fda6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fdaa:	db08      	blt.n	800fdbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800fdac:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fdb0:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fdb4:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fdb8:	3001      	adds	r0, #1
 800fdba:	eba1 0108 	sub.w	r1, r1, r8
 800fdbe:	3f01      	subs	r7, #1
 800fdc0:	f04f 0901 	mov.w	r9, #1
 800fdc4:	e79e      	b.n	800fd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800fdc6:	449c      	add	ip, r3
 800fdc8:	1aff      	subs	r7, r7, r3
 800fdca:	f1b8 0f00 	cmp.w	r8, #0
 800fdce:	d009      	beq.n	800fde4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800fdd0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fdd4:	9019      	str	r0, [sp, #100]	; 0x64
 800fdd6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800fdda:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800fdde:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fde2:	911d      	str	r1, [sp, #116]	; 0x74
 800fde4:	1ad2      	subs	r2, r2, r3
 800fde6:	e6b5      	b.n	800fb54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fde8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fdea:	681b      	ldr	r3, [r3, #0]
 800fdec:	b923      	cbnz	r3, 800fdf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fdee:	4b04      	ldr	r3, [pc, #16]	; (800fe00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800fdf0:	6818      	ldr	r0, [r3, #0]
 800fdf2:	6803      	ldr	r3, [r0, #0]
 800fdf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fdf6:	4798      	blx	r3
 800fdf8:	b05b      	add	sp, #364	; 0x16c
 800fdfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fdfe:	bf00      	nop
 800fe00:	200153e4 	.word	0x200153e4

0800fe04 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800fe04:	b570      	push	{r4, r5, r6, lr}
 800fe06:	4604      	mov	r4, r0
 800fe08:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800fe0c:	9804      	ldr	r0, [sp, #16]
 800fe0e:	6061      	str	r1, [r4, #4]
 800fe10:	2500      	movs	r5, #0
 800fe12:	8025      	strh	r5, [r4, #0]
 800fe14:	7223      	strb	r3, [r4, #8]
 800fe16:	7266      	strb	r6, [r4, #9]
 800fe18:	60e0      	str	r0, [r4, #12]
 800fe1a:	8222      	strh	r2, [r4, #16]
 800fe1c:	8265      	strh	r5, [r4, #18]
 800fe1e:	82a5      	strh	r5, [r4, #20]
 800fe20:	82e5      	strh	r5, [r4, #22]
 800fe22:	8325      	strh	r5, [r4, #24]
 800fe24:	8365      	strh	r5, [r4, #26]
 800fe26:	83a5      	strh	r5, [r4, #28]
 800fe28:	77a5      	strb	r5, [r4, #30]
 800fe2a:	b32e      	cbz	r6, 800fe78 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800fe2c:	6803      	ldr	r3, [r0, #0]
 800fe2e:	695b      	ldr	r3, [r3, #20]
 800fe30:	4798      	blx	r3
 800fe32:	4606      	mov	r6, r0
 800fe34:	b300      	cbz	r0, 800fe78 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800fe36:	68e0      	ldr	r0, [r4, #12]
 800fe38:	6803      	ldr	r3, [r0, #0]
 800fe3a:	4631      	mov	r1, r6
 800fe3c:	68db      	ldr	r3, [r3, #12]
 800fe3e:	4798      	blx	r3
 800fe40:	4605      	mov	r5, r0
 800fe42:	b1c8      	cbz	r0, 800fe78 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800fe44:	7b43      	ldrb	r3, [r0, #13]
 800fe46:	7a82      	ldrb	r2, [r0, #10]
 800fe48:	005b      	lsls	r3, r3, #1
 800fe4a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fe4e:	4313      	orrs	r3, r2
 800fe50:	83a3      	strh	r3, [r4, #28]
 800fe52:	7a63      	ldrb	r3, [r4, #9]
 800fe54:	2b04      	cmp	r3, #4
 800fe56:	d10f      	bne.n	800fe78 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800fe58:	68e0      	ldr	r0, [r4, #12]
 800fe5a:	6803      	ldr	r3, [r0, #0]
 800fe5c:	462a      	mov	r2, r5
 800fe5e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fe60:	4631      	mov	r1, r6
 800fe62:	4798      	blx	r3
 800fe64:	7b6b      	ldrb	r3, [r5, #13]
 800fe66:	005b      	lsls	r3, r3, #1
 800fe68:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fe6c:	7aab      	ldrb	r3, [r5, #10]
 800fe6e:	4313      	orrs	r3, r2
 800fe70:	4418      	add	r0, r3
 800fe72:	8ba3      	ldrh	r3, [r4, #28]
 800fe74:	4418      	add	r0, r3
 800fe76:	83a0      	strh	r0, [r4, #28]
 800fe78:	4620      	mov	r0, r4
 800fe7a:	bd70      	pop	{r4, r5, r6, pc}

0800fe7c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800fe7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe80:	2400      	movs	r4, #0
 800fe82:	b085      	sub	sp, #20
 800fe84:	4681      	mov	r9, r0
 800fe86:	4688      	mov	r8, r1
 800fe88:	4692      	mov	sl, r2
 800fe8a:	469b      	mov	fp, r3
 800fe8c:	4627      	mov	r7, r4
 800fe8e:	4625      	mov	r5, r4
 800fe90:	4626      	mov	r6, r4
 800fe92:	4554      	cmp	r4, sl
 800fe94:	da2a      	bge.n	800feec <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800fe96:	2300      	movs	r3, #0
 800fe98:	9303      	str	r3, [sp, #12]
 800fe9a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fe9e:	429d      	cmp	r5, r3
 800fea0:	d004      	beq.n	800feac <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800fea2:	f242 030b 	movw	r3, #8203	; 0x200b
 800fea6:	429d      	cmp	r5, r3
 800fea8:	bf18      	it	ne
 800feaa:	462f      	movne	r7, r5
 800feac:	ab03      	add	r3, sp, #12
 800feae:	4642      	mov	r2, r8
 800feb0:	4659      	mov	r1, fp
 800feb2:	4648      	mov	r0, r9
 800feb4:	f002 ff7e 	bl	8012db4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800feb8:	4605      	mov	r5, r0
 800feba:	b1b8      	cbz	r0, 800feec <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800febc:	280a      	cmp	r0, #10
 800febe:	d015      	beq.n	800feec <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800fec0:	9a03      	ldr	r2, [sp, #12]
 800fec2:	b18a      	cbz	r2, 800fee8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800fec4:	7b50      	ldrb	r0, [r2, #13]
 800fec6:	7a93      	ldrb	r3, [r2, #10]
 800fec8:	8895      	ldrh	r5, [r2, #4]
 800feca:	0040      	lsls	r0, r0, #1
 800fecc:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800fed0:	4303      	orrs	r3, r0
 800fed2:	9301      	str	r3, [sp, #4]
 800fed4:	f8d8 3000 	ldr.w	r3, [r8]
 800fed8:	4639      	mov	r1, r7
 800feda:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fedc:	4640      	mov	r0, r8
 800fede:	4798      	blx	r3
 800fee0:	9b01      	ldr	r3, [sp, #4]
 800fee2:	4418      	add	r0, r3
 800fee4:	4406      	add	r6, r0
 800fee6:	b2b6      	uxth	r6, r6
 800fee8:	3401      	adds	r4, #1
 800feea:	e7d2      	b.n	800fe92 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800feec:	4630      	mov	r0, r6
 800feee:	b005      	add	sp, #20
 800fef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fef4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800fef4:	2a02      	cmp	r2, #2
 800fef6:	b530      	push	{r4, r5, lr}
 800fef8:	d011      	beq.n	800ff1e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800fefa:	2a03      	cmp	r2, #3
 800fefc:	d01c      	beq.n	800ff38 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800fefe:	2a01      	cmp	r2, #1
 800ff00:	d10c      	bne.n	800ff1c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800ff02:	888b      	ldrh	r3, [r1, #4]
 800ff04:	8801      	ldrh	r1, [r0, #0]
 800ff06:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800ff0a:	8844      	ldrh	r4, [r0, #2]
 800ff0c:	8004      	strh	r4, [r0, #0]
 800ff0e:	1a5b      	subs	r3, r3, r1
 800ff10:	1a9b      	subs	r3, r3, r2
 800ff12:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ff16:	8043      	strh	r3, [r0, #2]
 800ff18:	8081      	strh	r1, [r0, #4]
 800ff1a:	80c2      	strh	r2, [r0, #6]
 800ff1c:	bd30      	pop	{r4, r5, pc}
 800ff1e:	88cb      	ldrh	r3, [r1, #6]
 800ff20:	8842      	ldrh	r2, [r0, #2]
 800ff22:	1a9b      	subs	r3, r3, r2
 800ff24:	88c2      	ldrh	r2, [r0, #6]
 800ff26:	1a9b      	subs	r3, r3, r2
 800ff28:	888a      	ldrh	r2, [r1, #4]
 800ff2a:	8801      	ldrh	r1, [r0, #0]
 800ff2c:	8043      	strh	r3, [r0, #2]
 800ff2e:	1a52      	subs	r2, r2, r1
 800ff30:	8881      	ldrh	r1, [r0, #4]
 800ff32:	1a52      	subs	r2, r2, r1
 800ff34:	8002      	strh	r2, [r0, #0]
 800ff36:	e7f1      	b.n	800ff1c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800ff38:	88cb      	ldrh	r3, [r1, #6]
 800ff3a:	8841      	ldrh	r1, [r0, #2]
 800ff3c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800ff40:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ff44:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800ff48:	8045      	strh	r5, [r0, #2]
 800ff4a:	1a5b      	subs	r3, r3, r1
 800ff4c:	1a9b      	subs	r3, r3, r2
 800ff4e:	8003      	strh	r3, [r0, #0]
 800ff50:	8082      	strh	r2, [r0, #4]
 800ff52:	80c4      	strh	r4, [r0, #6]
 800ff54:	e7e2      	b.n	800ff1c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800ff56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800ff56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff5a:	b09f      	sub	sp, #124	; 0x7c
 800ff5c:	9116      	str	r1, [sp, #88]	; 0x58
 800ff5e:	9317      	str	r3, [sp, #92]	; 0x5c
 800ff60:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800ff62:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ff64:	8809      	ldrh	r1, [r1, #0]
 800ff66:	889b      	ldrh	r3, [r3, #4]
 800ff68:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800ff6c:	9212      	str	r2, [sp, #72]	; 0x48
 800ff6e:	440b      	add	r3, r1
 800ff70:	b21b      	sxth	r3, r3
 800ff72:	9310      	str	r3, [sp, #64]	; 0x40
 800ff74:	f8d8 3000 	ldr.w	r3, [r8]
 800ff78:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800ff7c:	7a59      	ldrb	r1, [r3, #9]
 800ff7e:	7a1b      	ldrb	r3, [r3, #8]
 800ff80:	9011      	str	r0, [sp, #68]	; 0x44
 800ff82:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800ff86:	9114      	str	r1, [sp, #80]	; 0x50
 800ff88:	9315      	str	r3, [sp, #84]	; 0x54
 800ff8a:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800ff8e:	2a00      	cmp	r2, #0
 800ff90:	d06a      	beq.n	8010068 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800ff92:	f898 3010 	ldrb.w	r3, [r8, #16]
 800ff96:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800ff98:	2b04      	cmp	r3, #4
 800ff9a:	bf14      	ite	ne
 800ff9c:	2301      	movne	r3, #1
 800ff9e:	2302      	moveq	r3, #2
 800ffa0:	4413      	add	r3, r2
 800ffa2:	f04f 0900 	mov.w	r9, #0
 800ffa6:	930f      	str	r3, [sp, #60]	; 0x3c
 800ffa8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800ffac:	464c      	mov	r4, r9
 800ffae:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800ffb2:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800ffb6:	4293      	cmp	r3, r2
 800ffb8:	f280 808f 	bge.w	80100da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800ffbc:	2300      	movs	r3, #0
 800ffbe:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800ffc2:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800ffc6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ffca:	429c      	cmp	r4, r3
 800ffcc:	d006      	beq.n	800ffdc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800ffce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ffd0:	f242 020b 	movw	r2, #8203	; 0x200b
 800ffd4:	4294      	cmp	r4, r2
 800ffd6:	bf18      	it	ne
 800ffd8:	4623      	movne	r3, r4
 800ffda:	930d      	str	r3, [sp, #52]	; 0x34
 800ffdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ffde:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800ffe0:	f8d8 2000 	ldr.w	r2, [r8]
 800ffe4:	428b      	cmp	r3, r1
 800ffe6:	db41      	blt.n	801006c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800ffe8:	6813      	ldr	r3, [r2, #0]
 800ffea:	4610      	mov	r0, r2
 800ffec:	695b      	ldr	r3, [r3, #20]
 800ffee:	4798      	blx	r3
 800fff0:	4604      	mov	r4, r0
 800fff2:	f8d8 0000 	ldr.w	r0, [r8]
 800fff6:	6803      	ldr	r3, [r0, #0]
 800fff8:	aa1d      	add	r2, sp, #116	; 0x74
 800fffa:	689e      	ldr	r6, [r3, #8]
 800fffc:	4621      	mov	r1, r4
 800fffe:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010002:	47b0      	blx	r6
 8010004:	901c      	str	r0, [sp, #112]	; 0x70
 8010006:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801000a:	429c      	cmp	r4, r3
 801000c:	f000 80e9 	beq.w	80101e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010010:	f242 030b 	movw	r3, #8203	; 0x200b
 8010014:	429c      	cmp	r4, r3
 8010016:	f000 80e4 	beq.w	80101e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801001a:	2c00      	cmp	r4, #0
 801001c:	f000 80f6 	beq.w	801020c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010020:	2c0a      	cmp	r4, #10
 8010022:	d060      	beq.n	80100e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010024:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010026:	b36a      	cbz	r2, 8010084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8010028:	8894      	ldrh	r4, [r2, #4]
 801002a:	f1bb 0f00 	cmp.w	fp, #0
 801002e:	d03b      	beq.n	80100a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010030:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010034:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8010038:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801003c:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010040:	f1bb 0f01 	cmp.w	fp, #1
 8010044:	ea49 0903 	orr.w	r9, r9, r3
 8010048:	d134      	bne.n	80100b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801004a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801004c:	eba5 0509 	sub.w	r5, r5, r9
 8010050:	2b00      	cmp	r3, #0
 8010052:	d14f      	bne.n	80100f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010054:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010056:	eb09 0305 	add.w	r3, r9, r5
 801005a:	4413      	add	r3, r2
 801005c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801005e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010062:	4293      	cmp	r3, r2
 8010064:	da51      	bge.n	801010a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8010066:	e038      	b.n	80100da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010068:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801006a:	e79a      	b.n	800ffa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801006c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010070:	9301      	str	r3, [sp, #4]
 8010072:	ab1d      	add	r3, sp, #116	; 0x74
 8010074:	9300      	str	r3, [sp, #0]
 8010076:	4659      	mov	r1, fp
 8010078:	ab1c      	add	r3, sp, #112	; 0x70
 801007a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801007c:	f002 fee3 	bl	8012e46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010080:	4604      	mov	r4, r0
 8010082:	e7c0      	b.n	8010006 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8010084:	f8d8 0000 	ldr.w	r0, [r8]
 8010088:	6803      	ldr	r3, [r0, #0]
 801008a:	691b      	ldr	r3, [r3, #16]
 801008c:	4798      	blx	r3
 801008e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010092:	4298      	cmp	r0, r3
 8010094:	f000 80a5 	beq.w	80101e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010098:	f242 030b 	movw	r3, #8203	; 0x200b
 801009c:	4298      	cmp	r0, r3
 801009e:	f000 80a0 	beq.w	80101e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80100a2:	f1bb 0f00 	cmp.w	fp, #0
 80100a6:	d100      	bne.n	80100aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80100a8:	444d      	add	r5, r9
 80100aa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80100ac:	2a00      	cmp	r2, #0
 80100ae:	d1bf      	bne.n	8010030 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80100b0:	4691      	mov	r9, r2
 80100b2:	e096      	b.n	80101e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80100b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80100b6:	2b00      	cmp	r3, #0
 80100b8:	f000 80aa 	beq.w	8010210 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80100bc:	f1bb 0f00 	cmp.w	fp, #0
 80100c0:	d118      	bne.n	80100f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80100c2:	f8d8 0000 	ldr.w	r0, [r8]
 80100c6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80100c8:	6803      	ldr	r3, [r0, #0]
 80100ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80100cc:	4798      	blx	r3
 80100ce:	4405      	add	r5, r0
 80100d0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80100d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80100d4:	1aeb      	subs	r3, r5, r3
 80100d6:	4293      	cmp	r3, r2
 80100d8:	dd17      	ble.n	801010a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80100da:	2c00      	cmp	r4, #0
 80100dc:	f000 8096 	beq.w	801020c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 80100e0:	2c0a      	cmp	r4, #10
 80100e2:	f040 8084 	bne.w	80101ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80100e6:	240a      	movs	r4, #10
 80100e8:	fab4 f084 	clz	r0, r4
 80100ec:	0940      	lsrs	r0, r0, #5
 80100ee:	b01f      	add	sp, #124	; 0x7c
 80100f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100f4:	f8d8 0000 	ldr.w	r0, [r8]
 80100f8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80100fa:	6803      	ldr	r3, [r0, #0]
 80100fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80100fe:	4798      	blx	r3
 8010100:	f1bb 0f01 	cmp.w	fp, #1
 8010104:	eba5 0500 	sub.w	r5, r5, r0
 8010108:	d0a4      	beq.n	8010054 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801010a:	981c      	ldr	r0, [sp, #112]	; 0x70
 801010c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801010e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010112:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010116:	7b43      	ldrb	r3, [r0, #13]
 8010118:	015b      	lsls	r3, r3, #5
 801011a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801011e:	7983      	ldrb	r3, [r0, #6]
 8010120:	4429      	add	r1, r5
 8010122:	4313      	orrs	r3, r2
 8010124:	440b      	add	r3, r1
 8010126:	42b3      	cmp	r3, r6
 8010128:	db5b      	blt.n	80101e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801012a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801012c:	4299      	cmp	r1, r3
 801012e:	da58      	bge.n	80101e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010130:	f8d8 0000 	ldr.w	r0, [r8]
 8010134:	6803      	ldr	r3, [r0, #0]
 8010136:	42ae      	cmp	r6, r5
 8010138:	bfc8      	it	gt
 801013a:	1b76      	subgt	r6, r6, r5
 801013c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801013e:	bfcc      	ite	gt
 8010140:	b2b6      	uxthgt	r6, r6
 8010142:	2600      	movle	r6, #0
 8010144:	4798      	blx	r3
 8010146:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8010148:	7b5a      	ldrb	r2, [r3, #13]
 801014a:	00d1      	lsls	r1, r2, #3
 801014c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8010150:	7a19      	ldrb	r1, [r3, #8]
 8010152:	4339      	orrs	r1, r7
 8010154:	0657      	lsls	r7, r2, #25
 8010156:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8010158:	bf44      	itt	mi
 801015a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801015e:	b209      	sxthmi	r1, r1
 8010160:	19c7      	adds	r7, r0, r7
 8010162:	1a7f      	subs	r7, r7, r1
 8010164:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010166:	b2bf      	uxth	r7, r7
 8010168:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801016c:	fa0f fa87 	sxth.w	sl, r7
 8010170:	4551      	cmp	r1, sl
 8010172:	dd3a      	ble.n	80101ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8010174:	0112      	lsls	r2, r2, #4
 8010176:	79d8      	ldrb	r0, [r3, #7]
 8010178:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801017c:	4302      	orrs	r2, r0
 801017e:	4492      	add	sl, r2
 8010180:	4551      	cmp	r1, sl
 8010182:	dc2e      	bgt.n	80101e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010184:	1bcf      	subs	r7, r1, r7
 8010186:	b2bf      	uxth	r7, r7
 8010188:	468a      	mov	sl, r1
 801018a:	9319      	str	r3, [sp, #100]	; 0x64
 801018c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801018e:	f8d8 0000 	ldr.w	r0, [r8]
 8010192:	681a      	ldr	r2, [r3, #0]
 8010194:	6801      	ldr	r1, [r0, #0]
 8010196:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8010198:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801019a:	9313      	str	r3, [sp, #76]	; 0x4c
 801019c:	9218      	str	r2, [sp, #96]	; 0x60
 801019e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80101a0:	4788      	blx	r1
 80101a2:	f898 1006 	ldrb.w	r1, [r8, #6]
 80101a6:	910b      	str	r1, [sp, #44]	; 0x2c
 80101a8:	f898 100e 	ldrb.w	r1, [r8, #14]
 80101ac:	910a      	str	r1, [sp, #40]	; 0x28
 80101ae:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80101b2:	9109      	str	r1, [sp, #36]	; 0x24
 80101b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80101b6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80101ba:	9305      	str	r3, [sp, #20]
 80101bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80101be:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80101c0:	9206      	str	r2, [sp, #24]
 80101c2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80101c6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80101ca:	e9cd a601 	strd	sl, r6, [sp, #4]
 80101ce:	442e      	add	r6, r5
 80101d0:	b236      	sxth	r6, r6
 80101d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80101d4:	9600      	str	r6, [sp, #0]
 80101d6:	681a      	ldr	r2, [r3, #0]
 80101d8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80101da:	685b      	ldr	r3, [r3, #4]
 80101dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80101de:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80101e0:	47b0      	blx	r6
 80101e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80101e4:	3301      	adds	r3, #1
 80101e6:	930e      	str	r3, [sp, #56]	; 0x38
 80101e8:	e6e3      	b.n	800ffb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80101ea:	2700      	movs	r7, #0
 80101ec:	e7cd      	b.n	801018a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80101ee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80101f0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80101f2:	3501      	adds	r5, #1
 80101f4:	429d      	cmp	r5, r3
 80101f6:	f6bf af77 	bge.w	80100e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80101fa:	4659      	mov	r1, fp
 80101fc:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80101fe:	f7f4 fcad 	bl	8004b5c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010202:	4604      	mov	r4, r0
 8010204:	b110      	cbz	r0, 801020c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010206:	280a      	cmp	r0, #10
 8010208:	d1f2      	bne.n	80101f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801020a:	e76c      	b.n	80100e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801020c:	2400      	movs	r4, #0
 801020e:	e76b      	b.n	80100e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010210:	f1bb 0f00 	cmp.w	fp, #0
 8010214:	f43f af5c 	beq.w	80100d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8010218:	e777      	b.n	801010a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801021a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801021a:	b530      	push	{r4, r5, lr}
 801021c:	8a44      	ldrh	r4, [r0, #18]
 801021e:	8ac5      	ldrh	r5, [r0, #22]
 8010220:	82c3      	strh	r3, [r0, #22]
 8010222:	442c      	add	r4, r5
 8010224:	1ae4      	subs	r4, r4, r3
 8010226:	8244      	strh	r4, [r0, #18]
 8010228:	8b03      	ldrh	r3, [r0, #24]
 801022a:	8a84      	ldrh	r4, [r0, #20]
 801022c:	4422      	add	r2, r4
 801022e:	440c      	add	r4, r1
 8010230:	1a59      	subs	r1, r3, r1
 8010232:	8342      	strh	r2, [r0, #26]
 8010234:	8284      	strh	r4, [r0, #20]
 8010236:	8301      	strh	r1, [r0, #24]
 8010238:	bd30      	pop	{r4, r5, pc}

0801023a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801023a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801023e:	7a43      	ldrb	r3, [r0, #9]
 8010240:	1eda      	subs	r2, r3, #3
 8010242:	b087      	sub	sp, #28
 8010244:	4604      	mov	r4, r0
 8010246:	b2d2      	uxtb	r2, r2
 8010248:	460f      	mov	r7, r1
 801024a:	2900      	cmp	r1, #0
 801024c:	d036      	beq.n	80102bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 801024e:	2a01      	cmp	r2, #1
 8010250:	d932      	bls.n	80102b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8010252:	1e58      	subs	r0, r3, #1
 8010254:	f1d0 0b00 	rsbs	fp, r0, #0
 8010258:	eb4b 0b00 	adc.w	fp, fp, r0
 801025c:	1e99      	subs	r1, r3, #2
 801025e:	424b      	negs	r3, r1
 8010260:	414b      	adcs	r3, r1
 8010262:	9303      	str	r3, [sp, #12]
 8010264:	2300      	movs	r3, #0
 8010266:	e9cd 3301 	strd	r3, r3, [sp, #4]
 801026a:	2500      	movs	r5, #0
 801026c:	8265      	strh	r5, [r4, #18]
 801026e:	82a5      	strh	r5, [r4, #20]
 8010270:	46a9      	mov	r9, r5
 8010272:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8010276:	2300      	movs	r3, #0
 8010278:	9305      	str	r3, [sp, #20]
 801027a:	8823      	ldrh	r3, [r4, #0]
 801027c:	2b20      	cmp	r3, #32
 801027e:	d02b      	beq.n	80102d8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8010280:	eba3 020a 	sub.w	r2, r3, sl
 8010284:	4256      	negs	r6, r2
 8010286:	4156      	adcs	r6, r2
 8010288:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801028c:	4293      	cmp	r3, r2
 801028e:	d004      	beq.n	801029a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010290:	4553      	cmp	r3, sl
 8010292:	bf16      	itet	ne
 8010294:	4699      	movne	r9, r3
 8010296:	2601      	moveq	r6, #1
 8010298:	2600      	movne	r6, #0
 801029a:	ab05      	add	r3, sp, #20
 801029c:	68e2      	ldr	r2, [r4, #12]
 801029e:	7a21      	ldrb	r1, [r4, #8]
 80102a0:	6860      	ldr	r0, [r4, #4]
 80102a2:	f002 fd87 	bl	8012db4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80102a6:	8020      	strh	r0, [r4, #0]
 80102a8:	b9c8      	cbnz	r0, 80102de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 80102aa:	8b22      	ldrh	r2, [r4, #24]
 80102ac:	2300      	movs	r3, #0
 80102ae:	4611      	mov	r1, r2
 80102b0:	4620      	mov	r0, r4
 80102b2:	f7ff ffb2 	bl	801021a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80102b6:	e066      	b.n	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80102b8:	468b      	mov	fp, r1
 80102ba:	e7cf      	b.n	801025c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 80102bc:	3b01      	subs	r3, #1
 80102be:	2a01      	cmp	r2, #1
 80102c0:	bf8c      	ite	hi
 80102c2:	2200      	movhi	r2, #0
 80102c4:	2201      	movls	r2, #1
 80102c6:	2b01      	cmp	r3, #1
 80102c8:	bf8c      	ite	hi
 80102ca:	2300      	movhi	r3, #0
 80102cc:	2301      	movls	r3, #1
 80102ce:	9202      	str	r2, [sp, #8]
 80102d0:	9301      	str	r3, [sp, #4]
 80102d2:	9103      	str	r1, [sp, #12]
 80102d4:	468b      	mov	fp, r1
 80102d6:	e7c8      	b.n	801026a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 80102d8:	4699      	mov	r9, r3
 80102da:	2601      	movs	r6, #1
 80102dc:	e7dd      	b.n	801029a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80102de:	8ae3      	ldrh	r3, [r4, #22]
 80102e0:	280a      	cmp	r0, #10
 80102e2:	f103 0301 	add.w	r3, r3, #1
 80102e6:	82e3      	strh	r3, [r4, #22]
 80102e8:	d0df      	beq.n	80102aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 80102ea:	9a05      	ldr	r2, [sp, #20]
 80102ec:	bb42      	cbnz	r2, 8010340 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 80102ee:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80102f2:	4298      	cmp	r0, r3
 80102f4:	d001      	beq.n	80102fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80102f6:	4550      	cmp	r0, sl
 80102f8:	d1bd      	bne.n	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80102fa:	8823      	ldrh	r3, [r4, #0]
 80102fc:	8b21      	ldrh	r1, [r4, #24]
 80102fe:	2b20      	cmp	r3, #32
 8010300:	d001      	beq.n	8010306 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010302:	4553      	cmp	r3, sl
 8010304:	d131      	bne.n	801036a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8010306:	2e00      	cmp	r6, #0
 8010308:	bf0a      	itet	eq
 801030a:	460d      	moveq	r5, r1
 801030c:	4630      	movne	r0, r6
 801030e:	2001      	moveq	r0, #1
 8010310:	440a      	add	r2, r1
 8010312:	8aa3      	ldrh	r3, [r4, #20]
 8010314:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010318:	b292      	uxth	r2, r2
 801031a:	8322      	strh	r2, [r4, #24]
 801031c:	4413      	add	r3, r2
 801031e:	2f00      	cmp	r7, #0
 8010320:	d03a      	beq.n	8010398 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010322:	f1bb 0f00 	cmp.w	fp, #0
 8010326:	d102      	bne.n	801032e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8010328:	9903      	ldr	r1, [sp, #12]
 801032a:	b301      	cbz	r1, 801036e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801032c:	b1f8      	cbz	r0, 801036e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801032e:	8ba1      	ldrh	r1, [r4, #28]
 8010330:	4419      	add	r1, r3
 8010332:	458c      	cmp	ip, r1
 8010334:	da2a      	bge.n	801038c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010336:	8a61      	ldrh	r1, [r4, #18]
 8010338:	b341      	cbz	r1, 801038c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801033a:	4563      	cmp	r3, ip
 801033c:	dd9b      	ble.n	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801033e:	e01c      	b.n	801037a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010340:	8893      	ldrh	r3, [r2, #4]
 8010342:	8023      	strh	r3, [r4, #0]
 8010344:	f892 800d 	ldrb.w	r8, [r2, #13]
 8010348:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801034c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8010350:	f892 800a 	ldrb.w	r8, [r2, #10]
 8010354:	ea48 0800 	orr.w	r8, r8, r0
 8010358:	68e0      	ldr	r0, [r4, #12]
 801035a:	6803      	ldr	r3, [r0, #0]
 801035c:	4649      	mov	r1, r9
 801035e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010360:	4798      	blx	r3
 8010362:	eb08 0200 	add.w	r2, r8, r0
 8010366:	b292      	uxth	r2, r2
 8010368:	e7c7      	b.n	80102fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801036a:	2000      	movs	r0, #0
 801036c:	e7d0      	b.n	8010310 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 801036e:	4563      	cmp	r3, ip
 8010370:	dd81      	ble.n	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010372:	8a63      	ldrh	r3, [r4, #18]
 8010374:	2b00      	cmp	r3, #0
 8010376:	f43f af7e 	beq.w	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801037a:	2301      	movs	r3, #1
 801037c:	77a3      	strb	r3, [r4, #30]
 801037e:	8ba2      	ldrh	r2, [r4, #28]
 8010380:	8b63      	ldrh	r3, [r4, #26]
 8010382:	4413      	add	r3, r2
 8010384:	8363      	strh	r3, [r4, #26]
 8010386:	b007      	add	sp, #28
 8010388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801038c:	2300      	movs	r3, #0
 801038e:	4611      	mov	r1, r2
 8010390:	4620      	mov	r0, r4
 8010392:	f7ff ff42 	bl	801021a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010396:	e76e      	b.n	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010398:	4563      	cmp	r3, ip
 801039a:	dd14      	ble.n	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 801039c:	9b02      	ldr	r3, [sp, #8]
 801039e:	b113      	cbz	r3, 80103a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 80103a0:	2301      	movs	r3, #1
 80103a2:	460a      	mov	r2, r1
 80103a4:	e783      	b.n	80102ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 80103a6:	9b01      	ldr	r3, [sp, #4]
 80103a8:	2b00      	cmp	r3, #0
 80103aa:	f43f af64 	beq.w	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80103ae:	2800      	cmp	r0, #0
 80103b0:	f47f af61 	bne.w	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80103b4:	b116      	cbz	r6, 80103bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 80103b6:	2301      	movs	r3, #1
 80103b8:	462a      	mov	r2, r5
 80103ba:	e779      	b.n	80102b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 80103bc:	8a63      	ldrh	r3, [r4, #18]
 80103be:	2b00      	cmp	r3, #0
 80103c0:	f43f af59 	beq.w	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80103c4:	e7df      	b.n	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80103c6:	2800      	cmp	r0, #0
 80103c8:	f47f af55 	bne.w	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80103cc:	2e00      	cmp	r6, #0
 80103ce:	f43f af52 	beq.w	8010276 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80103d2:	2301      	movs	r3, #1
 80103d4:	462a      	mov	r2, r5
 80103d6:	e7db      	b.n	8010390 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

080103d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80103d8:	b530      	push	{r4, r5, lr}
 80103da:	4605      	mov	r5, r0
 80103dc:	b08b      	sub	sp, #44	; 0x2c
 80103de:	b191      	cbz	r1, 8010406 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 80103e0:	e9cd 3100 	strd	r3, r1, [sp]
 80103e4:	4613      	mov	r3, r2
 80103e6:	4601      	mov	r1, r0
 80103e8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 80103ec:	a802      	add	r0, sp, #8
 80103ee:	f7ff fd09 	bl	800fe04 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 80103f2:	2401      	movs	r4, #1
 80103f4:	2100      	movs	r1, #0
 80103f6:	a802      	add	r0, sp, #8
 80103f8:	f7ff ff1f 	bl	801023a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80103fc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010400:	b163      	cbz	r3, 801041c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010402:	3401      	adds	r4, #1
 8010404:	e7f6      	b.n	80103f4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8010406:	f002 fda3 	bl	8012f50 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801040a:	2401      	movs	r4, #1
 801040c:	280a      	cmp	r0, #10
 801040e:	4628      	mov	r0, r5
 8010410:	bf08      	it	eq
 8010412:	3401      	addeq	r4, #1
 8010414:	f002 fd9c 	bl	8012f50 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010418:	2800      	cmp	r0, #0
 801041a:	d1f7      	bne.n	801040c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801041c:	b2a0      	uxth	r0, r4
 801041e:	b00b      	add	sp, #44	; 0x2c
 8010420:	bd30      	pop	{r4, r5, pc}

08010422 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010422:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010426:	b0e5      	sub	sp, #404	; 0x194
 8010428:	4689      	mov	r9, r1
 801042a:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 801042e:	900a      	str	r0, [sp, #40]	; 0x28
 8010430:	461c      	mov	r4, r3
 8010432:	f1ba 0f00 	cmp.w	sl, #0
 8010436:	f000 80b4 	beq.w	80105a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801043a:	681b      	ldr	r3, [r3, #0]
 801043c:	2b00      	cmp	r3, #0
 801043e:	f000 80b0 	beq.w	80105a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010442:	7ba3      	ldrb	r3, [r4, #14]
 8010444:	2b00      	cmp	r3, #0
 8010446:	f000 80ac 	beq.w	80105a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801044a:	6810      	ldr	r0, [r2, #0]
 801044c:	6851      	ldr	r1, [r2, #4]
 801044e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8010452:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8010456:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 801045a:	4643      	mov	r3, r8
 801045c:	c303      	stmia	r3!, {r0, r1}
 801045e:	2500      	movs	r5, #0
 8010460:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8010464:	79a2      	ldrb	r2, [r4, #6]
 8010466:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801046a:	a90f      	add	r1, sp, #60	; 0x3c
 801046c:	4640      	mov	r0, r8
 801046e:	950f      	str	r5, [sp, #60]	; 0x3c
 8010470:	f7ff fd40 	bl	800fef4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010474:	a90f      	add	r1, sp, #60	; 0x3c
 8010476:	4608      	mov	r0, r1
 8010478:	79a2      	ldrb	r2, [r4, #6]
 801047a:	af19      	add	r7, sp, #100	; 0x64
 801047c:	f7ff fd3a 	bl	800fef4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010480:	4638      	mov	r0, r7
 8010482:	f002 f93a 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 8010486:	6820      	ldr	r0, [r4, #0]
 8010488:	6803      	ldr	r3, [r0, #0]
 801048a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801048c:	4798      	blx	r3
 801048e:	4606      	mov	r6, r0
 8010490:	6820      	ldr	r0, [r4, #0]
 8010492:	6803      	ldr	r3, [r0, #0]
 8010494:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010496:	4798      	blx	r3
 8010498:	4633      	mov	r3, r6
 801049a:	9000      	str	r0, [sp, #0]
 801049c:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 801049e:	4651      	mov	r1, sl
 80104a0:	4638      	mov	r0, r7
 80104a2:	f002 f985 	bl	80127b0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80104a6:	6820      	ldr	r0, [r4, #0]
 80104a8:	7923      	ldrb	r3, [r4, #4]
 80104aa:	9308      	str	r3, [sp, #32]
 80104ac:	6803      	ldr	r3, [r0, #0]
 80104ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80104b0:	4798      	blx	r3
 80104b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80104b6:	181e      	adds	r6, r3, r0
 80104b8:	42ae      	cmp	r6, r5
 80104ba:	dd06      	ble.n	80104ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 80104bc:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 80104c0:	4282      	cmp	r2, r0
 80104c2:	bfa4      	itt	ge
 80104c4:	189d      	addge	r5, r3, r2
 80104c6:	fb95 f5f6 	sdivge	r5, r5, r6
 80104ca:	a832      	add	r0, sp, #200	; 0xc8
 80104cc:	f002 f915 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 80104d0:	7c23      	ldrb	r3, [r4, #16]
 80104d2:	b17b      	cbz	r3, 80104f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 80104d4:	6820      	ldr	r0, [r4, #0]
 80104d6:	6803      	ldr	r3, [r0, #0]
 80104d8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80104da:	4798      	blx	r3
 80104dc:	4683      	mov	fp, r0
 80104de:	6820      	ldr	r0, [r4, #0]
 80104e0:	6803      	ldr	r3, [r0, #0]
 80104e2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80104e4:	4798      	blx	r3
 80104e6:	465b      	mov	r3, fp
 80104e8:	9000      	str	r0, [sp, #0]
 80104ea:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 80104ec:	4651      	mov	r1, sl
 80104ee:	a832      	add	r0, sp, #200	; 0xc8
 80104f0:	f002 f95e 	bl	80127b0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80104f4:	7be1      	ldrb	r1, [r4, #15]
 80104f6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80104fa:	7963      	ldrb	r3, [r4, #5]
 80104fc:	1a52      	subs	r2, r2, r1
 80104fe:	7c21      	ldrb	r1, [r4, #16]
 8010500:	9101      	str	r1, [sp, #4]
 8010502:	6821      	ldr	r1, [r4, #0]
 8010504:	9100      	str	r1, [sp, #0]
 8010506:	b292      	uxth	r2, r2
 8010508:	a932      	add	r1, sp, #200	; 0xc8
 801050a:	a811      	add	r0, sp, #68	; 0x44
 801050c:	f7ff fc7a 	bl	800fe04 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010510:	7c23      	ldrb	r3, [r4, #16]
 8010512:	b9bb      	cbnz	r3, 8010544 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010514:	fa1f fa86 	uxth.w	sl, r6
 8010518:	2d00      	cmp	r5, #0
 801051a:	dd45      	ble.n	80105a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 801051c:	4638      	mov	r0, r7
 801051e:	f002 fd17 	bl	8012f50 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010522:	2800      	cmp	r0, #0
 8010524:	d03d      	beq.n	80105a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010526:	280a      	cmp	r0, #10
 8010528:	d1f6      	bne.n	8010518 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801052a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801052e:	4453      	add	r3, sl
 8010530:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010534:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010538:	eba3 030a 	sub.w	r3, r3, sl
 801053c:	3d01      	subs	r5, #1
 801053e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010542:	e7e9      	b.n	8010518 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010544:	0073      	lsls	r3, r6, #1
 8010546:	9309      	str	r3, [sp, #36]	; 0x24
 8010548:	f64f 7bff 	movw	fp, #65535	; 0xffff
 801054c:	fa1f fa86 	uxth.w	sl, r6
 8010550:	2d00      	cmp	r5, #0
 8010552:	dd29      	ble.n	80105a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010554:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010558:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801055a:	428b      	cmp	r3, r1
 801055c:	bfd4      	ite	le
 801055e:	2100      	movle	r1, #0
 8010560:	2101      	movgt	r1, #1
 8010562:	a811      	add	r0, sp, #68	; 0x44
 8010564:	f7ff fe69 	bl	801023a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010568:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 801056c:	3b01      	subs	r3, #1
 801056e:	b29b      	uxth	r3, r3
 8010570:	455b      	cmp	r3, fp
 8010572:	930b      	str	r3, [sp, #44]	; 0x2c
 8010574:	d005      	beq.n	8010582 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8010576:	7961      	ldrb	r1, [r4, #5]
 8010578:	4638      	mov	r0, r7
 801057a:	f7f4 faef 	bl	8004b5c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801057e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010580:	e7f4      	b.n	801056c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8010582:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010586:	4453      	add	r3, sl
 8010588:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801058c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010590:	eba3 030a 	sub.w	r3, r3, sl
 8010594:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010598:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801059c:	3d01      	subs	r5, #1
 801059e:	2b00      	cmp	r3, #0
 80105a0:	d1d6      	bne.n	8010550 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 80105a2:	b065      	add	sp, #404	; 0x194
 80105a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105a8:	0075      	lsls	r5, r6, #1
 80105aa:	f04f 0a00 	mov.w	sl, #0
 80105ae:	7c23      	ldrb	r3, [r4, #16]
 80105b0:	2b00      	cmp	r3, #0
 80105b2:	d066      	beq.n	8010682 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 80105b4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80105b8:	428d      	cmp	r5, r1
 80105ba:	bfd4      	ite	le
 80105bc:	2100      	movle	r1, #0
 80105be:	2101      	movgt	r1, #1
 80105c0:	a811      	add	r0, sp, #68	; 0x44
 80105c2:	f7ff fe3a 	bl	801023a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80105c6:	9b08      	ldr	r3, [sp, #32]
 80105c8:	2b00      	cmp	r3, #0
 80105ca:	d055      	beq.n	8010678 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80105cc:	f894 b010 	ldrb.w	fp, [r4, #16]
 80105d0:	2264      	movs	r2, #100	; 0x64
 80105d2:	4639      	mov	r1, r7
 80105d4:	a84b      	add	r0, sp, #300	; 0x12c
 80105d6:	f010 f8f1 	bl	80207bc <memcpy>
 80105da:	f1bb 0f00 	cmp.w	fp, #0
 80105de:	d058      	beq.n	8010692 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 80105e0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80105e4:	7922      	ldrb	r2, [r4, #4]
 80105e6:	2a01      	cmp	r2, #1
 80105e8:	d13c      	bne.n	8010664 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 80105ea:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 80105ee:	1ac0      	subs	r0, r0, r3
 80105f0:	2302      	movs	r3, #2
 80105f2:	fb90 f0f3 	sdiv	r0, r0, r3
 80105f6:	b200      	sxth	r0, r0
 80105f8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80105fc:	4418      	add	r0, r3
 80105fe:	7c23      	ldrb	r3, [r4, #16]
 8010600:	b200      	sxth	r0, r0
 8010602:	2b00      	cmp	r3, #0
 8010604:	d03a      	beq.n	801067c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8010606:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 801060a:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 801060e:	9000      	str	r0, [sp, #0]
 8010610:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010614:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8010618:	980a      	ldr	r0, [sp, #40]	; 0x28
 801061a:	e9cd a703 	strd	sl, r7, [sp, #12]
 801061e:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010622:	464a      	mov	r2, r9
 8010624:	2100      	movs	r1, #0
 8010626:	f7ff fc96 	bl	800ff56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801062a:	2800      	cmp	r0, #0
 801062c:	d1b9      	bne.n	80105a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801062e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010632:	b2b2      	uxth	r2, r6
 8010634:	4611      	mov	r1, r2
 8010636:	4413      	add	r3, r2
 8010638:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801063c:	1a52      	subs	r2, r2, r1
 801063e:	7c21      	ldrb	r1, [r4, #16]
 8010640:	b21b      	sxth	r3, r3
 8010642:	b212      	sxth	r2, r2
 8010644:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010648:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801064c:	b109      	cbz	r1, 8010652 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 801064e:	42b2      	cmp	r2, r6
 8010650:	dba7      	blt.n	80105a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010652:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8010656:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 801065a:	440a      	add	r2, r1
 801065c:	b212      	sxth	r2, r2
 801065e:	4293      	cmp	r3, r2
 8010660:	dda5      	ble.n	80105ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010662:	e79e      	b.n	80105a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010664:	2a02      	cmp	r2, #2
 8010666:	d105      	bne.n	8010674 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010668:	7be2      	ldrb	r2, [r4, #15]
 801066a:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801066e:	1a80      	subs	r0, r0, r2
 8010670:	1ac0      	subs	r0, r0, r3
 8010672:	e7c0      	b.n	80105f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010674:	2000      	movs	r0, #0
 8010676:	e7bf      	b.n	80105f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010678:	7be0      	ldrb	r0, [r4, #15]
 801067a:	e7bd      	b.n	80105f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 801067c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010680:	e7c3      	b.n	801060a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010682:	9b08      	ldr	r3, [sp, #32]
 8010684:	2b00      	cmp	r3, #0
 8010686:	d0f7      	beq.n	8010678 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010688:	2264      	movs	r2, #100	; 0x64
 801068a:	4639      	mov	r1, r7
 801068c:	a84b      	add	r0, sp, #300	; 0x12c
 801068e:	f010 f895 	bl	80207bc <memcpy>
 8010692:	2300      	movs	r3, #0
 8010694:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010698:	6821      	ldr	r1, [r4, #0]
 801069a:	a84b      	add	r0, sp, #300	; 0x12c
 801069c:	f7ff fbee 	bl	800fe7c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80106a0:	b203      	sxth	r3, r0
 80106a2:	e79f      	b.n	80105e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

080106a4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80106a4:	2b03      	cmp	r3, #3
 80106a6:	d818      	bhi.n	80106da <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80106a8:	e8df f003 	tbb	[pc, r3]
 80106ac:	130d0602 	.word	0x130d0602
 80106b0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80106b4:	1850      	adds	r0, r2, r1
 80106b6:	4770      	bx	lr
 80106b8:	8803      	ldrh	r3, [r0, #0]
 80106ba:	8880      	ldrh	r0, [r0, #4]
 80106bc:	4418      	add	r0, r3
 80106be:	b200      	sxth	r0, r0
 80106c0:	1a80      	subs	r0, r0, r2
 80106c2:	3801      	subs	r0, #1
 80106c4:	4770      	bx	lr
 80106c6:	8803      	ldrh	r3, [r0, #0]
 80106c8:	8880      	ldrh	r0, [r0, #4]
 80106ca:	4418      	add	r0, r3
 80106cc:	b200      	sxth	r0, r0
 80106ce:	1a40      	subs	r0, r0, r1
 80106d0:	e7f7      	b.n	80106c2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80106d2:	f9b0 0000 	ldrsh.w	r0, [r0]
 80106d6:	4410      	add	r0, r2
 80106d8:	4770      	bx	lr
 80106da:	2000      	movs	r0, #0
 80106dc:	4770      	bx	lr

080106de <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80106de:	2b03      	cmp	r3, #3
 80106e0:	d817      	bhi.n	8010712 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80106e2:	e8df f003 	tbb	[pc, r3]
 80106e6:	0602      	.short	0x0602
 80106e8:	1009      	.short	0x1009
 80106ea:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80106ee:	1850      	adds	r0, r2, r1
 80106f0:	4770      	bx	lr
 80106f2:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80106f6:	e7fa      	b.n	80106ee <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80106f8:	8843      	ldrh	r3, [r0, #2]
 80106fa:	88c0      	ldrh	r0, [r0, #6]
 80106fc:	4418      	add	r0, r3
 80106fe:	b200      	sxth	r0, r0
 8010700:	1a80      	subs	r0, r0, r2
 8010702:	3801      	subs	r0, #1
 8010704:	4770      	bx	lr
 8010706:	8843      	ldrh	r3, [r0, #2]
 8010708:	88c0      	ldrh	r0, [r0, #6]
 801070a:	4418      	add	r0, r3
 801070c:	b200      	sxth	r0, r0
 801070e:	1a40      	subs	r0, r0, r1
 8010710:	e7f7      	b.n	8010702 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010712:	2000      	movs	r0, #0
 8010714:	4770      	bx	lr
	...

08010718 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010718:	4b01      	ldr	r3, [pc, #4]	; (8010720 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801071a:	2200      	movs	r2, #0
 801071c:	601a      	str	r2, [r3, #0]
 801071e:	4770      	bx	lr
 8010720:	200153f4 	.word	0x200153f4

08010724 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010724:	4603      	mov	r3, r0
 8010726:	b1c8      	cbz	r0, 801075c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010728:	0c02      	lsrs	r2, r0, #16
 801072a:	0412      	lsls	r2, r2, #16
 801072c:	b9a2      	cbnz	r2, 8010758 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801072e:	0403      	lsls	r3, r0, #16
 8010730:	2010      	movs	r0, #16
 8010732:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010736:	bf04      	itt	eq
 8010738:	021b      	lsleq	r3, r3, #8
 801073a:	3008      	addeq	r0, #8
 801073c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010740:	bf04      	itt	eq
 8010742:	011b      	lsleq	r3, r3, #4
 8010744:	3004      	addeq	r0, #4
 8010746:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801074a:	bf04      	itt	eq
 801074c:	009b      	lsleq	r3, r3, #2
 801074e:	3002      	addeq	r0, #2
 8010750:	2b00      	cmp	r3, #0
 8010752:	db04      	blt.n	801075e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010754:	3001      	adds	r0, #1
 8010756:	4770      	bx	lr
 8010758:	2000      	movs	r0, #0
 801075a:	e7ea      	b.n	8010732 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801075c:	2020      	movs	r0, #32
 801075e:	4770      	bx	lr

08010760 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010764:	b087      	sub	sp, #28
 8010766:	4681      	mov	r9, r0
 8010768:	4698      	mov	r8, r3
 801076a:	4610      	mov	r0, r2
 801076c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010770:	460d      	mov	r5, r1
 8010772:	b981      	cbnz	r1, 8010796 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010774:	b14b      	cbz	r3, 801078a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010776:	460b      	mov	r3, r1
 8010778:	e9cd 4700 	strd	r4, r7, [sp]
 801077c:	464a      	mov	r2, r9
 801077e:	4641      	mov	r1, r8
 8010780:	f7ff ffee 	bl	8010760 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010784:	b007      	add	sp, #28
 8010786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801078a:	f04f 33ff 	mov.w	r3, #4294967295
 801078e:	603b      	str	r3, [r7, #0]
 8010790:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010794:	e7f6      	b.n	8010784 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010796:	fa32 fa01 	lsrs.w	sl, r2, r1
 801079a:	d107      	bne.n	80107ac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 801079c:	fb09 f602 	mul.w	r6, r9, r2
 80107a0:	fbb6 f0f4 	udiv	r0, r6, r4
 80107a4:	fb04 6610 	mls	r6, r4, r0, r6
 80107a8:	603e      	str	r6, [r7, #0]
 80107aa:	e7eb      	b.n	8010784 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80107ac:	2601      	movs	r6, #1
 80107ae:	408e      	lsls	r6, r1
 80107b0:	3e01      	subs	r6, #1
 80107b2:	4016      	ands	r6, r2
 80107b4:	fa09 fb01 	lsl.w	fp, r9, r1
 80107b8:	4630      	mov	r0, r6
 80107ba:	fbbb f3f4 	udiv	r3, fp, r4
 80107be:	9302      	str	r3, [sp, #8]
 80107c0:	fb0a f303 	mul.w	r3, sl, r3
 80107c4:	9303      	str	r3, [sp, #12]
 80107c6:	f7ff ffad 	bl	8010724 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80107ca:	464a      	mov	r2, r9
 80107cc:	460b      	mov	r3, r1
 80107ce:	e9cd 4700 	strd	r4, r7, [sp]
 80107d2:	4601      	mov	r1, r0
 80107d4:	4630      	mov	r0, r6
 80107d6:	f7ff ffc3 	bl	8010760 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80107da:	9b02      	ldr	r3, [sp, #8]
 80107dc:	fb04 bb13 	mls	fp, r4, r3, fp
 80107e0:	4606      	mov	r6, r0
 80107e2:	4658      	mov	r0, fp
 80107e4:	eb05 0108 	add.w	r1, r5, r8
 80107e8:	f7ff ff9c 	bl	8010724 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80107ec:	ab05      	add	r3, sp, #20
 80107ee:	e9cd 4300 	strd	r4, r3, [sp]
 80107f2:	465a      	mov	r2, fp
 80107f4:	4603      	mov	r3, r0
 80107f6:	4650      	mov	r0, sl
 80107f8:	f7ff ffb2 	bl	8010760 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80107fc:	6839      	ldr	r1, [r7, #0]
 80107fe:	9a05      	ldr	r2, [sp, #20]
 8010800:	9b03      	ldr	r3, [sp, #12]
 8010802:	4411      	add	r1, r2
 8010804:	fbb1 f2f4 	udiv	r2, r1, r4
 8010808:	18d3      	adds	r3, r2, r3
 801080a:	441e      	add	r6, r3
 801080c:	fb04 1412 	mls	r4, r4, r2, r1
 8010810:	4430      	add	r0, r6
 8010812:	603c      	str	r4, [r7, #0]
 8010814:	e7b6      	b.n	8010784 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010816 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010816:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801081a:	b085      	sub	sp, #20
 801081c:	f1b0 0900 	subs.w	r9, r0, #0
 8010820:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010822:	461d      	mov	r5, r3
 8010824:	bfbf      	itttt	lt
 8010826:	6823      	ldrlt	r3, [r4, #0]
 8010828:	425b      	neglt	r3, r3
 801082a:	f1c9 0900 	rsblt	r9, r9, #0
 801082e:	6023      	strlt	r3, [r4, #0]
 8010830:	bfb4      	ite	lt
 8010832:	f04f 36ff 	movlt.w	r6, #4294967295
 8010836:	2601      	movge	r6, #1
 8010838:	2a00      	cmp	r2, #0
 801083a:	4617      	mov	r7, r2
 801083c:	da04      	bge.n	8010848 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801083e:	6823      	ldr	r3, [r4, #0]
 8010840:	425b      	negs	r3, r3
 8010842:	4257      	negs	r7, r2
 8010844:	4276      	negs	r6, r6
 8010846:	6023      	str	r3, [r4, #0]
 8010848:	2d00      	cmp	r5, #0
 801084a:	4638      	mov	r0, r7
 801084c:	bfba      	itte	lt
 801084e:	426d      	neglt	r5, r5
 8010850:	f04f 38ff 	movlt.w	r8, #4294967295
 8010854:	f04f 0801 	movge.w	r8, #1
 8010858:	f7ff ff64 	bl	8010724 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801085c:	ab03      	add	r3, sp, #12
 801085e:	e9cd 5300 	strd	r5, r3, [sp]
 8010862:	463a      	mov	r2, r7
 8010864:	4603      	mov	r3, r0
 8010866:	4648      	mov	r0, r9
 8010868:	f7ff ff7a 	bl	8010760 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801086c:	6823      	ldr	r3, [r4, #0]
 801086e:	9a03      	ldr	r2, [sp, #12]
 8010870:	4546      	cmp	r6, r8
 8010872:	441a      	add	r2, r3
 8010874:	fb92 f3f5 	sdiv	r3, r2, r5
 8010878:	4418      	add	r0, r3
 801087a:	bf18      	it	ne
 801087c:	4240      	negne	r0, r0
 801087e:	fb05 2313 	mls	r3, r5, r3, r2
 8010882:	1c72      	adds	r2, r6, #1
 8010884:	6023      	str	r3, [r4, #0]
 8010886:	d105      	bne.n	8010894 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010888:	2b00      	cmp	r3, #0
 801088a:	f1c3 0200 	rsb	r2, r3, #0
 801088e:	db0b      	blt.n	80108a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010890:	6022      	str	r2, [r4, #0]
 8010892:	e006      	b.n	80108a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010894:	2e01      	cmp	r6, #1
 8010896:	d104      	bne.n	80108a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010898:	2b00      	cmp	r3, #0
 801089a:	da02      	bge.n	80108a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801089c:	442b      	add	r3, r5
 801089e:	3801      	subs	r0, #1
 80108a0:	6023      	str	r3, [r4, #0]
 80108a2:	b005      	add	sp, #20
 80108a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80108a8:	3801      	subs	r0, #1
 80108aa:	1b52      	subs	r2, r2, r5
 80108ac:	e7f0      	b.n	8010890 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

080108b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80108b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80108b4:	4c1c      	ldr	r4, [pc, #112]	; (8010928 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80108b6:	6807      	ldr	r7, [r0, #0]
 80108b8:	69a3      	ldr	r3, [r4, #24]
 80108ba:	4605      	mov	r5, r0
 80108bc:	b92b      	cbnz	r3, 80108ca <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80108be:	6840      	ldr	r0, [r0, #4]
 80108c0:	e9c5 7000 	strd	r7, r0, [r5]
 80108c4:	b004      	add	sp, #16
 80108c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80108ca:	68a2      	ldr	r2, [r4, #8]
 80108cc:	6820      	ldr	r0, [r4, #0]
 80108ce:	ae04      	add	r6, sp, #16
 80108d0:	f04f 0802 	mov.w	r8, #2
 80108d4:	fb93 f1f8 	sdiv	r1, r3, r8
 80108d8:	440a      	add	r2, r1
 80108da:	f846 2d04 	str.w	r2, [r6, #-4]!
 80108de:	69e1      	ldr	r1, [r4, #28]
 80108e0:	9600      	str	r6, [sp, #0]
 80108e2:	463a      	mov	r2, r7
 80108e4:	f7ff ff97 	bl	8010816 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80108e8:	69a3      	ldr	r3, [r4, #24]
 80108ea:	686a      	ldr	r2, [r5, #4]
 80108ec:	6a21      	ldr	r1, [r4, #32]
 80108ee:	9600      	str	r6, [sp, #0]
 80108f0:	4607      	mov	r7, r0
 80108f2:	6860      	ldr	r0, [r4, #4]
 80108f4:	f7ff ff8f 	bl	8010816 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80108f8:	6962      	ldr	r2, [r4, #20]
 80108fa:	69a3      	ldr	r3, [r4, #24]
 80108fc:	fb93 f8f8 	sdiv	r8, r3, r8
 8010900:	4442      	add	r2, r8
 8010902:	9203      	str	r2, [sp, #12]
 8010904:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010906:	682a      	ldr	r2, [r5, #0]
 8010908:	9600      	str	r6, [sp, #0]
 801090a:	4407      	add	r7, r0
 801090c:	68e0      	ldr	r0, [r4, #12]
 801090e:	f7ff ff82 	bl	8010816 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010912:	9600      	str	r6, [sp, #0]
 8010914:	4680      	mov	r8, r0
 8010916:	69a3      	ldr	r3, [r4, #24]
 8010918:	686a      	ldr	r2, [r5, #4]
 801091a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 801091c:	6920      	ldr	r0, [r4, #16]
 801091e:	f7ff ff7a 	bl	8010816 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010922:	4440      	add	r0, r8
 8010924:	e7cc      	b.n	80108c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010926:	bf00      	nop
 8010928:	200153f8 	.word	0x200153f8

0801092c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801092c:	4b07      	ldr	r3, [pc, #28]	; (801094c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801092e:	781b      	ldrb	r3, [r3, #0]
 8010930:	2b01      	cmp	r3, #1
 8010932:	d109      	bne.n	8010948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010934:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010938:	f9b0 2000 	ldrsh.w	r2, [r0]
 801093c:	8003      	strh	r3, [r0, #0]
 801093e:	4b04      	ldr	r3, [pc, #16]	; (8010950 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010940:	881b      	ldrh	r3, [r3, #0]
 8010942:	3b01      	subs	r3, #1
 8010944:	1a9b      	subs	r3, r3, r2
 8010946:	800b      	strh	r3, [r1, #0]
 8010948:	4770      	bx	lr
 801094a:	bf00      	nop
 801094c:	200153dc 	.word	0x200153dc
 8010950:	200153d8 	.word	0x200153d8

08010954 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010954:	b510      	push	{r4, lr}
 8010956:	4b07      	ldr	r3, [pc, #28]	; (8010974 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010958:	781b      	ldrb	r3, [r3, #0]
 801095a:	2b01      	cmp	r3, #1
 801095c:	d108      	bne.n	8010970 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801095e:	4b06      	ldr	r3, [pc, #24]	; (8010978 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010960:	880c      	ldrh	r4, [r1, #0]
 8010962:	881b      	ldrh	r3, [r3, #0]
 8010964:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010968:	3b01      	subs	r3, #1
 801096a:	1b1b      	subs	r3, r3, r4
 801096c:	8003      	strh	r3, [r0, #0]
 801096e:	800a      	strh	r2, [r1, #0]
 8010970:	bd10      	pop	{r4, pc}
 8010972:	bf00      	nop
 8010974:	200153dc 	.word	0x200153dc
 8010978:	200153d8 	.word	0x200153d8

0801097c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801097c:	b510      	push	{r4, lr}
 801097e:	4b0a      	ldr	r3, [pc, #40]	; (80109a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010980:	781b      	ldrb	r3, [r3, #0]
 8010982:	2b01      	cmp	r3, #1
 8010984:	d10e      	bne.n	80109a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010986:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801098a:	8843      	ldrh	r3, [r0, #2]
 801098c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010990:	8044      	strh	r4, [r0, #2]
 8010992:	18ca      	adds	r2, r1, r3
 8010994:	4b05      	ldr	r3, [pc, #20]	; (80109ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010996:	881b      	ldrh	r3, [r3, #0]
 8010998:	1a9b      	subs	r3, r3, r2
 801099a:	8003      	strh	r3, [r0, #0]
 801099c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80109a0:	80c3      	strh	r3, [r0, #6]
 80109a2:	8081      	strh	r1, [r0, #4]
 80109a4:	bd10      	pop	{r4, pc}
 80109a6:	bf00      	nop
 80109a8:	200153dc 	.word	0x200153dc
 80109ac:	200153d8 	.word	0x200153d8

080109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80109b0:	4b08      	ldr	r3, [pc, #32]	; (80109d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80109b2:	781b      	ldrb	r3, [r3, #0]
 80109b4:	2b01      	cmp	r3, #1
 80109b6:	d10c      	bne.n	80109d2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80109b8:	8803      	ldrh	r3, [r0, #0]
 80109ba:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80109be:	8842      	ldrh	r2, [r0, #2]
 80109c0:	8002      	strh	r2, [r0, #0]
 80109c2:	185a      	adds	r2, r3, r1
 80109c4:	4b04      	ldr	r3, [pc, #16]	; (80109d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80109c6:	881b      	ldrh	r3, [r3, #0]
 80109c8:	1a9b      	subs	r3, r3, r2
 80109ca:	8043      	strh	r3, [r0, #2]
 80109cc:	88c3      	ldrh	r3, [r0, #6]
 80109ce:	8083      	strh	r3, [r0, #4]
 80109d0:	80c1      	strh	r1, [r0, #6]
 80109d2:	4770      	bx	lr
 80109d4:	200153dc 	.word	0x200153dc
 80109d8:	200153d8 	.word	0x200153d8

080109dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80109dc:	b510      	push	{r4, lr}
 80109de:	4b07      	ldr	r3, [pc, #28]	; (80109fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80109e0:	781b      	ldrb	r3, [r3, #0]
 80109e2:	2b01      	cmp	r3, #1
 80109e4:	d108      	bne.n	80109f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80109e6:	f9b1 3000 	ldrsh.w	r3, [r1]
 80109ea:	f9b0 4000 	ldrsh.w	r4, [r0]
 80109ee:	8003      	strh	r3, [r0, #0]
 80109f0:	8893      	ldrh	r3, [r2, #4]
 80109f2:	3b01      	subs	r3, #1
 80109f4:	1b1b      	subs	r3, r3, r4
 80109f6:	800b      	strh	r3, [r1, #0]
 80109f8:	bd10      	pop	{r4, pc}
 80109fa:	bf00      	nop
 80109fc:	200153dc 	.word	0x200153dc

08010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010a00:	b510      	push	{r4, lr}
 8010a02:	4b0a      	ldr	r3, [pc, #40]	; (8010a2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010a04:	781b      	ldrb	r3, [r3, #0]
 8010a06:	2b01      	cmp	r3, #1
 8010a08:	460a      	mov	r2, r1
 8010a0a:	d10d      	bne.n	8010a28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010a0c:	8881      	ldrh	r1, [r0, #4]
 8010a0e:	8803      	ldrh	r3, [r0, #0]
 8010a10:	440b      	add	r3, r1
 8010a12:	4601      	mov	r1, r0
 8010a14:	3b01      	subs	r3, #1
 8010a16:	f821 3b02 	strh.w	r3, [r1], #2
 8010a1a:	f7ff ffdf 	bl	80109dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010a1e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010a22:	88c2      	ldrh	r2, [r0, #6]
 8010a24:	8082      	strh	r2, [r0, #4]
 8010a26:	80c3      	strh	r3, [r0, #6]
 8010a28:	bd10      	pop	{r4, pc}
 8010a2a:	bf00      	nop
 8010a2c:	200153dc 	.word	0x200153dc

08010a30 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010a30:	b570      	push	{r4, r5, r6, lr}
 8010a32:	4c0b      	ldr	r4, [pc, #44]	; (8010a60 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010a34:	2300      	movs	r3, #0
 8010a36:	4605      	mov	r5, r0
 8010a38:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010a3c:	6820      	ldr	r0, [r4, #0]
 8010a3e:	460e      	mov	r6, r1
 8010a40:	b110      	cbz	r0, 8010a48 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010a42:	6803      	ldr	r3, [r0, #0]
 8010a44:	695b      	ldr	r3, [r3, #20]
 8010a46:	4798      	blx	r3
 8010a48:	6026      	str	r6, [r4, #0]
 8010a4a:	6833      	ldr	r3, [r6, #0]
 8010a4c:	4630      	mov	r0, r6
 8010a4e:	68db      	ldr	r3, [r3, #12]
 8010a50:	4798      	blx	r3
 8010a52:	682b      	ldr	r3, [r5, #0]
 8010a54:	4628      	mov	r0, r5
 8010a56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010a58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a5c:	4718      	bx	r3
 8010a5e:	bf00      	nop
 8010a60:	20015428 	.word	0x20015428

08010a64 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010a64:	4b06      	ldr	r3, [pc, #24]	; (8010a80 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010a66:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010a6a:	4b06      	ldr	r3, [pc, #24]	; (8010a84 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010a6c:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010a70:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010a74:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010a78:	2100      	movs	r1, #0
 8010a7a:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010a7e:	4770      	bx	lr
 8010a80:	200153d8 	.word	0x200153d8
 8010a84:	200153da 	.word	0x200153da

08010a88 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010a88:	4b03      	ldr	r3, [pc, #12]	; (8010a98 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010a8a:	6818      	ldr	r0, [r3, #0]
 8010a8c:	b110      	cbz	r0, 8010a94 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010a8e:	6803      	ldr	r3, [r0, #0]
 8010a90:	699b      	ldr	r3, [r3, #24]
 8010a92:	4718      	bx	r3
 8010a94:	4770      	bx	lr
 8010a96:	bf00      	nop
 8010a98:	20015428 	.word	0x20015428

08010a9c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010a9c:	4770      	bx	lr
	...

08010aa0 <_ZN8touchgfx11Application4drawEv>:
 8010aa0:	b507      	push	{r0, r1, r2, lr}
 8010aa2:	4b09      	ldr	r3, [pc, #36]	; (8010ac8 <_ZN8touchgfx11Application4drawEv+0x28>)
 8010aa4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010aa8:	4b08      	ldr	r3, [pc, #32]	; (8010acc <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010aaa:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010aae:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ab2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010ab6:	6803      	ldr	r3, [r0, #0]
 8010ab8:	2100      	movs	r1, #0
 8010aba:	9100      	str	r1, [sp, #0]
 8010abc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010abe:	4669      	mov	r1, sp
 8010ac0:	4798      	blx	r3
 8010ac2:	b003      	add	sp, #12
 8010ac4:	f85d fb04 	ldr.w	pc, [sp], #4
 8010ac8:	200153d8 	.word	0x200153d8
 8010acc:	200153da 	.word	0x200153da

08010ad0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010ad0:	4b03      	ldr	r3, [pc, #12]	; (8010ae0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010ad2:	6818      	ldr	r0, [r3, #0]
 8010ad4:	b110      	cbz	r0, 8010adc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010ad6:	6803      	ldr	r3, [r0, #0]
 8010ad8:	69db      	ldr	r3, [r3, #28]
 8010ada:	4718      	bx	r3
 8010adc:	4770      	bx	lr
 8010ade:	bf00      	nop
 8010ae0:	20015428 	.word	0x20015428

08010ae4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010ae4:	4b03      	ldr	r3, [pc, #12]	; (8010af4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010ae6:	6818      	ldr	r0, [r3, #0]
 8010ae8:	b110      	cbz	r0, 8010af0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010aea:	6803      	ldr	r3, [r0, #0]
 8010aec:	6a1b      	ldr	r3, [r3, #32]
 8010aee:	4718      	bx	r3
 8010af0:	4770      	bx	lr
 8010af2:	bf00      	nop
 8010af4:	20015428 	.word	0x20015428

08010af8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010af8:	2300      	movs	r3, #0
 8010afa:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010afe:	4770      	bx	lr

08010b00 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010b00:	4b03      	ldr	r3, [pc, #12]	; (8010b10 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010b02:	6818      	ldr	r0, [r3, #0]
 8010b04:	b110      	cbz	r0, 8010b0c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010b06:	6803      	ldr	r3, [r0, #0]
 8010b08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010b0a:	4718      	bx	r3
 8010b0c:	4770      	bx	lr
 8010b0e:	bf00      	nop
 8010b10:	20015428 	.word	0x20015428

08010b14 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010b14:	b570      	push	{r4, r5, r6, lr}
 8010b16:	4d32      	ldr	r5, [pc, #200]	; (8010be0 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010b18:	4604      	mov	r4, r0
 8010b1a:	6828      	ldr	r0, [r5, #0]
 8010b1c:	b140      	cbz	r0, 8010b30 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010b1e:	7a03      	ldrb	r3, [r0, #8]
 8010b20:	b933      	cbnz	r3, 8010b30 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010b22:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010b26:	6803      	ldr	r3, [r0, #0]
 8010b28:	689b      	ldr	r3, [r3, #8]
 8010b2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b2e:	4718      	bx	r3
 8010b30:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010b34:	b97b      	cbnz	r3, 8010b56 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010b36:	b170      	cbz	r0, 8010b56 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010b38:	7a03      	ldrb	r3, [r0, #8]
 8010b3a:	b163      	cbz	r3, 8010b56 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010b3c:	4b29      	ldr	r3, [pc, #164]	; (8010be4 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010b3e:	6818      	ldr	r0, [r3, #0]
 8010b40:	b110      	cbz	r0, 8010b48 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010b42:	6803      	ldr	r3, [r0, #0]
 8010b44:	691b      	ldr	r3, [r3, #16]
 8010b46:	4798      	blx	r3
 8010b48:	6828      	ldr	r0, [r5, #0]
 8010b4a:	6803      	ldr	r3, [r0, #0]
 8010b4c:	68db      	ldr	r3, [r3, #12]
 8010b4e:	4798      	blx	r3
 8010b50:	2301      	movs	r3, #1
 8010b52:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010b56:	2500      	movs	r5, #0
 8010b58:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010b5c:	42a8      	cmp	r0, r5
 8010b5e:	dd0c      	ble.n	8010b7a <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8010b60:	1963      	adds	r3, r4, r5
 8010b62:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8010b66:	b132      	cbz	r2, 8010b76 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8010b68:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8010b6c:	4413      	add	r3, r2
 8010b6e:	6858      	ldr	r0, [r3, #4]
 8010b70:	6803      	ldr	r3, [r0, #0]
 8010b72:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010b74:	4798      	blx	r3
 8010b76:	3501      	adds	r5, #1
 8010b78:	e7ee      	b.n	8010b58 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8010b7a:	2300      	movs	r3, #0
 8010b7c:	461a      	mov	r2, r3
 8010b7e:	4298      	cmp	r0, r3
 8010b80:	d015      	beq.n	8010bae <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8010b82:	18e1      	adds	r1, r4, r3
 8010b84:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8010b88:	b16d      	cbz	r5, 8010ba6 <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8010b8a:	429a      	cmp	r2, r3
 8010b8c:	d00a      	beq.n	8010ba4 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8010b8e:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010b92:	4431      	add	r1, r6
 8010b94:	684e      	ldr	r6, [r1, #4]
 8010b96:	b291      	uxth	r1, r2
 8010b98:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010b9c:	604e      	str	r6, [r1, #4]
 8010b9e:	18a1      	adds	r1, r4, r2
 8010ba0:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8010ba4:	3201      	adds	r2, #1
 8010ba6:	3301      	adds	r3, #1
 8010ba8:	e7e9      	b.n	8010b7e <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010baa:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8010bae:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8010bb2:	4295      	cmp	r5, r2
 8010bb4:	dd0d      	ble.n	8010bd2 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8010bb6:	1e6b      	subs	r3, r5, #1
 8010bb8:	b29b      	uxth	r3, r3
 8010bba:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8010bbe:	4618      	mov	r0, r3
 8010bc0:	3104      	adds	r1, #4
 8010bc2:	4285      	cmp	r5, r0
 8010bc4:	ddf1      	ble.n	8010baa <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8010bc6:	f851 6f04 	ldr.w	r6, [r1, #4]!
 8010bca:	f841 6c04 	str.w	r6, [r1, #-4]
 8010bce:	3001      	adds	r0, #1
 8010bd0:	e7f7      	b.n	8010bc2 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8010bd2:	4b04      	ldr	r3, [pc, #16]	; (8010be4 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010bd4:	6818      	ldr	r0, [r3, #0]
 8010bd6:	b110      	cbz	r0, 8010bde <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8010bd8:	6803      	ldr	r3, [r0, #0]
 8010bda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010bdc:	e7a5      	b.n	8010b2a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010bde:	bd70      	pop	{r4, r5, r6, pc}
 8010be0:	2001542c 	.word	0x2001542c
 8010be4:	20015428 	.word	0x20015428

08010be8 <_ZN8touchgfx11ApplicationD1Ev>:
 8010be8:	4770      	bx	lr

08010bea <_ZN8touchgfx11ApplicationD0Ev>:
 8010bea:	b510      	push	{r4, lr}
 8010bec:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010bf0:	4604      	mov	r4, r0
 8010bf2:	f00f fbb7 	bl	8020364 <_ZdlPvj>
 8010bf6:	4620      	mov	r0, r4
 8010bf8:	bd10      	pop	{r4, pc}

08010bfa <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010bfa:	b510      	push	{r4, lr}
 8010bfc:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010c00:	888a      	ldrh	r2, [r1, #4]
 8010c02:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010c06:	4422      	add	r2, r4
 8010c08:	b212      	sxth	r2, r2
 8010c0a:	4293      	cmp	r3, r2
 8010c0c:	da15      	bge.n	8010c3a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010c0e:	8882      	ldrh	r2, [r0, #4]
 8010c10:	4413      	add	r3, r2
 8010c12:	b21b      	sxth	r3, r3
 8010c14:	429c      	cmp	r4, r3
 8010c16:	da10      	bge.n	8010c3a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010c18:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010c1c:	88c9      	ldrh	r1, [r1, #6]
 8010c1e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010c22:	4419      	add	r1, r3
 8010c24:	b209      	sxth	r1, r1
 8010c26:	428a      	cmp	r2, r1
 8010c28:	da07      	bge.n	8010c3a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010c2a:	88c0      	ldrh	r0, [r0, #6]
 8010c2c:	4410      	add	r0, r2
 8010c2e:	b200      	sxth	r0, r0
 8010c30:	4283      	cmp	r3, r0
 8010c32:	bfac      	ite	ge
 8010c34:	2000      	movge	r0, #0
 8010c36:	2001      	movlt	r0, #1
 8010c38:	bd10      	pop	{r4, pc}
 8010c3a:	2000      	movs	r0, #0
 8010c3c:	e7fc      	b.n	8010c38 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08010c3e <_ZN8touchgfx4Rect10restrictToEss>:
 8010c3e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010c42:	2b00      	cmp	r3, #0
 8010c44:	b510      	push	{r4, lr}
 8010c46:	da04      	bge.n	8010c52 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010c48:	8884      	ldrh	r4, [r0, #4]
 8010c4a:	4423      	add	r3, r4
 8010c4c:	8083      	strh	r3, [r0, #4]
 8010c4e:	2300      	movs	r3, #0
 8010c50:	8003      	strh	r3, [r0, #0]
 8010c52:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010c56:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010c5a:	1b09      	subs	r1, r1, r4
 8010c5c:	428b      	cmp	r3, r1
 8010c5e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8010c62:	bfc8      	it	gt
 8010c64:	8081      	strhgt	r1, [r0, #4]
 8010c66:	2b00      	cmp	r3, #0
 8010c68:	da04      	bge.n	8010c74 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010c6a:	88c1      	ldrh	r1, [r0, #6]
 8010c6c:	440b      	add	r3, r1
 8010c6e:	80c3      	strh	r3, [r0, #6]
 8010c70:	2300      	movs	r3, #0
 8010c72:	8043      	strh	r3, [r0, #2]
 8010c74:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010c78:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010c7c:	1a52      	subs	r2, r2, r1
 8010c7e:	4293      	cmp	r3, r2
 8010c80:	bfc8      	it	gt
 8010c82:	80c2      	strhgt	r2, [r0, #6]
 8010c84:	bd10      	pop	{r4, pc}
	...

08010c88 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010c88:	b510      	push	{r4, lr}
 8010c8a:	4b10      	ldr	r3, [pc, #64]	; (8010ccc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010c8c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010c90:	4b0f      	ldr	r3, [pc, #60]	; (8010cd0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8010c92:	460c      	mov	r4, r1
 8010c94:	4620      	mov	r0, r4
 8010c96:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010c9a:	f7ff ffd0 	bl	8010c3e <_ZN8touchgfx4Rect10restrictToEss>
 8010c9e:	4b0d      	ldr	r3, [pc, #52]	; (8010cd4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8010ca0:	6818      	ldr	r0, [r3, #0]
 8010ca2:	b190      	cbz	r0, 8010cca <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010ca4:	6803      	ldr	r3, [r0, #0]
 8010ca6:	4621      	mov	r1, r4
 8010ca8:	689b      	ldr	r3, [r3, #8]
 8010caa:	4798      	blx	r3
 8010cac:	4b0a      	ldr	r3, [pc, #40]	; (8010cd8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8010cae:	6818      	ldr	r0, [r3, #0]
 8010cb0:	b118      	cbz	r0, 8010cba <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8010cb2:	6803      	ldr	r3, [r0, #0]
 8010cb4:	4621      	mov	r1, r4
 8010cb6:	689b      	ldr	r3, [r3, #8]
 8010cb8:	4798      	blx	r3
 8010cba:	4b08      	ldr	r3, [pc, #32]	; (8010cdc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010cbc:	6818      	ldr	r0, [r3, #0]
 8010cbe:	6803      	ldr	r3, [r0, #0]
 8010cc0:	4621      	mov	r1, r4
 8010cc2:	69db      	ldr	r3, [r3, #28]
 8010cc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cc8:	4718      	bx	r3
 8010cca:	bd10      	pop	{r4, pc}
 8010ccc:	200153da 	.word	0x200153da
 8010cd0:	200153d8 	.word	0x200153d8
 8010cd4:	20015428 	.word	0x20015428
 8010cd8:	20015424 	.word	0x20015424
 8010cdc:	200153e4 	.word	0x200153e4

08010ce0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8010ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010ce2:	4606      	mov	r6, r0
 8010ce4:	4608      	mov	r0, r1
 8010ce6:	460f      	mov	r7, r1
 8010ce8:	f7f9 fec3 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010cec:	b9e8      	cbnz	r0, 8010d2a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010cee:	f9b7 5000 	ldrsh.w	r5, [r7]
 8010cf2:	f9b6 4000 	ldrsh.w	r4, [r6]
 8010cf6:	42a5      	cmp	r5, r4
 8010cf8:	db17      	blt.n	8010d2a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010cfa:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8010cfe:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8010d02:	429a      	cmp	r2, r3
 8010d04:	db11      	blt.n	8010d2a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010d06:	88b9      	ldrh	r1, [r7, #4]
 8010d08:	440d      	add	r5, r1
 8010d0a:	88b1      	ldrh	r1, [r6, #4]
 8010d0c:	440c      	add	r4, r1
 8010d0e:	b22d      	sxth	r5, r5
 8010d10:	b224      	sxth	r4, r4
 8010d12:	42a5      	cmp	r5, r4
 8010d14:	dc09      	bgt.n	8010d2a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010d16:	88f8      	ldrh	r0, [r7, #6]
 8010d18:	4410      	add	r0, r2
 8010d1a:	88f2      	ldrh	r2, [r6, #6]
 8010d1c:	4413      	add	r3, r2
 8010d1e:	b200      	sxth	r0, r0
 8010d20:	b21b      	sxth	r3, r3
 8010d22:	4298      	cmp	r0, r3
 8010d24:	bfcc      	ite	gt
 8010d26:	2000      	movgt	r0, #0
 8010d28:	2001      	movle	r0, #1
 8010d2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010d2c <_ZN8touchgfx11Application11getInstanceEv>:
 8010d2c:	4b01      	ldr	r3, [pc, #4]	; (8010d34 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010d2e:	6818      	ldr	r0, [r3, #0]
 8010d30:	4770      	bx	lr
 8010d32:	bf00      	nop
 8010d34:	20015438 	.word	0x20015438

08010d38 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8010d38:	2300      	movs	r3, #0
 8010d3a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010d3e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8010d42:	30a8      	adds	r0, #168	; 0xa8
 8010d44:	f802 3b01 	strb.w	r3, [r2], #1
 8010d48:	4282      	cmp	r2, r0
 8010d4a:	d1fb      	bne.n	8010d44 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8010d4c:	4770      	bx	lr

08010d4e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8010d4e:	4603      	mov	r3, r0
 8010d50:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8010d54:	2200      	movs	r2, #0
 8010d56:	801a      	strh	r2, [r3, #0]
 8010d58:	805a      	strh	r2, [r3, #2]
 8010d5a:	809a      	strh	r2, [r3, #4]
 8010d5c:	80da      	strh	r2, [r3, #6]
 8010d5e:	3308      	adds	r3, #8
 8010d60:	428b      	cmp	r3, r1
 8010d62:	d1f8      	bne.n	8010d56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010d64:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8010d68:	4770      	bx	lr
	...

08010d6c <_ZN8touchgfx11ApplicationC1Ev>:
 8010d6c:	b570      	push	{r4, r5, r6, lr}
 8010d6e:	4b19      	ldr	r3, [pc, #100]	; (8010dd4 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 8010d70:	6003      	str	r3, [r0, #0]
 8010d72:	2500      	movs	r5, #0
 8010d74:	4604      	mov	r4, r0
 8010d76:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 8010d7a:	30a8      	adds	r0, #168	; 0xa8
 8010d7c:	f7ff ffe7 	bl	8010d4e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010d80:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8010d84:	f7ff ffe3 	bl	8010d4e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010d88:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8010d8c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8010d90:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8010d94:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8010d98:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8010d9c:	490e      	ldr	r1, [pc, #56]	; (8010dd8 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8010d9e:	480f      	ldr	r0, [pc, #60]	; (8010ddc <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8010da0:	4e0f      	ldr	r6, [pc, #60]	; (8010de0 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8010da2:	f00e fec3 	bl	801fb2c <CRC_Lock>
 8010da6:	4b0f      	ldr	r3, [pc, #60]	; (8010de4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010da8:	b158      	cbz	r0, 8010dc2 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 8010daa:	801d      	strh	r5, [r3, #0]
 8010dac:	4a0e      	ldr	r2, [pc, #56]	; (8010de8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010dae:	2300      	movs	r3, #0
 8010db0:	6013      	str	r3, [r2, #0]
 8010db2:	4a0e      	ldr	r2, [pc, #56]	; (8010dec <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010db4:	6033      	str	r3, [r6, #0]
 8010db6:	4620      	mov	r0, r4
 8010db8:	6013      	str	r3, [r2, #0]
 8010dba:	f7ff ffbd 	bl	8010d38 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8010dbe:	4620      	mov	r0, r4
 8010dc0:	bd70      	pop	{r4, r5, r6, pc}
 8010dc2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010dc6:	2002      	movs	r0, #2
 8010dc8:	801a      	strh	r2, [r3, #0]
 8010dca:	6030      	str	r0, [r6, #0]
 8010dcc:	f001 fae8 	bl	80123a0 <_ZN8touchgfx6Screen4drawEv>
 8010dd0:	e7ec      	b.n	8010dac <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8010dd2:	bf00      	nop
 8010dd4:	08023f04 	.word	0x08023f04
 8010dd8:	b5e8b5cd 	.word	0xb5e8b5cd
 8010ddc:	f407a5c2 	.word	0xf407a5c2
 8010de0:	20015428 	.word	0x20015428
 8010de4:	2000008c 	.word	0x2000008c
 8010de8:	20015438 	.word	0x20015438
 8010dec:	2001542c 	.word	0x2001542c

08010df0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010df0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8010df4:	3b01      	subs	r3, #1
 8010df6:	b29b      	uxth	r3, r3
 8010df8:	428b      	cmp	r3, r1
 8010dfa:	b510      	push	{r4, lr}
 8010dfc:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8010e00:	d908      	bls.n	8010e14 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010e02:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8010e06:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010e0a:	681a      	ldr	r2, [r3, #0]
 8010e0c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010e10:	685a      	ldr	r2, [r3, #4]
 8010e12:	6062      	str	r2, [r4, #4]
 8010e14:	bd10      	pop	{r4, pc}
	...

08010e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e1c:	4b94      	ldr	r3, [pc, #592]	; (8011070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8010e1e:	b08f      	sub	sp, #60	; 0x3c
 8010e20:	ac0a      	add	r4, sp, #40	; 0x28
 8010e22:	e884 0006 	stmia.w	r4, {r1, r2}
 8010e26:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010e2a:	4b92      	ldr	r3, [pc, #584]	; (8011074 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8010e2c:	4683      	mov	fp, r0
 8010e2e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010e32:	4620      	mov	r0, r4
 8010e34:	f7ff ff03 	bl	8010c3e <_ZN8touchgfx4Rect10restrictToEss>
 8010e38:	4620      	mov	r0, r4
 8010e3a:	f7f9 fe1a 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e3e:	2800      	cmp	r0, #0
 8010e40:	d16a      	bne.n	8010f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010e42:	9403      	str	r4, [sp, #12]
 8010e44:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8010e48:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8010e4c:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8010e50:	2400      	movs	r4, #0
 8010e52:	9301      	str	r3, [sp, #4]
 8010e54:	36a0      	adds	r6, #160	; 0xa0
 8010e56:	42a5      	cmp	r5, r4
 8010e58:	d00d      	beq.n	8010e76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8010e5a:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8010e5e:	9803      	ldr	r0, [sp, #12]
 8010e60:	f7ff ff3e 	bl	8010ce0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8010e64:	b128      	cbz	r0, 8010e72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8010e66:	1e69      	subs	r1, r5, #1
 8010e68:	1b09      	subs	r1, r1, r4
 8010e6a:	b289      	uxth	r1, r1
 8010e6c:	9801      	ldr	r0, [sp, #4]
 8010e6e:	f7ff ffbf 	bl	8010df0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010e72:	3401      	adds	r4, #1
 8010e74:	e7ef      	b.n	8010e56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 8010e76:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8010e7a:	9704      	str	r7, [sp, #16]
 8010e7c:	1e7b      	subs	r3, r7, #1
 8010e7e:	9302      	str	r3, [sp, #8]
 8010e80:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8010e84:	2400      	movs	r4, #0
 8010e86:	4655      	mov	r5, sl
 8010e88:	9705      	str	r7, [sp, #20]
 8010e8a:	4626      	mov	r6, r4
 8010e8c:	9b05      	ldr	r3, [sp, #20]
 8010e8e:	2b00      	cmp	r3, #0
 8010e90:	d078      	beq.n	8010f84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 8010e92:	9903      	ldr	r1, [sp, #12]
 8010e94:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8010e98:	f7ff feaf 	bl	8010bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010e9c:	b360      	cbz	r0, 8010ef8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010e9e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8010ea2:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8010ea6:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 8010eaa:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8010eae:	45e6      	cmp	lr, ip
 8010eb0:	db35      	blt.n	8010f1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010eb2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8010eb6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8010eba:	4472      	add	r2, lr
 8010ebc:	4463      	add	r3, ip
 8010ebe:	b212      	sxth	r2, r2
 8010ec0:	b21b      	sxth	r3, r3
 8010ec2:	429a      	cmp	r2, r3
 8010ec4:	dc2b      	bgt.n	8010f1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010ec6:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8010eca:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010ece:	fa1f f288 	uxth.w	r2, r8
 8010ed2:	4413      	add	r3, r2
 8010ed4:	b29b      	uxth	r3, r3
 8010ed6:	45c1      	cmp	r9, r8
 8010ed8:	fa0f fe83 	sxth.w	lr, r3
 8010edc:	fa1f fc89 	uxth.w	ip, r9
 8010ee0:	db0f      	blt.n	8010f02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010ee2:	eba3 030c 	sub.w	r3, r3, ip
 8010ee6:	1ac9      	subs	r1, r1, r3
 8010ee8:	b209      	sxth	r1, r1
 8010eea:	2900      	cmp	r1, #0
 8010eec:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010ef0:	dd12      	ble.n	8010f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010ef2:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8010ef6:	4604      	mov	r4, r0
 8010ef8:	9b05      	ldr	r3, [sp, #20]
 8010efa:	3b01      	subs	r3, #1
 8010efc:	9305      	str	r3, [sp, #20]
 8010efe:	3d08      	subs	r5, #8
 8010f00:	e7c4      	b.n	8010e8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8010f02:	4461      	add	r1, ip
 8010f04:	b209      	sxth	r1, r1
 8010f06:	4571      	cmp	r1, lr
 8010f08:	dc3a      	bgt.n	8010f80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010f0a:	eba2 020c 	sub.w	r2, r2, ip
 8010f0e:	b212      	sxth	r2, r2
 8010f10:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8010f14:	2a00      	cmp	r2, #0
 8010f16:	dcee      	bgt.n	8010ef6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010f18:	b00f      	add	sp, #60	; 0x3c
 8010f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f1e:	45c1      	cmp	r9, r8
 8010f20:	db2e      	blt.n	8010f80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010f22:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8010f26:	4499      	add	r9, r3
 8010f28:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8010f2c:	4498      	add	r8, r3
 8010f2e:	fa0f f989 	sxth.w	r9, r9
 8010f32:	fa0f f888 	sxth.w	r8, r8
 8010f36:	45c1      	cmp	r9, r8
 8010f38:	dc22      	bgt.n	8010f80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010f3a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8010f3e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8010f42:	fa1f f28c 	uxth.w	r2, ip
 8010f46:	4413      	add	r3, r2
 8010f48:	b29b      	uxth	r3, r3
 8010f4a:	45e6      	cmp	lr, ip
 8010f4c:	fa1f f88e 	uxth.w	r8, lr
 8010f50:	fa0f f983 	sxth.w	r9, r3
 8010f54:	db0a      	blt.n	8010f6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 8010f56:	eba3 0308 	sub.w	r3, r3, r8
 8010f5a:	1ac9      	subs	r1, r1, r3
 8010f5c:	b209      	sxth	r1, r1
 8010f5e:	2900      	cmp	r1, #0
 8010f60:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8010f64:	ddd8      	ble.n	8010f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010f66:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8010f6a:	e7c4      	b.n	8010ef6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010f6c:	4441      	add	r1, r8
 8010f6e:	b209      	sxth	r1, r1
 8010f70:	4549      	cmp	r1, r9
 8010f72:	dc05      	bgt.n	8010f80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010f74:	eba2 0208 	sub.w	r2, r2, r8
 8010f78:	b212      	sxth	r2, r2
 8010f7a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8010f7e:	e7c9      	b.n	8010f14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8010f80:	4606      	mov	r6, r0
 8010f82:	e7b9      	b.n	8010ef8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010f84:	2c00      	cmp	r4, #0
 8010f86:	f47f af7d 	bne.w	8010e84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 8010f8a:	2e00      	cmp	r6, #0
 8010f8c:	f000 81e1 	beq.w	8011352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8010f90:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8010f94:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8010f98:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8010f9c:	b2b9      	uxth	r1, r7
 8010f9e:	9105      	str	r1, [sp, #20]
 8010fa0:	9805      	ldr	r0, [sp, #20]
 8010fa2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010fa6:	4401      	add	r1, r0
 8010fa8:	b2b3      	uxth	r3, r6
 8010faa:	b289      	uxth	r1, r1
 8010fac:	441a      	add	r2, r3
 8010fae:	9106      	str	r1, [sp, #24]
 8010fb0:	b292      	uxth	r2, r2
 8010fb2:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 8010fb6:	fa0f f882 	sxth.w	r8, r2
 8010fba:	4655      	mov	r5, sl
 8010fbc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8010fc0:	9b04      	ldr	r3, [sp, #16]
 8010fc2:	2b00      	cmp	r3, #0
 8010fc4:	d058      	beq.n	8011078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8010fc6:	9903      	ldr	r1, [sp, #12]
 8010fc8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8010fcc:	f7ff fe15 	bl	8010bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010fd0:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8010fd4:	b1d8      	cbz	r0, 801100e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8010fd6:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8010fda:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8010fde:	4576      	cmp	r6, lr
 8010fe0:	dc26      	bgt.n	8011030 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8010fe2:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8010fe6:	44f4      	add	ip, lr
 8010fe8:	fa0f fc8c 	sxth.w	ip, ip
 8010fec:	45e0      	cmp	r8, ip
 8010fee:	db1f      	blt.n	8011030 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8010ff0:	428f      	cmp	r7, r1
 8010ff2:	fa1f fc81 	uxth.w	ip, r1
 8010ff6:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8010ffa:	dc0f      	bgt.n	801101c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8010ffc:	9806      	ldr	r0, [sp, #24]
 8010ffe:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011002:	eba0 0c0c 	sub.w	ip, r0, ip
 8011006:	eba1 010c 	sub.w	r1, r1, ip
 801100a:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801100e:	4620      	mov	r0, r4
 8011010:	9904      	ldr	r1, [sp, #16]
 8011012:	3901      	subs	r1, #1
 8011014:	9104      	str	r1, [sp, #16]
 8011016:	3d08      	subs	r5, #8
 8011018:	4604      	mov	r4, r0
 801101a:	e7cf      	b.n	8010fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 801101c:	4461      	add	r1, ip
 801101e:	b209      	sxth	r1, r1
 8011020:	4549      	cmp	r1, r9
 8011022:	dcf5      	bgt.n	8011010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011024:	9905      	ldr	r1, [sp, #20]
 8011026:	eba1 0c0c 	sub.w	ip, r1, ip
 801102a:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 801102e:	e7ee      	b.n	801100e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011030:	428f      	cmp	r7, r1
 8011032:	dced      	bgt.n	8011010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011034:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8011038:	4461      	add	r1, ip
 801103a:	b209      	sxth	r1, r1
 801103c:	4589      	cmp	r9, r1
 801103e:	dbe7      	blt.n	8011010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011040:	4576      	cmp	r6, lr
 8011042:	fa1f fc8e 	uxth.w	ip, lr
 8011046:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801104a:	dc08      	bgt.n	801105e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 801104c:	eba2 0c0c 	sub.w	ip, r2, ip
 8011050:	eba1 010c 	sub.w	r1, r1, ip
 8011054:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8011058:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 801105c:	e7d7      	b.n	801100e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801105e:	4461      	add	r1, ip
 8011060:	b209      	sxth	r1, r1
 8011062:	4588      	cmp	r8, r1
 8011064:	dbd4      	blt.n	8011010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011066:	eba3 0c0c 	sub.w	ip, r3, ip
 801106a:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 801106e:	e7ce      	b.n	801100e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011070:	200153da 	.word	0x200153da
 8011074:	200153d8 	.word	0x200153d8
 8011078:	2c00      	cmp	r4, #0
 801107a:	f000 816a 	beq.w	8011352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801107e:	9b02      	ldr	r3, [sp, #8]
 8011080:	3301      	adds	r3, #1
 8011082:	f000 8166 	beq.w	8011352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8011086:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 801108a:	4621      	mov	r1, r4
 801108c:	9803      	ldr	r0, [sp, #12]
 801108e:	f7ff fe27 	bl	8010ce0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011092:	b120      	cbz	r0, 801109e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8011094:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011098:	9801      	ldr	r0, [sp, #4]
 801109a:	f7ff fea9 	bl	8010df0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801109e:	9903      	ldr	r1, [sp, #12]
 80110a0:	4620      	mov	r0, r4
 80110a2:	f7ff fdaa 	bl	8010bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
 80110a6:	2800      	cmp	r0, #0
 80110a8:	f000 809b 	beq.w	80111e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80110ac:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 80110b0:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 80110b4:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80110b8:	9309      	str	r3, [sp, #36]	; 0x24
 80110ba:	b281      	uxth	r1, r0
 80110bc:	eb01 0c03 	add.w	ip, r1, r3
 80110c0:	fa1f f98c 	uxth.w	r9, ip
 80110c4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80110c8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80110cc:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 80110d0:	b2ab      	uxth	r3, r5
 80110d2:	eb03 040c 	add.w	r4, r3, ip
 80110d6:	b2a4      	uxth	r4, r4
 80110d8:	9405      	str	r4, [sp, #20]
 80110da:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 80110de:	9404      	str	r4, [sp, #16]
 80110e0:	4285      	cmp	r5, r0
 80110e2:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 80110e6:	f340 809a 	ble.w	801121e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 80110ea:	1a5b      	subs	r3, r3, r1
 80110ec:	b29b      	uxth	r3, r3
 80110ee:	4596      	cmp	lr, r2
 80110f0:	fa0f f589 	sxth.w	r5, r9
 80110f4:	b21e      	sxth	r6, r3
 80110f6:	dd2e      	ble.n	8011156 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 80110f8:	9f02      	ldr	r7, [sp, #8]
 80110fa:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 80110fe:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011102:	9f04      	ldr	r7, [sp, #16]
 8011104:	1b7f      	subs	r7, r7, r5
 8011106:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801110a:	fa1f fe8e 	uxth.w	lr, lr
 801110e:	b292      	uxth	r2, r2
 8011110:	ebae 0102 	sub.w	r1, lr, r2
 8011114:	4486      	add	lr, r0
 8011116:	442a      	add	r2, r5
 8011118:	b289      	uxth	r1, r1
 801111a:	fa0f fe8e 	sxth.w	lr, lr
 801111e:	b212      	sxth	r2, r2
 8011120:	b20c      	sxth	r4, r1
 8011122:	ebae 0202 	sub.w	r2, lr, r2
 8011126:	4367      	muls	r7, r4
 8011128:	4372      	muls	r2, r6
 801112a:	4297      	cmp	r7, r2
 801112c:	db09      	blt.n	8011142 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 801112e:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8011132:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8011136:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801113a:	449c      	add	ip, r3
 801113c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011140:	e680      	b.n	8010e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011142:	4401      	add	r1, r0
 8011144:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8011148:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 801114c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011150:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011154:	e676      	b.n	8010e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011156:	9f04      	ldr	r7, [sp, #16]
 8011158:	42bd      	cmp	r5, r7
 801115a:	da27      	bge.n	80111ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 801115c:	9902      	ldr	r1, [sp, #8]
 801115e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8011162:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 8011166:	eb04 010e 	add.w	r1, r4, lr
 801116a:	fa1f f881 	uxth.w	r8, r1
 801116e:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 8011172:	4411      	add	r1, r2
 8011174:	eba1 0108 	sub.w	r1, r1, r8
 8011178:	b289      	uxth	r1, r1
 801117a:	fa0f f988 	sxth.w	r9, r8
 801117e:	eba2 020e 	sub.w	r2, r2, lr
 8011182:	fa0f f881 	sxth.w	r8, r1
 8011186:	1b7f      	subs	r7, r7, r5
 8011188:	4372      	muls	r2, r6
 801118a:	fb08 f707 	mul.w	r7, r8, r7
 801118e:	42ba      	cmp	r2, r7
 8011190:	dc06      	bgt.n	80111a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8011192:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 8011196:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 801119a:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 801119e:	e7ca      	b.n	8011136 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80111a0:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 80111a4:	4421      	add	r1, r4
 80111a6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80111aa:	e64b      	b.n	8010e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80111ac:	9d05      	ldr	r5, [sp, #20]
 80111ae:	eba9 0505 	sub.w	r5, r9, r5
 80111b2:	b2ad      	uxth	r5, r5
 80111b4:	2c06      	cmp	r4, #6
 80111b6:	fa0f fe85 	sxth.w	lr, r5
 80111ba:	d818      	bhi.n	80111ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 80111bc:	9b04      	ldr	r3, [sp, #16]
 80111be:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 80111c2:	1c63      	adds	r3, r4, #1
 80111c4:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 80111c8:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 80111cc:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 80111d0:	9b01      	ldr	r3, [sp, #4]
 80111d2:	9d01      	ldr	r5, [sp, #4]
 80111d4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80111d8:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 80111dc:	805a      	strh	r2, [r3, #2]
 80111de:	809e      	strh	r6, [r3, #4]
 80111e0:	80d9      	strh	r1, [r3, #6]
 80111e2:	9b02      	ldr	r3, [sp, #8]
 80111e4:	3b01      	subs	r3, #1
 80111e6:	9302      	str	r3, [sp, #8]
 80111e8:	f1aa 0a08 	sub.w	sl, sl, #8
 80111ec:	e747      	b.n	801107e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 80111ee:	9a02      	ldr	r2, [sp, #8]
 80111f0:	45b6      	cmp	lr, r6
 80111f2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80111f6:	db0d      	blt.n	8011214 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 80111f8:	449c      	add	ip, r3
 80111fa:	fa1f fc8c 	uxth.w	ip, ip
 80111fe:	445a      	add	r2, fp
 8011200:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011204:	448c      	add	ip, r1
 8011206:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801120a:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 801120e:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011212:	e617      	b.n	8010e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011214:	445a      	add	r2, fp
 8011216:	44ac      	add	ip, r5
 8011218:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 801121c:	e78e      	b.n	801113c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801121e:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011222:	fa1f f18e 	uxth.w	r1, lr
 8011226:	eb01 0806 	add.w	r8, r1, r6
 801122a:	b293      	uxth	r3, r2
 801122c:	fa1f f888 	uxth.w	r8, r8
 8011230:	9306      	str	r3, [sp, #24]
 8011232:	fa0f f388 	sxth.w	r3, r8
 8011236:	9307      	str	r3, [sp, #28]
 8011238:	9f06      	ldr	r7, [sp, #24]
 801123a:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 801123e:	443b      	add	r3, r7
 8011240:	b29b      	uxth	r3, r3
 8011242:	4596      	cmp	lr, r2
 8011244:	9308      	str	r3, [sp, #32]
 8011246:	da25      	bge.n	8011294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8011248:	9905      	ldr	r1, [sp, #20]
 801124a:	eba3 0308 	sub.w	r3, r3, r8
 801124e:	eba9 0401 	sub.w	r4, r9, r1
 8011252:	b2a4      	uxth	r4, r4
 8011254:	b29b      	uxth	r3, r3
 8011256:	fa0f f984 	sxth.w	r9, r4
 801125a:	b219      	sxth	r1, r3
 801125c:	eba2 020e 	sub.w	r2, r2, lr
 8011260:	1b40      	subs	r0, r0, r5
 8011262:	fb09 f202 	mul.w	r2, r9, r2
 8011266:	4348      	muls	r0, r1
 8011268:	4282      	cmp	r2, r0
 801126a:	9a02      	ldr	r2, [sp, #8]
 801126c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011270:	445a      	add	r2, fp
 8011272:	dc06      	bgt.n	8011282 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8011274:	9b07      	ldr	r3, [sp, #28]
 8011276:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 801127a:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 801127e:	44a4      	add	ip, r4
 8011280:	e75c      	b.n	801113c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011282:	9904      	ldr	r1, [sp, #16]
 8011284:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 8011288:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 801128c:	4433      	add	r3, r6
 801128e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011292:	e5d7      	b.n	8010e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011294:	9f06      	ldr	r7, [sp, #24]
 8011296:	9b04      	ldr	r3, [sp, #16]
 8011298:	1bc9      	subs	r1, r1, r7
 801129a:	fa0f f789 	sxth.w	r7, r9
 801129e:	b289      	uxth	r1, r1
 80112a0:	429f      	cmp	r7, r3
 80112a2:	fa0f fe81 	sxth.w	lr, r1
 80112a6:	dd22      	ble.n	80112ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 80112a8:	9a05      	ldr	r2, [sp, #20]
 80112aa:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80112ae:	1b40      	subs	r0, r0, r5
 80112b0:	eba9 0202 	sub.w	r2, r9, r2
 80112b4:	9d07      	ldr	r5, [sp, #28]
 80112b6:	b292      	uxth	r2, r2
 80112b8:	eba5 0a03 	sub.w	sl, r5, r3
 80112bc:	b214      	sxth	r4, r2
 80112be:	9b02      	ldr	r3, [sp, #8]
 80112c0:	fb0e f000 	mul.w	r0, lr, r0
 80112c4:	fb04 fa0a 	mul.w	sl, r4, sl
 80112c8:	00db      	lsls	r3, r3, #3
 80112ca:	4550      	cmp	r0, sl
 80112cc:	445b      	add	r3, fp
 80112ce:	db03      	blt.n	80112d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 80112d0:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 80112d4:	4494      	add	ip, r2
 80112d6:	e731      	b.n	801113c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80112d8:	9a04      	ldr	r2, [sp, #16]
 80112da:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 80112de:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 80112e2:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 80112e6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80112ea:	4431      	add	r1, r6
 80112ec:	e75b      	b.n	80111a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 80112ee:	9b08      	ldr	r3, [sp, #32]
 80112f0:	eba3 0308 	sub.w	r3, r3, r8
 80112f4:	b29b      	uxth	r3, r3
 80112f6:	2c06      	cmp	r4, #6
 80112f8:	b21d      	sxth	r5, r3
 80112fa:	d813      	bhi.n	8011324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 80112fc:	9b07      	ldr	r3, [sp, #28]
 80112fe:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011302:	1c63      	adds	r3, r4, #1
 8011304:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 8011308:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 801130c:	9b01      	ldr	r3, [sp, #4]
 801130e:	9901      	ldr	r1, [sp, #4]
 8011310:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011314:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 8011318:	805a      	strh	r2, [r3, #2]
 801131a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801131c:	809a      	strh	r2, [r3, #4]
 801131e:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011322:	e75e      	b.n	80111e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011324:	9802      	ldr	r0, [sp, #8]
 8011326:	4575      	cmp	r5, lr
 8011328:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 801132c:	db0d      	blt.n	801134a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 801132e:	4431      	add	r1, r6
 8011330:	9b06      	ldr	r3, [sp, #24]
 8011332:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8011336:	b289      	uxth	r1, r1
 8011338:	4458      	add	r0, fp
 801133a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801133e:	4419      	add	r1, r3
 8011340:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8011344:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 8011348:	e57c      	b.n	8010e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801134a:	4458      	add	r0, fp
 801134c:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8011350:	e79c      	b.n	801128c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8011352:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 8011356:	2e07      	cmp	r6, #7
 8011358:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 801135c:	d812      	bhi.n	8011384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 801135e:	1c75      	adds	r5, r6, #1
 8011360:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8011364:	9d01      	ldr	r5, [sp, #4]
 8011366:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801136a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801136e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8011372:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8011376:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801137a:	442c      	add	r4, r5
 801137c:	8061      	strh	r1, [r4, #2]
 801137e:	80a2      	strh	r2, [r4, #4]
 8011380:	80e3      	strh	r3, [r4, #6]
 8011382:	e5c9      	b.n	8010f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011384:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011388:	3e01      	subs	r6, #1
 801138a:	445c      	add	r4, fp
 801138c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8011390:	f04f 37ff 	mov.w	r7, #4294967295
 8011394:	2500      	movs	r5, #0
 8011396:	9305      	str	r3, [sp, #20]
 8011398:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 801139c:	9302      	str	r3, [sp, #8]
 801139e:	1e72      	subs	r2, r6, #1
 80113a0:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 80113a4:	9304      	str	r3, [sp, #16]
 80113a6:	4691      	mov	r9, r2
 80113a8:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 80113ac:	f1b9 3fff 	cmp.w	r9, #4294967295
 80113b0:	bf14      	ite	ne
 80113b2:	9905      	ldrne	r1, [sp, #20]
 80113b4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80113b8:	6818      	ldr	r0, [r3, #0]
 80113ba:	9207      	str	r2, [sp, #28]
 80113bc:	bf18      	it	ne
 80113be:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80113c2:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80113c6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80113ca:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80113ce:	9306      	str	r3, [sp, #24]
 80113d0:	fb18 f801 	smulbb	r8, r8, r1
 80113d4:	6859      	ldr	r1, [r3, #4]
 80113d6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80113da:	4671      	mov	r1, lr
 80113dc:	a80c      	add	r0, sp, #48	; 0x30
 80113de:	f7fb f86d 	bl	800c4bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80113e2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80113e6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80113ea:	9b04      	ldr	r3, [sp, #16]
 80113ec:	9a02      	ldr	r2, [sp, #8]
 80113ee:	fb10 f001 	smulbb	r0, r0, r1
 80113f2:	fb02 8803 	mla	r8, r2, r3, r8
 80113f6:	eba0 0108 	sub.w	r1, r0, r8
 80113fa:	f04f 0c08 	mov.w	ip, #8
 80113fe:	fb90 f0fc 	sdiv	r0, r0, ip
 8011402:	4288      	cmp	r0, r1
 8011404:	dc20      	bgt.n	8011448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011406:	4551      	cmp	r1, sl
 8011408:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801140c:	da03      	bge.n	8011416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 801140e:	b1d9      	cbz	r1, 8011448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011410:	468a      	mov	sl, r1
 8011412:	464f      	mov	r7, r9
 8011414:	4635      	mov	r5, r6
 8011416:	f109 39ff 	add.w	r9, r9, #4294967295
 801141a:	f119 0f02 	cmn.w	r9, #2
 801141e:	d1c5      	bne.n	80113ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011420:	4616      	mov	r6, r2
 8011422:	3201      	adds	r2, #1
 8011424:	f1a4 0408 	sub.w	r4, r4, #8
 8011428:	d1b6      	bne.n	8011398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801142a:	9b01      	ldr	r3, [sp, #4]
 801142c:	b2ac      	uxth	r4, r5
 801142e:	00ed      	lsls	r5, r5, #3
 8011430:	1958      	adds	r0, r3, r5
 8011432:	1c7b      	adds	r3, r7, #1
 8011434:	d10b      	bne.n	801144e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 8011436:	4601      	mov	r1, r0
 8011438:	9803      	ldr	r0, [sp, #12]
 801143a:	f7fb f83f 	bl	800c4bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801143e:	4621      	mov	r1, r4
 8011440:	9801      	ldr	r0, [sp, #4]
 8011442:	f7ff fcd5 	bl	8010df0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011446:	e4fd      	b.n	8010e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011448:	464f      	mov	r7, r9
 801144a:	4635      	mov	r5, r6
 801144c:	e7ed      	b.n	801142a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 801144e:	9b01      	ldr	r3, [sp, #4]
 8011450:	00ff      	lsls	r7, r7, #3
 8011452:	19d9      	adds	r1, r3, r7
 8011454:	f7fb f832 	bl	800c4bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011458:	9b03      	ldr	r3, [sp, #12]
 801145a:	cb03      	ldmia	r3!, {r0, r1}
 801145c:	445f      	add	r7, fp
 801145e:	445d      	add	r5, fp
 8011460:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8011464:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 8011468:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 801146c:	9b03      	ldr	r3, [sp, #12]
 801146e:	6869      	ldr	r1, [r5, #4]
 8011470:	c303      	stmia	r3!, {r0, r1}
 8011472:	e7e4      	b.n	801143e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

08011474 <_ZN8touchgfx11Application10invalidateEv>:
 8011474:	4b09      	ldr	r3, [pc, #36]	; (801149c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8011476:	f9b3 2000 	ldrsh.w	r2, [r3]
 801147a:	4b09      	ldr	r3, [pc, #36]	; (80114a0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801147c:	b082      	sub	sp, #8
 801147e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011482:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011486:	2100      	movs	r1, #0
 8011488:	9100      	str	r1, [sp, #0]
 801148a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801148e:	ab02      	add	r3, sp, #8
 8011490:	e913 0006 	ldmdb	r3, {r1, r2}
 8011494:	b002      	add	sp, #8
 8011496:	f7ff bcbf 	b.w	8010e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801149a:	bf00      	nop
 801149c:	200153d8 	.word	0x200153d8
 80114a0:	200153da 	.word	0x200153da

080114a4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80114a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114a8:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 80114ac:	b09b      	sub	sp, #108	; 0x6c
 80114ae:	4604      	mov	r4, r0
 80114b0:	4630      	mov	r0, r6
 80114b2:	f7f9 fade 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 80114b6:	4605      	mov	r5, r0
 80114b8:	b940      	cbnz	r0, 80114cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 80114ba:	e896 0006 	ldmia.w	r6, {r1, r2}
 80114be:	4620      	mov	r0, r4
 80114c0:	f7ff fcaa 	bl	8010e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80114c4:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 80114c8:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80114cc:	4bc9      	ldr	r3, [pc, #804]	; (80117f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80114ce:	681b      	ldr	r3, [r3, #0]
 80114d0:	2b00      	cmp	r3, #0
 80114d2:	d03e      	beq.n	8011552 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 80114d4:	4dc8      	ldr	r5, [pc, #800]	; (80117f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80114d6:	4628      	mov	r0, r5
 80114d8:	f7f9 facb 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 80114dc:	4606      	mov	r6, r0
 80114de:	2800      	cmp	r0, #0
 80114e0:	d137      	bne.n	8011552 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 80114e2:	4628      	mov	r0, r5
 80114e4:	f7ff fa4a 	bl	801097c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80114e8:	6829      	ldr	r1, [r5, #0]
 80114ea:	686a      	ldr	r2, [r5, #4]
 80114ec:	4620      	mov	r0, r4
 80114ee:	f7ff fc93 	bl	8010e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80114f2:	802e      	strh	r6, [r5, #0]
 80114f4:	806e      	strh	r6, [r5, #2]
 80114f6:	80ae      	strh	r6, [r5, #4]
 80114f8:	80ee      	strh	r6, [r5, #6]
 80114fa:	ae09      	add	r6, sp, #36	; 0x24
 80114fc:	4630      	mov	r0, r6
 80114fe:	f7ff fc26 	bl	8010d4e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011502:	4abe      	ldr	r2, [pc, #760]	; (80117fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011504:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8011508:	8815      	ldrh	r5, [r2, #0]
 801150a:	9202      	str	r2, [sp, #8]
 801150c:	462b      	mov	r3, r5
 801150e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011512:	429f      	cmp	r7, r3
 8011514:	d924      	bls.n	8011560 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8011516:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801151a:	2907      	cmp	r1, #7
 801151c:	d816      	bhi.n	801154c <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 801151e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011522:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8011526:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801152a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801152e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011532:	1c4a      	adds	r2, r1, #1
 8011534:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8011538:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 801153c:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8011540:	f8a2 9002 	strh.w	r9, [r2, #2]
 8011544:	f8a2 e004 	strh.w	lr, [r2, #4]
 8011548:	f8a2 c006 	strh.w	ip, [r2, #6]
 801154c:	3301      	adds	r3, #1
 801154e:	b29b      	uxth	r3, r3
 8011550:	e7df      	b.n	8011512 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8011552:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011556:	2b00      	cmp	r3, #0
 8011558:	d1cf      	bne.n	80114fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 801155a:	b01b      	add	sp, #108	; 0x6c
 801155c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011560:	462f      	mov	r7, r5
 8011562:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8011566:	42bb      	cmp	r3, r7
 8011568:	d90b      	bls.n	8011582 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 801156a:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 801156e:	4620      	mov	r0, r4
 8011570:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8011574:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8011578:	3701      	adds	r7, #1
 801157a:	f7ff fc4d 	bl	8010e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801157e:	b2bf      	uxth	r7, r7
 8011580:	e7ef      	b.n	8011562 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8011582:	4a9f      	ldr	r2, [pc, #636]	; (8011800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8011584:	6813      	ldr	r3, [r2, #0]
 8011586:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801158a:	2b01      	cmp	r3, #1
 801158c:	4690      	mov	r8, r2
 801158e:	f040 80e6 	bne.w	801175e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8011592:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8011596:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801159a:	4629      	mov	r1, r5
 801159c:	33aa      	adds	r3, #170	; 0xaa
 801159e:	2500      	movs	r5, #0
 80115a0:	428f      	cmp	r7, r1
 80115a2:	f103 0308 	add.w	r3, r3, #8
 80115a6:	dd0a      	ble.n	80115be <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 80115a8:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80115ac:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 80115b0:	4402      	add	r2, r0
 80115b2:	b212      	sxth	r2, r2
 80115b4:	4295      	cmp	r5, r2
 80115b6:	bfb8      	it	lt
 80115b8:	4615      	movlt	r5, r2
 80115ba:	3101      	adds	r1, #1
 80115bc:	e7f0      	b.n	80115a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 80115be:	4b91      	ldr	r3, [pc, #580]	; (8011804 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80115c0:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 80115c4:	881b      	ldrh	r3, [r3, #0]
 80115c6:	2b0f      	cmp	r3, #15
 80115c8:	bf88      	it	hi
 80115ca:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 80115ce:	f04f 0300 	mov.w	r3, #0
 80115d2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80115d6:	bf98      	it	ls
 80115d8:	f04f 0a01 	movls.w	sl, #1
 80115dc:	46d8      	mov	r8, fp
 80115de:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 80115e2:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 80115e6:	4438      	add	r0, r7
 80115e8:	b207      	sxth	r7, r0
 80115ea:	f8db 0000 	ldr.w	r0, [fp]
 80115ee:	42bd      	cmp	r5, r7
 80115f0:	6803      	ldr	r3, [r0, #0]
 80115f2:	f340 8084 	ble.w	80116fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80115f6:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80115fa:	4798      	blx	r3
 80115fc:	eb07 030a 	add.w	r3, r7, sl
 8011600:	4298      	cmp	r0, r3
 8011602:	da07      	bge.n	8011614 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011604:	4285      	cmp	r5, r0
 8011606:	dd05      	ble.n	8011614 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011608:	4287      	cmp	r7, r0
 801160a:	dd6d      	ble.n	80116e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801160c:	2f00      	cmp	r7, #0
 801160e:	dd6b      	ble.n	80116e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011610:	4628      	mov	r0, r5
 8011612:	e004      	b.n	801161e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011614:	4287      	cmp	r7, r0
 8011616:	dcfb      	bgt.n	8011610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8011618:	42a8      	cmp	r0, r5
 801161a:	bfa8      	it	ge
 801161c:	4628      	movge	r0, r5
 801161e:	4b7a      	ldr	r3, [pc, #488]	; (8011808 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011620:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011624:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011628:	f8ad 3018 	strh.w	r3, [sp, #24]
 801162c:	9b02      	ldr	r3, [sp, #8]
 801162e:	1bc0      	subs	r0, r0, r7
 8011630:	2200      	movs	r2, #0
 8011632:	881f      	ldrh	r7, [r3, #0]
 8011634:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011638:	f8ad 001a 	strh.w	r0, [sp, #26]
 801163c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011640:	42bb      	cmp	r3, r7
 8011642:	d9cc      	bls.n	80115de <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011644:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8011648:	ab07      	add	r3, sp, #28
 801164a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801164e:	6851      	ldr	r1, [r2, #4]
 8011650:	c303      	stmia	r3!, {r0, r1}
 8011652:	a905      	add	r1, sp, #20
 8011654:	a807      	add	r0, sp, #28
 8011656:	f7ff fad0 	bl	8010bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
 801165a:	2800      	cmp	r0, #0
 801165c:	d04c      	beq.n	80116f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801165e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011662:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8011666:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801166a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801166e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011672:	9303      	str	r3, [sp, #12]
 8011674:	4686      	mov	lr, r0
 8011676:	4290      	cmp	r0, r2
 8011678:	4448      	add	r0, r9
 801167a:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 801167e:	bfb8      	it	lt
 8011680:	4696      	movlt	lr, r2
 8011682:	444a      	add	r2, r9
 8011684:	4299      	cmp	r1, r3
 8011686:	b280      	uxth	r0, r0
 8011688:	b292      	uxth	r2, r2
 801168a:	468c      	mov	ip, r1
 801168c:	fa0f f982 	sxth.w	r9, r2
 8011690:	bfb8      	it	lt
 8011692:	469c      	movlt	ip, r3
 8011694:	b203      	sxth	r3, r0
 8011696:	454b      	cmp	r3, r9
 8011698:	bfb8      	it	lt
 801169a:	4602      	movlt	r2, r0
 801169c:	eba2 020e 	sub.w	r2, r2, lr
 80116a0:	f8ad 2020 	strh.w	r2, [sp, #32]
 80116a4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80116a8:	9b03      	ldr	r3, [sp, #12]
 80116aa:	f8ad e01c 	strh.w	lr, [sp, #28]
 80116ae:	4411      	add	r1, r2
 80116b0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80116b4:	f8ad c01e 	strh.w	ip, [sp, #30]
 80116b8:	4413      	add	r3, r2
 80116ba:	b289      	uxth	r1, r1
 80116bc:	b29b      	uxth	r3, r3
 80116be:	b208      	sxth	r0, r1
 80116c0:	b21a      	sxth	r2, r3
 80116c2:	4290      	cmp	r0, r2
 80116c4:	bfb8      	it	lt
 80116c6:	460b      	movlt	r3, r1
 80116c8:	eba3 030c 	sub.w	r3, r3, ip
 80116cc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80116d0:	a807      	add	r0, sp, #28
 80116d2:	f7f9 f9ce 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 80116d6:	b920      	cbnz	r0, 80116e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80116d8:	6823      	ldr	r3, [r4, #0]
 80116da:	a907      	add	r1, sp, #28
 80116dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80116de:	4620      	mov	r0, r4
 80116e0:	4798      	blx	r3
 80116e2:	3701      	adds	r7, #1
 80116e4:	b2bf      	uxth	r7, r7
 80116e6:	e7a9      	b.n	801163c <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80116e8:	f8d8 0000 	ldr.w	r0, [r8]
 80116ec:	6803      	ldr	r3, [r0, #0]
 80116ee:	2101      	movs	r1, #1
 80116f0:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80116f4:	4798      	blx	r3
 80116f6:	e772      	b.n	80115de <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 80116f8:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80116fc:	e7e8      	b.n	80116d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80116fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011700:	4798      	blx	r3
 8011702:	4b42      	ldr	r3, [pc, #264]	; (801180c <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011704:	781b      	ldrb	r3, [r3, #0]
 8011706:	2b00      	cmp	r3, #0
 8011708:	f43f af27 	beq.w	801155a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 801170c:	2300      	movs	r3, #0
 801170e:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011712:	9b02      	ldr	r3, [sp, #8]
 8011714:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011718:	881b      	ldrh	r3, [r3, #0]
 801171a:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 801171e:	429d      	cmp	r5, r3
 8011720:	f67f af1b 	bls.w	801155a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011724:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011728:	2907      	cmp	r1, #7
 801172a:	d815      	bhi.n	8011758 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 801172c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011730:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011734:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011738:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801173c:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011740:	1c4a      	adds	r2, r1, #1
 8011742:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011746:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801174a:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 801174e:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011752:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011756:	80d7      	strh	r7, [r2, #6]
 8011758:	3301      	adds	r3, #1
 801175a:	b29b      	uxth	r3, r3
 801175c:	e7df      	b.n	801171e <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 801175e:	2b02      	cmp	r3, #2
 8011760:	f040 8136 	bne.w	80119d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011764:	4b2a      	ldr	r3, [pc, #168]	; (8011810 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011766:	781b      	ldrb	r3, [r3, #0]
 8011768:	2b01      	cmp	r3, #1
 801176a:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 801176e:	f000 809c 	beq.w	80118aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011772:	9b02      	ldr	r3, [sp, #8]
 8011774:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011778:	f8b3 b000 	ldrh.w	fp, [r3]
 801177c:	f10b 0b01 	add.w	fp, fp, #1
 8011780:	fa1f fb8b 	uxth.w	fp, fp
 8011784:	2a00      	cmp	r2, #0
 8011786:	d0bc      	beq.n	8011702 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011788:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 801178c:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011790:	441d      	add	r5, r3
 8011792:	b22d      	sxth	r5, r5
 8011794:	4659      	mov	r1, fp
 8011796:	f04f 0800 	mov.w	r8, #0
 801179a:	b28b      	uxth	r3, r1
 801179c:	429a      	cmp	r2, r3
 801179e:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80117a2:	f240 80c1 	bls.w	8011928 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 80117a6:	4427      	add	r7, r4
 80117a8:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 80117ac:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 80117b0:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 80117b4:	4563      	cmp	r3, ip
 80117b6:	4608      	mov	r0, r1
 80117b8:	f340 80a3 	ble.w	8011902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 80117bc:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 80117c0:	4465      	add	r5, ip
 80117c2:	b22d      	sxth	r5, r5
 80117c4:	429d      	cmp	r5, r3
 80117c6:	bfa8      	it	ge
 80117c8:	461d      	movge	r5, r3
 80117ca:	3101      	adds	r1, #1
 80117cc:	4680      	mov	r8, r0
 80117ce:	e7e4      	b.n	801179a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 80117d0:	d10b      	bne.n	80117ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 80117d2:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 80117d6:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 80117da:	458c      	cmp	ip, r1
 80117dc:	bfb4      	ite	lt
 80117de:	469c      	movlt	ip, r3
 80117e0:	46bc      	movge	ip, r7
 80117e2:	4572      	cmp	r2, lr
 80117e4:	bfb8      	it	lt
 80117e6:	4672      	movlt	r2, lr
 80117e8:	e088      	b.n	80118fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 80117ea:	428a      	cmp	r2, r1
 80117ec:	bfb8      	it	lt
 80117ee:	460a      	movlt	r2, r1
 80117f0:	46bc      	mov	ip, r7
 80117f2:	e083      	b.n	80118fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 80117f4:	20015424 	.word	0x20015424
 80117f8:	20015430 	.word	0x20015430
 80117fc:	2000008c 	.word	0x2000008c
 8011800:	200153e4 	.word	0x200153e4
 8011804:	200153da 	.word	0x200153da
 8011808:	200153d8 	.word	0x200153d8
 801180c:	200153e2 	.word	0x200153e2
 8011810:	200153dc 	.word	0x200153dc
 8011814:	1961      	adds	r1, r4, r5
 8011816:	ab07      	add	r3, sp, #28
 8011818:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 801181c:	6849      	ldr	r1, [r1, #4]
 801181e:	c303      	stmia	r3!, {r0, r1}
 8011820:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011824:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011828:	2b13      	cmp	r3, #19
 801182a:	bfd8      	it	le
 801182c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011830:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011834:	440b      	add	r3, r1
 8011836:	1a9b      	subs	r3, r3, r2
 8011838:	a807      	add	r0, sp, #28
 801183a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801183e:	f7ff f8b7 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011842:	a807      	add	r0, sp, #28
 8011844:	f7f9 f915 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011848:	bb78      	cbnz	r0, 80118aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801184a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801184e:	f8d8 0000 	ldr.w	r0, [r8]
 8011852:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011856:	f8d0 e000 	ldr.w	lr, [r0]
 801185a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801185e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011862:	f1bc 0f14 	cmp.w	ip, #20
 8011866:	bfa8      	it	ge
 8011868:	f04f 0c14 	movge.w	ip, #20
 801186c:	fa1f fc8c 	uxth.w	ip, ip
 8011870:	f8cd c000 	str.w	ip, [sp]
 8011874:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8011878:	47d0      	blx	sl
 801187a:	4682      	mov	sl, r0
 801187c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011880:	a807      	add	r0, sp, #28
 8011882:	f7ff f87b 	bl	801097c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011886:	6823      	ldr	r3, [r4, #0]
 8011888:	4425      	add	r5, r4
 801188a:	4620      	mov	r0, r4
 801188c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801188e:	a907      	add	r1, sp, #28
 8011890:	4798      	blx	r3
 8011892:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8011896:	eba0 000a 	sub.w	r0, r0, sl
 801189a:	b200      	sxth	r0, r0
 801189c:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 80118a0:	b918      	cbnz	r0, 80118aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80118a2:	b2b9      	uxth	r1, r7
 80118a4:	4648      	mov	r0, r9
 80118a6:	f7ff faa3 	bl	8010df0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80118aa:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 80118ae:	f1bb 0f00 	cmp.w	fp, #0
 80118b2:	f43f af26 	beq.w	8011702 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80118b6:	9b02      	ldr	r3, [sp, #8]
 80118b8:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80118bc:	881b      	ldrh	r3, [r3, #0]
 80118be:	3301      	adds	r3, #1
 80118c0:	b29b      	uxth	r3, r3
 80118c2:	2700      	movs	r7, #0
 80118c4:	b299      	uxth	r1, r3
 80118c6:	458b      	cmp	fp, r1
 80118c8:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 80118cc:	d9a2      	bls.n	8011814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 80118ce:	4425      	add	r5, r4
 80118d0:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 80118d4:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 80118d8:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 80118dc:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 80118e0:	4408      	add	r0, r1
 80118e2:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 80118e6:	4471      	add	r1, lr
 80118e8:	b200      	sxth	r0, r0
 80118ea:	b209      	sxth	r1, r1
 80118ec:	4288      	cmp	r0, r1
 80118ee:	469c      	mov	ip, r3
 80118f0:	f6bf af6e 	bge.w	80117d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 80118f4:	4586      	cmp	lr, r0
 80118f6:	4672      	mov	r2, lr
 80118f8:	bfb8      	it	lt
 80118fa:	4602      	movlt	r2, r0
 80118fc:	3301      	adds	r3, #1
 80118fe:	4667      	mov	r7, ip
 8011900:	e7e0      	b.n	80118c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011902:	d10c      	bne.n	801191e <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011904:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011908:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 801190c:	4287      	cmp	r7, r0
 801190e:	bfb4      	ite	lt
 8011910:	4608      	movlt	r0, r1
 8011912:	4640      	movge	r0, r8
 8011914:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011918:	443b      	add	r3, r7
 801191a:	b21b      	sxth	r3, r3
 801191c:	e752      	b.n	80117c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 801191e:	4565      	cmp	r5, ip
 8011920:	bfa8      	it	ge
 8011922:	4665      	movge	r5, ip
 8011924:	4640      	mov	r0, r8
 8011926:	e750      	b.n	80117ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011928:	eb09 0007 	add.w	r0, r9, r7
 801192c:	4427      	add	r7, r4
 801192e:	9203      	str	r2, [sp, #12]
 8011930:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011934:	f1ba 0f13 	cmp.w	sl, #19
 8011938:	bfde      	ittt	le
 801193a:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 801193e:	4455      	addle	r5, sl
 8011940:	b22d      	sxthle	r5, r5
 8011942:	f7f9 f896 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011946:	9a03      	ldr	r2, [sp, #12]
 8011948:	2800      	cmp	r0, #0
 801194a:	f47f af1b 	bne.w	8011784 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 801194e:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011952:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011956:	482a      	ldr	r0, [pc, #168]	; (8011a00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011958:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 801195c:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011960:	6800      	ldr	r0, [r0, #0]
 8011962:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011966:	1aad      	subs	r5, r5, r2
 8011968:	2d14      	cmp	r5, #20
 801196a:	f8ad 201e 	strh.w	r2, [sp, #30]
 801196e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011972:	bfa8      	it	ge
 8011974:	2514      	movge	r5, #20
 8011976:	f8d0 c000 	ldr.w	ip, [r0]
 801197a:	b2ad      	uxth	r5, r5
 801197c:	fa1f fa8a 	uxth.w	sl, sl
 8011980:	4555      	cmp	r5, sl
 8011982:	bf94      	ite	ls
 8011984:	9500      	strls	r5, [sp, #0]
 8011986:	f8cd a000 	strhi.w	sl, [sp]
 801198a:	b292      	uxth	r2, r2
 801198c:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011990:	b29b      	uxth	r3, r3
 8011992:	b289      	uxth	r1, r1
 8011994:	47a8      	blx	r5
 8011996:	6823      	ldr	r3, [r4, #0]
 8011998:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801199c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801199e:	a907      	add	r1, sp, #28
 80119a0:	4620      	mov	r0, r4
 80119a2:	4798      	blx	r3
 80119a4:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80119a8:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 80119ac:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 80119b0:	1a5b      	subs	r3, r3, r1
 80119b2:	440a      	add	r2, r1
 80119b4:	b21b      	sxth	r3, r3
 80119b6:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 80119ba:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 80119be:	2b00      	cmp	r3, #0
 80119c0:	f47f aed7 	bne.w	8011772 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 80119c4:	fa1f f188 	uxth.w	r1, r8
 80119c8:	4648      	mov	r0, r9
 80119ca:	f7ff fa11 	bl	8010df0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80119ce:	e6d0      	b.n	8011772 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 80119d0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80119d4:	42ab      	cmp	r3, r5
 80119d6:	f67f ae94 	bls.w	8011702 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80119da:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 80119de:	ab07      	add	r3, sp, #28
 80119e0:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80119e4:	6851      	ldr	r1, [r2, #4]
 80119e6:	c303      	stmia	r3!, {r0, r1}
 80119e8:	a807      	add	r0, sp, #28
 80119ea:	f7f9 f842 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 80119ee:	b920      	cbnz	r0, 80119fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 80119f0:	6823      	ldr	r3, [r4, #0]
 80119f2:	a907      	add	r1, sp, #28
 80119f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80119f6:	4620      	mov	r0, r4
 80119f8:	4798      	blx	r3
 80119fa:	3501      	adds	r5, #1
 80119fc:	b2ad      	uxth	r5, r5
 80119fe:	e7e7      	b.n	80119d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011a00:	200153e4 	.word	0x200153e4

08011a04 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011a04:	4b03      	ldr	r3, [pc, #12]	; (8011a14 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011a06:	2200      	movs	r2, #0
 8011a08:	801a      	strh	r2, [r3, #0]
 8011a0a:	805a      	strh	r2, [r3, #2]
 8011a0c:	809a      	strh	r2, [r3, #4]
 8011a0e:	80da      	strh	r2, [r3, #6]
 8011a10:	4770      	bx	lr
 8011a12:	bf00      	nop
 8011a14:	20015430 	.word	0x20015430

08011a18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a1c:	4606      	mov	r6, r0
 8011a1e:	b09d      	sub	sp, #116	; 0x74
 8011a20:	a803      	add	r0, sp, #12
 8011a22:	4614      	mov	r4, r2
 8011a24:	468a      	mov	sl, r1
 8011a26:	461d      	mov	r5, r3
 8011a28:	f000 fe67 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 8011a2c:	6833      	ldr	r3, [r6, #0]
 8011a2e:	4630      	mov	r0, r6
 8011a30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011a32:	4798      	blx	r3
 8011a34:	6833      	ldr	r3, [r6, #0]
 8011a36:	4607      	mov	r7, r0
 8011a38:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011a3a:	4630      	mov	r0, r6
 8011a3c:	4798      	blx	r3
 8011a3e:	462a      	mov	r2, r5
 8011a40:	9000      	str	r0, [sp, #0]
 8011a42:	4621      	mov	r1, r4
 8011a44:	463b      	mov	r3, r7
 8011a46:	a803      	add	r0, sp, #12
 8011a48:	f000 feb2 	bl	80127b0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011a4c:	2500      	movs	r5, #0
 8011a4e:	462c      	mov	r4, r5
 8011a50:	46a9      	mov	r9, r5
 8011a52:	46a8      	mov	r8, r5
 8011a54:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011a58:	2300      	movs	r3, #0
 8011a5a:	9302      	str	r3, [sp, #8]
 8011a5c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011a60:	429c      	cmp	r4, r3
 8011a62:	d002      	beq.n	8011a6a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011a64:	455c      	cmp	r4, fp
 8011a66:	bf18      	it	ne
 8011a68:	4625      	movne	r5, r4
 8011a6a:	ab02      	add	r3, sp, #8
 8011a6c:	4632      	mov	r2, r6
 8011a6e:	4651      	mov	r1, sl
 8011a70:	a803      	add	r0, sp, #12
 8011a72:	f001 f99f 	bl	8012db4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011a76:	4604      	mov	r4, r0
 8011a78:	b108      	cbz	r0, 8011a7e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011a7a:	280a      	cmp	r0, #10
 8011a7c:	d10a      	bne.n	8011a94 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011a7e:	45c1      	cmp	r9, r8
 8011a80:	bf38      	it	cc
 8011a82:	46c1      	movcc	r9, r8
 8011a84:	f04f 0800 	mov.w	r8, #0
 8011a88:	2c00      	cmp	r4, #0
 8011a8a:	d1e5      	bne.n	8011a58 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011a8c:	4648      	mov	r0, r9
 8011a8e:	b01d      	add	sp, #116	; 0x74
 8011a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a94:	9a02      	ldr	r2, [sp, #8]
 8011a96:	2a00      	cmp	r2, #0
 8011a98:	d0de      	beq.n	8011a58 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011a9a:	7b57      	ldrb	r7, [r2, #13]
 8011a9c:	6833      	ldr	r3, [r6, #0]
 8011a9e:	8894      	ldrh	r4, [r2, #4]
 8011aa0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011aa2:	007f      	lsls	r7, r7, #1
 8011aa4:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011aa8:	7a97      	ldrb	r7, [r2, #10]
 8011aaa:	4629      	mov	r1, r5
 8011aac:	4307      	orrs	r7, r0
 8011aae:	4630      	mov	r0, r6
 8011ab0:	4798      	blx	r3
 8011ab2:	4438      	add	r0, r7
 8011ab4:	4480      	add	r8, r0
 8011ab6:	fa1f f888 	uxth.w	r8, r8
 8011aba:	e7e5      	b.n	8011a88 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011abc <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011abc:	b508      	push	{r3, lr}
 8011abe:	6803      	ldr	r3, [r0, #0]
 8011ac0:	68db      	ldr	r3, [r3, #12]
 8011ac2:	4798      	blx	r3
 8011ac4:	b128      	cbz	r0, 8011ad2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011ac6:	7b43      	ldrb	r3, [r0, #13]
 8011ac8:	7a80      	ldrb	r0, [r0, #10]
 8011aca:	005b      	lsls	r3, r3, #1
 8011acc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011ad0:	4318      	orrs	r0, r3
 8011ad2:	bd08      	pop	{r3, pc}

08011ad4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011ad4:	b40e      	push	{r1, r2, r3}
 8011ad6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ad8:	b09e      	sub	sp, #120	; 0x78
 8011ada:	ab23      	add	r3, sp, #140	; 0x8c
 8011adc:	4605      	mov	r5, r0
 8011ade:	f853 4b04 	ldr.w	r4, [r3], #4
 8011ae2:	9303      	str	r3, [sp, #12]
 8011ae4:	a805      	add	r0, sp, #20
 8011ae6:	f000 fe08 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 8011aea:	682b      	ldr	r3, [r5, #0]
 8011aec:	4628      	mov	r0, r5
 8011aee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011af0:	4798      	blx	r3
 8011af2:	682b      	ldr	r3, [r5, #0]
 8011af4:	4606      	mov	r6, r0
 8011af6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011af8:	4628      	mov	r0, r5
 8011afa:	4798      	blx	r3
 8011afc:	4633      	mov	r3, r6
 8011afe:	ae1e      	add	r6, sp, #120	; 0x78
 8011b00:	4621      	mov	r1, r4
 8011b02:	9000      	str	r0, [sp, #0]
 8011b04:	9a03      	ldr	r2, [sp, #12]
 8011b06:	2400      	movs	r4, #0
 8011b08:	a805      	add	r0, sp, #20
 8011b0a:	f000 fe51 	bl	80127b0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011b0e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011b12:	462a      	mov	r2, r5
 8011b14:	4633      	mov	r3, r6
 8011b16:	4621      	mov	r1, r4
 8011b18:	a805      	add	r0, sp, #20
 8011b1a:	f001 f94b 	bl	8012db4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011b1e:	b1f0      	cbz	r0, 8011b5e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011b20:	280a      	cmp	r0, #10
 8011b22:	d018      	beq.n	8011b56 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011b24:	9f04      	ldr	r7, [sp, #16]
 8011b26:	b1b7      	cbz	r7, 8011b56 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011b28:	7b78      	ldrb	r0, [r7, #13]
 8011b2a:	7a3b      	ldrb	r3, [r7, #8]
 8011b2c:	88aa      	ldrh	r2, [r5, #4]
 8011b2e:	00c1      	lsls	r1, r0, #3
 8011b30:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011b34:	4319      	orrs	r1, r3
 8011b36:	0643      	lsls	r3, r0, #25
 8011b38:	bf44      	itt	mi
 8011b3a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011b3e:	b219      	sxthmi	r1, r3
 8011b40:	0100      	lsls	r0, r0, #4
 8011b42:	79fb      	ldrb	r3, [r7, #7]
 8011b44:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011b48:	4303      	orrs	r3, r0
 8011b4a:	4413      	add	r3, r2
 8011b4c:	1a5b      	subs	r3, r3, r1
 8011b4e:	b29b      	uxth	r3, r3
 8011b50:	42a3      	cmp	r3, r4
 8011b52:	bfc8      	it	gt
 8011b54:	b21c      	sxthgt	r4, r3
 8011b56:	4633      	mov	r3, r6
 8011b58:	462a      	mov	r2, r5
 8011b5a:	2100      	movs	r1, #0
 8011b5c:	e7dc      	b.n	8011b18 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011b5e:	b2a0      	uxth	r0, r4
 8011b60:	b01e      	add	sp, #120	; 0x78
 8011b62:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011b66:	b003      	add	sp, #12
 8011b68:	4770      	bx	lr

08011b6a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011b6a:	b40e      	push	{r1, r2, r3}
 8011b6c:	b570      	push	{r4, r5, r6, lr}
 8011b6e:	b09d      	sub	sp, #116	; 0x74
 8011b70:	ab21      	add	r3, sp, #132	; 0x84
 8011b72:	4604      	mov	r4, r0
 8011b74:	f853 5b04 	ldr.w	r5, [r3], #4
 8011b78:	9302      	str	r3, [sp, #8]
 8011b7a:	a803      	add	r0, sp, #12
 8011b7c:	f000 fdbd 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 8011b80:	6823      	ldr	r3, [r4, #0]
 8011b82:	4620      	mov	r0, r4
 8011b84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011b86:	4798      	blx	r3
 8011b88:	6823      	ldr	r3, [r4, #0]
 8011b8a:	4606      	mov	r6, r0
 8011b8c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011b8e:	4620      	mov	r0, r4
 8011b90:	4798      	blx	r3
 8011b92:	4633      	mov	r3, r6
 8011b94:	9000      	str	r0, [sp, #0]
 8011b96:	9a02      	ldr	r2, [sp, #8]
 8011b98:	4629      	mov	r1, r5
 8011b9a:	a803      	add	r0, sp, #12
 8011b9c:	f000 fe08 	bl	80127b0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011ba0:	a803      	add	r0, sp, #12
 8011ba2:	f001 f9d5 	bl	8012f50 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011ba6:	2401      	movs	r4, #1
 8011ba8:	b2a3      	uxth	r3, r4
 8011baa:	b140      	cbz	r0, 8011bbe <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011bac:	280a      	cmp	r0, #10
 8011bae:	bf08      	it	eq
 8011bb0:	3301      	addeq	r3, #1
 8011bb2:	a803      	add	r0, sp, #12
 8011bb4:	bf08      	it	eq
 8011bb6:	b21c      	sxtheq	r4, r3
 8011bb8:	f001 f9ca 	bl	8012f50 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011bbc:	e7f4      	b.n	8011ba8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011bbe:	4618      	mov	r0, r3
 8011bc0:	b01d      	add	sp, #116	; 0x74
 8011bc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011bc6:	b003      	add	sp, #12
 8011bc8:	4770      	bx	lr

08011bca <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011bca:	b40e      	push	{r1, r2, r3}
 8011bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011bce:	b09e      	sub	sp, #120	; 0x78
 8011bd0:	ab23      	add	r3, sp, #140	; 0x8c
 8011bd2:	4604      	mov	r4, r0
 8011bd4:	f853 5b04 	ldr.w	r5, [r3], #4
 8011bd8:	9303      	str	r3, [sp, #12]
 8011bda:	a805      	add	r0, sp, #20
 8011bdc:	f000 fd8d 	bl	80126fa <_ZN8touchgfx12TextProviderC1Ev>
 8011be0:	6823      	ldr	r3, [r4, #0]
 8011be2:	4620      	mov	r0, r4
 8011be4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011be6:	4798      	blx	r3
 8011be8:	6823      	ldr	r3, [r4, #0]
 8011bea:	4606      	mov	r6, r0
 8011bec:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011bee:	4620      	mov	r0, r4
 8011bf0:	4798      	blx	r3
 8011bf2:	4633      	mov	r3, r6
 8011bf4:	4629      	mov	r1, r5
 8011bf6:	9000      	str	r0, [sp, #0]
 8011bf8:	9a03      	ldr	r2, [sp, #12]
 8011bfa:	a805      	add	r0, sp, #20
 8011bfc:	ad1e      	add	r5, sp, #120	; 0x78
 8011bfe:	f000 fdd7 	bl	80127b0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011c02:	2100      	movs	r1, #0
 8011c04:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011c08:	4622      	mov	r2, r4
 8011c0a:	462b      	mov	r3, r5
 8011c0c:	a805      	add	r0, sp, #20
 8011c0e:	f001 f8d1 	bl	8012db4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011c12:	26ff      	movs	r6, #255	; 0xff
 8011c14:	b1d8      	cbz	r0, 8011c4e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8011c16:	280a      	cmp	r0, #10
 8011c18:	d012      	beq.n	8011c40 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011c1a:	9804      	ldr	r0, [sp, #16]
 8011c1c:	b180      	cbz	r0, 8011c40 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011c1e:	7b47      	ldrb	r7, [r0, #13]
 8011c20:	7922      	ldrb	r2, [r4, #4]
 8011c22:	00fb      	lsls	r3, r7, #3
 8011c24:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011c28:	7a03      	ldrb	r3, [r0, #8]
 8011c2a:	430b      	orrs	r3, r1
 8011c2c:	0679      	lsls	r1, r7, #25
 8011c2e:	bf44      	itt	mi
 8011c30:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011c34:	b21b      	sxthmi	r3, r3
 8011c36:	1ad3      	subs	r3, r2, r3
 8011c38:	b2db      	uxtb	r3, r3
 8011c3a:	429e      	cmp	r6, r3
 8011c3c:	bf28      	it	cs
 8011c3e:	461e      	movcs	r6, r3
 8011c40:	462b      	mov	r3, r5
 8011c42:	4622      	mov	r2, r4
 8011c44:	2100      	movs	r1, #0
 8011c46:	a805      	add	r0, sp, #20
 8011c48:	f001 f8b4 	bl	8012db4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011c4c:	e7e2      	b.n	8011c14 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8011c4e:	4630      	mov	r0, r6
 8011c50:	b01e      	add	sp, #120	; 0x78
 8011c52:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011c56:	b003      	add	sp, #12
 8011c58:	4770      	bx	lr

08011c5a <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011c5a:	b513      	push	{r0, r1, r4, lr}
 8011c5c:	6803      	ldr	r3, [r0, #0]
 8011c5e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011c62:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011c66:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011c6a:	2400      	movs	r4, #0
 8011c6c:	9400      	str	r4, [sp, #0]
 8011c6e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011c72:	691b      	ldr	r3, [r3, #16]
 8011c74:	4669      	mov	r1, sp
 8011c76:	4798      	blx	r3
 8011c78:	b002      	add	sp, #8
 8011c7a:	bd10      	pop	{r4, pc}

08011c7c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011c7c:	b538      	push	{r3, r4, r5, lr}
 8011c7e:	680b      	ldr	r3, [r1, #0]
 8011c80:	460c      	mov	r4, r1
 8011c82:	68db      	ldr	r3, [r3, #12]
 8011c84:	4605      	mov	r5, r0
 8011c86:	4798      	blx	r3
 8011c88:	6823      	ldr	r3, [r4, #0]
 8011c8a:	4620      	mov	r0, r4
 8011c8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c8e:	4629      	mov	r1, r5
 8011c90:	4798      	blx	r3
 8011c92:	4628      	mov	r0, r5
 8011c94:	bd38      	pop	{r3, r4, r5, pc}

08011c96 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8011c96:	b410      	push	{r4}
 8011c98:	880a      	ldrh	r2, [r1, #0]
 8011c9a:	8884      	ldrh	r4, [r0, #4]
 8011c9c:	4422      	add	r2, r4
 8011c9e:	800a      	strh	r2, [r1, #0]
 8011ca0:	88c4      	ldrh	r4, [r0, #6]
 8011ca2:	884a      	ldrh	r2, [r1, #2]
 8011ca4:	4422      	add	r2, r4
 8011ca6:	804a      	strh	r2, [r1, #2]
 8011ca8:	6940      	ldr	r0, [r0, #20]
 8011caa:	b120      	cbz	r0, 8011cb6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011cac:	6803      	ldr	r3, [r0, #0]
 8011cae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011cb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cb4:	4718      	bx	r3
 8011cb6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011cba:	4770      	bx	lr

08011cbc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011cbc:	b570      	push	{r4, r5, r6, lr}
 8011cbe:	8882      	ldrh	r2, [r0, #4]
 8011cc0:	880b      	ldrh	r3, [r1, #0]
 8011cc2:	4413      	add	r3, r2
 8011cc4:	800b      	strh	r3, [r1, #0]
 8011cc6:	88c2      	ldrh	r2, [r0, #6]
 8011cc8:	884b      	ldrh	r3, [r1, #2]
 8011cca:	460c      	mov	r4, r1
 8011ccc:	4413      	add	r3, r2
 8011cce:	804b      	strh	r3, [r1, #2]
 8011cd0:	4605      	mov	r5, r0
 8011cd2:	1d01      	adds	r1, r0, #4
 8011cd4:	4620      	mov	r0, r4
 8011cd6:	f7f8 fe89 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 8011cda:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011cde:	2b00      	cmp	r3, #0
 8011ce0:	dd0b      	ble.n	8011cfa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011ce2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011ce6:	2b00      	cmp	r3, #0
 8011ce8:	dd07      	ble.n	8011cfa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011cea:	6968      	ldr	r0, [r5, #20]
 8011cec:	b128      	cbz	r0, 8011cfa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011cee:	6803      	ldr	r3, [r0, #0]
 8011cf0:	4621      	mov	r1, r4
 8011cf2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011cf4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cf8:	4718      	bx	r3
 8011cfa:	bd70      	pop	{r4, r5, r6, pc}

08011cfc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011cfc:	b570      	push	{r4, r5, r6, lr}
 8011cfe:	8882      	ldrh	r2, [r0, #4]
 8011d00:	880b      	ldrh	r3, [r1, #0]
 8011d02:	4413      	add	r3, r2
 8011d04:	800b      	strh	r3, [r1, #0]
 8011d06:	88c2      	ldrh	r2, [r0, #6]
 8011d08:	884b      	ldrh	r3, [r1, #2]
 8011d0a:	460c      	mov	r4, r1
 8011d0c:	4413      	add	r3, r2
 8011d0e:	804b      	strh	r3, [r1, #2]
 8011d10:	4605      	mov	r5, r0
 8011d12:	1d01      	adds	r1, r0, #4
 8011d14:	4620      	mov	r0, r4
 8011d16:	f7f8 fe69 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 8011d1a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011d1e:	2b00      	cmp	r3, #0
 8011d20:	dd18      	ble.n	8011d54 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011d22:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011d26:	2b00      	cmp	r3, #0
 8011d28:	dd14      	ble.n	8011d54 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011d2a:	6968      	ldr	r0, [r5, #20]
 8011d2c:	b128      	cbz	r0, 8011d3a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8011d2e:	6803      	ldr	r3, [r0, #0]
 8011d30:	4621      	mov	r1, r4
 8011d32:	691b      	ldr	r3, [r3, #16]
 8011d34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d38:	4718      	bx	r3
 8011d3a:	4b07      	ldr	r3, [pc, #28]	; (8011d58 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011d3c:	681b      	ldr	r3, [r3, #0]
 8011d3e:	3304      	adds	r3, #4
 8011d40:	429d      	cmp	r5, r3
 8011d42:	d107      	bne.n	8011d54 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011d44:	f7fe fff2 	bl	8010d2c <_ZN8touchgfx11Application11getInstanceEv>
 8011d48:	6821      	ldr	r1, [r4, #0]
 8011d4a:	6862      	ldr	r2, [r4, #4]
 8011d4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d50:	f7ff b862 	b.w	8010e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011d54:	bd70      	pop	{r4, r5, r6, pc}
 8011d56:	bf00      	nop
 8011d58:	20015428 	.word	0x20015428

08011d5c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011d5c:	b570      	push	{r4, r5, r6, lr}
 8011d5e:	4604      	mov	r4, r0
 8011d60:	4616      	mov	r6, r2
 8011d62:	460d      	mov	r5, r1
 8011d64:	b901      	cbnz	r1, 8011d68 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011d66:	b192      	cbz	r2, 8011d8e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011d68:	6823      	ldr	r3, [r4, #0]
 8011d6a:	4620      	mov	r0, r4
 8011d6c:	699b      	ldr	r3, [r3, #24]
 8011d6e:	4798      	blx	r3
 8011d70:	88e2      	ldrh	r2, [r4, #6]
 8011d72:	88a1      	ldrh	r1, [r4, #4]
 8011d74:	4432      	add	r2, r6
 8011d76:	4429      	add	r1, r5
 8011d78:	4620      	mov	r0, r4
 8011d7a:	b212      	sxth	r2, r2
 8011d7c:	b209      	sxth	r1, r1
 8011d7e:	f7f0 ff5d 	bl	8002c3c <_ZN8touchgfx8Drawable5setXYEss>
 8011d82:	6823      	ldr	r3, [r4, #0]
 8011d84:	4620      	mov	r0, r4
 8011d86:	699b      	ldr	r3, [r3, #24]
 8011d88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d8c:	4718      	bx	r3
 8011d8e:	bd70      	pop	{r4, r5, r6, pc}

08011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8011d90:	b510      	push	{r4, lr}
 8011d92:	4604      	mov	r4, r0
 8011d94:	4608      	mov	r0, r1
 8011d96:	2300      	movs	r3, #0
 8011d98:	8023      	strh	r3, [r4, #0]
 8011d9a:	8063      	strh	r3, [r4, #2]
 8011d9c:	6803      	ldr	r3, [r0, #0]
 8011d9e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011da2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011da6:	80a1      	strh	r1, [r4, #4]
 8011da8:	80e2      	strh	r2, [r4, #6]
 8011daa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011dac:	4621      	mov	r1, r4
 8011dae:	4798      	blx	r3
 8011db0:	4620      	mov	r0, r4
 8011db2:	bd10      	pop	{r4, pc}

08011db4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8011db4:	b530      	push	{r4, r5, lr}
 8011db6:	8083      	strh	r3, [r0, #4]
 8011db8:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8011dbc:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8011dc0:	7183      	strb	r3, [r0, #6]
 8011dc2:	79c3      	ldrb	r3, [r0, #7]
 8011dc4:	6101      	str	r1, [r0, #16]
 8011dc6:	f365 0306 	bfi	r3, r5, #0, #7
 8011dca:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8011dce:	8282      	strh	r2, [r0, #20]
 8011dd0:	f365 13c7 	bfi	r3, r5, #7, #1
 8011dd4:	71c3      	strb	r3, [r0, #7]
 8011dd6:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8011dda:	7203      	strb	r3, [r0, #8]
 8011ddc:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8011de0:	7243      	strb	r3, [r0, #9]
 8011de2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011de6:	8143      	strh	r3, [r0, #10]
 8011de8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8011dec:	8183      	strh	r3, [r0, #12]
 8011dee:	4b01      	ldr	r3, [pc, #4]	; (8011df4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8011df0:	6003      	str	r3, [r0, #0]
 8011df2:	bd30      	pop	{r4, r5, pc}
 8011df4:	08023f50 	.word	0x08023f50

08011df8 <_ZNK8touchgfx9ConstFont4findEt>:
 8011df8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011dfa:	6904      	ldr	r4, [r0, #16]
 8011dfc:	b3bc      	cbz	r4, 8011e6e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011dfe:	88a3      	ldrh	r3, [r4, #4]
 8011e00:	8a82      	ldrh	r2, [r0, #20]
 8011e02:	1acb      	subs	r3, r1, r3
 8011e04:	f102 32ff 	add.w	r2, r2, #4294967295
 8011e08:	d431      	bmi.n	8011e6e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e0a:	4293      	cmp	r3, r2
 8011e0c:	dd0c      	ble.n	8011e28 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011e0e:	230e      	movs	r3, #14
 8011e10:	fb03 4302 	mla	r3, r3, r2, r4
 8011e14:	889b      	ldrh	r3, [r3, #4]
 8011e16:	1a5b      	subs	r3, r3, r1
 8011e18:	1ad3      	subs	r3, r2, r3
 8011e1a:	429a      	cmp	r2, r3
 8011e1c:	db27      	blt.n	8011e6e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e1e:	2b00      	cmp	r3, #0
 8011e20:	bfbc      	itt	lt
 8011e22:	2302      	movlt	r3, #2
 8011e24:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011e28:	2500      	movs	r5, #0
 8011e2a:	260e      	movs	r6, #14
 8011e2c:	4295      	cmp	r5, r2
 8011e2e:	dc1e      	bgt.n	8011e6e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e30:	fb06 4003 	mla	r0, r6, r3, r4
 8011e34:	8887      	ldrh	r7, [r0, #4]
 8011e36:	42b9      	cmp	r1, r7
 8011e38:	d01a      	beq.n	8011e70 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011e3a:	d20d      	bcs.n	8011e58 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011e3c:	1e5a      	subs	r2, r3, #1
 8011e3e:	4295      	cmp	r5, r2
 8011e40:	dc15      	bgt.n	8011e6e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e42:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011e46:	1a5b      	subs	r3, r3, r1
 8011e48:	1ad3      	subs	r3, r2, r3
 8011e4a:	429a      	cmp	r2, r3
 8011e4c:	db0f      	blt.n	8011e6e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e4e:	429d      	cmp	r5, r3
 8011e50:	ddec      	ble.n	8011e2c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011e52:	1953      	adds	r3, r2, r5
 8011e54:	105b      	asrs	r3, r3, #1
 8011e56:	e7e9      	b.n	8011e2c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011e58:	1c5d      	adds	r5, r3, #1
 8011e5a:	42aa      	cmp	r2, r5
 8011e5c:	db07      	blt.n	8011e6e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e5e:	8a43      	ldrh	r3, [r0, #18]
 8011e60:	1acb      	subs	r3, r1, r3
 8011e62:	442b      	add	r3, r5
 8011e64:	429d      	cmp	r5, r3
 8011e66:	dc02      	bgt.n	8011e6e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e68:	429a      	cmp	r2, r3
 8011e6a:	dadf      	bge.n	8011e2c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011e6c:	e7f1      	b.n	8011e52 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011e6e:	2000      	movs	r0, #0
 8011e70:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011e72 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011e72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011e74:	4604      	mov	r4, r0
 8011e76:	4617      	mov	r7, r2
 8011e78:	461e      	mov	r6, r3
 8011e7a:	b911      	cbnz	r1, 8011e82 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011e7c:	2500      	movs	r5, #0
 8011e7e:	4628      	mov	r0, r5
 8011e80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011e82:	290a      	cmp	r1, #10
 8011e84:	d0fa      	beq.n	8011e7c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011e86:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011e8a:	4291      	cmp	r1, r2
 8011e8c:	d0f6      	beq.n	8011e7c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011e8e:	f242 020b 	movw	r2, #8203	; 0x200b
 8011e92:	4291      	cmp	r1, r2
 8011e94:	d0f2      	beq.n	8011e7c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011e96:	f7ff ffaf 	bl	8011df8 <_ZNK8touchgfx9ConstFont4findEt>
 8011e9a:	4605      	mov	r5, r0
 8011e9c:	b950      	cbnz	r0, 8011eb4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011e9e:	6823      	ldr	r3, [r4, #0]
 8011ea0:	4620      	mov	r0, r4
 8011ea2:	691b      	ldr	r3, [r3, #16]
 8011ea4:	4798      	blx	r3
 8011ea6:	4601      	mov	r1, r0
 8011ea8:	4620      	mov	r0, r4
 8011eaa:	f7ff ffa5 	bl	8011df8 <_ZNK8touchgfx9ConstFont4findEt>
 8011eae:	4605      	mov	r5, r0
 8011eb0:	2800      	cmp	r0, #0
 8011eb2:	d0e3      	beq.n	8011e7c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011eb4:	6823      	ldr	r3, [r4, #0]
 8011eb6:	4629      	mov	r1, r5
 8011eb8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011eba:	4620      	mov	r0, r4
 8011ebc:	4798      	blx	r3
 8011ebe:	6038      	str	r0, [r7, #0]
 8011ec0:	6823      	ldr	r3, [r4, #0]
 8011ec2:	4620      	mov	r0, r4
 8011ec4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011ec6:	4798      	blx	r3
 8011ec8:	7030      	strb	r0, [r6, #0]
 8011eca:	e7d8      	b.n	8011e7e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011ecc <_ZN8touchgfx4clzuEm>:
 8011ecc:	4603      	mov	r3, r0
 8011ece:	b1c8      	cbz	r0, 8011f04 <_ZN8touchgfx4clzuEm+0x38>
 8011ed0:	0c02      	lsrs	r2, r0, #16
 8011ed2:	0412      	lsls	r2, r2, #16
 8011ed4:	b9a2      	cbnz	r2, 8011f00 <_ZN8touchgfx4clzuEm+0x34>
 8011ed6:	0403      	lsls	r3, r0, #16
 8011ed8:	2010      	movs	r0, #16
 8011eda:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011ede:	bf04      	itt	eq
 8011ee0:	021b      	lsleq	r3, r3, #8
 8011ee2:	3008      	addeq	r0, #8
 8011ee4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011ee8:	bf04      	itt	eq
 8011eea:	011b      	lsleq	r3, r3, #4
 8011eec:	3004      	addeq	r0, #4
 8011eee:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8011ef2:	bf04      	itt	eq
 8011ef4:	009b      	lsleq	r3, r3, #2
 8011ef6:	3002      	addeq	r0, #2
 8011ef8:	2b00      	cmp	r3, #0
 8011efa:	db04      	blt.n	8011f06 <_ZN8touchgfx4clzuEm+0x3a>
 8011efc:	3001      	adds	r0, #1
 8011efe:	4770      	bx	lr
 8011f00:	2000      	movs	r0, #0
 8011f02:	e7ea      	b.n	8011eda <_ZN8touchgfx4clzuEm+0xe>
 8011f04:	2020      	movs	r0, #32
 8011f06:	4770      	bx	lr

08011f08 <_ZN8touchgfx7muldivuEmmmRm>:
 8011f08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f0c:	4680      	mov	r8, r0
 8011f0e:	460f      	mov	r7, r1
 8011f10:	4615      	mov	r5, r2
 8011f12:	461e      	mov	r6, r3
 8011f14:	f7ff ffda 	bl	8011ecc <_ZN8touchgfx4clzuEm>
 8011f18:	b998      	cbnz	r0, 8011f42 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 8011f1a:	4608      	mov	r0, r1
 8011f1c:	f7ff ffd6 	bl	8011ecc <_ZN8touchgfx4clzuEm>
 8011f20:	2800      	cmp	r0, #0
 8011f22:	dd08      	ble.n	8011f36 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8011f24:	4633      	mov	r3, r6
 8011f26:	462a      	mov	r2, r5
 8011f28:	4641      	mov	r1, r8
 8011f2a:	4638      	mov	r0, r7
 8011f2c:	f7ff ffec 	bl	8011f08 <_ZN8touchgfx7muldivuEmmmRm>
 8011f30:	b003      	add	sp, #12
 8011f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f36:	f04f 33ff 	mov.w	r3, #4294967295
 8011f3a:	6033      	str	r3, [r6, #0]
 8011f3c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8011f40:	e7f6      	b.n	8011f30 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8011f42:	fa31 f900 	lsrs.w	r9, r1, r0
 8011f46:	fb01 f308 	mul.w	r3, r1, r8
 8011f4a:	d105      	bne.n	8011f58 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8011f4c:	fbb3 f0f5 	udiv	r0, r3, r5
 8011f50:	fb05 3510 	mls	r5, r5, r0, r3
 8011f54:	6035      	str	r5, [r6, #0]
 8011f56:	e7eb      	b.n	8011f30 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8011f58:	2301      	movs	r3, #1
 8011f5a:	fa08 fb00 	lsl.w	fp, r8, r0
 8011f5e:	fa03 f000 	lsl.w	r0, r3, r0
 8011f62:	3801      	subs	r0, #1
 8011f64:	462a      	mov	r2, r5
 8011f66:	4633      	mov	r3, r6
 8011f68:	4641      	mov	r1, r8
 8011f6a:	4038      	ands	r0, r7
 8011f6c:	f7ff ffcc 	bl	8011f08 <_ZN8touchgfx7muldivuEmmmRm>
 8011f70:	fbbb faf5 	udiv	sl, fp, r5
 8011f74:	462a      	mov	r2, r5
 8011f76:	4607      	mov	r7, r0
 8011f78:	ab01      	add	r3, sp, #4
 8011f7a:	fb05 b11a 	mls	r1, r5, sl, fp
 8011f7e:	4648      	mov	r0, r9
 8011f80:	f7ff ffc2 	bl	8011f08 <_ZN8touchgfx7muldivuEmmmRm>
 8011f84:	9b01      	ldr	r3, [sp, #4]
 8011f86:	6832      	ldr	r2, [r6, #0]
 8011f88:	fb09 f40a 	mul.w	r4, r9, sl
 8011f8c:	441a      	add	r2, r3
 8011f8e:	fbb2 f3f5 	udiv	r3, r2, r5
 8011f92:	441c      	add	r4, r3
 8011f94:	443c      	add	r4, r7
 8011f96:	4420      	add	r0, r4
 8011f98:	fb05 2513 	mls	r5, r5, r3, r2
 8011f9c:	e7da      	b.n	8011f54 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08011f9e <_ZN8touchgfx6muldivElllRl>:
 8011f9e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011fa0:	2800      	cmp	r0, #0
 8011fa2:	bfba      	itte	lt
 8011fa4:	4240      	neglt	r0, r0
 8011fa6:	f04f 34ff 	movlt.w	r4, #4294967295
 8011faa:	2401      	movge	r4, #1
 8011fac:	2900      	cmp	r1, #0
 8011fae:	bfbc      	itt	lt
 8011fb0:	4249      	neglt	r1, r1
 8011fb2:	4264      	neglt	r4, r4
 8011fb4:	2a00      	cmp	r2, #0
 8011fb6:	bfb6      	itet	lt
 8011fb8:	4265      	neglt	r5, r4
 8011fba:	4625      	movge	r5, r4
 8011fbc:	4252      	neglt	r2, r2
 8011fbe:	4288      	cmp	r0, r1
 8011fc0:	461e      	mov	r6, r3
 8011fc2:	bfc2      	ittt	gt
 8011fc4:	4603      	movgt	r3, r0
 8011fc6:	4608      	movgt	r0, r1
 8011fc8:	4619      	movgt	r1, r3
 8011fca:	ab01      	add	r3, sp, #4
 8011fcc:	f7ff ff9c 	bl	8011f08 <_ZN8touchgfx7muldivuEmmmRm>
 8011fd0:	9b01      	ldr	r3, [sp, #4]
 8011fd2:	4368      	muls	r0, r5
 8011fd4:	435c      	muls	r4, r3
 8011fd6:	6034      	str	r4, [r6, #0]
 8011fd8:	b002      	add	sp, #8
 8011fda:	bd70      	pop	{r4, r5, r6, pc}

08011fdc <_ZN8touchgfx6muldivElll>:
 8011fdc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011fde:	4606      	mov	r6, r0
 8011fe0:	ab01      	add	r3, sp, #4
 8011fe2:	460d      	mov	r5, r1
 8011fe4:	4614      	mov	r4, r2
 8011fe6:	f7ff ffda 	bl	8011f9e <_ZN8touchgfx6muldivElllRl>
 8011fea:	2e00      	cmp	r6, #0
 8011fec:	db20      	blt.n	8012030 <_ZN8touchgfx6muldivElll+0x54>
 8011fee:	bf14      	ite	ne
 8011ff0:	2301      	movne	r3, #1
 8011ff2:	2300      	moveq	r3, #0
 8011ff4:	2d00      	cmp	r5, #0
 8011ff6:	db1e      	blt.n	8012036 <_ZN8touchgfx6muldivElll+0x5a>
 8011ff8:	bf14      	ite	ne
 8011ffa:	2201      	movne	r2, #1
 8011ffc:	2200      	moveq	r2, #0
 8011ffe:	2c00      	cmp	r4, #0
 8012000:	fb03 f202 	mul.w	r2, r3, r2
 8012004:	db1a      	blt.n	801203c <_ZN8touchgfx6muldivElll+0x60>
 8012006:	bf14      	ite	ne
 8012008:	2301      	movne	r3, #1
 801200a:	2300      	moveq	r3, #0
 801200c:	4353      	muls	r3, r2
 801200e:	2b01      	cmp	r3, #1
 8012010:	d117      	bne.n	8012042 <_ZN8touchgfx6muldivElll+0x66>
 8012012:	9b01      	ldr	r3, [sp, #4]
 8012014:	2c00      	cmp	r4, #0
 8012016:	bfb8      	it	lt
 8012018:	4264      	neglt	r4, r4
 801201a:	2b00      	cmp	r3, #0
 801201c:	f104 0401 	add.w	r4, r4, #1
 8012020:	bfb8      	it	lt
 8012022:	425b      	neglt	r3, r3
 8012024:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8012028:	db00      	blt.n	801202c <_ZN8touchgfx6muldivElll+0x50>
 801202a:	3001      	adds	r0, #1
 801202c:	b002      	add	sp, #8
 801202e:	bd70      	pop	{r4, r5, r6, pc}
 8012030:	f04f 33ff 	mov.w	r3, #4294967295
 8012034:	e7de      	b.n	8011ff4 <_ZN8touchgfx6muldivElll+0x18>
 8012036:	f04f 32ff 	mov.w	r2, #4294967295
 801203a:	e7e0      	b.n	8011ffe <_ZN8touchgfx6muldivElll+0x22>
 801203c:	f04f 33ff 	mov.w	r3, #4294967295
 8012040:	e7e4      	b.n	801200c <_ZN8touchgfx6muldivElll+0x30>
 8012042:	3301      	adds	r3, #1
 8012044:	d1f2      	bne.n	801202c <_ZN8touchgfx6muldivElll+0x50>
 8012046:	9b01      	ldr	r3, [sp, #4]
 8012048:	2c00      	cmp	r4, #0
 801204a:	bfb8      	it	lt
 801204c:	4264      	neglt	r4, r4
 801204e:	2b00      	cmp	r3, #0
 8012050:	bfb8      	it	lt
 8012052:	425b      	neglt	r3, r3
 8012054:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8012058:	bfc8      	it	gt
 801205a:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801205e:	e7e5      	b.n	801202c <_ZN8touchgfx6muldivElll+0x50>

08012060 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012060:	2000      	movs	r0, #0
 8012062:	4770      	bx	lr

08012064 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012064:	2001      	movs	r0, #1
 8012066:	4770      	bx	lr

08012068 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8012068:	2002      	movs	r0, #2
 801206a:	4770      	bx	lr

0801206c <_ZN8touchgfx6ScreenD1Ev>:
 801206c:	4770      	bx	lr

0801206e <_ZN8touchgfx12GestureEventD1Ev>:
 801206e:	4770      	bx	lr

08012070 <_ZN8touchgfx9DragEventD1Ev>:
 8012070:	4770      	bx	lr

08012072 <_ZN8touchgfx10ClickEventD1Ev>:
 8012072:	4770      	bx	lr

08012074 <_ZN8touchgfx10ClickEventD0Ev>:
 8012074:	b510      	push	{r4, lr}
 8012076:	210c      	movs	r1, #12
 8012078:	4604      	mov	r4, r0
 801207a:	f00e f973 	bl	8020364 <_ZdlPvj>
 801207e:	4620      	mov	r0, r4
 8012080:	bd10      	pop	{r4, pc}

08012082 <_ZN8touchgfx9DragEventD0Ev>:
 8012082:	b510      	push	{r4, lr}
 8012084:	2110      	movs	r1, #16
 8012086:	4604      	mov	r4, r0
 8012088:	f00e f96c 	bl	8020364 <_ZdlPvj>
 801208c:	4620      	mov	r0, r4
 801208e:	bd10      	pop	{r4, pc}

08012090 <_ZN8touchgfx12GestureEventD0Ev>:
 8012090:	b510      	push	{r4, lr}
 8012092:	210c      	movs	r1, #12
 8012094:	4604      	mov	r4, r0
 8012096:	f00e f965 	bl	8020364 <_ZdlPvj>
 801209a:	4620      	mov	r0, r4
 801209c:	bd10      	pop	{r4, pc}

0801209e <_ZN8touchgfx6ScreenD0Ev>:
 801209e:	b510      	push	{r4, lr}
 80120a0:	213c      	movs	r1, #60	; 0x3c
 80120a2:	4604      	mov	r4, r0
 80120a4:	f00e f95e 	bl	8020364 <_ZdlPvj>
 80120a8:	4620      	mov	r0, r4
 80120aa:	bd10      	pop	{r4, pc}

080120ac <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80120ac:	b530      	push	{r4, r5, lr}
 80120ae:	460d      	mov	r5, r1
 80120b0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80120b2:	b087      	sub	sp, #28
 80120b4:	4604      	mov	r4, r0
 80120b6:	b301      	cbz	r1, 80120fa <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80120b8:	a801      	add	r0, sp, #4
 80120ba:	f7ff fe69 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80120be:	892a      	ldrh	r2, [r5, #8]
 80120c0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80120c4:	7928      	ldrb	r0, [r5, #4]
 80120c6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80120ca:	f88d 0010 	strb.w	r0, [sp, #16]
 80120ce:	1ad2      	subs	r2, r2, r3
 80120d0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80120d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80120d4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80120d8:	441a      	add	r2, r3
 80120da:	896b      	ldrh	r3, [r5, #10]
 80120dc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80120e0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80120e4:	1b5b      	subs	r3, r3, r5
 80120e6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80120e8:	442b      	add	r3, r5
 80120ea:	4d05      	ldr	r5, [pc, #20]	; (8012100 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80120ec:	9503      	str	r5, [sp, #12]
 80120ee:	f8ad 3016 	strh.w	r3, [sp, #22]
 80120f2:	6803      	ldr	r3, [r0, #0]
 80120f4:	a903      	add	r1, sp, #12
 80120f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80120f8:	4798      	blx	r3
 80120fa:	b007      	add	sp, #28
 80120fc:	bd30      	pop	{r4, r5, pc}
 80120fe:	bf00      	nop
 8012100:	08023fd0 	.word	0x08023fd0

08012104 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012108:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801210a:	b08a      	sub	sp, #40	; 0x28
 801210c:	4604      	mov	r4, r0
 801210e:	460d      	mov	r5, r1
 8012110:	b113      	cbz	r3, 8012118 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012112:	790b      	ldrb	r3, [r1, #4]
 8012114:	2b00      	cmp	r3, #0
 8012116:	d044      	beq.n	80121a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012118:	f104 0804 	add.w	r8, r4, #4
 801211c:	4641      	mov	r1, r8
 801211e:	a803      	add	r0, sp, #12
 8012120:	f7ff fe36 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012124:	792b      	ldrb	r3, [r5, #4]
 8012126:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801212a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801212e:	b983      	cbnz	r3, 8012152 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012130:	892a      	ldrh	r2, [r5, #8]
 8012132:	88e9      	ldrh	r1, [r5, #6]
 8012134:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8012138:	1b92      	subs	r2, r2, r6
 801213a:	1bc9      	subs	r1, r1, r7
 801213c:	9301      	str	r3, [sp, #4]
 801213e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012142:	9300      	str	r3, [sp, #0]
 8012144:	b212      	sxth	r2, r2
 8012146:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801214a:	b209      	sxth	r1, r1
 801214c:	4640      	mov	r0, r8
 801214e:	f7f8 fb69 	bl	800a824 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012152:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012154:	b329      	cbz	r1, 80121a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012156:	a805      	add	r0, sp, #20
 8012158:	f7ff fe1a 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801215c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012160:	792b      	ldrb	r3, [r5, #4]
 8012162:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012164:	f88d 3020 	strb.w	r3, [sp, #32]
 8012168:	1abf      	subs	r7, r7, r2
 801216a:	88ea      	ldrh	r2, [r5, #6]
 801216c:	4417      	add	r7, r2
 801216e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8012170:	4417      	add	r7, r2
 8012172:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012176:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801217a:	1ab6      	subs	r6, r6, r2
 801217c:	892a      	ldrh	r2, [r5, #8]
 801217e:	4416      	add	r6, r2
 8012180:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012182:	4416      	add	r6, r2
 8012184:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8012188:	4a07      	ldr	r2, [pc, #28]	; (80121a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801218a:	9207      	str	r2, [sp, #28]
 801218c:	2600      	movs	r6, #0
 801218e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012192:	6803      	ldr	r3, [r0, #0]
 8012194:	a907      	add	r1, sp, #28
 8012196:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012198:	4798      	blx	r3
 801219a:	792b      	ldrb	r3, [r5, #4]
 801219c:	b10b      	cbz	r3, 80121a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801219e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80121a2:	b00a      	add	sp, #40	; 0x28
 80121a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80121a8:	08023fa8 	.word	0x08023fa8

080121ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80121ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121b0:	460c      	mov	r4, r1
 80121b2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80121b4:	b088      	sub	sp, #32
 80121b6:	4605      	mov	r5, r0
 80121b8:	2900      	cmp	r1, #0
 80121ba:	d06d      	beq.n	8012298 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80121bc:	4668      	mov	r0, sp
 80121be:	f7ff fde7 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80121c2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80121c4:	88e3      	ldrh	r3, [r4, #6]
 80121c6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80121ca:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80121ce:	440b      	add	r3, r1
 80121d0:	b21b      	sxth	r3, r3
 80121d2:	4543      	cmp	r3, r8
 80121d4:	db31      	blt.n	801223a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80121d6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80121da:	44c4      	add	ip, r8
 80121dc:	fa0f fc8c 	sxth.w	ip, ip
 80121e0:	4563      	cmp	r3, ip
 80121e2:	da2a      	bge.n	801223a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80121e4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80121e6:	8926      	ldrh	r6, [r4, #8]
 80121e8:	4416      	add	r6, r2
 80121ea:	b236      	sxth	r6, r6
 80121ec:	42be      	cmp	r6, r7
 80121ee:	db24      	blt.n	801223a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80121f0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80121f4:	4438      	add	r0, r7
 80121f6:	b200      	sxth	r0, r0
 80121f8:	4286      	cmp	r6, r0
 80121fa:	da1e      	bge.n	801223a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80121fc:	8963      	ldrh	r3, [r4, #10]
 80121fe:	4419      	add	r1, r3
 8012200:	b209      	sxth	r1, r1
 8012202:	4541      	cmp	r1, r8
 8012204:	db08      	blt.n	8012218 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012206:	4561      	cmp	r1, ip
 8012208:	da06      	bge.n	8012218 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801220a:	89a3      	ldrh	r3, [r4, #12]
 801220c:	441a      	add	r2, r3
 801220e:	b212      	sxth	r2, r2
 8012210:	42ba      	cmp	r2, r7
 8012212:	db01      	blt.n	8012218 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012214:	4282      	cmp	r2, r0
 8012216:	db10      	blt.n	801223a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012218:	4b21      	ldr	r3, [pc, #132]	; (80122a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801221a:	9304      	str	r3, [sp, #16]
 801221c:	2302      	movs	r3, #2
 801221e:	f88d 3014 	strb.w	r3, [sp, #20]
 8012222:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012224:	2300      	movs	r3, #0
 8012226:	f8ad 3016 	strh.w	r3, [sp, #22]
 801222a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801222e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012232:	6803      	ldr	r3, [r0, #0]
 8012234:	a904      	add	r1, sp, #16
 8012236:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012238:	4798      	blx	r3
 801223a:	1d29      	adds	r1, r5, #4
 801223c:	a802      	add	r0, sp, #8
 801223e:	f7ff fda7 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012242:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012246:	88e0      	ldrh	r0, [r4, #6]
 8012248:	7921      	ldrb	r1, [r4, #4]
 801224a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801224e:	8922      	ldrh	r2, [r4, #8]
 8012250:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8012252:	f88d 1014 	strb.w	r1, [sp, #20]
 8012256:	eba3 0808 	sub.w	r8, r3, r8
 801225a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801225e:	1bdf      	subs	r7, r3, r7
 8012260:	b2bb      	uxth	r3, r7
 8012262:	fa1f f888 	uxth.w	r8, r8
 8012266:	8967      	ldrh	r7, [r4, #10]
 8012268:	89a4      	ldrh	r4, [r4, #12]
 801226a:	4440      	add	r0, r8
 801226c:	4460      	add	r0, ip
 801226e:	441a      	add	r2, r3
 8012270:	44b8      	add	r8, r7
 8012272:	4423      	add	r3, r4
 8012274:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012278:	4433      	add	r3, r6
 801227a:	4432      	add	r2, r6
 801227c:	44e0      	add	r8, ip
 801227e:	4c09      	ldr	r4, [pc, #36]	; (80122a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012280:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012282:	9404      	str	r4, [sp, #16]
 8012284:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012288:	f8ad 801a 	strh.w	r8, [sp, #26]
 801228c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012290:	6803      	ldr	r3, [r0, #0]
 8012292:	a904      	add	r1, sp, #16
 8012294:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012296:	4798      	blx	r3
 8012298:	b008      	add	sp, #32
 801229a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801229e:	bf00      	nop
 80122a0:	08023fa8 	.word	0x08023fa8
 80122a4:	08023fbc 	.word	0x08023fbc

080122a8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80122a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80122aa:	4604      	mov	r4, r0
 80122ac:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80122b0:	3201      	adds	r2, #1
 80122b2:	d112      	bne.n	80122da <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80122b4:	6803      	ldr	r3, [r0, #0]
 80122b6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80122ba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80122be:	f8ad 1004 	strh.w	r1, [sp, #4]
 80122c2:	2500      	movs	r5, #0
 80122c4:	9500      	str	r5, [sp, #0]
 80122c6:	466d      	mov	r5, sp
 80122c8:	4629      	mov	r1, r5
 80122ca:	f8ad 2006 	strh.w	r2, [sp, #6]
 80122ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80122d0:	4798      	blx	r3
 80122d2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80122d6:	e884 0003 	stmia.w	r4, {r0, r1}
 80122da:	4620      	mov	r0, r4
 80122dc:	b003      	add	sp, #12
 80122de:	bd30      	pop	{r4, r5, pc}

080122e0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80122e0:	b513      	push	{r0, r1, r4, lr}
 80122e2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80122e6:	3301      	adds	r3, #1
 80122e8:	4604      	mov	r4, r0
 80122ea:	d109      	bne.n	8012300 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80122ec:	4601      	mov	r1, r0
 80122ee:	4668      	mov	r0, sp
 80122f0:	f7ff fd4e 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80122f4:	f8bd 3000 	ldrh.w	r3, [sp]
 80122f8:	8423      	strh	r3, [r4, #32]
 80122fa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80122fe:	8463      	strh	r3, [r4, #34]	; 0x22
 8012300:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012304:	b002      	add	sp, #8
 8012306:	bd10      	pop	{r4, pc}

08012308 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012308:	b513      	push	{r0, r1, r4, lr}
 801230a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801230e:	3301      	adds	r3, #1
 8012310:	4604      	mov	r4, r0
 8012312:	d109      	bne.n	8012328 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012314:	4601      	mov	r1, r0
 8012316:	4668      	mov	r0, sp
 8012318:	f7ff fd3a 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801231c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012320:	8423      	strh	r3, [r4, #32]
 8012322:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012326:	8463      	strh	r3, [r4, #34]	; 0x22
 8012328:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801232c:	b002      	add	sp, #8
 801232e:	bd10      	pop	{r4, pc}

08012330 <_ZN8touchgfx6ScreenC1Ev>:
 8012330:	b570      	push	{r4, r5, r6, lr}
 8012332:	4605      	mov	r5, r0
 8012334:	4b16      	ldr	r3, [pc, #88]	; (8012390 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012336:	f845 3b04 	str.w	r3, [r5], #4
 801233a:	2300      	movs	r3, #0
 801233c:	8103      	strh	r3, [r0, #8]
 801233e:	8143      	strh	r3, [r0, #10]
 8012340:	8183      	strh	r3, [r0, #12]
 8012342:	81c3      	strh	r3, [r0, #14]
 8012344:	8203      	strh	r3, [r0, #16]
 8012346:	8243      	strh	r3, [r0, #18]
 8012348:	8283      	strh	r3, [r0, #20]
 801234a:	82c3      	strh	r3, [r0, #22]
 801234c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012350:	6203      	str	r3, [r0, #32]
 8012352:	8483      	strh	r3, [r0, #36]	; 0x24
 8012354:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012356:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801235a:	4a0e      	ldr	r2, [pc, #56]	; (8012394 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801235c:	6343      	str	r3, [r0, #52]	; 0x34
 801235e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8012362:	4b0d      	ldr	r3, [pc, #52]	; (8012398 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012364:	6042      	str	r2, [r0, #4]
 8012366:	f9b3 6000 	ldrsh.w	r6, [r3]
 801236a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801236c:	4a0b      	ldr	r2, [pc, #44]	; (801239c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801236e:	4604      	mov	r4, r0
 8012370:	2101      	movs	r1, #1
 8012372:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8012376:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801237a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801237e:	4628      	mov	r0, r5
 8012380:	4798      	blx	r3
 8012382:	6863      	ldr	r3, [r4, #4]
 8012384:	4628      	mov	r0, r5
 8012386:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012388:	4631      	mov	r1, r6
 801238a:	4798      	blx	r3
 801238c:	4620      	mov	r0, r4
 801238e:	bd70      	pop	{r4, r5, r6, pc}
 8012390:	08023fe4 	.word	0x08023fe4
 8012394:	08023400 	.word	0x08023400
 8012398:	200153da 	.word	0x200153da
 801239c:	200153d8 	.word	0x200153d8

080123a0 <_ZN8touchgfx6Screen4drawEv>:
 80123a0:	b507      	push	{r0, r1, r2, lr}
 80123a2:	4b09      	ldr	r3, [pc, #36]	; (80123c8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80123a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80123a8:	4b08      	ldr	r3, [pc, #32]	; (80123cc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80123aa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80123ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80123b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80123b6:	6803      	ldr	r3, [r0, #0]
 80123b8:	2100      	movs	r1, #0
 80123ba:	9100      	str	r1, [sp, #0]
 80123bc:	689b      	ldr	r3, [r3, #8]
 80123be:	4669      	mov	r1, sp
 80123c0:	4798      	blx	r3
 80123c2:	b003      	add	sp, #12
 80123c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80123c8:	200153d8 	.word	0x200153d8
 80123cc:	200153da 	.word	0x200153da

080123d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80123d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123d4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80123d8:	2b00      	cmp	r3, #0
 80123da:	b089      	sub	sp, #36	; 0x24
 80123dc:	4680      	mov	r8, r0
 80123de:	460c      	mov	r4, r1
 80123e0:	4615      	mov	r5, r2
 80123e2:	dd0e      	ble.n	8012402 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80123e4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80123e8:	2b00      	cmp	r3, #0
 80123ea:	dd0a      	ble.n	8012402 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80123ec:	4628      	mov	r0, r5
 80123ee:	f7ff ff5b 	bl	80122a8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80123f2:	4621      	mov	r1, r4
 80123f4:	f7fe fc01 	bl	8010bfa <_ZNK8touchgfx4Rect9intersectERKS0_>
 80123f8:	69eb      	ldr	r3, [r5, #28]
 80123fa:	b928      	cbnz	r0, 8012408 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80123fc:	461d      	mov	r5, r3
 80123fe:	2b00      	cmp	r3, #0
 8012400:	d1f4      	bne.n	80123ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012402:	b009      	add	sp, #36	; 0x24
 8012404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012408:	ae04      	add	r6, sp, #16
 801240a:	2b00      	cmp	r3, #0
 801240c:	f000 80b5 	beq.w	801257a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012410:	682b      	ldr	r3, [r5, #0]
 8012412:	4629      	mov	r1, r5
 8012414:	68db      	ldr	r3, [r3, #12]
 8012416:	a802      	add	r0, sp, #8
 8012418:	4798      	blx	r3
 801241a:	4628      	mov	r0, r5
 801241c:	f7ff ff60 	bl	80122e0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012420:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012424:	4407      	add	r7, r0
 8012426:	4628      	mov	r0, r5
 8012428:	f7ff ff6e 	bl	8012308 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801242c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012430:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012434:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012438:	4418      	add	r0, r3
 801243a:	4621      	mov	r1, r4
 801243c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012440:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012444:	b23f      	sxth	r7, r7
 8012446:	4630      	mov	r0, r6
 8012448:	f8ad 3016 	strh.w	r3, [sp, #22]
 801244c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012450:	f7f8 facc 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 8012454:	4628      	mov	r0, r5
 8012456:	f7ff ff27 	bl	80122a8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801245a:	4602      	mov	r2, r0
 801245c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012460:	ab06      	add	r3, sp, #24
 8012462:	e883 0003 	stmia.w	r3, {r0, r1}
 8012466:	4611      	mov	r1, r2
 8012468:	4618      	mov	r0, r3
 801246a:	f7f8 fabf 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 801246e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012472:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012476:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801247a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801247e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012482:	4299      	cmp	r1, r3
 8012484:	d10b      	bne.n	801249e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012486:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801248a:	4552      	cmp	r2, sl
 801248c:	d107      	bne.n	801249e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801248e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012492:	455a      	cmp	r2, fp
 8012494:	d103      	bne.n	801249e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012496:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801249a:	454a      	cmp	r2, r9
 801249c:	d06d      	beq.n	801257a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801249e:	f1bb 0f00 	cmp.w	fp, #0
 80124a2:	dd65      	ble.n	8012570 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80124a4:	f1b9 0f00 	cmp.w	r9, #0
 80124a8:	dd62      	ble.n	8012570 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80124aa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80124ae:	fa1f f08a 	uxth.w	r0, sl
 80124b2:	4552      	cmp	r2, sl
 80124b4:	9000      	str	r0, [sp, #0]
 80124b6:	da12      	bge.n	80124de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80124b8:	9301      	str	r3, [sp, #4]
 80124ba:	9b00      	ldr	r3, [sp, #0]
 80124bc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80124c0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80124c4:	1a9a      	subs	r2, r3, r2
 80124c6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80124ca:	f8ad 0014 	strh.w	r0, [sp, #20]
 80124ce:	f8ad 2016 	strh.w	r2, [sp, #22]
 80124d2:	69ea      	ldr	r2, [r5, #28]
 80124d4:	4631      	mov	r1, r6
 80124d6:	4640      	mov	r0, r8
 80124d8:	f7ff ff7a 	bl	80123d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80124dc:	9b01      	ldr	r3, [sp, #4]
 80124de:	f9b4 2000 	ldrsh.w	r2, [r4]
 80124e2:	429a      	cmp	r2, r3
 80124e4:	b29f      	uxth	r7, r3
 80124e6:	da0d      	bge.n	8012504 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80124e8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80124ec:	1aba      	subs	r2, r7, r2
 80124ee:	f8ad a012 	strh.w	sl, [sp, #18]
 80124f2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80124f6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80124fa:	69ea      	ldr	r2, [r5, #28]
 80124fc:	4631      	mov	r1, r6
 80124fe:	4640      	mov	r0, r8
 8012500:	f7ff ff66 	bl	80123d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012504:	8822      	ldrh	r2, [r4, #0]
 8012506:	88a3      	ldrh	r3, [r4, #4]
 8012508:	445f      	add	r7, fp
 801250a:	4413      	add	r3, r2
 801250c:	b29b      	uxth	r3, r3
 801250e:	b2bf      	uxth	r7, r7
 8012510:	b23a      	sxth	r2, r7
 8012512:	b219      	sxth	r1, r3
 8012514:	4291      	cmp	r1, r2
 8012516:	dd0d      	ble.n	8012534 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012518:	1bdb      	subs	r3, r3, r7
 801251a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801251e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012522:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012526:	f8ad 9016 	strh.w	r9, [sp, #22]
 801252a:	69ea      	ldr	r2, [r5, #28]
 801252c:	4631      	mov	r1, r6
 801252e:	4640      	mov	r0, r8
 8012530:	f7ff ff4e 	bl	80123d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012534:	88e2      	ldrh	r2, [r4, #6]
 8012536:	8863      	ldrh	r3, [r4, #2]
 8012538:	4413      	add	r3, r2
 801253a:	9a00      	ldr	r2, [sp, #0]
 801253c:	444a      	add	r2, r9
 801253e:	b29b      	uxth	r3, r3
 8012540:	fa1f f982 	uxth.w	r9, r2
 8012544:	fa0f f289 	sxth.w	r2, r9
 8012548:	b219      	sxth	r1, r3
 801254a:	428a      	cmp	r2, r1
 801254c:	da15      	bge.n	801257a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801254e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012552:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012556:	f8ad 1014 	strh.w	r1, [sp, #20]
 801255a:	eba3 0309 	sub.w	r3, r3, r9
 801255e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012562:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012566:	f8ad 3016 	strh.w	r3, [sp, #22]
 801256a:	69ea      	ldr	r2, [r5, #28]
 801256c:	4631      	mov	r1, r6
 801256e:	e001      	b.n	8012574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012570:	69ea      	ldr	r2, [r5, #28]
 8012572:	4621      	mov	r1, r4
 8012574:	4640      	mov	r0, r8
 8012576:	f7ff ff2b 	bl	80123d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801257a:	4628      	mov	r0, r5
 801257c:	f7ff fe94 	bl	80122a8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012580:	6861      	ldr	r1, [r4, #4]
 8012582:	4602      	mov	r2, r0
 8012584:	6820      	ldr	r0, [r4, #0]
 8012586:	4633      	mov	r3, r6
 8012588:	c303      	stmia	r3!, {r0, r1}
 801258a:	4611      	mov	r1, r2
 801258c:	4630      	mov	r0, r6
 801258e:	f7f8 fa2d 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 8012592:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012596:	2b00      	cmp	r3, #0
 8012598:	f77f af33 	ble.w	8012402 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801259c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80125a0:	2b00      	cmp	r3, #0
 80125a2:	f77f af2e 	ble.w	8012402 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80125a6:	4628      	mov	r0, r5
 80125a8:	f7ff fe9a 	bl	80122e0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80125ac:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80125b0:	1a18      	subs	r0, r3, r0
 80125b2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80125b6:	4628      	mov	r0, r5
 80125b8:	f7ff fea6 	bl	8012308 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80125bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80125c0:	1a18      	subs	r0, r3, r0
 80125c2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80125c6:	682b      	ldr	r3, [r5, #0]
 80125c8:	4631      	mov	r1, r6
 80125ca:	689b      	ldr	r3, [r3, #8]
 80125cc:	4628      	mov	r0, r5
 80125ce:	4798      	blx	r3
 80125d0:	e717      	b.n	8012402 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080125d2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80125d2:	b570      	push	{r4, r5, r6, lr}
 80125d4:	460c      	mov	r4, r1
 80125d6:	b086      	sub	sp, #24
 80125d8:	1d06      	adds	r6, r0, #4
 80125da:	2300      	movs	r3, #0
 80125dc:	4631      	mov	r1, r6
 80125de:	4605      	mov	r5, r0
 80125e0:	a802      	add	r0, sp, #8
 80125e2:	9301      	str	r3, [sp, #4]
 80125e4:	f7ff fbd4 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80125e8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80125ec:	8822      	ldrh	r2, [r4, #0]
 80125ee:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80125f2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80125f6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80125fa:	1ad2      	subs	r2, r2, r3
 80125fc:	8863      	ldrh	r3, [r4, #2]
 80125fe:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012602:	1a5b      	subs	r3, r3, r1
 8012604:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012608:	f8ad 1016 	strh.w	r1, [sp, #22]
 801260c:	aa01      	add	r2, sp, #4
 801260e:	a904      	add	r1, sp, #16
 8012610:	4630      	mov	r0, r6
 8012612:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012616:	f7f8 fac1 	bl	800ab9c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801261a:	9a01      	ldr	r2, [sp, #4]
 801261c:	b11a      	cbz	r2, 8012626 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801261e:	4621      	mov	r1, r4
 8012620:	4628      	mov	r0, r5
 8012622:	f7ff fed5 	bl	80123d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012626:	b006      	add	sp, #24
 8012628:	bd70      	pop	{r4, r5, r6, pc}

0801262a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801262a:	b530      	push	{r4, r5, lr}
 801262c:	4602      	mov	r2, r0
 801262e:	4604      	mov	r4, r0
 8012630:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012634:	b085      	sub	sp, #20
 8012636:	460d      	mov	r5, r1
 8012638:	6851      	ldr	r1, [r2, #4]
 801263a:	466b      	mov	r3, sp
 801263c:	c303      	stmia	r3!, {r0, r1}
 801263e:	4629      	mov	r1, r5
 8012640:	4668      	mov	r0, sp
 8012642:	f7f8 f9d3 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 8012646:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801264a:	b12b      	cbz	r3, 8012658 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801264c:	4669      	mov	r1, sp
 801264e:	4620      	mov	r0, r4
 8012650:	f7ff ffbf 	bl	80125d2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012654:	b005      	add	sp, #20
 8012656:	bd30      	pop	{r4, r5, pc}
 8012658:	3404      	adds	r4, #4
 801265a:	4621      	mov	r1, r4
 801265c:	a802      	add	r0, sp, #8
 801265e:	f7ff fb97 	bl	8011d90 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012662:	f8bd 3000 	ldrh.w	r3, [sp]
 8012666:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801266a:	1a9b      	subs	r3, r3, r2
 801266c:	f8ad 3000 	strh.w	r3, [sp]
 8012670:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012674:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012678:	4669      	mov	r1, sp
 801267a:	1a9b      	subs	r3, r3, r2
 801267c:	4620      	mov	r0, r4
 801267e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012682:	f7f8 fa52 	bl	800ab2a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012686:	e7e5      	b.n	8012654 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012688 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012688:	680a      	ldr	r2, [r1, #0]
 801268a:	460b      	mov	r3, r1
 801268c:	6992      	ldr	r2, [r2, #24]
 801268e:	1d01      	adds	r1, r0, #4
 8012690:	4618      	mov	r0, r3
 8012692:	4710      	bx	r2

08012694 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012694:	4298      	cmp	r0, r3
 8012696:	d200      	bcs.n	801269a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012698:	b913      	cbnz	r3, 80126a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801269a:	440a      	add	r2, r1
 801269c:	b210      	sxth	r0, r2
 801269e:	4770      	bx	lr
 80126a0:	ee07 0a90 	vmov	s15, r0
 80126a4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80126a8:	ee07 3a90 	vmov	s15, r3
 80126ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80126b0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80126b4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80126b8:	ee37 7a66 	vsub.f32	s14, s14, s13
 80126bc:	ee07 2a90 	vmov	s15, r2
 80126c0:	ee67 5a07 	vmul.f32	s11, s14, s14
 80126c4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80126c8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80126cc:	ee07 1a90 	vmov	s15, r1
 80126d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80126d4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80126d8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80126dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80126e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126e4:	bfcc      	ite	gt
 80126e6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80126ea:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80126ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80126f2:	ee17 3a90 	vmov	r3, s15
 80126f6:	b218      	sxth	r0, r3
 80126f8:	4770      	bx	lr

080126fa <_ZN8touchgfx12TextProviderC1Ev>:
 80126fa:	b538      	push	{r3, r4, r5, lr}
 80126fc:	2500      	movs	r5, #0
 80126fe:	2302      	movs	r3, #2
 8012700:	4604      	mov	r4, r0
 8012702:	e9c0 5500 	strd	r5, r5, [r0]
 8012706:	7403      	strb	r3, [r0, #16]
 8012708:	6145      	str	r5, [r0, #20]
 801270a:	7605      	strb	r5, [r0, #24]
 801270c:	83c5      	strh	r5, [r0, #30]
 801270e:	8405      	strh	r5, [r0, #32]
 8012710:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012712:	8705      	strh	r5, [r0, #56]	; 0x38
 8012714:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012716:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801271a:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801271e:	220e      	movs	r2, #14
 8012720:	4629      	mov	r1, r5
 8012722:	304c      	adds	r0, #76	; 0x4c
 8012724:	f00e f858 	bl	80207d8 <memset>
 8012728:	2301      	movs	r3, #1
 801272a:	4620      	mov	r0, r4
 801272c:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012730:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012734:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012738:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801273c:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012740:	f7f2 fa4e 	bl	8004be0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012744:	4620      	mov	r0, r4
 8012746:	bd38      	pop	{r3, r4, r5, pc}

08012748 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012748:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801274a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801274e:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012750:	fab0 f080 	clz	r0, r0
 8012754:	0940      	lsrs	r0, r0, #5
 8012756:	4770      	bx	lr

08012758 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012758:	b530      	push	{r4, r5, lr}
 801275a:	2500      	movs	r5, #0
 801275c:	2401      	movs	r4, #1
 801275e:	6843      	ldr	r3, [r0, #4]
 8012760:	b913      	cbnz	r3, 8012768 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012762:	6803      	ldr	r3, [r0, #0]
 8012764:	b313      	cbz	r3, 80127ac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012766:	6043      	str	r3, [r0, #4]
 8012768:	7e03      	ldrb	r3, [r0, #24]
 801276a:	b143      	cbz	r3, 801277e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801276c:	6943      	ldr	r3, [r0, #20]
 801276e:	b12b      	cbz	r3, 801277c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012770:	881a      	ldrh	r2, [r3, #0]
 8012772:	b11a      	cbz	r2, 801277c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012774:	1c9a      	adds	r2, r3, #2
 8012776:	6142      	str	r2, [r0, #20]
 8012778:	8818      	ldrh	r0, [r3, #0]
 801277a:	bd30      	pop	{r4, r5, pc}
 801277c:	7605      	strb	r5, [r0, #24]
 801277e:	6843      	ldr	r3, [r0, #4]
 8012780:	8819      	ldrh	r1, [r3, #0]
 8012782:	b199      	cbz	r1, 80127ac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012784:	1c9a      	adds	r2, r3, #2
 8012786:	2902      	cmp	r1, #2
 8012788:	6042      	str	r2, [r0, #4]
 801278a:	d1f5      	bne.n	8012778 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801278c:	7c03      	ldrb	r3, [r0, #16]
 801278e:	2b01      	cmp	r3, #1
 8012790:	d8e5      	bhi.n	801275e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012792:	1c5a      	adds	r2, r3, #1
 8012794:	3302      	adds	r3, #2
 8012796:	7402      	strb	r2, [r0, #16]
 8012798:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801279c:	6143      	str	r3, [r0, #20]
 801279e:	2b00      	cmp	r3, #0
 80127a0:	d0dd      	beq.n	801275e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80127a2:	881b      	ldrh	r3, [r3, #0]
 80127a4:	2b00      	cmp	r3, #0
 80127a6:	d0da      	beq.n	801275e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80127a8:	7604      	strb	r4, [r0, #24]
 80127aa:	e7d8      	b.n	801275e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80127ac:	2000      	movs	r0, #0
 80127ae:	e7e4      	b.n	801277a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080127b0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80127b0:	b430      	push	{r4, r5}
 80127b2:	6001      	str	r1, [r0, #0]
 80127b4:	2100      	movs	r1, #0
 80127b6:	6041      	str	r1, [r0, #4]
 80127b8:	6815      	ldr	r5, [r2, #0]
 80127ba:	6085      	str	r5, [r0, #8]
 80127bc:	6852      	ldr	r2, [r2, #4]
 80127be:	6443      	str	r3, [r0, #68]	; 0x44
 80127c0:	9b02      	ldr	r3, [sp, #8]
 80127c2:	60c2      	str	r2, [r0, #12]
 80127c4:	7401      	strb	r1, [r0, #16]
 80127c6:	6141      	str	r1, [r0, #20]
 80127c8:	7601      	strb	r1, [r0, #24]
 80127ca:	8701      	strh	r1, [r0, #56]	; 0x38
 80127cc:	8401      	strh	r1, [r0, #32]
 80127ce:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80127d2:	6483      	str	r3, [r0, #72]	; 0x48
 80127d4:	bc30      	pop	{r4, r5}
 80127d6:	f7f2 ba03 	b.w	8004be0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080127da <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80127da:	b408      	push	{r3}
 80127dc:	b510      	push	{r4, lr}
 80127de:	b085      	sub	sp, #20
 80127e0:	ac07      	add	r4, sp, #28
 80127e2:	f854 3b04 	ldr.w	r3, [r4], #4
 80127e6:	9300      	str	r3, [sp, #0]
 80127e8:	4613      	mov	r3, r2
 80127ea:	4622      	mov	r2, r4
 80127ec:	9403      	str	r4, [sp, #12]
 80127ee:	f7ff ffdf 	bl	80127b0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80127f2:	b005      	add	sp, #20
 80127f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80127f8:	b001      	add	sp, #4
 80127fa:	4770      	bx	lr

080127fc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80127fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80127fe:	4605      	mov	r5, r0
 8012800:	4608      	mov	r0, r1
 8012802:	b1e9      	cbz	r1, 8012840 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012804:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012808:	460b      	mov	r3, r1
 801280a:	f101 0708 	add.w	r7, r1, #8
 801280e:	4622      	mov	r2, r4
 8012810:	6818      	ldr	r0, [r3, #0]
 8012812:	6859      	ldr	r1, [r3, #4]
 8012814:	4626      	mov	r6, r4
 8012816:	c603      	stmia	r6!, {r0, r1}
 8012818:	3308      	adds	r3, #8
 801281a:	42bb      	cmp	r3, r7
 801281c:	4634      	mov	r4, r6
 801281e:	d1f7      	bne.n	8012810 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012820:	6818      	ldr	r0, [r3, #0]
 8012822:	6030      	str	r0, [r6, #0]
 8012824:	889b      	ldrh	r3, [r3, #4]
 8012826:	80b3      	strh	r3, [r6, #4]
 8012828:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801282c:	015b      	lsls	r3, r3, #5
 801282e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012832:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012836:	430b      	orrs	r3, r1
 8012838:	425b      	negs	r3, r3
 801283a:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801283e:	4610      	mov	r0, r2
 8012840:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012842 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012842:	b538      	push	{r3, r4, r5, lr}
 8012844:	460c      	mov	r4, r1
 8012846:	6811      	ldr	r1, [r2, #0]
 8012848:	4610      	mov	r0, r2
 801284a:	68cd      	ldr	r5, [r1, #12]
 801284c:	4619      	mov	r1, r3
 801284e:	47a8      	blx	r5
 8012850:	2800      	cmp	r0, #0
 8012852:	bf08      	it	eq
 8012854:	4620      	moveq	r0, r4
 8012856:	bd38      	pop	{r3, r4, r5, pc}

08012858 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012858:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801285a:	4604      	mov	r4, r0
 801285c:	4615      	mov	r5, r2
 801285e:	4608      	mov	r0, r1
 8012860:	b93a      	cbnz	r2, 8012872 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012862:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012866:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801286a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801286e:	4628      	mov	r0, r5
 8012870:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012872:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012876:	8893      	ldrh	r3, [r2, #4]
 8012878:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801287c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012880:	79ee      	ldrb	r6, [r5, #7]
 8012882:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012886:	4316      	orrs	r6, r2
 8012888:	19da      	adds	r2, r3, r7
 801288a:	b291      	uxth	r1, r2
 801288c:	291d      	cmp	r1, #29
 801288e:	b2b7      	uxth	r7, r6
 8012890:	d87a      	bhi.n	8012988 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012892:	2201      	movs	r2, #1
 8012894:	408a      	lsls	r2, r1
 8012896:	4975      	ldr	r1, [pc, #468]	; (8012a6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8012898:	420a      	tst	r2, r1
 801289a:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801289e:	d12d      	bne.n	80128fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80128a0:	f412 7f60 	tst.w	r2, #896	; 0x380
 80128a4:	d070      	beq.n	8012988 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80128a6:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80128aa:	462b      	mov	r3, r5
 80128ac:	f105 0e08 	add.w	lr, r5, #8
 80128b0:	4615      	mov	r5, r2
 80128b2:	6818      	ldr	r0, [r3, #0]
 80128b4:	6859      	ldr	r1, [r3, #4]
 80128b6:	4694      	mov	ip, r2
 80128b8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80128bc:	3308      	adds	r3, #8
 80128be:	4573      	cmp	r3, lr
 80128c0:	4662      	mov	r2, ip
 80128c2:	d1f6      	bne.n	80128b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80128c4:	6818      	ldr	r0, [r3, #0]
 80128c6:	f8cc 0000 	str.w	r0, [ip]
 80128ca:	889b      	ldrh	r3, [r3, #4]
 80128cc:	f8ac 3004 	strh.w	r3, [ip, #4]
 80128d0:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80128d4:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80128d8:	b2b3      	uxth	r3, r6
 80128da:	1aca      	subs	r2, r1, r3
 80128dc:	b292      	uxth	r2, r2
 80128de:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80128e2:	10d2      	asrs	r2, r2, #3
 80128e4:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80128e8:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80128ec:	4302      	orrs	r2, r0
 80128ee:	1bcf      	subs	r7, r1, r7
 80128f0:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80128f4:	1afb      	subs	r3, r7, r3
 80128f6:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80128fa:	e7b8      	b.n	801286e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80128fc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80128fe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012902:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012904:	f640 6333 	movw	r3, #3635	; 0xe33
 8012908:	4299      	cmp	r1, r3
 801290a:	d110      	bne.n	801292e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801290c:	6803      	ldr	r3, [r0, #0]
 801290e:	68db      	ldr	r3, [r3, #12]
 8012910:	4798      	blx	r3
 8012912:	7b41      	ldrb	r1, [r0, #13]
 8012914:	00cb      	lsls	r3, r1, #3
 8012916:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801291a:	7a03      	ldrb	r3, [r0, #8]
 801291c:	0648      	lsls	r0, r1, #25
 801291e:	ea43 0302 	orr.w	r3, r3, r2
 8012922:	bf44      	itt	mi
 8012924:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012928:	b21b      	sxthmi	r3, r3
 801292a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801292e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012932:	443b      	add	r3, r7
 8012934:	4433      	add	r3, r6
 8012936:	b29b      	uxth	r3, r3
 8012938:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801293c:	462a      	mov	r2, r5
 801293e:	f105 0c08 	add.w	ip, r5, #8
 8012942:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012946:	4635      	mov	r5, r6
 8012948:	6810      	ldr	r0, [r2, #0]
 801294a:	6851      	ldr	r1, [r2, #4]
 801294c:	4637      	mov	r7, r6
 801294e:	c703      	stmia	r7!, {r0, r1}
 8012950:	3208      	adds	r2, #8
 8012952:	4562      	cmp	r2, ip
 8012954:	463e      	mov	r6, r7
 8012956:	d1f7      	bne.n	8012948 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012958:	6810      	ldr	r0, [r2, #0]
 801295a:	6038      	str	r0, [r7, #0]
 801295c:	8892      	ldrh	r2, [r2, #4]
 801295e:	80ba      	strh	r2, [r7, #4]
 8012960:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012964:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012968:	10db      	asrs	r3, r3, #3
 801296a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801296e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012972:	4313      	orrs	r3, r2
 8012974:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012978:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801297c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012980:	1a9b      	subs	r3, r3, r2
 8012982:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012986:	e772      	b.n	801286e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012988:	f023 0204 	bic.w	r2, r3, #4
 801298c:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012990:	428a      	cmp	r2, r1
 8012992:	d003      	beq.n	801299c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012994:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012998:	4293      	cmp	r3, r2
 801299a:	d120      	bne.n	80129de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801299c:	3b01      	subs	r3, #1
 801299e:	4602      	mov	r2, r0
 80129a0:	b29b      	uxth	r3, r3
 80129a2:	4629      	mov	r1, r5
 80129a4:	4620      	mov	r0, r4
 80129a6:	f7ff ff4c 	bl	8012842 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80129aa:	7b41      	ldrb	r1, [r0, #13]
 80129ac:	00cb      	lsls	r3, r1, #3
 80129ae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80129b2:	7a03      	ldrb	r3, [r0, #8]
 80129b4:	0649      	lsls	r1, r1, #25
 80129b6:	ea43 0302 	orr.w	r3, r3, r2
 80129ba:	bf44      	itt	mi
 80129bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80129c0:	b21b      	sxthmi	r3, r3
 80129c2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80129c6:	7b6b      	ldrb	r3, [r5, #13]
 80129c8:	7aaa      	ldrb	r2, [r5, #10]
 80129ca:	005b      	lsls	r3, r3, #1
 80129cc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80129d0:	4313      	orrs	r3, r2
 80129d2:	115a      	asrs	r2, r3, #5
 80129d4:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80129d8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80129dc:	e036      	b.n	8012a4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80129de:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80129e2:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80129e6:	7a2a      	ldrb	r2, [r5, #8]
 80129e8:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80129ec:	ea42 0201 	orr.w	r2, r2, r1
 80129f0:	bf1c      	itt	ne
 80129f2:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80129f6:	b212      	sxthne	r2, r2
 80129f8:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80129fc:	f640 6109 	movw	r1, #3593	; 0xe09
 8012a00:	f023 0210 	bic.w	r2, r3, #16
 8012a04:	428a      	cmp	r2, r1
 8012a06:	d003      	beq.n	8012a10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012a08:	f640 6213 	movw	r2, #3603	; 0xe13
 8012a0c:	4293      	cmp	r3, r2
 8012a0e:	d12a      	bne.n	8012a66 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012a10:	7b6e      	ldrb	r6, [r5, #13]
 8012a12:	0076      	lsls	r6, r6, #1
 8012a14:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012a18:	7aae      	ldrb	r6, [r5, #10]
 8012a1a:	4316      	orrs	r6, r2
 8012a1c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012a20:	4293      	cmp	r3, r2
 8012a22:	bf18      	it	ne
 8012a24:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012a28:	4602      	mov	r2, r0
 8012a2a:	bf14      	ite	ne
 8012a2c:	b29b      	uxthne	r3, r3
 8012a2e:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012a32:	4629      	mov	r1, r5
 8012a34:	4620      	mov	r0, r4
 8012a36:	f7ff ff04 	bl	8012842 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012a3a:	7b43      	ldrb	r3, [r0, #13]
 8012a3c:	7a82      	ldrb	r2, [r0, #10]
 8012a3e:	005b      	lsls	r3, r3, #1
 8012a40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012a44:	4313      	orrs	r3, r2
 8012a46:	1af6      	subs	r6, r6, r3
 8012a48:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012a4c:	7b69      	ldrb	r1, [r5, #13]
 8012a4e:	00cb      	lsls	r3, r1, #3
 8012a50:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012a54:	7a2b      	ldrb	r3, [r5, #8]
 8012a56:	4313      	orrs	r3, r2
 8012a58:	064a      	lsls	r2, r1, #25
 8012a5a:	bf44      	itt	mi
 8012a5c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012a60:	b21b      	sxthmi	r3, r3
 8012a62:	1bdb      	subs	r3, r3, r7
 8012a64:	e747      	b.n	80128f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012a66:	2300      	movs	r3, #0
 8012a68:	e7b6      	b.n	80129d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012a6a:	bf00      	nop
 8012a6c:	3fc00079 	.word	0x3fc00079

08012a70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012a70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012a74:	4604      	mov	r4, r0
 8012a76:	b942      	cbnz	r2, 8012a8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012a78:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012a7c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012a80:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012a84:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012a88:	e047      	b.n	8012b1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012a8a:	7b51      	ldrb	r1, [r2, #13]
 8012a8c:	8893      	ldrh	r3, [r2, #4]
 8012a8e:	010d      	lsls	r5, r1, #4
 8012a90:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012a94:	79d5      	ldrb	r5, [r2, #7]
 8012a96:	4305      	orrs	r5, r0
 8012a98:	2d04      	cmp	r5, #4
 8012a9a:	bfcc      	ite	gt
 8012a9c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012aa0:	f04f 0e01 	movle.w	lr, #1
 8012aa4:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012aa8:	f200 80ab 	bhi.w	8012c02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012aac:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012ab0:	4283      	cmp	r3, r0
 8012ab2:	d216      	bcs.n	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ab4:	f240 605b 	movw	r0, #1627	; 0x65b
 8012ab8:	4283      	cmp	r3, r0
 8012aba:	d859      	bhi.n	8012b70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012abc:	f240 6057 	movw	r0, #1623	; 0x657
 8012ac0:	4283      	cmp	r3, r0
 8012ac2:	d20e      	bcs.n	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ac4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012ac8:	d24a      	bcs.n	8012b60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012aca:	f240 604e 	movw	r0, #1614	; 0x64e
 8012ace:	4283      	cmp	r3, r0
 8012ad0:	d207      	bcs.n	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ad2:	f240 601a 	movw	r0, #1562	; 0x61a
 8012ad6:	4283      	cmp	r3, r0
 8012ad8:	d02a      	beq.n	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ada:	d821      	bhi.n	8012b20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012adc:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012ae0:	d35b      	bcc.n	8012b9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012ae2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012ae6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012aea:	f040 80d0 	bne.w	8012c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012aee:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012af2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012af6:	f040 80ca 	bne.w	8012c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012afa:	00cb      	lsls	r3, r1, #3
 8012afc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012b00:	7a13      	ldrb	r3, [r2, #8]
 8012b02:	0649      	lsls	r1, r1, #25
 8012b04:	ea43 0300 	orr.w	r3, r3, r0
 8012b08:	bf44      	itt	mi
 8012b0a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012b0e:	b21b      	sxthmi	r3, r3
 8012b10:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012b14:	1b5d      	subs	r5, r3, r5
 8012b16:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012b1a:	4610      	mov	r0, r2
 8012b1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b20:	f240 604b 	movw	r0, #1611	; 0x64b
 8012b24:	4283      	cmp	r3, r0
 8012b26:	d338      	bcc.n	8012b9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012b28:	f240 604c 	movw	r0, #1612	; 0x64c
 8012b2c:	4283      	cmp	r3, r0
 8012b2e:	d9d8      	bls.n	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b30:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012b34:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012b38:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012b3c:	f040 80f2 	bne.w	8012d24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012b40:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012b44:	f040 80ee 	bne.w	8012d24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012b48:	00cb      	lsls	r3, r1, #3
 8012b4a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012b4e:	7a13      	ldrb	r3, [r2, #8]
 8012b50:	064e      	lsls	r6, r1, #25
 8012b52:	ea43 0300 	orr.w	r3, r3, r0
 8012b56:	bf44      	itt	mi
 8012b58:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012b5c:	b21b      	sxthmi	r3, r3
 8012b5e:	e7d9      	b.n	8012b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012b60:	f240 6054 	movw	r0, #1620	; 0x654
 8012b64:	4283      	cmp	r3, r0
 8012b66:	d8e3      	bhi.n	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012b68:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012b6c:	d9e0      	bls.n	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012b6e:	e7b8      	b.n	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b70:	f240 6074 	movw	r0, #1652	; 0x674
 8012b74:	4283      	cmp	r3, r0
 8012b76:	d0b4      	beq.n	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b78:	d82d      	bhi.n	8012bd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012b7a:	f240 605e 	movw	r0, #1630	; 0x65e
 8012b7e:	4283      	cmp	r3, r0
 8012b80:	d804      	bhi.n	8012b8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012b82:	f240 605d 	movw	r0, #1629	; 0x65d
 8012b86:	4283      	cmp	r3, r0
 8012b88:	d3d2      	bcc.n	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012b8a:	e7aa      	b.n	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b8c:	f240 605f 	movw	r0, #1631	; 0x65f
 8012b90:	4283      	cmp	r3, r0
 8012b92:	d0cd      	beq.n	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012b94:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012b98:	d0a3      	beq.n	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b9a:	00cb      	lsls	r3, r1, #3
 8012b9c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012ba0:	7a13      	ldrb	r3, [r2, #8]
 8012ba2:	0649      	lsls	r1, r1, #25
 8012ba4:	ea43 0300 	orr.w	r3, r3, r0
 8012ba8:	bf44      	itt	mi
 8012baa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012bae:	b21b      	sxthmi	r3, r3
 8012bb0:	1b5d      	subs	r5, r3, r5
 8012bb2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012bb6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012bba:	7b53      	ldrb	r3, [r2, #13]
 8012bbc:	015b      	lsls	r3, r3, #5
 8012bbe:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012bc2:	7993      	ldrb	r3, [r2, #6]
 8012bc4:	430b      	orrs	r3, r1
 8012bc6:	005b      	lsls	r3, r3, #1
 8012bc8:	2105      	movs	r1, #5
 8012bca:	fb93 f3f1 	sdiv	r3, r3, r1
 8012bce:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012bd2:	440b      	add	r3, r1
 8012bd4:	e756      	b.n	8012a84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012bd6:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012bda:	4283      	cmp	r3, r0
 8012bdc:	d809      	bhi.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012bde:	f240 60df 	movw	r0, #1759	; 0x6df
 8012be2:	4283      	cmp	r3, r0
 8012be4:	f4bf af7d 	bcs.w	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012be8:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8012bec:	2b05      	cmp	r3, #5
 8012bee:	d8d4      	bhi.n	8012b9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012bf0:	e777      	b.n	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012bf2:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012bf6:	4283      	cmp	r3, r0
 8012bf8:	d09a      	beq.n	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012bfa:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8012bfe:	4283      	cmp	r3, r0
 8012c00:	e7ca      	b.n	8012b98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012c02:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012c06:	d22b      	bcs.n	8012c60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012c08:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8012c0c:	4283      	cmp	r3, r0
 8012c0e:	d28f      	bcs.n	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c10:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012c14:	4283      	cmp	r3, r0
 8012c16:	d816      	bhi.n	8012c46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012c18:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8012c1c:	4283      	cmp	r3, r0
 8012c1e:	f4bf af60 	bcs.w	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c22:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012c26:	4283      	cmp	r3, r0
 8012c28:	d80a      	bhi.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012c2a:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8012c2e:	4283      	cmp	r3, r0
 8012c30:	f4bf af57 	bcs.w	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c34:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012c38:	4283      	cmp	r3, r0
 8012c3a:	f43f af79 	beq.w	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c3e:	e7ac      	b.n	8012b9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012c40:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012c44:	e7f8      	b.n	8012c38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012c46:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012c4a:	4283      	cmp	r3, r0
 8012c4c:	d802      	bhi.n	8012c54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8012c4e:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012c52:	e798      	b.n	8012b86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012c54:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012c58:	4283      	cmp	r3, r0
 8012c5a:	f47f af42 	bne.w	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c5e:	e767      	b.n	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c60:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012c64:	4283      	cmp	r3, r0
 8012c66:	f43f af63 	beq.w	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c6a:	d802      	bhi.n	8012c72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012c6c:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012c70:	e7f2      	b.n	8012c58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012c72:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012c76:	4283      	cmp	r3, r0
 8012c78:	d805      	bhi.n	8012c86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012c7a:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8012c7e:	4283      	cmp	r3, r0
 8012c80:	f4ff af2f 	bcc.w	8012ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c84:	e754      	b.n	8012b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c86:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8012c8a:	4283      	cmp	r3, r0
 8012c8c:	e7af      	b.n	8012bee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8012c8e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012c92:	4617      	mov	r7, r2
 8012c94:	f102 0808 	add.w	r8, r2, #8
 8012c98:	4666      	mov	r6, ip
 8012c9a:	6838      	ldr	r0, [r7, #0]
 8012c9c:	6879      	ldr	r1, [r7, #4]
 8012c9e:	46e6      	mov	lr, ip
 8012ca0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012ca4:	3708      	adds	r7, #8
 8012ca6:	4547      	cmp	r7, r8
 8012ca8:	46f4      	mov	ip, lr
 8012caa:	d1f6      	bne.n	8012c9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012cac:	6838      	ldr	r0, [r7, #0]
 8012cae:	f8ce 0000 	str.w	r0, [lr]
 8012cb2:	88b9      	ldrh	r1, [r7, #4]
 8012cb4:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012cb8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012cbc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012cc0:	d009      	beq.n	8012cd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012cc2:	7b51      	ldrb	r1, [r2, #13]
 8012cc4:	7992      	ldrb	r2, [r2, #6]
 8012cc6:	0149      	lsls	r1, r1, #5
 8012cc8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012ccc:	4311      	orrs	r1, r2
 8012cce:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012cd2:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012cd6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012cda:	b2ad      	uxth	r5, r5
 8012cdc:	d00d      	beq.n	8012cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8012cde:	442b      	add	r3, r5
 8012ce0:	b29b      	uxth	r3, r3
 8012ce2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012ce6:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012cea:	10db      	asrs	r3, r3, #3
 8012cec:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012cf0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012cf4:	4313      	orrs	r3, r2
 8012cf6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012cfa:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012cfe:	00cb      	lsls	r3, r1, #3
 8012d00:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d04:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012d08:	064f      	lsls	r7, r1, #25
 8012d0a:	ea43 0302 	orr.w	r3, r3, r2
 8012d0e:	bf44      	itt	mi
 8012d10:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012d14:	b21b      	sxthmi	r3, r3
 8012d16:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012d1a:	1b5b      	subs	r3, r3, r5
 8012d1c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012d20:	4632      	mov	r2, r6
 8012d22:	e6fa      	b.n	8012b1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012d24:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012d28:	4617      	mov	r7, r2
 8012d2a:	f102 0908 	add.w	r9, r2, #8
 8012d2e:	4666      	mov	r6, ip
 8012d30:	6838      	ldr	r0, [r7, #0]
 8012d32:	6879      	ldr	r1, [r7, #4]
 8012d34:	46e0      	mov	r8, ip
 8012d36:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8012d3a:	3708      	adds	r7, #8
 8012d3c:	454f      	cmp	r7, r9
 8012d3e:	46c4      	mov	ip, r8
 8012d40:	d1f6      	bne.n	8012d30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8012d42:	6838      	ldr	r0, [r7, #0]
 8012d44:	f8c8 0000 	str.w	r0, [r8]
 8012d48:	88b9      	ldrh	r1, [r7, #4]
 8012d4a:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012d4e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012d52:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012d56:	d009      	beq.n	8012d6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8012d58:	7b51      	ldrb	r1, [r2, #13]
 8012d5a:	7992      	ldrb	r2, [r2, #6]
 8012d5c:	0149      	lsls	r1, r1, #5
 8012d5e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012d62:	4311      	orrs	r1, r2
 8012d64:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012d68:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012d6c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012d70:	d00e      	beq.n	8012d90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8012d72:	eba3 030e 	sub.w	r3, r3, lr
 8012d76:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012d7a:	b29b      	uxth	r3, r3
 8012d7c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012d80:	10db      	asrs	r3, r3, #3
 8012d82:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012d86:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012d8a:	4313      	orrs	r3, r2
 8012d8c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012d90:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012d94:	00cb      	lsls	r3, r1, #3
 8012d96:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d9a:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012d9e:	0648      	lsls	r0, r1, #25
 8012da0:	ea43 0302 	orr.w	r3, r3, r2
 8012da4:	bf44      	itt	mi
 8012da6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012daa:	b21b      	sxthmi	r3, r3
 8012dac:	1b5d      	subs	r5, r3, r5
 8012dae:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012db2:	e7b5      	b.n	8012d20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012db4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012db4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012db8:	461e      	mov	r6, r3
 8012dba:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012dbc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012dc0:	4604      	mov	r4, r0
 8012dc2:	4617      	mov	r7, r2
 8012dc4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012dc8:	f7f1 fec8 	bl	8004b5c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012dcc:	4605      	mov	r5, r0
 8012dce:	b918      	cbnz	r0, 8012dd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012dd0:	6030      	str	r0, [r6, #0]
 8012dd2:	4628      	mov	r0, r5
 8012dd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012dd8:	683b      	ldr	r3, [r7, #0]
 8012dda:	4601      	mov	r1, r0
 8012ddc:	68db      	ldr	r3, [r3, #12]
 8012dde:	4638      	mov	r0, r7
 8012de0:	4798      	blx	r3
 8012de2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012de6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012dea:	4602      	mov	r2, r0
 8012dec:	6030      	str	r0, [r6, #0]
 8012dee:	d213      	bcs.n	8012e18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012df0:	4643      	mov	r3, r8
 8012df2:	4639      	mov	r1, r7
 8012df4:	4620      	mov	r0, r4
 8012df6:	f7ff fe3b 	bl	8012a70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012dfa:	6030      	str	r0, [r6, #0]
 8012dfc:	6833      	ldr	r3, [r6, #0]
 8012dfe:	b143      	cbz	r3, 8012e12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012e00:	7b5a      	ldrb	r2, [r3, #13]
 8012e02:	7a9b      	ldrb	r3, [r3, #10]
 8012e04:	0052      	lsls	r2, r2, #1
 8012e06:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012e0a:	4313      	orrs	r3, r2
 8012e0c:	bf0c      	ite	eq
 8012e0e:	2301      	moveq	r3, #1
 8012e10:	2300      	movne	r3, #0
 8012e12:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012e16:	e7dc      	b.n	8012dd2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012e18:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012e1c:	b29b      	uxth	r3, r3
 8012e1e:	2b7f      	cmp	r3, #127	; 0x7f
 8012e20:	d804      	bhi.n	8012e2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012e22:	4639      	mov	r1, r7
 8012e24:	4620      	mov	r0, r4
 8012e26:	f7ff fd17 	bl	8012858 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012e2a:	e7e6      	b.n	8012dfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012e2c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012e30:	2b00      	cmp	r3, #0
 8012e32:	d0e3      	beq.n	8012dfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012e34:	f640 1302 	movw	r3, #2306	; 0x902
 8012e38:	429d      	cmp	r5, r3
 8012e3a:	d1df      	bne.n	8012dfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012e3c:	4601      	mov	r1, r0
 8012e3e:	4620      	mov	r0, r4
 8012e40:	f7ff fcdc 	bl	80127fc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012e44:	e7d9      	b.n	8012dfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08012e46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8012e46:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012e4a:	461e      	mov	r6, r3
 8012e4c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012e4e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012e52:	4604      	mov	r4, r0
 8012e54:	4617      	mov	r7, r2
 8012e56:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012e5a:	f7f1 fe7f 	bl	8004b5c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012e5e:	4605      	mov	r5, r0
 8012e60:	b918      	cbnz	r0, 8012e6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8012e62:	6030      	str	r0, [r6, #0]
 8012e64:	4628      	mov	r0, r5
 8012e66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012e6a:	683b      	ldr	r3, [r7, #0]
 8012e6c:	4601      	mov	r1, r0
 8012e6e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8012e72:	4638      	mov	r0, r7
 8012e74:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012e78:	47c8      	blx	r9
 8012e7a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012e7e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012e82:	4602      	mov	r2, r0
 8012e84:	6030      	str	r0, [r6, #0]
 8012e86:	d213      	bcs.n	8012eb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8012e88:	4643      	mov	r3, r8
 8012e8a:	4639      	mov	r1, r7
 8012e8c:	4620      	mov	r0, r4
 8012e8e:	f7ff fdef 	bl	8012a70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012e92:	6030      	str	r0, [r6, #0]
 8012e94:	6833      	ldr	r3, [r6, #0]
 8012e96:	b143      	cbz	r3, 8012eaa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8012e98:	7b5a      	ldrb	r2, [r3, #13]
 8012e9a:	7a9b      	ldrb	r3, [r3, #10]
 8012e9c:	0052      	lsls	r2, r2, #1
 8012e9e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012ea2:	4313      	orrs	r3, r2
 8012ea4:	bf0c      	ite	eq
 8012ea6:	2301      	moveq	r3, #1
 8012ea8:	2300      	movne	r3, #0
 8012eaa:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012eae:	e7d9      	b.n	8012e64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8012eb0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012eb4:	b29b      	uxth	r3, r3
 8012eb6:	2b7f      	cmp	r3, #127	; 0x7f
 8012eb8:	d804      	bhi.n	8012ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8012eba:	4639      	mov	r1, r7
 8012ebc:	4620      	mov	r0, r4
 8012ebe:	f7ff fccb 	bl	8012858 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012ec2:	e7e6      	b.n	8012e92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8012ec4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012ec8:	2b00      	cmp	r3, #0
 8012eca:	d0e3      	beq.n	8012e94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012ecc:	f640 1302 	movw	r3, #2306	; 0x902
 8012ed0:	429d      	cmp	r5, r3
 8012ed2:	d1df      	bne.n	8012e94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012ed4:	4601      	mov	r1, r0
 8012ed6:	4620      	mov	r0, r4
 8012ed8:	f7ff fc90 	bl	80127fc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012edc:	e7d9      	b.n	8012e92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08012ede <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012ede:	b510      	push	{r4, lr}
 8012ee0:	4604      	mov	r4, r0
 8012ee2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8012ee6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012ee8:	b1f1      	cbz	r1, 8012f28 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012eea:	2b0a      	cmp	r3, #10
 8012eec:	d02f      	beq.n	8012f4e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012eee:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8012ef0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012ef4:	3901      	subs	r1, #1
 8012ef6:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8012ef8:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8012efc:	1c51      	adds	r1, r2, #1
 8012efe:	b289      	uxth	r1, r1
 8012f00:	2901      	cmp	r1, #1
 8012f02:	bf84      	itt	hi
 8012f04:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012f08:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8012f0a:	f103 0201 	add.w	r2, r3, #1
 8012f0e:	8722      	strh	r2, [r4, #56]	; 0x38
 8012f10:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012f12:	bf98      	it	ls
 8012f14:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8012f16:	4413      	add	r3, r2
 8012f18:	b29b      	uxth	r3, r3
 8012f1a:	2b09      	cmp	r3, #9
 8012f1c:	bf88      	it	hi
 8012f1e:	3b0a      	subhi	r3, #10
 8012f20:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012f24:	8458      	strh	r0, [r3, #34]	; 0x22
 8012f26:	e7dc      	b.n	8012ee2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012f28:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012f2a:	2b0a      	cmp	r3, #10
 8012f2c:	d00f      	beq.n	8012f4e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012f2e:	4620      	mov	r0, r4
 8012f30:	f7ff fc12 	bl	8012758 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012f34:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012f36:	1c5a      	adds	r2, r3, #1
 8012f38:	8722      	strh	r2, [r4, #56]	; 0x38
 8012f3a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012f3c:	4413      	add	r3, r2
 8012f3e:	b29b      	uxth	r3, r3
 8012f40:	2b09      	cmp	r3, #9
 8012f42:	bf88      	it	hi
 8012f44:	3b0a      	subhi	r3, #10
 8012f46:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012f4a:	8458      	strh	r0, [r3, #34]	; 0x22
 8012f4c:	e7ec      	b.n	8012f28 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012f4e:	bd10      	pop	{r4, pc}

08012f50 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012f50:	b538      	push	{r3, r4, r5, lr}
 8012f52:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012f54:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012f58:	4604      	mov	r4, r0
 8012f5a:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8012f5c:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8012f5e:	3a01      	subs	r2, #1
 8012f60:	8702      	strh	r2, [r0, #56]	; 0x38
 8012f62:	1c5a      	adds	r2, r3, #1
 8012f64:	b292      	uxth	r2, r2
 8012f66:	2a09      	cmp	r2, #9
 8012f68:	bf86      	itte	hi
 8012f6a:	3b09      	subhi	r3, #9
 8012f6c:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8012f6e:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8012f70:	f7ff ffb5 	bl	8012ede <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012f74:	8c23      	ldrh	r3, [r4, #32]
 8012f76:	2b01      	cmp	r3, #1
 8012f78:	bf9c      	itt	ls
 8012f7a:	3301      	addls	r3, #1
 8012f7c:	8423      	strhls	r3, [r4, #32]
 8012f7e:	8be3      	ldrh	r3, [r4, #30]
 8012f80:	b90b      	cbnz	r3, 8012f86 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012f82:	2302      	movs	r3, #2
 8012f84:	83e3      	strh	r3, [r4, #30]
 8012f86:	8be3      	ldrh	r3, [r4, #30]
 8012f88:	3b01      	subs	r3, #1
 8012f8a:	b29b      	uxth	r3, r3
 8012f8c:	83e3      	strh	r3, [r4, #30]
 8012f8e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012f92:	4628      	mov	r0, r5
 8012f94:	8365      	strh	r5, [r4, #26]
 8012f96:	bd38      	pop	{r3, r4, r5, pc}

08012f98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012f98:	428a      	cmp	r2, r1
 8012f9a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012f9e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8012fa0:	d931      	bls.n	8013006 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8012fa2:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8012fa4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8012fa8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8012fac:	19ee      	adds	r6, r5, r7
 8012fae:	1a54      	subs	r4, r2, r1
 8012fb0:	3e01      	subs	r6, #1
 8012fb2:	fa1f fe84 	uxth.w	lr, r4
 8012fb6:	b2b4      	uxth	r4, r6
 8012fb8:	eba4 090e 	sub.w	r9, r4, lr
 8012fbc:	fa1f f989 	uxth.w	r9, r9
 8012fc0:	2c09      	cmp	r4, #9
 8012fc2:	4626      	mov	r6, r4
 8012fc4:	bf88      	it	hi
 8012fc6:	f1a4 060a 	subhi.w	r6, r4, #10
 8012fca:	f1bc 0f00 	cmp.w	ip, #0
 8012fce:	bf08      	it	eq
 8012fd0:	f04f 0c02 	moveq.w	ip, #2
 8012fd4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012fd8:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012fdc:	fa1f fc8c 	uxth.w	ip, ip
 8012fe0:	3c01      	subs	r4, #1
 8012fe2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8012fe6:	b2a4      	uxth	r4, r4
 8012fe8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012fec:	454c      	cmp	r4, r9
 8012fee:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8012ff2:	d1e5      	bne.n	8012fc0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012ff4:	eba5 050e 	sub.w	r5, r5, lr
 8012ff8:	eb0e 0408 	add.w	r4, lr, r8
 8012ffc:	8705      	strh	r5, [r0, #56]	; 0x38
 8012ffe:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013002:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8013006:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8013008:	1a64      	subs	r4, r4, r1
 801300a:	4439      	add	r1, r7
 801300c:	b289      	uxth	r1, r1
 801300e:	2909      	cmp	r1, #9
 8013010:	bf88      	it	hi
 8013012:	390a      	subhi	r1, #10
 8013014:	8704      	strh	r4, [r0, #56]	; 0x38
 8013016:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013018:	250a      	movs	r5, #10
 801301a:	b18a      	cbz	r2, 8013040 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801301c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801301e:	3a01      	subs	r2, #1
 8013020:	b292      	uxth	r2, r2
 8013022:	3101      	adds	r1, #1
 8013024:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013028:	8701      	strh	r1, [r0, #56]	; 0x38
 801302a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801302c:	b901      	cbnz	r1, 8013030 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801302e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013030:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013032:	3901      	subs	r1, #1
 8013034:	b289      	uxth	r1, r1
 8013036:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013038:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801303c:	844c      	strh	r4, [r1, #34]	; 0x22
 801303e:	e7ec      	b.n	801301a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013040:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013044:	f7ff bf4b 	b.w	8012ede <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08013048 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013048:	b570      	push	{r4, r5, r6, lr}
 801304a:	2500      	movs	r5, #0
 801304c:	4295      	cmp	r5, r2
 801304e:	d011      	beq.n	8013074 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013050:	8bc4      	ldrh	r4, [r0, #30]
 8013052:	f831 6b02 	ldrh.w	r6, [r1], #2
 8013056:	4414      	add	r4, r2
 8013058:	3c01      	subs	r4, #1
 801305a:	1b64      	subs	r4, r4, r5
 801305c:	b2a4      	uxth	r4, r4
 801305e:	2c01      	cmp	r4, #1
 8013060:	bf88      	it	hi
 8013062:	3c02      	subhi	r4, #2
 8013064:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013068:	8b64      	ldrh	r4, [r4, #26]
 801306a:	42b4      	cmp	r4, r6
 801306c:	d117      	bne.n	801309e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801306e:	3501      	adds	r5, #1
 8013070:	b2ad      	uxth	r5, r5
 8013072:	e7eb      	b.n	801304c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013074:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013078:	2400      	movs	r4, #0
 801307a:	4413      	add	r3, r2
 801307c:	b2a2      	uxth	r2, r4
 801307e:	429a      	cmp	r2, r3
 8013080:	da0f      	bge.n	80130a2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8013082:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013084:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013088:	4432      	add	r2, r6
 801308a:	b292      	uxth	r2, r2
 801308c:	2a09      	cmp	r2, #9
 801308e:	bf88      	it	hi
 8013090:	3a0a      	subhi	r2, #10
 8013092:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013096:	3401      	adds	r4, #1
 8013098:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801309a:	42aa      	cmp	r2, r5
 801309c:	d0ee      	beq.n	801307c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801309e:	2000      	movs	r0, #0
 80130a0:	bd70      	pop	{r4, r5, r6, pc}
 80130a2:	2001      	movs	r0, #1
 80130a4:	e7fc      	b.n	80130a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080130a6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80130a6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130aa:	4605      	mov	r5, r0
 80130ac:	4616      	mov	r6, r2
 80130ae:	1c8c      	adds	r4, r1, #2
 80130b0:	8809      	ldrh	r1, [r1, #0]
 80130b2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80130b6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80130ba:	42b3      	cmp	r3, r6
 80130bc:	d124      	bne.n	8013108 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80130be:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80130c2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80130c6:	f001 070f 	and.w	r7, r1, #15
 80130ca:	f8cd 8000 	str.w	r8, [sp]
 80130ce:	464b      	mov	r3, r9
 80130d0:	4652      	mov	r2, sl
 80130d2:	4621      	mov	r1, r4
 80130d4:	4628      	mov	r0, r5
 80130d6:	f7ff ffb7 	bl	8013048 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80130da:	4683      	mov	fp, r0
 80130dc:	b168      	cbz	r0, 80130fa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80130de:	eb0a 0109 	add.w	r1, sl, r9
 80130e2:	4441      	add	r1, r8
 80130e4:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80130e8:	463a      	mov	r2, r7
 80130ea:	4649      	mov	r1, r9
 80130ec:	4628      	mov	r0, r5
 80130ee:	f7ff ff53 	bl	8012f98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80130f2:	4658      	mov	r0, fp
 80130f4:	b003      	add	sp, #12
 80130f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130fa:	eb07 010a 	add.w	r1, r7, sl
 80130fe:	4449      	add	r1, r9
 8013100:	4441      	add	r1, r8
 8013102:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013106:	e7d2      	b.n	80130ae <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013108:	f04f 0b00 	mov.w	fp, #0
 801310c:	e7f1      	b.n	80130f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801310e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801310e:	b570      	push	{r4, r5, r6, lr}
 8013110:	8810      	ldrh	r0, [r2, #0]
 8013112:	4298      	cmp	r0, r3
 8013114:	d817      	bhi.n	8013146 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013116:	1e48      	subs	r0, r1, #1
 8013118:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801311c:	4298      	cmp	r0, r3
 801311e:	d312      	bcc.n	8013146 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013120:	2400      	movs	r4, #0
 8013122:	428c      	cmp	r4, r1
 8013124:	d20f      	bcs.n	8013146 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013126:	1860      	adds	r0, r4, r1
 8013128:	1040      	asrs	r0, r0, #1
 801312a:	0085      	lsls	r5, r0, #2
 801312c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013130:	42b3      	cmp	r3, r6
 8013132:	d902      	bls.n	801313a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013134:	3001      	adds	r0, #1
 8013136:	b284      	uxth	r4, r0
 8013138:	e7f3      	b.n	8013122 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801313a:	d201      	bcs.n	8013140 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801313c:	b281      	uxth	r1, r0
 801313e:	e7f0      	b.n	8013122 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013140:	442a      	add	r2, r5
 8013142:	8850      	ldrh	r0, [r2, #2]
 8013144:	bd70      	pop	{r4, r5, r6, pc}
 8013146:	2000      	movs	r0, #0
 8013148:	e7fc      	b.n	8013144 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801314a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801314a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801314e:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013150:	886f      	ldrh	r7, [r5, #2]
 8013152:	4604      	mov	r4, r0
 8013154:	087f      	lsrs	r7, r7, #1
 8013156:	260b      	movs	r6, #11
 8013158:	3e01      	subs	r6, #1
 801315a:	d013      	beq.n	8013184 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801315c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801315e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013162:	462a      	mov	r2, r5
 8013164:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013168:	4639      	mov	r1, r7
 801316a:	4643      	mov	r3, r8
 801316c:	4620      	mov	r0, r4
 801316e:	f7ff ffce 	bl	801310e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8013172:	b138      	cbz	r0, 8013184 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013174:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013178:	4642      	mov	r2, r8
 801317a:	4620      	mov	r0, r4
 801317c:	f7ff ff93 	bl	80130a6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8013180:	2800      	cmp	r0, #0
 8013182:	d1e9      	bne.n	8013158 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013188 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013188:	b570      	push	{r4, r5, r6, lr}
 801318a:	694a      	ldr	r2, [r1, #20]
 801318c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801318e:	684b      	ldr	r3, [r1, #4]
 8013190:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8013192:	1b54      	subs	r4, r2, r5
 8013194:	f000 8106 	beq.w	80133a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8013198:	1b9b      	subs	r3, r3, r6
 801319a:	d003      	beq.n	80131a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801319c:	4363      	muls	r3, r4
 801319e:	2210      	movs	r2, #16
 80131a0:	fb93 f3f2 	sdiv	r3, r3, r2
 80131a4:	680c      	ldr	r4, [r1, #0]
 80131a6:	698a      	ldr	r2, [r1, #24]
 80131a8:	1b65      	subs	r5, r4, r5
 80131aa:	f000 80fd 	beq.w	80133a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80131ae:	1b92      	subs	r2, r2, r6
 80131b0:	d003      	beq.n	80131ba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80131b2:	436a      	muls	r2, r5
 80131b4:	2410      	movs	r4, #16
 80131b6:	fb92 f2f4 	sdiv	r2, r2, r4
 80131ba:	1a9b      	subs	r3, r3, r2
 80131bc:	ee07 3a90 	vmov	s15, r3
 80131c0:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80133e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80131c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80131c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80131cc:	ee67 7a84 	vmul.f32	s15, s15, s8
 80131d0:	460a      	mov	r2, r1
 80131d2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80131d6:	4603      	mov	r3, r0
 80131d8:	f100 040c 	add.w	r4, r0, #12
 80131dc:	eeb1 6a43 	vneg.f32	s12, s6
 80131e0:	edd2 7a02 	vldr	s15, [r2, #8]
 80131e4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80131e8:	3214      	adds	r2, #20
 80131ea:	ece3 6a01 	vstmia	r3!, {s13}
 80131ee:	ed52 7a02 	vldr	s15, [r2, #-8]
 80131f2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80131f6:	429c      	cmp	r4, r3
 80131f8:	edc3 7a02 	vstr	s15, [r3, #8]
 80131fc:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013200:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013204:	edc3 7a05 	vstr	s15, [r3, #20]
 8013208:	d1ea      	bne.n	80131e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801320a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801320c:	698b      	ldr	r3, [r1, #24]
 801320e:	edd0 4a02 	vldr	s9, [r0, #8]
 8013212:	edd0 3a00 	vldr	s7, [r0]
 8013216:	edd0 6a01 	vldr	s13, [r0, #4]
 801321a:	ed90 5a05 	vldr	s10, [r0, #20]
 801321e:	ed90 2a03 	vldr	s4, [r0, #12]
 8013222:	edd0 5a04 	vldr	s11, [r0, #16]
 8013226:	ed90 1a07 	vldr	s2, [r0, #28]
 801322a:	edd0 2a06 	vldr	s5, [r0, #24]
 801322e:	1a9b      	subs	r3, r3, r2
 8013230:	ee07 3a90 	vmov	s15, r3
 8013234:	684b      	ldr	r3, [r1, #4]
 8013236:	1a9b      	subs	r3, r3, r2
 8013238:	ee07 3a10 	vmov	s14, r3
 801323c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013240:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013244:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013248:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801324c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013250:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013254:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013258:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801325c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013260:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013264:	ee67 7a83 	vmul.f32	s15, s15, s6
 8013268:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801326c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801326e:	694a      	ldr	r2, [r1, #20]
 8013270:	1b13      	subs	r3, r2, r4
 8013272:	ee07 3a10 	vmov	s14, r3
 8013276:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801327a:	680b      	ldr	r3, [r1, #0]
 801327c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013280:	1b1b      	subs	r3, r3, r4
 8013282:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8013286:	ee07 3a10 	vmov	s14, r3
 801328a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801328e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013292:	eee6 4a87 	vfma.f32	s9, s13, s14
 8013296:	ee64 4a86 	vmul.f32	s9, s9, s12
 801329a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801329e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80132a0:	698b      	ldr	r3, [r1, #24]
 80132a2:	1a9b      	subs	r3, r3, r2
 80132a4:	ee06 3a90 	vmov	s13, r3
 80132a8:	684b      	ldr	r3, [r1, #4]
 80132aa:	1a9b      	subs	r3, r3, r2
 80132ac:	ee07 3a10 	vmov	s14, r3
 80132b0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80132b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80132b8:	ee66 6a84 	vmul.f32	s13, s13, s8
 80132bc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80132c0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80132c4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80132c8:	ee66 6a83 	vmul.f32	s13, s13, s6
 80132cc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80132d0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80132d2:	694a      	ldr	r2, [r1, #20]
 80132d4:	1b13      	subs	r3, r2, r4
 80132d6:	ee07 3a10 	vmov	s14, r3
 80132da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80132de:	680b      	ldr	r3, [r1, #0]
 80132e0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80132e4:	1b1b      	subs	r3, r3, r4
 80132e6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80132ea:	ee07 3a10 	vmov	s14, r3
 80132ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80132f2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80132f6:	eea5 5a87 	vfma.f32	s10, s11, s14
 80132fa:	edd0 5a08 	vldr	s11, [r0, #32]
 80132fe:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013302:	ee31 1a65 	vsub.f32	s2, s2, s11
 8013306:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801330a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801330c:	698b      	ldr	r3, [r1, #24]
 801330e:	1a9b      	subs	r3, r3, r2
 8013310:	ee07 3a10 	vmov	s14, r3
 8013314:	684b      	ldr	r3, [r1, #4]
 8013316:	1a9b      	subs	r3, r3, r2
 8013318:	ee01 3a90 	vmov	s3, r3
 801331c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013320:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013324:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013328:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801332c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013330:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013334:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013338:	ee27 7a03 	vmul.f32	s14, s14, s6
 801333c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013340:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013342:	694a      	ldr	r2, [r1, #20]
 8013344:	1b13      	subs	r3, r2, r4
 8013346:	ee03 3a10 	vmov	s6, r3
 801334a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801334e:	680b      	ldr	r3, [r1, #0]
 8013350:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013354:	1b1b      	subs	r3, r3, r4
 8013356:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801335a:	ee03 3a10 	vmov	s6, r3
 801335e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013362:	ee23 4a04 	vmul.f32	s8, s6, s8
 8013366:	eee1 5a04 	vfma.f32	s11, s2, s8
 801336a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801336e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8013372:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8013376:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801337a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801337e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013382:	dd13      	ble.n	80133ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8013384:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013388:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801338c:	63c3      	str	r3, [r0, #60]	; 0x3c
 801338e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8013392:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801339a:	dd15      	ble.n	80133c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801339c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80133a0:	6403      	str	r3, [r0, #64]	; 0x40
 80133a2:	bd70      	pop	{r4, r5, r6, pc}
 80133a4:	4623      	mov	r3, r4
 80133a6:	e6fd      	b.n	80131a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80133a8:	462a      	mov	r2, r5
 80133aa:	e706      	b.n	80131ba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80133ac:	d502      	bpl.n	80133b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80133ae:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80133b2:	e7e9      	b.n	8013388 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80133b4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80133b8:	eea3 2a85 	vfma.f32	s4, s7, s10
 80133bc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80133c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133c4:	dade      	bge.n	8013384 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80133c6:	e7f2      	b.n	80133ae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80133c8:	d502      	bpl.n	80133d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80133ca:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80133ce:	e7e7      	b.n	80133a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80133d0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80133d4:	eee3 4a86 	vfma.f32	s9, s7, s12
 80133d8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80133dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133e0:	dadc      	bge.n	801339c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80133e2:	e7f2      	b.n	80133ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80133e4:	3d800000 	.word	0x3d800000

080133e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80133e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80133ec:	2714      	movs	r7, #20
 80133ee:	435f      	muls	r7, r3
 80133f0:	eb02 0c07 	add.w	ip, r2, r7
 80133f4:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80133f8:	f115 0e0f 	adds.w	lr, r5, #15
 80133fc:	f100 80a2 	bmi.w	8013544 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013400:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013404:	9c08      	ldr	r4, [sp, #32]
 8013406:	f8c0 e014 	str.w	lr, [r0, #20]
 801340a:	2614      	movs	r6, #20
 801340c:	4366      	muls	r6, r4
 801340e:	eb02 0806 	add.w	r8, r2, r6
 8013412:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013416:	f115 040f 	adds.w	r4, r5, #15
 801341a:	f100 809f 	bmi.w	801355c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801341e:	1124      	asrs	r4, r4, #4
 8013420:	eba4 040e 	sub.w	r4, r4, lr
 8013424:	6184      	str	r4, [r0, #24]
 8013426:	2c00      	cmp	r4, #0
 8013428:	f000 808a 	beq.w	8013540 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801342c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013430:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013434:	5995      	ldr	r5, [r2, r6]
 8013436:	eba4 0809 	sub.w	r8, r4, r9
 801343a:	59d4      	ldr	r4, [r2, r7]
 801343c:	eba5 0a04 	sub.w	sl, r5, r4
 8013440:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013444:	fb0e fe05 	mul.w	lr, lr, r5
 8013448:	fb0a ee19 	mls	lr, sl, r9, lr
 801344c:	fb08 e404 	mla	r4, r8, r4, lr
 8013450:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013454:	3c01      	subs	r4, #1
 8013456:	19a4      	adds	r4, r4, r6
 8013458:	f100 808c 	bmi.w	8013574 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801345c:	fb94 fef6 	sdiv	lr, r4, r6
 8013460:	f8c0 e000 	str.w	lr, [r0]
 8013464:	fb06 441e 	mls	r4, r6, lr, r4
 8013468:	6104      	str	r4, [r0, #16]
 801346a:	2d00      	cmp	r5, #0
 801346c:	f2c0 8095 	blt.w	801359a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8013470:	fb95 f4f6 	sdiv	r4, r5, r6
 8013474:	6044      	str	r4, [r0, #4]
 8013476:	fb06 5514 	mls	r5, r6, r4, r5
 801347a:	6085      	str	r5, [r0, #8]
 801347c:	60c6      	str	r6, [r0, #12]
 801347e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8013482:	6945      	ldr	r5, [r0, #20]
 8013484:	59d2      	ldr	r2, [r2, r7]
 8013486:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80135bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801348a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801348e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8013492:	ee07 4a10 	vmov	s14, r4
 8013496:	6804      	ldr	r4, [r0, #0]
 8013498:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801349c:	ee07 2a90 	vmov	s15, r2
 80134a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80134a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80134a8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80134ac:	ee27 7a26 	vmul.f32	s14, s14, s13
 80134b0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80134b4:	edd3 6a00 	vldr	s13, [r3]
 80134b8:	eee6 6a07 	vfma.f32	s13, s12, s14
 80134bc:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80134c0:	eee6 6a27 	vfma.f32	s13, s12, s15
 80134c4:	edc0 6a07 	vstr	s13, [r0, #28]
 80134c8:	edd0 6a01 	vldr	s13, [r0, #4]
 80134cc:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80134d0:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80134d4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80134d8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80134dc:	ed80 6a08 	vstr	s12, [r0, #32]
 80134e0:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80134e2:	6242      	str	r2, [r0, #36]	; 0x24
 80134e4:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80134e8:	ed93 6a03 	vldr	s12, [r3, #12]
 80134ec:	eea5 6a87 	vfma.f32	s12, s11, s14
 80134f0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80134f4:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80134f8:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80134fc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013500:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013504:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013508:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801350c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801350e:	6302      	str	r2, [r0, #48]	; 0x30
 8013510:	ed93 6a06 	vldr	s12, [r3, #24]
 8013514:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8013518:	eea5 6a87 	vfma.f32	s12, s11, s14
 801351c:	eeb0 7a46 	vmov.f32	s14, s12
 8013520:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013524:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013528:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801352c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013530:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013534:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013538:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801353c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801353e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013540:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013544:	f1c5 0501 	rsb	r5, r5, #1
 8013548:	f015 050f 	ands.w	r5, r5, #15
 801354c:	bf18      	it	ne
 801354e:	2501      	movne	r5, #1
 8013550:	2410      	movs	r4, #16
 8013552:	fb9e fef4 	sdiv	lr, lr, r4
 8013556:	ebae 0e05 	sub.w	lr, lr, r5
 801355a:	e753      	b.n	8013404 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801355c:	f1c5 0501 	rsb	r5, r5, #1
 8013560:	f015 050f 	ands.w	r5, r5, #15
 8013564:	bf18      	it	ne
 8013566:	2501      	movne	r5, #1
 8013568:	f04f 0910 	mov.w	r9, #16
 801356c:	fb94 f4f9 	sdiv	r4, r4, r9
 8013570:	1b64      	subs	r4, r4, r5
 8013572:	e755      	b.n	8013420 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013574:	4264      	negs	r4, r4
 8013576:	fb94 fef6 	sdiv	lr, r4, r6
 801357a:	f1ce 0800 	rsb	r8, lr, #0
 801357e:	fb06 441e 	mls	r4, r6, lr, r4
 8013582:	f8c0 8000 	str.w	r8, [r0]
 8013586:	6104      	str	r4, [r0, #16]
 8013588:	2c00      	cmp	r4, #0
 801358a:	f43f af6e 	beq.w	801346a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801358e:	ea6f 0e0e 	mvn.w	lr, lr
 8013592:	f8c0 e000 	str.w	lr, [r0]
 8013596:	1b34      	subs	r4, r6, r4
 8013598:	e766      	b.n	8013468 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801359a:	426d      	negs	r5, r5
 801359c:	fb95 f4f6 	sdiv	r4, r5, r6
 80135a0:	f1c4 0e00 	rsb	lr, r4, #0
 80135a4:	fb06 5514 	mls	r5, r6, r4, r5
 80135a8:	f8c0 e004 	str.w	lr, [r0, #4]
 80135ac:	6085      	str	r5, [r0, #8]
 80135ae:	2d00      	cmp	r5, #0
 80135b0:	f43f af64 	beq.w	801347c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80135b4:	43e4      	mvns	r4, r4
 80135b6:	6044      	str	r4, [r0, #4]
 80135b8:	1b75      	subs	r5, r6, r5
 80135ba:	e75e      	b.n	801347a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80135bc:	3d800000 	.word	0x3d800000

080135c0 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80135c0:	4602      	mov	r2, r0
 80135c2:	b148      	cbz	r0, 80135d8 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80135c4:	2300      	movs	r3, #0
 80135c6:	b298      	uxth	r0, r3
 80135c8:	3301      	adds	r3, #1
 80135ca:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80135ce:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80135d2:	2900      	cmp	r1, #0
 80135d4:	d1f7      	bne.n	80135c6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80135d6:	4770      	bx	lr
 80135d8:	4770      	bx	lr

080135da <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80135da:	b530      	push	{r4, r5, lr}
 80135dc:	4604      	mov	r4, r0
 80135de:	b159      	cbz	r1, 80135f8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80135e0:	b148      	cbz	r0, 80135f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80135e2:	2300      	movs	r3, #0
 80135e4:	b298      	uxth	r0, r3
 80135e6:	4282      	cmp	r2, r0
 80135e8:	d905      	bls.n	80135f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80135ea:	5ccd      	ldrb	r5, [r1, r3]
 80135ec:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80135f0:	3301      	adds	r3, #1
 80135f2:	2d00      	cmp	r5, #0
 80135f4:	d1f6      	bne.n	80135e4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80135f6:	bd30      	pop	{r4, r5, pc}
 80135f8:	4608      	mov	r0, r1
 80135fa:	e7fc      	b.n	80135f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080135fc <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 80135fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80135fe:	b08b      	sub	sp, #44	; 0x2c
 8013600:	468c      	mov	ip, r1
 8013602:	2100      	movs	r1, #0
 8013604:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013608:	ae01      	add	r6, sp, #4
 801360a:	211f      	movs	r1, #31
 801360c:	fbb0 f7f3 	udiv	r7, r0, r3
 8013610:	fb03 0517 	mls	r5, r3, r7, r0
 8013614:	b2ec      	uxtb	r4, r5
 8013616:	2d09      	cmp	r5, #9
 8013618:	bfd4      	ite	le
 801361a:	3430      	addle	r4, #48	; 0x30
 801361c:	3457      	addgt	r4, #87	; 0x57
 801361e:	b2e4      	uxtb	r4, r4
 8013620:	558c      	strb	r4, [r1, r6]
 8013622:	4638      	mov	r0, r7
 8013624:	1e4c      	subs	r4, r1, #1
 8013626:	b92f      	cbnz	r7, 8013634 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013628:	4431      	add	r1, r6
 801362a:	4660      	mov	r0, ip
 801362c:	f7ff ffd5 	bl	80135da <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013630:	b00b      	add	sp, #44	; 0x2c
 8013632:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013634:	4621      	mov	r1, r4
 8013636:	e7e9      	b.n	801360c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013638 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013638:	b5f0      	push	{r4, r5, r6, r7, lr}
 801363a:	4607      	mov	r7, r0
 801363c:	b08b      	sub	sp, #44	; 0x2c
 801363e:	4608      	mov	r0, r1
 8013640:	b341      	cbz	r1, 8013694 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013642:	1e99      	subs	r1, r3, #2
 8013644:	2922      	cmp	r1, #34	; 0x22
 8013646:	d825      	bhi.n	8013694 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013648:	2100      	movs	r1, #0
 801364a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801364e:	463c      	mov	r4, r7
 8013650:	261f      	movs	r6, #31
 8013652:	f10d 0c04 	add.w	ip, sp, #4
 8013656:	fb94 fef3 	sdiv	lr, r4, r3
 801365a:	fb03 441e 	mls	r4, r3, lr, r4
 801365e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013662:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013666:	b2ec      	uxtb	r4, r5
 8013668:	2d09      	cmp	r5, #9
 801366a:	bfd4      	ite	le
 801366c:	3430      	addle	r4, #48	; 0x30
 801366e:	3457      	addgt	r4, #87	; 0x57
 8013670:	b2e4      	uxtb	r4, r4
 8013672:	f80c 4006 	strb.w	r4, [ip, r6]
 8013676:	4674      	mov	r4, lr
 8013678:	1e71      	subs	r1, r6, #1
 801367a:	b96c      	cbnz	r4, 8013698 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 801367c:	2f00      	cmp	r7, #0
 801367e:	da05      	bge.n	801368c <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8013680:	ab0a      	add	r3, sp, #40	; 0x28
 8013682:	4419      	add	r1, r3
 8013684:	232d      	movs	r3, #45	; 0x2d
 8013686:	f801 3c24 	strb.w	r3, [r1, #-36]
 801368a:	1eb1      	subs	r1, r6, #2
 801368c:	3101      	adds	r1, #1
 801368e:	4461      	add	r1, ip
 8013690:	f7ff ffa3 	bl	80135da <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013694:	b00b      	add	sp, #44	; 0x2c
 8013696:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013698:	460e      	mov	r6, r1
 801369a:	e7dc      	b.n	8013656 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0801369c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801369c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136a0:	4691      	mov	r9, r2
 80136a2:	b085      	sub	sp, #20
 80136a4:	6802      	ldr	r2, [r0, #0]
 80136a6:	9201      	str	r2, [sp, #4]
 80136a8:	4688      	mov	r8, r1
 80136aa:	4683      	mov	fp, r0
 80136ac:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80136b0:	9103      	str	r1, [sp, #12]
 80136b2:	4610      	mov	r0, r2
 80136b4:	461c      	mov	r4, r3
 80136b6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80136ba:	9302      	str	r3, [sp, #8]
 80136bc:	f7ff ff80 	bl	80135c0 <_ZN8touchgfx7Unicode6strlenEPKt>
 80136c0:	f1b8 0f00 	cmp.w	r8, #0
 80136c4:	bf0c      	ite	eq
 80136c6:	4684      	moveq	ip, r0
 80136c8:	f100 0c01 	addne.w	ip, r0, #1
 80136cc:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80136d0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80136d4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80136d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80136d8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80136dc:	9903      	ldr	r1, [sp, #12]
 80136de:	fa1f fc8c 	uxth.w	ip, ip
 80136e2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80136e6:	d041      	beq.n	801376c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80136e8:	d834      	bhi.n	8013754 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80136ea:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80136ee:	d059      	beq.n	80137a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80136f0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80136f4:	d03a      	beq.n	801376c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80136f6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80136fa:	d034      	beq.n	8013766 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80136fc:	2400      	movs	r4, #0
 80136fe:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013702:	3a01      	subs	r2, #1
 8013704:	b169      	cbz	r1, 8013722 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013706:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013708:	458c      	cmp	ip, r1
 801370a:	da09      	bge.n	8013720 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801370c:	eba1 010c 	sub.w	r1, r1, ip
 8013710:	b289      	uxth	r1, r1
 8013712:	b933      	cbnz	r3, 8013722 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013714:	2e00      	cmp	r6, #0
 8013716:	d051      	beq.n	80137bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013718:	2800      	cmp	r0, #0
 801371a:	d04f      	beq.n	80137bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801371c:	440c      	add	r4, r1
 801371e:	b2a4      	uxth	r4, r4
 8013720:	2100      	movs	r1, #0
 8013722:	682b      	ldr	r3, [r5, #0]
 8013724:	4293      	cmp	r3, r2
 8013726:	da07      	bge.n	8013738 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013728:	f1b8 0f00 	cmp.w	r8, #0
 801372c:	d004      	beq.n	8013738 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801372e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013732:	682b      	ldr	r3, [r5, #0]
 8013734:	3301      	adds	r3, #1
 8013736:	602b      	str	r3, [r5, #0]
 8013738:	2730      	movs	r7, #48	; 0x30
 801373a:	2c00      	cmp	r4, #0
 801373c:	d04e      	beq.n	80137dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801373e:	682e      	ldr	r6, [r5, #0]
 8013740:	3c01      	subs	r4, #1
 8013742:	42b2      	cmp	r2, r6
 8013744:	b2a4      	uxth	r4, r4
 8013746:	dd49      	ble.n	80137dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013748:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801374c:	682b      	ldr	r3, [r5, #0]
 801374e:	3301      	adds	r3, #1
 8013750:	602b      	str	r3, [r5, #0]
 8013752:	e7f2      	b.n	801373a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013754:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013758:	d01d      	beq.n	8013796 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801375a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801375e:	d002      	beq.n	8013766 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013760:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013764:	e7c9      	b.n	80136fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013766:	4684      	mov	ip, r0
 8013768:	f04f 0800 	mov.w	r8, #0
 801376c:	2c00      	cmp	r4, #0
 801376e:	d0c6      	beq.n	80136fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013770:	b947      	cbnz	r7, 8013784 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013772:	2801      	cmp	r0, #1
 8013774:	d106      	bne.n	8013784 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013776:	8814      	ldrh	r4, [r2, #0]
 8013778:	2c30      	cmp	r4, #48	; 0x30
 801377a:	bf02      	ittt	eq
 801377c:	3202      	addeq	r2, #2
 801377e:	f8cb 2000 	streq.w	r2, [fp]
 8013782:	4638      	moveq	r0, r7
 8013784:	45bc      	cmp	ip, r7
 8013786:	da14      	bge.n	80137b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013788:	b2bf      	uxth	r7, r7
 801378a:	eba7 040c 	sub.w	r4, r7, ip
 801378e:	b2a4      	uxth	r4, r4
 8013790:	46bc      	mov	ip, r7
 8013792:	2600      	movs	r6, #0
 8013794:	e7b3      	b.n	80136fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013796:	4684      	mov	ip, r0
 8013798:	b16c      	cbz	r4, 80137b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801379a:	42b8      	cmp	r0, r7
 801379c:	dd00      	ble.n	80137a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801379e:	b2b8      	uxth	r0, r7
 80137a0:	2400      	movs	r4, #0
 80137a2:	e003      	b.n	80137ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80137a4:	f04f 0c01 	mov.w	ip, #1
 80137a8:	2400      	movs	r4, #0
 80137aa:	4660      	mov	r0, ip
 80137ac:	4626      	mov	r6, r4
 80137ae:	46a0      	mov	r8, r4
 80137b0:	e7a5      	b.n	80136fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80137b2:	2400      	movs	r4, #0
 80137b4:	e7ed      	b.n	8013792 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80137b6:	4626      	mov	r6, r4
 80137b8:	46a0      	mov	r8, r4
 80137ba:	e7a0      	b.n	80136fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80137bc:	2900      	cmp	r1, #0
 80137be:	d0b0      	beq.n	8013722 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80137c0:	2720      	movs	r7, #32
 80137c2:	682e      	ldr	r6, [r5, #0]
 80137c4:	2900      	cmp	r1, #0
 80137c6:	d0ac      	beq.n	8013722 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80137c8:	3901      	subs	r1, #1
 80137ca:	4296      	cmp	r6, r2
 80137cc:	b289      	uxth	r1, r1
 80137ce:	daa7      	bge.n	8013720 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80137d0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80137d4:	682b      	ldr	r3, [r5, #0]
 80137d6:	3301      	adds	r3, #1
 80137d8:	602b      	str	r3, [r5, #0]
 80137da:	e7f2      	b.n	80137c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80137dc:	b188      	cbz	r0, 8013802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80137de:	682b      	ldr	r3, [r5, #0]
 80137e0:	3801      	subs	r0, #1
 80137e2:	429a      	cmp	r2, r3
 80137e4:	b280      	uxth	r0, r0
 80137e6:	dd0c      	ble.n	8013802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80137e8:	f8db 3000 	ldr.w	r3, [fp]
 80137ec:	1c9c      	adds	r4, r3, #2
 80137ee:	f8cb 4000 	str.w	r4, [fp]
 80137f2:	881c      	ldrh	r4, [r3, #0]
 80137f4:	682b      	ldr	r3, [r5, #0]
 80137f6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80137fa:	682b      	ldr	r3, [r5, #0]
 80137fc:	3301      	adds	r3, #1
 80137fe:	602b      	str	r3, [r5, #0]
 8013800:	e7ec      	b.n	80137dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013802:	2620      	movs	r6, #32
 8013804:	b151      	cbz	r1, 801381c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013806:	6828      	ldr	r0, [r5, #0]
 8013808:	3901      	subs	r1, #1
 801380a:	4282      	cmp	r2, r0
 801380c:	b289      	uxth	r1, r1
 801380e:	dd05      	ble.n	801381c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013810:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013814:	682b      	ldr	r3, [r5, #0]
 8013816:	3301      	adds	r3, #1
 8013818:	602b      	str	r3, [r5, #0]
 801381a:	e7f3      	b.n	8013804 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801381c:	b005      	add	sp, #20
 801381e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013822 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013822:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013826:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801382a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801382e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013832:	2400      	movs	r4, #0
 8013834:	8014      	strh	r4, [r2, #0]
 8013836:	701c      	strb	r4, [r3, #0]
 8013838:	f888 4000 	strb.w	r4, [r8]
 801383c:	f88c 4000 	strb.w	r4, [ip]
 8013840:	f88e 4000 	strb.w	r4, [lr]
 8013844:	703c      	strb	r4, [r7, #0]
 8013846:	6804      	ldr	r4, [r0, #0]
 8013848:	b1a4      	cbz	r4, 8013874 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801384a:	8824      	ldrh	r4, [r4, #0]
 801384c:	f04f 0901 	mov.w	r9, #1
 8013850:	b314      	cbz	r4, 8013898 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013852:	2c2b      	cmp	r4, #43	; 0x2b
 8013854:	d001      	beq.n	801385a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013856:	2c20      	cmp	r4, #32
 8013858:	d110      	bne.n	801387c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801385a:	8014      	strh	r4, [r2, #0]
 801385c:	6804      	ldr	r4, [r0, #0]
 801385e:	b10c      	cbz	r4, 8013864 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013860:	3402      	adds	r4, #2
 8013862:	6004      	str	r4, [r0, #0]
 8013864:	680c      	ldr	r4, [r1, #0]
 8013866:	b10c      	cbz	r4, 801386c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013868:	3401      	adds	r4, #1
 801386a:	600c      	str	r4, [r1, #0]
 801386c:	6804      	ldr	r4, [r0, #0]
 801386e:	b17c      	cbz	r4, 8013890 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013870:	8824      	ldrh	r4, [r4, #0]
 8013872:	e7ed      	b.n	8013850 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013874:	680c      	ldr	r4, [r1, #0]
 8013876:	b17c      	cbz	r4, 8013898 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013878:	7824      	ldrb	r4, [r4, #0]
 801387a:	e7e7      	b.n	801384c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801387c:	2c2d      	cmp	r4, #45	; 0x2d
 801387e:	d102      	bne.n	8013886 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013880:	f883 9000 	strb.w	r9, [r3]
 8013884:	e7ea      	b.n	801385c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013886:	2c23      	cmp	r4, #35	; 0x23
 8013888:	d107      	bne.n	801389a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801388a:	f888 9000 	strb.w	r9, [r8]
 801388e:	e7e5      	b.n	801385c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013890:	680c      	ldr	r4, [r1, #0]
 8013892:	b10c      	cbz	r4, 8013898 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013894:	7824      	ldrb	r4, [r4, #0]
 8013896:	e7db      	b.n	8013850 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013898:	2400      	movs	r4, #0
 801389a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801389e:	2b09      	cmp	r3, #9
 80138a0:	d901      	bls.n	80138a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80138a2:	2c2a      	cmp	r4, #42	; 0x2a
 80138a4:	d122      	bne.n	80138ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80138a6:	2301      	movs	r3, #1
 80138a8:	2c30      	cmp	r4, #48	; 0x30
 80138aa:	f88e 3000 	strb.w	r3, [lr]
 80138ae:	d10d      	bne.n	80138cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80138b0:	f88c 3000 	strb.w	r3, [ip]
 80138b4:	6803      	ldr	r3, [r0, #0]
 80138b6:	b10b      	cbz	r3, 80138bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80138b8:	3302      	adds	r3, #2
 80138ba:	6003      	str	r3, [r0, #0]
 80138bc:	680b      	ldr	r3, [r1, #0]
 80138be:	b10b      	cbz	r3, 80138c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80138c0:	3301      	adds	r3, #1
 80138c2:	600b      	str	r3, [r1, #0]
 80138c4:	6803      	ldr	r3, [r0, #0]
 80138c6:	2b00      	cmp	r3, #0
 80138c8:	d02f      	beq.n	801392a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80138ca:	881c      	ldrh	r4, [r3, #0]
 80138cc:	2c2a      	cmp	r4, #42	; 0x2a
 80138ce:	d135      	bne.n	801393c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80138d0:	f04f 33ff 	mov.w	r3, #4294967295
 80138d4:	6033      	str	r3, [r6, #0]
 80138d6:	6803      	ldr	r3, [r0, #0]
 80138d8:	b10b      	cbz	r3, 80138de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80138da:	3302      	adds	r3, #2
 80138dc:	6003      	str	r3, [r0, #0]
 80138de:	680b      	ldr	r3, [r1, #0]
 80138e0:	b10b      	cbz	r3, 80138e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80138e2:	3301      	adds	r3, #1
 80138e4:	600b      	str	r3, [r1, #0]
 80138e6:	6803      	ldr	r3, [r0, #0]
 80138e8:	b31b      	cbz	r3, 8013932 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80138ea:	881c      	ldrh	r4, [r3, #0]
 80138ec:	2c2e      	cmp	r4, #46	; 0x2e
 80138ee:	d11a      	bne.n	8013926 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80138f0:	2301      	movs	r3, #1
 80138f2:	703b      	strb	r3, [r7, #0]
 80138f4:	6803      	ldr	r3, [r0, #0]
 80138f6:	b10b      	cbz	r3, 80138fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80138f8:	3302      	adds	r3, #2
 80138fa:	6003      	str	r3, [r0, #0]
 80138fc:	680b      	ldr	r3, [r1, #0]
 80138fe:	b10b      	cbz	r3, 8013904 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013900:	3301      	adds	r3, #1
 8013902:	600b      	str	r3, [r1, #0]
 8013904:	6803      	ldr	r3, [r0, #0]
 8013906:	2b00      	cmp	r3, #0
 8013908:	d036      	beq.n	8013978 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801390a:	881b      	ldrh	r3, [r3, #0]
 801390c:	2b2a      	cmp	r3, #42	; 0x2a
 801390e:	d137      	bne.n	8013980 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013910:	f04f 33ff 	mov.w	r3, #4294967295
 8013914:	602b      	str	r3, [r5, #0]
 8013916:	6803      	ldr	r3, [r0, #0]
 8013918:	b10b      	cbz	r3, 801391e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801391a:	3302      	adds	r3, #2
 801391c:	6003      	str	r3, [r0, #0]
 801391e:	680b      	ldr	r3, [r1, #0]
 8013920:	b10b      	cbz	r3, 8013926 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013922:	3301      	adds	r3, #1
 8013924:	600b      	str	r3, [r1, #0]
 8013926:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801392a:	680c      	ldr	r4, [r1, #0]
 801392c:	b134      	cbz	r4, 801393c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801392e:	7824      	ldrb	r4, [r4, #0]
 8013930:	e7cc      	b.n	80138cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013932:	680b      	ldr	r3, [r1, #0]
 8013934:	2b00      	cmp	r3, #0
 8013936:	d0f6      	beq.n	8013926 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013938:	781c      	ldrb	r4, [r3, #0]
 801393a:	e7d7      	b.n	80138ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801393c:	2300      	movs	r3, #0
 801393e:	6033      	str	r3, [r6, #0]
 8013940:	220a      	movs	r2, #10
 8013942:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013946:	fa1f f38c 	uxth.w	r3, ip
 801394a:	2b09      	cmp	r3, #9
 801394c:	d8ce      	bhi.n	80138ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801394e:	6833      	ldr	r3, [r6, #0]
 8013950:	fb02 c303 	mla	r3, r2, r3, ip
 8013954:	6033      	str	r3, [r6, #0]
 8013956:	6803      	ldr	r3, [r0, #0]
 8013958:	b10b      	cbz	r3, 801395e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801395a:	3302      	adds	r3, #2
 801395c:	6003      	str	r3, [r0, #0]
 801395e:	680b      	ldr	r3, [r1, #0]
 8013960:	b10b      	cbz	r3, 8013966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013962:	3301      	adds	r3, #1
 8013964:	600b      	str	r3, [r1, #0]
 8013966:	6803      	ldr	r3, [r0, #0]
 8013968:	b10b      	cbz	r3, 801396e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801396a:	881c      	ldrh	r4, [r3, #0]
 801396c:	e7e9      	b.n	8013942 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801396e:	680c      	ldr	r4, [r1, #0]
 8013970:	2c00      	cmp	r4, #0
 8013972:	d0e6      	beq.n	8013942 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013974:	7824      	ldrb	r4, [r4, #0]
 8013976:	e7e4      	b.n	8013942 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013978:	680b      	ldr	r3, [r1, #0]
 801397a:	b10b      	cbz	r3, 8013980 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801397c:	781b      	ldrb	r3, [r3, #0]
 801397e:	e7c5      	b.n	801390c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013980:	2200      	movs	r2, #0
 8013982:	602a      	str	r2, [r5, #0]
 8013984:	240a      	movs	r4, #10
 8013986:	3b30      	subs	r3, #48	; 0x30
 8013988:	b29e      	uxth	r6, r3
 801398a:	2e09      	cmp	r6, #9
 801398c:	682a      	ldr	r2, [r5, #0]
 801398e:	d813      	bhi.n	80139b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013990:	fb04 3302 	mla	r3, r4, r2, r3
 8013994:	602b      	str	r3, [r5, #0]
 8013996:	6803      	ldr	r3, [r0, #0]
 8013998:	b10b      	cbz	r3, 801399e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801399a:	3302      	adds	r3, #2
 801399c:	6003      	str	r3, [r0, #0]
 801399e:	680b      	ldr	r3, [r1, #0]
 80139a0:	b10b      	cbz	r3, 80139a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80139a2:	3301      	adds	r3, #1
 80139a4:	600b      	str	r3, [r1, #0]
 80139a6:	6803      	ldr	r3, [r0, #0]
 80139a8:	b10b      	cbz	r3, 80139ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80139aa:	881b      	ldrh	r3, [r3, #0]
 80139ac:	e7eb      	b.n	8013986 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80139ae:	680b      	ldr	r3, [r1, #0]
 80139b0:	2b00      	cmp	r3, #0
 80139b2:	d0e8      	beq.n	8013986 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80139b4:	781b      	ldrb	r3, [r3, #0]
 80139b6:	e7e6      	b.n	8013986 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80139b8:	2a06      	cmp	r2, #6
 80139ba:	bfa8      	it	ge
 80139bc:	2206      	movge	r2, #6
 80139be:	602a      	str	r2, [r5, #0]
 80139c0:	e7b1      	b.n	8013926 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080139c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80139c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139c6:	b0a3      	sub	sp, #140	; 0x8c
 80139c8:	2600      	movs	r6, #0
 80139ca:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80139ce:	4607      	mov	r7, r0
 80139d0:	4688      	mov	r8, r1
 80139d2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80139d6:	4631      	mov	r1, r6
 80139d8:	2242      	movs	r2, #66	; 0x42
 80139da:	4648      	mov	r0, r9
 80139dc:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80139de:	960d      	str	r6, [sp, #52]	; 0x34
 80139e0:	f00c fefa 	bl	80207d8 <memset>
 80139e4:	b15f      	cbz	r7, 80139fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80139e6:	f108 3aff 	add.w	sl, r8, #4294967295
 80139ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80139ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139ee:	b152      	cbz	r2, 8013a06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80139f0:	8812      	ldrh	r2, [r2, #0]
 80139f2:	b10a      	cbz	r2, 80139f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80139f4:	459a      	cmp	sl, r3
 80139f6:	dc2e      	bgt.n	8013a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80139f8:	2200      	movs	r2, #0
 80139fa:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80139fe:	4638      	mov	r0, r7
 8013a00:	b023      	add	sp, #140	; 0x8c
 8013a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a06:	9a08      	ldr	r2, [sp, #32]
 8013a08:	2a00      	cmp	r2, #0
 8013a0a:	d0f5      	beq.n	80139f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013a0c:	7812      	ldrb	r2, [r2, #0]
 8013a0e:	e7f0      	b.n	80139f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013a10:	2d00      	cmp	r5, #0
 8013a12:	d0ea      	beq.n	80139ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013a14:	782a      	ldrb	r2, [r5, #0]
 8013a16:	b142      	cbz	r2, 8013a2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013a18:	2a25      	cmp	r2, #37	; 0x25
 8013a1a:	d001      	beq.n	8013a20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013a1c:	459a      	cmp	sl, r3
 8013a1e:	dc08      	bgt.n	8013a32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013a20:	f1bb 0f00 	cmp.w	fp, #0
 8013a24:	d121      	bne.n	8013a6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013a26:	2d00      	cmp	r5, #0
 8013a28:	d0df      	beq.n	80139ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013a2a:	782a      	ldrb	r2, [r5, #0]
 8013a2c:	f04f 0b00 	mov.w	fp, #0
 8013a30:	e01d      	b.n	8013a6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013a32:	f1bb 0f00 	cmp.w	fp, #0
 8013a36:	d078      	beq.n	8013b2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013a38:	f8bb 2000 	ldrh.w	r2, [fp]
 8013a3c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013a40:	f1bb 0f00 	cmp.w	fp, #0
 8013a44:	d002      	beq.n	8013a4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013a46:	f10b 0202 	add.w	r2, fp, #2
 8013a4a:	9209      	str	r2, [sp, #36]	; 0x24
 8013a4c:	b10d      	cbz	r5, 8013a52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013a4e:	3501      	adds	r5, #1
 8013a50:	9508      	str	r5, [sp, #32]
 8013a52:	3301      	adds	r3, #1
 8013a54:	930d      	str	r3, [sp, #52]	; 0x34
 8013a56:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013a5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013a5c:	f1bb 0f00 	cmp.w	fp, #0
 8013a60:	d0d6      	beq.n	8013a10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013a62:	f8bb 2000 	ldrh.w	r2, [fp]
 8013a66:	2a00      	cmp	r2, #0
 8013a68:	d1d6      	bne.n	8013a18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013a6a:	f8bb 2000 	ldrh.w	r2, [fp]
 8013a6e:	2a00      	cmp	r2, #0
 8013a70:	d0bb      	beq.n	80139ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013a72:	459a      	cmp	sl, r3
 8013a74:	ddb9      	ble.n	80139ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013a76:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013a7a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013a7e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013a82:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013a86:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013a8a:	960e      	str	r6, [sp, #56]	; 0x38
 8013a8c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013a90:	960f      	str	r6, [sp, #60]	; 0x3c
 8013a92:	f1bb 0f00 	cmp.w	fp, #0
 8013a96:	d002      	beq.n	8013a9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013a98:	f10b 0302 	add.w	r3, fp, #2
 8013a9c:	9309      	str	r3, [sp, #36]	; 0x24
 8013a9e:	b10d      	cbz	r5, 8013aa4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013aa0:	1c6b      	adds	r3, r5, #1
 8013aa2:	9308      	str	r3, [sp, #32]
 8013aa4:	ab0f      	add	r3, sp, #60	; 0x3c
 8013aa6:	9305      	str	r3, [sp, #20]
 8013aa8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013aac:	9304      	str	r3, [sp, #16]
 8013aae:	ab0e      	add	r3, sp, #56	; 0x38
 8013ab0:	9303      	str	r3, [sp, #12]
 8013ab2:	ab0c      	add	r3, sp, #48	; 0x30
 8013ab4:	9302      	str	r3, [sp, #8]
 8013ab6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013aba:	9301      	str	r3, [sp, #4]
 8013abc:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013ac0:	9300      	str	r3, [sp, #0]
 8013ac2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013ac6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013aca:	a908      	add	r1, sp, #32
 8013acc:	a809      	add	r0, sp, #36	; 0x24
 8013ace:	f7ff fea8 	bl	8013822 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013ad2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ad4:	2b00      	cmp	r3, #0
 8013ad6:	bfbe      	ittt	lt
 8013ad8:	6823      	ldrlt	r3, [r4, #0]
 8013ada:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013ade:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013ae0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013ae2:	bfb8      	it	lt
 8013ae4:	3404      	addlt	r4, #4
 8013ae6:	2b00      	cmp	r3, #0
 8013ae8:	bfb8      	it	lt
 8013aea:	6823      	ldrlt	r3, [r4, #0]
 8013aec:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013af0:	bfbe      	ittt	lt
 8013af2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013af6:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013af8:	3404      	addlt	r4, #4
 8013afa:	b1d9      	cbz	r1, 8013b34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013afc:	880b      	ldrh	r3, [r1, #0]
 8013afe:	2b69      	cmp	r3, #105	; 0x69
 8013b00:	d01f      	beq.n	8013b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013b02:	d82f      	bhi.n	8013b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013b04:	2b58      	cmp	r3, #88	; 0x58
 8013b06:	d01c      	beq.n	8013b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013b08:	d818      	bhi.n	8013b3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013b0a:	2b25      	cmp	r3, #37	; 0x25
 8013b0c:	d034      	beq.n	8013b78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013b0e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013b12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b14:	f1bb 0f00 	cmp.w	fp, #0
 8013b18:	f000 80b8 	beq.w	8013c8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013b1c:	f8bb 5000 	ldrh.w	r5, [fp]
 8013b20:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013b24:	3301      	adds	r3, #1
 8013b26:	930d      	str	r3, [sp, #52]	; 0x34
 8013b28:	e029      	b.n	8013b7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013b2a:	b10d      	cbz	r5, 8013b30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013b2c:	782a      	ldrb	r2, [r5, #0]
 8013b2e:	e785      	b.n	8013a3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013b30:	462a      	mov	r2, r5
 8013b32:	e783      	b.n	8013a3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013b34:	2a00      	cmp	r2, #0
 8013b36:	d0ea      	beq.n	8013b0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013b38:	7813      	ldrb	r3, [r2, #0]
 8013b3a:	e7e0      	b.n	8013afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013b3c:	3b63      	subs	r3, #99	; 0x63
 8013b3e:	2b01      	cmp	r3, #1
 8013b40:	d8e5      	bhi.n	8013b0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013b42:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013b46:	b329      	cbz	r1, 8013b94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013b48:	880b      	ldrh	r3, [r1, #0]
 8013b4a:	2b69      	cmp	r3, #105	; 0x69
 8013b4c:	d063      	beq.n	8013c16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013b4e:	d825      	bhi.n	8013b9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013b50:	2b63      	cmp	r3, #99	; 0x63
 8013b52:	d038      	beq.n	8013bc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013b54:	2b64      	cmp	r3, #100	; 0x64
 8013b56:	d05e      	beq.n	8013c16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013b58:	2b58      	cmp	r3, #88	; 0x58
 8013b5a:	d07b      	beq.n	8013c54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013b5c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013b60:	4625      	mov	r5, r4
 8013b62:	e036      	b.n	8013bd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013b64:	2b73      	cmp	r3, #115	; 0x73
 8013b66:	d0ec      	beq.n	8013b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013b68:	d802      	bhi.n	8013b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013b6a:	2b6f      	cmp	r3, #111	; 0x6f
 8013b6c:	d1cf      	bne.n	8013b0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013b6e:	e7e8      	b.n	8013b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013b70:	2b75      	cmp	r3, #117	; 0x75
 8013b72:	d0e6      	beq.n	8013b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013b74:	2b78      	cmp	r3, #120	; 0x78
 8013b76:	e7f9      	b.n	8013b6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013b78:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013b7a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013b7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b80:	b10b      	cbz	r3, 8013b86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013b82:	3302      	adds	r3, #2
 8013b84:	9309      	str	r3, [sp, #36]	; 0x24
 8013b86:	9b08      	ldr	r3, [sp, #32]
 8013b88:	2b00      	cmp	r3, #0
 8013b8a:	f43f af2e 	beq.w	80139ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b8e:	3301      	adds	r3, #1
 8013b90:	9308      	str	r3, [sp, #32]
 8013b92:	e72a      	b.n	80139ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b94:	2a00      	cmp	r2, #0
 8013b96:	d0e1      	beq.n	8013b5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013b98:	7813      	ldrb	r3, [r2, #0]
 8013b9a:	e7d6      	b.n	8013b4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013b9c:	2b73      	cmp	r3, #115	; 0x73
 8013b9e:	d036      	beq.n	8013c0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013ba0:	d807      	bhi.n	8013bb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013ba2:	2b6f      	cmp	r3, #111	; 0x6f
 8013ba4:	d1da      	bne.n	8013b5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013ba6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013ba8:	1d25      	adds	r5, r4, #4
 8013baa:	eba8 0202 	sub.w	r2, r8, r2
 8013bae:	2308      	movs	r3, #8
 8013bb0:	e04a      	b.n	8013c48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013bb2:	2b75      	cmp	r3, #117	; 0x75
 8013bb4:	d043      	beq.n	8013c3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013bb6:	2b78      	cmp	r3, #120	; 0x78
 8013bb8:	d1d0      	bne.n	8013b5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013bba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013bbc:	1d25      	adds	r5, r4, #4
 8013bbe:	eba8 0202 	sub.w	r2, r8, r2
 8013bc2:	2310      	movs	r3, #16
 8013bc4:	e040      	b.n	8013c48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013bc6:	6823      	ldr	r3, [r4, #0]
 8013bc8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8013bcc:	1d25      	adds	r5, r4, #4
 8013bce:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013bd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013bd4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013bd8:	2b00      	cmp	r3, #0
 8013bda:	d052      	beq.n	8013c82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013bdc:	881a      	ldrh	r2, [r3, #0]
 8013bde:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8013be2:	a80d      	add	r0, sp, #52	; 0x34
 8013be4:	9005      	str	r0, [sp, #20]
 8013be6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013bea:	9004      	str	r0, [sp, #16]
 8013bec:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013bee:	9003      	str	r0, [sp, #12]
 8013bf0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8013bf4:	9002      	str	r0, [sp, #8]
 8013bf6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013bf8:	9001      	str	r0, [sp, #4]
 8013bfa:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8013bfe:	9000      	str	r0, [sp, #0]
 8013c00:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013c04:	a810      	add	r0, sp, #64	; 0x40
 8013c06:	f7ff fd49 	bl	801369c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013c0a:	462c      	mov	r4, r5
 8013c0c:	e7b7      	b.n	8013b7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013c0e:	6823      	ldr	r3, [r4, #0]
 8013c10:	1d25      	adds	r5, r4, #4
 8013c12:	9310      	str	r3, [sp, #64]	; 0x40
 8013c14:	e7dd      	b.n	8013bd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013c16:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013c18:	6820      	ldr	r0, [r4, #0]
 8013c1a:	eba8 0202 	sub.w	r2, r8, r2
 8013c1e:	230a      	movs	r3, #10
 8013c20:	b292      	uxth	r2, r2
 8013c22:	4649      	mov	r1, r9
 8013c24:	f7ff fd08 	bl	8013638 <_ZN8touchgfx7Unicode4itoaElPtti>
 8013c28:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013c2c:	2b2d      	cmp	r3, #45	; 0x2d
 8013c2e:	f104 0504 	add.w	r5, r4, #4
 8013c32:	d1ce      	bne.n	8013bd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013c34:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013c38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013c3a:	3302      	adds	r3, #2
 8013c3c:	e7e9      	b.n	8013c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013c3e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013c40:	1d25      	adds	r5, r4, #4
 8013c42:	eba8 0202 	sub.w	r2, r8, r2
 8013c46:	230a      	movs	r3, #10
 8013c48:	b292      	uxth	r2, r2
 8013c4a:	4649      	mov	r1, r9
 8013c4c:	6820      	ldr	r0, [r4, #0]
 8013c4e:	f7ff fcd5 	bl	80135fc <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013c52:	e7be      	b.n	8013bd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013c54:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013c56:	6820      	ldr	r0, [r4, #0]
 8013c58:	eba8 0202 	sub.w	r2, r8, r2
 8013c5c:	b292      	uxth	r2, r2
 8013c5e:	2310      	movs	r3, #16
 8013c60:	4649      	mov	r1, r9
 8013c62:	f7ff fccb 	bl	80135fc <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013c66:	1d25      	adds	r5, r4, #4
 8013c68:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013c6c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013c70:	2b00      	cmp	r3, #0
 8013c72:	d0ae      	beq.n	8013bd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013c74:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013c78:	2919      	cmp	r1, #25
 8013c7a:	d8f7      	bhi.n	8013c6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013c7c:	3b20      	subs	r3, #32
 8013c7e:	8013      	strh	r3, [r2, #0]
 8013c80:	e7f4      	b.n	8013c6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013c82:	9a08      	ldr	r2, [sp, #32]
 8013c84:	2a00      	cmp	r2, #0
 8013c86:	d0aa      	beq.n	8013bde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013c88:	7812      	ldrb	r2, [r2, #0]
 8013c8a:	e7a8      	b.n	8013bde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013c8c:	2d00      	cmp	r5, #0
 8013c8e:	f43f af47 	beq.w	8013b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8013c92:	782d      	ldrb	r5, [r5, #0]
 8013c94:	e744      	b.n	8013b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08013c96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8013c96:	b507      	push	{r0, r1, r2, lr}
 8013c98:	9300      	str	r3, [sp, #0]
 8013c9a:	4613      	mov	r3, r2
 8013c9c:	2200      	movs	r2, #0
 8013c9e:	f7ff fe90 	bl	80139c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8013ca2:	b003      	add	sp, #12
 8013ca4:	f85d fb04 	ldr.w	pc, [sp], #4

08013ca8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8013ca8:	b40c      	push	{r2, r3}
 8013caa:	b507      	push	{r0, r1, r2, lr}
 8013cac:	ab04      	add	r3, sp, #16
 8013cae:	f853 2b04 	ldr.w	r2, [r3], #4
 8013cb2:	9301      	str	r3, [sp, #4]
 8013cb4:	f7ff ffef 	bl	8013c96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8013cb8:	b003      	add	sp, #12
 8013cba:	f85d eb04 	ldr.w	lr, [sp], #4
 8013cbe:	b002      	add	sp, #8
 8013cc0:	4770      	bx	lr
	...

08013cc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8013cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cc8:	b0c3      	sub	sp, #268	; 0x10c
 8013cca:	2600      	movs	r6, #0
 8013ccc:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8013cd0:	4607      	mov	r7, r0
 8013cd2:	4689      	mov	r9, r1
 8013cd4:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013cd8:	4631      	mov	r1, r6
 8013cda:	22c8      	movs	r2, #200	; 0xc8
 8013cdc:	4640      	mov	r0, r8
 8013cde:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8013ce2:	960c      	str	r6, [sp, #48]	; 0x30
 8013ce4:	f00c fd78 	bl	80207d8 <memset>
 8013ce8:	b17f      	cbz	r7, 8013d0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 8013cea:	eddf 5aa4 	vldr	s11, [pc, #656]	; 8013f7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8013cee:	f8df b298 	ldr.w	fp, [pc, #664]	; 8013f88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8013cf2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013cf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013cf6:	b162      	cbz	r2, 8013d12 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 8013cf8:	8812      	ldrh	r2, [r2, #0]
 8013cfa:	b11a      	cbz	r2, 8013d04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8013cfc:	f109 31ff 	add.w	r1, r9, #4294967295
 8013d00:	4299      	cmp	r1, r3
 8013d02:	dc26      	bgt.n	8013d52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8013d04:	2200      	movs	r2, #0
 8013d06:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013d0a:	4638      	mov	r0, r7
 8013d0c:	b043      	add	sp, #268	; 0x10c
 8013d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d12:	9a08      	ldr	r2, [sp, #32]
 8013d14:	2a00      	cmp	r2, #0
 8013d16:	d0f5      	beq.n	8013d04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8013d18:	7812      	ldrb	r2, [r2, #0]
 8013d1a:	e7ee      	b.n	8013cfa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8013d1c:	2c00      	cmp	r4, #0
 8013d1e:	d0e8      	beq.n	8013cf2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013d20:	7822      	ldrb	r2, [r4, #0]
 8013d22:	b132      	cbz	r2, 8013d32 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8013d24:	2a25      	cmp	r2, #37	; 0x25
 8013d26:	d001      	beq.n	8013d2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 8013d28:	4299      	cmp	r1, r3
 8013d2a:	dc05      	bgt.n	8013d38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8013d2c:	b9cd      	cbnz	r5, 8013d62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8013d2e:	2c00      	cmp	r4, #0
 8013d30:	d0df      	beq.n	8013cf2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013d32:	7822      	ldrb	r2, [r4, #0]
 8013d34:	2500      	movs	r5, #0
 8013d36:	e015      	b.n	8013d64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 8013d38:	2d00      	cmp	r5, #0
 8013d3a:	d073      	beq.n	8013e24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8013d3c:	882a      	ldrh	r2, [r5, #0]
 8013d3e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013d42:	b10d      	cbz	r5, 8013d48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8013d44:	3502      	adds	r5, #2
 8013d46:	9509      	str	r5, [sp, #36]	; 0x24
 8013d48:	b10c      	cbz	r4, 8013d4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 8013d4a:	3401      	adds	r4, #1
 8013d4c:	9408      	str	r4, [sp, #32]
 8013d4e:	3301      	adds	r3, #1
 8013d50:	930c      	str	r3, [sp, #48]	; 0x30
 8013d52:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 8013d56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013d58:	2d00      	cmp	r5, #0
 8013d5a:	d0df      	beq.n	8013d1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8013d5c:	882a      	ldrh	r2, [r5, #0]
 8013d5e:	2a00      	cmp	r2, #0
 8013d60:	d1e0      	bne.n	8013d24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8013d62:	882a      	ldrh	r2, [r5, #0]
 8013d64:	2a00      	cmp	r2, #0
 8013d66:	d0c4      	beq.n	8013cf2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013d68:	4299      	cmp	r1, r3
 8013d6a:	ddc2      	ble.n	8013cf2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013d6c:	2300      	movs	r3, #0
 8013d6e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013d72:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8013d76:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8013d7a:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013d7e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013d82:	930d      	str	r3, [sp, #52]	; 0x34
 8013d84:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8013d88:	930e      	str	r3, [sp, #56]	; 0x38
 8013d8a:	b10d      	cbz	r5, 8013d90 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8013d8c:	1cab      	adds	r3, r5, #2
 8013d8e:	9309      	str	r3, [sp, #36]	; 0x24
 8013d90:	b10c      	cbz	r4, 8013d96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8013d92:	1c63      	adds	r3, r4, #1
 8013d94:	9308      	str	r3, [sp, #32]
 8013d96:	ab0e      	add	r3, sp, #56	; 0x38
 8013d98:	9305      	str	r3, [sp, #20]
 8013d9a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013d9e:	9304      	str	r3, [sp, #16]
 8013da0:	ab0d      	add	r3, sp, #52	; 0x34
 8013da2:	9303      	str	r3, [sp, #12]
 8013da4:	ab0b      	add	r3, sp, #44	; 0x2c
 8013da6:	9302      	str	r3, [sp, #8]
 8013da8:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8013dac:	9301      	str	r3, [sp, #4]
 8013dae:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8013db2:	9300      	str	r3, [sp, #0]
 8013db4:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 8013db8:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8013dbc:	a908      	add	r1, sp, #32
 8013dbe:	a809      	add	r0, sp, #36	; 0x24
 8013dc0:	f7ff fd2f 	bl	8013822 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013dc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013dc6:	2b00      	cmp	r3, #0
 8013dc8:	da0b      	bge.n	8013de2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 8013dca:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8013dce:	edd3 7a00 	vldr	s15, [r3]
 8013dd2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013dd6:	3601      	adds	r6, #1
 8013dd8:	ee17 3a90 	vmov	r3, s15
 8013ddc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013de0:	930d      	str	r3, [sp, #52]	; 0x34
 8013de2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013de4:	2b00      	cmp	r3, #0
 8013de6:	da0b      	bge.n	8013e00 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 8013de8:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8013dec:	edd3 7a00 	vldr	s15, [r3]
 8013df0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013df4:	3601      	adds	r6, #1
 8013df6:	ee17 3a90 	vmov	r3, s15
 8013dfa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013dfe:	930e      	str	r3, [sp, #56]	; 0x38
 8013e00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e02:	b1a3      	cbz	r3, 8013e2e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8013e04:	881a      	ldrh	r2, [r3, #0]
 8013e06:	2a25      	cmp	r2, #37	; 0x25
 8013e08:	d016      	beq.n	8013e38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 8013e0a:	2a66      	cmp	r2, #102	; 0x66
 8013e0c:	d01a      	beq.n	8013e44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8013e0e:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8013e12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e14:	2d00      	cmp	r5, #0
 8013e16:	f000 80fe 	beq.w	8014016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 8013e1a:	882c      	ldrh	r4, [r5, #0]
 8013e1c:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8013e20:	3301      	adds	r3, #1
 8013e22:	e00d      	b.n	8013e40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8013e24:	b10c      	cbz	r4, 8013e2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 8013e26:	7822      	ldrb	r2, [r4, #0]
 8013e28:	e789      	b.n	8013d3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8013e2a:	4622      	mov	r2, r4
 8013e2c:	e787      	b.n	8013d3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8013e2e:	9b08      	ldr	r3, [sp, #32]
 8013e30:	2b00      	cmp	r3, #0
 8013e32:	d0ec      	beq.n	8013e0e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8013e34:	781a      	ldrb	r2, [r3, #0]
 8013e36:	e7e6      	b.n	8013e06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 8013e38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e3a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013e3e:	3302      	adds	r3, #2
 8013e40:	930c      	str	r3, [sp, #48]	; 0x30
 8013e42:	e042      	b.n	8013eca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8013e44:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8013e48:	edd3 7a00 	vldr	s15, [r3]
 8013e4c:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8013e50:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8013e54:	3601      	adds	r6, #1
 8013e56:	b923      	cbnz	r3, 8013e62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 8013e58:	2301      	movs	r3, #1
 8013e5a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8013e5e:	2306      	movs	r3, #6
 8013e60:	930e      	str	r3, [sp, #56]	; 0x38
 8013e62:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013e66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e6a:	bf48      	it	mi
 8013e6c:	eef1 7a67 	vnegmi.f32	s15, s15
 8013e70:	eeb0 7ae7 	vabs.f32	s14, s15
 8013e74:	bf48      	it	mi
 8013e76:	232d      	movmi	r3, #45	; 0x2d
 8013e78:	eeb4 7a65 	vcmp.f32	s14, s11
 8013e7c:	bf48      	it	mi
 8013e7e:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 8013e82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e86:	dd2b      	ble.n	8013ee0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 8013e88:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8013e8c:	2366      	movs	r3, #102	; 0x66
 8013e8e:	9311      	str	r3, [sp, #68]	; 0x44
 8013e90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e92:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013e96:	2b00      	cmp	r3, #0
 8013e98:	f000 80b7 	beq.w	801400a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8013e9c:	881a      	ldrh	r2, [r3, #0]
 8013e9e:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8013ea2:	a80c      	add	r0, sp, #48	; 0x30
 8013ea4:	9005      	str	r0, [sp, #20]
 8013ea6:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 8013eaa:	9004      	str	r0, [sp, #16]
 8013eac:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013eae:	9003      	str	r0, [sp, #12]
 8013eb0:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8013eb4:	9002      	str	r0, [sp, #8]
 8013eb6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013eb8:	9001      	str	r0, [sp, #4]
 8013eba:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8013ebe:	9000      	str	r0, [sp, #0]
 8013ec0:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8013ec4:	a80f      	add	r0, sp, #60	; 0x3c
 8013ec6:	f7ff fbe9 	bl	801369c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013eca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ecc:	b10b      	cbz	r3, 8013ed2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8013ece:	3302      	adds	r3, #2
 8013ed0:	9309      	str	r3, [sp, #36]	; 0x24
 8013ed2:	9b08      	ldr	r3, [sp, #32]
 8013ed4:	2b00      	cmp	r3, #0
 8013ed6:	f43f af0c 	beq.w	8013cf2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013eda:	3301      	adds	r3, #1
 8013edc:	9308      	str	r3, [sp, #32]
 8013ede:	e708      	b.n	8013cf2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013ee0:	eef4 7a67 	vcmp.f32	s15, s15
 8013ee4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ee8:	d60b      	bvs.n	8013f02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 8013eea:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013eec:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8013f80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8013ef0:	2300      	movs	r3, #0
 8013ef2:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 8013ef6:	4283      	cmp	r3, r0
 8013ef8:	da07      	bge.n	8013f0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 8013efa:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8013efe:	3301      	adds	r3, #1
 8013f00:	e7f9      	b.n	8013ef6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8013f02:	4b20      	ldr	r3, [pc, #128]	; (8013f84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8013f04:	9310      	str	r3, [sp, #64]	; 0x40
 8013f06:	236e      	movs	r3, #110	; 0x6e
 8013f08:	e7c1      	b.n	8013e8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 8013f0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8013f0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013f12:	eeb0 7a67 	vmov.f32	s14, s15
 8013f16:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8013f1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f1e:	da27      	bge.n	8013f70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8013f20:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013f22:	2100      	movs	r1, #0
 8013f24:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 8013f28:	eba9 0202 	sub.w	r2, r9, r2
 8013f2c:	eef4 6ac5 	vcmpe.f32	s13, s10
 8013f30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f34:	b28c      	uxth	r4, r1
 8013f36:	db2a      	blt.n	8013f8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8013f38:	1a53      	subs	r3, r2, r1
 8013f3a:	2b00      	cmp	r3, #0
 8013f3c:	dd27      	ble.n	8013f8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8013f3e:	2963      	cmp	r1, #99	; 0x63
 8013f40:	d024      	beq.n	8013f8c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8013f42:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013f46:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8013f4a:	ee17 3a10 	vmov	r3, s14
 8013f4e:	2b09      	cmp	r3, #9
 8013f50:	bfa8      	it	ge
 8013f52:	2309      	movge	r3, #9
 8013f54:	ee07 3a10 	vmov	s14, r3
 8013f58:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013f5c:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8013f60:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 8013f64:	eee7 7a66 	vfms.f32	s15, s14, s13
 8013f68:	3101      	adds	r1, #1
 8013f6a:	eec6 6a86 	vdiv.f32	s13, s13, s12
 8013f6e:	e7dd      	b.n	8013f2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 8013f70:	ee66 6a86 	vmul.f32	s13, s13, s12
 8013f74:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8013f78:	e7cd      	b.n	8013f16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 8013f7a:	bf00      	nop
 8013f7c:	7f7fffff 	.word	0x7f7fffff
 8013f80:	3f000002 	.word	0x3f000002
 8013f84:	0061006e 	.word	0x0061006e
 8013f88:	006e0069 	.word	0x006e0069
 8013f8c:	460c      	mov	r4, r1
 8013f8e:	2a63      	cmp	r2, #99	; 0x63
 8013f90:	bfd4      	ite	le
 8013f92:	ebc4 0202 	rsble	r2, r4, r2
 8013f96:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 8013f9a:	2a00      	cmp	r2, #0
 8013f9c:	dd30      	ble.n	8014000 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8013f9e:	4603      	mov	r3, r0
 8013fa0:	2501      	movs	r5, #1
 8013fa2:	210a      	movs	r1, #10
 8013fa4:	2b00      	cmp	r3, #0
 8013fa6:	dd0d      	ble.n	8013fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 8013fa8:	ee67 7a86 	vmul.f32	s15, s15, s12
 8013fac:	3b01      	subs	r3, #1
 8013fae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8013fb2:	ee17 ca10 	vmov	ip, s14
 8013fb6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013fba:	fb01 c505 	mla	r5, r1, r5, ip
 8013fbe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8013fc2:	e7ef      	b.n	8013fa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8013fc4:	2800      	cmp	r0, #0
 8013fc6:	f100 33ff 	add.w	r3, r0, #4294967295
 8013fca:	bfac      	ite	ge
 8013fcc:	1a18      	subge	r0, r3, r0
 8013fce:	4618      	movlt	r0, r3
 8013fd0:	0064      	lsls	r4, r4, #1
 8013fd2:	900e      	str	r0, [sp, #56]	; 0x38
 8013fd4:	230a      	movs	r3, #10
 8013fd6:	b292      	uxth	r2, r2
 8013fd8:	eb08 0104 	add.w	r1, r8, r4
 8013fdc:	4628      	mov	r0, r5
 8013fde:	f7ff fb2b 	bl	8013638 <_ZN8touchgfx7Unicode4itoaElPtti>
 8013fe2:	2d01      	cmp	r5, #1
 8013fe4:	dc0a      	bgt.n	8013ffc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8013fe6:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 8013fea:	2b00      	cmp	r3, #0
 8013fec:	bf0c      	ite	eq
 8013fee:	2300      	moveq	r3, #0
 8013ff0:	232e      	movne	r3, #46	; 0x2e
 8013ff2:	aa42      	add	r2, sp, #264	; 0x108
 8013ff4:	4414      	add	r4, r2
 8013ff6:	f824 3cc8 	strh.w	r3, [r4, #-200]
 8013ffa:	e749      	b.n	8013e90 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8013ffc:	232e      	movs	r3, #46	; 0x2e
 8013ffe:	e7f8      	b.n	8013ff2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014000:	ab42      	add	r3, sp, #264	; 0x108
 8014002:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8014006:	2300      	movs	r3, #0
 8014008:	e7f5      	b.n	8013ff6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801400a:	9a08      	ldr	r2, [sp, #32]
 801400c:	2a00      	cmp	r2, #0
 801400e:	f43f af46 	beq.w	8013e9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014012:	7812      	ldrb	r2, [r2, #0]
 8014014:	e743      	b.n	8013e9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014016:	2c00      	cmp	r4, #0
 8014018:	f43f af00 	beq.w	8013e1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801401c:	7824      	ldrb	r4, [r4, #0]
 801401e:	e6fd      	b.n	8013e1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014020 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014020:	b507      	push	{r0, r1, r2, lr}
 8014022:	9300      	str	r3, [sp, #0]
 8014024:	4613      	mov	r3, r2
 8014026:	2200      	movs	r2, #0
 8014028:	f7ff fe4c 	bl	8013cc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801402c:	b003      	add	sp, #12
 801402e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014034 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014034:	4b01      	ldr	r3, [pc, #4]	; (801403c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8014036:	6018      	str	r0, [r3, #0]
 8014038:	4770      	bx	lr
 801403a:	bf00      	nop
 801403c:	2001544c 	.word	0x2001544c

08014040 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014040:	4b06      	ldr	r3, [pc, #24]	; (801405c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014042:	881a      	ldrh	r2, [r3, #0]
 8014044:	4282      	cmp	r2, r0
 8014046:	d807      	bhi.n	8014058 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8014048:	4b05      	ldr	r3, [pc, #20]	; (8014060 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801404a:	881b      	ldrh	r3, [r3, #0]
 801404c:	4413      	add	r3, r2
 801404e:	4298      	cmp	r0, r3
 8014050:	bfac      	ite	ge
 8014052:	2000      	movge	r0, #0
 8014054:	2001      	movlt	r0, #1
 8014056:	4770      	bx	lr
 8014058:	2000      	movs	r0, #0
 801405a:	4770      	bx	lr
 801405c:	2001546c 	.word	0x2001546c
 8014060:	20015470 	.word	0x20015470

08014064 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014064:	b508      	push	{r3, lr}
 8014066:	4601      	mov	r1, r0
 8014068:	f7ff ffea 	bl	8014040 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801406c:	b118      	cbz	r0, 8014076 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801406e:	4b02      	ldr	r3, [pc, #8]	; (8014078 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8014070:	681b      	ldr	r3, [r3, #0]
 8014072:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8014076:	bd08      	pop	{r3, pc}
 8014078:	20015450 	.word	0x20015450

0801407c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801407c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801407e:	4c24      	ldr	r4, [pc, #144]	; (8014110 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8014080:	6823      	ldr	r3, [r4, #0]
 8014082:	2b00      	cmp	r3, #0
 8014084:	d042      	beq.n	801410c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014086:	4a23      	ldr	r2, [pc, #140]	; (8014114 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8014088:	4d23      	ldr	r5, [pc, #140]	; (8014118 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801408a:	8811      	ldrh	r1, [r2, #0]
 801408c:	f8b5 c000 	ldrh.w	ip, [r5]
 8014090:	4822      	ldr	r0, [pc, #136]	; (801411c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8014092:	4461      	add	r1, ip
 8014094:	1c4a      	adds	r2, r1, #1
 8014096:	f022 0201 	bic.w	r2, r2, #1
 801409a:	008f      	lsls	r7, r1, #2
 801409c:	0412      	lsls	r2, r2, #16
 801409e:	19de      	adds	r6, r3, r7
 80140a0:	0c12      	lsrs	r2, r2, #16
 80140a2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80140a6:	6006      	str	r6, [r0, #0]
 80140a8:	4e1d      	ldr	r6, [pc, #116]	; (8014120 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80140aa:	19da      	adds	r2, r3, r7
 80140ac:	6032      	str	r2, [r6, #0]
 80140ae:	220e      	movs	r2, #14
 80140b0:	fb02 f20c 	mul.w	r2, r2, ip
 80140b4:	3203      	adds	r2, #3
 80140b6:	f022 0203 	bic.w	r2, r2, #3
 80140ba:	443a      	add	r2, r7
 80140bc:	4f19      	ldr	r7, [pc, #100]	; (8014124 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80140be:	4413      	add	r3, r2
 80140c0:	603b      	str	r3, [r7, #0]
 80140c2:	4f19      	ldr	r7, [pc, #100]	; (8014128 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80140c4:	2300      	movs	r3, #0
 80140c6:	803b      	strh	r3, [r7, #0]
 80140c8:	4f18      	ldr	r7, [pc, #96]	; (801412c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80140ca:	683f      	ldr	r7, [r7, #0]
 80140cc:	1aba      	subs	r2, r7, r2
 80140ce:	4f18      	ldr	r7, [pc, #96]	; (8014130 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80140d0:	603a      	str	r2, [r7, #0]
 80140d2:	4a18      	ldr	r2, [pc, #96]	; (8014134 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80140d4:	469c      	mov	ip, r3
 80140d6:	8013      	strh	r3, [r2, #0]
 80140d8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80140dc:	428b      	cmp	r3, r1
 80140de:	d10d      	bne.n	80140fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80140e0:	882d      	ldrh	r5, [r5, #0]
 80140e2:	6830      	ldr	r0, [r6, #0]
 80140e4:	2300      	movs	r3, #0
 80140e6:	240e      	movs	r4, #14
 80140e8:	429d      	cmp	r5, r3
 80140ea:	d90f      	bls.n	801410c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80140ec:	fb04 0203 	mla	r2, r4, r3, r0
 80140f0:	3301      	adds	r3, #1
 80140f2:	7b11      	ldrb	r1, [r2, #12]
 80140f4:	f36f 1145 	bfc	r1, #5, #1
 80140f8:	7311      	strb	r1, [r2, #12]
 80140fa:	e7f5      	b.n	80140e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80140fc:	6822      	ldr	r2, [r4, #0]
 80140fe:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014102:	6802      	ldr	r2, [r0, #0]
 8014104:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8014108:	3301      	adds	r3, #1
 801410a:	e7e7      	b.n	80140dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801410c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801410e:	bf00      	nop
 8014110:	20015450 	.word	0x20015450
 8014114:	2001546c 	.word	0x2001546c
 8014118:	20015470 	.word	0x20015470
 801411c:	20015464 	.word	0x20015464
 8014120:	20015454 	.word	0x20015454
 8014124:	2001545c 	.word	0x2001545c
 8014128:	2001546e 	.word	0x2001546e
 801412c:	20015458 	.word	0x20015458
 8014130:	20015468 	.word	0x20015468
 8014134:	20015460 	.word	0x20015460

08014138 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8014138:	4b06      	ldr	r3, [pc, #24]	; (8014154 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801413a:	681b      	ldr	r3, [r3, #0]
 801413c:	b943      	cbnz	r3, 8014150 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801413e:	b139      	cbz	r1, 8014150 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014140:	4b05      	ldr	r3, [pc, #20]	; (8014158 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014142:	801a      	strh	r2, [r3, #0]
 8014144:	4b05      	ldr	r3, [pc, #20]	; (801415c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8014146:	6019      	str	r1, [r3, #0]
 8014148:	4b05      	ldr	r3, [pc, #20]	; (8014160 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801414a:	6018      	str	r0, [r3, #0]
 801414c:	f7ff bf96 	b.w	801407c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014150:	4770      	bx	lr
 8014152:	bf00      	nop
 8014154:	2001545c 	.word	0x2001545c
 8014158:	20015470 	.word	0x20015470
 801415c:	20015458 	.word	0x20015458
 8014160:	20015450 	.word	0x20015450

08014164 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014164:	b470      	push	{r4, r5, r6}
 8014166:	4c07      	ldr	r4, [pc, #28]	; (8014184 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8014168:	6826      	ldr	r6, [r4, #0]
 801416a:	4605      	mov	r5, r0
 801416c:	4610      	mov	r0, r2
 801416e:	9a03      	ldr	r2, [sp, #12]
 8014170:	b936      	cbnz	r6, 8014180 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014172:	6025      	str	r5, [r4, #0]
 8014174:	4c04      	ldr	r4, [pc, #16]	; (8014188 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8014176:	8021      	strh	r1, [r4, #0]
 8014178:	bc70      	pop	{r4, r5, r6}
 801417a:	4619      	mov	r1, r3
 801417c:	f7ff bfdc 	b.w	8014138 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8014180:	bc70      	pop	{r4, r5, r6}
 8014182:	4770      	bx	lr
 8014184:	20015474 	.word	0x20015474
 8014188:	2001546c 	.word	0x2001546c

0801418c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801418c:	4a12      	ldr	r2, [pc, #72]	; (80141d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801418e:	8803      	ldrh	r3, [r0, #0]
 8014190:	8812      	ldrh	r2, [r2, #0]
 8014192:	4293      	cmp	r3, r2
 8014194:	d207      	bcs.n	80141a6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8014196:	4a11      	ldr	r2, [pc, #68]	; (80141dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8014198:	6812      	ldr	r2, [r2, #0]
 801419a:	2114      	movs	r1, #20
 801419c:	fb01 2303 	mla	r3, r1, r3, r2
 80141a0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80141a4:	4770      	bx	lr
 80141a6:	490e      	ldr	r1, [pc, #56]	; (80141e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80141a8:	8809      	ldrh	r1, [r1, #0]
 80141aa:	4411      	add	r1, r2
 80141ac:	428b      	cmp	r3, r1
 80141ae:	da04      	bge.n	80141ba <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80141b0:	1a9b      	subs	r3, r3, r2
 80141b2:	4a0c      	ldr	r2, [pc, #48]	; (80141e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80141b4:	210e      	movs	r1, #14
 80141b6:	6812      	ldr	r2, [r2, #0]
 80141b8:	e7f0      	b.n	801419c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80141ba:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80141be:	4293      	cmp	r3, r2
 80141c0:	d108      	bne.n	80141d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80141c2:	4b09      	ldr	r3, [pc, #36]	; (80141e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80141c4:	781b      	ldrb	r3, [r3, #0]
 80141c6:	b91b      	cbnz	r3, 80141d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80141c8:	4b08      	ldr	r3, [pc, #32]	; (80141ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80141ca:	f9b3 0000 	ldrsh.w	r0, [r3]
 80141ce:	4770      	bx	lr
 80141d0:	4b07      	ldr	r3, [pc, #28]	; (80141f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80141d2:	e7fa      	b.n	80141ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80141d4:	2000      	movs	r0, #0
 80141d6:	4770      	bx	lr
 80141d8:	2001546c 	.word	0x2001546c
 80141dc:	20015474 	.word	0x20015474
 80141e0:	20015470 	.word	0x20015470
 80141e4:	20015454 	.word	0x20015454
 80141e8:	200153dc 	.word	0x200153dc
 80141ec:	200153de 	.word	0x200153de
 80141f0:	200153e0 	.word	0x200153e0

080141f4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80141f4:	4a12      	ldr	r2, [pc, #72]	; (8014240 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80141f6:	8803      	ldrh	r3, [r0, #0]
 80141f8:	8812      	ldrh	r2, [r2, #0]
 80141fa:	4293      	cmp	r3, r2
 80141fc:	d207      	bcs.n	801420e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80141fe:	4a11      	ldr	r2, [pc, #68]	; (8014244 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014200:	6812      	ldr	r2, [r2, #0]
 8014202:	2114      	movs	r1, #20
 8014204:	fb01 2303 	mla	r3, r1, r3, r2
 8014208:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801420c:	4770      	bx	lr
 801420e:	490e      	ldr	r1, [pc, #56]	; (8014248 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014210:	8809      	ldrh	r1, [r1, #0]
 8014212:	4411      	add	r1, r2
 8014214:	428b      	cmp	r3, r1
 8014216:	da04      	bge.n	8014222 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8014218:	1a9b      	subs	r3, r3, r2
 801421a:	4a0c      	ldr	r2, [pc, #48]	; (801424c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801421c:	210e      	movs	r1, #14
 801421e:	6812      	ldr	r2, [r2, #0]
 8014220:	e7f0      	b.n	8014204 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014222:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014226:	4293      	cmp	r3, r2
 8014228:	d108      	bne.n	801423c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801422a:	4b09      	ldr	r3, [pc, #36]	; (8014250 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801422c:	781b      	ldrb	r3, [r3, #0]
 801422e:	b91b      	cbnz	r3, 8014238 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014230:	4b08      	ldr	r3, [pc, #32]	; (8014254 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014232:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014236:	4770      	bx	lr
 8014238:	4b07      	ldr	r3, [pc, #28]	; (8014258 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801423a:	e7fa      	b.n	8014232 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801423c:	2000      	movs	r0, #0
 801423e:	4770      	bx	lr
 8014240:	2001546c 	.word	0x2001546c
 8014244:	20015474 	.word	0x20015474
 8014248:	20015470 	.word	0x20015470
 801424c:	20015454 	.word	0x20015454
 8014250:	200153dc 	.word	0x200153dc
 8014254:	200153e0 	.word	0x200153e0
 8014258:	200153de 	.word	0x200153de

0801425c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801425c:	b510      	push	{r4, lr}
 801425e:	4a1f      	ldr	r2, [pc, #124]	; (80142dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8014260:	880b      	ldrh	r3, [r1, #0]
 8014262:	8812      	ldrh	r2, [r2, #0]
 8014264:	4293      	cmp	r3, r2
 8014266:	d213      	bcs.n	8014290 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8014268:	4a1d      	ldr	r2, [pc, #116]	; (80142e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801426a:	6812      	ldr	r2, [r2, #0]
 801426c:	2114      	movs	r1, #20
 801426e:	fb01 2303 	mla	r3, r1, r3, r2
 8014272:	8a1a      	ldrh	r2, [r3, #16]
 8014274:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8014278:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801427c:	8a5b      	ldrh	r3, [r3, #18]
 801427e:	8004      	strh	r4, [r0, #0]
 8014280:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014284:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8014288:	8041      	strh	r1, [r0, #2]
 801428a:	8082      	strh	r2, [r0, #4]
 801428c:	80c3      	strh	r3, [r0, #6]
 801428e:	e00e      	b.n	80142ae <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014290:	4914      	ldr	r1, [pc, #80]	; (80142e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8014292:	8809      	ldrh	r1, [r1, #0]
 8014294:	4411      	add	r1, r2
 8014296:	428b      	cmp	r3, r1
 8014298:	da0a      	bge.n	80142b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801429a:	1a9b      	subs	r3, r3, r2
 801429c:	4a12      	ldr	r2, [pc, #72]	; (80142e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801429e:	6812      	ldr	r2, [r2, #0]
 80142a0:	210e      	movs	r1, #14
 80142a2:	fb01 2303 	mla	r3, r1, r3, r2
 80142a6:	681a      	ldr	r2, [r3, #0]
 80142a8:	6002      	str	r2, [r0, #0]
 80142aa:	685a      	ldr	r2, [r3, #4]
 80142ac:	6042      	str	r2, [r0, #4]
 80142ae:	bd10      	pop	{r4, pc}
 80142b0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80142b4:	4293      	cmp	r3, r2
 80142b6:	d10b      	bne.n	80142d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80142b8:	4b0c      	ldr	r3, [pc, #48]	; (80142ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80142ba:	f9b3 1000 	ldrsh.w	r1, [r3]
 80142be:	4b0c      	ldr	r3, [pc, #48]	; (80142f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80142c0:	8081      	strh	r1, [r0, #4]
 80142c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80142c6:	80c2      	strh	r2, [r0, #6]
 80142c8:	2300      	movs	r3, #0
 80142ca:	8003      	strh	r3, [r0, #0]
 80142cc:	8043      	strh	r3, [r0, #2]
 80142ce:	e7ee      	b.n	80142ae <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80142d0:	2300      	movs	r3, #0
 80142d2:	8003      	strh	r3, [r0, #0]
 80142d4:	8043      	strh	r3, [r0, #2]
 80142d6:	8083      	strh	r3, [r0, #4]
 80142d8:	e7d8      	b.n	801428c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80142da:	bf00      	nop
 80142dc:	2001546c 	.word	0x2001546c
 80142e0:	20015474 	.word	0x20015474
 80142e4:	20015470 	.word	0x20015470
 80142e8:	20015454 	.word	0x20015454
 80142ec:	200153d8 	.word	0x200153d8
 80142f0:	200153da 	.word	0x200153da

080142f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80142f4:	4a17      	ldr	r2, [pc, #92]	; (8014354 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80142f6:	8803      	ldrh	r3, [r0, #0]
 80142f8:	8812      	ldrh	r2, [r2, #0]
 80142fa:	4293      	cmp	r3, r2
 80142fc:	d213      	bcs.n	8014326 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80142fe:	4a16      	ldr	r2, [pc, #88]	; (8014358 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014300:	6812      	ldr	r2, [r2, #0]
 8014302:	2114      	movs	r1, #20
 8014304:	fb01 2303 	mla	r3, r1, r3, r2
 8014308:	8a1a      	ldrh	r2, [r3, #16]
 801430a:	8919      	ldrh	r1, [r3, #8]
 801430c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014310:	428a      	cmp	r2, r1
 8014312:	db1d      	blt.n	8014350 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014314:	8a58      	ldrh	r0, [r3, #18]
 8014316:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801431a:	895b      	ldrh	r3, [r3, #10]
 801431c:	4298      	cmp	r0, r3
 801431e:	bfac      	ite	ge
 8014320:	2000      	movge	r0, #0
 8014322:	2001      	movlt	r0, #1
 8014324:	4770      	bx	lr
 8014326:	490d      	ldr	r1, [pc, #52]	; (801435c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8014328:	8809      	ldrh	r1, [r1, #0]
 801432a:	4411      	add	r1, r2
 801432c:	428b      	cmp	r3, r1
 801432e:	da0d      	bge.n	801434c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014330:	1a9b      	subs	r3, r3, r2
 8014332:	4a0b      	ldr	r2, [pc, #44]	; (8014360 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014334:	6812      	ldr	r2, [r2, #0]
 8014336:	210e      	movs	r1, #14
 8014338:	fb01 2303 	mla	r3, r1, r3, r2
 801433c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014340:	891a      	ldrh	r2, [r3, #8]
 8014342:	4291      	cmp	r1, r2
 8014344:	db04      	blt.n	8014350 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014346:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801434a:	e7e6      	b.n	801431a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801434c:	2000      	movs	r0, #0
 801434e:	4770      	bx	lr
 8014350:	2001      	movs	r0, #1
 8014352:	4770      	bx	lr
 8014354:	2001546c 	.word	0x2001546c
 8014358:	20015474 	.word	0x20015474
 801435c:	20015470 	.word	0x20015470
 8014360:	20015454 	.word	0x20015454

08014364 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014364:	4a12      	ldr	r2, [pc, #72]	; (80143b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8014366:	8803      	ldrh	r3, [r0, #0]
 8014368:	8811      	ldrh	r1, [r2, #0]
 801436a:	428b      	cmp	r3, r1
 801436c:	d20b      	bcs.n	8014386 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801436e:	4a11      	ldr	r2, [pc, #68]	; (80143b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014370:	6812      	ldr	r2, [r2, #0]
 8014372:	b112      	cbz	r2, 801437a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8014374:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014378:	b9c0      	cbnz	r0, 80143ac <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801437a:	4a0f      	ldr	r2, [pc, #60]	; (80143b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801437c:	6811      	ldr	r1, [r2, #0]
 801437e:	2214      	movs	r2, #20
 8014380:	4353      	muls	r3, r2
 8014382:	58c8      	ldr	r0, [r1, r3]
 8014384:	4770      	bx	lr
 8014386:	4a0d      	ldr	r2, [pc, #52]	; (80143bc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8014388:	8812      	ldrh	r2, [r2, #0]
 801438a:	440a      	add	r2, r1
 801438c:	4293      	cmp	r3, r2
 801438e:	da04      	bge.n	801439a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014390:	4a08      	ldr	r2, [pc, #32]	; (80143b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014392:	6812      	ldr	r2, [r2, #0]
 8014394:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014398:	4770      	bx	lr
 801439a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801439e:	4293      	cmp	r3, r2
 80143a0:	d103      	bne.n	80143aa <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80143a2:	4b07      	ldr	r3, [pc, #28]	; (80143c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80143a4:	681b      	ldr	r3, [r3, #0]
 80143a6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80143a8:	4770      	bx	lr
 80143aa:	2000      	movs	r0, #0
 80143ac:	4770      	bx	lr
 80143ae:	bf00      	nop
 80143b0:	2001546c 	.word	0x2001546c
 80143b4:	20015450 	.word	0x20015450
 80143b8:	20015474 	.word	0x20015474
 80143bc:	20015470 	.word	0x20015470
 80143c0:	200153e4 	.word	0x200153e4

080143c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80143c4:	4b24      	ldr	r3, [pc, #144]	; (8014458 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80143c6:	8802      	ldrh	r2, [r0, #0]
 80143c8:	8818      	ldrh	r0, [r3, #0]
 80143ca:	4282      	cmp	r2, r0
 80143cc:	d221      	bcs.n	8014412 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80143ce:	4b23      	ldr	r3, [pc, #140]	; (801445c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80143d0:	6819      	ldr	r1, [r3, #0]
 80143d2:	2314      	movs	r3, #20
 80143d4:	fb03 1302 	mla	r3, r3, r2, r1
 80143d8:	6858      	ldr	r0, [r3, #4]
 80143da:	2800      	cmp	r0, #0
 80143dc:	d03a      	beq.n	8014454 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80143de:	4920      	ldr	r1, [pc, #128]	; (8014460 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80143e0:	6809      	ldr	r1, [r1, #0]
 80143e2:	2900      	cmp	r1, #0
 80143e4:	d036      	beq.n	8014454 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80143e6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80143ea:	2900      	cmp	r1, #0
 80143ec:	d032      	beq.n	8014454 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80143ee:	891a      	ldrh	r2, [r3, #8]
 80143f0:	8958      	ldrh	r0, [r3, #10]
 80143f2:	4350      	muls	r0, r2
 80143f4:	7c5a      	ldrb	r2, [r3, #17]
 80143f6:	7cdb      	ldrb	r3, [r3, #19]
 80143f8:	0952      	lsrs	r2, r2, #5
 80143fa:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80143fe:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014402:	2b0b      	cmp	r3, #11
 8014404:	bf18      	it	ne
 8014406:	0040      	lslne	r0, r0, #1
 8014408:	3003      	adds	r0, #3
 801440a:	f020 0003 	bic.w	r0, r0, #3
 801440e:	4408      	add	r0, r1
 8014410:	4770      	bx	lr
 8014412:	4b14      	ldr	r3, [pc, #80]	; (8014464 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014414:	881b      	ldrh	r3, [r3, #0]
 8014416:	4403      	add	r3, r0
 8014418:	429a      	cmp	r2, r3
 801441a:	da1a      	bge.n	8014452 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801441c:	4b12      	ldr	r3, [pc, #72]	; (8014468 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801441e:	681b      	ldr	r3, [r3, #0]
 8014420:	1a10      	subs	r0, r2, r0
 8014422:	210e      	movs	r1, #14
 8014424:	fb01 3000 	mla	r0, r1, r0, r3
 8014428:	7b03      	ldrb	r3, [r0, #12]
 801442a:	f003 031f 	and.w	r3, r3, #31
 801442e:	2b0b      	cmp	r3, #11
 8014430:	d10b      	bne.n	801444a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014432:	8903      	ldrh	r3, [r0, #8]
 8014434:	8940      	ldrh	r0, [r0, #10]
 8014436:	4358      	muls	r0, r3
 8014438:	4b09      	ldr	r3, [pc, #36]	; (8014460 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801443a:	6819      	ldr	r1, [r3, #0]
 801443c:	3003      	adds	r0, #3
 801443e:	f020 0303 	bic.w	r3, r0, #3
 8014442:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8014446:	4418      	add	r0, r3
 8014448:	4770      	bx	lr
 801444a:	2b0d      	cmp	r3, #13
 801444c:	d101      	bne.n	8014452 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801444e:	300d      	adds	r0, #13
 8014450:	4770      	bx	lr
 8014452:	2000      	movs	r0, #0
 8014454:	4770      	bx	lr
 8014456:	bf00      	nop
 8014458:	2001546c 	.word	0x2001546c
 801445c:	20015474 	.word	0x20015474
 8014460:	20015450 	.word	0x20015450
 8014464:	20015470 	.word	0x20015470
 8014468:	20015454 	.word	0x20015454

0801446c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801446c:	b510      	push	{r4, lr}
 801446e:	4a17      	ldr	r2, [pc, #92]	; (80144cc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8014470:	8803      	ldrh	r3, [r0, #0]
 8014472:	8812      	ldrh	r2, [r2, #0]
 8014474:	4293      	cmp	r3, r2
 8014476:	d20c      	bcs.n	8014492 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8014478:	4a15      	ldr	r2, [pc, #84]	; (80144d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801447a:	6812      	ldr	r2, [r2, #0]
 801447c:	2114      	movs	r1, #20
 801447e:	fb01 2303 	mla	r3, r1, r3, r2
 8014482:	7c58      	ldrb	r0, [r3, #17]
 8014484:	0942      	lsrs	r2, r0, #5
 8014486:	7cd8      	ldrb	r0, [r3, #19]
 8014488:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801448c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8014490:	bd10      	pop	{r4, pc}
 8014492:	4910      	ldr	r1, [pc, #64]	; (80144d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8014494:	8809      	ldrh	r1, [r1, #0]
 8014496:	4411      	add	r1, r2
 8014498:	428b      	cmp	r3, r1
 801449a:	da09      	bge.n	80144b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801449c:	1a9b      	subs	r3, r3, r2
 801449e:	4a0e      	ldr	r2, [pc, #56]	; (80144d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80144a0:	6812      	ldr	r2, [r2, #0]
 80144a2:	210e      	movs	r1, #14
 80144a4:	fb01 2303 	mla	r3, r1, r3, r2
 80144a8:	7b18      	ldrb	r0, [r3, #12]
 80144aa:	f000 001f 	and.w	r0, r0, #31
 80144ae:	e7ef      	b.n	8014490 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80144b0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80144b4:	4293      	cmp	r3, r2
 80144b6:	d106      	bne.n	80144c6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80144b8:	f7ed ff9c 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 80144bc:	6803      	ldr	r3, [r0, #0]
 80144be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80144c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80144c4:	4718      	bx	r3
 80144c6:	2000      	movs	r0, #0
 80144c8:	e7e2      	b.n	8014490 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80144ca:	bf00      	nop
 80144cc:	2001546c 	.word	0x2001546c
 80144d0:	20015474 	.word	0x20015474
 80144d4:	20015470 	.word	0x20015470
 80144d8:	20015454 	.word	0x20015454

080144dc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80144dc:	2010      	movs	r0, #16
 80144de:	4770      	bx	lr

080144e0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80144e0:	2000      	movs	r0, #0
 80144e2:	4770      	bx	lr

080144e4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80144e4:	4b02      	ldr	r3, [pc, #8]	; (80144f0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80144e6:	8818      	ldrh	r0, [r3, #0]
 80144e8:	0040      	lsls	r0, r0, #1
 80144ea:	b280      	uxth	r0, r0
 80144ec:	4770      	bx	lr
 80144ee:	bf00      	nop
 80144f0:	200153de 	.word	0x200153de

080144f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80144f4:	2bff      	cmp	r3, #255	; 0xff
 80144f6:	d050      	beq.n	801459a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80144f8:	2a0b      	cmp	r2, #11
 80144fa:	d04a      	beq.n	8014592 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80144fc:	d80e      	bhi.n	801451c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80144fe:	2a03      	cmp	r2, #3
 8014500:	d03f      	beq.n	8014582 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014502:	d804      	bhi.n	801450e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014504:	2a01      	cmp	r2, #1
 8014506:	d03e      	beq.n	8014586 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8014508:	d93f      	bls.n	801458a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801450a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801450c:	4770      	bx	lr
 801450e:	2a09      	cmp	r2, #9
 8014510:	d03f      	beq.n	8014592 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014512:	d83c      	bhi.n	801458e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014514:	2a08      	cmp	r2, #8
 8014516:	d03a      	beq.n	801458e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014518:	2000      	movs	r0, #0
 801451a:	4770      	bx	lr
 801451c:	2a2f      	cmp	r2, #47	; 0x2f
 801451e:	d024      	beq.n	801456a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014520:	d80d      	bhi.n	801453e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014522:	2a2d      	cmp	r2, #45	; 0x2d
 8014524:	d014      	beq.n	8014550 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8014526:	d826      	bhi.n	8014576 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014528:	2a2c      	cmp	r2, #44	; 0x2c
 801452a:	d1f5      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801452c:	684b      	ldr	r3, [r1, #4]
 801452e:	781b      	ldrb	r3, [r3, #0]
 8014530:	2b01      	cmp	r3, #1
 8014532:	d018      	beq.n	8014566 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014534:	d323      	bcc.n	801457e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8014536:	2b02      	cmp	r3, #2
 8014538:	d1ee      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801453a:	6880      	ldr	r0, [r0, #8]
 801453c:	4770      	bx	lr
 801453e:	2a31      	cmp	r2, #49	; 0x31
 8014540:	d004      	beq.n	801454c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014542:	d328      	bcc.n	8014596 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014544:	2a32      	cmp	r2, #50	; 0x32
 8014546:	d026      	beq.n	8014596 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014548:	2a33      	cmp	r2, #51	; 0x33
 801454a:	d1e5      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801454c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801454e:	4770      	bx	lr
 8014550:	684b      	ldr	r3, [r1, #4]
 8014552:	781b      	ldrb	r3, [r3, #0]
 8014554:	2b01      	cmp	r3, #1
 8014556:	d004      	beq.n	8014562 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8014558:	d30b      	bcc.n	8014572 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801455a:	2b02      	cmp	r3, #2
 801455c:	d1dc      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801455e:	6900      	ldr	r0, [r0, #16]
 8014560:	4770      	bx	lr
 8014562:	6a00      	ldr	r0, [r0, #32]
 8014564:	4770      	bx	lr
 8014566:	6980      	ldr	r0, [r0, #24]
 8014568:	4770      	bx	lr
 801456a:	684b      	ldr	r3, [r1, #4]
 801456c:	781b      	ldrb	r3, [r3, #0]
 801456e:	2b00      	cmp	r3, #0
 8014570:	d1d2      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014572:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014574:	4770      	bx	lr
 8014576:	684b      	ldr	r3, [r1, #4]
 8014578:	781b      	ldrb	r3, [r3, #0]
 801457a:	2b00      	cmp	r3, #0
 801457c:	d1cc      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801457e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014580:	4770      	bx	lr
 8014582:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8014584:	4770      	bx	lr
 8014586:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8014588:	4770      	bx	lr
 801458a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801458c:	4770      	bx	lr
 801458e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8014590:	4770      	bx	lr
 8014592:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8014594:	4770      	bx	lr
 8014596:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8014598:	4770      	bx	lr
 801459a:	2a0b      	cmp	r2, #11
 801459c:	d049      	beq.n	8014632 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801459e:	d80e      	bhi.n	80145be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80145a0:	2a03      	cmp	r2, #3
 80145a2:	d040      	beq.n	8014626 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80145a4:	d804      	bhi.n	80145b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80145a6:	2a01      	cmp	r2, #1
 80145a8:	d03f      	beq.n	801462a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80145aa:	d940      	bls.n	801462e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80145ac:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80145ae:	4770      	bx	lr
 80145b0:	2a09      	cmp	r2, #9
 80145b2:	d03e      	beq.n	8014632 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80145b4:	d801      	bhi.n	80145ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80145b6:	2a08      	cmp	r2, #8
 80145b8:	d1ae      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80145ba:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80145bc:	4770      	bx	lr
 80145be:	2a2f      	cmp	r2, #47	; 0x2f
 80145c0:	d024      	beq.n	801460c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80145c2:	d80d      	bhi.n	80145e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80145c4:	2a2d      	cmp	r2, #45	; 0x2d
 80145c6:	d014      	beq.n	80145f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80145c8:	d826      	bhi.n	8014618 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80145ca:	2a2c      	cmp	r2, #44	; 0x2c
 80145cc:	d1a4      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80145ce:	684b      	ldr	r3, [r1, #4]
 80145d0:	781b      	ldrb	r3, [r3, #0]
 80145d2:	2b01      	cmp	r3, #1
 80145d4:	d018      	beq.n	8014608 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80145d6:	d324      	bcc.n	8014622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80145d8:	2b02      	cmp	r3, #2
 80145da:	d19d      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80145dc:	68c0      	ldr	r0, [r0, #12]
 80145de:	4770      	bx	lr
 80145e0:	2a31      	cmp	r2, #49	; 0x31
 80145e2:	d004      	beq.n	80145ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80145e4:	d327      	bcc.n	8014636 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80145e6:	2a32      	cmp	r2, #50	; 0x32
 80145e8:	d025      	beq.n	8014636 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80145ea:	2a33      	cmp	r2, #51	; 0x33
 80145ec:	d194      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80145ee:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80145f0:	4770      	bx	lr
 80145f2:	684b      	ldr	r3, [r1, #4]
 80145f4:	781b      	ldrb	r3, [r3, #0]
 80145f6:	2b01      	cmp	r3, #1
 80145f8:	d004      	beq.n	8014604 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80145fa:	d30b      	bcc.n	8014614 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80145fc:	2b02      	cmp	r3, #2
 80145fe:	d18b      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014600:	6940      	ldr	r0, [r0, #20]
 8014602:	4770      	bx	lr
 8014604:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014606:	4770      	bx	lr
 8014608:	69c0      	ldr	r0, [r0, #28]
 801460a:	4770      	bx	lr
 801460c:	684b      	ldr	r3, [r1, #4]
 801460e:	781b      	ldrb	r3, [r3, #0]
 8014610:	2b00      	cmp	r3, #0
 8014612:	d181      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014614:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014616:	4770      	bx	lr
 8014618:	684b      	ldr	r3, [r1, #4]
 801461a:	781b      	ldrb	r3, [r3, #0]
 801461c:	2b00      	cmp	r3, #0
 801461e:	f47f af7b 	bne.w	8014518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014622:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014624:	4770      	bx	lr
 8014626:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014628:	4770      	bx	lr
 801462a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801462c:	4770      	bx	lr
 801462e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014630:	4770      	bx	lr
 8014632:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014634:	4770      	bx	lr
 8014636:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8014638:	4770      	bx	lr

0801463a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801463a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801463e:	b087      	sub	sp, #28
 8014640:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014642:	9205      	str	r2, [sp, #20]
 8014644:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014648:	9202      	str	r2, [sp, #8]
 801464a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801464e:	9101      	str	r1, [sp, #4]
 8014650:	6841      	ldr	r1, [r0, #4]
 8014652:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014656:	fb01 2404 	mla	r4, r1, r4, r2
 801465a:	6802      	ldr	r2, [r0, #0]
 801465c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014660:	f8de 2000 	ldr.w	r2, [lr]
 8014664:	9203      	str	r2, [sp, #12]
 8014666:	f8de 2004 	ldr.w	r2, [lr, #4]
 801466a:	3204      	adds	r2, #4
 801466c:	9204      	str	r2, [sp, #16]
 801466e:	9a02      	ldr	r2, [sp, #8]
 8014670:	43d6      	mvns	r6, r2
 8014672:	b2f6      	uxtb	r6, r6
 8014674:	9a01      	ldr	r2, [sp, #4]
 8014676:	2a00      	cmp	r2, #0
 8014678:	dc03      	bgt.n	8014682 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801467a:	9a05      	ldr	r2, [sp, #20]
 801467c:	2a00      	cmp	r2, #0
 801467e:	f340 8129 	ble.w	80148d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014682:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014684:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014688:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801468c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014690:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014692:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014696:	2b00      	cmp	r3, #0
 8014698:	dd0e      	ble.n	80146b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801469a:	1408      	asrs	r0, r1, #16
 801469c:	d405      	bmi.n	80146aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801469e:	4560      	cmp	r0, ip
 80146a0:	da03      	bge.n	80146aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80146a2:	1410      	asrs	r0, r2, #16
 80146a4:	d401      	bmi.n	80146aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80146a6:	42b8      	cmp	r0, r7
 80146a8:	db07      	blt.n	80146ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80146aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80146ac:	4401      	add	r1, r0
 80146ae:	9814      	ldr	r0, [sp, #80]	; 0x50
 80146b0:	3b01      	subs	r3, #1
 80146b2:	4402      	add	r2, r0
 80146b4:	3402      	adds	r4, #2
 80146b6:	e7ee      	b.n	8014696 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80146b8:	d071      	beq.n	801479e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80146ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80146bc:	1e58      	subs	r0, r3, #1
 80146be:	fb05 1500 	mla	r5, r5, r0, r1
 80146c2:	142d      	asrs	r5, r5, #16
 80146c4:	d45f      	bmi.n	8014786 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80146c6:	4565      	cmp	r5, ip
 80146c8:	da5d      	bge.n	8014786 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80146ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80146cc:	fb05 2000 	mla	r0, r5, r0, r2
 80146d0:	1400      	asrs	r0, r0, #16
 80146d2:	d458      	bmi.n	8014786 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80146d4:	42b8      	cmp	r0, r7
 80146d6:	da56      	bge.n	8014786 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80146d8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80146dc:	4699      	mov	r9, r3
 80146de:	46a2      	mov	sl, r4
 80146e0:	f1b9 0f00 	cmp.w	r9, #0
 80146e4:	dd57      	ble.n	8014796 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80146e6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80146ea:	9803      	ldr	r0, [sp, #12]
 80146ec:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80146f0:	140d      	asrs	r5, r1, #16
 80146f2:	fb07 000c 	mla	r0, r7, ip, r0
 80146f6:	f109 39ff 	add.w	r9, r9, #4294967295
 80146fa:	5d40      	ldrb	r0, [r0, r5]
 80146fc:	9d04      	ldr	r5, [sp, #16]
 80146fe:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014702:	f8ba 5000 	ldrh.w	r5, [sl]
 8014706:	122f      	asrs	r7, r5, #8
 8014708:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801470c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014710:	fb17 f706 	smulbb	r7, r7, r6
 8014714:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014718:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801471c:	00ed      	lsls	r5, r5, #3
 801471e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014722:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014726:	10c7      	asrs	r7, r0, #3
 8014728:	b2ed      	uxtb	r5, r5
 801472a:	00c0      	lsls	r0, r0, #3
 801472c:	fb18 f806 	smulbb	r8, r8, r6
 8014730:	fb15 f506 	smulbb	r5, r5, r6
 8014734:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014738:	b2c0      	uxtb	r0, r0
 801473a:	fa1f fc8c 	uxth.w	ip, ip
 801473e:	fb07 870b 	mla	r7, r7, fp, r8
 8014742:	fb00 500b 	mla	r0, r0, fp, r5
 8014746:	b280      	uxth	r0, r0
 8014748:	b2bf      	uxth	r7, r7
 801474a:	f10c 0501 	add.w	r5, ip, #1
 801474e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014752:	f107 0801 	add.w	r8, r7, #1
 8014756:	1c45      	adds	r5, r0, #1
 8014758:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801475c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014760:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014762:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014766:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801476a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801476e:	ea45 0c0c 	orr.w	ip, r5, ip
 8014772:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014776:	4401      	add	r1, r0
 8014778:	9814      	ldr	r0, [sp, #80]	; 0x50
 801477a:	ea4c 0c08 	orr.w	ip, ip, r8
 801477e:	f82a cb02 	strh.w	ip, [sl], #2
 8014782:	4402      	add	r2, r0
 8014784:	e7ac      	b.n	80146e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014786:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801478a:	f04f 0800 	mov.w	r8, #0
 801478e:	eb03 0008 	add.w	r0, r3, r8
 8014792:	2800      	cmp	r0, #0
 8014794:	dc41      	bgt.n	801481a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014796:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801479a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801479e:	9b01      	ldr	r3, [sp, #4]
 80147a0:	2b00      	cmp	r3, #0
 80147a2:	f340 8097 	ble.w	80148d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80147a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80147aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80147ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80147b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80147b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80147b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80147bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80147c0:	eef0 6a62 	vmov.f32	s13, s5
 80147c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80147c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80147cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80147d0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80147d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80147d8:	eef0 6a43 	vmov.f32	s13, s6
 80147dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80147e0:	ee12 2a90 	vmov	r2, s5
 80147e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80147e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80147ec:	ee13 2a10 	vmov	r2, s6
 80147f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80147f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80147f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80147f8:	9314      	str	r3, [sp, #80]	; 0x50
 80147fa:	9b01      	ldr	r3, [sp, #4]
 80147fc:	9a05      	ldr	r2, [sp, #20]
 80147fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014802:	3b01      	subs	r3, #1
 8014804:	9301      	str	r3, [sp, #4]
 8014806:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801480a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801480c:	eeb0 3a67 	vmov.f32	s6, s15
 8014810:	bf08      	it	eq
 8014812:	4613      	moveq	r3, r2
 8014814:	eef0 2a47 	vmov.f32	s5, s14
 8014818:	e72c      	b.n	8014674 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801481a:	140f      	asrs	r7, r1, #16
 801481c:	d453      	bmi.n	80148c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801481e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014822:	42bd      	cmp	r5, r7
 8014824:	dd4f      	ble.n	80148c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014826:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801482a:	d44c      	bmi.n	80148c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801482c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014830:	4560      	cmp	r0, ip
 8014832:	dd48      	ble.n	80148c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014834:	9803      	ldr	r0, [sp, #12]
 8014836:	b22d      	sxth	r5, r5
 8014838:	fb0c 0505 	mla	r5, ip, r5, r0
 801483c:	5de8      	ldrb	r0, [r5, r7]
 801483e:	9d04      	ldr	r5, [sp, #16]
 8014840:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014844:	f06f 0501 	mvn.w	r5, #1
 8014848:	fb05 fb08 	mul.w	fp, r5, r8
 801484c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014850:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014854:	122f      	asrs	r7, r5, #8
 8014856:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801485a:	fb17 f706 	smulbb	r7, r7, r6
 801485e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014862:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014866:	00ed      	lsls	r5, r5, #3
 8014868:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801486c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014870:	10c7      	asrs	r7, r0, #3
 8014872:	b2ed      	uxtb	r5, r5
 8014874:	00c0      	lsls	r0, r0, #3
 8014876:	fb19 f906 	smulbb	r9, r9, r6
 801487a:	fb15 f506 	smulbb	r5, r5, r6
 801487e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014882:	b2c0      	uxtb	r0, r0
 8014884:	fa1f fc8c 	uxth.w	ip, ip
 8014888:	fb07 970a 	mla	r7, r7, sl, r9
 801488c:	fb00 500a 	mla	r0, r0, sl, r5
 8014890:	b2bf      	uxth	r7, r7
 8014892:	b280      	uxth	r0, r0
 8014894:	f10c 0501 	add.w	r5, ip, #1
 8014898:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801489c:	f107 0901 	add.w	r9, r7, #1
 80148a0:	1c45      	adds	r5, r0, #1
 80148a2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80148a6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80148aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80148ae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80148b2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80148b6:	ea45 0c0c 	orr.w	ip, r5, ip
 80148ba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80148be:	ea4c 0c09 	orr.w	ip, ip, r9
 80148c2:	f824 c00b 	strh.w	ip, [r4, fp]
 80148c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80148c8:	4401      	add	r1, r0
 80148ca:	9814      	ldr	r0, [sp, #80]	; 0x50
 80148cc:	f108 38ff 	add.w	r8, r8, #4294967295
 80148d0:	4402      	add	r2, r0
 80148d2:	e75c      	b.n	801478e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80148d4:	b007      	add	sp, #28
 80148d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080148da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80148da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148de:	b085      	sub	sp, #20
 80148e0:	4693      	mov	fp, r2
 80148e2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80148e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80148e6:	6870      	ldr	r0, [r6, #4]
 80148e8:	9100      	str	r1, [sp, #0]
 80148ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80148ee:	fb00 2404 	mla	r4, r0, r4, r2
 80148f2:	6832      	ldr	r2, [r6, #0]
 80148f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80148f8:	682a      	ldr	r2, [r5, #0]
 80148fa:	9201      	str	r2, [sp, #4]
 80148fc:	686a      	ldr	r2, [r5, #4]
 80148fe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014902:	3204      	adds	r2, #4
 8014904:	9202      	str	r2, [sp, #8]
 8014906:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801490a:	9a00      	ldr	r2, [sp, #0]
 801490c:	2a00      	cmp	r2, #0
 801490e:	dc03      	bgt.n	8014918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014910:	f1bb 0f00 	cmp.w	fp, #0
 8014914:	f340 80a0 	ble.w	8014a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014918:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801491a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801491e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014922:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014926:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014928:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801492c:	2b00      	cmp	r3, #0
 801492e:	dd0c      	ble.n	801494a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014930:	1406      	asrs	r6, r0, #16
 8014932:	d405      	bmi.n	8014940 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014934:	454e      	cmp	r6, r9
 8014936:	da03      	bge.n	8014940 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014938:	1416      	asrs	r6, r2, #16
 801493a:	d401      	bmi.n	8014940 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801493c:	4546      	cmp	r6, r8
 801493e:	db05      	blt.n	801494c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014940:	4470      	add	r0, lr
 8014942:	4462      	add	r2, ip
 8014944:	3b01      	subs	r3, #1
 8014946:	3402      	adds	r4, #2
 8014948:	e7f0      	b.n	801492c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801494a:	d00f      	beq.n	801496c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801494c:	1e5e      	subs	r6, r3, #1
 801494e:	fb0e 0706 	mla	r7, lr, r6, r0
 8014952:	143f      	asrs	r7, r7, #16
 8014954:	d541      	bpl.n	80149da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014956:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801495a:	4698      	mov	r8, r3
 801495c:	9603      	str	r6, [sp, #12]
 801495e:	f1b8 0f00 	cmp.w	r8, #0
 8014962:	dc59      	bgt.n	8014a18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014964:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014968:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801496c:	9b00      	ldr	r3, [sp, #0]
 801496e:	2b00      	cmp	r3, #0
 8014970:	dd72      	ble.n	8014a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014972:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014976:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801497a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801497e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014980:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014984:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014988:	eeb0 6a62 	vmov.f32	s12, s5
 801498c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014990:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014994:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014998:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801499c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80149a0:	eeb0 6a43 	vmov.f32	s12, s6
 80149a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80149a8:	ee12 2a90 	vmov	r2, s5
 80149ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80149b0:	fb92 fef3 	sdiv	lr, r2, r3
 80149b4:	ee13 2a10 	vmov	r2, s6
 80149b8:	fb92 fcf3 	sdiv	ip, r2, r3
 80149bc:	9b00      	ldr	r3, [sp, #0]
 80149be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80149c2:	3b01      	subs	r3, #1
 80149c4:	9300      	str	r3, [sp, #0]
 80149c6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80149ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149cc:	eeb0 3a67 	vmov.f32	s6, s15
 80149d0:	bf08      	it	eq
 80149d2:	465b      	moveq	r3, fp
 80149d4:	eef0 2a47 	vmov.f32	s5, s14
 80149d8:	e797      	b.n	801490a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80149da:	454f      	cmp	r7, r9
 80149dc:	dabb      	bge.n	8014956 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80149de:	fb0c 2606 	mla	r6, ip, r6, r2
 80149e2:	1436      	asrs	r6, r6, #16
 80149e4:	d4b7      	bmi.n	8014956 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80149e6:	4546      	cmp	r6, r8
 80149e8:	dab5      	bge.n	8014956 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80149ea:	461e      	mov	r6, r3
 80149ec:	46a0      	mov	r8, r4
 80149ee:	2e00      	cmp	r6, #0
 80149f0:	ddb8      	ble.n	8014964 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80149f2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80149f6:	9901      	ldr	r1, [sp, #4]
 80149f8:	1417      	asrs	r7, r2, #16
 80149fa:	ea4f 4920 	mov.w	r9, r0, asr #16
 80149fe:	fb0a 1707 	mla	r7, sl, r7, r1
 8014a02:	9902      	ldr	r1, [sp, #8]
 8014a04:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014a08:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014a0c:	f828 7b02 	strh.w	r7, [r8], #2
 8014a10:	4470      	add	r0, lr
 8014a12:	4462      	add	r2, ip
 8014a14:	3e01      	subs	r6, #1
 8014a16:	e7ea      	b.n	80149ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014a18:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014a1c:	d417      	bmi.n	8014a4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014a1e:	68ae      	ldr	r6, [r5, #8]
 8014a20:	454e      	cmp	r6, r9
 8014a22:	dd14      	ble.n	8014a4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014a24:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014a28:	d411      	bmi.n	8014a4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014a2a:	68ef      	ldr	r7, [r5, #12]
 8014a2c:	4557      	cmp	r7, sl
 8014a2e:	dd0e      	ble.n	8014a4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014a30:	9f01      	ldr	r7, [sp, #4]
 8014a32:	b236      	sxth	r6, r6
 8014a34:	fb0a 7606 	mla	r6, sl, r6, r7
 8014a38:	9f02      	ldr	r7, [sp, #8]
 8014a3a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014a3e:	f06f 0101 	mvn.w	r1, #1
 8014a42:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014a46:	fb01 f608 	mul.w	r6, r1, r8
 8014a4a:	9903      	ldr	r1, [sp, #12]
 8014a4c:	538f      	strh	r7, [r1, r6]
 8014a4e:	4470      	add	r0, lr
 8014a50:	4462      	add	r2, ip
 8014a52:	f108 38ff 	add.w	r8, r8, #4294967295
 8014a56:	e782      	b.n	801495e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014a58:	b005      	add	sp, #20
 8014a5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014a5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a62:	b087      	sub	sp, #28
 8014a64:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014a66:	9205      	str	r2, [sp, #20]
 8014a68:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014a6c:	9203      	str	r2, [sp, #12]
 8014a6e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014a72:	9102      	str	r1, [sp, #8]
 8014a74:	6861      	ldr	r1, [r4, #4]
 8014a76:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014a7a:	fb01 2000 	mla	r0, r1, r0, r2
 8014a7e:	6822      	ldr	r2, [r4, #0]
 8014a80:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014a84:	9200      	str	r2, [sp, #0]
 8014a86:	f8dc 2000 	ldr.w	r2, [ip]
 8014a8a:	9204      	str	r2, [sp, #16]
 8014a8c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014a90:	3204      	adds	r2, #4
 8014a92:	9201      	str	r2, [sp, #4]
 8014a94:	9a03      	ldr	r2, [sp, #12]
 8014a96:	43d5      	mvns	r5, r2
 8014a98:	b2ed      	uxtb	r5, r5
 8014a9a:	9a02      	ldr	r2, [sp, #8]
 8014a9c:	2a00      	cmp	r2, #0
 8014a9e:	dc03      	bgt.n	8014aa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014aa0:	9a05      	ldr	r2, [sp, #20]
 8014aa2:	2a00      	cmp	r2, #0
 8014aa4:	f340 812c 	ble.w	8014d00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014aa8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014aaa:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014aae:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014ab2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014ab6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014ab8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014abc:	2b00      	cmp	r3, #0
 8014abe:	dd10      	ble.n	8014ae2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014ac0:	140c      	asrs	r4, r1, #16
 8014ac2:	d405      	bmi.n	8014ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014ac4:	4574      	cmp	r4, lr
 8014ac6:	da03      	bge.n	8014ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014ac8:	1414      	asrs	r4, r2, #16
 8014aca:	d401      	bmi.n	8014ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014acc:	42bc      	cmp	r4, r7
 8014ace:	db09      	blt.n	8014ae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014ad0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014ad2:	9800      	ldr	r0, [sp, #0]
 8014ad4:	4421      	add	r1, r4
 8014ad6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014ad8:	3002      	adds	r0, #2
 8014ada:	4422      	add	r2, r4
 8014adc:	3b01      	subs	r3, #1
 8014ade:	9000      	str	r0, [sp, #0]
 8014ae0:	e7ec      	b.n	8014abc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014ae2:	d071      	beq.n	8014bc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014ae4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014ae6:	1e5c      	subs	r4, r3, #1
 8014ae8:	fb06 1604 	mla	r6, r6, r4, r1
 8014aec:	1436      	asrs	r6, r6, #16
 8014aee:	d45d      	bmi.n	8014bac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014af0:	4576      	cmp	r6, lr
 8014af2:	da5b      	bge.n	8014bac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014af4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014af6:	fb06 2404 	mla	r4, r6, r4, r2
 8014afa:	1424      	asrs	r4, r4, #16
 8014afc:	d456      	bmi.n	8014bac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014afe:	42bc      	cmp	r4, r7
 8014b00:	da54      	bge.n	8014bac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014b02:	f8dd 9000 	ldr.w	r9, [sp]
 8014b06:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014b0a:	4698      	mov	r8, r3
 8014b0c:	f1b8 0f00 	cmp.w	r8, #0
 8014b10:	dd54      	ble.n	8014bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014b12:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014b16:	9804      	ldr	r0, [sp, #16]
 8014b18:	1414      	asrs	r4, r2, #16
 8014b1a:	fb07 0404 	mla	r4, r7, r4, r0
 8014b1e:	140e      	asrs	r6, r1, #16
 8014b20:	9801      	ldr	r0, [sp, #4]
 8014b22:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014b26:	f8b9 4000 	ldrh.w	r4, [r9]
 8014b2a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014b2e:	eb00 0b0e 	add.w	fp, r0, lr
 8014b32:	1227      	asrs	r7, r4, #8
 8014b34:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014b38:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014b3c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014b40:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014b42:	fb16 f60a 	smulbb	r6, r6, sl
 8014b46:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014b4a:	fb07 6705 	mla	r7, r7, r5, r6
 8014b4e:	10e6      	asrs	r6, r4, #3
 8014b50:	00e4      	lsls	r4, r4, #3
 8014b52:	b2e4      	uxtb	r4, r4
 8014b54:	fb1b fb0a 	smulbb	fp, fp, sl
 8014b58:	fb14 f405 	smulbb	r4, r4, r5
 8014b5c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014b60:	b2bf      	uxth	r7, r7
 8014b62:	fb06 b605 	mla	r6, r6, r5, fp
 8014b66:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014b6a:	b2b6      	uxth	r6, r6
 8014b6c:	fa1f fe8e 	uxth.w	lr, lr
 8014b70:	1c7c      	adds	r4, r7, #1
 8014b72:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014b76:	f106 0b01 	add.w	fp, r6, #1
 8014b7a:	f10e 0401 	add.w	r4, lr, #1
 8014b7e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014b82:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014b86:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014b8a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014b8e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014b92:	4327      	orrs	r7, r4
 8014b94:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014b98:	4401      	add	r1, r0
 8014b9a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014b9c:	ea47 070b 	orr.w	r7, r7, fp
 8014ba0:	f829 7b02 	strh.w	r7, [r9], #2
 8014ba4:	4402      	add	r2, r0
 8014ba6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014baa:	e7af      	b.n	8014b0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014bac:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014bb0:	f04f 0e00 	mov.w	lr, #0
 8014bb4:	eb03 040e 	add.w	r4, r3, lr
 8014bb8:	2c00      	cmp	r4, #0
 8014bba:	dc43      	bgt.n	8014c44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014bbc:	9a00      	ldr	r2, [sp, #0]
 8014bbe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014bc2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014bc6:	9300      	str	r3, [sp, #0]
 8014bc8:	9b02      	ldr	r3, [sp, #8]
 8014bca:	2b00      	cmp	r3, #0
 8014bcc:	f340 8098 	ble.w	8014d00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014bd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014bd4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014bd8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014bdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014bde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014be2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014be6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014bea:	eef0 6a62 	vmov.f32	s13, s5
 8014bee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014bf2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014bf6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014bfa:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014bfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014c02:	eef0 6a43 	vmov.f32	s13, s6
 8014c06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014c0a:	ee12 2a90 	vmov	r2, s5
 8014c0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014c12:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c16:	ee13 2a10 	vmov	r2, s6
 8014c1a:	9313      	str	r3, [sp, #76]	; 0x4c
 8014c1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c22:	9314      	str	r3, [sp, #80]	; 0x50
 8014c24:	9b02      	ldr	r3, [sp, #8]
 8014c26:	9a05      	ldr	r2, [sp, #20]
 8014c28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c2c:	3b01      	subs	r3, #1
 8014c2e:	9302      	str	r3, [sp, #8]
 8014c30:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014c34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c36:	eeb0 3a67 	vmov.f32	s6, s15
 8014c3a:	bf08      	it	eq
 8014c3c:	4613      	moveq	r3, r2
 8014c3e:	eef0 2a47 	vmov.f32	s5, s14
 8014c42:	e72a      	b.n	8014a9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014c44:	140f      	asrs	r7, r1, #16
 8014c46:	d454      	bmi.n	8014cf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014c48:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014c4c:	42be      	cmp	r6, r7
 8014c4e:	dd50      	ble.n	8014cf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014c50:	ea5f 4822 	movs.w	r8, r2, asr #16
 8014c54:	d44d      	bmi.n	8014cf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014c56:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014c5a:	4544      	cmp	r4, r8
 8014c5c:	dd49      	ble.n	8014cf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014c5e:	9c04      	ldr	r4, [sp, #16]
 8014c60:	b236      	sxth	r6, r6
 8014c62:	fb08 4606 	mla	r6, r8, r6, r4
 8014c66:	f06f 0001 	mvn.w	r0, #1
 8014c6a:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014c6e:	9c01      	ldr	r4, [sp, #4]
 8014c70:	fb00 fa0e 	mul.w	sl, r0, lr
 8014c74:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014c78:	9800      	ldr	r0, [sp, #0]
 8014c7a:	eb04 0b08 	add.w	fp, r4, r8
 8014c7e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8014c82:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014c86:	9801      	ldr	r0, [sp, #4]
 8014c88:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014c8c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014c90:	9800      	ldr	r0, [sp, #0]
 8014c92:	1227      	asrs	r7, r4, #8
 8014c94:	fb16 f609 	smulbb	r6, r6, r9
 8014c98:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014c9c:	fb07 6705 	mla	r7, r7, r5, r6
 8014ca0:	10e6      	asrs	r6, r4, #3
 8014ca2:	00e4      	lsls	r4, r4, #3
 8014ca4:	b2e4      	uxtb	r4, r4
 8014ca6:	fb1b fb09 	smulbb	fp, fp, r9
 8014caa:	fb14 f405 	smulbb	r4, r4, r5
 8014cae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014cb2:	b2bf      	uxth	r7, r7
 8014cb4:	fb06 b605 	mla	r6, r6, r5, fp
 8014cb8:	fb08 4809 	mla	r8, r8, r9, r4
 8014cbc:	b2b6      	uxth	r6, r6
 8014cbe:	fa1f f888 	uxth.w	r8, r8
 8014cc2:	1c7c      	adds	r4, r7, #1
 8014cc4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014cc8:	f106 0b01 	add.w	fp, r6, #1
 8014ccc:	f108 0401 	add.w	r4, r8, #1
 8014cd0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014cd4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014cd8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014cdc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014ce0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014ce4:	4327      	orrs	r7, r4
 8014ce6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014cea:	ea47 070b 	orr.w	r7, r7, fp
 8014cee:	f820 700a 	strh.w	r7, [r0, sl]
 8014cf2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014cf4:	4401      	add	r1, r0
 8014cf6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014cf8:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014cfc:	4402      	add	r2, r0
 8014cfe:	e759      	b.n	8014bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014d00:	b007      	add	sp, #28
 8014d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d0c:	b085      	sub	sp, #20
 8014d0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014d12:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014d14:	9203      	str	r2, [sp, #12]
 8014d16:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014d1a:	6870      	ldr	r0, [r6, #4]
 8014d1c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014d1e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8014d22:	686f      	ldr	r7, [r5, #4]
 8014d24:	9101      	str	r1, [sp, #4]
 8014d26:	fb00 2404 	mla	r4, r0, r4, r2
 8014d2a:	6832      	ldr	r2, [r6, #0]
 8014d2c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014d30:	682a      	ldr	r2, [r5, #0]
 8014d32:	9202      	str	r2, [sp, #8]
 8014d34:	3704      	adds	r7, #4
 8014d36:	9a01      	ldr	r2, [sp, #4]
 8014d38:	2a00      	cmp	r2, #0
 8014d3a:	dc03      	bgt.n	8014d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014d3c:	9a03      	ldr	r2, [sp, #12]
 8014d3e:	2a00      	cmp	r2, #0
 8014d40:	f340 80cc 	ble.w	8014edc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014d44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014d46:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014d4a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014d4e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014d52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014d54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014d58:	2b00      	cmp	r3, #0
 8014d5a:	dd0d      	ble.n	8014d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014d5c:	1406      	asrs	r6, r0, #16
 8014d5e:	d405      	bmi.n	8014d6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014d60:	454e      	cmp	r6, r9
 8014d62:	da03      	bge.n	8014d6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014d64:	1416      	asrs	r6, r2, #16
 8014d66:	d401      	bmi.n	8014d6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014d68:	4546      	cmp	r6, r8
 8014d6a:	db06      	blt.n	8014d7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014d6c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8014d6e:	4460      	add	r0, ip
 8014d70:	4432      	add	r2, r6
 8014d72:	3b01      	subs	r3, #1
 8014d74:	3402      	adds	r4, #2
 8014d76:	e7ef      	b.n	8014d58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8014d78:	d00f      	beq.n	8014d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014d7a:	1e5e      	subs	r6, r3, #1
 8014d7c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8014d80:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8014d84:	d543      	bpl.n	8014e0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8014d86:	4698      	mov	r8, r3
 8014d88:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8014d8c:	f1b8 0f00 	cmp.w	r8, #0
 8014d90:	dc71      	bgt.n	8014e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8014d92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d96:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014d9a:	9b01      	ldr	r3, [sp, #4]
 8014d9c:	2b00      	cmp	r3, #0
 8014d9e:	f340 809d 	ble.w	8014edc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014da2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014da6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014daa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014dae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014db0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014db4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014db8:	eeb0 6a62 	vmov.f32	s12, s5
 8014dbc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014dc0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014dc4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014dc8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014dcc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014dd0:	eeb0 6a43 	vmov.f32	s12, s6
 8014dd4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014dd8:	ee12 2a90 	vmov	r2, s5
 8014ddc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014de0:	fb92 fcf3 	sdiv	ip, r2, r3
 8014de4:	ee13 2a10 	vmov	r2, s6
 8014de8:	fb92 f3f3 	sdiv	r3, r2, r3
 8014dec:	9312      	str	r3, [sp, #72]	; 0x48
 8014dee:	9b01      	ldr	r3, [sp, #4]
 8014df0:	9a03      	ldr	r2, [sp, #12]
 8014df2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014df6:	3b01      	subs	r3, #1
 8014df8:	9301      	str	r3, [sp, #4]
 8014dfa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014dfe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e00:	eeb0 3a67 	vmov.f32	s6, s15
 8014e04:	bf08      	it	eq
 8014e06:	4613      	moveq	r3, r2
 8014e08:	eef0 2a47 	vmov.f32	s5, s14
 8014e0c:	e793      	b.n	8014d36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8014e0e:	45ce      	cmp	lr, r9
 8014e10:	dab9      	bge.n	8014d86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014e12:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014e14:	fb01 2606 	mla	r6, r1, r6, r2
 8014e18:	1436      	asrs	r6, r6, #16
 8014e1a:	d4b4      	bmi.n	8014d86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014e1c:	4546      	cmp	r6, r8
 8014e1e:	dab2      	bge.n	8014d86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014e20:	4698      	mov	r8, r3
 8014e22:	46a2      	mov	sl, r4
 8014e24:	f1b8 0f00 	cmp.w	r8, #0
 8014e28:	ddb3      	ble.n	8014d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014e2a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014e2e:	9902      	ldr	r1, [sp, #8]
 8014e30:	1416      	asrs	r6, r2, #16
 8014e32:	fb09 1606 	mla	r6, r9, r6, r1
 8014e36:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014e3a:	492a      	ldr	r1, [pc, #168]	; (8014ee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014e3c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8014e40:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014e44:	eb07 0b0e 	add.w	fp, r7, lr
 8014e48:	4460      	add	r0, ip
 8014e4a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8014e4e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8014e52:	00f6      	lsls	r6, r6, #3
 8014e54:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014e58:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014e5c:	ea49 0606 	orr.w	r6, r9, r6
 8014e60:	f817 900e 	ldrb.w	r9, [r7, lr]
 8014e64:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014e66:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014e6a:	f82a 6b02 	strh.w	r6, [sl], #2
 8014e6e:	440a      	add	r2, r1
 8014e70:	f108 38ff 	add.w	r8, r8, #4294967295
 8014e74:	e7d6      	b.n	8014e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014e76:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014e7a:	d429      	bmi.n	8014ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014e7c:	68ae      	ldr	r6, [r5, #8]
 8014e7e:	454e      	cmp	r6, r9
 8014e80:	dd26      	ble.n	8014ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014e82:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8014e86:	d423      	bmi.n	8014ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014e88:	68e9      	ldr	r1, [r5, #12]
 8014e8a:	4559      	cmp	r1, fp
 8014e8c:	dd20      	ble.n	8014ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014e8e:	9902      	ldr	r1, [sp, #8]
 8014e90:	fa0f fe86 	sxth.w	lr, r6
 8014e94:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014e98:	f06f 0101 	mvn.w	r1, #1
 8014e9c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014ea0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014ea4:	eb07 060e 	add.w	r6, r7, lr
 8014ea8:	fb01 f908 	mul.w	r9, r1, r8
 8014eac:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014eb0:	7876      	ldrb	r6, [r6, #1]
 8014eb2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8014eb6:	00f6      	lsls	r6, r6, #3
 8014eb8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014ebc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014ec0:	ea4b 0606 	orr.w	r6, fp, r6
 8014ec4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014ec8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014ecc:	f82a 6009 	strh.w	r6, [sl, r9]
 8014ed0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014ed2:	4460      	add	r0, ip
 8014ed4:	440a      	add	r2, r1
 8014ed6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014eda:	e757      	b.n	8014d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014edc:	b005      	add	sp, #20
 8014ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ee2:	bf00      	nop
 8014ee4:	fffff800 	.word	0xfffff800

08014ee8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ee8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014eec:	b087      	sub	sp, #28
 8014eee:	468b      	mov	fp, r1
 8014ef0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014ef2:	9204      	str	r2, [sp, #16]
 8014ef4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014ef8:	9205      	str	r2, [sp, #20]
 8014efa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014efe:	6841      	ldr	r1, [r0, #4]
 8014f00:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014f04:	fb01 2404 	mla	r4, r1, r4, r2
 8014f08:	6802      	ldr	r2, [r0, #0]
 8014f0a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014f0e:	f8dc 2000 	ldr.w	r2, [ip]
 8014f12:	9201      	str	r2, [sp, #4]
 8014f14:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014f18:	3204      	adds	r2, #4
 8014f1a:	9202      	str	r2, [sp, #8]
 8014f1c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014f20:	f1bb 0f00 	cmp.w	fp, #0
 8014f24:	dc03      	bgt.n	8014f2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014f26:	9a04      	ldr	r2, [sp, #16]
 8014f28:	2a00      	cmp	r2, #0
 8014f2a:	f340 8138 	ble.w	801519e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014f2e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014f30:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014f34:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014f38:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014f3c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014f3e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014f42:	2b00      	cmp	r3, #0
 8014f44:	dd0e      	ble.n	8014f64 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014f46:	1402      	asrs	r2, r0, #16
 8014f48:	d405      	bmi.n	8014f56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014f4a:	42ba      	cmp	r2, r7
 8014f4c:	da03      	bge.n	8014f56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014f4e:	140a      	asrs	r2, r1, #16
 8014f50:	d401      	bmi.n	8014f56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014f52:	42b2      	cmp	r2, r6
 8014f54:	db07      	blt.n	8014f66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014f56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014f58:	4410      	add	r0, r2
 8014f5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014f5c:	3b01      	subs	r3, #1
 8014f5e:	4411      	add	r1, r2
 8014f60:	3402      	adds	r4, #2
 8014f62:	e7ee      	b.n	8014f42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8014f64:	d019      	beq.n	8014f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014f66:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014f68:	1e5a      	subs	r2, r3, #1
 8014f6a:	fb05 0502 	mla	r5, r5, r2, r0
 8014f6e:	142d      	asrs	r5, r5, #16
 8014f70:	d409      	bmi.n	8014f86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014f72:	42bd      	cmp	r5, r7
 8014f74:	da07      	bge.n	8014f86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014f76:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014f78:	fb05 1202 	mla	r2, r5, r2, r1
 8014f7c:	1412      	asrs	r2, r2, #16
 8014f7e:	d402      	bmi.n	8014f86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014f80:	42b2      	cmp	r2, r6
 8014f82:	f2c0 80ac 	blt.w	80150de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8014f86:	f04f 0e00 	mov.w	lr, #0
 8014f8a:	eb03 020e 	add.w	r2, r3, lr
 8014f8e:	2a00      	cmp	r2, #0
 8014f90:	dc3e      	bgt.n	8015010 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014f92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f96:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014f9a:	f1bb 0f00 	cmp.w	fp, #0
 8014f9e:	f340 80fe 	ble.w	801519e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014fa2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014fa6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014faa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014fae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014fb0:	f1bb 0b01 	subs.w	fp, fp, #1
 8014fb4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014fb8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014fbc:	eeb0 6a62 	vmov.f32	s12, s5
 8014fc0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014fc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014fc8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014fcc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014fd0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014fd4:	eeb0 6a43 	vmov.f32	s12, s6
 8014fd8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014fdc:	ee12 2a90 	vmov	r2, s5
 8014fe0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014fe4:	fb92 f3f3 	sdiv	r3, r2, r3
 8014fe8:	ee13 2a10 	vmov	r2, s6
 8014fec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ff0:	9313      	str	r3, [sp, #76]	; 0x4c
 8014ff2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ff4:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ff8:	9a04      	ldr	r2, [sp, #16]
 8014ffa:	9314      	str	r3, [sp, #80]	; 0x50
 8014ffc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015000:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015002:	eeb0 3a67 	vmov.f32	s6, s15
 8015006:	bf08      	it	eq
 8015008:	4613      	moveq	r3, r2
 801500a:	eef0 2a47 	vmov.f32	s5, s14
 801500e:	e787      	b.n	8014f20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015010:	1406      	asrs	r6, r0, #16
 8015012:	d45d      	bmi.n	80150d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015014:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8015018:	42b5      	cmp	r5, r6
 801501a:	dd59      	ble.n	80150d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801501c:	140f      	asrs	r7, r1, #16
 801501e:	d457      	bmi.n	80150d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015020:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015024:	42ba      	cmp	r2, r7
 8015026:	dd53      	ble.n	80150d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015028:	9a01      	ldr	r2, [sp, #4]
 801502a:	b22d      	sxth	r5, r5
 801502c:	fb07 2505 	mla	r5, r7, r5, r2
 8015030:	5daa      	ldrb	r2, [r5, r6]
 8015032:	9d02      	ldr	r5, [sp, #8]
 8015034:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015038:	0e2e      	lsrs	r6, r5, #24
 801503a:	d049      	beq.n	80150d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801503c:	f06f 0201 	mvn.w	r2, #1
 8015040:	fb02 f20e 	mul.w	r2, r2, lr
 8015044:	9203      	str	r2, [sp, #12]
 8015046:	f834 8002 	ldrh.w	r8, [r4, r2]
 801504a:	9a05      	ldr	r2, [sp, #20]
 801504c:	4356      	muls	r6, r2
 801504e:	1c72      	adds	r2, r6, #1
 8015050:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015054:	1212      	asrs	r2, r2, #8
 8015056:	fa1f f982 	uxth.w	r9, r2
 801505a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801505e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015062:	43d2      	mvns	r2, r2
 8015064:	b2d2      	uxtb	r2, r2
 8015066:	fb16 f609 	smulbb	r6, r6, r9
 801506a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801506e:	fb07 6702 	mla	r7, r7, r2, r6
 8015072:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015076:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801507a:	b2ed      	uxtb	r5, r5
 801507c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015080:	fa5f f888 	uxtb.w	r8, r8
 8015084:	fb15 f509 	smulbb	r5, r5, r9
 8015088:	fb08 5502 	mla	r5, r8, r2, r5
 801508c:	b2bf      	uxth	r7, r7
 801508e:	fb1a fa09 	smulbb	sl, sl, r9
 8015092:	b2ad      	uxth	r5, r5
 8015094:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015098:	fb06 a602 	mla	r6, r6, r2, sl
 801509c:	1c7a      	adds	r2, r7, #1
 801509e:	f105 0a01 	add.w	sl, r5, #1
 80150a2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80150a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80150aa:	b2b6      	uxth	r6, r6
 80150ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80150b0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80150b4:	ea4a 0707 	orr.w	r7, sl, r7
 80150b8:	f106 0a01 	add.w	sl, r6, #1
 80150bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80150c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80150c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80150c8:	9a03      	ldr	r2, [sp, #12]
 80150ca:	ea47 070a 	orr.w	r7, r7, sl
 80150ce:	52a7      	strh	r7, [r4, r2]
 80150d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80150d2:	4410      	add	r0, r2
 80150d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80150d6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80150da:	4411      	add	r1, r2
 80150dc:	e755      	b.n	8014f8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80150de:	f04f 0800 	mov.w	r8, #0
 80150e2:	eba3 0208 	sub.w	r2, r3, r8
 80150e6:	2a00      	cmp	r2, #0
 80150e8:	f77f af53 	ble.w	8014f92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80150ec:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80150f0:	9f01      	ldr	r7, [sp, #4]
 80150f2:	140a      	asrs	r2, r1, #16
 80150f4:	1405      	asrs	r5, r0, #16
 80150f6:	fb06 7202 	mla	r2, r6, r2, r7
 80150fa:	5d52      	ldrb	r2, [r2, r5]
 80150fc:	9d02      	ldr	r5, [sp, #8]
 80150fe:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015102:	0e2e      	lsrs	r6, r5, #24
 8015104:	d044      	beq.n	8015190 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015106:	9a05      	ldr	r2, [sp, #20]
 8015108:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801510c:	4356      	muls	r6, r2
 801510e:	1c72      	adds	r2, r6, #1
 8015110:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015114:	1212      	asrs	r2, r2, #8
 8015116:	fa1f f982 	uxth.w	r9, r2
 801511a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801511e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015122:	43d2      	mvns	r2, r2
 8015124:	b2d2      	uxtb	r2, r2
 8015126:	fb16 f609 	smulbb	r6, r6, r9
 801512a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801512e:	fb07 6702 	mla	r7, r7, r2, r6
 8015132:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015136:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801513a:	b2ed      	uxtb	r5, r5
 801513c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015140:	fa5f fe8e 	uxtb.w	lr, lr
 8015144:	fb15 f509 	smulbb	r5, r5, r9
 8015148:	fb0e 5502 	mla	r5, lr, r2, r5
 801514c:	b2bf      	uxth	r7, r7
 801514e:	fb1a fa09 	smulbb	sl, sl, r9
 8015152:	b2ad      	uxth	r5, r5
 8015154:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015158:	fb06 a602 	mla	r6, r6, r2, sl
 801515c:	1c7a      	adds	r2, r7, #1
 801515e:	f105 0a01 	add.w	sl, r5, #1
 8015162:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015166:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801516a:	b2b6      	uxth	r6, r6
 801516c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015170:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015174:	ea4a 0707 	orr.w	r7, sl, r7
 8015178:	f106 0a01 	add.w	sl, r6, #1
 801517c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015180:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015184:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015188:	ea47 070a 	orr.w	r7, r7, sl
 801518c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015190:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015192:	4410      	add	r0, r2
 8015194:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015196:	f108 0801 	add.w	r8, r8, #1
 801519a:	4411      	add	r1, r2
 801519c:	e7a1      	b.n	80150e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801519e:	b007      	add	sp, #28
 80151a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080151a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80151a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151a8:	b085      	sub	sp, #20
 80151aa:	468b      	mov	fp, r1
 80151ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80151ae:	9203      	str	r2, [sp, #12]
 80151b0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80151b4:	6841      	ldr	r1, [r0, #4]
 80151b6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80151ba:	fb01 2404 	mla	r4, r1, r4, r2
 80151be:	6802      	ldr	r2, [r0, #0]
 80151c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80151c4:	f8de 2000 	ldr.w	r2, [lr]
 80151c8:	9200      	str	r2, [sp, #0]
 80151ca:	f8de 2004 	ldr.w	r2, [lr, #4]
 80151ce:	3204      	adds	r2, #4
 80151d0:	9201      	str	r2, [sp, #4]
 80151d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80151d6:	f1bb 0f00 	cmp.w	fp, #0
 80151da:	dc03      	bgt.n	80151e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80151dc:	9a03      	ldr	r2, [sp, #12]
 80151de:	2a00      	cmp	r2, #0
 80151e0:	f340 8153 	ble.w	801548a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80151e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80151e6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80151ea:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80151ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80151f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80151f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80151f8:	2b00      	cmp	r3, #0
 80151fa:	dd0e      	ble.n	801521a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80151fc:	1408      	asrs	r0, r1, #16
 80151fe:	d405      	bmi.n	801520c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015200:	42b8      	cmp	r0, r7
 8015202:	da03      	bge.n	801520c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015204:	1410      	asrs	r0, r2, #16
 8015206:	d401      	bmi.n	801520c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015208:	42b0      	cmp	r0, r6
 801520a:	db07      	blt.n	801521c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801520c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801520e:	4401      	add	r1, r0
 8015210:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015212:	3b01      	subs	r3, #1
 8015214:	4402      	add	r2, r0
 8015216:	3402      	adds	r4, #2
 8015218:	e7ee      	b.n	80151f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801521a:	d017      	beq.n	801524c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801521c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801521e:	1e58      	subs	r0, r3, #1
 8015220:	fb05 1500 	mla	r5, r5, r0, r1
 8015224:	142d      	asrs	r5, r5, #16
 8015226:	d409      	bmi.n	801523c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015228:	42bd      	cmp	r5, r7
 801522a:	da07      	bge.n	801523c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801522c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801522e:	fb05 2000 	mla	r0, r5, r0, r2
 8015232:	1400      	asrs	r0, r0, #16
 8015234:	d402      	bmi.n	801523c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015236:	42b0      	cmp	r0, r6
 8015238:	f2c0 80bc 	blt.w	80153b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801523c:	2600      	movs	r6, #0
 801523e:	1998      	adds	r0, r3, r6
 8015240:	2800      	cmp	r0, #0
 8015242:	dc3e      	bgt.n	80152c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015244:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015248:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801524c:	f1bb 0f00 	cmp.w	fp, #0
 8015250:	f340 811b 	ble.w	801548a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015254:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015258:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801525c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015260:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015262:	f1bb 0b01 	subs.w	fp, fp, #1
 8015266:	ee31 1a05 	vadd.f32	s2, s2, s10
 801526a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801526e:	eeb0 6a62 	vmov.f32	s12, s5
 8015272:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015276:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801527a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801527e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015282:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015286:	eeb0 6a43 	vmov.f32	s12, s6
 801528a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801528e:	ee12 2a90 	vmov	r2, s5
 8015292:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015296:	fb92 f3f3 	sdiv	r3, r2, r3
 801529a:	ee13 2a10 	vmov	r2, s6
 801529e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80152a2:	9311      	str	r3, [sp, #68]	; 0x44
 80152a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80152a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80152aa:	9a03      	ldr	r2, [sp, #12]
 80152ac:	9312      	str	r3, [sp, #72]	; 0x48
 80152ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80152b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80152b4:	eeb0 3a67 	vmov.f32	s6, s15
 80152b8:	bf08      	it	eq
 80152ba:	4613      	moveq	r3, r2
 80152bc:	eef0 2a47 	vmov.f32	s5, s14
 80152c0:	e789      	b.n	80151d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80152c2:	140f      	asrs	r7, r1, #16
 80152c4:	d426      	bmi.n	8015314 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80152c6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80152ca:	42bd      	cmp	r5, r7
 80152cc:	dd22      	ble.n	8015314 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80152ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80152d2:	d41f      	bmi.n	8015314 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80152d4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80152d8:	4560      	cmp	r0, ip
 80152da:	dd1b      	ble.n	8015314 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80152dc:	9800      	ldr	r0, [sp, #0]
 80152de:	b22d      	sxth	r5, r5
 80152e0:	fb0c 0505 	mla	r5, ip, r5, r0
 80152e4:	5de8      	ldrb	r0, [r5, r7]
 80152e6:	9d01      	ldr	r5, [sp, #4]
 80152e8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80152ec:	0e07      	lsrs	r7, r0, #24
 80152ee:	2fff      	cmp	r7, #255	; 0xff
 80152f0:	d116      	bne.n	8015320 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80152f2:	f06f 0501 	mvn.w	r5, #1
 80152f6:	fb05 f706 	mul.w	r7, r5, r6
 80152fa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80152fe:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015302:	0945      	lsrs	r5, r0, #5
 8015304:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015308:	ea4c 0505 	orr.w	r5, ip, r5
 801530c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015310:	4305      	orrs	r5, r0
 8015312:	53e5      	strh	r5, [r4, r7]
 8015314:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015316:	4401      	add	r1, r0
 8015318:	9812      	ldr	r0, [sp, #72]	; 0x48
 801531a:	3e01      	subs	r6, #1
 801531c:	4402      	add	r2, r0
 801531e:	e78e      	b.n	801523e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015320:	b2fd      	uxtb	r5, r7
 8015322:	2f00      	cmp	r7, #0
 8015324:	d0f6      	beq.n	8015314 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015326:	f06f 0701 	mvn.w	r7, #1
 801532a:	4377      	muls	r7, r6
 801532c:	fa1f f985 	uxth.w	r9, r5
 8015330:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015334:	9702      	str	r7, [sp, #8]
 8015336:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801533a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801533e:	43ed      	mvns	r5, r5
 8015340:	b2ed      	uxtb	r5, r5
 8015342:	fb17 f709 	smulbb	r7, r7, r9
 8015346:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801534a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801534e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015352:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8015356:	b2c0      	uxtb	r0, r0
 8015358:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801535c:	fa5f f888 	uxtb.w	r8, r8
 8015360:	fb10 f009 	smulbb	r0, r0, r9
 8015364:	fb08 0005 	mla	r0, r8, r5, r0
 8015368:	b280      	uxth	r0, r0
 801536a:	fa1f fc8c 	uxth.w	ip, ip
 801536e:	fb1a fa09 	smulbb	sl, sl, r9
 8015372:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015376:	fb07 a705 	mla	r7, r7, r5, sl
 801537a:	f100 0a01 	add.w	sl, r0, #1
 801537e:	f10c 0501 	add.w	r5, ip, #1
 8015382:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015386:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801538a:	b2bf      	uxth	r7, r7
 801538c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015390:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015394:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015398:	f107 0a01 	add.w	sl, r7, #1
 801539c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80153a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80153a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80153a8:	9802      	ldr	r0, [sp, #8]
 80153aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80153ae:	f824 c000 	strh.w	ip, [r4, r0]
 80153b2:	e7af      	b.n	8015314 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80153b4:	f04f 0800 	mov.w	r8, #0
 80153b8:	eba3 0008 	sub.w	r0, r3, r8
 80153bc:	2800      	cmp	r0, #0
 80153be:	f77f af41 	ble.w	8015244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80153c2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80153c6:	9f00      	ldr	r7, [sp, #0]
 80153c8:	1410      	asrs	r0, r2, #16
 80153ca:	140d      	asrs	r5, r1, #16
 80153cc:	fb06 7000 	mla	r0, r6, r0, r7
 80153d0:	5d40      	ldrb	r0, [r0, r5]
 80153d2:	9d01      	ldr	r5, [sp, #4]
 80153d4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80153d8:	0e2e      	lsrs	r6, r5, #24
 80153da:	2eff      	cmp	r6, #255	; 0xff
 80153dc:	d112      	bne.n	8015404 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80153de:	482c      	ldr	r0, [pc, #176]	; (8015490 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80153e0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80153e4:	0968      	lsrs	r0, r5, #5
 80153e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80153ea:	4330      	orrs	r0, r6
 80153ec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80153f0:	4328      	orrs	r0, r5
 80153f2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80153f6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80153f8:	4401      	add	r1, r0
 80153fa:	9812      	ldr	r0, [sp, #72]	; 0x48
 80153fc:	f108 0801 	add.w	r8, r8, #1
 8015400:	4402      	add	r2, r0
 8015402:	e7d9      	b.n	80153b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015404:	b2f0      	uxtb	r0, r6
 8015406:	2e00      	cmp	r6, #0
 8015408:	d0f5      	beq.n	80153f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801540a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801540e:	fa1f f980 	uxth.w	r9, r0
 8015412:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015416:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801541a:	43c0      	mvns	r0, r0
 801541c:	b2c0      	uxtb	r0, r0
 801541e:	fb16 f609 	smulbb	r6, r6, r9
 8015422:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015426:	fb07 6700 	mla	r7, r7, r0, r6
 801542a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801542e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015432:	b2ed      	uxtb	r5, r5
 8015434:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015438:	fa5f fc8c 	uxtb.w	ip, ip
 801543c:	fb15 f509 	smulbb	r5, r5, r9
 8015440:	fb0c 5500 	mla	r5, ip, r0, r5
 8015444:	b2bf      	uxth	r7, r7
 8015446:	fb1a fa09 	smulbb	sl, sl, r9
 801544a:	b2ad      	uxth	r5, r5
 801544c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015450:	fb06 a600 	mla	r6, r6, r0, sl
 8015454:	1c78      	adds	r0, r7, #1
 8015456:	f105 0a01 	add.w	sl, r5, #1
 801545a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801545e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015462:	b2b6      	uxth	r6, r6
 8015464:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015468:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801546c:	ea4a 0707 	orr.w	r7, sl, r7
 8015470:	f106 0a01 	add.w	sl, r6, #1
 8015474:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015478:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801547c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015480:	ea47 070a 	orr.w	r7, r7, sl
 8015484:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015488:	e7b5      	b.n	80153f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801548a:	b005      	add	sp, #20
 801548c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015490:	fffff800 	.word	0xfffff800

08015494 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015498:	b087      	sub	sp, #28
 801549a:	468b      	mov	fp, r1
 801549c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801549e:	9204      	str	r2, [sp, #16]
 80154a0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80154a4:	9205      	str	r2, [sp, #20]
 80154a6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80154aa:	6861      	ldr	r1, [r4, #4]
 80154ac:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80154b0:	fb01 2000 	mla	r0, r1, r0, r2
 80154b4:	6822      	ldr	r2, [r4, #0]
 80154b6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80154ba:	f8de 2000 	ldr.w	r2, [lr]
 80154be:	9201      	str	r2, [sp, #4]
 80154c0:	f8de 2004 	ldr.w	r2, [lr, #4]
 80154c4:	9202      	str	r2, [sp, #8]
 80154c6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80154ca:	f1bb 0f00 	cmp.w	fp, #0
 80154ce:	dc03      	bgt.n	80154d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80154d0:	9a04      	ldr	r2, [sp, #16]
 80154d2:	2a00      	cmp	r2, #0
 80154d4:	f340 8142 	ble.w	801575c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80154d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80154da:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80154de:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80154e2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80154e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80154e8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80154ec:	2b00      	cmp	r3, #0
 80154ee:	dd0e      	ble.n	801550e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80154f0:	140c      	asrs	r4, r1, #16
 80154f2:	d405      	bmi.n	8015500 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80154f4:	42bc      	cmp	r4, r7
 80154f6:	da03      	bge.n	8015500 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80154f8:	1414      	asrs	r4, r2, #16
 80154fa:	d401      	bmi.n	8015500 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80154fc:	42b4      	cmp	r4, r6
 80154fe:	db07      	blt.n	8015510 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015500:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015502:	4421      	add	r1, r4
 8015504:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015506:	3b01      	subs	r3, #1
 8015508:	4422      	add	r2, r4
 801550a:	3002      	adds	r0, #2
 801550c:	e7ee      	b.n	80154ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801550e:	d019      	beq.n	8015544 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015510:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015512:	1e5c      	subs	r4, r3, #1
 8015514:	fb05 1504 	mla	r5, r5, r4, r1
 8015518:	142d      	asrs	r5, r5, #16
 801551a:	d409      	bmi.n	8015530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801551c:	42bd      	cmp	r5, r7
 801551e:	da07      	bge.n	8015530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015520:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015522:	fb05 2404 	mla	r4, r5, r4, r2
 8015526:	1424      	asrs	r4, r4, #16
 8015528:	d402      	bmi.n	8015530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801552a:	42b4      	cmp	r4, r6
 801552c:	f2c0 80b1 	blt.w	8015692 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015530:	f04f 0800 	mov.w	r8, #0
 8015534:	eb03 0408 	add.w	r4, r3, r8
 8015538:	2c00      	cmp	r4, #0
 801553a:	dc3e      	bgt.n	80155ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801553c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015540:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015544:	f1bb 0f00 	cmp.w	fp, #0
 8015548:	f340 8108 	ble.w	801575c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801554c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015550:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015554:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015558:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801555a:	f1bb 0b01 	subs.w	fp, fp, #1
 801555e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015562:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015566:	eeb0 6a62 	vmov.f32	s12, s5
 801556a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801556e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015572:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015576:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801557a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801557e:	eeb0 6a43 	vmov.f32	s12, s6
 8015582:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015586:	ee12 2a90 	vmov	r2, s5
 801558a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801558e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015592:	ee13 2a10 	vmov	r2, s6
 8015596:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801559a:	9313      	str	r3, [sp, #76]	; 0x4c
 801559c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801559e:	fb92 f3f3 	sdiv	r3, r2, r3
 80155a2:	9a04      	ldr	r2, [sp, #16]
 80155a4:	9314      	str	r3, [sp, #80]	; 0x50
 80155a6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80155aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80155ac:	eeb0 3a67 	vmov.f32	s6, s15
 80155b0:	bf08      	it	eq
 80155b2:	4613      	moveq	r3, r2
 80155b4:	eef0 2a47 	vmov.f32	s5, s14
 80155b8:	e787      	b.n	80154ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80155ba:	140e      	asrs	r6, r1, #16
 80155bc:	d462      	bmi.n	8015684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80155be:	f8de 5008 	ldr.w	r5, [lr, #8]
 80155c2:	42b5      	cmp	r5, r6
 80155c4:	dd5e      	ble.n	8015684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80155c6:	1417      	asrs	r7, r2, #16
 80155c8:	d45c      	bmi.n	8015684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80155ca:	f8de 400c 	ldr.w	r4, [lr, #12]
 80155ce:	42bc      	cmp	r4, r7
 80155d0:	dd58      	ble.n	8015684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80155d2:	b22d      	sxth	r5, r5
 80155d4:	fb07 6505 	mla	r5, r7, r5, r6
 80155d8:	9c02      	ldr	r4, [sp, #8]
 80155da:	5d66      	ldrb	r6, [r4, r5]
 80155dc:	2e00      	cmp	r6, #0
 80155de:	d051      	beq.n	8015684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80155e0:	9c01      	ldr	r4, [sp, #4]
 80155e2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80155e6:	f06f 0401 	mvn.w	r4, #1
 80155ea:	fb04 f408 	mul.w	r4, r4, r8
 80155ee:	9403      	str	r4, [sp, #12]
 80155f0:	5b05      	ldrh	r5, [r0, r4]
 80155f2:	9c05      	ldr	r4, [sp, #20]
 80155f4:	4366      	muls	r6, r4
 80155f6:	1c74      	adds	r4, r6, #1
 80155f8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80155fc:	1224      	asrs	r4, r4, #8
 80155fe:	b2a7      	uxth	r7, r4
 8015600:	122e      	asrs	r6, r5, #8
 8015602:	43e4      	mvns	r4, r4
 8015604:	b2e4      	uxtb	r4, r4
 8015606:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801560a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801560e:	fb16 f604 	smulbb	r6, r6, r4
 8015612:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015616:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801561a:	00ed      	lsls	r5, r5, #3
 801561c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015620:	b2ed      	uxtb	r5, r5
 8015622:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015626:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801562a:	fb15 f504 	smulbb	r5, r5, r4
 801562e:	fa5f f989 	uxtb.w	r9, r9
 8015632:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015636:	fb09 5507 	mla	r5, r9, r7, r5
 801563a:	fb1a fa04 	smulbb	sl, sl, r4
 801563e:	fa1f fc8c 	uxth.w	ip, ip
 8015642:	b2ad      	uxth	r5, r5
 8015644:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015648:	fb06 a607 	mla	r6, r6, r7, sl
 801564c:	f10c 0401 	add.w	r4, ip, #1
 8015650:	f105 0a01 	add.w	sl, r5, #1
 8015654:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015658:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801565c:	b2b6      	uxth	r6, r6
 801565e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015662:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015666:	ea4a 0c0c 	orr.w	ip, sl, ip
 801566a:	f106 0a01 	add.w	sl, r6, #1
 801566e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015672:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015676:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801567a:	9c03      	ldr	r4, [sp, #12]
 801567c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015680:	f820 c004 	strh.w	ip, [r0, r4]
 8015684:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015686:	4421      	add	r1, r4
 8015688:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801568a:	f108 38ff 	add.w	r8, r8, #4294967295
 801568e:	4422      	add	r2, r4
 8015690:	e750      	b.n	8015534 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015692:	f04f 0900 	mov.w	r9, #0
 8015696:	eba3 0409 	sub.w	r4, r3, r9
 801569a:	2c00      	cmp	r4, #0
 801569c:	f77f af4e 	ble.w	801553c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80156a0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80156a4:	140d      	asrs	r5, r1, #16
 80156a6:	1414      	asrs	r4, r2, #16
 80156a8:	fb06 5404 	mla	r4, r6, r4, r5
 80156ac:	9d02      	ldr	r5, [sp, #8]
 80156ae:	5d2e      	ldrb	r6, [r5, r4]
 80156b0:	2e00      	cmp	r6, #0
 80156b2:	d04c      	beq.n	801574e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80156b4:	9d01      	ldr	r5, [sp, #4]
 80156b6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80156ba:	9c05      	ldr	r4, [sp, #20]
 80156bc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80156c0:	4366      	muls	r6, r4
 80156c2:	1c74      	adds	r4, r6, #1
 80156c4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80156c8:	1224      	asrs	r4, r4, #8
 80156ca:	b2a7      	uxth	r7, r4
 80156cc:	122e      	asrs	r6, r5, #8
 80156ce:	43e4      	mvns	r4, r4
 80156d0:	b2e4      	uxtb	r4, r4
 80156d2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80156d6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80156da:	fb16 f604 	smulbb	r6, r6, r4
 80156de:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80156e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80156e6:	00ed      	lsls	r5, r5, #3
 80156e8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80156ec:	b2ed      	uxtb	r5, r5
 80156ee:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80156f2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80156f6:	fb15 f504 	smulbb	r5, r5, r4
 80156fa:	fa5f f888 	uxtb.w	r8, r8
 80156fe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015702:	fb08 5507 	mla	r5, r8, r7, r5
 8015706:	fb1a fa04 	smulbb	sl, sl, r4
 801570a:	fa1f fc8c 	uxth.w	ip, ip
 801570e:	b2ad      	uxth	r5, r5
 8015710:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015714:	fb06 a607 	mla	r6, r6, r7, sl
 8015718:	f10c 0401 	add.w	r4, ip, #1
 801571c:	f105 0a01 	add.w	sl, r5, #1
 8015720:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015724:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015728:	b2b6      	uxth	r6, r6
 801572a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801572e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015732:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015736:	f106 0a01 	add.w	sl, r6, #1
 801573a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801573e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015742:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015746:	ea4c 0c0a 	orr.w	ip, ip, sl
 801574a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801574e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015750:	4421      	add	r1, r4
 8015752:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015754:	f109 0901 	add.w	r9, r9, #1
 8015758:	4422      	add	r2, r4
 801575a:	e79c      	b.n	8015696 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801575c:	b007      	add	sp, #28
 801575e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015762 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015762:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015766:	b085      	sub	sp, #20
 8015768:	468b      	mov	fp, r1
 801576a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801576c:	9203      	str	r2, [sp, #12]
 801576e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015772:	6861      	ldr	r1, [r4, #4]
 8015774:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015778:	fb01 2000 	mla	r0, r1, r0, r2
 801577c:	6822      	ldr	r2, [r4, #0]
 801577e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015782:	f8d8 2000 	ldr.w	r2, [r8]
 8015786:	9200      	str	r2, [sp, #0]
 8015788:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801578c:	9201      	str	r2, [sp, #4]
 801578e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015792:	f1bb 0f00 	cmp.w	fp, #0
 8015796:	dc03      	bgt.n	80157a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015798:	9a03      	ldr	r2, [sp, #12]
 801579a:	2a00      	cmp	r2, #0
 801579c:	f340 8146 	ble.w	8015a2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80157a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80157a2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80157a6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80157aa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80157ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80157b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80157b4:	2b00      	cmp	r3, #0
 80157b6:	dd0e      	ble.n	80157d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80157b8:	140c      	asrs	r4, r1, #16
 80157ba:	d405      	bmi.n	80157c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80157bc:	42bc      	cmp	r4, r7
 80157be:	da03      	bge.n	80157c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80157c0:	1414      	asrs	r4, r2, #16
 80157c2:	d401      	bmi.n	80157c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80157c4:	42b4      	cmp	r4, r6
 80157c6:	db07      	blt.n	80157d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80157c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80157ca:	4421      	add	r1, r4
 80157cc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80157ce:	3b01      	subs	r3, #1
 80157d0:	4422      	add	r2, r4
 80157d2:	3002      	adds	r0, #2
 80157d4:	e7ee      	b.n	80157b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80157d6:	d017      	beq.n	8015808 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80157d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80157da:	1e5c      	subs	r4, r3, #1
 80157dc:	fb05 1504 	mla	r5, r5, r4, r1
 80157e0:	142d      	asrs	r5, r5, #16
 80157e2:	d409      	bmi.n	80157f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80157e4:	42bd      	cmp	r5, r7
 80157e6:	da07      	bge.n	80157f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80157e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80157ea:	fb05 2404 	mla	r4, r5, r4, r2
 80157ee:	1424      	asrs	r4, r4, #16
 80157f0:	d402      	bmi.n	80157f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80157f2:	42b4      	cmp	r4, r6
 80157f4:	f2c0 80b3 	blt.w	801595e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80157f8:	2600      	movs	r6, #0
 80157fa:	199c      	adds	r4, r3, r6
 80157fc:	2c00      	cmp	r4, #0
 80157fe:	dc3e      	bgt.n	801587e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015800:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015804:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015808:	f1bb 0f00 	cmp.w	fp, #0
 801580c:	f340 810e 	ble.w	8015a2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015810:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015814:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015818:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801581c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801581e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015822:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015826:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801582a:	eeb0 6a62 	vmov.f32	s12, s5
 801582e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015832:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015836:	ee77 2a62 	vsub.f32	s5, s14, s5
 801583a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801583e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015842:	eeb0 6a43 	vmov.f32	s12, s6
 8015846:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801584a:	ee12 2a90 	vmov	r2, s5
 801584e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015852:	fb92 f3f3 	sdiv	r3, r2, r3
 8015856:	ee13 2a10 	vmov	r2, s6
 801585a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801585e:	9311      	str	r3, [sp, #68]	; 0x44
 8015860:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015862:	fb92 f3f3 	sdiv	r3, r2, r3
 8015866:	9a03      	ldr	r2, [sp, #12]
 8015868:	9312      	str	r3, [sp, #72]	; 0x48
 801586a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801586e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015870:	eeb0 3a67 	vmov.f32	s6, s15
 8015874:	bf08      	it	eq
 8015876:	4613      	moveq	r3, r2
 8015878:	eef0 2a47 	vmov.f32	s5, s14
 801587c:	e789      	b.n	8015792 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801587e:	140f      	asrs	r7, r1, #16
 8015880:	d418      	bmi.n	80158b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015882:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015886:	42bd      	cmp	r5, r7
 8015888:	dd14      	ble.n	80158b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801588a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801588e:	d411      	bmi.n	80158b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015890:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015894:	4564      	cmp	r4, ip
 8015896:	dd0d      	ble.n	80158b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015898:	b22d      	sxth	r5, r5
 801589a:	fb0c 7505 	mla	r5, ip, r5, r7
 801589e:	9c01      	ldr	r4, [sp, #4]
 80158a0:	5d64      	ldrb	r4, [r4, r5]
 80158a2:	2cff      	cmp	r4, #255	; 0xff
 80158a4:	d10c      	bne.n	80158c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80158a6:	9c00      	ldr	r4, [sp, #0]
 80158a8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80158ac:	f06f 0401 	mvn.w	r4, #1
 80158b0:	4374      	muls	r4, r6
 80158b2:	5305      	strh	r5, [r0, r4]
 80158b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80158b6:	4421      	add	r1, r4
 80158b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80158ba:	3e01      	subs	r6, #1
 80158bc:	4422      	add	r2, r4
 80158be:	e79c      	b.n	80157fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80158c0:	2c00      	cmp	r4, #0
 80158c2:	d0f7      	beq.n	80158b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80158c4:	9f00      	ldr	r7, [sp, #0]
 80158c6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80158ca:	f06f 0501 	mvn.w	r5, #1
 80158ce:	4375      	muls	r5, r6
 80158d0:	9502      	str	r5, [sp, #8]
 80158d2:	5b45      	ldrh	r5, [r0, r5]
 80158d4:	fa1f fc84 	uxth.w	ip, r4
 80158d8:	122f      	asrs	r7, r5, #8
 80158da:	43e4      	mvns	r4, r4
 80158dc:	b2e4      	uxtb	r4, r4
 80158de:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80158e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80158e6:	fb17 f704 	smulbb	r7, r7, r4
 80158ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80158ee:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80158f2:	00ed      	lsls	r5, r5, #3
 80158f4:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80158f8:	b2ed      	uxtb	r5, r5
 80158fa:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80158fe:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015902:	fb15 f504 	smulbb	r5, r5, r4
 8015906:	fa5f f989 	uxtb.w	r9, r9
 801590a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801590e:	fb09 550c 	mla	r5, r9, ip, r5
 8015912:	fb1a fa04 	smulbb	sl, sl, r4
 8015916:	fa1f fe8e 	uxth.w	lr, lr
 801591a:	b2ad      	uxth	r5, r5
 801591c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015920:	fb07 a70c 	mla	r7, r7, ip, sl
 8015924:	f10e 0401 	add.w	r4, lr, #1
 8015928:	f105 0a01 	add.w	sl, r5, #1
 801592c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015930:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015934:	b2bf      	uxth	r7, r7
 8015936:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801593a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801593e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015942:	f107 0a01 	add.w	sl, r7, #1
 8015946:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801594a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801594e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015952:	9c02      	ldr	r4, [sp, #8]
 8015954:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015958:	f820 e004 	strh.w	lr, [r0, r4]
 801595c:	e7aa      	b.n	80158b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801595e:	f04f 0900 	mov.w	r9, #0
 8015962:	eba3 0409 	sub.w	r4, r3, r9
 8015966:	2c00      	cmp	r4, #0
 8015968:	f77f af4a 	ble.w	8015800 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801596c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015970:	1414      	asrs	r4, r2, #16
 8015972:	140d      	asrs	r5, r1, #16
 8015974:	fb06 5504 	mla	r5, r6, r4, r5
 8015978:	9c01      	ldr	r4, [sp, #4]
 801597a:	5d64      	ldrb	r4, [r4, r5]
 801597c:	2cff      	cmp	r4, #255	; 0xff
 801597e:	d10b      	bne.n	8015998 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015980:	9c00      	ldr	r4, [sp, #0]
 8015982:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015986:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801598a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801598c:	4421      	add	r1, r4
 801598e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015990:	f109 0901 	add.w	r9, r9, #1
 8015994:	4422      	add	r2, r4
 8015996:	e7e4      	b.n	8015962 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015998:	2c00      	cmp	r4, #0
 801599a:	d0f6      	beq.n	801598a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801599c:	9e00      	ldr	r6, [sp, #0]
 801599e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80159a2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80159a6:	b2a7      	uxth	r7, r4
 80159a8:	122e      	asrs	r6, r5, #8
 80159aa:	43e4      	mvns	r4, r4
 80159ac:	b2e4      	uxtb	r4, r4
 80159ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80159b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80159b6:	fb16 f604 	smulbb	r6, r6, r4
 80159ba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80159be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80159c2:	00ed      	lsls	r5, r5, #3
 80159c4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80159c8:	b2ed      	uxtb	r5, r5
 80159ca:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80159ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80159d2:	fb15 f504 	smulbb	r5, r5, r4
 80159d6:	fa5f fe8e 	uxtb.w	lr, lr
 80159da:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80159de:	fb0e 5507 	mla	r5, lr, r7, r5
 80159e2:	fb1a fa04 	smulbb	sl, sl, r4
 80159e6:	fa1f fc8c 	uxth.w	ip, ip
 80159ea:	b2ad      	uxth	r5, r5
 80159ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80159f0:	fb06 a607 	mla	r6, r6, r7, sl
 80159f4:	f10c 0401 	add.w	r4, ip, #1
 80159f8:	f105 0a01 	add.w	sl, r5, #1
 80159fc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015a00:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015a04:	b2b6      	uxth	r6, r6
 8015a06:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015a0a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015a0e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015a12:	f106 0a01 	add.w	sl, r6, #1
 8015a16:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015a1a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015a1e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015a22:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015a26:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015a2a:	e7ae      	b.n	801598a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015a2c:	b005      	add	sp, #20
 8015a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015a32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015a32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a36:	b085      	sub	sp, #20
 8015a38:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015a3a:	9203      	str	r2, [sp, #12]
 8015a3c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015a40:	9201      	str	r2, [sp, #4]
 8015a42:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015a46:	9100      	str	r1, [sp, #0]
 8015a48:	6841      	ldr	r1, [r0, #4]
 8015a4a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015a4e:	fb01 2404 	mla	r4, r1, r4, r2
 8015a52:	6802      	ldr	r2, [r0, #0]
 8015a54:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015a58:	f8de 2000 	ldr.w	r2, [lr]
 8015a5c:	9202      	str	r2, [sp, #8]
 8015a5e:	9a01      	ldr	r2, [sp, #4]
 8015a60:	43d6      	mvns	r6, r2
 8015a62:	b2f6      	uxtb	r6, r6
 8015a64:	9a00      	ldr	r2, [sp, #0]
 8015a66:	2a00      	cmp	r2, #0
 8015a68:	dc03      	bgt.n	8015a72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015a6a:	9a03      	ldr	r2, [sp, #12]
 8015a6c:	2a00      	cmp	r2, #0
 8015a6e:	f340 8124 	ble.w	8015cba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015a72:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015a74:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015a78:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015a7c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015a80:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015a82:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015a86:	2b00      	cmp	r3, #0
 8015a88:	dd0e      	ble.n	8015aa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015a8a:	1408      	asrs	r0, r1, #16
 8015a8c:	d405      	bmi.n	8015a9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015a8e:	4560      	cmp	r0, ip
 8015a90:	da03      	bge.n	8015a9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015a92:	1410      	asrs	r0, r2, #16
 8015a94:	d401      	bmi.n	8015a9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015a96:	42b8      	cmp	r0, r7
 8015a98:	db07      	blt.n	8015aaa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015a9a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015a9c:	4401      	add	r1, r0
 8015a9e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015aa0:	3b01      	subs	r3, #1
 8015aa2:	4402      	add	r2, r0
 8015aa4:	3402      	adds	r4, #2
 8015aa6:	e7ee      	b.n	8015a86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015aa8:	d06e      	beq.n	8015b88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015aaa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015aac:	1e58      	subs	r0, r3, #1
 8015aae:	fb05 1500 	mla	r5, r5, r0, r1
 8015ab2:	142d      	asrs	r5, r5, #16
 8015ab4:	d45c      	bmi.n	8015b70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015ab6:	4565      	cmp	r5, ip
 8015ab8:	da5a      	bge.n	8015b70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015aba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015abc:	fb05 2000 	mla	r0, r5, r0, r2
 8015ac0:	1400      	asrs	r0, r0, #16
 8015ac2:	d455      	bmi.n	8015b70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015ac4:	42b8      	cmp	r0, r7
 8015ac6:	da53      	bge.n	8015b70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015ac8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015acc:	4699      	mov	r9, r3
 8015ace:	46a2      	mov	sl, r4
 8015ad0:	f1b9 0f00 	cmp.w	r9, #0
 8015ad4:	dd54      	ble.n	8015b80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015ad6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015ada:	140d      	asrs	r5, r1, #16
 8015adc:	1410      	asrs	r0, r2, #16
 8015ade:	fb07 5000 	mla	r0, r7, r0, r5
 8015ae2:	9d02      	ldr	r5, [sp, #8]
 8015ae4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015ae8:	f8ba 5000 	ldrh.w	r5, [sl]
 8015aec:	122f      	asrs	r7, r5, #8
 8015aee:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015af2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015af6:	fb17 f706 	smulbb	r7, r7, r6
 8015afa:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015afe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015b02:	00ed      	lsls	r5, r5, #3
 8015b04:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015b08:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015b0c:	10c7      	asrs	r7, r0, #3
 8015b0e:	b2ed      	uxtb	r5, r5
 8015b10:	00c0      	lsls	r0, r0, #3
 8015b12:	fb18 f806 	smulbb	r8, r8, r6
 8015b16:	fb15 f506 	smulbb	r5, r5, r6
 8015b1a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015b1e:	b2c0      	uxtb	r0, r0
 8015b20:	fa1f fc8c 	uxth.w	ip, ip
 8015b24:	fb07 870b 	mla	r7, r7, fp, r8
 8015b28:	fb00 500b 	mla	r0, r0, fp, r5
 8015b2c:	b280      	uxth	r0, r0
 8015b2e:	b2bf      	uxth	r7, r7
 8015b30:	f10c 0501 	add.w	r5, ip, #1
 8015b34:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015b38:	f107 0801 	add.w	r8, r7, #1
 8015b3c:	1c45      	adds	r5, r0, #1
 8015b3e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015b42:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015b46:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015b48:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015b4c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015b50:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015b54:	ea45 0c0c 	orr.w	ip, r5, ip
 8015b58:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015b5c:	4401      	add	r1, r0
 8015b5e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015b60:	ea4c 0c08 	orr.w	ip, ip, r8
 8015b64:	f82a cb02 	strh.w	ip, [sl], #2
 8015b68:	4402      	add	r2, r0
 8015b6a:	f109 39ff 	add.w	r9, r9, #4294967295
 8015b6e:	e7af      	b.n	8015ad0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015b70:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015b74:	f04f 0800 	mov.w	r8, #0
 8015b78:	eb03 0008 	add.w	r0, r3, r8
 8015b7c:	2800      	cmp	r0, #0
 8015b7e:	dc41      	bgt.n	8015c04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015b80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015b88:	9b00      	ldr	r3, [sp, #0]
 8015b8a:	2b00      	cmp	r3, #0
 8015b8c:	f340 8095 	ble.w	8015cba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015b90:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015b98:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015b9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ba2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015ba6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015baa:	eef0 6a62 	vmov.f32	s13, s5
 8015bae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015bb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015bb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015bba:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015bbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015bc2:	eef0 6a43 	vmov.f32	s13, s6
 8015bc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015bca:	ee12 2a90 	vmov	r2, s5
 8015bce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015bd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bd6:	ee13 2a10 	vmov	r2, s6
 8015bda:	9311      	str	r3, [sp, #68]	; 0x44
 8015bdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015bde:	fb92 f3f3 	sdiv	r3, r2, r3
 8015be2:	9312      	str	r3, [sp, #72]	; 0x48
 8015be4:	9b00      	ldr	r3, [sp, #0]
 8015be6:	9a03      	ldr	r2, [sp, #12]
 8015be8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015bec:	3b01      	subs	r3, #1
 8015bee:	9300      	str	r3, [sp, #0]
 8015bf0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015bf4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015bf6:	eeb0 3a67 	vmov.f32	s6, s15
 8015bfa:	bf08      	it	eq
 8015bfc:	4613      	moveq	r3, r2
 8015bfe:	eef0 2a47 	vmov.f32	s5, s14
 8015c02:	e72f      	b.n	8015a64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015c04:	140f      	asrs	r7, r1, #16
 8015c06:	d451      	bmi.n	8015cac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015c08:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015c0c:	42bd      	cmp	r5, r7
 8015c0e:	dd4d      	ble.n	8015cac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015c10:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015c14:	d44a      	bmi.n	8015cac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015c16:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015c1a:	4560      	cmp	r0, ip
 8015c1c:	dd46      	ble.n	8015cac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015c1e:	b22d      	sxth	r5, r5
 8015c20:	fb0c 7505 	mla	r5, ip, r5, r7
 8015c24:	9802      	ldr	r0, [sp, #8]
 8015c26:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015c2a:	f06f 0501 	mvn.w	r5, #1
 8015c2e:	fb05 fb08 	mul.w	fp, r5, r8
 8015c32:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015c36:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015c3a:	122f      	asrs	r7, r5, #8
 8015c3c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015c40:	fb17 f706 	smulbb	r7, r7, r6
 8015c44:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015c48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015c4c:	00ed      	lsls	r5, r5, #3
 8015c4e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015c52:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015c56:	10c7      	asrs	r7, r0, #3
 8015c58:	b2ed      	uxtb	r5, r5
 8015c5a:	00c0      	lsls	r0, r0, #3
 8015c5c:	fb19 f906 	smulbb	r9, r9, r6
 8015c60:	fb15 f506 	smulbb	r5, r5, r6
 8015c64:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015c68:	b2c0      	uxtb	r0, r0
 8015c6a:	fa1f fc8c 	uxth.w	ip, ip
 8015c6e:	fb07 970a 	mla	r7, r7, sl, r9
 8015c72:	fb00 500a 	mla	r0, r0, sl, r5
 8015c76:	b2bf      	uxth	r7, r7
 8015c78:	b280      	uxth	r0, r0
 8015c7a:	f10c 0501 	add.w	r5, ip, #1
 8015c7e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015c82:	f107 0901 	add.w	r9, r7, #1
 8015c86:	1c45      	adds	r5, r0, #1
 8015c88:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015c8c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015c90:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015c94:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015c98:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015c9c:	ea45 0c0c 	orr.w	ip, r5, ip
 8015ca0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015ca4:	ea4c 0c09 	orr.w	ip, ip, r9
 8015ca8:	f824 c00b 	strh.w	ip, [r4, fp]
 8015cac:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015cae:	4401      	add	r1, r0
 8015cb0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015cb2:	f108 38ff 	add.w	r8, r8, #4294967295
 8015cb6:	4402      	add	r2, r0
 8015cb8:	e75e      	b.n	8015b78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015cba:	b005      	add	sp, #20
 8015cbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015cc0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cc4:	b085      	sub	sp, #20
 8015cc6:	4693      	mov	fp, r2
 8015cc8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015cca:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015ccc:	6870      	ldr	r0, [r6, #4]
 8015cce:	9101      	str	r1, [sp, #4]
 8015cd0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015cd4:	fb00 2404 	mla	r4, r0, r4, r2
 8015cd8:	6832      	ldr	r2, [r6, #0]
 8015cda:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8015cde:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015ce2:	682a      	ldr	r2, [r5, #0]
 8015ce4:	9202      	str	r2, [sp, #8]
 8015ce6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015cea:	9a01      	ldr	r2, [sp, #4]
 8015cec:	2a00      	cmp	r2, #0
 8015cee:	dc03      	bgt.n	8015cf8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015cf0:	f1bb 0f00 	cmp.w	fp, #0
 8015cf4:	f340 809a 	ble.w	8015e2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015cf8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015cfa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015cfe:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015d02:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015d06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015d08:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015d0c:	2b00      	cmp	r3, #0
 8015d0e:	dd0c      	ble.n	8015d2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015d10:	1406      	asrs	r6, r0, #16
 8015d12:	d405      	bmi.n	8015d20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015d14:	454e      	cmp	r6, r9
 8015d16:	da03      	bge.n	8015d20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015d18:	1416      	asrs	r6, r2, #16
 8015d1a:	d401      	bmi.n	8015d20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015d1c:	4546      	cmp	r6, r8
 8015d1e:	db05      	blt.n	8015d2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015d20:	4470      	add	r0, lr
 8015d22:	4462      	add	r2, ip
 8015d24:	3b01      	subs	r3, #1
 8015d26:	3402      	adds	r4, #2
 8015d28:	e7f0      	b.n	8015d0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015d2a:	d00f      	beq.n	8015d4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015d2c:	1e5e      	subs	r6, r3, #1
 8015d2e:	fb0e 0706 	mla	r7, lr, r6, r0
 8015d32:	143f      	asrs	r7, r7, #16
 8015d34:	d541      	bpl.n	8015dba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8015d36:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8015d3a:	4698      	mov	r8, r3
 8015d3c:	9603      	str	r6, [sp, #12]
 8015d3e:	f1b8 0f00 	cmp.w	r8, #0
 8015d42:	dc56      	bgt.n	8015df2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8015d44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015d4c:	9b01      	ldr	r3, [sp, #4]
 8015d4e:	2b00      	cmp	r3, #0
 8015d50:	dd6c      	ble.n	8015e2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015d52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015d56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015d5a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015d5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015d60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015d64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015d68:	eeb0 6a62 	vmov.f32	s12, s5
 8015d6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015d70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015d74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015d78:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015d7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015d80:	eeb0 6a43 	vmov.f32	s12, s6
 8015d84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015d88:	ee12 2a90 	vmov	r2, s5
 8015d8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015d90:	fb92 fef3 	sdiv	lr, r2, r3
 8015d94:	ee13 2a10 	vmov	r2, s6
 8015d98:	fb92 fcf3 	sdiv	ip, r2, r3
 8015d9c:	9b01      	ldr	r3, [sp, #4]
 8015d9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015da2:	3b01      	subs	r3, #1
 8015da4:	9301      	str	r3, [sp, #4]
 8015da6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015daa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015dac:	eeb0 3a67 	vmov.f32	s6, s15
 8015db0:	bf08      	it	eq
 8015db2:	465b      	moveq	r3, fp
 8015db4:	eef0 2a47 	vmov.f32	s5, s14
 8015db8:	e797      	b.n	8015cea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015dba:	454f      	cmp	r7, r9
 8015dbc:	dabb      	bge.n	8015d36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015dbe:	fb0c 2606 	mla	r6, ip, r6, r2
 8015dc2:	1436      	asrs	r6, r6, #16
 8015dc4:	d4b7      	bmi.n	8015d36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015dc6:	4546      	cmp	r6, r8
 8015dc8:	dab5      	bge.n	8015d36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015dca:	461e      	mov	r6, r3
 8015dcc:	46a0      	mov	r8, r4
 8015dce:	2e00      	cmp	r6, #0
 8015dd0:	ddb8      	ble.n	8015d44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015dd2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015dd6:	9902      	ldr	r1, [sp, #8]
 8015dd8:	1417      	asrs	r7, r2, #16
 8015dda:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015dde:	fb0a 9707 	mla	r7, sl, r7, r9
 8015de2:	4470      	add	r0, lr
 8015de4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015de8:	f828 7b02 	strh.w	r7, [r8], #2
 8015dec:	4462      	add	r2, ip
 8015dee:	3e01      	subs	r6, #1
 8015df0:	e7ed      	b.n	8015dce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8015df2:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015df6:	d414      	bmi.n	8015e22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015df8:	68ae      	ldr	r6, [r5, #8]
 8015dfa:	454e      	cmp	r6, r9
 8015dfc:	dd11      	ble.n	8015e22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015dfe:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015e02:	d40e      	bmi.n	8015e22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015e04:	68ef      	ldr	r7, [r5, #12]
 8015e06:	4557      	cmp	r7, sl
 8015e08:	dd0b      	ble.n	8015e22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015e0a:	b236      	sxth	r6, r6
 8015e0c:	fb0a 9606 	mla	r6, sl, r6, r9
 8015e10:	9f02      	ldr	r7, [sp, #8]
 8015e12:	f06f 0101 	mvn.w	r1, #1
 8015e16:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015e1a:	fb01 f608 	mul.w	r6, r1, r8
 8015e1e:	9903      	ldr	r1, [sp, #12]
 8015e20:	538f      	strh	r7, [r1, r6]
 8015e22:	4470      	add	r0, lr
 8015e24:	4462      	add	r2, ip
 8015e26:	f108 38ff 	add.w	r8, r8, #4294967295
 8015e2a:	e788      	b.n	8015d3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015e2c:	b005      	add	sp, #20
 8015e2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e36:	b087      	sub	sp, #28
 8015e38:	468b      	mov	fp, r1
 8015e3a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015e3c:	9203      	str	r2, [sp, #12]
 8015e3e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015e42:	9204      	str	r2, [sp, #16]
 8015e44:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8015e48:	6841      	ldr	r1, [r0, #4]
 8015e4a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8015e4e:	fb01 2505 	mla	r5, r1, r5, r2
 8015e52:	6802      	ldr	r2, [r0, #0]
 8015e54:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015e58:	f8d9 2000 	ldr.w	r2, [r9]
 8015e5c:	9201      	str	r2, [sp, #4]
 8015e5e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015e62:	f1bb 0f00 	cmp.w	fp, #0
 8015e66:	dc03      	bgt.n	8015e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015e68:	9a03      	ldr	r2, [sp, #12]
 8015e6a:	2a00      	cmp	r2, #0
 8015e6c:	f340 8159 	ble.w	8016122 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015e70:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015e72:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015e76:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015e7a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015e7e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015e80:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015e84:	2b00      	cmp	r3, #0
 8015e86:	dd0e      	ble.n	8015ea6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015e88:	1402      	asrs	r2, r0, #16
 8015e8a:	d405      	bmi.n	8015e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015e8c:	42ba      	cmp	r2, r7
 8015e8e:	da03      	bge.n	8015e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015e90:	140a      	asrs	r2, r1, #16
 8015e92:	d401      	bmi.n	8015e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015e94:	42b2      	cmp	r2, r6
 8015e96:	db07      	blt.n	8015ea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015e98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015e9a:	4410      	add	r0, r2
 8015e9c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015e9e:	3b01      	subs	r3, #1
 8015ea0:	4411      	add	r1, r2
 8015ea2:	3502      	adds	r5, #2
 8015ea4:	e7ee      	b.n	8015e84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015ea6:	d017      	beq.n	8015ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015ea8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015eaa:	1e5a      	subs	r2, r3, #1
 8015eac:	fb04 0402 	mla	r4, r4, r2, r0
 8015eb0:	1424      	asrs	r4, r4, #16
 8015eb2:	d409      	bmi.n	8015ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015eb4:	42bc      	cmp	r4, r7
 8015eb6:	da07      	bge.n	8015ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015eb8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015eba:	fb04 1202 	mla	r2, r4, r2, r1
 8015ebe:	1412      	asrs	r2, r2, #16
 8015ec0:	d402      	bmi.n	8015ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015ec2:	42b2      	cmp	r2, r6
 8015ec4:	f2c0 80bf 	blt.w	8016046 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015ec8:	2700      	movs	r7, #0
 8015eca:	19da      	adds	r2, r3, r7
 8015ecc:	2a00      	cmp	r2, #0
 8015ece:	dc3e      	bgt.n	8015f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015ed0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ed4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015ed8:	f1bb 0f00 	cmp.w	fp, #0
 8015edc:	f340 8121 	ble.w	8016122 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015ee0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ee4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ee8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015eec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015eee:	f1bb 0b01 	subs.w	fp, fp, #1
 8015ef2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015ef6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015efa:	eeb0 6a62 	vmov.f32	s12, s5
 8015efe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015f02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015f06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015f0a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015f0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015f12:	eeb0 6a43 	vmov.f32	s12, s6
 8015f16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015f1a:	ee12 2a90 	vmov	r2, s5
 8015f1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015f22:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f26:	ee13 2a10 	vmov	r2, s6
 8015f2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015f2e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015f30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015f32:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f36:	9a03      	ldr	r2, [sp, #12]
 8015f38:	9314      	str	r3, [sp, #80]	; 0x50
 8015f3a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015f3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015f40:	eeb0 3a67 	vmov.f32	s6, s15
 8015f44:	bf08      	it	eq
 8015f46:	4613      	moveq	r3, r2
 8015f48:	eef0 2a47 	vmov.f32	s5, s14
 8015f4c:	e789      	b.n	8015e62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015f4e:	1406      	asrs	r6, r0, #16
 8015f50:	d42d      	bmi.n	8015fae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015f52:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8015f56:	42b4      	cmp	r4, r6
 8015f58:	dd29      	ble.n	8015fae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015f5a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8015f5e:	d426      	bmi.n	8015fae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015f60:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015f64:	4562      	cmp	r2, ip
 8015f66:	dd22      	ble.n	8015fae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015f68:	b224      	sxth	r4, r4
 8015f6a:	9a01      	ldr	r2, [sp, #4]
 8015f6c:	fb0c 6404 	mla	r4, ip, r4, r6
 8015f70:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8015f74:	0e22      	lsrs	r2, r4, #24
 8015f76:	d01a      	beq.n	8015fae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015f78:	9e04      	ldr	r6, [sp, #16]
 8015f7a:	4372      	muls	r2, r6
 8015f7c:	1c56      	adds	r6, r2, #1
 8015f7e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015f82:	1212      	asrs	r2, r2, #8
 8015f84:	0a26      	lsrs	r6, r4, #8
 8015f86:	2aff      	cmp	r2, #255	; 0xff
 8015f88:	9605      	str	r6, [sp, #20]
 8015f8a:	d116      	bne.n	8015fba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8015f8c:	f06f 0201 	mvn.w	r2, #1
 8015f90:	fb02 fc07 	mul.w	ip, r2, r7
 8015f94:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015f98:	0962      	lsrs	r2, r4, #5
 8015f9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015f9e:	f026 0607 	bic.w	r6, r6, #7
 8015fa2:	4316      	orrs	r6, r2
 8015fa4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015fa8:	4326      	orrs	r6, r4
 8015faa:	f825 600c 	strh.w	r6, [r5, ip]
 8015fae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015fb0:	4410      	add	r0, r2
 8015fb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015fb4:	3f01      	subs	r7, #1
 8015fb6:	4411      	add	r1, r2
 8015fb8:	e787      	b.n	8015eca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015fba:	f06f 0601 	mvn.w	r6, #1
 8015fbe:	437e      	muls	r6, r7
 8015fc0:	fa1f fa82 	uxth.w	sl, r2
 8015fc4:	f835 8006 	ldrh.w	r8, [r5, r6]
 8015fc8:	9602      	str	r6, [sp, #8]
 8015fca:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015fce:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8015fd2:	43d2      	mvns	r2, r2
 8015fd4:	b2d2      	uxtb	r2, r2
 8015fd6:	fb1c fc0a 	smulbb	ip, ip, sl
 8015fda:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015fde:	fb0e ce02 	mla	lr, lr, r2, ip
 8015fe2:	b2e4      	uxtb	r4, r4
 8015fe4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015fe8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015fec:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015ff0:	fa5f f888 	uxtb.w	r8, r8
 8015ff4:	fb14 f40a 	smulbb	r4, r4, sl
 8015ff8:	fb08 4402 	mla	r4, r8, r2, r4
 8015ffc:	fa1f fe8e 	uxth.w	lr, lr
 8016000:	fb16 f60a 	smulbb	r6, r6, sl
 8016004:	b2a4      	uxth	r4, r4
 8016006:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801600a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801600e:	f10e 0201 	add.w	r2, lr, #1
 8016012:	1c66      	adds	r6, r4, #1
 8016014:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016018:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801601c:	fa1f fc8c 	uxth.w	ip, ip
 8016020:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016024:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016028:	ea46 0e0e 	orr.w	lr, r6, lr
 801602c:	f10c 0601 	add.w	r6, ip, #1
 8016030:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016034:	0976      	lsrs	r6, r6, #5
 8016036:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801603a:	9a02      	ldr	r2, [sp, #8]
 801603c:	ea4e 0e06 	orr.w	lr, lr, r6
 8016040:	f825 e002 	strh.w	lr, [r5, r2]
 8016044:	e7b3      	b.n	8015fae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016046:	f04f 0800 	mov.w	r8, #0
 801604a:	eba3 0208 	sub.w	r2, r3, r8
 801604e:	2a00      	cmp	r2, #0
 8016050:	f77f af3e 	ble.w	8015ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016054:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8016058:	1404      	asrs	r4, r0, #16
 801605a:	140a      	asrs	r2, r1, #16
 801605c:	fb06 4202 	mla	r2, r6, r2, r4
 8016060:	9c01      	ldr	r4, [sp, #4]
 8016062:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8016066:	0e22      	lsrs	r2, r4, #24
 8016068:	d016      	beq.n	8016098 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801606a:	9e04      	ldr	r6, [sp, #16]
 801606c:	4372      	muls	r2, r6
 801606e:	1c56      	adds	r6, r2, #1
 8016070:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016074:	1212      	asrs	r2, r2, #8
 8016076:	2aff      	cmp	r2, #255	; 0xff
 8016078:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801607c:	d113      	bne.n	80160a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801607e:	0962      	lsrs	r2, r4, #5
 8016080:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016084:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016088:	f026 0607 	bic.w	r6, r6, #7
 801608c:	4316      	orrs	r6, r2
 801608e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016092:	4326      	orrs	r6, r4
 8016094:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8016098:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801609a:	4410      	add	r0, r2
 801609c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801609e:	f108 0801 	add.w	r8, r8, #1
 80160a2:	4411      	add	r1, r2
 80160a4:	e7d1      	b.n	801604a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80160a6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80160aa:	fa1f fa82 	uxth.w	sl, r2
 80160ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80160b2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80160b6:	43d2      	mvns	r2, r2
 80160b8:	b2d2      	uxtb	r2, r2
 80160ba:	fb17 f70a 	smulbb	r7, r7, sl
 80160be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80160c2:	fb0c 7c02 	mla	ip, ip, r2, r7
 80160c6:	b2e4      	uxtb	r4, r4
 80160c8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80160cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80160d0:	fa5f fe8e 	uxtb.w	lr, lr
 80160d4:	fb14 f40a 	smulbb	r4, r4, sl
 80160d8:	fb0e 4402 	mla	r4, lr, r2, r4
 80160dc:	b2f6      	uxtb	r6, r6
 80160de:	fa1f fc8c 	uxth.w	ip, ip
 80160e2:	fb16 f60a 	smulbb	r6, r6, sl
 80160e6:	b2a4      	uxth	r4, r4
 80160e8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80160ec:	fb07 6702 	mla	r7, r7, r2, r6
 80160f0:	f10c 0201 	add.w	r2, ip, #1
 80160f4:	1c66      	adds	r6, r4, #1
 80160f6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80160fa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80160fe:	b2bf      	uxth	r7, r7
 8016100:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016104:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016108:	ea46 0c0c 	orr.w	ip, r6, ip
 801610c:	1c7e      	adds	r6, r7, #1
 801610e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016112:	0976      	lsrs	r6, r6, #5
 8016114:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016118:	ea4c 0c06 	orr.w	ip, ip, r6
 801611c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016120:	e7ba      	b.n	8016098 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016122:	b007      	add	sp, #28
 8016124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016128 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801612c:	b085      	sub	sp, #20
 801612e:	468b      	mov	fp, r1
 8016130:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016132:	9203      	str	r2, [sp, #12]
 8016134:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016138:	6841      	ldr	r1, [r0, #4]
 801613a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801613e:	fb01 2404 	mla	r4, r1, r4, r2
 8016142:	6802      	ldr	r2, [r0, #0]
 8016144:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016148:	f8d8 2000 	ldr.w	r2, [r8]
 801614c:	9201      	str	r2, [sp, #4]
 801614e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016152:	f1bb 0f00 	cmp.w	fp, #0
 8016156:	dc03      	bgt.n	8016160 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016158:	9a03      	ldr	r2, [sp, #12]
 801615a:	2a00      	cmp	r2, #0
 801615c:	f340 814f 	ble.w	80163fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016160:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016162:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8016166:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801616a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801616e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016170:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016174:	2b00      	cmp	r3, #0
 8016176:	dd0e      	ble.n	8016196 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016178:	1408      	asrs	r0, r1, #16
 801617a:	d405      	bmi.n	8016188 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801617c:	42b8      	cmp	r0, r7
 801617e:	da03      	bge.n	8016188 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016180:	1410      	asrs	r0, r2, #16
 8016182:	d401      	bmi.n	8016188 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016184:	42b0      	cmp	r0, r6
 8016186:	db07      	blt.n	8016198 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016188:	9811      	ldr	r0, [sp, #68]	; 0x44
 801618a:	4401      	add	r1, r0
 801618c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801618e:	3b01      	subs	r3, #1
 8016190:	4402      	add	r2, r0
 8016192:	3402      	adds	r4, #2
 8016194:	e7ee      	b.n	8016174 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016196:	d017      	beq.n	80161c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016198:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801619a:	1e58      	subs	r0, r3, #1
 801619c:	fb05 1500 	mla	r5, r5, r0, r1
 80161a0:	142d      	asrs	r5, r5, #16
 80161a2:	d409      	bmi.n	80161b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80161a4:	42bd      	cmp	r5, r7
 80161a6:	da07      	bge.n	80161b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80161a8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80161aa:	fb05 2000 	mla	r0, r5, r0, r2
 80161ae:	1400      	asrs	r0, r0, #16
 80161b0:	d402      	bmi.n	80161b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80161b2:	42b0      	cmp	r0, r6
 80161b4:	f2c0 80ba 	blt.w	801632c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80161b8:	2600      	movs	r6, #0
 80161ba:	1998      	adds	r0, r3, r6
 80161bc:	2800      	cmp	r0, #0
 80161be:	dc3e      	bgt.n	801623e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80161c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80161c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80161c8:	f1bb 0f00 	cmp.w	fp, #0
 80161cc:	f340 8117 	ble.w	80163fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80161d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80161d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80161d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80161dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80161de:	f1bb 0b01 	subs.w	fp, fp, #1
 80161e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80161e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80161ea:	eeb0 6a62 	vmov.f32	s12, s5
 80161ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80161f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80161f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80161fa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80161fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016202:	eeb0 6a43 	vmov.f32	s12, s6
 8016206:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801620a:	ee12 2a90 	vmov	r2, s5
 801620e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016212:	fb92 f3f3 	sdiv	r3, r2, r3
 8016216:	ee13 2a10 	vmov	r2, s6
 801621a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801621e:	9311      	str	r3, [sp, #68]	; 0x44
 8016220:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016222:	fb92 f3f3 	sdiv	r3, r2, r3
 8016226:	9a03      	ldr	r2, [sp, #12]
 8016228:	9312      	str	r3, [sp, #72]	; 0x48
 801622a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801622e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016230:	eeb0 3a67 	vmov.f32	s6, s15
 8016234:	bf08      	it	eq
 8016236:	4613      	moveq	r3, r2
 8016238:	eef0 2a47 	vmov.f32	s5, s14
 801623c:	e789      	b.n	8016152 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801623e:	140f      	asrs	r7, r1, #16
 8016240:	d424      	bmi.n	801628c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016242:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016246:	42bd      	cmp	r5, r7
 8016248:	dd20      	ble.n	801628c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801624a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801624e:	d41d      	bmi.n	801628c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016250:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8016254:	4560      	cmp	r0, ip
 8016256:	dd19      	ble.n	801628c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016258:	b22d      	sxth	r5, r5
 801625a:	fb0c 7505 	mla	r5, ip, r5, r7
 801625e:	9801      	ldr	r0, [sp, #4]
 8016260:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8016264:	0e07      	lsrs	r7, r0, #24
 8016266:	2fff      	cmp	r7, #255	; 0xff
 8016268:	d116      	bne.n	8016298 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801626a:	f06f 0501 	mvn.w	r5, #1
 801626e:	fb05 f706 	mul.w	r7, r5, r6
 8016272:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016276:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801627a:	0945      	lsrs	r5, r0, #5
 801627c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016280:	ea4c 0505 	orr.w	r5, ip, r5
 8016284:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016288:	4305      	orrs	r5, r0
 801628a:	53e5      	strh	r5, [r4, r7]
 801628c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801628e:	4401      	add	r1, r0
 8016290:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016292:	3e01      	subs	r6, #1
 8016294:	4402      	add	r2, r0
 8016296:	e790      	b.n	80161ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016298:	b2fd      	uxtb	r5, r7
 801629a:	2f00      	cmp	r7, #0
 801629c:	d0f6      	beq.n	801628c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801629e:	f06f 0701 	mvn.w	r7, #1
 80162a2:	4377      	muls	r7, r6
 80162a4:	fa1f f985 	uxth.w	r9, r5
 80162a8:	f834 e007 	ldrh.w	lr, [r4, r7]
 80162ac:	9702      	str	r7, [sp, #8]
 80162ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80162b2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80162b6:	43ed      	mvns	r5, r5
 80162b8:	b2ed      	uxtb	r5, r5
 80162ba:	fb17 f709 	smulbb	r7, r7, r9
 80162be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80162c2:	fb0c 7c05 	mla	ip, ip, r5, r7
 80162c6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80162ca:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80162ce:	b2c0      	uxtb	r0, r0
 80162d0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80162d4:	fa5f fe8e 	uxtb.w	lr, lr
 80162d8:	fb10 f009 	smulbb	r0, r0, r9
 80162dc:	fb0e 0005 	mla	r0, lr, r5, r0
 80162e0:	b280      	uxth	r0, r0
 80162e2:	fa1f fc8c 	uxth.w	ip, ip
 80162e6:	fb1a fa09 	smulbb	sl, sl, r9
 80162ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80162ee:	fb07 a705 	mla	r7, r7, r5, sl
 80162f2:	f100 0a01 	add.w	sl, r0, #1
 80162f6:	f10c 0501 	add.w	r5, ip, #1
 80162fa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80162fe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016302:	b2bf      	uxth	r7, r7
 8016304:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016308:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801630c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016310:	f107 0a01 	add.w	sl, r7, #1
 8016314:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016318:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801631c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016320:	9802      	ldr	r0, [sp, #8]
 8016322:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016326:	f824 c000 	strh.w	ip, [r4, r0]
 801632a:	e7af      	b.n	801628c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801632c:	f04f 0e00 	mov.w	lr, #0
 8016330:	eba3 000e 	sub.w	r0, r3, lr
 8016334:	2800      	cmp	r0, #0
 8016336:	f77f af43 	ble.w	80161c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801633a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801633e:	140d      	asrs	r5, r1, #16
 8016340:	1410      	asrs	r0, r2, #16
 8016342:	fb06 5000 	mla	r0, r6, r0, r5
 8016346:	9d01      	ldr	r5, [sp, #4]
 8016348:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801634c:	0e2e      	lsrs	r6, r5, #24
 801634e:	2eff      	cmp	r6, #255	; 0xff
 8016350:	d112      	bne.n	8016378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016352:	482c      	ldr	r0, [pc, #176]	; (8016404 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016354:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016358:	0968      	lsrs	r0, r5, #5
 801635a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801635e:	4330      	orrs	r0, r6
 8016360:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016364:	4328      	orrs	r0, r5
 8016366:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801636a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801636c:	4401      	add	r1, r0
 801636e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016370:	f10e 0e01 	add.w	lr, lr, #1
 8016374:	4402      	add	r2, r0
 8016376:	e7db      	b.n	8016330 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8016378:	b2f0      	uxtb	r0, r6
 801637a:	2e00      	cmp	r6, #0
 801637c:	d0f5      	beq.n	801636a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801637e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016382:	fa1f f980 	uxth.w	r9, r0
 8016386:	ea4f 272c 	mov.w	r7, ip, asr #8
 801638a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801638e:	43c0      	mvns	r0, r0
 8016390:	b2c0      	uxtb	r0, r0
 8016392:	fb16 f609 	smulbb	r6, r6, r9
 8016396:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801639a:	fb07 6700 	mla	r7, r7, r0, r6
 801639e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80163a2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80163a6:	b2ed      	uxtb	r5, r5
 80163a8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80163ac:	fa5f fc8c 	uxtb.w	ip, ip
 80163b0:	fb15 f509 	smulbb	r5, r5, r9
 80163b4:	fb0c 5500 	mla	r5, ip, r0, r5
 80163b8:	b2bf      	uxth	r7, r7
 80163ba:	fb1a fa09 	smulbb	sl, sl, r9
 80163be:	b2ad      	uxth	r5, r5
 80163c0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80163c4:	fb06 a600 	mla	r6, r6, r0, sl
 80163c8:	1c78      	adds	r0, r7, #1
 80163ca:	f105 0a01 	add.w	sl, r5, #1
 80163ce:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80163d2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80163d6:	b2b6      	uxth	r6, r6
 80163d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80163dc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80163e0:	ea4a 0707 	orr.w	r7, sl, r7
 80163e4:	f106 0a01 	add.w	sl, r6, #1
 80163e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80163ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80163f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80163f4:	ea47 070a 	orr.w	r7, r7, sl
 80163f8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80163fc:	e7b5      	b.n	801636a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80163fe:	b005      	add	sp, #20
 8016400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016404:	fffff800 	.word	0xfffff800

08016408 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801640c:	b087      	sub	sp, #28
 801640e:	468b      	mov	fp, r1
 8016410:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016412:	9203      	str	r2, [sp, #12]
 8016414:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016418:	9204      	str	r2, [sp, #16]
 801641a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801641e:	6841      	ldr	r1, [r0, #4]
 8016420:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016424:	fb01 2404 	mla	r4, r1, r4, r2
 8016428:	6802      	ldr	r2, [r0, #0]
 801642a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801642e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016432:	3201      	adds	r2, #1
 8016434:	f022 0201 	bic.w	r2, r2, #1
 8016438:	9200      	str	r2, [sp, #0]
 801643a:	f8d9 2000 	ldr.w	r2, [r9]
 801643e:	9201      	str	r2, [sp, #4]
 8016440:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016444:	f1bb 0f00 	cmp.w	fp, #0
 8016448:	dc03      	bgt.n	8016452 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801644a:	9a03      	ldr	r2, [sp, #12]
 801644c:	2a00      	cmp	r2, #0
 801644e:	f340 8169 	ble.w	8016724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016452:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016454:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016458:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801645c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016460:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016462:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016466:	2b00      	cmp	r3, #0
 8016468:	dd0e      	ble.n	8016488 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801646a:	1402      	asrs	r2, r0, #16
 801646c:	d405      	bmi.n	801647a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801646e:	42ba      	cmp	r2, r7
 8016470:	da03      	bge.n	801647a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016472:	140a      	asrs	r2, r1, #16
 8016474:	d401      	bmi.n	801647a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016476:	42b2      	cmp	r2, r6
 8016478:	db07      	blt.n	801648a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801647a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801647c:	4410      	add	r0, r2
 801647e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016480:	3b01      	subs	r3, #1
 8016482:	4411      	add	r1, r2
 8016484:	3402      	adds	r4, #2
 8016486:	e7ee      	b.n	8016466 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016488:	d017      	beq.n	80164ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801648a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801648c:	1e5a      	subs	r2, r3, #1
 801648e:	fb05 0502 	mla	r5, r5, r2, r0
 8016492:	142d      	asrs	r5, r5, #16
 8016494:	d409      	bmi.n	80164aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016496:	42bd      	cmp	r5, r7
 8016498:	da07      	bge.n	80164aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801649a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801649c:	fb05 1202 	mla	r2, r5, r2, r1
 80164a0:	1412      	asrs	r2, r2, #16
 80164a2:	d402      	bmi.n	80164aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80164a4:	42b2      	cmp	r2, r6
 80164a6:	f2c0 80c7 	blt.w	8016638 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80164aa:	2700      	movs	r7, #0
 80164ac:	19da      	adds	r2, r3, r7
 80164ae:	2a00      	cmp	r2, #0
 80164b0:	dc3e      	bgt.n	8016530 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80164b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80164ba:	f1bb 0f00 	cmp.w	fp, #0
 80164be:	f340 8131 	ble.w	8016724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80164c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80164c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80164ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80164ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80164d0:	f1bb 0b01 	subs.w	fp, fp, #1
 80164d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80164d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80164dc:	eeb0 6a62 	vmov.f32	s12, s5
 80164e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80164e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80164e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80164ec:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80164f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80164f4:	eeb0 6a43 	vmov.f32	s12, s6
 80164f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80164fc:	ee12 2a90 	vmov	r2, s5
 8016500:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016504:	fb92 f3f3 	sdiv	r3, r2, r3
 8016508:	ee13 2a10 	vmov	r2, s6
 801650c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016510:	9313      	str	r3, [sp, #76]	; 0x4c
 8016512:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016514:	fb92 f3f3 	sdiv	r3, r2, r3
 8016518:	9a03      	ldr	r2, [sp, #12]
 801651a:	9314      	str	r3, [sp, #80]	; 0x50
 801651c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016520:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016522:	eeb0 3a67 	vmov.f32	s6, s15
 8016526:	bf08      	it	eq
 8016528:	4613      	moveq	r3, r2
 801652a:	eef0 2a47 	vmov.f32	s5, s14
 801652e:	e789      	b.n	8016444 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016530:	1405      	asrs	r5, r0, #16
 8016532:	d435      	bmi.n	80165a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016534:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016538:	42aa      	cmp	r2, r5
 801653a:	dd31      	ble.n	80165a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801653c:	140e      	asrs	r6, r1, #16
 801653e:	d42f      	bmi.n	80165a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016540:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016544:	42b2      	cmp	r2, r6
 8016546:	dd2b      	ble.n	80165a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016548:	9a00      	ldr	r2, [sp, #0]
 801654a:	fb06 5502 	mla	r5, r6, r2, r5
 801654e:	086a      	lsrs	r2, r5, #1
 8016550:	9e01      	ldr	r6, [sp, #4]
 8016552:	5cb2      	ldrb	r2, [r6, r2]
 8016554:	07ee      	lsls	r6, r5, #31
 8016556:	bf54      	ite	pl
 8016558:	f002 020f 	andpl.w	r2, r2, #15
 801655c:	1112      	asrmi	r2, r2, #4
 801655e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016562:	b2d2      	uxtb	r2, r2
 8016564:	b1e2      	cbz	r2, 80165a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016566:	9d04      	ldr	r5, [sp, #16]
 8016568:	436a      	muls	r2, r5
 801656a:	1c55      	adds	r5, r2, #1
 801656c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016570:	4d6e      	ldr	r5, [pc, #440]	; (801672c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016572:	682d      	ldr	r5, [r5, #0]
 8016574:	1212      	asrs	r2, r2, #8
 8016576:	0a2e      	lsrs	r6, r5, #8
 8016578:	2aff      	cmp	r2, #255	; 0xff
 801657a:	9605      	str	r6, [sp, #20]
 801657c:	d116      	bne.n	80165ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801657e:	f06f 0201 	mvn.w	r2, #1
 8016582:	fb02 fc07 	mul.w	ip, r2, r7
 8016586:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801658a:	096a      	lsrs	r2, r5, #5
 801658c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016590:	f026 0607 	bic.w	r6, r6, #7
 8016594:	4316      	orrs	r6, r2
 8016596:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801659a:	432e      	orrs	r6, r5
 801659c:	f824 600c 	strh.w	r6, [r4, ip]
 80165a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80165a2:	4410      	add	r0, r2
 80165a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80165a6:	3f01      	subs	r7, #1
 80165a8:	4411      	add	r1, r2
 80165aa:	e77f      	b.n	80164ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80165ac:	f06f 0601 	mvn.w	r6, #1
 80165b0:	437e      	muls	r6, r7
 80165b2:	fa1f fa82 	uxth.w	sl, r2
 80165b6:	f834 8006 	ldrh.w	r8, [r4, r6]
 80165ba:	9602      	str	r6, [sp, #8]
 80165bc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80165c0:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80165c4:	43d2      	mvns	r2, r2
 80165c6:	b2d2      	uxtb	r2, r2
 80165c8:	fb1c fc0a 	smulbb	ip, ip, sl
 80165cc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80165d0:	fb0e ce02 	mla	lr, lr, r2, ip
 80165d4:	b2ed      	uxtb	r5, r5
 80165d6:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80165da:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80165de:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80165e2:	fa5f f888 	uxtb.w	r8, r8
 80165e6:	fb15 f50a 	smulbb	r5, r5, sl
 80165ea:	fb08 5502 	mla	r5, r8, r2, r5
 80165ee:	fa1f fe8e 	uxth.w	lr, lr
 80165f2:	fb16 f60a 	smulbb	r6, r6, sl
 80165f6:	b2ad      	uxth	r5, r5
 80165f8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80165fc:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016600:	f10e 0201 	add.w	r2, lr, #1
 8016604:	1c6e      	adds	r6, r5, #1
 8016606:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801660a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801660e:	fa1f fc8c 	uxth.w	ip, ip
 8016612:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016616:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801661a:	ea46 0e0e 	orr.w	lr, r6, lr
 801661e:	f10c 0601 	add.w	r6, ip, #1
 8016622:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016626:	0976      	lsrs	r6, r6, #5
 8016628:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801662c:	9a02      	ldr	r2, [sp, #8]
 801662e:	ea4e 0e06 	orr.w	lr, lr, r6
 8016632:	f824 e002 	strh.w	lr, [r4, r2]
 8016636:	e7b3      	b.n	80165a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016638:	f04f 0800 	mov.w	r8, #0
 801663c:	eba3 0208 	sub.w	r2, r3, r8
 8016640:	2a00      	cmp	r2, #0
 8016642:	f77f af36 	ble.w	80164b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016646:	9e00      	ldr	r6, [sp, #0]
 8016648:	1402      	asrs	r2, r0, #16
 801664a:	140d      	asrs	r5, r1, #16
 801664c:	fb06 2505 	mla	r5, r6, r5, r2
 8016650:	086a      	lsrs	r2, r5, #1
 8016652:	9e01      	ldr	r6, [sp, #4]
 8016654:	5cb2      	ldrb	r2, [r6, r2]
 8016656:	07ed      	lsls	r5, r5, #31
 8016658:	bf54      	ite	pl
 801665a:	f002 020f 	andpl.w	r2, r2, #15
 801665e:	1112      	asrmi	r2, r2, #4
 8016660:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016664:	b2d2      	uxtb	r2, r2
 8016666:	b1c2      	cbz	r2, 801669a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016668:	9d04      	ldr	r5, [sp, #16]
 801666a:	436a      	muls	r2, r5
 801666c:	1c55      	adds	r5, r2, #1
 801666e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016672:	4d2e      	ldr	r5, [pc, #184]	; (801672c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016674:	1212      	asrs	r2, r2, #8
 8016676:	682e      	ldr	r6, [r5, #0]
 8016678:	2aff      	cmp	r2, #255	; 0xff
 801667a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801667e:	d113      	bne.n	80166a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016680:	0972      	lsrs	r2, r6, #5
 8016682:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016686:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801668a:	f025 0507 	bic.w	r5, r5, #7
 801668e:	4315      	orrs	r5, r2
 8016690:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016694:	4335      	orrs	r5, r6
 8016696:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801669a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801669c:	4410      	add	r0, r2
 801669e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80166a0:	f108 0801 	add.w	r8, r8, #1
 80166a4:	4411      	add	r1, r2
 80166a6:	e7c9      	b.n	801663c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80166a8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80166ac:	fa1f fa82 	uxth.w	sl, r2
 80166b0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80166b4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80166b8:	43d2      	mvns	r2, r2
 80166ba:	b2d2      	uxtb	r2, r2
 80166bc:	fb17 f70a 	smulbb	r7, r7, sl
 80166c0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80166c4:	fb0c 7c02 	mla	ip, ip, r2, r7
 80166c8:	b2f6      	uxtb	r6, r6
 80166ca:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80166ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80166d2:	fa5f fe8e 	uxtb.w	lr, lr
 80166d6:	fb16 f60a 	smulbb	r6, r6, sl
 80166da:	fb0e 6602 	mla	r6, lr, r2, r6
 80166de:	b2ed      	uxtb	r5, r5
 80166e0:	fa1f fc8c 	uxth.w	ip, ip
 80166e4:	fb15 f50a 	smulbb	r5, r5, sl
 80166e8:	b2b6      	uxth	r6, r6
 80166ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80166ee:	fb07 5702 	mla	r7, r7, r2, r5
 80166f2:	f10c 0201 	add.w	r2, ip, #1
 80166f6:	1c75      	adds	r5, r6, #1
 80166f8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80166fc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016700:	b2bf      	uxth	r7, r7
 8016702:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016706:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801670a:	ea45 0c0c 	orr.w	ip, r5, ip
 801670e:	1c7d      	adds	r5, r7, #1
 8016710:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016714:	096d      	lsrs	r5, r5, #5
 8016716:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801671a:	ea4c 0c05 	orr.w	ip, ip, r5
 801671e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016722:	e7ba      	b.n	801669a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016724:	b007      	add	sp, #28
 8016726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801672a:	bf00      	nop
 801672c:	200153f4 	.word	0x200153f4

08016730 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016734:	b087      	sub	sp, #28
 8016736:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016a44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801673a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801673c:	9205      	str	r2, [sp, #20]
 801673e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016742:	9101      	str	r1, [sp, #4]
 8016744:	6841      	ldr	r1, [r0, #4]
 8016746:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801674a:	fb01 2404 	mla	r4, r1, r4, r2
 801674e:	6802      	ldr	r2, [r0, #0]
 8016750:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016754:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016758:	3201      	adds	r2, #1
 801675a:	f022 0201 	bic.w	r2, r2, #1
 801675e:	9202      	str	r2, [sp, #8]
 8016760:	f8db 2000 	ldr.w	r2, [fp]
 8016764:	9203      	str	r2, [sp, #12]
 8016766:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801676a:	9a01      	ldr	r2, [sp, #4]
 801676c:	2a00      	cmp	r2, #0
 801676e:	dc03      	bgt.n	8016778 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016770:	9a05      	ldr	r2, [sp, #20]
 8016772:	2a00      	cmp	r2, #0
 8016774:	f340 8162 	ble.w	8016a3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016778:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801677a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801677e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016782:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016786:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016788:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801678c:	2b00      	cmp	r3, #0
 801678e:	dd0e      	ble.n	80167ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016790:	1402      	asrs	r2, r0, #16
 8016792:	d405      	bmi.n	80167a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016794:	42ba      	cmp	r2, r7
 8016796:	da03      	bge.n	80167a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016798:	140a      	asrs	r2, r1, #16
 801679a:	d401      	bmi.n	80167a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801679c:	42b2      	cmp	r2, r6
 801679e:	db07      	blt.n	80167b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80167a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167a2:	4410      	add	r0, r2
 80167a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167a6:	3b01      	subs	r3, #1
 80167a8:	4411      	add	r1, r2
 80167aa:	3402      	adds	r4, #2
 80167ac:	e7ee      	b.n	801678c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80167ae:	d017      	beq.n	80167e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80167b0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80167b2:	1e5a      	subs	r2, r3, #1
 80167b4:	fb05 0502 	mla	r5, r5, r2, r0
 80167b8:	142d      	asrs	r5, r5, #16
 80167ba:	d409      	bmi.n	80167d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80167bc:	42bd      	cmp	r5, r7
 80167be:	da07      	bge.n	80167d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80167c0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80167c2:	fb05 1202 	mla	r2, r5, r2, r1
 80167c6:	1412      	asrs	r2, r2, #16
 80167c8:	d402      	bmi.n	80167d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80167ca:	42b2      	cmp	r2, r6
 80167cc:	f2c0 80c3 	blt.w	8016956 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80167d0:	2500      	movs	r5, #0
 80167d2:	195a      	adds	r2, r3, r5
 80167d4:	2a00      	cmp	r2, #0
 80167d6:	dc3f      	bgt.n	8016858 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80167d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80167dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80167e0:	9b01      	ldr	r3, [sp, #4]
 80167e2:	2b00      	cmp	r3, #0
 80167e4:	f340 812a 	ble.w	8016a3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80167e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80167ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80167f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80167f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80167f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80167fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80167fe:	eeb0 6a62 	vmov.f32	s12, s5
 8016802:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016806:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801680a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801680e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016812:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016816:	eeb0 6a43 	vmov.f32	s12, s6
 801681a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801681e:	ee12 2a90 	vmov	r2, s5
 8016822:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016826:	fb92 f3f3 	sdiv	r3, r2, r3
 801682a:	ee13 2a10 	vmov	r2, s6
 801682e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016830:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016832:	fb92 f3f3 	sdiv	r3, r2, r3
 8016836:	9314      	str	r3, [sp, #80]	; 0x50
 8016838:	9b01      	ldr	r3, [sp, #4]
 801683a:	9a05      	ldr	r2, [sp, #20]
 801683c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016840:	3b01      	subs	r3, #1
 8016842:	9301      	str	r3, [sp, #4]
 8016844:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016848:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801684a:	eeb0 3a67 	vmov.f32	s6, s15
 801684e:	bf08      	it	eq
 8016850:	4613      	moveq	r3, r2
 8016852:	eef0 2a47 	vmov.f32	s5, s14
 8016856:	e788      	b.n	801676a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016858:	1406      	asrs	r6, r0, #16
 801685a:	d42c      	bmi.n	80168b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801685c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016860:	42b2      	cmp	r2, r6
 8016862:	dd28      	ble.n	80168b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016864:	140f      	asrs	r7, r1, #16
 8016866:	d426      	bmi.n	80168b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016868:	f8db 200c 	ldr.w	r2, [fp, #12]
 801686c:	42ba      	cmp	r2, r7
 801686e:	dd22      	ble.n	80168b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016870:	9a02      	ldr	r2, [sp, #8]
 8016872:	fb07 6602 	mla	r6, r7, r2, r6
 8016876:	0872      	lsrs	r2, r6, #1
 8016878:	9f03      	ldr	r7, [sp, #12]
 801687a:	5cba      	ldrb	r2, [r7, r2]
 801687c:	07f6      	lsls	r6, r6, #31
 801687e:	bf54      	ite	pl
 8016880:	f002 020f 	andpl.w	r2, r2, #15
 8016884:	1112      	asrmi	r2, r2, #4
 8016886:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801688a:	b2d2      	uxtb	r2, r2
 801688c:	2aff      	cmp	r2, #255	; 0xff
 801688e:	d118      	bne.n	80168c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016890:	f8d8 2000 	ldr.w	r2, [r8]
 8016894:	f06f 0601 	mvn.w	r6, #1
 8016898:	fb06 f705 	mul.w	r7, r6, r5
 801689c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80168a0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80168a4:	0956      	lsrs	r6, r2, #5
 80168a6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80168aa:	ea4c 0606 	orr.w	r6, ip, r6
 80168ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80168b2:	4316      	orrs	r6, r2
 80168b4:	53e6      	strh	r6, [r4, r7]
 80168b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168b8:	4410      	add	r0, r2
 80168ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168bc:	3d01      	subs	r5, #1
 80168be:	4411      	add	r1, r2
 80168c0:	e787      	b.n	80167d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80168c2:	2a00      	cmp	r2, #0
 80168c4:	d0f7      	beq.n	80168b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80168c6:	f06f 0601 	mvn.w	r6, #1
 80168ca:	436e      	muls	r6, r5
 80168cc:	f8d8 c000 	ldr.w	ip, [r8]
 80168d0:	f834 e006 	ldrh.w	lr, [r4, r6]
 80168d4:	9604      	str	r6, [sp, #16]
 80168d6:	fa1f f982 	uxth.w	r9, r2
 80168da:	ea4f 272e 	mov.w	r7, lr, asr #8
 80168de:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80168e2:	43d2      	mvns	r2, r2
 80168e4:	b2d2      	uxtb	r2, r2
 80168e6:	fb16 f609 	smulbb	r6, r6, r9
 80168ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80168ee:	fb07 6702 	mla	r7, r7, r2, r6
 80168f2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80168f6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80168fa:	fa5f fc8c 	uxtb.w	ip, ip
 80168fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016902:	fa5f fe8e 	uxtb.w	lr, lr
 8016906:	fb1c fc09 	smulbb	ip, ip, r9
 801690a:	fb0e cc02 	mla	ip, lr, r2, ip
 801690e:	b2bf      	uxth	r7, r7
 8016910:	fb1a fa09 	smulbb	sl, sl, r9
 8016914:	fa1f fc8c 	uxth.w	ip, ip
 8016918:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801691c:	fb06 a602 	mla	r6, r6, r2, sl
 8016920:	1c7a      	adds	r2, r7, #1
 8016922:	f10c 0a01 	add.w	sl, ip, #1
 8016926:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801692a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801692e:	b2b6      	uxth	r6, r6
 8016930:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016934:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016938:	ea4a 0707 	orr.w	r7, sl, r7
 801693c:	f106 0a01 	add.w	sl, r6, #1
 8016940:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016944:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016948:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801694c:	9a04      	ldr	r2, [sp, #16]
 801694e:	ea47 070a 	orr.w	r7, r7, sl
 8016952:	52a7      	strh	r7, [r4, r2]
 8016954:	e7af      	b.n	80168b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016956:	f04f 0e00 	mov.w	lr, #0
 801695a:	eba3 020e 	sub.w	r2, r3, lr
 801695e:	2a00      	cmp	r2, #0
 8016960:	f77f af3a 	ble.w	80167d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016964:	9e02      	ldr	r6, [sp, #8]
 8016966:	1402      	asrs	r2, r0, #16
 8016968:	140d      	asrs	r5, r1, #16
 801696a:	fb06 2505 	mla	r5, r6, r5, r2
 801696e:	086a      	lsrs	r2, r5, #1
 8016970:	9e03      	ldr	r6, [sp, #12]
 8016972:	5cb2      	ldrb	r2, [r6, r2]
 8016974:	07ed      	lsls	r5, r5, #31
 8016976:	bf54      	ite	pl
 8016978:	f002 020f 	andpl.w	r2, r2, #15
 801697c:	1112      	asrmi	r2, r2, #4
 801697e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016982:	b2d2      	uxtb	r2, r2
 8016984:	2aff      	cmp	r2, #255	; 0xff
 8016986:	d115      	bne.n	80169b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016988:	f8d8 5000 	ldr.w	r5, [r8]
 801698c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016990:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016994:	096a      	lsrs	r2, r5, #5
 8016996:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801699a:	4332      	orrs	r2, r6
 801699c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80169a0:	432a      	orrs	r2, r5
 80169a2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80169a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80169a8:	4410      	add	r0, r2
 80169aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80169ac:	f10e 0e01 	add.w	lr, lr, #1
 80169b0:	4411      	add	r1, r2
 80169b2:	e7d2      	b.n	801695a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80169b4:	2a00      	cmp	r2, #0
 80169b6:	d0f6      	beq.n	80169a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80169b8:	f8d8 7000 	ldr.w	r7, [r8]
 80169bc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80169c0:	fa1f f982 	uxth.w	r9, r2
 80169c4:	ea4f 262c 	mov.w	r6, ip, asr #8
 80169c8:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80169cc:	43d2      	mvns	r2, r2
 80169ce:	b2d2      	uxtb	r2, r2
 80169d0:	fb15 f509 	smulbb	r5, r5, r9
 80169d4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80169d8:	fb06 5602 	mla	r6, r6, r2, r5
 80169dc:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80169e0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80169e4:	b2ff      	uxtb	r7, r7
 80169e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80169ea:	fa5f fc8c 	uxtb.w	ip, ip
 80169ee:	fb17 f709 	smulbb	r7, r7, r9
 80169f2:	fb0c 7702 	mla	r7, ip, r2, r7
 80169f6:	b2b6      	uxth	r6, r6
 80169f8:	fb1a fa09 	smulbb	sl, sl, r9
 80169fc:	b2bf      	uxth	r7, r7
 80169fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016a02:	fb05 a502 	mla	r5, r5, r2, sl
 8016a06:	1c72      	adds	r2, r6, #1
 8016a08:	f107 0a01 	add.w	sl, r7, #1
 8016a0c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016a10:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016a14:	b2ad      	uxth	r5, r5
 8016a16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016a1a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016a1e:	ea4a 0606 	orr.w	r6, sl, r6
 8016a22:	f105 0a01 	add.w	sl, r5, #1
 8016a26:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016a2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016a2e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016a32:	ea46 060a 	orr.w	r6, r6, sl
 8016a36:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016a3a:	e7b4      	b.n	80169a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016a3c:	b007      	add	sp, #28
 8016a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a42:	bf00      	nop
 8016a44:	200153f4 	.word	0x200153f4

08016a48 <_ZN8touchgfx8LCD16bppD1Ev>:
 8016a48:	4770      	bx	lr

08016a4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016a4a:	4770      	bx	lr

08016a4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016a4c:	4770      	bx	lr

08016a4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016a4e:	4770      	bx	lr

08016a50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016a50:	4770      	bx	lr

08016a52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016a52:	4770      	bx	lr

08016a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016a54:	4770      	bx	lr

08016a56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016a56:	4770      	bx	lr

08016a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016a58:	4770      	bx	lr

08016a5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016a5a:	4770      	bx	lr

08016a5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016a5c:	4770      	bx	lr

08016a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016a5e:	4770      	bx	lr

08016a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016a60:	4770      	bx	lr

08016a62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016a62:	4770      	bx	lr

08016a64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016a64:	4770      	bx	lr

08016a66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016a66:	4770      	bx	lr

08016a68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016a68:	4770      	bx	lr

08016a6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016a6a:	4770      	bx	lr

08016a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016a6c:	4770      	bx	lr

08016a6e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016a6e:	4770      	bx	lr

08016a70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016a70:	4770      	bx	lr

08016a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016a72:	4770      	bx	lr

08016a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016a74:	4770      	bx	lr

08016a76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016a76:	4770      	bx	lr

08016a78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016a78:	4770      	bx	lr

08016a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016a7a:	4770      	bx	lr

08016a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016a7c:	4770      	bx	lr

08016a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016a7e:	4770      	bx	lr

08016a80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016a80:	4770      	bx	lr

08016a82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016a82:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016a86:	b088      	sub	sp, #32
 8016a88:	ac08      	add	r4, sp, #32
 8016a8a:	4606      	mov	r6, r0
 8016a8c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016a90:	4620      	mov	r0, r4
 8016a92:	4688      	mov	r8, r1
 8016a94:	4691      	mov	r9, r2
 8016a96:	f7fd fc65 	bl	8014364 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016a9a:	6833      	ldr	r3, [r6, #0]
 8016a9c:	4605      	mov	r5, r0
 8016a9e:	4620      	mov	r0, r4
 8016aa0:	699f      	ldr	r7, [r3, #24]
 8016aa2:	f7fd fb73 	bl	801418c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016aa6:	4682      	mov	sl, r0
 8016aa8:	4620      	mov	r0, r4
 8016aaa:	f7fd fba3 	bl	80141f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016aae:	9500      	str	r5, [sp, #0]
 8016ab0:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016ab4:	464b      	mov	r3, r9
 8016ab6:	a806      	add	r0, sp, #24
 8016ab8:	4642      	mov	r2, r8
 8016aba:	4631      	mov	r1, r6
 8016abc:	47b8      	blx	r7
 8016abe:	4628      	mov	r0, r5
 8016ac0:	b008      	add	sp, #32
 8016ac2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016ac8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016ac8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016acc:	2300      	movs	r3, #0
 8016ace:	9300      	str	r3, [sp, #0]
 8016ad0:	4b3d      	ldr	r3, [pc, #244]	; (8016bc8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016ad2:	781b      	ldrb	r3, [r3, #0]
 8016ad4:	2b00      	cmp	r3, #0
 8016ad6:	d137      	bne.n	8016b48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016ad8:	4a3c      	ldr	r2, [pc, #240]	; (8016bcc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016ada:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016ade:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016ae2:	2b00      	cmp	r3, #0
 8016ae4:	d132      	bne.n	8016b4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016ae6:	4b3a      	ldr	r3, [pc, #232]	; (8016bd0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016ae8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016aec:	6808      	ldr	r0, [r1, #0]
 8016aee:	6849      	ldr	r1, [r1, #4]
 8016af0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016af4:	ac02      	add	r4, sp, #8
 8016af6:	ab02      	add	r3, sp, #8
 8016af8:	c303      	stmia	r3!, {r0, r1}
 8016afa:	4669      	mov	r1, sp
 8016afc:	4620      	mov	r0, r4
 8016afe:	f7f9 ff7f 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016b02:	4668      	mov	r0, sp
 8016b04:	f7f9 ff54 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016b08:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016b0c:	f8bd 2000 	ldrh.w	r2, [sp]
 8016b10:	4d30      	ldr	r5, [pc, #192]	; (8016bd4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016b12:	4413      	add	r3, r2
 8016b14:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016b18:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016b1c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016b20:	6828      	ldr	r0, [r5, #0]
 8016b22:	4413      	add	r3, r2
 8016b24:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016b28:	6803      	ldr	r3, [r0, #0]
 8016b2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016b2c:	4798      	blx	r3
 8016b2e:	f010 0f01 	tst.w	r0, #1
 8016b32:	462f      	mov	r7, r5
 8016b34:	d00c      	beq.n	8016b50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016b36:	6828      	ldr	r0, [r5, #0]
 8016b38:	6803      	ldr	r3, [r0, #0]
 8016b3a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016b3e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016b40:	4798      	blx	r3
 8016b42:	b004      	add	sp, #16
 8016b44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016b48:	4a21      	ldr	r2, [pc, #132]	; (8016bd0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016b4a:	e7c6      	b.n	8016ada <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016b4c:	4b1f      	ldr	r3, [pc, #124]	; (8016bcc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016b4e:	e7cb      	b.n	8016ae8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016b50:	6838      	ldr	r0, [r7, #0]
 8016b52:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016b56:	6803      	ldr	r3, [r0, #0]
 8016b58:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016b5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016b5e:	4798      	blx	r3
 8016b60:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016b64:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016b68:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016b6c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016b70:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016b74:	6838      	ldr	r0, [r7, #0]
 8016b76:	6803      	ldr	r3, [r0, #0]
 8016b78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016b7a:	4798      	blx	r3
 8016b7c:	4a13      	ldr	r2, [pc, #76]	; (8016bcc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016b7e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016b82:	8813      	ldrh	r3, [r2, #0]
 8016b84:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016b88:	fb03 1404 	mla	r4, r3, r4, r1
 8016b8c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016b90:	435d      	muls	r5, r3
 8016b92:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016b96:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016b9a:	4691      	mov	r9, r2
 8016b9c:	6838      	ldr	r0, [r7, #0]
 8016b9e:	42ac      	cmp	r4, r5
 8016ba0:	6803      	ldr	r3, [r0, #0]
 8016ba2:	d20e      	bcs.n	8016bc2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016ba4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016ba8:	4632      	mov	r2, r6
 8016baa:	4643      	mov	r3, r8
 8016bac:	4621      	mov	r1, r4
 8016bae:	47d0      	blx	sl
 8016bb0:	f8b9 3000 	ldrh.w	r3, [r9]
 8016bb4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016bb8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016bbc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016bc0:	e7ec      	b.n	8016b9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016bc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016bc4:	4798      	blx	r3
 8016bc6:	e7bc      	b.n	8016b42 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016bc8:	200153dc 	.word	0x200153dc
 8016bcc:	200153de 	.word	0x200153de
 8016bd0:	200153e0 	.word	0x200153e0
 8016bd4:	200153e4 	.word	0x200153e4

08016bd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bdc:	b08b      	sub	sp, #44	; 0x2c
 8016bde:	460f      	mov	r7, r1
 8016be0:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016be4:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8016be8:	4616      	mov	r6, r2
 8016bea:	f1bb 0f00 	cmp.w	fp, #0
 8016bee:	d049      	beq.n	8016c84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016bf0:	6810      	ldr	r0, [r2, #0]
 8016bf2:	6851      	ldr	r1, [r2, #4]
 8016bf4:	ad06      	add	r5, sp, #24
 8016bf6:	c503      	stmia	r5!, {r0, r1}
 8016bf8:	6818      	ldr	r0, [r3, #0]
 8016bfa:	6859      	ldr	r1, [r3, #4]
 8016bfc:	ad08      	add	r5, sp, #32
 8016bfe:	c503      	stmia	r5!, {r0, r1}
 8016c00:	a806      	add	r0, sp, #24
 8016c02:	f7f9 fed5 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c06:	4631      	mov	r1, r6
 8016c08:	a808      	add	r0, sp, #32
 8016c0a:	f7f9 fef9 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c0e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016c12:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016c16:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016c1a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016c1e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016c22:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016c26:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8016c2a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016c2e:	4f5f      	ldr	r7, [pc, #380]	; (8016dac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016c30:	440a      	add	r2, r1
 8016c32:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016c36:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016c3a:	6838      	ldr	r0, [r7, #0]
 8016c3c:	4413      	add	r3, r2
 8016c3e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016c42:	6803      	ldr	r3, [r0, #0]
 8016c44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016c46:	4798      	blx	r3
 8016c48:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016c4c:	46b9      	mov	r9, r7
 8016c4e:	d01c      	beq.n	8016c8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8016c50:	f010 0f04 	tst.w	r0, #4
 8016c54:	d01d      	beq.n	8016c92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016c56:	f8d9 0000 	ldr.w	r0, [r9]
 8016c5a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016c5e:	6801      	ldr	r1, [r0, #0]
 8016c60:	f8cd b00c 	str.w	fp, [sp, #12]
 8016c64:	2700      	movs	r7, #0
 8016c66:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016c6a:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016c6e:	9402      	str	r4, [sp, #8]
 8016c70:	b2ad      	uxth	r5, r5
 8016c72:	fa1f f488 	uxth.w	r4, r8
 8016c76:	9501      	str	r5, [sp, #4]
 8016c78:	9400      	str	r4, [sp, #0]
 8016c7a:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8016c7c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016c80:	4631      	mov	r1, r6
 8016c82:	47a0      	blx	r4
 8016c84:	b00b      	add	sp, #44	; 0x2c
 8016c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c8a:	b914      	cbnz	r4, 8016c92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016c8c:	f010 0f01 	tst.w	r0, #1
 8016c90:	e7e0      	b.n	8016c54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8016c92:	f8d9 0000 	ldr.w	r0, [r9]
 8016c96:	6803      	ldr	r3, [r0, #0]
 8016c98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016c9a:	4798      	blx	r3
 8016c9c:	4b44      	ldr	r3, [pc, #272]	; (8016db0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8016c9e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8016ca2:	881a      	ldrh	r2, [r3, #0]
 8016ca4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016ca8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016cac:	fb02 1404 	mla	r4, r2, r4, r1
 8016cb0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016cb4:	469a      	mov	sl, r3
 8016cb6:	fb05 f502 	mul.w	r5, r5, r2
 8016cba:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8016cbe:	d059      	beq.n	8016d74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016cc0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8016cc4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016cc8:	fa1f f28b 	uxth.w	r2, fp
 8016ccc:	fa1f f989 	uxth.w	r9, r9
 8016cd0:	469e      	mov	lr, r3
 8016cd2:	42ac      	cmp	r4, r5
 8016cd4:	d264      	bcs.n	8016da0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016cd6:	eb04 0a07 	add.w	sl, r4, r7
 8016cda:	4554      	cmp	r4, sl
 8016cdc:	d23d      	bcs.n	8016d5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8016cde:	8821      	ldrh	r1, [r4, #0]
 8016ce0:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016ce4:	1208      	asrs	r0, r1, #8
 8016ce6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016cea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016cee:	fb10 f009 	smulbb	r0, r0, r9
 8016cf2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8016cf6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016cfa:	00c9      	lsls	r1, r1, #3
 8016cfc:	fb0c 0c02 	mla	ip, ip, r2, r0
 8016d00:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016d04:	10d8      	asrs	r0, r3, #3
 8016d06:	b2c9      	uxtb	r1, r1
 8016d08:	00db      	lsls	r3, r3, #3
 8016d0a:	fa1f fc8c 	uxth.w	ip, ip
 8016d0e:	fb1b fb09 	smulbb	fp, fp, r9
 8016d12:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016d16:	b2db      	uxtb	r3, r3
 8016d18:	fb11 f109 	smulbb	r1, r1, r9
 8016d1c:	fb00 b002 	mla	r0, r0, r2, fp
 8016d20:	fb03 1302 	mla	r3, r3, r2, r1
 8016d24:	f10c 0b01 	add.w	fp, ip, #1
 8016d28:	b29b      	uxth	r3, r3
 8016d2a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8016d2e:	b280      	uxth	r0, r0
 8016d30:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8016d34:	f103 0c01 	add.w	ip, r3, #1
 8016d38:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8016d3c:	1c43      	adds	r3, r0, #1
 8016d3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016d42:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016d46:	0940      	lsrs	r0, r0, #5
 8016d48:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016d4c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016d50:	ea4c 0c00 	orr.w	ip, ip, r0
 8016d54:	f824 cb02 	strh.w	ip, [r4], #2
 8016d58:	e7bf      	b.n	8016cda <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8016d5a:	f8be 3000 	ldrh.w	r3, [lr]
 8016d5e:	eba3 0308 	sub.w	r3, r3, r8
 8016d62:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016d66:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016d6a:	eba3 0308 	sub.w	r3, r3, r8
 8016d6e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016d72:	e7ae      	b.n	8016cd2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8016d74:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016d78:	f8d9 0000 	ldr.w	r0, [r9]
 8016d7c:	42ac      	cmp	r4, r5
 8016d7e:	6803      	ldr	r3, [r0, #0]
 8016d80:	d20e      	bcs.n	8016da0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016d82:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8016d86:	4632      	mov	r2, r6
 8016d88:	463b      	mov	r3, r7
 8016d8a:	4621      	mov	r1, r4
 8016d8c:	47c0      	blx	r8
 8016d8e:	f8ba 3000 	ldrh.w	r3, [sl]
 8016d92:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016d96:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016d9a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016d9e:	e7eb      	b.n	8016d78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8016da0:	4b02      	ldr	r3, [pc, #8]	; (8016dac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016da2:	6818      	ldr	r0, [r3, #0]
 8016da4:	6803      	ldr	r3, [r0, #0]
 8016da6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016da8:	4798      	blx	r3
 8016daa:	e76b      	b.n	8016c84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016dac:	200153e4 	.word	0x200153e4
 8016db0:	200153de 	.word	0x200153de

08016db4 <_ZN8touchgfx8LCD16bppD0Ev>:
 8016db4:	b510      	push	{r4, lr}
 8016db6:	2178      	movs	r1, #120	; 0x78
 8016db8:	4604      	mov	r4, r0
 8016dba:	f009 fad3 	bl	8020364 <_ZdlPvj>
 8016dbe:	4620      	mov	r0, r4
 8016dc0:	bd10      	pop	{r4, pc}

08016dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016dc2:	b510      	push	{r4, lr}
 8016dc4:	2104      	movs	r1, #4
 8016dc6:	4604      	mov	r4, r0
 8016dc8:	f009 facc 	bl	8020364 <_ZdlPvj>
 8016dcc:	4620      	mov	r0, r4
 8016dce:	bd10      	pop	{r4, pc}

08016dd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016dd0:	b510      	push	{r4, lr}
 8016dd2:	2104      	movs	r1, #4
 8016dd4:	4604      	mov	r4, r0
 8016dd6:	f009 fac5 	bl	8020364 <_ZdlPvj>
 8016dda:	4620      	mov	r0, r4
 8016ddc:	bd10      	pop	{r4, pc}

08016dde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016dde:	b510      	push	{r4, lr}
 8016de0:	2104      	movs	r1, #4
 8016de2:	4604      	mov	r4, r0
 8016de4:	f009 fabe 	bl	8020364 <_ZdlPvj>
 8016de8:	4620      	mov	r0, r4
 8016dea:	bd10      	pop	{r4, pc}

08016dec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016dec:	b510      	push	{r4, lr}
 8016dee:	2104      	movs	r1, #4
 8016df0:	4604      	mov	r4, r0
 8016df2:	f009 fab7 	bl	8020364 <_ZdlPvj>
 8016df6:	4620      	mov	r0, r4
 8016df8:	bd10      	pop	{r4, pc}

08016dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016dfa:	b510      	push	{r4, lr}
 8016dfc:	2104      	movs	r1, #4
 8016dfe:	4604      	mov	r4, r0
 8016e00:	f009 fab0 	bl	8020364 <_ZdlPvj>
 8016e04:	4620      	mov	r0, r4
 8016e06:	bd10      	pop	{r4, pc}

08016e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016e08:	b510      	push	{r4, lr}
 8016e0a:	2104      	movs	r1, #4
 8016e0c:	4604      	mov	r4, r0
 8016e0e:	f009 faa9 	bl	8020364 <_ZdlPvj>
 8016e12:	4620      	mov	r0, r4
 8016e14:	bd10      	pop	{r4, pc}

08016e16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016e16:	b510      	push	{r4, lr}
 8016e18:	2104      	movs	r1, #4
 8016e1a:	4604      	mov	r4, r0
 8016e1c:	f009 faa2 	bl	8020364 <_ZdlPvj>
 8016e20:	4620      	mov	r0, r4
 8016e22:	bd10      	pop	{r4, pc}

08016e24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016e24:	b510      	push	{r4, lr}
 8016e26:	2104      	movs	r1, #4
 8016e28:	4604      	mov	r4, r0
 8016e2a:	f009 fa9b 	bl	8020364 <_ZdlPvj>
 8016e2e:	4620      	mov	r0, r4
 8016e30:	bd10      	pop	{r4, pc}

08016e32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016e32:	b510      	push	{r4, lr}
 8016e34:	2104      	movs	r1, #4
 8016e36:	4604      	mov	r4, r0
 8016e38:	f009 fa94 	bl	8020364 <_ZdlPvj>
 8016e3c:	4620      	mov	r0, r4
 8016e3e:	bd10      	pop	{r4, pc}

08016e40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016e40:	b510      	push	{r4, lr}
 8016e42:	2104      	movs	r1, #4
 8016e44:	4604      	mov	r4, r0
 8016e46:	f009 fa8d 	bl	8020364 <_ZdlPvj>
 8016e4a:	4620      	mov	r0, r4
 8016e4c:	bd10      	pop	{r4, pc}

08016e4e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016e4e:	b510      	push	{r4, lr}
 8016e50:	2104      	movs	r1, #4
 8016e52:	4604      	mov	r4, r0
 8016e54:	f009 fa86 	bl	8020364 <_ZdlPvj>
 8016e58:	4620      	mov	r0, r4
 8016e5a:	bd10      	pop	{r4, pc}

08016e5c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016e5c:	b510      	push	{r4, lr}
 8016e5e:	2104      	movs	r1, #4
 8016e60:	4604      	mov	r4, r0
 8016e62:	f009 fa7f 	bl	8020364 <_ZdlPvj>
 8016e66:	4620      	mov	r0, r4
 8016e68:	bd10      	pop	{r4, pc}

08016e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016e6a:	b510      	push	{r4, lr}
 8016e6c:	2104      	movs	r1, #4
 8016e6e:	4604      	mov	r4, r0
 8016e70:	f009 fa78 	bl	8020364 <_ZdlPvj>
 8016e74:	4620      	mov	r0, r4
 8016e76:	bd10      	pop	{r4, pc}

08016e78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016e78:	b510      	push	{r4, lr}
 8016e7a:	2104      	movs	r1, #4
 8016e7c:	4604      	mov	r4, r0
 8016e7e:	f009 fa71 	bl	8020364 <_ZdlPvj>
 8016e82:	4620      	mov	r0, r4
 8016e84:	bd10      	pop	{r4, pc}

08016e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016e86:	b510      	push	{r4, lr}
 8016e88:	2104      	movs	r1, #4
 8016e8a:	4604      	mov	r4, r0
 8016e8c:	f009 fa6a 	bl	8020364 <_ZdlPvj>
 8016e90:	4620      	mov	r0, r4
 8016e92:	bd10      	pop	{r4, pc}

08016e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016e94:	b510      	push	{r4, lr}
 8016e96:	2104      	movs	r1, #4
 8016e98:	4604      	mov	r4, r0
 8016e9a:	f009 fa63 	bl	8020364 <_ZdlPvj>
 8016e9e:	4620      	mov	r0, r4
 8016ea0:	bd10      	pop	{r4, pc}

08016ea2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016ea2:	b510      	push	{r4, lr}
 8016ea4:	2104      	movs	r1, #4
 8016ea6:	4604      	mov	r4, r0
 8016ea8:	f009 fa5c 	bl	8020364 <_ZdlPvj>
 8016eac:	4620      	mov	r0, r4
 8016eae:	bd10      	pop	{r4, pc}

08016eb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016eb0:	b510      	push	{r4, lr}
 8016eb2:	2104      	movs	r1, #4
 8016eb4:	4604      	mov	r4, r0
 8016eb6:	f009 fa55 	bl	8020364 <_ZdlPvj>
 8016eba:	4620      	mov	r0, r4
 8016ebc:	bd10      	pop	{r4, pc}

08016ebe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016ebe:	b510      	push	{r4, lr}
 8016ec0:	2104      	movs	r1, #4
 8016ec2:	4604      	mov	r4, r0
 8016ec4:	f009 fa4e 	bl	8020364 <_ZdlPvj>
 8016ec8:	4620      	mov	r0, r4
 8016eca:	bd10      	pop	{r4, pc}

08016ecc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016ecc:	b510      	push	{r4, lr}
 8016ece:	2104      	movs	r1, #4
 8016ed0:	4604      	mov	r4, r0
 8016ed2:	f009 fa47 	bl	8020364 <_ZdlPvj>
 8016ed6:	4620      	mov	r0, r4
 8016ed8:	bd10      	pop	{r4, pc}

08016eda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016eda:	b510      	push	{r4, lr}
 8016edc:	2104      	movs	r1, #4
 8016ede:	4604      	mov	r4, r0
 8016ee0:	f009 fa40 	bl	8020364 <_ZdlPvj>
 8016ee4:	4620      	mov	r0, r4
 8016ee6:	bd10      	pop	{r4, pc}

08016ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016ee8:	b510      	push	{r4, lr}
 8016eea:	2104      	movs	r1, #4
 8016eec:	4604      	mov	r4, r0
 8016eee:	f009 fa39 	bl	8020364 <_ZdlPvj>
 8016ef2:	4620      	mov	r0, r4
 8016ef4:	bd10      	pop	{r4, pc}

08016ef6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016ef6:	b510      	push	{r4, lr}
 8016ef8:	2104      	movs	r1, #4
 8016efa:	4604      	mov	r4, r0
 8016efc:	f009 fa32 	bl	8020364 <_ZdlPvj>
 8016f00:	4620      	mov	r0, r4
 8016f02:	bd10      	pop	{r4, pc}

08016f04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016f04:	b510      	push	{r4, lr}
 8016f06:	2104      	movs	r1, #4
 8016f08:	4604      	mov	r4, r0
 8016f0a:	f009 fa2b 	bl	8020364 <_ZdlPvj>
 8016f0e:	4620      	mov	r0, r4
 8016f10:	bd10      	pop	{r4, pc}

08016f12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016f12:	b510      	push	{r4, lr}
 8016f14:	2104      	movs	r1, #4
 8016f16:	4604      	mov	r4, r0
 8016f18:	f009 fa24 	bl	8020364 <_ZdlPvj>
 8016f1c:	4620      	mov	r0, r4
 8016f1e:	bd10      	pop	{r4, pc}

08016f20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016f20:	b510      	push	{r4, lr}
 8016f22:	2104      	movs	r1, #4
 8016f24:	4604      	mov	r4, r0
 8016f26:	f009 fa1d 	bl	8020364 <_ZdlPvj>
 8016f2a:	4620      	mov	r0, r4
 8016f2c:	bd10      	pop	{r4, pc}

08016f2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8016f2e:	b510      	push	{r4, lr}
 8016f30:	2104      	movs	r1, #4
 8016f32:	4604      	mov	r4, r0
 8016f34:	f009 fa16 	bl	8020364 <_ZdlPvj>
 8016f38:	4620      	mov	r0, r4
 8016f3a:	bd10      	pop	{r4, pc}

08016f3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8016f3c:	b510      	push	{r4, lr}
 8016f3e:	2104      	movs	r1, #4
 8016f40:	4604      	mov	r4, r0
 8016f42:	f009 fa0f 	bl	8020364 <_ZdlPvj>
 8016f46:	4620      	mov	r0, r4
 8016f48:	bd10      	pop	{r4, pc}
	...

08016f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8016f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f50:	b091      	sub	sp, #68	; 0x44
 8016f52:	469b      	mov	fp, r3
 8016f54:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8016f58:	4616      	mov	r6, r2
 8016f5a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8016f5e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016f62:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8016f66:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8016f6a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016f6e:	4604      	mov	r4, r0
 8016f70:	460d      	mov	r5, r1
 8016f72:	4640      	mov	r0, r8
 8016f74:	4659      	mov	r1, fp
 8016f76:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016f7a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8016f7e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8016f82:	f7f3 fd33 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 8016f86:	4631      	mov	r1, r6
 8016f88:	4640      	mov	r0, r8
 8016f8a:	f7f3 fd2f 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 8016f8e:	4b74      	ldr	r3, [pc, #464]	; (8017160 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8016f90:	8818      	ldrh	r0, [r3, #0]
 8016f92:	4b74      	ldr	r3, [pc, #464]	; (8017164 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8016f94:	8819      	ldrh	r1, [r3, #0]
 8016f96:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016f9a:	2b00      	cmp	r3, #0
 8016f9c:	b202      	sxth	r2, r0
 8016f9e:	b20e      	sxth	r6, r1
 8016fa0:	da07      	bge.n	8016fb2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8016fa2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016fa6:	4463      	add	r3, ip
 8016fa8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016fac:	2300      	movs	r3, #0
 8016fae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8016fb2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016fb6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8016fba:	1ad2      	subs	r2, r2, r3
 8016fbc:	4594      	cmp	ip, r2
 8016fbe:	bfc4      	itt	gt
 8016fc0:	1ac2      	subgt	r2, r0, r3
 8016fc2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8016fc6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016fca:	2a00      	cmp	r2, #0
 8016fcc:	da07      	bge.n	8016fde <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8016fce:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8016fd2:	4462      	add	r2, ip
 8016fd4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016fd8:	2200      	movs	r2, #0
 8016fda:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016fde:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8016fe2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8016fe6:	eba6 060a 	sub.w	r6, r6, sl
 8016fea:	42b2      	cmp	r2, r6
 8016fec:	bfc4      	itt	gt
 8016fee:	eba1 020a 	subgt.w	r2, r1, sl
 8016ff2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8016ff6:	4a5c      	ldr	r2, [pc, #368]	; (8017168 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8016ff8:	7812      	ldrb	r2, [r2, #0]
 8016ffa:	b9a2      	cbnz	r2, 8017026 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8016ffc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017000:	4286      	cmp	r6, r0
 8017002:	4640      	mov	r0, r8
 8017004:	9303      	str	r3, [sp, #12]
 8017006:	bf14      	ite	ne
 8017008:	2600      	movne	r6, #0
 801700a:	2601      	moveq	r6, #1
 801700c:	f7f3 fd31 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017010:	9b03      	ldr	r3, [sp, #12]
 8017012:	b160      	cbz	r0, 801702e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017014:	2300      	movs	r3, #0
 8017016:	8023      	strh	r3, [r4, #0]
 8017018:	8063      	strh	r3, [r4, #2]
 801701a:	80a3      	strh	r3, [r4, #4]
 801701c:	4620      	mov	r0, r4
 801701e:	80e3      	strh	r3, [r4, #6]
 8017020:	b011      	add	sp, #68	; 0x44
 8017022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017026:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801702a:	428e      	cmp	r6, r1
 801702c:	e7e9      	b.n	8017002 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801702e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017032:	9205      	str	r2, [sp, #20]
 8017034:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8017038:	9206      	str	r2, [sp, #24]
 801703a:	f8bb 2000 	ldrh.w	r2, [fp]
 801703e:	900e      	str	r0, [sp, #56]	; 0x38
 8017040:	1a9b      	subs	r3, r3, r2
 8017042:	b21b      	sxth	r3, r3
 8017044:	9303      	str	r3, [sp, #12]
 8017046:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801704a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801704e:	ebaa 0a03 	sub.w	sl, sl, r3
 8017052:	fa0f f38a 	sxth.w	r3, sl
 8017056:	9304      	str	r3, [sp, #16]
 8017058:	9b03      	ldr	r3, [sp, #12]
 801705a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801705e:	9b04      	ldr	r3, [sp, #16]
 8017060:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017064:	9b05      	ldr	r3, [sp, #20]
 8017066:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801706a:	a90e      	add	r1, sp, #56	; 0x38
 801706c:	9b06      	ldr	r3, [sp, #24]
 801706e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8017072:	a80c      	add	r0, sp, #48	; 0x30
 8017074:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8017078:	f7f9 fcc2 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801707c:	4640      	mov	r0, r8
 801707e:	f7f9 fc97 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017082:	a80e      	add	r0, sp, #56	; 0x38
 8017084:	f7f9 fc94 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017088:	4b38      	ldr	r3, [pc, #224]	; (801716c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801708a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801708e:	881b      	ldrh	r3, [r3, #0]
 8017090:	9307      	str	r3, [sp, #28]
 8017092:	682b      	ldr	r3, [r5, #0]
 8017094:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8017170 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017098:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801709a:	4628      	mov	r0, r5
 801709c:	4798      	blx	r3
 801709e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80170a2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80170a6:	4681      	mov	r9, r0
 80170a8:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80170ac:	f8db 0000 	ldr.w	r0, [fp]
 80170b0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80170b2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80170b6:	6803      	ldr	r3, [r0, #0]
 80170b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80170ba:	4798      	blx	r3
 80170bc:	4607      	mov	r7, r0
 80170be:	f8db 0000 	ldr.w	r0, [fp]
 80170c2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80170c6:	6803      	ldr	r3, [r0, #0]
 80170c8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80170cc:	9109      	str	r1, [sp, #36]	; 0x24
 80170ce:	9208      	str	r2, [sp, #32]
 80170d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80170d2:	4798      	blx	r3
 80170d4:	f010 0f01 	tst.w	r0, #1
 80170d8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80170dc:	d012      	beq.n	8017104 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80170de:	f8db 0000 	ldr.w	r0, [fp]
 80170e2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80170e6:	6803      	ldr	r3, [r0, #0]
 80170e8:	9200      	str	r2, [sp, #0]
 80170ea:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80170ec:	e898 0006 	ldmia.w	r8, {r1, r2}
 80170f0:	462b      	mov	r3, r5
 80170f2:	47b0      	blx	r6
 80170f4:	9b03      	ldr	r3, [sp, #12]
 80170f6:	8023      	strh	r3, [r4, #0]
 80170f8:	9b04      	ldr	r3, [sp, #16]
 80170fa:	8063      	strh	r3, [r4, #2]
 80170fc:	9b05      	ldr	r3, [sp, #20]
 80170fe:	80a3      	strh	r3, [r4, #4]
 8017100:	9b06      	ldr	r3, [sp, #24]
 8017102:	e78b      	b.n	801701c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017104:	fb09 f202 	mul.w	r2, r9, r2
 8017108:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801710c:	440f      	add	r7, r1
 801710e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017112:	b166      	cbz	r6, 801712e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017114:	9a07      	ldr	r2, [sp, #28]
 8017116:	4592      	cmp	sl, r2
 8017118:	d109      	bne.n	801712e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801711a:	f8db 0000 	ldr.w	r0, [fp]
 801711e:	6802      	ldr	r2, [r0, #0]
 8017120:	fb09 f303 	mul.w	r3, r9, r3
 8017124:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8017126:	4629      	mov	r1, r5
 8017128:	463a      	mov	r2, r7
 801712a:	47b0      	blx	r6
 801712c:	e7e2      	b.n	80170f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801712e:	fb0a f303 	mul.w	r3, sl, r3
 8017132:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8017170 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017136:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801713a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801713e:	4545      	cmp	r5, r8
 8017140:	d2d8      	bcs.n	80170f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017142:	f8db 0000 	ldr.w	r0, [fp]
 8017146:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801714a:	6802      	ldr	r2, [r0, #0]
 801714c:	4629      	mov	r1, r5
 801714e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017152:	005b      	lsls	r3, r3, #1
 8017154:	463a      	mov	r2, r7
 8017156:	47d0      	blx	sl
 8017158:	444f      	add	r7, r9
 801715a:	4435      	add	r5, r6
 801715c:	e7ef      	b.n	801713e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801715e:	bf00      	nop
 8017160:	200153d8 	.word	0x200153d8
 8017164:	200153da 	.word	0x200153da
 8017168:	200153dc 	.word	0x200153dc
 801716c:	200153de 	.word	0x200153de
 8017170:	200153e4 	.word	0x200153e4

08017174 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017174:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017176:	4606      	mov	r6, r0
 8017178:	b087      	sub	sp, #28
 801717a:	460c      	mov	r4, r1
 801717c:	4617      	mov	r7, r2
 801717e:	461d      	mov	r5, r3
 8017180:	b333      	cbz	r3, 80171d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017182:	4608      	mov	r0, r1
 8017184:	f7f3 fc75 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017188:	bb10      	cbnz	r0, 80171d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801718a:	6820      	ldr	r0, [r4, #0]
 801718c:	6861      	ldr	r1, [r4, #4]
 801718e:	4c1c      	ldr	r4, [pc, #112]	; (8017200 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017190:	ab04      	add	r3, sp, #16
 8017192:	c303      	stmia	r3!, {r0, r1}
 8017194:	a804      	add	r0, sp, #16
 8017196:	f7f9 fc0b 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801719a:	6820      	ldr	r0, [r4, #0]
 801719c:	6803      	ldr	r3, [r0, #0]
 801719e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80171a0:	4798      	blx	r3
 80171a2:	2dff      	cmp	r5, #255	; 0xff
 80171a4:	d016      	beq.n	80171d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80171a6:	f010 0f08 	tst.w	r0, #8
 80171aa:	6820      	ldr	r0, [r4, #0]
 80171ac:	d015      	beq.n	80171da <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80171ae:	2400      	movs	r4, #0
 80171b0:	6801      	ldr	r1, [r0, #0]
 80171b2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80171b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80171ba:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80171be:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80171c2:	9401      	str	r4, [sp, #4]
 80171c4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80171c8:	9400      	str	r4, [sp, #0]
 80171ca:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80171cc:	4639      	mov	r1, r7
 80171ce:	47a0      	blx	r4
 80171d0:	b007      	add	sp, #28
 80171d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80171d4:	f010 0f02 	tst.w	r0, #2
 80171d8:	e7e7      	b.n	80171aa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80171da:	6803      	ldr	r3, [r0, #0]
 80171dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80171de:	4798      	blx	r3
 80171e0:	4b08      	ldr	r3, [pc, #32]	; (8017204 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80171e2:	881a      	ldrh	r2, [r3, #0]
 80171e4:	6833      	ldr	r3, [r6, #0]
 80171e6:	e9cd 7500 	strd	r7, r5, [sp]
 80171ea:	4601      	mov	r1, r0
 80171ec:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80171ee:	4630      	mov	r0, r6
 80171f0:	ab04      	add	r3, sp, #16
 80171f2:	47a8      	blx	r5
 80171f4:	6820      	ldr	r0, [r4, #0]
 80171f6:	6803      	ldr	r3, [r0, #0]
 80171f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80171fa:	4798      	blx	r3
 80171fc:	e7e8      	b.n	80171d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80171fe:	bf00      	nop
 8017200:	200153e4 	.word	0x200153e4
 8017204:	200153de 	.word	0x200153de

08017208 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801720c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017210:	9e08      	ldr	r6, [sp, #32]
 8017212:	4688      	mov	r8, r1
 8017214:	4614      	mov	r4, r2
 8017216:	461d      	mov	r5, r3
 8017218:	2f00      	cmp	r7, #0
 801721a:	f000 80a9 	beq.w	8017370 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801721e:	4618      	mov	r0, r3
 8017220:	f7f3 fc27 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017224:	2800      	cmp	r0, #0
 8017226:	f040 80a3 	bne.w	8017370 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801722a:	f9b5 1000 	ldrsh.w	r1, [r5]
 801722e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017232:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017236:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801723a:	fb04 1303 	mla	r3, r4, r3, r1
 801723e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017242:	4365      	muls	r5, r4
 8017244:	2fff      	cmp	r7, #255	; 0xff
 8017246:	eba4 0200 	sub.w	r2, r4, r0
 801724a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801724e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017252:	d04a      	beq.n	80172ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017254:	b2bc      	uxth	r4, r7
 8017256:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801725a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801725e:	fa5f f788 	uxtb.w	r7, r8
 8017262:	b2f3      	uxtb	r3, r6
 8017264:	0040      	lsls	r0, r0, #1
 8017266:	fb0e fe04 	mul.w	lr, lr, r4
 801726a:	4367      	muls	r7, r4
 801726c:	4363      	muls	r3, r4
 801726e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017272:	fa1f fc8c 	uxth.w	ip, ip
 8017276:	42a9      	cmp	r1, r5
 8017278:	d27a      	bcs.n	8017370 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801727a:	eb01 0900 	add.w	r9, r1, r0
 801727e:	4549      	cmp	r1, r9
 8017280:	d231      	bcs.n	80172e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017282:	880a      	ldrh	r2, [r1, #0]
 8017284:	1214      	asrs	r4, r2, #8
 8017286:	10d6      	asrs	r6, r2, #3
 8017288:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801728c:	00d2      	lsls	r2, r2, #3
 801728e:	b2d2      	uxtb	r2, r2
 8017290:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017294:	fb14 f40c 	smulbb	r4, r4, ip
 8017298:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801729c:	4474      	add	r4, lr
 801729e:	fb12 f20c 	smulbb	r2, r2, ip
 80172a2:	b2a4      	uxth	r4, r4
 80172a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80172a8:	441a      	add	r2, r3
 80172aa:	b292      	uxth	r2, r2
 80172ac:	f104 0a01 	add.w	sl, r4, #1
 80172b0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80172b4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80172b8:	fb16 f60c 	smulbb	r6, r6, ip
 80172bc:	f102 0a01 	add.w	sl, r2, #1
 80172c0:	443e      	add	r6, r7
 80172c2:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80172c6:	b2b6      	uxth	r6, r6
 80172c8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80172cc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80172d0:	4322      	orrs	r2, r4
 80172d2:	1c74      	adds	r4, r6, #1
 80172d4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80172d8:	0976      	lsrs	r6, r6, #5
 80172da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80172de:	4332      	orrs	r2, r6
 80172e0:	f821 2b02 	strh.w	r2, [r1], #2
 80172e4:	e7cb      	b.n	801727e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80172e6:	4441      	add	r1, r8
 80172e8:	e7c5      	b.n	8017276 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80172ea:	4f22      	ldr	r7, [pc, #136]	; (8017374 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80172ec:	0973      	lsrs	r3, r6, #5
 80172ee:	ea08 0707 	and.w	r7, r8, r7
 80172f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80172f6:	433b      	orrs	r3, r7
 80172f8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80172fc:	4333      	orrs	r3, r6
 80172fe:	07e7      	lsls	r7, r4, #31
 8017300:	b29b      	uxth	r3, r3
 8017302:	d50b      	bpl.n	801731c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017304:	0040      	lsls	r0, r0, #1
 8017306:	0052      	lsls	r2, r2, #1
 8017308:	42a9      	cmp	r1, r5
 801730a:	d231      	bcs.n	8017370 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801730c:	180c      	adds	r4, r1, r0
 801730e:	42a1      	cmp	r1, r4
 8017310:	d202      	bcs.n	8017318 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017312:	f821 3b02 	strh.w	r3, [r1], #2
 8017316:	e7fa      	b.n	801730e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017318:	4411      	add	r1, r2
 801731a:	e7f5      	b.n	8017308 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801731c:	078e      	lsls	r6, r1, #30
 801731e:	d008      	beq.n	8017332 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017320:	0066      	lsls	r6, r4, #1
 8017322:	460a      	mov	r2, r1
 8017324:	42aa      	cmp	r2, r5
 8017326:	d202      	bcs.n	801732e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017328:	8013      	strh	r3, [r2, #0]
 801732a:	4432      	add	r2, r6
 801732c:	e7fa      	b.n	8017324 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801732e:	3102      	adds	r1, #2
 8017330:	3801      	subs	r0, #1
 8017332:	07c2      	lsls	r2, r0, #31
 8017334:	d50b      	bpl.n	801734e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017336:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801733a:	3a01      	subs	r2, #1
 801733c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017340:	0066      	lsls	r6, r4, #1
 8017342:	42aa      	cmp	r2, r5
 8017344:	d202      	bcs.n	801734c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017346:	8013      	strh	r3, [r2, #0]
 8017348:	4432      	add	r2, r6
 801734a:	e7fa      	b.n	8017342 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801734c:	3801      	subs	r0, #1
 801734e:	b178      	cbz	r0, 8017370 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017350:	1040      	asrs	r0, r0, #1
 8017352:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017356:	0080      	lsls	r0, r0, #2
 8017358:	0064      	lsls	r4, r4, #1
 801735a:	42a9      	cmp	r1, r5
 801735c:	d208      	bcs.n	8017370 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801735e:	180e      	adds	r6, r1, r0
 8017360:	460a      	mov	r2, r1
 8017362:	42b2      	cmp	r2, r6
 8017364:	d202      	bcs.n	801736c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017366:	f842 3b04 	str.w	r3, [r2], #4
 801736a:	e7fa      	b.n	8017362 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801736c:	4421      	add	r1, r4
 801736e:	e7f4      	b.n	801735a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017370:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017374:	00fff800 	.word	0x00fff800

08017378 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017378:	2200      	movs	r2, #0
 801737a:	4910      	ldr	r1, [pc, #64]	; (80173bc <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801737c:	6042      	str	r2, [r0, #4]
 801737e:	6001      	str	r1, [r0, #0]
 8017380:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8017384:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8017388:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801738c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017390:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017394:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8017398:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801739c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80173a0:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80173a4:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80173a8:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80173ac:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80173b0:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80173b4:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80173b8:	4770      	bx	lr
 80173ba:	bf00      	nop
 80173bc:	08024248 	.word	0x08024248

080173c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80173c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173c4:	460d      	mov	r5, r1
 80173c6:	b08d      	sub	sp, #52	; 0x34
 80173c8:	4604      	mov	r4, r0
 80173ca:	6808      	ldr	r0, [r1, #0]
 80173cc:	6849      	ldr	r1, [r1, #4]
 80173ce:	4699      	mov	r9, r3
 80173d0:	ab08      	add	r3, sp, #32
 80173d2:	c303      	stmia	r3!, {r0, r1}
 80173d4:	6810      	ldr	r0, [r2, #0]
 80173d6:	6851      	ldr	r1, [r2, #4]
 80173d8:	ab0a      	add	r3, sp, #40	; 0x28
 80173da:	c303      	stmia	r3!, {r0, r1}
 80173dc:	a808      	add	r0, sp, #32
 80173de:	f7f9 fae7 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173e2:	4629      	mov	r1, r5
 80173e4:	a80a      	add	r0, sp, #40	; 0x28
 80173e6:	f7f9 fb0b 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80173ea:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80173ee:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80173f2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80173f6:	4d63      	ldr	r5, [pc, #396]	; (8017584 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80173f8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80173fc:	6828      	ldr	r0, [r5, #0]
 80173fe:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017402:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017406:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801740a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801740e:	440a      	add	r2, r1
 8017410:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017414:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017418:	4413      	add	r3, r2
 801741a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801741e:	6803      	ldr	r3, [r0, #0]
 8017420:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017422:	4798      	blx	r3
 8017424:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017428:	d119      	bne.n	801745e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801742a:	f010 0f20 	tst.w	r0, #32
 801742e:	6828      	ldr	r0, [r5, #0]
 8017430:	d018      	beq.n	8017464 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017432:	2500      	movs	r5, #0
 8017434:	6801      	ldr	r1, [r0, #0]
 8017436:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801743a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801743e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017442:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017446:	9502      	str	r5, [sp, #8]
 8017448:	b2b6      	uxth	r6, r6
 801744a:	fa1f f588 	uxth.w	r5, r8
 801744e:	9601      	str	r6, [sp, #4]
 8017450:	9500      	str	r5, [sp, #0]
 8017452:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8017454:	4621      	mov	r1, r4
 8017456:	47a8      	blx	r5
 8017458:	b00d      	add	sp, #52	; 0x34
 801745a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801745e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8017462:	e7e4      	b.n	801742e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017464:	6803      	ldr	r3, [r0, #0]
 8017466:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017468:	4798      	blx	r3
 801746a:	4947      	ldr	r1, [pc, #284]	; (8017588 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801746c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017470:	880b      	ldrh	r3, [r1, #0]
 8017472:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8017476:	fb03 5202 	mla	r2, r3, r2, r5
 801747a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801747e:	4373      	muls	r3, r6
 8017480:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017484:	9307      	str	r3, [sp, #28]
 8017486:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801748a:	9306      	str	r3, [sp, #24]
 801748c:	468a      	mov	sl, r1
 801748e:	9b07      	ldr	r3, [sp, #28]
 8017490:	4298      	cmp	r0, r3
 8017492:	d270      	bcs.n	8017576 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017494:	9b06      	ldr	r3, [sp, #24]
 8017496:	4621      	mov	r1, r4
 8017498:	eb00 0b03 	add.w	fp, r0, r3
 801749c:	4558      	cmp	r0, fp
 801749e:	d25d      	bcs.n	801755c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80174a0:	f851 4b04 	ldr.w	r4, [r1], #4
 80174a4:	0e23      	lsrs	r3, r4, #24
 80174a6:	d014      	beq.n	80174d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80174a8:	2bff      	cmp	r3, #255	; 0xff
 80174aa:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80174ae:	d112      	bne.n	80174d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80174b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80174b4:	d10f      	bne.n	80174d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80174b6:	0963      	lsrs	r3, r4, #5
 80174b8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80174bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80174c0:	f02c 0c07 	bic.w	ip, ip, #7
 80174c4:	ea43 0c0c 	orr.w	ip, r3, ip
 80174c8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80174cc:	ea4c 0404 	orr.w	r4, ip, r4
 80174d0:	8004      	strh	r4, [r0, #0]
 80174d2:	3002      	adds	r0, #2
 80174d4:	e7e2      	b.n	801749c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80174d6:	fb09 f303 	mul.w	r3, r9, r3
 80174da:	8807      	ldrh	r7, [r0, #0]
 80174dc:	1c5a      	adds	r2, r3, #1
 80174de:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80174e2:	1212      	asrs	r2, r2, #8
 80174e4:	123e      	asrs	r6, r7, #8
 80174e6:	b293      	uxth	r3, r2
 80174e8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80174ec:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80174f0:	43d2      	mvns	r2, r2
 80174f2:	b2d2      	uxtb	r2, r2
 80174f4:	10fd      	asrs	r5, r7, #3
 80174f6:	fb1e fe03 	smulbb	lr, lr, r3
 80174fa:	00ff      	lsls	r7, r7, #3
 80174fc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017500:	fb06 e602 	mla	r6, r6, r2, lr
 8017504:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017508:	b2ff      	uxtb	r7, r7
 801750a:	fa5f fc8c 	uxtb.w	ip, ip
 801750e:	b2e4      	uxtb	r4, r4
 8017510:	b2b6      	uxth	r6, r6
 8017512:	fb1c fc03 	smulbb	ip, ip, r3
 8017516:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801751a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801751e:	fb14 f403 	smulbb	r4, r4, r3
 8017522:	fb05 c502 	mla	r5, r5, r2, ip
 8017526:	f106 0e01 	add.w	lr, r6, #1
 801752a:	fb07 4702 	mla	r7, r7, r2, r4
 801752e:	b2ad      	uxth	r5, r5
 8017530:	b2bf      	uxth	r7, r7
 8017532:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017536:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801753a:	f105 0c01 	add.w	ip, r5, #1
 801753e:	1c7e      	adds	r6, r7, #1
 8017540:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017544:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017548:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801754c:	096d      	lsrs	r5, r5, #5
 801754e:	ea46 060e 	orr.w	r6, r6, lr
 8017552:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017556:	432e      	orrs	r6, r5
 8017558:	8006      	strh	r6, [r0, #0]
 801755a:	e7ba      	b.n	80174d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801755c:	f8ba 3000 	ldrh.w	r3, [sl]
 8017560:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8017564:	eba3 0308 	sub.w	r3, r3, r8
 8017568:	eba4 0408 	sub.w	r4, r4, r8
 801756c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017570:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017574:	e78b      	b.n	801748e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017576:	4b03      	ldr	r3, [pc, #12]	; (8017584 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017578:	6818      	ldr	r0, [r3, #0]
 801757a:	6803      	ldr	r3, [r0, #0]
 801757c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801757e:	4798      	blx	r3
 8017580:	e76a      	b.n	8017458 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017582:	bf00      	nop
 8017584:	200153e4 	.word	0x200153e4
 8017588:	200153de 	.word	0x200153de

0801758c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801758c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017590:	460c      	mov	r4, r1
 8017592:	b085      	sub	sp, #20
 8017594:	6810      	ldr	r0, [r2, #0]
 8017596:	6851      	ldr	r1, [r2, #4]
 8017598:	466d      	mov	r5, sp
 801759a:	c503      	stmia	r5!, {r0, r1}
 801759c:	6818      	ldr	r0, [r3, #0]
 801759e:	6859      	ldr	r1, [r3, #4]
 80175a0:	4616      	mov	r6, r2
 80175a2:	c503      	stmia	r5!, {r0, r1}
 80175a4:	4668      	mov	r0, sp
 80175a6:	f7f9 fa03 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80175aa:	4631      	mov	r1, r6
 80175ac:	a802      	add	r0, sp, #8
 80175ae:	f7f9 fa27 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80175b2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80175b6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80175ba:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80175be:	4d28      	ldr	r5, [pc, #160]	; (8017660 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80175c0:	4e28      	ldr	r6, [pc, #160]	; (8017664 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80175c2:	6828      	ldr	r0, [r5, #0]
 80175c4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80175c8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80175cc:	fb11 2103 	smlabb	r1, r1, r3, r2
 80175d0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80175d4:	f8bd 1000 	ldrh.w	r1, [sp]
 80175d8:	440a      	add	r2, r1
 80175da:	f8ad 2008 	strh.w	r2, [sp, #8]
 80175de:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80175e2:	4413      	add	r3, r2
 80175e4:	f8ad 300a 	strh.w	r3, [sp, #10]
 80175e8:	6803      	ldr	r3, [r0, #0]
 80175ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175ec:	4798      	blx	r3
 80175ee:	8833      	ldrh	r3, [r6, #0]
 80175f0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80175f4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80175f8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8017668 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80175fc:	fb03 1202 	mla	r2, r3, r2, r1
 8017600:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017604:	fb08 f303 	mul.w	r3, r8, r3
 8017608:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801760c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017610:	4298      	cmp	r0, r3
 8017612:	d21d      	bcs.n	8017650 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017614:	eb00 080c 	add.w	r8, r0, ip
 8017618:	4540      	cmp	r0, r8
 801761a:	d20f      	bcs.n	801763c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801761c:	f854 1b04 	ldr.w	r1, [r4], #4
 8017620:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017624:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017628:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801762c:	ea42 0209 	orr.w	r2, r2, r9
 8017630:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017634:	430a      	orrs	r2, r1
 8017636:	f820 2b02 	strh.w	r2, [r0], #2
 801763a:	e7ed      	b.n	8017618 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801763c:	8832      	ldrh	r2, [r6, #0]
 801763e:	1bd2      	subs	r2, r2, r7
 8017640:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017644:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017648:	1bd2      	subs	r2, r2, r7
 801764a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801764e:	e7df      	b.n	8017610 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017650:	6828      	ldr	r0, [r5, #0]
 8017652:	6803      	ldr	r3, [r0, #0]
 8017654:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017656:	4798      	blx	r3
 8017658:	b005      	add	sp, #20
 801765a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801765e:	bf00      	nop
 8017660:	200153e4 	.word	0x200153e4
 8017664:	200153de 	.word	0x200153de
 8017668:	fffff800 	.word	0xfffff800

0801766c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801766c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017670:	460e      	mov	r6, r1
 8017672:	b08e      	sub	sp, #56	; 0x38
 8017674:	4604      	mov	r4, r0
 8017676:	6808      	ldr	r0, [r1, #0]
 8017678:	6849      	ldr	r1, [r1, #4]
 801767a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017854 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801767e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017858 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017682:	461d      	mov	r5, r3
 8017684:	ab0a      	add	r3, sp, #40	; 0x28
 8017686:	c303      	stmia	r3!, {r0, r1}
 8017688:	6810      	ldr	r0, [r2, #0]
 801768a:	6851      	ldr	r1, [r2, #4]
 801768c:	ab0c      	add	r3, sp, #48	; 0x30
 801768e:	c303      	stmia	r3!, {r0, r1}
 8017690:	a80a      	add	r0, sp, #40	; 0x28
 8017692:	f7f9 f98d 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017696:	4631      	mov	r1, r6
 8017698:	a80c      	add	r0, sp, #48	; 0x30
 801769a:	f7f9 f9b1 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801769e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80176a2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80176a6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80176aa:	f8d8 0000 	ldr.w	r0, [r8]
 80176ae:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80176b2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80176b6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80176ba:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80176be:	440c      	add	r4, r1
 80176c0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80176c4:	440a      	add	r2, r1
 80176c6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80176ca:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80176ce:	4413      	add	r3, r2
 80176d0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80176d4:	6803      	ldr	r3, [r0, #0]
 80176d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80176d8:	4798      	blx	r3
 80176da:	2dff      	cmp	r5, #255	; 0xff
 80176dc:	d124      	bne.n	8017728 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80176de:	f010 0f01 	tst.w	r0, #1
 80176e2:	f8d8 0000 	ldr.w	r0, [r8]
 80176e6:	d022      	beq.n	801772e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80176e8:	2100      	movs	r1, #0
 80176ea:	f8d0 c000 	ldr.w	ip, [r0]
 80176ee:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80176f2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80176f6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80176fa:	f04f 0e01 	mov.w	lr, #1
 80176fe:	f8cd e018 	str.w	lr, [sp, #24]
 8017702:	f8b9 e000 	ldrh.w	lr, [r9]
 8017706:	9503      	str	r5, [sp, #12]
 8017708:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801770c:	b2b6      	uxth	r6, r6
 801770e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017712:	9102      	str	r1, [sp, #8]
 8017714:	b2bf      	uxth	r7, r7
 8017716:	9601      	str	r6, [sp, #4]
 8017718:	9700      	str	r7, [sp, #0]
 801771a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801771e:	4621      	mov	r1, r4
 8017720:	47a8      	blx	r5
 8017722:	b00e      	add	sp, #56	; 0x38
 8017724:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017728:	f010 0f04 	tst.w	r0, #4
 801772c:	e7d9      	b.n	80176e2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801772e:	6803      	ldr	r3, [r0, #0]
 8017730:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017732:	4798      	blx	r3
 8017734:	f8b9 3000 	ldrh.w	r3, [r9]
 8017738:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801773c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017740:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017744:	fb03 1202 	mla	r2, r3, r2, r1
 8017748:	ebac 0c07 	sub.w	ip, ip, r7
 801774c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017750:	435e      	muls	r6, r3
 8017752:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017756:	2dff      	cmp	r5, #255	; 0xff
 8017758:	eba3 0707 	sub.w	r7, r3, r7
 801775c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017760:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017764:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017768:	d049      	beq.n	80177fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801776a:	43eb      	mvns	r3, r5
 801776c:	fa1f f985 	uxth.w	r9, r5
 8017770:	b2db      	uxtb	r3, r3
 8017772:	42b0      	cmp	r0, r6
 8017774:	d266      	bcs.n	8017844 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017776:	eb00 0a0e 	add.w	sl, r0, lr
 801777a:	4550      	cmp	r0, sl
 801777c:	4621      	mov	r1, r4
 801777e:	f104 0403 	add.w	r4, r4, #3
 8017782:	d25b      	bcs.n	801783c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017784:	8802      	ldrh	r2, [r0, #0]
 8017786:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801778a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801778e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017792:	fb11 f109 	smulbb	r1, r1, r9
 8017796:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801779a:	10d5      	asrs	r5, r2, #3
 801779c:	fb08 1803 	mla	r8, r8, r3, r1
 80177a0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80177a4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80177a8:	fb11 f109 	smulbb	r1, r1, r9
 80177ac:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80177b0:	fb05 1503 	mla	r5, r5, r3, r1
 80177b4:	00d2      	lsls	r2, r2, #3
 80177b6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80177ba:	b2d2      	uxtb	r2, r2
 80177bc:	fb11 f109 	smulbb	r1, r1, r9
 80177c0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80177c4:	fa1f f888 	uxth.w	r8, r8
 80177c8:	fb02 1203 	mla	r2, r2, r3, r1
 80177cc:	b292      	uxth	r2, r2
 80177ce:	f108 0101 	add.w	r1, r8, #1
 80177d2:	b2ad      	uxth	r5, r5
 80177d4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80177d8:	1c51      	adds	r1, r2, #1
 80177da:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80177de:	1c69      	adds	r1, r5, #1
 80177e0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80177e4:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80177e8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80177ec:	096d      	lsrs	r5, r5, #5
 80177ee:	ea42 0208 	orr.w	r2, r2, r8
 80177f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80177f6:	432a      	orrs	r2, r5
 80177f8:	f820 2b02 	strh.w	r2, [r0], #2
 80177fc:	e7bd      	b.n	801777a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80177fe:	4a14      	ldr	r2, [pc, #80]	; (8017850 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017800:	42b0      	cmp	r0, r6
 8017802:	d21f      	bcs.n	8017844 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017804:	eb00 050e 	add.w	r5, r0, lr
 8017808:	42a8      	cmp	r0, r5
 801780a:	4621      	mov	r1, r4
 801780c:	f104 0403 	add.w	r4, r4, #3
 8017810:	d210      	bcs.n	8017834 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017812:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017816:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801781a:	00db      	lsls	r3, r3, #3
 801781c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017820:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017824:	430b      	orrs	r3, r1
 8017826:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801782a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801782e:	f820 3b02 	strh.w	r3, [r0], #2
 8017832:	e7e9      	b.n	8017808 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017834:	4438      	add	r0, r7
 8017836:	eb01 040c 	add.w	r4, r1, ip
 801783a:	e7e1      	b.n	8017800 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801783c:	4438      	add	r0, r7
 801783e:	eb01 040c 	add.w	r4, r1, ip
 8017842:	e796      	b.n	8017772 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017844:	4b03      	ldr	r3, [pc, #12]	; (8017854 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017846:	6818      	ldr	r0, [r3, #0]
 8017848:	6803      	ldr	r3, [r0, #0]
 801784a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801784c:	4798      	blx	r3
 801784e:	e768      	b.n	8017722 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017850:	fffff800 	.word	0xfffff800
 8017854:	200153e4 	.word	0x200153e4
 8017858:	200153de 	.word	0x200153de

0801785c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801785c:	b4f0      	push	{r4, r5, r6, r7}
 801785e:	4616      	mov	r6, r2
 8017860:	2e01      	cmp	r6, #1
 8017862:	461c      	mov	r4, r3
 8017864:	460d      	mov	r5, r1
 8017866:	9a04      	ldr	r2, [sp, #16]
 8017868:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801786c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017870:	d012      	beq.n	8017898 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017872:	d303      	bcc.n	801787c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017874:	2e02      	cmp	r6, #2
 8017876:	d00a      	beq.n	801788e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017878:	bcf0      	pop	{r4, r5, r6, r7}
 801787a:	4770      	bx	lr
 801787c:	6805      	ldr	r5, [r0, #0]
 801787e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017882:	68ed      	ldr	r5, [r5, #12]
 8017884:	4613      	mov	r3, r2
 8017886:	46ac      	mov	ip, r5
 8017888:	4622      	mov	r2, r4
 801788a:	bcf0      	pop	{r4, r5, r6, r7}
 801788c:	4760      	bx	ip
 801788e:	4621      	mov	r1, r4
 8017890:	4628      	mov	r0, r5
 8017892:	bcf0      	pop	{r4, r5, r6, r7}
 8017894:	f7ff bd94 	b.w	80173c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017898:	4621      	mov	r1, r4
 801789a:	4628      	mov	r0, r5
 801789c:	bcf0      	pop	{r4, r5, r6, r7}
 801789e:	f7ff bee5 	b.w	801766c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080178a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80178a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80178a8:	4681      	mov	r9, r0
 80178aa:	b093      	sub	sp, #76	; 0x4c
 80178ac:	6810      	ldr	r0, [r2, #0]
 80178ae:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80178b2:	4f6d      	ldr	r7, [pc, #436]	; (8017a68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80178b4:	4688      	mov	r8, r1
 80178b6:	6851      	ldr	r1, [r2, #4]
 80178b8:	ac0e      	add	r4, sp, #56	; 0x38
 80178ba:	c403      	stmia	r4!, {r0, r1}
 80178bc:	6818      	ldr	r0, [r3, #0]
 80178be:	6859      	ldr	r1, [r3, #4]
 80178c0:	ac10      	add	r4, sp, #64	; 0x40
 80178c2:	4616      	mov	r6, r2
 80178c4:	c403      	stmia	r4!, {r0, r1}
 80178c6:	a80e      	add	r0, sp, #56	; 0x38
 80178c8:	f7f9 f872 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80178cc:	4631      	mov	r1, r6
 80178ce:	a810      	add	r0, sp, #64	; 0x40
 80178d0:	f7f9 f896 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80178d4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80178d8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80178dc:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80178e0:	4e62      	ldr	r6, [pc, #392]	; (8017a6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80178e2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80178e6:	6830      	ldr	r0, [r6, #0]
 80178e8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80178ec:	fb11 2103 	smlabb	r1, r1, r3, r2
 80178f0:	4489      	add	r9, r1
 80178f2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80178f6:	440a      	add	r2, r1
 80178f8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80178fc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017900:	4413      	add	r3, r2
 8017902:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017906:	6803      	ldr	r3, [r0, #0]
 8017908:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801790a:	4798      	blx	r3
 801790c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017910:	6830      	ldr	r0, [r6, #0]
 8017912:	d01d      	beq.n	8017950 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017914:	2200      	movs	r2, #0
 8017916:	6801      	ldr	r1, [r0, #0]
 8017918:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801791c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017920:	220b      	movs	r2, #11
 8017922:	9207      	str	r2, [sp, #28]
 8017924:	883a      	ldrh	r2, [r7, #0]
 8017926:	9206      	str	r2, [sp, #24]
 8017928:	2201      	movs	r2, #1
 801792a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801792e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017932:	9203      	str	r2, [sp, #12]
 8017934:	b2a4      	uxth	r4, r4
 8017936:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801793a:	9200      	str	r2, [sp, #0]
 801793c:	b2ad      	uxth	r5, r5
 801793e:	9502      	str	r5, [sp, #8]
 8017940:	9401      	str	r4, [sp, #4]
 8017942:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017944:	4642      	mov	r2, r8
 8017946:	4649      	mov	r1, r9
 8017948:	47a0      	blx	r4
 801794a:	b013      	add	sp, #76	; 0x4c
 801794c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017950:	6803      	ldr	r3, [r0, #0]
 8017952:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017954:	4798      	blx	r3
 8017956:	883b      	ldrh	r3, [r7, #0]
 8017958:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801795c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017960:	fb03 1202 	mla	r2, r3, r2, r1
 8017964:	435d      	muls	r5, r3
 8017966:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801796a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801796e:	920c      	str	r2, [sp, #48]	; 0x30
 8017970:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017974:	1b12      	subs	r2, r2, r4
 8017976:	920d      	str	r2, [sp, #52]	; 0x34
 8017978:	0062      	lsls	r2, r4, #1
 801797a:	1b1c      	subs	r4, r3, r4
 801797c:	0063      	lsls	r3, r4, #1
 801797e:	920a      	str	r2, [sp, #40]	; 0x28
 8017980:	930b      	str	r3, [sp, #44]	; 0x2c
 8017982:	f04f 0e04 	mov.w	lr, #4
 8017986:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017988:	4298      	cmp	r0, r3
 801798a:	d266      	bcs.n	8017a5a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801798c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801798e:	eb00 0b03 	add.w	fp, r0, r3
 8017992:	4558      	cmp	r0, fp
 8017994:	d25c      	bcs.n	8017a50 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017996:	f819 3b01 	ldrb.w	r3, [r9], #1
 801799a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801799e:	f858 2003 	ldr.w	r2, [r8, r3]
 80179a2:	0e11      	lsrs	r1, r2, #24
 80179a4:	d012      	beq.n	80179cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80179a6:	29ff      	cmp	r1, #255	; 0xff
 80179a8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80179ac:	d110      	bne.n	80179d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80179ae:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80179b2:	d10d      	bne.n	80179d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80179b4:	0953      	lsrs	r3, r2, #5
 80179b6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80179ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80179be:	f027 0707 	bic.w	r7, r7, #7
 80179c2:	431f      	orrs	r7, r3
 80179c4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80179c8:	433a      	orrs	r2, r7
 80179ca:	8002      	strh	r2, [r0, #0]
 80179cc:	3002      	adds	r0, #2
 80179ce:	e7e0      	b.n	8017992 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80179d0:	fb0a f101 	mul.w	r1, sl, r1
 80179d4:	8806      	ldrh	r6, [r0, #0]
 80179d6:	1c4b      	adds	r3, r1, #1
 80179d8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80179dc:	1235      	asrs	r5, r6, #8
 80179de:	10f4      	asrs	r4, r6, #3
 80179e0:	121b      	asrs	r3, r3, #8
 80179e2:	00f6      	lsls	r6, r6, #3
 80179e4:	b299      	uxth	r1, r3
 80179e6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80179ea:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80179ee:	b2f6      	uxtb	r6, r6
 80179f0:	43db      	mvns	r3, r3
 80179f2:	b2d2      	uxtb	r2, r2
 80179f4:	b2db      	uxtb	r3, r3
 80179f6:	fb1c fc01 	smulbb	ip, ip, r1
 80179fa:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80179fe:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017a02:	fb12 f201 	smulbb	r2, r2, r1
 8017a06:	fb05 c503 	mla	r5, r5, r3, ip
 8017a0a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017a0e:	b2ff      	uxtb	r7, r7
 8017a10:	fb06 2203 	mla	r2, r6, r3, r2
 8017a14:	b2ad      	uxth	r5, r5
 8017a16:	fb17 f701 	smulbb	r7, r7, r1
 8017a1a:	b292      	uxth	r2, r2
 8017a1c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017a20:	fb04 7403 	mla	r4, r4, r3, r7
 8017a24:	f105 0c01 	add.w	ip, r5, #1
 8017a28:	1c57      	adds	r7, r2, #1
 8017a2a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017a2e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017a32:	b2a4      	uxth	r4, r4
 8017a34:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017a38:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017a3c:	433d      	orrs	r5, r7
 8017a3e:	1c67      	adds	r7, r4, #1
 8017a40:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017a44:	0964      	lsrs	r4, r4, #5
 8017a46:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017a4a:	4325      	orrs	r5, r4
 8017a4c:	8005      	strh	r5, [r0, #0]
 8017a4e:	e7bd      	b.n	80179cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017a50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017a52:	4418      	add	r0, r3
 8017a54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017a56:	4499      	add	r9, r3
 8017a58:	e795      	b.n	8017986 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017a5a:	4b04      	ldr	r3, [pc, #16]	; (8017a6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017a5c:	6818      	ldr	r0, [r3, #0]
 8017a5e:	6803      	ldr	r3, [r0, #0]
 8017a60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017a62:	4798      	blx	r3
 8017a64:	e771      	b.n	801794a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017a66:	bf00      	nop
 8017a68:	200153de 	.word	0x200153de
 8017a6c:	200153e4 	.word	0x200153e4

08017a70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a74:	b087      	sub	sp, #28
 8017a76:	4680      	mov	r8, r0
 8017a78:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017a7c:	460d      	mov	r5, r1
 8017a7e:	4614      	mov	r4, r2
 8017a80:	2e00      	cmp	r6, #0
 8017a82:	f000 80b9 	beq.w	8017bf8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017a86:	6810      	ldr	r0, [r2, #0]
 8017a88:	6851      	ldr	r1, [r2, #4]
 8017a8a:	af02      	add	r7, sp, #8
 8017a8c:	c703      	stmia	r7!, {r0, r1}
 8017a8e:	6818      	ldr	r0, [r3, #0]
 8017a90:	6859      	ldr	r1, [r3, #4]
 8017a92:	af04      	add	r7, sp, #16
 8017a94:	c703      	stmia	r7!, {r0, r1}
 8017a96:	a802      	add	r0, sp, #8
 8017a98:	f7f8 ff8a 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a9c:	4621      	mov	r1, r4
 8017a9e:	a804      	add	r0, sp, #16
 8017aa0:	f7f8 ffae 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017aa4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017aa8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017aac:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017ab0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017ab4:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017ab8:	eb08 0401 	add.w	r4, r8, r1
 8017abc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017ac0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017ac4:	440a      	add	r2, r1
 8017ac6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017aca:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017ace:	4413      	add	r3, r2
 8017ad0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017ad4:	4b4a      	ldr	r3, [pc, #296]	; (8017c00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017ad6:	6818      	ldr	r0, [r3, #0]
 8017ad8:	6803      	ldr	r3, [r0, #0]
 8017ada:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017adc:	4798      	blx	r3
 8017ade:	4b49      	ldr	r3, [pc, #292]	; (8017c04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017ae0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017ae4:	881a      	ldrh	r2, [r3, #0]
 8017ae6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017aea:	2eff      	cmp	r6, #255	; 0xff
 8017aec:	fb02 c101 	mla	r1, r2, r1, ip
 8017af0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017af4:	fb02 f207 	mul.w	r2, r2, r7
 8017af8:	f105 0104 	add.w	r1, r5, #4
 8017afc:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017b00:	461d      	mov	r5, r3
 8017b02:	d05a      	beq.n	8017bba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017b04:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017b08:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017b0c:	b2b6      	uxth	r6, r6
 8017b0e:	fa1f fe8e 	uxth.w	lr, lr
 8017b12:	9301      	str	r3, [sp, #4]
 8017b14:	4282      	cmp	r2, r0
 8017b16:	d96a      	bls.n	8017bee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017b18:	eb00 0b0a 	add.w	fp, r0, sl
 8017b1c:	4583      	cmp	fp, r0
 8017b1e:	d940      	bls.n	8017ba2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017b20:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017b24:	8805      	ldrh	r5, [r0, #0]
 8017b26:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017b2a:	122f      	asrs	r7, r5, #8
 8017b2c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017b30:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017b34:	fb17 f70e 	smulbb	r7, r7, lr
 8017b38:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017b3c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017b40:	00ed      	lsls	r5, r5, #3
 8017b42:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017b46:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017b4a:	10df      	asrs	r7, r3, #3
 8017b4c:	b2ed      	uxtb	r5, r5
 8017b4e:	00db      	lsls	r3, r3, #3
 8017b50:	fa1f fc8c 	uxth.w	ip, ip
 8017b54:	fb19 f90e 	smulbb	r9, r9, lr
 8017b58:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017b5c:	b2db      	uxtb	r3, r3
 8017b5e:	fb15 f50e 	smulbb	r5, r5, lr
 8017b62:	fb07 9706 	mla	r7, r7, r6, r9
 8017b66:	fb03 5306 	mla	r3, r3, r6, r5
 8017b6a:	f10c 0901 	add.w	r9, ip, #1
 8017b6e:	b29b      	uxth	r3, r3
 8017b70:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017b74:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017b78:	f103 0c01 	add.w	ip, r3, #1
 8017b7c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017b80:	b2bf      	uxth	r7, r7
 8017b82:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017b86:	ea4c 0c09 	orr.w	ip, ip, r9
 8017b8a:	f107 0901 	add.w	r9, r7, #1
 8017b8e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017b92:	097f      	lsrs	r7, r7, #5
 8017b94:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017b98:	ea4c 0c07 	orr.w	ip, ip, r7
 8017b9c:	f820 cb02 	strh.w	ip, [r0], #2
 8017ba0:	e7bc      	b.n	8017b1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017ba2:	9b01      	ldr	r3, [sp, #4]
 8017ba4:	881b      	ldrh	r3, [r3, #0]
 8017ba6:	eba3 0308 	sub.w	r3, r3, r8
 8017baa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017bae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017bb2:	eba3 0308 	sub.w	r3, r3, r8
 8017bb6:	441c      	add	r4, r3
 8017bb8:	e7ac      	b.n	8017b14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017bba:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017bbe:	4282      	cmp	r2, r0
 8017bc0:	d915      	bls.n	8017bee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017bc2:	eb00 060a 	add.w	r6, r0, sl
 8017bc6:	4286      	cmp	r6, r0
 8017bc8:	d906      	bls.n	8017bd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017bca:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017bce:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017bd2:	f820 3b02 	strh.w	r3, [r0], #2
 8017bd6:	e7f6      	b.n	8017bc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017bd8:	882b      	ldrh	r3, [r5, #0]
 8017bda:	eba3 0308 	sub.w	r3, r3, r8
 8017bde:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017be2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017be6:	eba3 0308 	sub.w	r3, r3, r8
 8017bea:	441c      	add	r4, r3
 8017bec:	e7e7      	b.n	8017bbe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017bee:	4b04      	ldr	r3, [pc, #16]	; (8017c00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017bf0:	6818      	ldr	r0, [r3, #0]
 8017bf2:	6803      	ldr	r3, [r0, #0]
 8017bf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017bf6:	4798      	blx	r3
 8017bf8:	b007      	add	sp, #28
 8017bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017bfe:	bf00      	nop
 8017c00:	200153e4 	.word	0x200153e4
 8017c04:	200153de 	.word	0x200153de

08017c08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c0c:	b091      	sub	sp, #68	; 0x44
 8017c0e:	4680      	mov	r8, r0
 8017c10:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017c14:	460f      	mov	r7, r1
 8017c16:	4614      	mov	r4, r2
 8017c18:	2d00      	cmp	r5, #0
 8017c1a:	d051      	beq.n	8017cc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017c1c:	6810      	ldr	r0, [r2, #0]
 8017c1e:	6851      	ldr	r1, [r2, #4]
 8017c20:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8017e24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017c24:	ae0c      	add	r6, sp, #48	; 0x30
 8017c26:	c603      	stmia	r6!, {r0, r1}
 8017c28:	6818      	ldr	r0, [r3, #0]
 8017c2a:	6859      	ldr	r1, [r3, #4]
 8017c2c:	ae0e      	add	r6, sp, #56	; 0x38
 8017c2e:	c603      	stmia	r6!, {r0, r1}
 8017c30:	a80c      	add	r0, sp, #48	; 0x30
 8017c32:	f7f8 febd 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c36:	4621      	mov	r1, r4
 8017c38:	a80e      	add	r0, sp, #56	; 0x38
 8017c3a:	f7f8 fee1 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c3e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017c42:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017c46:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017c4a:	f8d9 0000 	ldr.w	r0, [r9]
 8017c4e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017c52:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8017c56:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017c5a:	eb08 0401 	add.w	r4, r8, r1
 8017c5e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017c62:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8017e28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017c66:	440a      	add	r2, r1
 8017c68:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017c6c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017c70:	4413      	add	r3, r2
 8017c72:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017c76:	6803      	ldr	r3, [r0, #0]
 8017c78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017c7a:	4798      	blx	r3
 8017c7c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017c80:	f8d9 0000 	ldr.w	r0, [r9]
 8017c84:	d01f      	beq.n	8017cc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017c86:	2200      	movs	r2, #0
 8017c88:	6801      	ldr	r1, [r0, #0]
 8017c8a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017c8e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017c92:	220b      	movs	r2, #11
 8017c94:	9207      	str	r2, [sp, #28]
 8017c96:	f8b8 2000 	ldrh.w	r2, [r8]
 8017c9a:	9206      	str	r2, [sp, #24]
 8017c9c:	2201      	movs	r2, #1
 8017c9e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017ca2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017ca6:	9203      	str	r2, [sp, #12]
 8017ca8:	fa1f f28a 	uxth.w	r2, sl
 8017cac:	9202      	str	r2, [sp, #8]
 8017cae:	b2b6      	uxth	r6, r6
 8017cb0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017cb4:	9200      	str	r2, [sp, #0]
 8017cb6:	9601      	str	r6, [sp, #4]
 8017cb8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8017cba:	463a      	mov	r2, r7
 8017cbc:	4621      	mov	r1, r4
 8017cbe:	47a8      	blx	r5
 8017cc0:	b011      	add	sp, #68	; 0x44
 8017cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cc6:	6803      	ldr	r3, [r0, #0]
 8017cc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017cca:	4798      	blx	r3
 8017ccc:	f8b8 2000 	ldrh.w	r2, [r8]
 8017cd0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017cd4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8017cd8:	2dff      	cmp	r5, #255	; 0xff
 8017cda:	fb02 1303 	mla	r3, r2, r3, r1
 8017cde:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ce2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017ce6:	fb0a fa02 	mul.w	sl, sl, r2
 8017cea:	d062      	beq.n	8017db2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017cec:	ea6f 0c05 	mvn.w	ip, r5
 8017cf0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017cf4:	930a      	str	r3, [sp, #40]	; 0x28
 8017cf6:	b2ad      	uxth	r5, r5
 8017cf8:	fa5f fc8c 	uxtb.w	ip, ip
 8017cfc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8017d00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017d02:	4298      	cmp	r0, r3
 8017d04:	f080 8085 	bcs.w	8017e12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017d08:	eb00 0b09 	add.w	fp, r0, r9
 8017d0c:	4558      	cmp	r0, fp
 8017d0e:	d246      	bcs.n	8017d9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017d10:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017d14:	2303      	movs	r3, #3
 8017d16:	2204      	movs	r2, #4
 8017d18:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017d1c:	eb07 0a0e 	add.w	sl, r7, lr
 8017d20:	8803      	ldrh	r3, [r0, #0]
 8017d22:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017d26:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017d2a:	1219      	asrs	r1, r3, #8
 8017d2c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017d30:	fb18 f805 	smulbb	r8, r8, r5
 8017d34:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017d38:	10da      	asrs	r2, r3, #3
 8017d3a:	fb01 810c 	mla	r1, r1, ip, r8
 8017d3e:	00db      	lsls	r3, r3, #3
 8017d40:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017d44:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017d48:	b2db      	uxtb	r3, r3
 8017d4a:	fb18 f805 	smulbb	r8, r8, r5
 8017d4e:	fb1e fe05 	smulbb	lr, lr, r5
 8017d52:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017d56:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8017d5a:	b289      	uxth	r1, r1
 8017d5c:	fb02 820c 	mla	r2, r2, ip, r8
 8017d60:	fb03 e30c 	mla	r3, r3, ip, lr
 8017d64:	b292      	uxth	r2, r2
 8017d66:	b29b      	uxth	r3, r3
 8017d68:	f101 0801 	add.w	r8, r1, #1
 8017d6c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017d70:	f103 0e01 	add.w	lr, r3, #1
 8017d74:	f102 0801 	add.w	r8, r2, #1
 8017d78:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8017d7c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8017d80:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017d84:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017d88:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017d8c:	ea4e 0101 	orr.w	r1, lr, r1
 8017d90:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017d94:	ea41 0108 	orr.w	r1, r1, r8
 8017d98:	f820 1b02 	strh.w	r1, [r0], #2
 8017d9c:	e7b6      	b.n	8017d0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8017d9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017da0:	881b      	ldrh	r3, [r3, #0]
 8017da2:	1b9b      	subs	r3, r3, r6
 8017da4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017da8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017dac:	1b9b      	subs	r3, r3, r6
 8017dae:	441c      	add	r4, r3
 8017db0:	e7a6      	b.n	8017d00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8017db2:	491b      	ldr	r1, [pc, #108]	; (8017e20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8017db4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017db8:	2203      	movs	r2, #3
 8017dba:	2504      	movs	r5, #4
 8017dbc:	4550      	cmp	r0, sl
 8017dbe:	d228      	bcs.n	8017e12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017dc0:	eb00 0c09 	add.w	ip, r0, r9
 8017dc4:	4560      	cmp	r0, ip
 8017dc6:	4623      	mov	r3, r4
 8017dc8:	d219      	bcs.n	8017dfe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8017dca:	f893 e000 	ldrb.w	lr, [r3]
 8017dce:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8017dd2:	eb07 0b0e 	add.w	fp, r7, lr
 8017dd6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017dda:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8017dde:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017de2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8017de6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8017dea:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017dee:	ea43 030b 	orr.w	r3, r3, fp
 8017df2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8017df6:	3401      	adds	r4, #1
 8017df8:	f820 3b02 	strh.w	r3, [r0], #2
 8017dfc:	e7e2      	b.n	8017dc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8017dfe:	f8b8 3000 	ldrh.w	r3, [r8]
 8017e02:	1b9b      	subs	r3, r3, r6
 8017e04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e08:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017e0c:	1b9b      	subs	r3, r3, r6
 8017e0e:	441c      	add	r4, r3
 8017e10:	e7d4      	b.n	8017dbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8017e12:	4b04      	ldr	r3, [pc, #16]	; (8017e24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8017e14:	6818      	ldr	r0, [r3, #0]
 8017e16:	6803      	ldr	r3, [r0, #0]
 8017e18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017e1a:	4798      	blx	r3
 8017e1c:	e750      	b.n	8017cc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017e1e:	bf00      	nop
 8017e20:	fffff800 	.word	0xfffff800
 8017e24:	200153e4 	.word	0x200153e4
 8017e28:	200153de 	.word	0x200153de

08017e2c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017e2c:	b430      	push	{r4, r5}
 8017e2e:	780d      	ldrb	r5, [r1, #0]
 8017e30:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8017e34:	2d01      	cmp	r5, #1
 8017e36:	d00a      	beq.n	8017e4e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8017e38:	d305      	bcc.n	8017e46 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8017e3a:	2d02      	cmp	r5, #2
 8017e3c:	d10b      	bne.n	8017e56 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8017e3e:	9402      	str	r4, [sp, #8]
 8017e40:	bc30      	pop	{r4, r5}
 8017e42:	f7ff be15 	b.w	8017a70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8017e46:	9402      	str	r4, [sp, #8]
 8017e48:	bc30      	pop	{r4, r5}
 8017e4a:	f7ff bd2b 	b.w	80178a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8017e4e:	9402      	str	r4, [sp, #8]
 8017e50:	bc30      	pop	{r4, r5}
 8017e52:	f7ff bed9 	b.w	8017c08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8017e56:	bc30      	pop	{r4, r5}
 8017e58:	4770      	bx	lr
	...

08017e5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8017e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e60:	4604      	mov	r4, r0
 8017e62:	b087      	sub	sp, #28
 8017e64:	6810      	ldr	r0, [r2, #0]
 8017e66:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8017e6a:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80180a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8017e6e:	460e      	mov	r6, r1
 8017e70:	6851      	ldr	r1, [r2, #4]
 8017e72:	ad02      	add	r5, sp, #8
 8017e74:	c503      	stmia	r5!, {r0, r1}
 8017e76:	6818      	ldr	r0, [r3, #0]
 8017e78:	6859      	ldr	r1, [r3, #4]
 8017e7a:	ad04      	add	r5, sp, #16
 8017e7c:	4617      	mov	r7, r2
 8017e7e:	c503      	stmia	r5!, {r0, r1}
 8017e80:	a802      	add	r0, sp, #8
 8017e82:	f7f8 fd95 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e86:	4639      	mov	r1, r7
 8017e88:	a804      	add	r0, sp, #16
 8017e8a:	f7f8 fdb9 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e8e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017e92:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017e96:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8017e9a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017e9e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017ea2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017ea6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017eaa:	440e      	add	r6, r1
 8017eac:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017eb0:	440a      	add	r2, r1
 8017eb2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017eb6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017eba:	4413      	add	r3, r2
 8017ebc:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017ec0:	4b77      	ldr	r3, [pc, #476]	; (80180a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8017ec2:	6818      	ldr	r0, [r3, #0]
 8017ec4:	6803      	ldr	r3, [r0, #0]
 8017ec6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017ec8:	4798      	blx	r3
 8017eca:	f8b9 b000 	ldrh.w	fp, [r9]
 8017ece:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017ed2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017ed6:	fb0b 2303 	mla	r3, fp, r3, r2
 8017eda:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ede:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017ee2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017ee6:	fb05 f50b 	mul.w	r5, r5, fp
 8017eea:	9300      	str	r3, [sp, #0]
 8017eec:	d069      	beq.n	8017fc2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8017eee:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8017ef2:	4558      	cmp	r0, fp
 8017ef4:	f080 80cc 	bcs.w	8018090 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017ef8:	9b00      	ldr	r3, [sp, #0]
 8017efa:	18c3      	adds	r3, r0, r3
 8017efc:	9301      	str	r3, [sp, #4]
 8017efe:	4631      	mov	r1, r6
 8017f00:	9b01      	ldr	r3, [sp, #4]
 8017f02:	4298      	cmp	r0, r3
 8017f04:	d24f      	bcs.n	8017fa6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8017f06:	f811 2b01 	ldrb.w	r2, [r1], #1
 8017f0a:	2a00      	cmp	r2, #0
 8017f0c:	d048      	beq.n	8017fa0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8017f0e:	fb0a f202 	mul.w	r2, sl, r2
 8017f12:	1c53      	adds	r3, r2, #1
 8017f14:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017f18:	121b      	asrs	r3, r3, #8
 8017f1a:	d041      	beq.n	8017fa0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8017f1c:	8802      	ldrh	r2, [r0, #0]
 8017f1e:	f8b4 c000 	ldrh.w	ip, [r4]
 8017f22:	b29e      	uxth	r6, r3
 8017f24:	1215      	asrs	r5, r2, #8
 8017f26:	43db      	mvns	r3, r3
 8017f28:	b2db      	uxtb	r3, r3
 8017f2a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017f2e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017f32:	fb15 f503 	smulbb	r5, r5, r3
 8017f36:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8017f3a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017f3e:	00d2      	lsls	r2, r2, #3
 8017f40:	fb07 5706 	mla	r7, r7, r6, r5
 8017f44:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8017f48:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017f4c:	b2d2      	uxtb	r2, r2
 8017f4e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017f52:	b2bf      	uxth	r7, r7
 8017f54:	fb1e fe03 	smulbb	lr, lr, r3
 8017f58:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017f5c:	fa5f fc8c 	uxtb.w	ip, ip
 8017f60:	fb12 f203 	smulbb	r2, r2, r3
 8017f64:	fb05 e506 	mla	r5, r5, r6, lr
 8017f68:	fb0c 2c06 	mla	ip, ip, r6, r2
 8017f6c:	f107 0e01 	add.w	lr, r7, #1
 8017f70:	fa1f fc8c 	uxth.w	ip, ip
 8017f74:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8017f78:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8017f7c:	f10c 0701 	add.w	r7, ip, #1
 8017f80:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017f84:	b2ad      	uxth	r5, r5
 8017f86:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017f8a:	ea47 070e 	orr.w	r7, r7, lr
 8017f8e:	f105 0e01 	add.w	lr, r5, #1
 8017f92:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017f96:	096d      	lsrs	r5, r5, #5
 8017f98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017f9c:	432f      	orrs	r7, r5
 8017f9e:	8007      	strh	r7, [r0, #0]
 8017fa0:	3002      	adds	r0, #2
 8017fa2:	3402      	adds	r4, #2
 8017fa4:	e7ac      	b.n	8017f00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8017fa6:	f8b9 3000 	ldrh.w	r3, [r9]
 8017faa:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8017fae:	eba3 0308 	sub.w	r3, r3, r8
 8017fb2:	eba6 0608 	sub.w	r6, r6, r8
 8017fb6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8017fba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017fbe:	440e      	add	r6, r1
 8017fc0:	e797      	b.n	8017ef2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8017fc2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8017fc6:	42a8      	cmp	r0, r5
 8017fc8:	d262      	bcs.n	8018090 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017fca:	9b00      	ldr	r3, [sp, #0]
 8017fcc:	4631      	mov	r1, r6
 8017fce:	eb00 0b03 	add.w	fp, r0, r3
 8017fd2:	4558      	cmp	r0, fp
 8017fd4:	d24e      	bcs.n	8018074 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8017fd6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8017fda:	b12b      	cbz	r3, 8017fe8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8017fdc:	2bff      	cmp	r3, #255	; 0xff
 8017fde:	f8b4 e000 	ldrh.w	lr, [r4]
 8017fe2:	d104      	bne.n	8017fee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8017fe4:	f8a0 e000 	strh.w	lr, [r0]
 8017fe8:	3002      	adds	r0, #2
 8017fea:	3402      	adds	r4, #2
 8017fec:	e7f1      	b.n	8017fd2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8017fee:	8802      	ldrh	r2, [r0, #0]
 8017ff0:	b29f      	uxth	r7, r3
 8017ff2:	1216      	asrs	r6, r2, #8
 8017ff4:	43db      	mvns	r3, r3
 8017ff6:	b2db      	uxtb	r3, r3
 8017ff8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017ffc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018000:	fb16 f603 	smulbb	r6, r6, r3
 8018004:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018008:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801800c:	00d2      	lsls	r2, r2, #3
 801800e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018012:	b2d2      	uxtb	r2, r2
 8018014:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018018:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801801c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018020:	fb1a fa03 	smulbb	sl, sl, r3
 8018024:	fa1f fc8c 	uxth.w	ip, ip
 8018028:	fb12 f303 	smulbb	r3, r2, r3
 801802c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018030:	fa5f fe8e 	uxtb.w	lr, lr
 8018034:	fb06 a607 	mla	r6, r6, r7, sl
 8018038:	f10c 0201 	add.w	r2, ip, #1
 801803c:	fb0e 3307 	mla	r3, lr, r7, r3
 8018040:	b2b6      	uxth	r6, r6
 8018042:	b29b      	uxth	r3, r3
 8018044:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018048:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801804c:	f106 0a01 	add.w	sl, r6, #1
 8018050:	f103 0c01 	add.w	ip, r3, #1
 8018054:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018058:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801805c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018060:	0976      	lsrs	r6, r6, #5
 8018062:	ea4c 0c02 	orr.w	ip, ip, r2
 8018066:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801806a:	ea4c 0c06 	orr.w	ip, ip, r6
 801806e:	f8a0 c000 	strh.w	ip, [r0]
 8018072:	e7b9      	b.n	8017fe8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018074:	f8b9 3000 	ldrh.w	r3, [r9]
 8018078:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801807c:	eba3 0308 	sub.w	r3, r3, r8
 8018080:	eba6 0608 	sub.w	r6, r6, r8
 8018084:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018088:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801808c:	440e      	add	r6, r1
 801808e:	e79a      	b.n	8017fc6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018090:	4b03      	ldr	r3, [pc, #12]	; (80180a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018092:	6818      	ldr	r0, [r3, #0]
 8018094:	6803      	ldr	r3, [r0, #0]
 8018096:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018098:	4798      	blx	r3
 801809a:	b007      	add	sp, #28
 801809c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180a0:	200153e4 	.word	0x200153e4
 80180a4:	200153de 	.word	0x200153de

080180a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80180a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180ac:	b089      	sub	sp, #36	; 0x24
 80180ae:	4682      	mov	sl, r0
 80180b0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80180b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80180b6:	460f      	mov	r7, r1
 80180b8:	4691      	mov	r9, r2
 80180ba:	4698      	mov	r8, r3
 80180bc:	2e00      	cmp	r6, #0
 80180be:	d036      	beq.n	801812e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80180c0:	4608      	mov	r0, r1
 80180c2:	f7fc f863 	bl	801418c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80180c6:	4605      	mov	r5, r0
 80180c8:	4638      	mov	r0, r7
 80180ca:	f7fc f893 	bl	80141f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80180ce:	f8ad 000e 	strh.w	r0, [sp, #14]
 80180d2:	4638      	mov	r0, r7
 80180d4:	f8ad 9008 	strh.w	r9, [sp, #8]
 80180d8:	f8ad 500c 	strh.w	r5, [sp, #12]
 80180dc:	f8ad 800a 	strh.w	r8, [sp, #10]
 80180e0:	f7fc f940 	bl	8014364 <_ZNK8touchgfx6Bitmap7getDataEv>
 80180e4:	4605      	mov	r5, r0
 80180e6:	4638      	mov	r0, r7
 80180e8:	f7fc f96c 	bl	80143c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80180ec:	4681      	mov	r9, r0
 80180ee:	4638      	mov	r0, r7
 80180f0:	f7fc f9bc 	bl	801446c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80180f4:	280b      	cmp	r0, #11
 80180f6:	d81a      	bhi.n	801812e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80180f8:	e8df f000 	tbb	[pc, r0]
 80180fc:	1906aebd 	.word	0x1906aebd
 8018100:	19191919 	.word	0x19191919
 8018104:	b5191919 	.word	0xb5191919
 8018108:	4bb0      	ldr	r3, [pc, #704]	; (80183cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801810a:	6818      	ldr	r0, [r3, #0]
 801810c:	6803      	ldr	r3, [r0, #0]
 801810e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018110:	4798      	blx	r3
 8018112:	2eff      	cmp	r6, #255	; 0xff
 8018114:	d121      	bne.n	801815a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8018116:	0683      	lsls	r3, r0, #26
 8018118:	d41f      	bmi.n	801815a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801811a:	4638      	mov	r0, r7
 801811c:	f7fc f8ea 	bl	80142f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018120:	b940      	cbnz	r0, 8018134 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018122:	4623      	mov	r3, r4
 8018124:	aa02      	add	r2, sp, #8
 8018126:	4629      	mov	r1, r5
 8018128:	4650      	mov	r0, sl
 801812a:	f7ff fa2f 	bl	801758c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801812e:	b009      	add	sp, #36	; 0x24
 8018130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018134:	f10d 0818 	add.w	r8, sp, #24
 8018138:	4639      	mov	r1, r7
 801813a:	4640      	mov	r0, r8
 801813c:	f7fc f88e 	bl	801425c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018140:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018144:	af04      	add	r7, sp, #16
 8018146:	e887 0003 	stmia.w	r7, {r0, r1}
 801814a:	4638      	mov	r0, r7
 801814c:	4621      	mov	r1, r4
 801814e:	f7f2 fc4d 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 8018152:	4638      	mov	r0, r7
 8018154:	f7f2 fc8d 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018158:	b130      	cbz	r0, 8018168 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801815a:	4633      	mov	r3, r6
 801815c:	4622      	mov	r2, r4
 801815e:	a902      	add	r1, sp, #8
 8018160:	4628      	mov	r0, r5
 8018162:	f7ff f92d 	bl	80173c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018166:	e7e2      	b.n	801812e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018168:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801816c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018170:	4293      	cmp	r3, r2
 8018172:	dd12      	ble.n	801819a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8018174:	1a9b      	subs	r3, r3, r2
 8018176:	f9b4 0000 	ldrsh.w	r0, [r4]
 801817a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801817e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018182:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018186:	f8ad 101c 	strh.w	r1, [sp, #28]
 801818a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801818e:	4642      	mov	r2, r8
 8018190:	4633      	mov	r3, r6
 8018192:	a902      	add	r1, sp, #8
 8018194:	4628      	mov	r0, r5
 8018196:	f7ff f913 	bl	80173c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801819a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801819e:	f9b4 2000 	ldrsh.w	r2, [r4]
 80181a2:	4293      	cmp	r3, r2
 80181a4:	dd12      	ble.n	80181cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 80181a6:	1a9b      	subs	r3, r3, r2
 80181a8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80181ac:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80181b0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80181b4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80181b8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80181bc:	f8ad 101e 	strh.w	r1, [sp, #30]
 80181c0:	23ff      	movs	r3, #255	; 0xff
 80181c2:	4642      	mov	r2, r8
 80181c4:	a902      	add	r1, sp, #8
 80181c6:	4628      	mov	r0, r5
 80181c8:	f7ff f8fa 	bl	80173c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80181cc:	463b      	mov	r3, r7
 80181ce:	aa02      	add	r2, sp, #8
 80181d0:	4629      	mov	r1, r5
 80181d2:	4650      	mov	r0, sl
 80181d4:	f7ff f9da 	bl	801758c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80181d8:	88a2      	ldrh	r2, [r4, #4]
 80181da:	8823      	ldrh	r3, [r4, #0]
 80181dc:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80181e0:	4413      	add	r3, r2
 80181e2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80181e6:	440a      	add	r2, r1
 80181e8:	b29b      	uxth	r3, r3
 80181ea:	b292      	uxth	r2, r2
 80181ec:	b211      	sxth	r1, r2
 80181ee:	b218      	sxth	r0, r3
 80181f0:	4288      	cmp	r0, r1
 80181f2:	dd12      	ble.n	801821a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 80181f4:	1a9b      	subs	r3, r3, r2
 80181f6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80181fa:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80181fe:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018202:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018206:	f8ad 001e 	strh.w	r0, [sp, #30]
 801820a:	23ff      	movs	r3, #255	; 0xff
 801820c:	4642      	mov	r2, r8
 801820e:	a902      	add	r1, sp, #8
 8018210:	4628      	mov	r0, r5
 8018212:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018216:	f7ff f8d3 	bl	80173c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801821a:	88e2      	ldrh	r2, [r4, #6]
 801821c:	8863      	ldrh	r3, [r4, #2]
 801821e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018222:	4413      	add	r3, r2
 8018224:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018228:	440a      	add	r2, r1
 801822a:	b29b      	uxth	r3, r3
 801822c:	b292      	uxth	r2, r2
 801822e:	b211      	sxth	r1, r2
 8018230:	b218      	sxth	r0, r3
 8018232:	4288      	cmp	r0, r1
 8018234:	f77f af7b 	ble.w	801812e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018238:	1a9b      	subs	r3, r3, r2
 801823a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801823e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018242:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018246:	f8ad 6018 	strh.w	r6, [sp, #24]
 801824a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801824e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018252:	23ff      	movs	r3, #255	; 0xff
 8018254:	4642      	mov	r2, r8
 8018256:	e782      	b.n	801815e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8018258:	4633      	mov	r3, r6
 801825a:	4622      	mov	r2, r4
 801825c:	a902      	add	r1, sp, #8
 801825e:	4628      	mov	r0, r5
 8018260:	f7ff fa04 	bl	801766c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018264:	e763      	b.n	801812e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018266:	9600      	str	r6, [sp, #0]
 8018268:	4623      	mov	r3, r4
 801826a:	aa02      	add	r2, sp, #8
 801826c:	4649      	mov	r1, r9
 801826e:	4628      	mov	r0, r5
 8018270:	f7ff fddc 	bl	8017e2c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018274:	e75b      	b.n	801812e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018276:	4638      	mov	r0, r7
 8018278:	f7fc f83c 	bl	80142f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801827c:	b950      	cbnz	r0, 8018294 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 801827e:	e9cd 6000 	strd	r6, r0, [sp]
 8018282:	f8da 3000 	ldr.w	r3, [sl]
 8018286:	aa02      	add	r2, sp, #8
 8018288:	68de      	ldr	r6, [r3, #12]
 801828a:	4629      	mov	r1, r5
 801828c:	4623      	mov	r3, r4
 801828e:	4650      	mov	r0, sl
 8018290:	47b0      	blx	r6
 8018292:	e74c      	b.n	801812e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018294:	f10d 0818 	add.w	r8, sp, #24
 8018298:	4639      	mov	r1, r7
 801829a:	4640      	mov	r0, r8
 801829c:	f7fb ffde 	bl	801425c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80182a0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80182a4:	af04      	add	r7, sp, #16
 80182a6:	e887 0003 	stmia.w	r7, {r0, r1}
 80182aa:	4638      	mov	r0, r7
 80182ac:	4621      	mov	r1, r4
 80182ae:	f7f2 fb9d 	bl	800a9ec <_ZN8touchgfx4RectaNERKS0_>
 80182b2:	4638      	mov	r0, r7
 80182b4:	f7f2 fbdd 	bl	800aa72 <_ZNK8touchgfx4Rect7isEmptyEv>
 80182b8:	b138      	cbz	r0, 80182ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 80182ba:	9600      	str	r6, [sp, #0]
 80182bc:	4623      	mov	r3, r4
 80182be:	aa02      	add	r2, sp, #8
 80182c0:	4649      	mov	r1, r9
 80182c2:	4628      	mov	r0, r5
 80182c4:	f7ff fdca 	bl	8017e5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80182c8:	e731      	b.n	801812e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80182ca:	e9cd 6000 	strd	r6, r0, [sp]
 80182ce:	f8da 3000 	ldr.w	r3, [sl]
 80182d2:	aa02      	add	r2, sp, #8
 80182d4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80182d8:	4629      	mov	r1, r5
 80182da:	463b      	mov	r3, r7
 80182dc:	4650      	mov	r0, sl
 80182de:	47d8      	blx	fp
 80182e0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80182e4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80182e8:	4293      	cmp	r3, r2
 80182ea:	dd13      	ble.n	8018314 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 80182ec:	f9b4 0000 	ldrsh.w	r0, [r4]
 80182f0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80182f4:	f8ad 0018 	strh.w	r0, [sp, #24]
 80182f8:	1a9b      	subs	r3, r3, r2
 80182fa:	f8ad 201a 	strh.w	r2, [sp, #26]
 80182fe:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018302:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018306:	9600      	str	r6, [sp, #0]
 8018308:	4643      	mov	r3, r8
 801830a:	aa02      	add	r2, sp, #8
 801830c:	4649      	mov	r1, r9
 801830e:	4628      	mov	r0, r5
 8018310:	f7ff fda4 	bl	8017e5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018314:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018318:	f9b4 2000 	ldrsh.w	r2, [r4]
 801831c:	4293      	cmp	r3, r2
 801831e:	dd13      	ble.n	8018348 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018320:	1a9b      	subs	r3, r3, r2
 8018322:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018326:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801832a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801832e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018332:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018336:	f8ad 101e 	strh.w	r1, [sp, #30]
 801833a:	9600      	str	r6, [sp, #0]
 801833c:	4643      	mov	r3, r8
 801833e:	aa02      	add	r2, sp, #8
 8018340:	4649      	mov	r1, r9
 8018342:	4628      	mov	r0, r5
 8018344:	f7ff fd8a 	bl	8017e5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018348:	88a2      	ldrh	r2, [r4, #4]
 801834a:	8823      	ldrh	r3, [r4, #0]
 801834c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018350:	4413      	add	r3, r2
 8018352:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018356:	440a      	add	r2, r1
 8018358:	b29b      	uxth	r3, r3
 801835a:	b292      	uxth	r2, r2
 801835c:	b211      	sxth	r1, r2
 801835e:	b218      	sxth	r0, r3
 8018360:	4288      	cmp	r0, r1
 8018362:	dd13      	ble.n	801838c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8018364:	1a9b      	subs	r3, r3, r2
 8018366:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801836a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801836e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018372:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018376:	f8ad 001e 	strh.w	r0, [sp, #30]
 801837a:	9600      	str	r6, [sp, #0]
 801837c:	4643      	mov	r3, r8
 801837e:	aa02      	add	r2, sp, #8
 8018380:	4649      	mov	r1, r9
 8018382:	4628      	mov	r0, r5
 8018384:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018388:	f7ff fd68 	bl	8017e5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801838c:	88e2      	ldrh	r2, [r4, #6]
 801838e:	8863      	ldrh	r3, [r4, #2]
 8018390:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018394:	4413      	add	r3, r2
 8018396:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801839a:	440a      	add	r2, r1
 801839c:	b29b      	uxth	r3, r3
 801839e:	b292      	uxth	r2, r2
 80183a0:	b211      	sxth	r1, r2
 80183a2:	b218      	sxth	r0, r3
 80183a4:	4288      	cmp	r0, r1
 80183a6:	f77f aec2 	ble.w	801812e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80183aa:	f9b4 7000 	ldrsh.w	r7, [r4]
 80183ae:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80183b2:	f8ad 7018 	strh.w	r7, [sp, #24]
 80183b6:	1a9b      	subs	r3, r3, r2
 80183b8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80183bc:	f8ad 101a 	strh.w	r1, [sp, #26]
 80183c0:	f8ad 001c 	strh.w	r0, [sp, #28]
 80183c4:	9600      	str	r6, [sp, #0]
 80183c6:	4643      	mov	r3, r8
 80183c8:	e779      	b.n	80182be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 80183ca:	bf00      	nop
 80183cc:	200153e4 	.word	0x200153e4

080183d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80183d0:	b180      	cbz	r0, 80183f4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80183d2:	2903      	cmp	r1, #3
 80183d4:	d81c      	bhi.n	8018410 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80183d6:	e8df f001 	tbb	[pc, r1]
 80183da:	1d02      	.short	0x1d02
 80183dc:	1f08      	.short	0x1f08
 80183de:	4b10      	ldr	r3, [pc, #64]	; (8018420 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80183e0:	8818      	ldrh	r0, [r3, #0]
 80183e2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80183e6:	4240      	negs	r0, r0
 80183e8:	4770      	bx	lr
 80183ea:	4b0d      	ldr	r3, [pc, #52]	; (8018420 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80183ec:	8818      	ldrh	r0, [r3, #0]
 80183ee:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80183f2:	4770      	bx	lr
 80183f4:	2903      	cmp	r1, #3
 80183f6:	d80b      	bhi.n	8018410 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80183f8:	a301      	add	r3, pc, #4	; (adr r3, 8018400 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80183fa:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80183fe:	bf00      	nop
 8018400:	08018415 	.word	0x08018415
 8018404:	080183eb 	.word	0x080183eb
 8018408:	08018419 	.word	0x08018419
 801840c:	080183df 	.word	0x080183df
 8018410:	2000      	movs	r0, #0
 8018412:	4770      	bx	lr
 8018414:	2001      	movs	r0, #1
 8018416:	4770      	bx	lr
 8018418:	f04f 30ff 	mov.w	r0, #4294967295
 801841c:	4770      	bx	lr
 801841e:	bf00      	nop
 8018420:	200153de 	.word	0x200153de

08018424 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018424:	b180      	cbz	r0, 8018448 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018426:	2903      	cmp	r1, #3
 8018428:	d81c      	bhi.n	8018464 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801842a:	e8df f001 	tbb	[pc, r1]
 801842e:	021d      	.short	0x021d
 8018430:	071f      	.short	0x071f
 8018432:	4b10      	ldr	r3, [pc, #64]	; (8018474 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018434:	8818      	ldrh	r0, [r3, #0]
 8018436:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801843a:	4770      	bx	lr
 801843c:	4b0d      	ldr	r3, [pc, #52]	; (8018474 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801843e:	8818      	ldrh	r0, [r3, #0]
 8018440:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018444:	4240      	negs	r0, r0
 8018446:	4770      	bx	lr
 8018448:	2903      	cmp	r1, #3
 801844a:	d80b      	bhi.n	8018464 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801844c:	a301      	add	r3, pc, #4	; (adr r3, 8018454 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801844e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018452:	bf00      	nop
 8018454:	08018433 	.word	0x08018433
 8018458:	0801846d 	.word	0x0801846d
 801845c:	0801843d 	.word	0x0801843d
 8018460:	08018469 	.word	0x08018469
 8018464:	2000      	movs	r0, #0
 8018466:	4770      	bx	lr
 8018468:	2001      	movs	r0, #1
 801846a:	4770      	bx	lr
 801846c:	f04f 30ff 	mov.w	r0, #4294967295
 8018470:	4770      	bx	lr
 8018472:	bf00      	nop
 8018474:	200153de 	.word	0x200153de

08018478 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801847c:	b099      	sub	sp, #100	; 0x64
 801847e:	910b      	str	r1, [sp, #44]	; 0x2c
 8018480:	a914      	add	r1, sp, #80	; 0x50
 8018482:	e881 000c 	stmia.w	r1, {r2, r3}
 8018486:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801848a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801848e:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018492:	9309      	str	r3, [sp, #36]	; 0x24
 8018494:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8018498:	9310      	str	r3, [sp, #64]	; 0x40
 801849a:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801849e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80184a2:	930c      	str	r3, [sp, #48]	; 0x30
 80184a4:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80184a8:	798f      	ldrb	r7, [r1, #6]
 80184aa:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80184ae:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80184b2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80184b6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80184ba:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80184be:	431f      	orrs	r7, r3
 80184c0:	f000 8195 	beq.w	80187ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80184c4:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80184c8:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80184cc:	f891 9007 	ldrb.w	r9, [r1, #7]
 80184d0:	ea59 0903 	orrs.w	r9, r9, r3
 80184d4:	f000 818b 	beq.w	80187ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80184d8:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80184dc:	b29b      	uxth	r3, r3
 80184de:	2d00      	cmp	r5, #0
 80184e0:	f000 812e 	beq.w	8018740 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80184e4:	1aed      	subs	r5, r5, r3
 80184e6:	b2ad      	uxth	r5, r5
 80184e8:	042b      	lsls	r3, r5, #16
 80184ea:	d502      	bpl.n	80184f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80184ec:	1b64      	subs	r4, r4, r5
 80184ee:	b224      	sxth	r4, r4
 80184f0:	2500      	movs	r5, #0
 80184f2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80184f6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80184fa:	428c      	cmp	r4, r1
 80184fc:	b28b      	uxth	r3, r1
 80184fe:	bfbf      	itttt	lt
 8018500:	18ed      	addlt	r5, r5, r3
 8018502:	1b2c      	sublt	r4, r5, r4
 8018504:	b2a5      	uxthlt	r5, r4
 8018506:	460c      	movlt	r4, r1
 8018508:	8891      	ldrh	r1, [r2, #4]
 801850a:	440b      	add	r3, r1
 801850c:	b21b      	sxth	r3, r3
 801850e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018510:	88d3      	ldrh	r3, [r2, #6]
 8018512:	8852      	ldrh	r2, [r2, #2]
 8018514:	4413      	add	r3, r2
 8018516:	b21b      	sxth	r3, r3
 8018518:	930d      	str	r3, [sp, #52]	; 0x34
 801851a:	4bbe      	ldr	r3, [pc, #760]	; (8018814 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801851c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801851e:	f893 b000 	ldrb.w	fp, [r3]
 8018522:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018526:	f1dc 0300 	rsbs	r3, ip, #0
 801852a:	eb43 030c 	adc.w	r3, r3, ip
 801852e:	930e      	str	r3, [sp, #56]	; 0x38
 8018530:	4621      	mov	r1, r4
 8018532:	4653      	mov	r3, sl
 8018534:	a814      	add	r0, sp, #80	; 0x50
 8018536:	f7f8 f8b5 	bl	80106a4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801853a:	4621      	mov	r1, r4
 801853c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018540:	4653      	mov	r3, sl
 8018542:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018544:	a814      	add	r0, sp, #80	; 0x50
 8018546:	f7f8 f8ca 	bl	80106de <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801854a:	a918      	add	r1, sp, #96	; 0x60
 801854c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018550:	a817      	add	r0, sp, #92	; 0x5c
 8018552:	f7f8 f9eb 	bl	801092c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018556:	f1ba 0f00 	cmp.w	sl, #0
 801855a:	f040 80f4 	bne.w	8018746 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801855e:	f1bb 0f01 	cmp.w	fp, #1
 8018562:	f040 80f8 	bne.w	8018756 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018566:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018568:	2b00      	cmp	r3, #0
 801856a:	f040 8145 	bne.w	80187f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801856e:	b2ba      	uxth	r2, r7
 8018570:	b905      	cbnz	r5, 8018574 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018572:	b16e      	cbz	r6, 8018590 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018574:	fb06 5302 	mla	r3, r6, r2, r5
 8018578:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801857a:	fb08 f303 	mul.w	r3, r8, r3
 801857e:	4631      	mov	r1, r6
 8018580:	f003 0607 	and.w	r6, r3, #7
 8018584:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018588:	9328      	str	r3, [sp, #160]	; 0xa0
 801858a:	eba9 0301 	sub.w	r3, r9, r1
 801858e:	930a      	str	r3, [sp, #40]	; 0x28
 8018590:	4651      	mov	r1, sl
 8018592:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018594:	f7ff ff1c 	bl	80183d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018598:	4681      	mov	r9, r0
 801859a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801859c:	f7ff ff42 	bl	8018424 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80185a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80185a2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80185a4:	eba3 0a01 	sub.w	sl, r3, r1
 80185a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80185aa:	459a      	cmp	sl, r3
 80185ac:	bfa8      	it	ge
 80185ae:	469a      	movge	sl, r3
 80185b0:	f1ba 0f00 	cmp.w	sl, #0
 80185b4:	4683      	mov	fp, r0
 80185b6:	f340 811a 	ble.w	80187ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80185ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80185bc:	1b64      	subs	r4, r4, r5
 80185be:	1b1c      	subs	r4, r3, r4
 80185c0:	42bc      	cmp	r4, r7
 80185c2:	bfd4      	ite	le
 80185c4:	ebc5 0504 	rsble	r5, r5, r4
 80185c8:	ebc5 0507 	rsbgt	r5, r5, r7
 80185cc:	2d00      	cmp	r5, #0
 80185ce:	f340 810e 	ble.w	80187ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80185d2:	1b52      	subs	r2, r2, r5
 80185d4:	fb08 f302 	mul.w	r3, r8, r2
 80185d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80185da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80185dc:	2b00      	cmp	r3, #0
 80185de:	f040 8116 	bne.w	801880e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80185e2:	4b8d      	ldr	r3, [pc, #564]	; (8018818 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80185e4:	6818      	ldr	r0, [r3, #0]
 80185e6:	6803      	ldr	r3, [r0, #0]
 80185e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80185ea:	4798      	blx	r3
 80185ec:	2301      	movs	r3, #1
 80185ee:	fa03 f308 	lsl.w	r3, r3, r8
 80185f2:	4a8a      	ldr	r2, [pc, #552]	; (801881c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80185f4:	3b01      	subs	r3, #1
 80185f6:	b2db      	uxtb	r3, r3
 80185f8:	8811      	ldrh	r1, [r2, #0]
 80185fa:	930e      	str	r3, [sp, #56]	; 0x38
 80185fc:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018600:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018604:	fb01 2303 	mla	r3, r1, r3, r2
 8018608:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801860c:	930a      	str	r3, [sp, #40]	; 0x28
 801860e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018610:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018614:	9313      	str	r3, [sp, #76]	; 0x4c
 8018616:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018618:	0a19      	lsrs	r1, r3, #8
 801861a:	b2cb      	uxtb	r3, r1
 801861c:	9312      	str	r3, [sp, #72]	; 0x48
 801861e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018620:	b2db      	uxtb	r3, r3
 8018622:	9311      	str	r3, [sp, #68]	; 0x44
 8018624:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018626:	095a      	lsrs	r2, r3, #5
 8018628:	4b7d      	ldr	r3, [pc, #500]	; (8018820 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801862a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801862e:	400b      	ands	r3, r1
 8018630:	4313      	orrs	r3, r2
 8018632:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018634:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018638:	4313      	orrs	r3, r2
 801863a:	b29b      	uxth	r3, r3
 801863c:	9310      	str	r3, [sp, #64]	; 0x40
 801863e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018640:	781a      	ldrb	r2, [r3, #0]
 8018642:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018646:	4132      	asrs	r2, r6
 8018648:	fb05 b919 	mls	r9, r5, r9, fp
 801864c:	fb03 fb05 	mul.w	fp, r3, r5
 8018650:	b2d2      	uxtb	r2, r2
 8018652:	930d      	str	r3, [sp, #52]	; 0x34
 8018654:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018658:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801865c:	f0c0 80f5 	bcc.w	801884a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018660:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018664:	46ae      	mov	lr, r5
 8018666:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801866a:	f0c0 80dd 	bcc.w	8018828 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801866e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018670:	4013      	ands	r3, r2
 8018672:	d055      	beq.n	8018720 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018674:	20ff      	movs	r0, #255	; 0xff
 8018676:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018678:	fb90 f1f1 	sdiv	r1, r0, r1
 801867c:	434b      	muls	r3, r1
 801867e:	2bfe      	cmp	r3, #254	; 0xfe
 8018680:	dd03      	ble.n	801868a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018682:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018684:	4281      	cmp	r1, r0
 8018686:	f000 80cd 	beq.w	8018824 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801868a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801868c:	f8bc 4000 	ldrh.w	r4, [ip]
 8018690:	fb11 f303 	smulbb	r3, r1, r3
 8018694:	b29b      	uxth	r3, r3
 8018696:	1c59      	adds	r1, r3, #1
 8018698:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801869c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80186a0:	b29f      	uxth	r7, r3
 80186a2:	43db      	mvns	r3, r3
 80186a4:	b2db      	uxtb	r3, r3
 80186a6:	9309      	str	r3, [sp, #36]	; 0x24
 80186a8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80186aa:	1220      	asrs	r0, r4, #8
 80186ac:	fb13 f907 	smulbb	r9, r3, r7
 80186b0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80186b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80186b6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80186ba:	fb00 9003 	mla	r0, r0, r3, r9
 80186be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80186c0:	10e1      	asrs	r1, r4, #3
 80186c2:	fb13 f907 	smulbb	r9, r3, r7
 80186c6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80186ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80186cc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80186d0:	fb01 9103 	mla	r1, r1, r3, r9
 80186d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80186d6:	00e4      	lsls	r4, r4, #3
 80186d8:	fb13 f707 	smulbb	r7, r3, r7
 80186dc:	b2e4      	uxtb	r4, r4
 80186de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80186e0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80186e4:	fb04 7403 	mla	r4, r4, r3, r7
 80186e8:	b280      	uxth	r0, r0
 80186ea:	b2a4      	uxth	r4, r4
 80186ec:	1c43      	adds	r3, r0, #1
 80186ee:	f104 0901 	add.w	r9, r4, #1
 80186f2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80186f6:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80186fa:	b289      	uxth	r1, r1
 80186fc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018700:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018704:	ea49 0000 	orr.w	r0, r9, r0
 8018708:	f101 0901 	add.w	r9, r1, #1
 801870c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018710:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018714:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018718:	ea40 0009 	orr.w	r0, r0, r9
 801871c:	f8ac 0000 	strh.w	r0, [ip]
 8018720:	4446      	add	r6, r8
 8018722:	b2b6      	uxth	r6, r6
 8018724:	2e07      	cmp	r6, #7
 8018726:	bf81      	itttt	hi
 8018728:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801872a:	785a      	ldrbhi	r2, [r3, #1]
 801872c:	3301      	addhi	r3, #1
 801872e:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018730:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018732:	bf9a      	itte	ls
 8018734:	fa42 f208 	asrls.w	r2, r2, r8
 8018738:	b2d2      	uxtbls	r2, r2
 801873a:	2600      	movhi	r6, #0
 801873c:	449c      	add	ip, r3
 801873e:	e792      	b.n	8018666 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018740:	441c      	add	r4, r3
 8018742:	b224      	sxth	r4, r4
 8018744:	e6d5      	b.n	80184f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018746:	f1ba 0f01 	cmp.w	sl, #1
 801874a:	f47f af0c 	bne.w	8018566 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801874e:	f1bb 0f01 	cmp.w	fp, #1
 8018752:	f47f af08 	bne.w	8018566 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018756:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018818 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801875a:	f8db 0000 	ldr.w	r0, [fp]
 801875e:	6803      	ldr	r3, [r0, #0]
 8018760:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018762:	4798      	blx	r3
 8018764:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018768:	465a      	mov	r2, fp
 801876a:	d006      	beq.n	801877a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801876c:	f1b8 0f04 	cmp.w	r8, #4
 8018770:	d140      	bne.n	80187f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018772:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018774:	3300      	adds	r3, #0
 8018776:	bf18      	it	ne
 8018778:	2301      	movne	r3, #1
 801877a:	0580      	lsls	r0, r0, #22
 801877c:	d56e      	bpl.n	801885c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801877e:	f1b8 0f08 	cmp.w	r8, #8
 8018782:	d16b      	bne.n	801885c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018784:	2b00      	cmp	r3, #0
 8018786:	bf0c      	ite	eq
 8018788:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801878c:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018790:	2d00      	cmp	r5, #0
 8018792:	f47f aee8 	bne.w	8018566 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018796:	2e00      	cmp	r6, #0
 8018798:	f47f aee5 	bne.w	8018566 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801879c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801879e:	19e3      	adds	r3, r4, r7
 80187a0:	4283      	cmp	r3, r0
 80187a2:	f73f aee0 	bgt.w	8018566 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80187a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187a8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80187aa:	444b      	add	r3, r9
 80187ac:	4283      	cmp	r3, r0
 80187ae:	f73f aeda 	bgt.w	8018566 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80187b2:	6810      	ldr	r0, [r2, #0]
 80187b4:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80187b8:	6804      	ldr	r4, [r0, #0]
 80187ba:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80187be:	b2bf      	uxth	r7, r7
 80187c0:	f1b8 0f08 	cmp.w	r8, #8
 80187c4:	f04f 0500 	mov.w	r5, #0
 80187c8:	bf18      	it	ne
 80187ca:	3701      	addne	r7, #1
 80187cc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80187d0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80187d2:	9104      	str	r1, [sp, #16]
 80187d4:	bf18      	it	ne
 80187d6:	f027 0701 	bicne.w	r7, r7, #1
 80187da:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80187dc:	bf18      	it	ne
 80187de:	b2bf      	uxthne	r7, r7
 80187e0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80187e4:	e9cd 7900 	strd	r7, r9, [sp]
 80187e8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80187ea:	6d64      	ldr	r4, [r4, #84]	; 0x54
 80187ec:	47a0      	blx	r4
 80187ee:	b019      	add	sp, #100	; 0x64
 80187f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80187f4:	2300      	movs	r3, #0
 80187f6:	e7c0      	b.n	801877a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80187f8:	2208      	movs	r2, #8
 80187fa:	fb92 f3f8 	sdiv	r3, r2, r8
 80187fe:	1e5a      	subs	r2, r3, #1
 8018800:	443a      	add	r2, r7
 8018802:	fb92 f2f3 	sdiv	r2, r2, r3
 8018806:	fb12 f203 	smulbb	r2, r2, r3
 801880a:	b292      	uxth	r2, r2
 801880c:	e6b0      	b.n	8018570 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801880e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018810:	e6ec      	b.n	80185ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018812:	bf00      	nop
 8018814:	200153dc 	.word	0x200153dc
 8018818:	200153e4 	.word	0x200153e4
 801881c:	200153de 	.word	0x200153de
 8018820:	00fff800 	.word	0x00fff800
 8018824:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018826:	e779      	b.n	801871c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018828:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801882a:	b153      	cbz	r3, 8018842 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801882c:	441e      	add	r6, r3
 801882e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018830:	b2b6      	uxth	r6, r6
 8018832:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018836:	f006 0607 	and.w	r6, r6, #7
 801883a:	781a      	ldrb	r2, [r3, #0]
 801883c:	9328      	str	r3, [sp, #160]	; 0xa0
 801883e:	4132      	asrs	r2, r6
 8018840:	b2d2      	uxtb	r2, r2
 8018842:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018844:	445b      	add	r3, fp
 8018846:	930a      	str	r3, [sp, #40]	; 0x28
 8018848:	e706      	b.n	8018658 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801884a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801884c:	2b00      	cmp	r3, #0
 801884e:	d1ce      	bne.n	80187ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018850:	4b05      	ldr	r3, [pc, #20]	; (8018868 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018852:	6818      	ldr	r0, [r3, #0]
 8018854:	6803      	ldr	r3, [r0, #0]
 8018856:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018858:	4798      	blx	r3
 801885a:	e7c8      	b.n	80187ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801885c:	2b00      	cmp	r3, #0
 801885e:	f43f ae82 	beq.w	8018566 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018862:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018866:	e793      	b.n	8018790 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018868:	200153e4 	.word	0x200153e4

0801886c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801886c:	b538      	push	{r3, r4, r5, lr}
 801886e:	4c15      	ldr	r4, [pc, #84]	; (80188c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018870:	7823      	ldrb	r3, [r4, #0]
 8018872:	f3bf 8f5b 	dmb	ish
 8018876:	07da      	lsls	r2, r3, #31
 8018878:	4605      	mov	r5, r0
 801887a:	d40b      	bmi.n	8018894 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801887c:	4620      	mov	r0, r4
 801887e:	f007 fd73 	bl	8020368 <__cxa_guard_acquire>
 8018882:	b138      	cbz	r0, 8018894 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018884:	4620      	mov	r0, r4
 8018886:	f007 fd7b 	bl	8020380 <__cxa_guard_release>
 801888a:	4a0f      	ldr	r2, [pc, #60]	; (80188c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801888c:	490f      	ldr	r1, [pc, #60]	; (80188cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801888e:	4810      	ldr	r0, [pc, #64]	; (80188d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018890:	f007 fd63 	bl	802035a <__aeabi_atexit>
 8018894:	4c0f      	ldr	r4, [pc, #60]	; (80188d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018896:	7823      	ldrb	r3, [r4, #0]
 8018898:	f3bf 8f5b 	dmb	ish
 801889c:	07db      	lsls	r3, r3, #31
 801889e:	d40b      	bmi.n	80188b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80188a0:	4620      	mov	r0, r4
 80188a2:	f007 fd61 	bl	8020368 <__cxa_guard_acquire>
 80188a6:	b138      	cbz	r0, 80188b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80188a8:	4620      	mov	r0, r4
 80188aa:	f007 fd69 	bl	8020380 <__cxa_guard_release>
 80188ae:	4a06      	ldr	r2, [pc, #24]	; (80188c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80188b0:	4909      	ldr	r1, [pc, #36]	; (80188d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80188b2:	480a      	ldr	r0, [pc, #40]	; (80188dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80188b4:	f007 fd51 	bl	802035a <__aeabi_atexit>
 80188b8:	4b05      	ldr	r3, [pc, #20]	; (80188d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80188ba:	612b      	str	r3, [r5, #16]
 80188bc:	4b07      	ldr	r3, [pc, #28]	; (80188dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80188be:	616b      	str	r3, [r5, #20]
 80188c0:	bd38      	pop	{r3, r4, r5, pc}
 80188c2:	bf00      	nop
 80188c4:	200154b8 	.word	0x200154b8
 80188c8:	20000000 	.word	0x20000000
 80188cc:	08016a7d 	.word	0x08016a7d
 80188d0:	200000d0 	.word	0x200000d0
 80188d4:	200154bc 	.word	0x200154bc
 80188d8:	08016a7b 	.word	0x08016a7b
 80188dc:	200000d4 	.word	0x200000d4

080188e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80188e0:	b538      	push	{r3, r4, r5, lr}
 80188e2:	4c15      	ldr	r4, [pc, #84]	; (8018938 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80188e4:	7823      	ldrb	r3, [r4, #0]
 80188e6:	f3bf 8f5b 	dmb	ish
 80188ea:	07da      	lsls	r2, r3, #31
 80188ec:	4605      	mov	r5, r0
 80188ee:	d40b      	bmi.n	8018908 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80188f0:	4620      	mov	r0, r4
 80188f2:	f007 fd39 	bl	8020368 <__cxa_guard_acquire>
 80188f6:	b138      	cbz	r0, 8018908 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80188f8:	4620      	mov	r0, r4
 80188fa:	f007 fd41 	bl	8020380 <__cxa_guard_release>
 80188fe:	4a0f      	ldr	r2, [pc, #60]	; (801893c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018900:	490f      	ldr	r1, [pc, #60]	; (8018940 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018902:	4810      	ldr	r0, [pc, #64]	; (8018944 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018904:	f007 fd29 	bl	802035a <__aeabi_atexit>
 8018908:	4c0f      	ldr	r4, [pc, #60]	; (8018948 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801890a:	7823      	ldrb	r3, [r4, #0]
 801890c:	f3bf 8f5b 	dmb	ish
 8018910:	07db      	lsls	r3, r3, #31
 8018912:	d40b      	bmi.n	801892c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018914:	4620      	mov	r0, r4
 8018916:	f007 fd27 	bl	8020368 <__cxa_guard_acquire>
 801891a:	b138      	cbz	r0, 801892c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801891c:	4620      	mov	r0, r4
 801891e:	f007 fd2f 	bl	8020380 <__cxa_guard_release>
 8018922:	4a06      	ldr	r2, [pc, #24]	; (801893c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018924:	4909      	ldr	r1, [pc, #36]	; (801894c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018926:	480a      	ldr	r0, [pc, #40]	; (8018950 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018928:	f007 fd17 	bl	802035a <__aeabi_atexit>
 801892c:	4b05      	ldr	r3, [pc, #20]	; (8018944 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801892e:	60ab      	str	r3, [r5, #8]
 8018930:	4b07      	ldr	r3, [pc, #28]	; (8018950 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018932:	60eb      	str	r3, [r5, #12]
 8018934:	bd38      	pop	{r3, r4, r5, pc}
 8018936:	bf00      	nop
 8018938:	20015490 	.word	0x20015490
 801893c:	20000000 	.word	0x20000000
 8018940:	08016a81 	.word	0x08016a81
 8018944:	200000a8 	.word	0x200000a8
 8018948:	20015494 	.word	0x20015494
 801894c:	08016a7f 	.word	0x08016a7f
 8018950:	200000ac 	.word	0x200000ac

08018954 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018954:	b510      	push	{r4, lr}
 8018956:	4604      	mov	r4, r0
 8018958:	f7ff ff88 	bl	801886c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801895c:	4620      	mov	r0, r4
 801895e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018962:	f7ff bfbd 	b.w	80188e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018968 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018968:	b538      	push	{r3, r4, r5, lr}
 801896a:	4c15      	ldr	r4, [pc, #84]	; (80189c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801896c:	7823      	ldrb	r3, [r4, #0]
 801896e:	f3bf 8f5b 	dmb	ish
 8018972:	07da      	lsls	r2, r3, #31
 8018974:	4605      	mov	r5, r0
 8018976:	d40b      	bmi.n	8018990 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018978:	4620      	mov	r0, r4
 801897a:	f007 fcf5 	bl	8020368 <__cxa_guard_acquire>
 801897e:	b138      	cbz	r0, 8018990 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018980:	4620      	mov	r0, r4
 8018982:	f007 fcfd 	bl	8020380 <__cxa_guard_release>
 8018986:	4a0f      	ldr	r2, [pc, #60]	; (80189c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018988:	490f      	ldr	r1, [pc, #60]	; (80189c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801898a:	4810      	ldr	r0, [pc, #64]	; (80189cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801898c:	f007 fce5 	bl	802035a <__aeabi_atexit>
 8018990:	4c0f      	ldr	r4, [pc, #60]	; (80189d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018992:	7823      	ldrb	r3, [r4, #0]
 8018994:	f3bf 8f5b 	dmb	ish
 8018998:	07db      	lsls	r3, r3, #31
 801899a:	d40b      	bmi.n	80189b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801899c:	4620      	mov	r0, r4
 801899e:	f007 fce3 	bl	8020368 <__cxa_guard_acquire>
 80189a2:	b138      	cbz	r0, 80189b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80189a4:	4620      	mov	r0, r4
 80189a6:	f007 fceb 	bl	8020380 <__cxa_guard_release>
 80189aa:	4a06      	ldr	r2, [pc, #24]	; (80189c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80189ac:	4909      	ldr	r1, [pc, #36]	; (80189d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80189ae:	480a      	ldr	r0, [pc, #40]	; (80189d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80189b0:	f007 fcd3 	bl	802035a <__aeabi_atexit>
 80189b4:	4b05      	ldr	r3, [pc, #20]	; (80189cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80189b6:	622b      	str	r3, [r5, #32]
 80189b8:	4b07      	ldr	r3, [pc, #28]	; (80189d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80189ba:	626b      	str	r3, [r5, #36]	; 0x24
 80189bc:	bd38      	pop	{r3, r4, r5, pc}
 80189be:	bf00      	nop
 80189c0:	200154c0 	.word	0x200154c0
 80189c4:	20000000 	.word	0x20000000
 80189c8:	08016a75 	.word	0x08016a75
 80189cc:	200000d8 	.word	0x200000d8
 80189d0:	200154c4 	.word	0x200154c4
 80189d4:	08016a73 	.word	0x08016a73
 80189d8:	200000dc 	.word	0x200000dc

080189dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80189dc:	b538      	push	{r3, r4, r5, lr}
 80189de:	4c15      	ldr	r4, [pc, #84]	; (8018a34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80189e0:	7823      	ldrb	r3, [r4, #0]
 80189e2:	f3bf 8f5b 	dmb	ish
 80189e6:	07da      	lsls	r2, r3, #31
 80189e8:	4605      	mov	r5, r0
 80189ea:	d40b      	bmi.n	8018a04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80189ec:	4620      	mov	r0, r4
 80189ee:	f007 fcbb 	bl	8020368 <__cxa_guard_acquire>
 80189f2:	b138      	cbz	r0, 8018a04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80189f4:	4620      	mov	r0, r4
 80189f6:	f007 fcc3 	bl	8020380 <__cxa_guard_release>
 80189fa:	4a0f      	ldr	r2, [pc, #60]	; (8018a38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80189fc:	490f      	ldr	r1, [pc, #60]	; (8018a3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80189fe:	4810      	ldr	r0, [pc, #64]	; (8018a40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018a00:	f007 fcab 	bl	802035a <__aeabi_atexit>
 8018a04:	4c0f      	ldr	r4, [pc, #60]	; (8018a44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018a06:	7823      	ldrb	r3, [r4, #0]
 8018a08:	f3bf 8f5b 	dmb	ish
 8018a0c:	07db      	lsls	r3, r3, #31
 8018a0e:	d40b      	bmi.n	8018a28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018a10:	4620      	mov	r0, r4
 8018a12:	f007 fca9 	bl	8020368 <__cxa_guard_acquire>
 8018a16:	b138      	cbz	r0, 8018a28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018a18:	4620      	mov	r0, r4
 8018a1a:	f007 fcb1 	bl	8020380 <__cxa_guard_release>
 8018a1e:	4a06      	ldr	r2, [pc, #24]	; (8018a38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018a20:	4909      	ldr	r1, [pc, #36]	; (8018a48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018a22:	480a      	ldr	r0, [pc, #40]	; (8018a4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018a24:	f007 fc99 	bl	802035a <__aeabi_atexit>
 8018a28:	4b05      	ldr	r3, [pc, #20]	; (8018a40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018a2a:	61ab      	str	r3, [r5, #24]
 8018a2c:	4b07      	ldr	r3, [pc, #28]	; (8018a4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018a2e:	61eb      	str	r3, [r5, #28]
 8018a30:	bd38      	pop	{r3, r4, r5, pc}
 8018a32:	bf00      	nop
 8018a34:	20015498 	.word	0x20015498
 8018a38:	20000000 	.word	0x20000000
 8018a3c:	08016a79 	.word	0x08016a79
 8018a40:	200000b0 	.word	0x200000b0
 8018a44:	2001549c 	.word	0x2001549c
 8018a48:	08016a77 	.word	0x08016a77
 8018a4c:	200000b4 	.word	0x200000b4

08018a50 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018a50:	b510      	push	{r4, lr}
 8018a52:	4604      	mov	r4, r0
 8018a54:	f7ff ff88 	bl	8018968 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018a58:	4620      	mov	r0, r4
 8018a5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018a5e:	f7ff bfbd 	b.w	80189dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018a64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018a64:	b538      	push	{r3, r4, r5, lr}
 8018a66:	4c15      	ldr	r4, [pc, #84]	; (8018abc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018a68:	7823      	ldrb	r3, [r4, #0]
 8018a6a:	f3bf 8f5b 	dmb	ish
 8018a6e:	07da      	lsls	r2, r3, #31
 8018a70:	4605      	mov	r5, r0
 8018a72:	d40b      	bmi.n	8018a8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018a74:	4620      	mov	r0, r4
 8018a76:	f007 fc77 	bl	8020368 <__cxa_guard_acquire>
 8018a7a:	b138      	cbz	r0, 8018a8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018a7c:	4620      	mov	r0, r4
 8018a7e:	f007 fc7f 	bl	8020380 <__cxa_guard_release>
 8018a82:	4a0f      	ldr	r2, [pc, #60]	; (8018ac0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018a84:	490f      	ldr	r1, [pc, #60]	; (8018ac4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018a86:	4810      	ldr	r0, [pc, #64]	; (8018ac8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018a88:	f007 fc67 	bl	802035a <__aeabi_atexit>
 8018a8c:	4c0f      	ldr	r4, [pc, #60]	; (8018acc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018a8e:	7823      	ldrb	r3, [r4, #0]
 8018a90:	f3bf 8f5b 	dmb	ish
 8018a94:	07db      	lsls	r3, r3, #31
 8018a96:	d40b      	bmi.n	8018ab0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018a98:	4620      	mov	r0, r4
 8018a9a:	f007 fc65 	bl	8020368 <__cxa_guard_acquire>
 8018a9e:	b138      	cbz	r0, 8018ab0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018aa0:	4620      	mov	r0, r4
 8018aa2:	f007 fc6d 	bl	8020380 <__cxa_guard_release>
 8018aa6:	4a06      	ldr	r2, [pc, #24]	; (8018ac0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018aa8:	4909      	ldr	r1, [pc, #36]	; (8018ad0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018aaa:	480a      	ldr	r0, [pc, #40]	; (8018ad4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018aac:	f007 fc55 	bl	802035a <__aeabi_atexit>
 8018ab0:	4b05      	ldr	r3, [pc, #20]	; (8018ac8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018ab2:	632b      	str	r3, [r5, #48]	; 0x30
 8018ab4:	4b07      	ldr	r3, [pc, #28]	; (8018ad4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018ab6:	636b      	str	r3, [r5, #52]	; 0x34
 8018ab8:	bd38      	pop	{r3, r4, r5, pc}
 8018aba:	bf00      	nop
 8018abc:	200154d0 	.word	0x200154d0
 8018ac0:	20000000 	.word	0x20000000
 8018ac4:	08016a6d 	.word	0x08016a6d
 8018ac8:	200000e8 	.word	0x200000e8
 8018acc:	200154d4 	.word	0x200154d4
 8018ad0:	08016a6b 	.word	0x08016a6b
 8018ad4:	200000ec 	.word	0x200000ec

08018ad8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018ad8:	b538      	push	{r3, r4, r5, lr}
 8018ada:	4c15      	ldr	r4, [pc, #84]	; (8018b30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018adc:	7823      	ldrb	r3, [r4, #0]
 8018ade:	f3bf 8f5b 	dmb	ish
 8018ae2:	07da      	lsls	r2, r3, #31
 8018ae4:	4605      	mov	r5, r0
 8018ae6:	d40b      	bmi.n	8018b00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018ae8:	4620      	mov	r0, r4
 8018aea:	f007 fc3d 	bl	8020368 <__cxa_guard_acquire>
 8018aee:	b138      	cbz	r0, 8018b00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018af0:	4620      	mov	r0, r4
 8018af2:	f007 fc45 	bl	8020380 <__cxa_guard_release>
 8018af6:	4a0f      	ldr	r2, [pc, #60]	; (8018b34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018af8:	490f      	ldr	r1, [pc, #60]	; (8018b38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018afa:	4810      	ldr	r0, [pc, #64]	; (8018b3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018afc:	f007 fc2d 	bl	802035a <__aeabi_atexit>
 8018b00:	4c0f      	ldr	r4, [pc, #60]	; (8018b40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018b02:	7823      	ldrb	r3, [r4, #0]
 8018b04:	f3bf 8f5b 	dmb	ish
 8018b08:	07db      	lsls	r3, r3, #31
 8018b0a:	d40b      	bmi.n	8018b24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018b0c:	4620      	mov	r0, r4
 8018b0e:	f007 fc2b 	bl	8020368 <__cxa_guard_acquire>
 8018b12:	b138      	cbz	r0, 8018b24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018b14:	4620      	mov	r0, r4
 8018b16:	f007 fc33 	bl	8020380 <__cxa_guard_release>
 8018b1a:	4a06      	ldr	r2, [pc, #24]	; (8018b34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018b1c:	4909      	ldr	r1, [pc, #36]	; (8018b44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018b1e:	480a      	ldr	r0, [pc, #40]	; (8018b48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018b20:	f007 fc1b 	bl	802035a <__aeabi_atexit>
 8018b24:	4b05      	ldr	r3, [pc, #20]	; (8018b3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018b26:	62ab      	str	r3, [r5, #40]	; 0x28
 8018b28:	4b07      	ldr	r3, [pc, #28]	; (8018b48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018b2a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018b2c:	bd38      	pop	{r3, r4, r5, pc}
 8018b2e:	bf00      	nop
 8018b30:	200154a0 	.word	0x200154a0
 8018b34:	20000000 	.word	0x20000000
 8018b38:	08016a71 	.word	0x08016a71
 8018b3c:	200000b8 	.word	0x200000b8
 8018b40:	200154a4 	.word	0x200154a4
 8018b44:	08016a6f 	.word	0x08016a6f
 8018b48:	200000bc 	.word	0x200000bc

08018b4c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018b4c:	b510      	push	{r4, lr}
 8018b4e:	4604      	mov	r4, r0
 8018b50:	f7ff ff88 	bl	8018a64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018b54:	4620      	mov	r0, r4
 8018b56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018b5a:	f7ff bfbd 	b.w	8018ad8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018b60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018b60:	b538      	push	{r3, r4, r5, lr}
 8018b62:	4c15      	ldr	r4, [pc, #84]	; (8018bb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018b64:	7823      	ldrb	r3, [r4, #0]
 8018b66:	f3bf 8f5b 	dmb	ish
 8018b6a:	07da      	lsls	r2, r3, #31
 8018b6c:	4605      	mov	r5, r0
 8018b6e:	d40b      	bmi.n	8018b88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018b70:	4620      	mov	r0, r4
 8018b72:	f007 fbf9 	bl	8020368 <__cxa_guard_acquire>
 8018b76:	b138      	cbz	r0, 8018b88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018b78:	4620      	mov	r0, r4
 8018b7a:	f007 fc01 	bl	8020380 <__cxa_guard_release>
 8018b7e:	4a0f      	ldr	r2, [pc, #60]	; (8018bbc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018b80:	490f      	ldr	r1, [pc, #60]	; (8018bc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018b82:	4810      	ldr	r0, [pc, #64]	; (8018bc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018b84:	f007 fbe9 	bl	802035a <__aeabi_atexit>
 8018b88:	4c0f      	ldr	r4, [pc, #60]	; (8018bc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018b8a:	7823      	ldrb	r3, [r4, #0]
 8018b8c:	f3bf 8f5b 	dmb	ish
 8018b90:	07db      	lsls	r3, r3, #31
 8018b92:	d40b      	bmi.n	8018bac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018b94:	4620      	mov	r0, r4
 8018b96:	f007 fbe7 	bl	8020368 <__cxa_guard_acquire>
 8018b9a:	b138      	cbz	r0, 8018bac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018b9c:	4620      	mov	r0, r4
 8018b9e:	f007 fbef 	bl	8020380 <__cxa_guard_release>
 8018ba2:	4a06      	ldr	r2, [pc, #24]	; (8018bbc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018ba4:	4909      	ldr	r1, [pc, #36]	; (8018bcc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018ba6:	480a      	ldr	r0, [pc, #40]	; (8018bd0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018ba8:	f007 fbd7 	bl	802035a <__aeabi_atexit>
 8018bac:	4b05      	ldr	r3, [pc, #20]	; (8018bc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018bae:	652b      	str	r3, [r5, #80]	; 0x50
 8018bb0:	4b07      	ldr	r3, [pc, #28]	; (8018bd0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018bb2:	656b      	str	r3, [r5, #84]	; 0x54
 8018bb4:	bd38      	pop	{r3, r4, r5, pc}
 8018bb6:	bf00      	nop
 8018bb8:	200154d8 	.word	0x200154d8
 8018bbc:	20000000 	.word	0x20000000
 8018bc0:	08016a5d 	.word	0x08016a5d
 8018bc4:	200000f0 	.word	0x200000f0
 8018bc8:	200154dc 	.word	0x200154dc
 8018bcc:	08016a5b 	.word	0x08016a5b
 8018bd0:	200000f4 	.word	0x200000f4

08018bd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018bd4:	b538      	push	{r3, r4, r5, lr}
 8018bd6:	4c15      	ldr	r4, [pc, #84]	; (8018c2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018bd8:	7823      	ldrb	r3, [r4, #0]
 8018bda:	f3bf 8f5b 	dmb	ish
 8018bde:	07da      	lsls	r2, r3, #31
 8018be0:	4605      	mov	r5, r0
 8018be2:	d40b      	bmi.n	8018bfc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018be4:	4620      	mov	r0, r4
 8018be6:	f007 fbbf 	bl	8020368 <__cxa_guard_acquire>
 8018bea:	b138      	cbz	r0, 8018bfc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018bec:	4620      	mov	r0, r4
 8018bee:	f007 fbc7 	bl	8020380 <__cxa_guard_release>
 8018bf2:	4a0f      	ldr	r2, [pc, #60]	; (8018c30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018bf4:	490f      	ldr	r1, [pc, #60]	; (8018c34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018bf6:	4810      	ldr	r0, [pc, #64]	; (8018c38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018bf8:	f007 fbaf 	bl	802035a <__aeabi_atexit>
 8018bfc:	4c0f      	ldr	r4, [pc, #60]	; (8018c3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018bfe:	7823      	ldrb	r3, [r4, #0]
 8018c00:	f3bf 8f5b 	dmb	ish
 8018c04:	07db      	lsls	r3, r3, #31
 8018c06:	d40b      	bmi.n	8018c20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018c08:	4620      	mov	r0, r4
 8018c0a:	f007 fbad 	bl	8020368 <__cxa_guard_acquire>
 8018c0e:	b138      	cbz	r0, 8018c20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018c10:	4620      	mov	r0, r4
 8018c12:	f007 fbb5 	bl	8020380 <__cxa_guard_release>
 8018c16:	4a06      	ldr	r2, [pc, #24]	; (8018c30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018c18:	4909      	ldr	r1, [pc, #36]	; (8018c40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018c1a:	480a      	ldr	r0, [pc, #40]	; (8018c44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018c1c:	f007 fb9d 	bl	802035a <__aeabi_atexit>
 8018c20:	4b05      	ldr	r3, [pc, #20]	; (8018c38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018c22:	64ab      	str	r3, [r5, #72]	; 0x48
 8018c24:	4b07      	ldr	r3, [pc, #28]	; (8018c44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018c26:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018c28:	bd38      	pop	{r3, r4, r5, pc}
 8018c2a:	bf00      	nop
 8018c2c:	200154e0 	.word	0x200154e0
 8018c30:	20000000 	.word	0x20000000
 8018c34:	08016a61 	.word	0x08016a61
 8018c38:	200000f8 	.word	0x200000f8
 8018c3c:	200154e4 	.word	0x200154e4
 8018c40:	08016a5f 	.word	0x08016a5f
 8018c44:	200000fc 	.word	0x200000fc

08018c48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018c48:	b538      	push	{r3, r4, r5, lr}
 8018c4a:	4c15      	ldr	r4, [pc, #84]	; (8018ca0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018c4c:	7823      	ldrb	r3, [r4, #0]
 8018c4e:	f3bf 8f5b 	dmb	ish
 8018c52:	07da      	lsls	r2, r3, #31
 8018c54:	4605      	mov	r5, r0
 8018c56:	d40b      	bmi.n	8018c70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018c58:	4620      	mov	r0, r4
 8018c5a:	f007 fb85 	bl	8020368 <__cxa_guard_acquire>
 8018c5e:	b138      	cbz	r0, 8018c70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018c60:	4620      	mov	r0, r4
 8018c62:	f007 fb8d 	bl	8020380 <__cxa_guard_release>
 8018c66:	4a0f      	ldr	r2, [pc, #60]	; (8018ca4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018c68:	490f      	ldr	r1, [pc, #60]	; (8018ca8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018c6a:	4810      	ldr	r0, [pc, #64]	; (8018cac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018c6c:	f007 fb75 	bl	802035a <__aeabi_atexit>
 8018c70:	4c0f      	ldr	r4, [pc, #60]	; (8018cb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018c72:	7823      	ldrb	r3, [r4, #0]
 8018c74:	f3bf 8f5b 	dmb	ish
 8018c78:	07db      	lsls	r3, r3, #31
 8018c7a:	d40b      	bmi.n	8018c94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018c7c:	4620      	mov	r0, r4
 8018c7e:	f007 fb73 	bl	8020368 <__cxa_guard_acquire>
 8018c82:	b138      	cbz	r0, 8018c94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018c84:	4620      	mov	r0, r4
 8018c86:	f007 fb7b 	bl	8020380 <__cxa_guard_release>
 8018c8a:	4a06      	ldr	r2, [pc, #24]	; (8018ca4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018c8c:	4909      	ldr	r1, [pc, #36]	; (8018cb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018c8e:	480a      	ldr	r0, [pc, #40]	; (8018cb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018c90:	f007 fb63 	bl	802035a <__aeabi_atexit>
 8018c94:	4b05      	ldr	r3, [pc, #20]	; (8018cac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018c96:	642b      	str	r3, [r5, #64]	; 0x40
 8018c98:	4b07      	ldr	r3, [pc, #28]	; (8018cb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018c9a:	646b      	str	r3, [r5, #68]	; 0x44
 8018c9c:	bd38      	pop	{r3, r4, r5, pc}
 8018c9e:	bf00      	nop
 8018ca0:	200154a8 	.word	0x200154a8
 8018ca4:	20000000 	.word	0x20000000
 8018ca8:	08016a65 	.word	0x08016a65
 8018cac:	200000c0 	.word	0x200000c0
 8018cb0:	200154ac 	.word	0x200154ac
 8018cb4:	08016a63 	.word	0x08016a63
 8018cb8:	200000c4 	.word	0x200000c4

08018cbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018cbc:	b538      	push	{r3, r4, r5, lr}
 8018cbe:	4c15      	ldr	r4, [pc, #84]	; (8018d14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018cc0:	7823      	ldrb	r3, [r4, #0]
 8018cc2:	f3bf 8f5b 	dmb	ish
 8018cc6:	07da      	lsls	r2, r3, #31
 8018cc8:	4605      	mov	r5, r0
 8018cca:	d40b      	bmi.n	8018ce4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018ccc:	4620      	mov	r0, r4
 8018cce:	f007 fb4b 	bl	8020368 <__cxa_guard_acquire>
 8018cd2:	b138      	cbz	r0, 8018ce4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018cd4:	4620      	mov	r0, r4
 8018cd6:	f007 fb53 	bl	8020380 <__cxa_guard_release>
 8018cda:	4a0f      	ldr	r2, [pc, #60]	; (8018d18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018cdc:	490f      	ldr	r1, [pc, #60]	; (8018d1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8018cde:	4810      	ldr	r0, [pc, #64]	; (8018d20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018ce0:	f007 fb3b 	bl	802035a <__aeabi_atexit>
 8018ce4:	4c0f      	ldr	r4, [pc, #60]	; (8018d24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018ce6:	7823      	ldrb	r3, [r4, #0]
 8018ce8:	f3bf 8f5b 	dmb	ish
 8018cec:	07db      	lsls	r3, r3, #31
 8018cee:	d40b      	bmi.n	8018d08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018cf0:	4620      	mov	r0, r4
 8018cf2:	f007 fb39 	bl	8020368 <__cxa_guard_acquire>
 8018cf6:	b138      	cbz	r0, 8018d08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018cf8:	4620      	mov	r0, r4
 8018cfa:	f007 fb41 	bl	8020380 <__cxa_guard_release>
 8018cfe:	4a06      	ldr	r2, [pc, #24]	; (8018d18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018d00:	4909      	ldr	r1, [pc, #36]	; (8018d28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018d02:	480a      	ldr	r0, [pc, #40]	; (8018d2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018d04:	f007 fb29 	bl	802035a <__aeabi_atexit>
 8018d08:	4b05      	ldr	r3, [pc, #20]	; (8018d20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018d0a:	63ab      	str	r3, [r5, #56]	; 0x38
 8018d0c:	4b07      	ldr	r3, [pc, #28]	; (8018d2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018d0e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018d10:	bd38      	pop	{r3, r4, r5, pc}
 8018d12:	bf00      	nop
 8018d14:	200154c8 	.word	0x200154c8
 8018d18:	20000000 	.word	0x20000000
 8018d1c:	08016a69 	.word	0x08016a69
 8018d20:	200000e0 	.word	0x200000e0
 8018d24:	200154cc 	.word	0x200154cc
 8018d28:	08016a67 	.word	0x08016a67
 8018d2c:	200000e4 	.word	0x200000e4

08018d30 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018d30:	b510      	push	{r4, lr}
 8018d32:	4604      	mov	r4, r0
 8018d34:	f7ff ff14 	bl	8018b60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018d38:	4620      	mov	r0, r4
 8018d3a:	f7ff ff85 	bl	8018c48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8018d3e:	4620      	mov	r0, r4
 8018d40:	f7ff ff48 	bl	8018bd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8018d44:	4620      	mov	r0, r4
 8018d46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018d4a:	f7ff bfb7 	b.w	8018cbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08018d50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8018d50:	b538      	push	{r3, r4, r5, lr}
 8018d52:	4c15      	ldr	r4, [pc, #84]	; (8018da8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8018d54:	7823      	ldrb	r3, [r4, #0]
 8018d56:	f3bf 8f5b 	dmb	ish
 8018d5a:	07da      	lsls	r2, r3, #31
 8018d5c:	4605      	mov	r5, r0
 8018d5e:	d40b      	bmi.n	8018d78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018d60:	4620      	mov	r0, r4
 8018d62:	f007 fb01 	bl	8020368 <__cxa_guard_acquire>
 8018d66:	b138      	cbz	r0, 8018d78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018d68:	4620      	mov	r0, r4
 8018d6a:	f007 fb09 	bl	8020380 <__cxa_guard_release>
 8018d6e:	4a0f      	ldr	r2, [pc, #60]	; (8018dac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018d70:	490f      	ldr	r1, [pc, #60]	; (8018db0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8018d72:	4810      	ldr	r0, [pc, #64]	; (8018db4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018d74:	f007 faf1 	bl	802035a <__aeabi_atexit>
 8018d78:	4c0f      	ldr	r4, [pc, #60]	; (8018db8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8018d7a:	7823      	ldrb	r3, [r4, #0]
 8018d7c:	f3bf 8f5b 	dmb	ish
 8018d80:	07db      	lsls	r3, r3, #31
 8018d82:	d40b      	bmi.n	8018d9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018d84:	4620      	mov	r0, r4
 8018d86:	f007 faef 	bl	8020368 <__cxa_guard_acquire>
 8018d8a:	b138      	cbz	r0, 8018d9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018d8c:	4620      	mov	r0, r4
 8018d8e:	f007 faf7 	bl	8020380 <__cxa_guard_release>
 8018d92:	4a06      	ldr	r2, [pc, #24]	; (8018dac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018d94:	4909      	ldr	r1, [pc, #36]	; (8018dbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018d96:	480a      	ldr	r0, [pc, #40]	; (8018dc0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018d98:	f007 fadf 	bl	802035a <__aeabi_atexit>
 8018d9c:	4b05      	ldr	r3, [pc, #20]	; (8018db4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018d9e:	662b      	str	r3, [r5, #96]	; 0x60
 8018da0:	4b07      	ldr	r3, [pc, #28]	; (8018dc0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018da2:	666b      	str	r3, [r5, #100]	; 0x64
 8018da4:	bd38      	pop	{r3, r4, r5, pc}
 8018da6:	bf00      	nop
 8018da8:	200154b0 	.word	0x200154b0
 8018dac:	20000000 	.word	0x20000000
 8018db0:	08016a55 	.word	0x08016a55
 8018db4:	200000c8 	.word	0x200000c8
 8018db8:	200154b4 	.word	0x200154b4
 8018dbc:	08016a53 	.word	0x08016a53
 8018dc0:	200000cc 	.word	0x200000cc

08018dc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018dc4:	b538      	push	{r3, r4, r5, lr}
 8018dc6:	4c15      	ldr	r4, [pc, #84]	; (8018e1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018dc8:	7823      	ldrb	r3, [r4, #0]
 8018dca:	f3bf 8f5b 	dmb	ish
 8018dce:	07da      	lsls	r2, r3, #31
 8018dd0:	4605      	mov	r5, r0
 8018dd2:	d40b      	bmi.n	8018dec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018dd4:	4620      	mov	r0, r4
 8018dd6:	f007 fac7 	bl	8020368 <__cxa_guard_acquire>
 8018dda:	b138      	cbz	r0, 8018dec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018ddc:	4620      	mov	r0, r4
 8018dde:	f007 facf 	bl	8020380 <__cxa_guard_release>
 8018de2:	4a0f      	ldr	r2, [pc, #60]	; (8018e20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018de4:	490f      	ldr	r1, [pc, #60]	; (8018e24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018de6:	4810      	ldr	r0, [pc, #64]	; (8018e28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018de8:	f007 fab7 	bl	802035a <__aeabi_atexit>
 8018dec:	4c0f      	ldr	r4, [pc, #60]	; (8018e2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8018dee:	7823      	ldrb	r3, [r4, #0]
 8018df0:	f3bf 8f5b 	dmb	ish
 8018df4:	07db      	lsls	r3, r3, #31
 8018df6:	d40b      	bmi.n	8018e10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018df8:	4620      	mov	r0, r4
 8018dfa:	f007 fab5 	bl	8020368 <__cxa_guard_acquire>
 8018dfe:	b138      	cbz	r0, 8018e10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018e00:	4620      	mov	r0, r4
 8018e02:	f007 fabd 	bl	8020380 <__cxa_guard_release>
 8018e06:	4a06      	ldr	r2, [pc, #24]	; (8018e20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018e08:	4909      	ldr	r1, [pc, #36]	; (8018e30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018e0a:	480a      	ldr	r0, [pc, #40]	; (8018e34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018e0c:	f007 faa5 	bl	802035a <__aeabi_atexit>
 8018e10:	4b05      	ldr	r3, [pc, #20]	; (8018e28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018e12:	65ab      	str	r3, [r5, #88]	; 0x58
 8018e14:	4b07      	ldr	r3, [pc, #28]	; (8018e34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018e16:	65eb      	str	r3, [r5, #92]	; 0x5c
 8018e18:	bd38      	pop	{r3, r4, r5, pc}
 8018e1a:	bf00      	nop
 8018e1c:	20015488 	.word	0x20015488
 8018e20:	20000000 	.word	0x20000000
 8018e24:	08016a59 	.word	0x08016a59
 8018e28:	200000a0 	.word	0x200000a0
 8018e2c:	2001548c 	.word	0x2001548c
 8018e30:	08016a57 	.word	0x08016a57
 8018e34:	200000a4 	.word	0x200000a4

08018e38 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8018e38:	b510      	push	{r4, lr}
 8018e3a:	4604      	mov	r4, r0
 8018e3c:	f7ff ff88 	bl	8018d50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8018e40:	4620      	mov	r0, r4
 8018e42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e46:	f7ff bfbd 	b.w	8018dc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08018e4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8018e4c:	b538      	push	{r3, r4, r5, lr}
 8018e4e:	4c15      	ldr	r4, [pc, #84]	; (8018ea4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8018e50:	7823      	ldrb	r3, [r4, #0]
 8018e52:	f3bf 8f5b 	dmb	ish
 8018e56:	07da      	lsls	r2, r3, #31
 8018e58:	4605      	mov	r5, r0
 8018e5a:	d40b      	bmi.n	8018e74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018e5c:	4620      	mov	r0, r4
 8018e5e:	f007 fa83 	bl	8020368 <__cxa_guard_acquire>
 8018e62:	b138      	cbz	r0, 8018e74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018e64:	4620      	mov	r0, r4
 8018e66:	f007 fa8b 	bl	8020380 <__cxa_guard_release>
 8018e6a:	4a0f      	ldr	r2, [pc, #60]	; (8018ea8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018e6c:	490f      	ldr	r1, [pc, #60]	; (8018eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8018e6e:	4810      	ldr	r0, [pc, #64]	; (8018eb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018e70:	f007 fa73 	bl	802035a <__aeabi_atexit>
 8018e74:	4c0f      	ldr	r4, [pc, #60]	; (8018eb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8018e76:	7823      	ldrb	r3, [r4, #0]
 8018e78:	f3bf 8f5b 	dmb	ish
 8018e7c:	07db      	lsls	r3, r3, #31
 8018e7e:	d40b      	bmi.n	8018e98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018e80:	4620      	mov	r0, r4
 8018e82:	f007 fa71 	bl	8020368 <__cxa_guard_acquire>
 8018e86:	b138      	cbz	r0, 8018e98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018e88:	4620      	mov	r0, r4
 8018e8a:	f007 fa79 	bl	8020380 <__cxa_guard_release>
 8018e8e:	4a06      	ldr	r2, [pc, #24]	; (8018ea8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018e90:	4909      	ldr	r1, [pc, #36]	; (8018eb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8018e92:	480a      	ldr	r0, [pc, #40]	; (8018ebc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018e94:	f007 fa61 	bl	802035a <__aeabi_atexit>
 8018e98:	4b05      	ldr	r3, [pc, #20]	; (8018eb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018e9a:	672b      	str	r3, [r5, #112]	; 0x70
 8018e9c:	4b07      	ldr	r3, [pc, #28]	; (8018ebc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018e9e:	676b      	str	r3, [r5, #116]	; 0x74
 8018ea0:	bd38      	pop	{r3, r4, r5, pc}
 8018ea2:	bf00      	nop
 8018ea4:	20015480 	.word	0x20015480
 8018ea8:	20000000 	.word	0x20000000
 8018eac:	08016a4d 	.word	0x08016a4d
 8018eb0:	20000098 	.word	0x20000098
 8018eb4:	20015484 	.word	0x20015484
 8018eb8:	08016a4b 	.word	0x08016a4b
 8018ebc:	2000009c 	.word	0x2000009c

08018ec0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8018ec0:	b538      	push	{r3, r4, r5, lr}
 8018ec2:	4c15      	ldr	r4, [pc, #84]	; (8018f18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8018ec4:	7823      	ldrb	r3, [r4, #0]
 8018ec6:	f3bf 8f5b 	dmb	ish
 8018eca:	07da      	lsls	r2, r3, #31
 8018ecc:	4605      	mov	r5, r0
 8018ece:	d40b      	bmi.n	8018ee8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018ed0:	4620      	mov	r0, r4
 8018ed2:	f007 fa49 	bl	8020368 <__cxa_guard_acquire>
 8018ed6:	b138      	cbz	r0, 8018ee8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018ed8:	4620      	mov	r0, r4
 8018eda:	f007 fa51 	bl	8020380 <__cxa_guard_release>
 8018ede:	4a0f      	ldr	r2, [pc, #60]	; (8018f1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018ee0:	490f      	ldr	r1, [pc, #60]	; (8018f20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8018ee2:	4810      	ldr	r0, [pc, #64]	; (8018f24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018ee4:	f007 fa39 	bl	802035a <__aeabi_atexit>
 8018ee8:	4c0f      	ldr	r4, [pc, #60]	; (8018f28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8018eea:	7823      	ldrb	r3, [r4, #0]
 8018eec:	f3bf 8f5b 	dmb	ish
 8018ef0:	07db      	lsls	r3, r3, #31
 8018ef2:	d40b      	bmi.n	8018f0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018ef4:	4620      	mov	r0, r4
 8018ef6:	f007 fa37 	bl	8020368 <__cxa_guard_acquire>
 8018efa:	b138      	cbz	r0, 8018f0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018efc:	4620      	mov	r0, r4
 8018efe:	f007 fa3f 	bl	8020380 <__cxa_guard_release>
 8018f02:	4a06      	ldr	r2, [pc, #24]	; (8018f1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018f04:	4909      	ldr	r1, [pc, #36]	; (8018f2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8018f06:	480a      	ldr	r0, [pc, #40]	; (8018f30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018f08:	f007 fa27 	bl	802035a <__aeabi_atexit>
 8018f0c:	4b05      	ldr	r3, [pc, #20]	; (8018f24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018f0e:	66ab      	str	r3, [r5, #104]	; 0x68
 8018f10:	4b07      	ldr	r3, [pc, #28]	; (8018f30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018f12:	66eb      	str	r3, [r5, #108]	; 0x6c
 8018f14:	bd38      	pop	{r3, r4, r5, pc}
 8018f16:	bf00      	nop
 8018f18:	20015478 	.word	0x20015478
 8018f1c:	20000000 	.word	0x20000000
 8018f20:	08016a51 	.word	0x08016a51
 8018f24:	20000090 	.word	0x20000090
 8018f28:	2001547c 	.word	0x2001547c
 8018f2c:	08016a4f 	.word	0x08016a4f
 8018f30:	20000094 	.word	0x20000094

08018f34 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8018f34:	b510      	push	{r4, lr}
 8018f36:	4604      	mov	r4, r0
 8018f38:	f7ff ff88 	bl	8018e4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8018f3c:	4620      	mov	r0, r4
 8018f3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f42:	f7ff bfbd 	b.w	8018ec0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08018f46 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8018f46:	b510      	push	{r4, lr}
 8018f48:	4604      	mov	r4, r0
 8018f4a:	f7ff fff3 	bl	8018f34 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8018f4e:	4620      	mov	r0, r4
 8018f50:	f7ff ff72 	bl	8018e38 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8018f54:	4620      	mov	r0, r4
 8018f56:	f7ff fdf9 	bl	8018b4c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8018f5a:	4620      	mov	r0, r4
 8018f5c:	f7ff fcfa 	bl	8018954 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8018f60:	4620      	mov	r0, r4
 8018f62:	f7ff fd75 	bl	8018a50 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8018f66:	4620      	mov	r0, r4
 8018f68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f6c:	f7ff bee0 	b.w	8018d30 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08018f70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8018f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f74:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8018f78:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8018f7c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8018f80:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8018f84:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8018f88:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8018f8c:	8808      	ldrh	r0, [r1, #0]
 8018f8e:	fb05 4c0e 	mla	ip, r5, lr, r4
 8018f92:	2d00      	cmp	r5, #0
 8018f94:	eb02 0a0c 	add.w	sl, r2, ip
 8018f98:	f2c0 80b0 	blt.w	80190fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8018f9c:	45ab      	cmp	fp, r5
 8018f9e:	f340 80ad 	ble.w	80190fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8018fa2:	2c00      	cmp	r4, #0
 8018fa4:	f2c0 80a8 	blt.w	80190f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8018fa8:	45a6      	cmp	lr, r4
 8018faa:	f340 80a5 	ble.w	80190f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8018fae:	f812 200c 	ldrb.w	r2, [r2, ip]
 8018fb2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8018fb6:	1c62      	adds	r2, r4, #1
 8018fb8:	f100 80a3 	bmi.w	8019102 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018fbc:	4596      	cmp	lr, r2
 8018fbe:	f340 80a0 	ble.w	8019102 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018fc2:	f1b9 0f00 	cmp.w	r9, #0
 8018fc6:	f000 809c 	beq.w	8019102 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018fca:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8018fce:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8018fd2:	3501      	adds	r5, #1
 8018fd4:	f100 8099 	bmi.w	801910a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018fd8:	45ab      	cmp	fp, r5
 8018fda:	f340 8096 	ble.w	801910a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018fde:	2f00      	cmp	r7, #0
 8018fe0:	f000 8093 	beq.w	801910a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018fe4:	2c00      	cmp	r4, #0
 8018fe6:	f2c0 808e 	blt.w	8019106 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8018fea:	45a6      	cmp	lr, r4
 8018fec:	f340 808b 	ble.w	8019106 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8018ff0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8018ff4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8018ff8:	3401      	adds	r4, #1
 8018ffa:	f100 8089 	bmi.w	8019110 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8018ffe:	45a6      	cmp	lr, r4
 8019000:	f340 8086 	ble.w	8019110 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019004:	f1b9 0f00 	cmp.w	r9, #0
 8019008:	f000 8082 	beq.w	8019110 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801900c:	44d6      	add	lr, sl
 801900e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019012:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019016:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801901a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801901e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019022:	fb19 fe07 	smulbb	lr, r9, r7
 8019026:	ea44 0808 	orr.w	r8, r4, r8
 801902a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801902e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019032:	f1c7 0210 	rsb	r2, r7, #16
 8019036:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801903a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801903e:	ea44 0c0c 	orr.w	ip, r4, ip
 8019042:	eba2 0209 	sub.w	r2, r2, r9
 8019046:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801904a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801904e:	fb04 f40c 	mul.w	r4, r4, ip
 8019052:	fb02 4808 	mla	r8, r2, r8, r4
 8019056:	041a      	lsls	r2, r3, #16
 8019058:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801905c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019060:	4313      	orrs	r3, r2
 8019062:	042a      	lsls	r2, r5, #16
 8019064:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019068:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801906c:	fb0e 8303 	mla	r3, lr, r3, r8
 8019070:	432a      	orrs	r2, r5
 8019072:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019076:	fb07 3202 	mla	r2, r7, r2, r3
 801907a:	0d53      	lsrs	r3, r2, #21
 801907c:	0952      	lsrs	r2, r2, #5
 801907e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019082:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019086:	431a      	orrs	r2, r3
 8019088:	b293      	uxth	r3, r2
 801908a:	b2b4      	uxth	r4, r6
 801908c:	1202      	asrs	r2, r0, #8
 801908e:	43f6      	mvns	r6, r6
 8019090:	b2f6      	uxtb	r6, r6
 8019092:	121d      	asrs	r5, r3, #8
 8019094:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019098:	fb12 f206 	smulbb	r2, r2, r6
 801909c:	10c7      	asrs	r7, r0, #3
 801909e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80190a2:	00c0      	lsls	r0, r0, #3
 80190a4:	fb05 2504 	mla	r5, r5, r4, r2
 80190a8:	b2c0      	uxtb	r0, r0
 80190aa:	10da      	asrs	r2, r3, #3
 80190ac:	00db      	lsls	r3, r3, #3
 80190ae:	b2db      	uxtb	r3, r3
 80190b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80190b4:	fb10 f006 	smulbb	r0, r0, r6
 80190b8:	b2ad      	uxth	r5, r5
 80190ba:	fb03 0004 	mla	r0, r3, r4, r0
 80190be:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80190c2:	fb17 f706 	smulbb	r7, r7, r6
 80190c6:	b280      	uxth	r0, r0
 80190c8:	1c6b      	adds	r3, r5, #1
 80190ca:	fb02 7204 	mla	r2, r2, r4, r7
 80190ce:	b292      	uxth	r2, r2
 80190d0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80190d4:	1c43      	adds	r3, r0, #1
 80190d6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80190da:	1c50      	adds	r0, r2, #1
 80190dc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80190e0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80190e4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80190e8:	0952      	lsrs	r2, r2, #5
 80190ea:	432b      	orrs	r3, r5
 80190ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80190f0:	4313      	orrs	r3, r2
 80190f2:	800b      	strh	r3, [r1, #0]
 80190f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190f8:	4680      	mov	r8, r0
 80190fa:	e75c      	b.n	8018fb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80190fc:	4684      	mov	ip, r0
 80190fe:	4680      	mov	r8, r0
 8019100:	e767      	b.n	8018fd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019102:	4684      	mov	ip, r0
 8019104:	e765      	b.n	8018fd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019106:	4605      	mov	r5, r0
 8019108:	e776      	b.n	8018ff8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801910a:	4603      	mov	r3, r0
 801910c:	4605      	mov	r5, r0
 801910e:	e782      	b.n	8019016 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019110:	4603      	mov	r3, r0
 8019112:	e780      	b.n	8019016 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019118:	b099      	sub	sp, #100	; 0x64
 801911a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801911e:	9215      	str	r2, [sp, #84]	; 0x54
 8019120:	9309      	str	r3, [sp, #36]	; 0x24
 8019122:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019124:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8019128:	930d      	str	r3, [sp, #52]	; 0x34
 801912a:	910c      	str	r1, [sp, #48]	; 0x30
 801912c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019130:	9016      	str	r0, [sp, #88]	; 0x58
 8019132:	6850      	ldr	r0, [r2, #4]
 8019134:	6812      	ldr	r2, [r2, #0]
 8019136:	fb00 1303 	mla	r3, r0, r3, r1
 801913a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801913e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019140:	681b      	ldr	r3, [r3, #0]
 8019142:	930b      	str	r3, [sp, #44]	; 0x2c
 8019144:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019146:	685e      	ldr	r6, [r3, #4]
 8019148:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801914a:	43db      	mvns	r3, r3
 801914c:	b2db      	uxtb	r3, r3
 801914e:	3604      	adds	r6, #4
 8019150:	930a      	str	r3, [sp, #40]	; 0x28
 8019152:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019154:	2b00      	cmp	r3, #0
 8019156:	dc03      	bgt.n	8019160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019158:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801915a:	2b00      	cmp	r3, #0
 801915c:	f340 8225 	ble.w	80195aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019160:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019162:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019166:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801916a:	1e48      	subs	r0, r1, #1
 801916c:	1e57      	subs	r7, r2, #1
 801916e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019170:	2b00      	cmp	r3, #0
 8019172:	f340 80e3 	ble.w	801933c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019176:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801917a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801917e:	d406      	bmi.n	801918e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019180:	4584      	cmp	ip, r0
 8019182:	da04      	bge.n	801918e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019184:	2b00      	cmp	r3, #0
 8019186:	db02      	blt.n	801918e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019188:	42bb      	cmp	r3, r7
 801918a:	f2c0 80d8 	blt.w	801933e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801918e:	f11c 0c01 	adds.w	ip, ip, #1
 8019192:	f100 80c9 	bmi.w	8019328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019196:	4561      	cmp	r1, ip
 8019198:	f2c0 80c6 	blt.w	8019328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801919c:	3301      	adds	r3, #1
 801919e:	f100 80c3 	bmi.w	8019328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80191a2:	429a      	cmp	r2, r3
 80191a4:	f2c0 80c0 	blt.w	8019328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80191a8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80191ac:	4647      	mov	r7, r8
 80191ae:	f1bb 0f00 	cmp.w	fp, #0
 80191b2:	f340 80e3 	ble.w	801937c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80191b6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80191b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80191ba:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80191be:	689b      	ldr	r3, [r3, #8]
 80191c0:	ea5f 422a 	movs.w	r2, sl, asr #16
 80191c4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80191c8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80191cc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80191d0:	f100 8121 	bmi.w	8019416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80191d4:	f103 39ff 	add.w	r9, r3, #4294967295
 80191d8:	454a      	cmp	r2, r9
 80191da:	f280 811c 	bge.w	8019416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80191de:	f1bc 0f00 	cmp.w	ip, #0
 80191e2:	f2c0 8118 	blt.w	8019416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80191e6:	f10e 39ff 	add.w	r9, lr, #4294967295
 80191ea:	45cc      	cmp	ip, r9
 80191ec:	f280 8113 	bge.w	8019416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80191f0:	b21b      	sxth	r3, r3
 80191f2:	fb0c 2203 	mla	r2, ip, r3, r2
 80191f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80191f8:	eb04 0902 	add.w	r9, r4, r2
 80191fc:	5ca2      	ldrb	r2, [r4, r2]
 80191fe:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019202:	2800      	cmp	r0, #0
 8019204:	f000 80fe 	beq.w	8019404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019208:	f899 2001 	ldrb.w	r2, [r9, #1]
 801920c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019210:	9211      	str	r2, [sp, #68]	; 0x44
 8019212:	b151      	cbz	r1, 801922a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019214:	eb09 0203 	add.w	r2, r9, r3
 8019218:	f819 3003 	ldrb.w	r3, [r9, r3]
 801921c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019220:	930f      	str	r3, [sp, #60]	; 0x3c
 8019222:	7853      	ldrb	r3, [r2, #1]
 8019224:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019228:	9312      	str	r3, [sp, #72]	; 0x48
 801922a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801922c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801922e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019232:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019236:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801923a:	ea4c 0c03 	orr.w	ip, ip, r3
 801923e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019240:	041b      	lsls	r3, r3, #16
 8019242:	fb10 f201 	smulbb	r2, r0, r1
 8019246:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801924a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801924e:	10d2      	asrs	r2, r2, #3
 8019250:	4323      	orrs	r3, r4
 8019252:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019256:	4353      	muls	r3, r2
 8019258:	fb09 330c 	mla	r3, r9, ip, r3
 801925c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019260:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019264:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019268:	ea4c 0e0e 	orr.w	lr, ip, lr
 801926c:	f1c1 0c10 	rsb	ip, r1, #16
 8019270:	ebac 0c00 	sub.w	ip, ip, r0
 8019274:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019278:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801927c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801927e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019280:	0418      	lsls	r0, r3, #16
 8019282:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019286:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801928a:	4318      	orrs	r0, r3
 801928c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019290:	fb02 c200 	mla	r2, r2, r0, ip
 8019294:	0d53      	lsrs	r3, r2, #21
 8019296:	0952      	lsrs	r2, r2, #5
 8019298:	8838      	ldrh	r0, [r7, #0]
 801929a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801929e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80192a2:	431a      	orrs	r2, r3
 80192a4:	b292      	uxth	r2, r2
 80192a6:	1201      	asrs	r1, r0, #8
 80192a8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80192ac:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80192b0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80192b4:	fb11 f104 	smulbb	r1, r1, r4
 80192b8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80192bc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80192c0:	00c0      	lsls	r0, r0, #3
 80192c2:	fb0c 1c03 	mla	ip, ip, r3, r1
 80192c6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80192ca:	10d1      	asrs	r1, r2, #3
 80192cc:	b2c0      	uxtb	r0, r0
 80192ce:	00d2      	lsls	r2, r2, #3
 80192d0:	b2d2      	uxtb	r2, r2
 80192d2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80192d6:	fb1e fe04 	smulbb	lr, lr, r4
 80192da:	fb10 f004 	smulbb	r0, r0, r4
 80192de:	fa1f fc8c 	uxth.w	ip, ip
 80192e2:	fb01 e103 	mla	r1, r1, r3, lr
 80192e6:	fb02 0303 	mla	r3, r2, r3, r0
 80192ea:	b29a      	uxth	r2, r3
 80192ec:	f10c 0301 	add.w	r3, ip, #1
 80192f0:	b289      	uxth	r1, r1
 80192f2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80192f6:	1c53      	adds	r3, r2, #1
 80192f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80192fc:	1c4a      	adds	r2, r1, #1
 80192fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019302:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019306:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801930a:	0949      	lsrs	r1, r1, #5
 801930c:	ea43 030c 	orr.w	r3, r3, ip
 8019310:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019314:	430b      	orrs	r3, r1
 8019316:	803b      	strh	r3, [r7, #0]
 8019318:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801931a:	449a      	add	sl, r3
 801931c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801931e:	3702      	adds	r7, #2
 8019320:	441d      	add	r5, r3
 8019322:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019326:	e742      	b.n	80191ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019328:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801932a:	449a      	add	sl, r3
 801932c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801932e:	441d      	add	r5, r3
 8019330:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019332:	3b01      	subs	r3, #1
 8019334:	9309      	str	r3, [sp, #36]	; 0x24
 8019336:	f108 0802 	add.w	r8, r8, #2
 801933a:	e718      	b.n	801916e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801933c:	d023      	beq.n	8019386 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801933e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019340:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019342:	3b01      	subs	r3, #1
 8019344:	fb00 a003 	mla	r0, r0, r3, sl
 8019348:	1400      	asrs	r0, r0, #16
 801934a:	f53f af2d 	bmi.w	80191a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801934e:	3901      	subs	r1, #1
 8019350:	4288      	cmp	r0, r1
 8019352:	f6bf af29 	bge.w	80191a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019356:	9926      	ldr	r1, [sp, #152]	; 0x98
 8019358:	fb01 5303 	mla	r3, r1, r3, r5
 801935c:	141b      	asrs	r3, r3, #16
 801935e:	f53f af23 	bmi.w	80191a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019362:	3a01      	subs	r2, #1
 8019364:	4293      	cmp	r3, r2
 8019366:	f6bf af1f 	bge.w	80191a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801936a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801936e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8019372:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8019376:	f1be 0f00 	cmp.w	lr, #0
 801937a:	dc6c      	bgt.n	8019456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801937c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801937e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019382:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019386:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019388:	2b00      	cmp	r3, #0
 801938a:	f340 810e 	ble.w	80195aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801938e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019392:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019396:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801939a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801939c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80193a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80193a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80193a8:	eef0 6a62 	vmov.f32	s13, s5
 80193ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80193b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80193b8:	ee16 aa90 	vmov	sl, s13
 80193bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80193c0:	eef0 6a43 	vmov.f32	s13, s6
 80193c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80193c8:	ee12 2a90 	vmov	r2, s5
 80193cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80193d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80193d4:	ee13 2a10 	vmov	r2, s6
 80193d8:	9325      	str	r3, [sp, #148]	; 0x94
 80193da:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80193dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80193e0:	9326      	str	r3, [sp, #152]	; 0x98
 80193e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80193e4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80193e6:	3b01      	subs	r3, #1
 80193e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193ec:	930c      	str	r3, [sp, #48]	; 0x30
 80193ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80193f0:	bf08      	it	eq
 80193f2:	4613      	moveq	r3, r2
 80193f4:	ee16 5a90 	vmov	r5, s13
 80193f8:	9309      	str	r3, [sp, #36]	; 0x24
 80193fa:	eeb0 3a67 	vmov.f32	s6, s15
 80193fe:	eef0 2a47 	vmov.f32	s5, s14
 8019402:	e6a6      	b.n	8019152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019404:	2900      	cmp	r1, #0
 8019406:	f43f af10 	beq.w	801922a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801940a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801940e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019412:	930f      	str	r3, [sp, #60]	; 0x3c
 8019414:	e709      	b.n	801922a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019416:	f112 0901 	adds.w	r9, r2, #1
 801941a:	f53f af7d 	bmi.w	8019318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801941e:	454b      	cmp	r3, r9
 8019420:	f6ff af7a 	blt.w	8019318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019424:	f11c 0901 	adds.w	r9, ip, #1
 8019428:	f53f af76 	bmi.w	8019318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801942c:	45ce      	cmp	lr, r9
 801942e:	f6ff af73 	blt.w	8019318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019432:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019434:	9202      	str	r2, [sp, #8]
 8019436:	b21b      	sxth	r3, r3
 8019438:	fa0f f28e 	sxth.w	r2, lr
 801943c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019440:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019444:	9201      	str	r2, [sp, #4]
 8019446:	9300      	str	r3, [sp, #0]
 8019448:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801944a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801944c:	4633      	mov	r3, r6
 801944e:	4639      	mov	r1, r7
 8019450:	f7ff fd8e 	bl	8018f70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019454:	e760      	b.n	8019318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019456:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019458:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801945a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801945e:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019462:	1429      	asrs	r1, r5, #16
 8019464:	fb03 2101 	mla	r1, r3, r1, r2
 8019468:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801946a:	440a      	add	r2, r1
 801946c:	5c61      	ldrb	r1, [r4, r1]
 801946e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019472:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019476:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801947a:	f1bc 0f00 	cmp.w	ip, #0
 801947e:	f000 808c 	beq.w	801959a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019482:	7857      	ldrb	r7, [r2, #1]
 8019484:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019488:	9413      	str	r4, [sp, #76]	; 0x4c
 801948a:	b140      	cbz	r0, 801949e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801948c:	18d7      	adds	r7, r2, r3
 801948e:	5cd3      	ldrb	r3, [r2, r3]
 8019490:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019494:	9310      	str	r3, [sp, #64]	; 0x40
 8019496:	787b      	ldrb	r3, [r7, #1]
 8019498:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801949c:	9314      	str	r3, [sp, #80]	; 0x50
 801949e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80194a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80194a2:	fb1c f200 	smulbb	r2, ip, r0
 80194a6:	041f      	lsls	r7, r3, #16
 80194a8:	10d2      	asrs	r2, r2, #3
 80194aa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80194ae:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80194b2:	431f      	orrs	r7, r3
 80194b4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80194b8:	9317      	str	r3, [sp, #92]	; 0x5c
 80194ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80194bc:	041b      	lsls	r3, r3, #16
 80194be:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80194c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80194c6:	ea43 030b 	orr.w	r3, r3, fp
 80194ca:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80194cc:	4353      	muls	r3, r2
 80194ce:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80194d2:	fb04 3707 	mla	r7, r4, r7, r3
 80194d6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80194da:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80194de:	ea43 0b01 	orr.w	fp, r3, r1
 80194e2:	f1c0 0110 	rsb	r1, r0, #16
 80194e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80194ea:	eba1 0c0c 	sub.w	ip, r1, ip
 80194ee:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80194f2:	fb0c 770b 	mla	r7, ip, fp, r7
 80194f6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80194fa:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80194fe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019502:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019506:	ea4c 0c0b 	orr.w	ip, ip, fp
 801950a:	fb02 770c 	mla	r7, r2, ip, r7
 801950e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019510:	0d79      	lsrs	r1, r7, #21
 8019512:	097f      	lsrs	r7, r7, #5
 8019514:	8812      	ldrh	r2, [r2, #0]
 8019516:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801951a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801951e:	430f      	orrs	r7, r1
 8019520:	b2bb      	uxth	r3, r7
 8019522:	1211      	asrs	r1, r2, #8
 8019524:	1218      	asrs	r0, r3, #8
 8019526:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801952a:	fb11 f104 	smulbb	r1, r1, r4
 801952e:	10d7      	asrs	r7, r2, #3
 8019530:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019534:	00d2      	lsls	r2, r2, #3
 8019536:	fb00 1009 	mla	r0, r0, r9, r1
 801953a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801953e:	10d9      	asrs	r1, r3, #3
 8019540:	b2d2      	uxtb	r2, r2
 8019542:	00db      	lsls	r3, r3, #3
 8019544:	fb17 f704 	smulbb	r7, r7, r4
 8019548:	fb12 f204 	smulbb	r2, r2, r4
 801954c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019550:	b2db      	uxtb	r3, r3
 8019552:	b280      	uxth	r0, r0
 8019554:	fb01 7109 	mla	r1, r1, r9, r7
 8019558:	fb03 2309 	mla	r3, r3, r9, r2
 801955c:	b29b      	uxth	r3, r3
 801955e:	b289      	uxth	r1, r1
 8019560:	1c42      	adds	r2, r0, #1
 8019562:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019566:	1c4f      	adds	r7, r1, #1
 8019568:	1c5a      	adds	r2, r3, #1
 801956a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801956e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019572:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019576:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801957a:	0949      	lsrs	r1, r1, #5
 801957c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801957e:	4310      	orrs	r0, r2
 8019580:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019584:	4308      	orrs	r0, r1
 8019586:	f823 0b02 	strh.w	r0, [r3], #2
 801958a:	930e      	str	r3, [sp, #56]	; 0x38
 801958c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801958e:	449a      	add	sl, r3
 8019590:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019592:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019596:	441d      	add	r5, r3
 8019598:	e6ed      	b.n	8019376 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801959a:	2800      	cmp	r0, #0
 801959c:	f43f af7f 	beq.w	801949e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80195a0:	5cd3      	ldrb	r3, [r2, r3]
 80195a2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80195a6:	9310      	str	r3, [sp, #64]	; 0x40
 80195a8:	e779      	b.n	801949e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80195aa:	b019      	add	sp, #100	; 0x64
 80195ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080195b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80195b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80195b4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80195b8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80195bc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80195c0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80195c4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80195c8:	8808      	ldrh	r0, [r1, #0]
 80195ca:	fb08 470e 	mla	r7, r8, lr, r4
 80195ce:	f1b8 0f00 	cmp.w	r8, #0
 80195d2:	eb02 0907 	add.w	r9, r2, r7
 80195d6:	db67      	blt.n	80196a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80195d8:	45c2      	cmp	sl, r8
 80195da:	dd65      	ble.n	80196a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80195dc:	2c00      	cmp	r4, #0
 80195de:	db61      	blt.n	80196a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80195e0:	45a6      	cmp	lr, r4
 80195e2:	dd5f      	ble.n	80196a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80195e4:	5dd2      	ldrb	r2, [r2, r7]
 80195e6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80195ea:	1c62      	adds	r2, r4, #1
 80195ec:	d45f      	bmi.n	80196ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80195ee:	4596      	cmp	lr, r2
 80195f0:	dd5d      	ble.n	80196ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80195f2:	2d00      	cmp	r5, #0
 80195f4:	d05b      	beq.n	80196ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80195f6:	f899 2001 	ldrb.w	r2, [r9, #1]
 80195fa:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80195fe:	f118 0801 	adds.w	r8, r8, #1
 8019602:	d458      	bmi.n	80196b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019604:	45c2      	cmp	sl, r8
 8019606:	dd56      	ble.n	80196b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019608:	2e00      	cmp	r6, #0
 801960a:	d054      	beq.n	80196b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801960c:	2c00      	cmp	r4, #0
 801960e:	db50      	blt.n	80196b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019610:	45a6      	cmp	lr, r4
 8019612:	dd4e      	ble.n	80196b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019614:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019618:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801961c:	3401      	adds	r4, #1
 801961e:	d407      	bmi.n	8019630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019620:	45a6      	cmp	lr, r4
 8019622:	dd05      	ble.n	8019630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019624:	b125      	cbz	r5, 8019630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019626:	44ce      	add	lr, r9
 8019628:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801962c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019630:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019634:	fb15 f406 	smulbb	r4, r5, r6
 8019638:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801963c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019640:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019644:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019648:	ea43 0c0c 	orr.w	ip, r3, ip
 801964c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019650:	f1c6 0310 	rsb	r3, r6, #16
 8019654:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019658:	1b5b      	subs	r3, r3, r5
 801965a:	ea4e 0707 	orr.w	r7, lr, r7
 801965e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019662:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019666:	437d      	muls	r5, r7
 8019668:	fb03 5c0c 	mla	ip, r3, ip, r5
 801966c:	0403      	lsls	r3, r0, #16
 801966e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019672:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019676:	4318      	orrs	r0, r3
 8019678:	0413      	lsls	r3, r2, #16
 801967a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801967e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019682:	4313      	orrs	r3, r2
 8019684:	fb04 c000 	mla	r0, r4, r0, ip
 8019688:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801968c:	fb06 0003 	mla	r0, r6, r3, r0
 8019690:	0d43      	lsrs	r3, r0, #21
 8019692:	0940      	lsrs	r0, r0, #5
 8019694:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019698:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801969c:	4318      	orrs	r0, r3
 801969e:	8008      	strh	r0, [r1, #0]
 80196a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80196a4:	4684      	mov	ip, r0
 80196a6:	e7a0      	b.n	80195ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80196a8:	4607      	mov	r7, r0
 80196aa:	4684      	mov	ip, r0
 80196ac:	e7a7      	b.n	80195fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80196ae:	4607      	mov	r7, r0
 80196b0:	e7a5      	b.n	80195fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80196b2:	4602      	mov	r2, r0
 80196b4:	e7b2      	b.n	801961c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80196b6:	4602      	mov	r2, r0
 80196b8:	e7ba      	b.n	8019630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080196ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80196ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196be:	b093      	sub	sp, #76	; 0x4c
 80196c0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80196c4:	920f      	str	r2, [sp, #60]	; 0x3c
 80196c6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80196c8:	9108      	str	r1, [sp, #32]
 80196ca:	9306      	str	r3, [sp, #24]
 80196cc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80196d0:	9010      	str	r0, [sp, #64]	; 0x40
 80196d2:	6850      	ldr	r0, [r2, #4]
 80196d4:	6812      	ldr	r2, [r2, #0]
 80196d6:	fb00 1303 	mla	r3, r0, r3, r1
 80196da:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80196de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80196e0:	681b      	ldr	r3, [r3, #0]
 80196e2:	9307      	str	r3, [sp, #28]
 80196e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80196e6:	685f      	ldr	r7, [r3, #4]
 80196e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80196ec:	3704      	adds	r7, #4
 80196ee:	9b08      	ldr	r3, [sp, #32]
 80196f0:	2b00      	cmp	r3, #0
 80196f2:	dc03      	bgt.n	80196fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80196f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80196f6:	2b00      	cmp	r3, #0
 80196f8:	f340 81b2 	ble.w	8019a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80196fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80196fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019702:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019706:	1e48      	subs	r0, r1, #1
 8019708:	f102 3cff 	add.w	ip, r2, #4294967295
 801970c:	9b06      	ldr	r3, [sp, #24]
 801970e:	2b00      	cmp	r3, #0
 8019710:	f340 80a9 	ble.w	8019866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019714:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019718:	ea4f 4326 	mov.w	r3, r6, asr #16
 801971c:	d406      	bmi.n	801972c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801971e:	4586      	cmp	lr, r0
 8019720:	da04      	bge.n	801972c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019722:	2b00      	cmp	r3, #0
 8019724:	db02      	blt.n	801972c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019726:	4563      	cmp	r3, ip
 8019728:	f2c0 809e 	blt.w	8019868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801972c:	f11e 0e01 	adds.w	lr, lr, #1
 8019730:	f100 808f 	bmi.w	8019852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019734:	4571      	cmp	r1, lr
 8019736:	f2c0 808c 	blt.w	8019852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801973a:	3301      	adds	r3, #1
 801973c:	f100 8089 	bmi.w	8019852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019740:	429a      	cmp	r2, r3
 8019742:	f2c0 8086 	blt.w	8019852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019746:	f8dd b018 	ldr.w	fp, [sp, #24]
 801974a:	46c8      	mov	r8, r9
 801974c:	f1bb 0f00 	cmp.w	fp, #0
 8019750:	f340 80a6 	ble.w	80198a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019754:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019756:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019758:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801975c:	689b      	ldr	r3, [r3, #8]
 801975e:	1422      	asrs	r2, r4, #16
 8019760:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019764:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019768:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801976c:	f100 80e3 	bmi.w	8019936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019770:	f103 3aff 	add.w	sl, r3, #4294967295
 8019774:	4552      	cmp	r2, sl
 8019776:	f280 80de 	bge.w	8019936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801977a:	f1bc 0f00 	cmp.w	ip, #0
 801977e:	f2c0 80da 	blt.w	8019936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019782:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019786:	45d4      	cmp	ip, sl
 8019788:	f280 80d5 	bge.w	8019936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801978c:	b21b      	sxth	r3, r3
 801978e:	fb0c 2203 	mla	r2, ip, r3, r2
 8019792:	9d07      	ldr	r5, [sp, #28]
 8019794:	eb05 0a02 	add.w	sl, r5, r2
 8019798:	5caa      	ldrb	r2, [r5, r2]
 801979a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801979e:	2800      	cmp	r0, #0
 80197a0:	f000 80c0 	beq.w	8019924 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80197a4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80197a8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80197ac:	920b      	str	r2, [sp, #44]	; 0x2c
 80197ae:	b151      	cbz	r1, 80197c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80197b0:	eb0a 0203 	add.w	r2, sl, r3
 80197b4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80197b8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80197bc:	9309      	str	r3, [sp, #36]	; 0x24
 80197be:	7853      	ldrb	r3, [r2, #1]
 80197c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80197c4:	930c      	str	r3, [sp, #48]	; 0x30
 80197c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80197c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80197ca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80197ce:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80197d2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80197d6:	ea4c 0c03 	orr.w	ip, ip, r3
 80197da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80197dc:	041b      	lsls	r3, r3, #16
 80197de:	fb10 f201 	smulbb	r2, r0, r1
 80197e2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80197e6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80197ea:	10d2      	asrs	r2, r2, #3
 80197ec:	432b      	orrs	r3, r5
 80197ee:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80197f2:	4353      	muls	r3, r2
 80197f4:	fb0a 330c 	mla	r3, sl, ip, r3
 80197f8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80197fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019800:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019804:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019808:	f1c1 0c10 	rsb	ip, r1, #16
 801980c:	ebac 0c00 	sub.w	ip, ip, r0
 8019810:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019814:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019818:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801981a:	0418      	lsls	r0, r3, #16
 801981c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019820:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019824:	4318      	orrs	r0, r3
 8019826:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801982a:	fb02 c200 	mla	r2, r2, r0, ip
 801982e:	0d53      	lsrs	r3, r2, #21
 8019830:	0952      	lsrs	r2, r2, #5
 8019832:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019836:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801983a:	431a      	orrs	r2, r3
 801983c:	f8a8 2000 	strh.w	r2, [r8]
 8019840:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019842:	441c      	add	r4, r3
 8019844:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019846:	f108 0802 	add.w	r8, r8, #2
 801984a:	441e      	add	r6, r3
 801984c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019850:	e77c      	b.n	801974c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019852:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019854:	441c      	add	r4, r3
 8019856:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019858:	441e      	add	r6, r3
 801985a:	9b06      	ldr	r3, [sp, #24]
 801985c:	3b01      	subs	r3, #1
 801985e:	9306      	str	r3, [sp, #24]
 8019860:	f109 0902 	add.w	r9, r9, #2
 8019864:	e752      	b.n	801970c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019866:	d020      	beq.n	80198aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019868:	9b06      	ldr	r3, [sp, #24]
 801986a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801986c:	3b01      	subs	r3, #1
 801986e:	fb00 4003 	mla	r0, r0, r3, r4
 8019872:	1400      	asrs	r0, r0, #16
 8019874:	f53f af67 	bmi.w	8019746 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019878:	3901      	subs	r1, #1
 801987a:	4288      	cmp	r0, r1
 801987c:	f6bf af63 	bge.w	8019746 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019880:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019882:	fb01 6303 	mla	r3, r1, r3, r6
 8019886:	141b      	asrs	r3, r3, #16
 8019888:	f53f af5d 	bmi.w	8019746 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801988c:	3a01      	subs	r2, #1
 801988e:	4293      	cmp	r3, r2
 8019890:	f6bf af59 	bge.w	8019746 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019894:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019898:	46ca      	mov	sl, r9
 801989a:	f1b8 0f00 	cmp.w	r8, #0
 801989e:	dc67      	bgt.n	8019970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80198a0:	9b06      	ldr	r3, [sp, #24]
 80198a2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80198a6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80198aa:	9b08      	ldr	r3, [sp, #32]
 80198ac:	2b00      	cmp	r3, #0
 80198ae:	f340 80d7 	ble.w	8019a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80198b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80198b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80198ba:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80198be:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80198c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80198c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80198c8:	eeb0 6a62 	vmov.f32	s12, s5
 80198cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80198d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80198d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80198d8:	ee16 4a10 	vmov	r4, s12
 80198dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80198e0:	eeb0 6a43 	vmov.f32	s12, s6
 80198e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80198e8:	ee12 2a90 	vmov	r2, s5
 80198ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80198f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80198f4:	ee13 2a10 	vmov	r2, s6
 80198f8:	931f      	str	r3, [sp, #124]	; 0x7c
 80198fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80198fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019900:	9320      	str	r3, [sp, #128]	; 0x80
 8019902:	9b08      	ldr	r3, [sp, #32]
 8019904:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019906:	3b01      	subs	r3, #1
 8019908:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801990c:	9308      	str	r3, [sp, #32]
 801990e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019910:	bf08      	it	eq
 8019912:	4613      	moveq	r3, r2
 8019914:	ee16 6a10 	vmov	r6, s12
 8019918:	9306      	str	r3, [sp, #24]
 801991a:	eeb0 3a67 	vmov.f32	s6, s15
 801991e:	eef0 2a47 	vmov.f32	s5, s14
 8019922:	e6e4      	b.n	80196ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019924:	2900      	cmp	r1, #0
 8019926:	f43f af4e 	beq.w	80197c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801992a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801992e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019932:	9309      	str	r3, [sp, #36]	; 0x24
 8019934:	e747      	b.n	80197c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019936:	f112 0a01 	adds.w	sl, r2, #1
 801993a:	d481      	bmi.n	8019840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801993c:	4553      	cmp	r3, sl
 801993e:	f6ff af7f 	blt.w	8019840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019942:	f11c 0a01 	adds.w	sl, ip, #1
 8019946:	f53f af7b 	bmi.w	8019840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801994a:	45d6      	cmp	lr, sl
 801994c:	f6ff af78 	blt.w	8019840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019950:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019954:	b21b      	sxth	r3, r3
 8019956:	fa0f f28e 	sxth.w	r2, lr
 801995a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801995e:	9201      	str	r2, [sp, #4]
 8019960:	9300      	str	r3, [sp, #0]
 8019962:	9a07      	ldr	r2, [sp, #28]
 8019964:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019966:	463b      	mov	r3, r7
 8019968:	4641      	mov	r1, r8
 801996a:	f7ff fe21 	bl	80195b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801996e:	e767      	b.n	8019840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019970:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019972:	9d07      	ldr	r5, [sp, #28]
 8019974:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019978:	1422      	asrs	r2, r4, #16
 801997a:	1431      	asrs	r1, r6, #16
 801997c:	fb03 2101 	mla	r1, r3, r1, r2
 8019980:	9a07      	ldr	r2, [sp, #28]
 8019982:	440a      	add	r2, r1
 8019984:	5c69      	ldrb	r1, [r5, r1]
 8019986:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801998a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801998e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019992:	f1be 0f00 	cmp.w	lr, #0
 8019996:	d05c      	beq.n	8019a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019998:	f892 c001 	ldrb.w	ip, [r2, #1]
 801999c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80199a0:	950d      	str	r5, [sp, #52]	; 0x34
 80199a2:	b150      	cbz	r0, 80199ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80199a4:	eb02 0c03 	add.w	ip, r2, r3
 80199a8:	5cd3      	ldrb	r3, [r2, r3]
 80199aa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80199ae:	930a      	str	r3, [sp, #40]	; 0x28
 80199b0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80199b4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80199b8:	930e      	str	r3, [sp, #56]	; 0x38
 80199ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80199bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80199be:	fb1e f200 	smulbb	r2, lr, r0
 80199c2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80199c6:	10d2      	asrs	r2, r2, #3
 80199c8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80199cc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80199d0:	ea4c 0c03 	orr.w	ip, ip, r3
 80199d4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80199d8:	9311      	str	r3, [sp, #68]	; 0x44
 80199da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80199dc:	041b      	lsls	r3, r3, #16
 80199de:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80199e2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199e6:	ea43 030b 	orr.w	r3, r3, fp
 80199ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80199ec:	4353      	muls	r3, r2
 80199ee:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80199f2:	fb05 3c0c 	mla	ip, r5, ip, r3
 80199f6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80199fa:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80199fe:	ea43 0b01 	orr.w	fp, r3, r1
 8019a02:	f1c0 0110 	rsb	r1, r0, #16
 8019a06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019a08:	eba1 0e0e 	sub.w	lr, r1, lr
 8019a0c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019a10:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019a14:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019a18:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019a1c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019a20:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019a24:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019a28:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019a2c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019a30:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019a34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019a38:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019a3c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019a40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019a42:	f82a cb02 	strh.w	ip, [sl], #2
 8019a46:	441c      	add	r4, r3
 8019a48:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019a4a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019a4e:	441e      	add	r6, r3
 8019a50:	e723      	b.n	801989a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019a52:	2800      	cmp	r0, #0
 8019a54:	d0b1      	beq.n	80199ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019a56:	5cd3      	ldrb	r3, [r2, r3]
 8019a58:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019a5c:	930a      	str	r3, [sp, #40]	; 0x28
 8019a5e:	e7ac      	b.n	80199ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019a60:	b013      	add	sp, #76	; 0x4c
 8019a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019a66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a6a:	880d      	ldrh	r5, [r1, #0]
 8019a6c:	b087      	sub	sp, #28
 8019a6e:	10ef      	asrs	r7, r5, #3
 8019a70:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019a74:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019a78:	00ed      	lsls	r5, r5, #3
 8019a7a:	9701      	str	r7, [sp, #4]
 8019a7c:	b2ed      	uxtb	r5, r5
 8019a7e:	9502      	str	r5, [sp, #8]
 8019a80:	9d01      	ldr	r5, [sp, #4]
 8019a82:	9103      	str	r1, [sp, #12]
 8019a84:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019a88:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019a8c:	9902      	ldr	r1, [sp, #8]
 8019a8e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019a92:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019a96:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019a9a:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019a9e:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019aa2:	022d      	lsls	r5, r5, #8
 8019aa4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019aa8:	fb06 0709 	mla	r7, r6, r9, r0
 8019aac:	430d      	orrs	r5, r1
 8019aae:	2e00      	cmp	r6, #0
 8019ab0:	eb02 0c07 	add.w	ip, r2, r7
 8019ab4:	9505      	str	r5, [sp, #20]
 8019ab6:	f2c0 80b6 	blt.w	8019c26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019aba:	45b3      	cmp	fp, r6
 8019abc:	f340 80b3 	ble.w	8019c26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019ac0:	2800      	cmp	r0, #0
 8019ac2:	f2c0 80ae 	blt.w	8019c22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019ac6:	4581      	cmp	r9, r0
 8019ac8:	f340 80ab 	ble.w	8019c22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019acc:	5dd7      	ldrb	r7, [r2, r7]
 8019ace:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019ad2:	441f      	add	r7, r3
 8019ad4:	1c42      	adds	r2, r0, #1
 8019ad6:	f100 80a9 	bmi.w	8019c2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019ada:	4591      	cmp	r9, r2
 8019adc:	f340 80a6 	ble.w	8019c2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019ae0:	2c00      	cmp	r4, #0
 8019ae2:	f000 80a3 	beq.w	8019c2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019ae6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019aea:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019aee:	441d      	add	r5, r3
 8019af0:	3601      	adds	r6, #1
 8019af2:	f100 809f 	bmi.w	8019c34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019af6:	45b3      	cmp	fp, r6
 8019af8:	f340 809c 	ble.w	8019c34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019afc:	f1be 0f00 	cmp.w	lr, #0
 8019b00:	f000 8098 	beq.w	8019c34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019b04:	2800      	cmp	r0, #0
 8019b06:	f2c0 8093 	blt.w	8019c30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019b0a:	4581      	cmp	r9, r0
 8019b0c:	f340 8090 	ble.w	8019c30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019b10:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019b14:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019b18:	441e      	add	r6, r3
 8019b1a:	3001      	adds	r0, #1
 8019b1c:	f100 808d 	bmi.w	8019c3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019b20:	4581      	cmp	r9, r0
 8019b22:	f340 808a 	ble.w	8019c3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019b26:	2c00      	cmp	r4, #0
 8019b28:	f000 8087 	beq.w	8019c3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019b2c:	44e1      	add	r9, ip
 8019b2e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019b32:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019b36:	4413      	add	r3, r2
 8019b38:	b2a4      	uxth	r4, r4
 8019b3a:	fa1f fe8e 	uxth.w	lr, lr
 8019b3e:	fb04 fb0e 	mul.w	fp, r4, lr
 8019b42:	0124      	lsls	r4, r4, #4
 8019b44:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019b48:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019b4c:	eba4 040b 	sub.w	r4, r4, fp
 8019b50:	fa1f f08e 	uxth.w	r0, lr
 8019b54:	b2a2      	uxth	r2, r4
 8019b56:	78ac      	ldrb	r4, [r5, #2]
 8019b58:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019b5c:	9901      	ldr	r1, [sp, #4]
 8019b5e:	eba9 0900 	sub.w	r9, r9, r0
 8019b62:	fa1f f989 	uxth.w	r9, r9
 8019b66:	4354      	muls	r4, r2
 8019b68:	fb09 440c 	mla	r4, r9, ip, r4
 8019b6c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019b70:	fb00 440c 	mla	r4, r0, ip, r4
 8019b74:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019b78:	fa1f fe88 	uxth.w	lr, r8
 8019b7c:	ea6f 0808 	mvn.w	r8, r8
 8019b80:	fa5f f888 	uxtb.w	r8, r8
 8019b84:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019b88:	fb1a fa08 	smulbb	sl, sl, r8
 8019b8c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019b90:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019b94:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019b98:	787c      	ldrb	r4, [r7, #1]
 8019b9a:	782d      	ldrb	r5, [r5, #0]
 8019b9c:	783f      	ldrb	r7, [r7, #0]
 8019b9e:	fb02 fa0a 	mul.w	sl, r2, sl
 8019ba2:	fb09 aa04 	mla	sl, r9, r4, sl
 8019ba6:	7874      	ldrb	r4, [r6, #1]
 8019ba8:	436a      	muls	r2, r5
 8019baa:	7835      	ldrb	r5, [r6, #0]
 8019bac:	fb00 aa04 	mla	sl, r0, r4, sl
 8019bb0:	fb09 2207 	mla	r2, r9, r7, r2
 8019bb4:	785c      	ldrb	r4, [r3, #1]
 8019bb6:	781b      	ldrb	r3, [r3, #0]
 8019bb8:	fb00 2005 	mla	r0, r0, r5, r2
 8019bbc:	fb0b a404 	mla	r4, fp, r4, sl
 8019bc0:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019bc4:	9b02      	ldr	r3, [sp, #8]
 8019bc6:	fb11 fa08 	smulbb	sl, r1, r8
 8019bca:	fa1f fc8c 	uxth.w	ip, ip
 8019bce:	fb13 f808 	smulbb	r8, r3, r8
 8019bd2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019bd6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019bda:	fb04 a40e 	mla	r4, r4, lr, sl
 8019bde:	f10c 0301 	add.w	r3, ip, #1
 8019be2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019be6:	fa1f fe8e 	uxth.w	lr, lr
 8019bea:	b2a4      	uxth	r4, r4
 8019bec:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019bf0:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019bf4:	f104 0a01 	add.w	sl, r4, #1
 8019bf8:	f10e 0c01 	add.w	ip, lr, #1
 8019bfc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019c00:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019c04:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019c08:	0964      	lsrs	r4, r4, #5
 8019c0a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019c0e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019c12:	9b03      	ldr	r3, [sp, #12]
 8019c14:	ea4c 0c04 	orr.w	ip, ip, r4
 8019c18:	f8a3 c000 	strh.w	ip, [r3]
 8019c1c:	b007      	add	sp, #28
 8019c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c22:	af05      	add	r7, sp, #20
 8019c24:	e756      	b.n	8019ad4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019c26:	ad05      	add	r5, sp, #20
 8019c28:	462f      	mov	r7, r5
 8019c2a:	e761      	b.n	8019af0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019c2c:	ad05      	add	r5, sp, #20
 8019c2e:	e75f      	b.n	8019af0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019c30:	ae05      	add	r6, sp, #20
 8019c32:	e772      	b.n	8019b1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019c34:	ab05      	add	r3, sp, #20
 8019c36:	461e      	mov	r6, r3
 8019c38:	e77e      	b.n	8019b38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019c3a:	ab05      	add	r3, sp, #20
 8019c3c:	e77c      	b.n	8019b38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019c3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c42:	b095      	sub	sp, #84	; 0x54
 8019c44:	9212      	str	r2, [sp, #72]	; 0x48
 8019c46:	9309      	str	r3, [sp, #36]	; 0x24
 8019c48:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019c4a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019c4e:	930f      	str	r3, [sp, #60]	; 0x3c
 8019c50:	910e      	str	r1, [sp, #56]	; 0x38
 8019c52:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019c56:	9013      	str	r0, [sp, #76]	; 0x4c
 8019c58:	6850      	ldr	r0, [r2, #4]
 8019c5a:	6812      	ldr	r2, [r2, #0]
 8019c5c:	fb00 1303 	mla	r3, r0, r3, r1
 8019c60:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019c64:	930a      	str	r3, [sp, #40]	; 0x28
 8019c66:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019c68:	681b      	ldr	r3, [r3, #0]
 8019c6a:	930d      	str	r3, [sp, #52]	; 0x34
 8019c6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019c6e:	685c      	ldr	r4, [r3, #4]
 8019c70:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019c72:	43db      	mvns	r3, r3
 8019c74:	b2db      	uxtb	r3, r3
 8019c76:	3404      	adds	r4, #4
 8019c78:	930b      	str	r3, [sp, #44]	; 0x2c
 8019c7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c7c:	2b00      	cmp	r3, #0
 8019c7e:	dc03      	bgt.n	8019c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019c80:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019c82:	2b00      	cmp	r3, #0
 8019c84:	f340 8255 	ble.w	801a132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019c88:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019c8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019c92:	1e48      	subs	r0, r1, #1
 8019c94:	1e55      	subs	r5, r2, #1
 8019c96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c98:	2b00      	cmp	r3, #0
 8019c9a:	f340 80f9 	ble.w	8019e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019c9e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019ca0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019ca2:	1436      	asrs	r6, r6, #16
 8019ca4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019ca8:	d406      	bmi.n	8019cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019caa:	4286      	cmp	r6, r0
 8019cac:	da04      	bge.n	8019cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019cae:	2b00      	cmp	r3, #0
 8019cb0:	db02      	blt.n	8019cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019cb2:	42ab      	cmp	r3, r5
 8019cb4:	f2c0 80ed 	blt.w	8019e92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019cb8:	3601      	adds	r6, #1
 8019cba:	f100 80da 	bmi.w	8019e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019cbe:	42b1      	cmp	r1, r6
 8019cc0:	f2c0 80d7 	blt.w	8019e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019cc4:	3301      	adds	r3, #1
 8019cc6:	f100 80d4 	bmi.w	8019e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019cca:	429a      	cmp	r2, r3
 8019ccc:	f2c0 80d1 	blt.w	8019e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019cd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019cd2:	9311      	str	r3, [sp, #68]	; 0x44
 8019cd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019cd6:	930c      	str	r3, [sp, #48]	; 0x30
 8019cd8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019cda:	2b00      	cmp	r3, #0
 8019cdc:	f340 80fa 	ble.w	8019ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019ce0:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019ce2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019ce4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019ce6:	68c6      	ldr	r6, [r0, #12]
 8019ce8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019cea:	141d      	asrs	r5, r3, #16
 8019cec:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019cf0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019cf2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019cf4:	1400      	asrs	r0, r0, #16
 8019cf6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019cfa:	6892      	ldr	r2, [r2, #8]
 8019cfc:	f100 813e 	bmi.w	8019f7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019d00:	1e57      	subs	r7, r2, #1
 8019d02:	42b8      	cmp	r0, r7
 8019d04:	f280 813a 	bge.w	8019f7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019d08:	2d00      	cmp	r5, #0
 8019d0a:	f2c0 8137 	blt.w	8019f7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019d0e:	1e77      	subs	r7, r6, #1
 8019d10:	42bd      	cmp	r5, r7
 8019d12:	f280 8133 	bge.w	8019f7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019d16:	b212      	sxth	r2, r2
 8019d18:	fb05 0002 	mla	r0, r5, r2, r0
 8019d1c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019d1e:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019d22:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019d26:	182e      	adds	r6, r5, r0
 8019d28:	eb04 050a 	add.w	r5, r4, sl
 8019d2c:	2b00      	cmp	r3, #0
 8019d2e:	f000 8117 	beq.w	8019f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019d32:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019d36:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019d3a:	44a4      	add	ip, r4
 8019d3c:	2900      	cmp	r1, #0
 8019d3e:	f000 8117 	beq.w	8019f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019d42:	18b0      	adds	r0, r6, r2
 8019d44:	5cb2      	ldrb	r2, [r6, r2]
 8019d46:	7840      	ldrb	r0, [r0, #1]
 8019d48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019d4c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019d50:	4422      	add	r2, r4
 8019d52:	4420      	add	r0, r4
 8019d54:	b29b      	uxth	r3, r3
 8019d56:	b289      	uxth	r1, r1
 8019d58:	fb03 f901 	mul.w	r9, r3, r1
 8019d5c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019d60:	011b      	lsls	r3, r3, #4
 8019d62:	b289      	uxth	r1, r1
 8019d64:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8019d68:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019d6c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019d6e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8019d72:	f8b6 e000 	ldrh.w	lr, [r6]
 8019d76:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8019d7a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8019d7e:	eba3 0309 	sub.w	r3, r3, r9
 8019d82:	b29b      	uxth	r3, r3
 8019d84:	eba8 0801 	sub.w	r8, r8, r1
 8019d88:	fa1f f888 	uxth.w	r8, r8
 8019d8c:	435f      	muls	r7, r3
 8019d8e:	fb08 770b 	mla	r7, r8, fp, r7
 8019d92:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019d96:	9310      	str	r3, [sp, #64]	; 0x40
 8019d98:	fb01 770b 	mla	r7, r1, fp, r7
 8019d9c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019da0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019da2:	fb09 770b 	mla	r7, r9, fp, r7
 8019da6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8019daa:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019dae:	fb1b fb03 	smulbb	fp, fp, r3
 8019db2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019db6:	fb07 b706 	mla	r7, r7, r6, fp
 8019dba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019dbc:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019dc0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019dc4:	f89c c000 	ldrb.w	ip, [ip]
 8019dc8:	435d      	muls	r5, r3
 8019dca:	fb08 550b 	mla	r5, r8, fp, r5
 8019dce:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019dd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019dd4:	fb01 550b 	mla	r5, r1, fp, r5
 8019dd8:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019ddc:	fb09 550b 	mla	r5, r9, fp, r5
 8019de0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8019de4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019de8:	fb1b fb03 	smulbb	fp, fp, r3
 8019dec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019dee:	fb03 f30c 	mul.w	r3, r3, ip
 8019df2:	f892 c000 	ldrb.w	ip, [r2]
 8019df6:	fb08 330a 	mla	r3, r8, sl, r3
 8019dfa:	fb01 330c 	mla	r3, r1, ip, r3
 8019dfe:	f890 c000 	ldrb.w	ip, [r0]
 8019e02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019e06:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019e0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019e0c:	fa5f fe8e 	uxtb.w	lr, lr
 8019e10:	b2bf      	uxth	r7, r7
 8019e12:	fb1e fe03 	smulbb	lr, lr, r3
 8019e16:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019e1a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019e1e:	fb05 b506 	mla	r5, r5, r6, fp
 8019e22:	1c7b      	adds	r3, r7, #1
 8019e24:	fb0c e606 	mla	r6, ip, r6, lr
 8019e28:	b2ad      	uxth	r5, r5
 8019e2a:	b2b6      	uxth	r6, r6
 8019e2c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019e30:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8019e34:	f105 0b01 	add.w	fp, r5, #1
 8019e38:	1c77      	adds	r7, r6, #1
 8019e3a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8019e3e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8019e42:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019e46:	096d      	lsrs	r5, r5, #5
 8019e48:	431f      	orrs	r7, r3
 8019e4a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019e4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019e50:	433d      	orrs	r5, r7
 8019e52:	801d      	strh	r5, [r3, #0]
 8019e54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019e56:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019e58:	3302      	adds	r3, #2
 8019e5a:	930c      	str	r3, [sp, #48]	; 0x30
 8019e5c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019e5e:	4413      	add	r3, r2
 8019e60:	931f      	str	r3, [sp, #124]	; 0x7c
 8019e62:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8019e64:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019e66:	4413      	add	r3, r2
 8019e68:	9320      	str	r3, [sp, #128]	; 0x80
 8019e6a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019e6c:	3b01      	subs	r3, #1
 8019e6e:	9311      	str	r3, [sp, #68]	; 0x44
 8019e70:	e732      	b.n	8019cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019e72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019e74:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8019e76:	4433      	add	r3, r6
 8019e78:	931f      	str	r3, [sp, #124]	; 0x7c
 8019e7a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8019e7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019e7e:	4433      	add	r3, r6
 8019e80:	9320      	str	r3, [sp, #128]	; 0x80
 8019e82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e84:	3b01      	subs	r3, #1
 8019e86:	9309      	str	r3, [sp, #36]	; 0x24
 8019e88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e8a:	3302      	adds	r3, #2
 8019e8c:	930a      	str	r3, [sp, #40]	; 0x28
 8019e8e:	e702      	b.n	8019c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019e90:	d027      	beq.n	8019ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8019e92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e94:	9821      	ldr	r0, [sp, #132]	; 0x84
 8019e96:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8019e98:	3b01      	subs	r3, #1
 8019e9a:	fb00 5003 	mla	r0, r0, r3, r5
 8019e9e:	1400      	asrs	r0, r0, #16
 8019ea0:	f53f af16 	bmi.w	8019cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019ea4:	3901      	subs	r1, #1
 8019ea6:	4288      	cmp	r0, r1
 8019ea8:	f6bf af12 	bge.w	8019cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019eac:	9922      	ldr	r1, [sp, #136]	; 0x88
 8019eae:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019eb0:	fb01 0303 	mla	r3, r1, r3, r0
 8019eb4:	141b      	asrs	r3, r3, #16
 8019eb6:	f53f af0b 	bmi.w	8019cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019eba:	3a01      	subs	r2, #1
 8019ebc:	4293      	cmp	r3, r2
 8019ebe:	f6bf af07 	bge.w	8019cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019ec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ec4:	9311      	str	r3, [sp, #68]	; 0x44
 8019ec6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8019eca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ecc:	930c      	str	r3, [sp, #48]	; 0x30
 8019ece:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019ed0:	2b00      	cmp	r3, #0
 8019ed2:	dc70      	bgt.n	8019fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8019ed4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ed6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019ed8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019edc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019ee0:	930a      	str	r3, [sp, #40]	; 0x28
 8019ee2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ee4:	2b00      	cmp	r3, #0
 8019ee6:	f340 8124 	ble.w	801a132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019eea:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019eee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019ef2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019ef6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019ef8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019efc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f04:	eef0 6a62 	vmov.f32	s13, s5
 8019f08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f10:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f14:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8019f18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019f1c:	eef0 6a43 	vmov.f32	s13, s6
 8019f20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019f24:	ee12 2a90 	vmov	r2, s5
 8019f28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f30:	ee13 2a10 	vmov	r2, s6
 8019f34:	9321      	str	r3, [sp, #132]	; 0x84
 8019f36:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019f38:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f3c:	9322      	str	r3, [sp, #136]	; 0x88
 8019f3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f40:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019f42:	3b01      	subs	r3, #1
 8019f44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f48:	930e      	str	r3, [sp, #56]	; 0x38
 8019f4a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019f4c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8019f50:	bf08      	it	eq
 8019f52:	4613      	moveq	r3, r2
 8019f54:	9309      	str	r3, [sp, #36]	; 0x24
 8019f56:	eeb0 3a67 	vmov.f32	s6, s15
 8019f5a:	eef0 2a47 	vmov.f32	s5, s14
 8019f5e:	e68c      	b.n	8019c7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019f60:	b149      	cbz	r1, 8019f76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8019f62:	5cb2      	ldrb	r2, [r6, r2]
 8019f64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019f68:	4422      	add	r2, r4
 8019f6a:	4628      	mov	r0, r5
 8019f6c:	46ac      	mov	ip, r5
 8019f6e:	e6f1      	b.n	8019d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019f70:	4628      	mov	r0, r5
 8019f72:	462a      	mov	r2, r5
 8019f74:	e6ee      	b.n	8019d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019f76:	4628      	mov	r0, r5
 8019f78:	462a      	mov	r2, r5
 8019f7a:	e7f7      	b.n	8019f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8019f7c:	1c47      	adds	r7, r0, #1
 8019f7e:	f53f af69 	bmi.w	8019e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019f82:	42ba      	cmp	r2, r7
 8019f84:	f6ff af66 	blt.w	8019e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019f88:	1c6f      	adds	r7, r5, #1
 8019f8a:	f53f af63 	bmi.w	8019e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019f8e:	42be      	cmp	r6, r7
 8019f90:	f6ff af60 	blt.w	8019e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019f94:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019f96:	9002      	str	r0, [sp, #8]
 8019f98:	b236      	sxth	r6, r6
 8019f9a:	b212      	sxth	r2, r2
 8019f9c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8019fa0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8019fa4:	9200      	str	r2, [sp, #0]
 8019fa6:	9601      	str	r6, [sp, #4]
 8019fa8:	4623      	mov	r3, r4
 8019faa:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8019fae:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019fb0:	f7ff fd59 	bl	8019a66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8019fb4:	e74e      	b.n	8019e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019fb6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019fb8:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019fba:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8019fbc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019fbe:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019fc2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019fc4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019fc8:	142d      	asrs	r5, r5, #16
 8019fca:	1400      	asrs	r0, r0, #16
 8019fcc:	fb02 5000 	mla	r0, r2, r0, r5
 8019fd0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019fd2:	f815 9000 	ldrb.w	r9, [r5, r0]
 8019fd6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019fda:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8019fde:	182e      	adds	r6, r5, r0
 8019fe0:	eb04 0509 	add.w	r5, r4, r9
 8019fe4:	2b00      	cmp	r3, #0
 8019fe6:	f000 8096 	beq.w	801a116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8019fea:	7877      	ldrb	r7, [r6, #1]
 8019fec:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019ff0:	4427      	add	r7, r4
 8019ff2:	2900      	cmp	r1, #0
 8019ff4:	f000 8097 	beq.w	801a126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8019ff8:	18b0      	adds	r0, r6, r2
 8019ffa:	5cb2      	ldrb	r2, [r6, r2]
 8019ffc:	7840      	ldrb	r0, [r0, #1]
 8019ffe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a002:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a006:	4422      	add	r2, r4
 801a008:	4420      	add	r0, r4
 801a00a:	b29b      	uxth	r3, r3
 801a00c:	b289      	uxth	r1, r1
 801a00e:	fb03 f801 	mul.w	r8, r3, r1
 801a012:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a014:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a018:	f8b6 c000 	ldrh.w	ip, [r6]
 801a01c:	78be      	ldrb	r6, [r7, #2]
 801a01e:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a022:	011b      	lsls	r3, r3, #4
 801a024:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a028:	b289      	uxth	r1, r1
 801a02a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a02e:	eba3 0308 	sub.w	r3, r3, r8
 801a032:	b29b      	uxth	r3, r3
 801a034:	ebae 0e01 	sub.w	lr, lr, r1
 801a038:	fa1f fe8e 	uxth.w	lr, lr
 801a03c:	435e      	muls	r6, r3
 801a03e:	fb0e 660b 	mla	r6, lr, fp, r6
 801a042:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a046:	9310      	str	r3, [sp, #64]	; 0x40
 801a048:	fb01 660b 	mla	r6, r1, fp, r6
 801a04c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a050:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a052:	fb08 660b 	mla	r6, r8, fp, r6
 801a056:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a05a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a05e:	fb1b fb03 	smulbb	fp, fp, r3
 801a062:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a066:	fb06 b60a 	mla	r6, r6, sl, fp
 801a06a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a06c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a070:	787d      	ldrb	r5, [r7, #1]
 801a072:	783f      	ldrb	r7, [r7, #0]
 801a074:	435d      	muls	r5, r3
 801a076:	fb0e 550b 	mla	r5, lr, fp, r5
 801a07a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a07e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a080:	fb01 550b 	mla	r5, r1, fp, r5
 801a084:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a088:	fb08 550b 	mla	r5, r8, fp, r5
 801a08c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a090:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a094:	fb1b fb03 	smulbb	fp, fp, r3
 801a098:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a09a:	437b      	muls	r3, r7
 801a09c:	7817      	ldrb	r7, [r2, #0]
 801a09e:	fb0e 3309 	mla	r3, lr, r9, r3
 801a0a2:	fb01 3307 	mla	r3, r1, r7, r3
 801a0a6:	7807      	ldrb	r7, [r0, #0]
 801a0a8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a0ac:	fb08 3707 	mla	r7, r8, r7, r3
 801a0b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a0b2:	fa5f fc8c 	uxtb.w	ip, ip
 801a0b6:	fb1c fc03 	smulbb	ip, ip, r3
 801a0ba:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a0be:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a0c2:	fb05 b50a 	mla	r5, r5, sl, fp
 801a0c6:	fb07 c70a 	mla	r7, r7, sl, ip
 801a0ca:	b2b6      	uxth	r6, r6
 801a0cc:	b2ad      	uxth	r5, r5
 801a0ce:	b2bf      	uxth	r7, r7
 801a0d0:	1c73      	adds	r3, r6, #1
 801a0d2:	1c7a      	adds	r2, r7, #1
 801a0d4:	f105 0b01 	add.w	fp, r5, #1
 801a0d8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a0dc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a0e0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a0e4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a0e8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a0ec:	096d      	lsrs	r5, r5, #5
 801a0ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a0f0:	4316      	orrs	r6, r2
 801a0f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a0f6:	432e      	orrs	r6, r5
 801a0f8:	f823 6b02 	strh.w	r6, [r3], #2
 801a0fc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a0fe:	930c      	str	r3, [sp, #48]	; 0x30
 801a100:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a102:	4413      	add	r3, r2
 801a104:	931f      	str	r3, [sp, #124]	; 0x7c
 801a106:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a108:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a10a:	4413      	add	r3, r2
 801a10c:	9320      	str	r3, [sp, #128]	; 0x80
 801a10e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a110:	3b01      	subs	r3, #1
 801a112:	9311      	str	r3, [sp, #68]	; 0x44
 801a114:	e6db      	b.n	8019ece <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a116:	b149      	cbz	r1, 801a12c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a118:	5cb2      	ldrb	r2, [r6, r2]
 801a11a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a11e:	4422      	add	r2, r4
 801a120:	4628      	mov	r0, r5
 801a122:	462f      	mov	r7, r5
 801a124:	e771      	b.n	801a00a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a126:	4628      	mov	r0, r5
 801a128:	462a      	mov	r2, r5
 801a12a:	e76e      	b.n	801a00a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a12c:	4628      	mov	r0, r5
 801a12e:	462a      	mov	r2, r5
 801a130:	e7f7      	b.n	801a122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a132:	b015      	add	sp, #84	; 0x54
 801a134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a138:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a13c:	880f      	ldrh	r7, [r1, #0]
 801a13e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a142:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a146:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a14a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a14e:	023c      	lsls	r4, r7, #8
 801a150:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a154:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a158:	017c      	lsls	r4, r7, #5
 801a15a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a15e:	00ff      	lsls	r7, r7, #3
 801a160:	ea4b 0404 	orr.w	r4, fp, r4
 801a164:	b2ff      	uxtb	r7, r7
 801a166:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a16a:	4327      	orrs	r7, r4
 801a16c:	2d00      	cmp	r5, #0
 801a16e:	eb02 080a 	add.w	r8, r2, sl
 801a172:	9701      	str	r7, [sp, #4]
 801a174:	db7e      	blt.n	801a274 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a176:	45a9      	cmp	r9, r5
 801a178:	dd7c      	ble.n	801a274 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a17a:	f1bc 0f00 	cmp.w	ip, #0
 801a17e:	db77      	blt.n	801a270 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a180:	45e6      	cmp	lr, ip
 801a182:	dd75      	ble.n	801a270 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a184:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a188:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a18c:	441f      	add	r7, r3
 801a18e:	f11c 0201 	adds.w	r2, ip, #1
 801a192:	d472      	bmi.n	801a27a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a194:	4596      	cmp	lr, r2
 801a196:	dd70      	ble.n	801a27a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a198:	2800      	cmp	r0, #0
 801a19a:	d06e      	beq.n	801a27a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a19c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a1a0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a1a4:	441c      	add	r4, r3
 801a1a6:	3501      	adds	r5, #1
 801a1a8:	d46b      	bmi.n	801a282 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a1aa:	45a9      	cmp	r9, r5
 801a1ac:	dd69      	ble.n	801a282 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a1ae:	2e00      	cmp	r6, #0
 801a1b0:	d067      	beq.n	801a282 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a1b2:	f1bc 0f00 	cmp.w	ip, #0
 801a1b6:	db62      	blt.n	801a27e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a1b8:	45e6      	cmp	lr, ip
 801a1ba:	dd60      	ble.n	801a27e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a1bc:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a1c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a1c4:	441d      	add	r5, r3
 801a1c6:	f11c 0201 	adds.w	r2, ip, #1
 801a1ca:	d45d      	bmi.n	801a288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a1cc:	4596      	cmp	lr, r2
 801a1ce:	dd5b      	ble.n	801a288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a1d0:	2800      	cmp	r0, #0
 801a1d2:	d059      	beq.n	801a288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a1d4:	44c6      	add	lr, r8
 801a1d6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a1da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a1de:	4413      	add	r3, r2
 801a1e0:	b280      	uxth	r0, r0
 801a1e2:	b2b2      	uxth	r2, r6
 801a1e4:	fb00 f602 	mul.w	r6, r0, r2
 801a1e8:	0100      	lsls	r0, r0, #4
 801a1ea:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a1ee:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a1f2:	1b80      	subs	r0, r0, r6
 801a1f4:	fa1f fc82 	uxth.w	ip, r2
 801a1f8:	b282      	uxth	r2, r0
 801a1fa:	78a0      	ldrb	r0, [r4, #2]
 801a1fc:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a200:	f897 9000 	ldrb.w	r9, [r7]
 801a204:	787f      	ldrb	r7, [r7, #1]
 801a206:	eba8 080c 	sub.w	r8, r8, ip
 801a20a:	fa1f f888 	uxth.w	r8, r8
 801a20e:	4350      	muls	r0, r2
 801a210:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a214:	78a8      	ldrb	r0, [r5, #2]
 801a216:	fb0c e000 	mla	r0, ip, r0, lr
 801a21a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a21e:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a222:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a226:	f894 e000 	ldrb.w	lr, [r4]
 801a22a:	fb02 fe0e 	mul.w	lr, r2, lr
 801a22e:	fb08 e909 	mla	r9, r8, r9, lr
 801a232:	f895 e000 	ldrb.w	lr, [r5]
 801a236:	fb0c 990e 	mla	r9, ip, lr, r9
 801a23a:	f893 e000 	ldrb.w	lr, [r3]
 801a23e:	785b      	ldrb	r3, [r3, #1]
 801a240:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a244:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a248:	ea4e 0e00 	orr.w	lr, lr, r0
 801a24c:	7860      	ldrb	r0, [r4, #1]
 801a24e:	4350      	muls	r0, r2
 801a250:	786a      	ldrb	r2, [r5, #1]
 801a252:	fb08 0007 	mla	r0, r8, r7, r0
 801a256:	fb0c 0202 	mla	r2, ip, r2, r0
 801a25a:	fb06 2303 	mla	r3, r6, r3, r2
 801a25e:	095b      	lsrs	r3, r3, #5
 801a260:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a264:	ea4e 0303 	orr.w	r3, lr, r3
 801a268:	800b      	strh	r3, [r1, #0]
 801a26a:	b003      	add	sp, #12
 801a26c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a270:	af01      	add	r7, sp, #4
 801a272:	e78c      	b.n	801a18e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a274:	ac01      	add	r4, sp, #4
 801a276:	4627      	mov	r7, r4
 801a278:	e795      	b.n	801a1a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a27a:	ac01      	add	r4, sp, #4
 801a27c:	e793      	b.n	801a1a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a27e:	ad01      	add	r5, sp, #4
 801a280:	e7a1      	b.n	801a1c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a282:	ab01      	add	r3, sp, #4
 801a284:	461d      	mov	r5, r3
 801a286:	e7ab      	b.n	801a1e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a288:	ab01      	add	r3, sp, #4
 801a28a:	e7a9      	b.n	801a1e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a28c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a28c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a290:	b08f      	sub	sp, #60	; 0x3c
 801a292:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a296:	920c      	str	r2, [sp, #48]	; 0x30
 801a298:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a29a:	910a      	str	r1, [sp, #40]	; 0x28
 801a29c:	9306      	str	r3, [sp, #24]
 801a29e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a2a2:	900d      	str	r0, [sp, #52]	; 0x34
 801a2a4:	6850      	ldr	r0, [r2, #4]
 801a2a6:	6812      	ldr	r2, [r2, #0]
 801a2a8:	fb00 1303 	mla	r3, r0, r3, r1
 801a2ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a2b0:	9307      	str	r3, [sp, #28]
 801a2b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a2b4:	681b      	ldr	r3, [r3, #0]
 801a2b6:	9308      	str	r3, [sp, #32]
 801a2b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a2ba:	685c      	ldr	r4, [r3, #4]
 801a2bc:	3404      	adds	r4, #4
 801a2be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a2c0:	2b00      	cmp	r3, #0
 801a2c2:	dc03      	bgt.n	801a2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a2c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a2c6:	2b00      	cmp	r3, #0
 801a2c8:	f340 81d6 	ble.w	801a678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a2cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a2ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a2d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a2d6:	1e48      	subs	r0, r1, #1
 801a2d8:	1e56      	subs	r6, r2, #1
 801a2da:	9b06      	ldr	r3, [sp, #24]
 801a2dc:	2b00      	cmp	r3, #0
 801a2de:	f340 80b7 	ble.w	801a450 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a2e2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a2e6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a2ea:	d406      	bmi.n	801a2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2ec:	4287      	cmp	r7, r0
 801a2ee:	da04      	bge.n	801a2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2f0:	2b00      	cmp	r3, #0
 801a2f2:	db02      	blt.n	801a2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2f4:	42b3      	cmp	r3, r6
 801a2f6:	f2c0 80ac 	blt.w	801a452 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a2fa:	3701      	adds	r7, #1
 801a2fc:	f100 809d 	bmi.w	801a43a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a300:	42b9      	cmp	r1, r7
 801a302:	f2c0 809a 	blt.w	801a43a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a306:	3301      	adds	r3, #1
 801a308:	f100 8097 	bmi.w	801a43a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a30c:	429a      	cmp	r2, r3
 801a30e:	f2c0 8094 	blt.w	801a43a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a312:	9b06      	ldr	r3, [sp, #24]
 801a314:	930b      	str	r3, [sp, #44]	; 0x2c
 801a316:	9b07      	ldr	r3, [sp, #28]
 801a318:	9309      	str	r3, [sp, #36]	; 0x24
 801a31a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a31c:	2b00      	cmp	r3, #0
 801a31e:	f340 80b5 	ble.w	801a48c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a322:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a324:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a326:	68c7      	ldr	r7, [r0, #12]
 801a328:	6892      	ldr	r2, [r2, #8]
 801a32a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a32e:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a332:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a336:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a33a:	f100 80fb 	bmi.w	801a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a33e:	f102 3cff 	add.w	ip, r2, #4294967295
 801a342:	4560      	cmp	r0, ip
 801a344:	f280 80f6 	bge.w	801a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a348:	2e00      	cmp	r6, #0
 801a34a:	f2c0 80f3 	blt.w	801a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a34e:	f107 3cff 	add.w	ip, r7, #4294967295
 801a352:	4566      	cmp	r6, ip
 801a354:	f280 80ee 	bge.w	801a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a358:	b212      	sxth	r2, r2
 801a35a:	fb06 0002 	mla	r0, r6, r2, r0
 801a35e:	9e08      	ldr	r6, [sp, #32]
 801a360:	1837      	adds	r7, r6, r0
 801a362:	5c30      	ldrb	r0, [r6, r0]
 801a364:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a368:	eb04 0c08 	add.w	ip, r4, r8
 801a36c:	2b00      	cmp	r3, #0
 801a36e:	f000 80d3 	beq.w	801a518 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a372:	787e      	ldrb	r6, [r7, #1]
 801a374:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a378:	4426      	add	r6, r4
 801a37a:	2900      	cmp	r1, #0
 801a37c:	f000 80d4 	beq.w	801a528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a380:	18b8      	adds	r0, r7, r2
 801a382:	5cba      	ldrb	r2, [r7, r2]
 801a384:	7840      	ldrb	r0, [r0, #1]
 801a386:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a38a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a38e:	4422      	add	r2, r4
 801a390:	4420      	add	r0, r4
 801a392:	b29b      	uxth	r3, r3
 801a394:	b289      	uxth	r1, r1
 801a396:	fb03 f901 	mul.w	r9, r3, r1
 801a39a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a39e:	011b      	lsls	r3, r3, #4
 801a3a0:	b289      	uxth	r1, r1
 801a3a2:	78b7      	ldrb	r7, [r6, #2]
 801a3a4:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a3a8:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a3ac:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a3b0:	eba3 0309 	sub.w	r3, r3, r9
 801a3b4:	b29b      	uxth	r3, r3
 801a3b6:	ebae 0e01 	sub.w	lr, lr, r1
 801a3ba:	fa1f fe8e 	uxth.w	lr, lr
 801a3be:	435f      	muls	r7, r3
 801a3c0:	fb0e 770a 	mla	r7, lr, sl, r7
 801a3c4:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a3c8:	fb01 770a 	mla	r7, r1, sl, r7
 801a3cc:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a3d0:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a3d4:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a3d8:	f896 8000 	ldrb.w	r8, [r6]
 801a3dc:	7876      	ldrb	r6, [r6, #1]
 801a3de:	fb03 f808 	mul.w	r8, r3, r8
 801a3e2:	fb0e 8807 	mla	r8, lr, r7, r8
 801a3e6:	7817      	ldrb	r7, [r2, #0]
 801a3e8:	fb01 8807 	mla	r8, r1, r7, r8
 801a3ec:	7807      	ldrb	r7, [r0, #0]
 801a3ee:	fb09 8707 	mla	r7, r9, r7, r8
 801a3f2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a3f6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a3fa:	ea47 070a 	orr.w	r7, r7, sl
 801a3fe:	4373      	muls	r3, r6
 801a400:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a404:	fb0e 330c 	mla	r3, lr, ip, r3
 801a408:	fb01 310a 	mla	r1, r1, sl, r3
 801a40c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a410:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a412:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a416:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a41a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a41e:	ea47 070a 	orr.w	r7, r7, sl
 801a422:	801f      	strh	r7, [r3, #0]
 801a424:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a426:	3302      	adds	r3, #2
 801a428:	9309      	str	r3, [sp, #36]	; 0x24
 801a42a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a42c:	449b      	add	fp, r3
 801a42e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a430:	441d      	add	r5, r3
 801a432:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a434:	3b01      	subs	r3, #1
 801a436:	930b      	str	r3, [sp, #44]	; 0x2c
 801a438:	e76f      	b.n	801a31a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a43a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a43c:	449b      	add	fp, r3
 801a43e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a440:	441d      	add	r5, r3
 801a442:	9b06      	ldr	r3, [sp, #24]
 801a444:	3b01      	subs	r3, #1
 801a446:	9306      	str	r3, [sp, #24]
 801a448:	9b07      	ldr	r3, [sp, #28]
 801a44a:	3302      	adds	r3, #2
 801a44c:	9307      	str	r3, [sp, #28]
 801a44e:	e744      	b.n	801a2da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a450:	d023      	beq.n	801a49a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a452:	9b06      	ldr	r3, [sp, #24]
 801a454:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a456:	3b01      	subs	r3, #1
 801a458:	fb00 b003 	mla	r0, r0, r3, fp
 801a45c:	1400      	asrs	r0, r0, #16
 801a45e:	f53f af58 	bmi.w	801a312 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a462:	3901      	subs	r1, #1
 801a464:	4288      	cmp	r0, r1
 801a466:	f6bf af54 	bge.w	801a312 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a46a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a46c:	fb01 5303 	mla	r3, r1, r3, r5
 801a470:	141b      	asrs	r3, r3, #16
 801a472:	f53f af4e 	bmi.w	801a312 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a476:	3a01      	subs	r2, #1
 801a478:	4293      	cmp	r3, r2
 801a47a:	f6bf af4a 	bge.w	801a312 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a47e:	9b06      	ldr	r3, [sp, #24]
 801a480:	9309      	str	r3, [sp, #36]	; 0x24
 801a482:	9b07      	ldr	r3, [sp, #28]
 801a484:	930b      	str	r3, [sp, #44]	; 0x2c
 801a486:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a488:	2b00      	cmp	r3, #0
 801a48a:	dc70      	bgt.n	801a56e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a48c:	9b06      	ldr	r3, [sp, #24]
 801a48e:	9a07      	ldr	r2, [sp, #28]
 801a490:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a494:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a498:	9307      	str	r3, [sp, #28]
 801a49a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a49c:	2b00      	cmp	r3, #0
 801a49e:	f340 80eb 	ble.w	801a678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a4a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a4a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a4aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a4ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a4b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a4b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a4b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a4bc:	eef0 6a62 	vmov.f32	s13, s5
 801a4c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a4c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a4c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a4cc:	ee16 ba90 	vmov	fp, s13
 801a4d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a4d4:	eef0 6a43 	vmov.f32	s13, s6
 801a4d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a4dc:	ee12 2a90 	vmov	r2, s5
 801a4e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a4e4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4e8:	ee13 2a10 	vmov	r2, s6
 801a4ec:	931b      	str	r3, [sp, #108]	; 0x6c
 801a4ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a4f0:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4f4:	931c      	str	r3, [sp, #112]	; 0x70
 801a4f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a4f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a4fa:	3b01      	subs	r3, #1
 801a4fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a500:	930a      	str	r3, [sp, #40]	; 0x28
 801a502:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a504:	bf08      	it	eq
 801a506:	4613      	moveq	r3, r2
 801a508:	ee16 5a90 	vmov	r5, s13
 801a50c:	9306      	str	r3, [sp, #24]
 801a50e:	eeb0 3a67 	vmov.f32	s6, s15
 801a512:	eef0 2a47 	vmov.f32	s5, s14
 801a516:	e6d2      	b.n	801a2be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a518:	b149      	cbz	r1, 801a52e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a51a:	5cba      	ldrb	r2, [r7, r2]
 801a51c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a520:	4422      	add	r2, r4
 801a522:	4660      	mov	r0, ip
 801a524:	4666      	mov	r6, ip
 801a526:	e734      	b.n	801a392 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a528:	4660      	mov	r0, ip
 801a52a:	4662      	mov	r2, ip
 801a52c:	e731      	b.n	801a392 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a52e:	4660      	mov	r0, ip
 801a530:	4662      	mov	r2, ip
 801a532:	e7f7      	b.n	801a524 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a534:	f110 0c01 	adds.w	ip, r0, #1
 801a538:	f53f af74 	bmi.w	801a424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a53c:	4562      	cmp	r2, ip
 801a53e:	f6ff af71 	blt.w	801a424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a542:	f116 0c01 	adds.w	ip, r6, #1
 801a546:	f53f af6d 	bmi.w	801a424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a54a:	4567      	cmp	r7, ip
 801a54c:	f6ff af6a 	blt.w	801a424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a550:	b23f      	sxth	r7, r7
 801a552:	b212      	sxth	r2, r2
 801a554:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a558:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a55c:	9200      	str	r2, [sp, #0]
 801a55e:	9701      	str	r7, [sp, #4]
 801a560:	4623      	mov	r3, r4
 801a562:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a566:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a568:	f7ff fde6 	bl	801a138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a56c:	e75a      	b.n	801a424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a56e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a570:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a574:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a578:	1428      	asrs	r0, r5, #16
 801a57a:	fb02 6000 	mla	r0, r2, r0, r6
 801a57e:	9e08      	ldr	r6, [sp, #32]
 801a580:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a584:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a588:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a58c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a590:	1837      	adds	r7, r6, r0
 801a592:	eb04 0c08 	add.w	ip, r4, r8
 801a596:	2b00      	cmp	r3, #0
 801a598:	d060      	beq.n	801a65c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a59a:	787e      	ldrb	r6, [r7, #1]
 801a59c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a5a0:	4426      	add	r6, r4
 801a5a2:	2900      	cmp	r1, #0
 801a5a4:	d062      	beq.n	801a66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a5a6:	18b8      	adds	r0, r7, r2
 801a5a8:	5cba      	ldrb	r2, [r7, r2]
 801a5aa:	7840      	ldrb	r0, [r0, #1]
 801a5ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a5b0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a5b4:	4422      	add	r2, r4
 801a5b6:	4420      	add	r0, r4
 801a5b8:	b29b      	uxth	r3, r3
 801a5ba:	b289      	uxth	r1, r1
 801a5bc:	fb03 f901 	mul.w	r9, r3, r1
 801a5c0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a5c4:	011b      	lsls	r3, r3, #4
 801a5c6:	b289      	uxth	r1, r1
 801a5c8:	78b7      	ldrb	r7, [r6, #2]
 801a5ca:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a5ce:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a5d2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a5d6:	eba3 0309 	sub.w	r3, r3, r9
 801a5da:	b29b      	uxth	r3, r3
 801a5dc:	ebae 0e01 	sub.w	lr, lr, r1
 801a5e0:	fa1f fe8e 	uxth.w	lr, lr
 801a5e4:	435f      	muls	r7, r3
 801a5e6:	fb0e 770a 	mla	r7, lr, sl, r7
 801a5ea:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a5ee:	fb01 770a 	mla	r7, r1, sl, r7
 801a5f2:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a5f6:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a5fa:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a5fe:	f896 8000 	ldrb.w	r8, [r6]
 801a602:	7876      	ldrb	r6, [r6, #1]
 801a604:	fb03 f808 	mul.w	r8, r3, r8
 801a608:	fb0e 8807 	mla	r8, lr, r7, r8
 801a60c:	7817      	ldrb	r7, [r2, #0]
 801a60e:	fb01 8807 	mla	r8, r1, r7, r8
 801a612:	7807      	ldrb	r7, [r0, #0]
 801a614:	fb09 8707 	mla	r7, r9, r7, r8
 801a618:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a61c:	4373      	muls	r3, r6
 801a61e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a622:	7856      	ldrb	r6, [r2, #1]
 801a624:	ea47 070a 	orr.w	r7, r7, sl
 801a628:	fb0e 330c 	mla	r3, lr, ip, r3
 801a62c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a630:	fb01 3306 	mla	r3, r1, r6, r3
 801a634:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a638:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a63c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a63e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a642:	ea47 070a 	orr.w	r7, r7, sl
 801a646:	f823 7b02 	strh.w	r7, [r3], #2
 801a64a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a64c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a64e:	449b      	add	fp, r3
 801a650:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a652:	441d      	add	r5, r3
 801a654:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a656:	3b01      	subs	r3, #1
 801a658:	9309      	str	r3, [sp, #36]	; 0x24
 801a65a:	e714      	b.n	801a486 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a65c:	b149      	cbz	r1, 801a672 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a65e:	5cba      	ldrb	r2, [r7, r2]
 801a660:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a664:	4422      	add	r2, r4
 801a666:	4660      	mov	r0, ip
 801a668:	4666      	mov	r6, ip
 801a66a:	e7a5      	b.n	801a5b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a66c:	4660      	mov	r0, ip
 801a66e:	4662      	mov	r2, ip
 801a670:	e7a2      	b.n	801a5b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a672:	4660      	mov	r0, ip
 801a674:	4662      	mov	r2, ip
 801a676:	e7f7      	b.n	801a668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801a678:	b00f      	add	sp, #60	; 0x3c
 801a67a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a67e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a67e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a682:	b085      	sub	sp, #20
 801a684:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801a688:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a68c:	9102      	str	r1, [sp, #8]
 801a68e:	2c00      	cmp	r4, #0
 801a690:	fb04 710c 	mla	r1, r4, ip, r7
 801a694:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a698:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801a69c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a6a0:	eb02 0e01 	add.w	lr, r2, r1
 801a6a4:	f2c0 8122 	blt.w	801a8ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a6a8:	45a0      	cmp	r8, r4
 801a6aa:	f340 811f 	ble.w	801a8ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a6ae:	2f00      	cmp	r7, #0
 801a6b0:	f2c0 811a 	blt.w	801a8e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a6b4:	45bc      	cmp	ip, r7
 801a6b6:	f340 8117 	ble.w	801a8e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a6ba:	5c52      	ldrb	r2, [r2, r1]
 801a6bc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a6c0:	1c7a      	adds	r2, r7, #1
 801a6c2:	f100 8116 	bmi.w	801a8f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a6c6:	4594      	cmp	ip, r2
 801a6c8:	f340 8113 	ble.w	801a8f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a6cc:	2e00      	cmp	r6, #0
 801a6ce:	f000 8112 	beq.w	801a8f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801a6d2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a6d6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a6da:	3401      	adds	r4, #1
 801a6dc:	f100 810f 	bmi.w	801a8fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a6e0:	45a0      	cmp	r8, r4
 801a6e2:	f340 810c 	ble.w	801a8fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a6e6:	2800      	cmp	r0, #0
 801a6e8:	f000 810c 	beq.w	801a904 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801a6ec:	2f00      	cmp	r7, #0
 801a6ee:	f2c0 8104 	blt.w	801a8fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a6f2:	45bc      	cmp	ip, r7
 801a6f4:	f340 8101 	ble.w	801a8fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a6f8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801a6fc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801a700:	3701      	adds	r7, #1
 801a702:	f100 8102 	bmi.w	801a90a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a706:	45bc      	cmp	ip, r7
 801a708:	f340 80ff 	ble.w	801a90a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a70c:	2e00      	cmp	r6, #0
 801a70e:	f000 80fe 	beq.w	801a90e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801a712:	44f4      	add	ip, lr
 801a714:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801a718:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a71c:	b2b6      	uxth	r6, r6
 801a71e:	b280      	uxth	r0, r0
 801a720:	fb00 fe06 	mul.w	lr, r0, r6
 801a724:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a728:	0136      	lsls	r6, r6, #4
 801a72a:	eba6 070e 	sub.w	r7, r6, lr
 801a72e:	b280      	uxth	r0, r0
 801a730:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801a734:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a738:	b2bf      	uxth	r7, r7
 801a73a:	1a1b      	subs	r3, r3, r0
 801a73c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a740:	b29b      	uxth	r3, r3
 801a742:	fb0a f607 	mul.w	r6, sl, r7
 801a746:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a74a:	fb0b 6603 	mla	r6, fp, r3, r6
 801a74e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a752:	fb00 6609 	mla	r6, r0, r9, r6
 801a756:	fb0e 6608 	mla	r6, lr, r8, r6
 801a75a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a75e:	9600      	str	r6, [sp, #0]
 801a760:	2e00      	cmp	r6, #0
 801a762:	f000 80be 	beq.w	801a8e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801a766:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a76a:	fb0b fc0c 	mul.w	ip, fp, ip
 801a76e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a772:	fb0b f505 	mul.w	r5, fp, r5
 801a776:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a77a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801a77e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a782:	44dc      	add	ip, fp
 801a784:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a788:	9501      	str	r5, [sp, #4]
 801a78a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801a78e:	9503      	str	r5, [sp, #12]
 801a790:	9d01      	ldr	r5, [sp, #4]
 801a792:	9e02      	ldr	r6, [sp, #8]
 801a794:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801a798:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a79c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801a7a0:	fb0a fc0c 	mul.w	ip, sl, ip
 801a7a4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a7a8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a7ac:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a7b0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a7b4:	4465      	add	r5, ip
 801a7b6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a7ba:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a7be:	fb09 fc0c 	mul.w	ip, r9, ip
 801a7c2:	fb09 f904 	mul.w	r9, r9, r4
 801a7c6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801a7ca:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801a7ce:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801a7d2:	fb08 f404 	mul.w	r4, r8, r4
 801a7d6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a7da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a7de:	fb08 f802 	mul.w	r8, r8, r2
 801a7e2:	fb0a fa01 	mul.w	sl, sl, r1
 801a7e6:	0a22      	lsrs	r2, r4, #8
 801a7e8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801a7ec:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a7f0:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801a7f4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a7f8:	4414      	add	r4, r2
 801a7fa:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801a7fe:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801a802:	0a2d      	lsrs	r5, r5, #8
 801a804:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a808:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a80c:	9a03      	ldr	r2, [sp, #12]
 801a80e:	8836      	ldrh	r6, [r6, #0]
 801a810:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a814:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a818:	437d      	muls	r5, r7
 801a81a:	4461      	add	r1, ip
 801a81c:	0a24      	lsrs	r4, r4, #8
 801a81e:	fb02 5503 	mla	r5, r2, r3, r5
 801a822:	0a09      	lsrs	r1, r1, #8
 801a824:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a828:	fb04 540e 	mla	r4, r4, lr, r5
 801a82c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a830:	fb01 4100 	mla	r1, r1, r0, r4
 801a834:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a838:	0a09      	lsrs	r1, r1, #8
 801a83a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a83e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801a842:	fb07 f70a 	mul.w	r7, r7, sl
 801a846:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a84a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801a84e:	fb03 7101 	mla	r1, r3, r1, r7
 801a852:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a856:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a85a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a85e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801a862:	fb00 e101 	mla	r1, r0, r1, lr
 801a866:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801a86a:	9a00      	ldr	r2, [sp, #0]
 801a86c:	b287      	uxth	r7, r0
 801a86e:	437a      	muls	r2, r7
 801a870:	0a09      	lsrs	r1, r1, #8
 801a872:	1c53      	adds	r3, r2, #1
 801a874:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a878:	4321      	orrs	r1, r4
 801a87a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a87e:	1235      	asrs	r5, r6, #8
 801a880:	0c0a      	lsrs	r2, r1, #16
 801a882:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a886:	b2db      	uxtb	r3, r3
 801a888:	fb12 f207 	smulbb	r2, r2, r7
 801a88c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a890:	fb05 2503 	mla	r5, r5, r3, r2
 801a894:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801a898:	10f2      	asrs	r2, r6, #3
 801a89a:	b2c8      	uxtb	r0, r1
 801a89c:	00f6      	lsls	r6, r6, #3
 801a89e:	fb14 f407 	smulbb	r4, r4, r7
 801a8a2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a8a6:	b2f6      	uxtb	r6, r6
 801a8a8:	fb10 f007 	smulbb	r0, r0, r7
 801a8ac:	fb02 4203 	mla	r2, r2, r3, r4
 801a8b0:	b2ad      	uxth	r5, r5
 801a8b2:	fb06 0303 	mla	r3, r6, r3, r0
 801a8b6:	b299      	uxth	r1, r3
 801a8b8:	b294      	uxth	r4, r2
 801a8ba:	1c6b      	adds	r3, r5, #1
 801a8bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a8c0:	1c62      	adds	r2, r4, #1
 801a8c2:	1c4b      	adds	r3, r1, #1
 801a8c4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a8c8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a8cc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a8d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a8d4:	0952      	lsrs	r2, r2, #5
 801a8d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a8da:	432b      	orrs	r3, r5
 801a8dc:	4313      	orrs	r3, r2
 801a8de:	9a02      	ldr	r2, [sp, #8]
 801a8e0:	8013      	strh	r3, [r2, #0]
 801a8e2:	b005      	add	sp, #20
 801a8e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8e8:	2500      	movs	r5, #0
 801a8ea:	e6e9      	b.n	801a6c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801a8ec:	2100      	movs	r1, #0
 801a8ee:	460d      	mov	r5, r1
 801a8f0:	e6f3      	b.n	801a6da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a8f2:	2100      	movs	r1, #0
 801a8f4:	e6f1      	b.n	801a6da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a8f6:	4631      	mov	r1, r6
 801a8f8:	e6ef      	b.n	801a6da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a8fa:	2400      	movs	r4, #0
 801a8fc:	e700      	b.n	801a700 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801a8fe:	2200      	movs	r2, #0
 801a900:	4614      	mov	r4, r2
 801a902:	e70b      	b.n	801a71c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a904:	4602      	mov	r2, r0
 801a906:	4604      	mov	r4, r0
 801a908:	e708      	b.n	801a71c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a90a:	2200      	movs	r2, #0
 801a90c:	e706      	b.n	801a71c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a90e:	4632      	mov	r2, r6
 801a910:	e704      	b.n	801a71c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801a912 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a912:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a916:	b09f      	sub	sp, #124	; 0x7c
 801a918:	921b      	str	r2, [sp, #108]	; 0x6c
 801a91a:	9309      	str	r3, [sp, #36]	; 0x24
 801a91c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a91e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801a922:	931c      	str	r3, [sp, #112]	; 0x70
 801a924:	9119      	str	r1, [sp, #100]	; 0x64
 801a926:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801a92a:	901d      	str	r0, [sp, #116]	; 0x74
 801a92c:	6850      	ldr	r0, [r2, #4]
 801a92e:	6812      	ldr	r2, [r2, #0]
 801a930:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801a932:	fb00 1303 	mla	r3, r0, r3, r1
 801a936:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a93a:	930c      	str	r3, [sp, #48]	; 0x30
 801a93c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a93e:	681b      	ldr	r3, [r3, #0]
 801a940:	9312      	str	r3, [sp, #72]	; 0x48
 801a942:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a944:	685e      	ldr	r6, [r3, #4]
 801a946:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801a94a:	930d      	str	r3, [sp, #52]	; 0x34
 801a94c:	3604      	adds	r6, #4
 801a94e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a950:	2b00      	cmp	r3, #0
 801a952:	dc03      	bgt.n	801a95c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a954:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a956:	2b00      	cmp	r3, #0
 801a958:	f340 8388 	ble.w	801b06c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801a95c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a95e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a962:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a966:	1e48      	subs	r0, r1, #1
 801a968:	1e57      	subs	r7, r2, #1
 801a96a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a96c:	2b00      	cmp	r3, #0
 801a96e:	f340 8195 	ble.w	801ac9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a972:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801a974:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a978:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a97c:	d406      	bmi.n	801a98c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a97e:	4584      	cmp	ip, r0
 801a980:	da04      	bge.n	801a98c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a982:	2b00      	cmp	r3, #0
 801a984:	db02      	blt.n	801a98c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a986:	42bb      	cmp	r3, r7
 801a988:	f2c0 8189 	blt.w	801ac9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a98c:	f11c 0c01 	adds.w	ip, ip, #1
 801a990:	f100 8177 	bmi.w	801ac82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a994:	4561      	cmp	r1, ip
 801a996:	f2c0 8174 	blt.w	801ac82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a99a:	3301      	adds	r3, #1
 801a99c:	f100 8171 	bmi.w	801ac82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a9a0:	429a      	cmp	r2, r3
 801a9a2:	f2c0 816e 	blt.w	801ac82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a9a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a9a8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801a9aa:	931a      	str	r3, [sp, #104]	; 0x68
 801a9ac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801a9ae:	2b00      	cmp	r3, #0
 801a9b0:	f340 8193 	ble.w	801acda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801a9b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a9b6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a9ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a9bc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801a9c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a9c2:	141b      	asrs	r3, r3, #16
 801a9c4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a9c8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a9cc:	f100 81d6 	bmi.w	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a9d0:	f100 38ff 	add.w	r8, r0, #4294967295
 801a9d4:	4543      	cmp	r3, r8
 801a9d6:	f280 81d1 	bge.w	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a9da:	f1bc 0f00 	cmp.w	ip, #0
 801a9de:	f2c0 81cd 	blt.w	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a9e2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a9e6:	45c4      	cmp	ip, r8
 801a9e8:	f280 81c8 	bge.w	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a9ec:	b200      	sxth	r0, r0
 801a9ee:	fb0c 3300 	mla	r3, ip, r0, r3
 801a9f2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a9f4:	eb04 0803 	add.w	r8, r4, r3
 801a9f8:	5ce3      	ldrb	r3, [r4, r3]
 801a9fa:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a9fe:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801aa02:	2a00      	cmp	r2, #0
 801aa04:	f000 81af 	beq.w	801ad66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801aa08:	f898 c001 	ldrb.w	ip, [r8, #1]
 801aa0c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801aa10:	940e      	str	r4, [sp, #56]	; 0x38
 801aa12:	0e24      	lsrs	r4, r4, #24
 801aa14:	9415      	str	r4, [sp, #84]	; 0x54
 801aa16:	b179      	cbz	r1, 801aa38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801aa18:	eb08 0c00 	add.w	ip, r8, r0
 801aa1c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801aa20:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801aa24:	900a      	str	r0, [sp, #40]	; 0x28
 801aa26:	0e00      	lsrs	r0, r0, #24
 801aa28:	9013      	str	r0, [sp, #76]	; 0x4c
 801aa2a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801aa2e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801aa32:	900f      	str	r0, [sp, #60]	; 0x3c
 801aa34:	0e00      	lsrs	r0, r0, #24
 801aa36:	9016      	str	r0, [sp, #88]	; 0x58
 801aa38:	b292      	uxth	r2, r2
 801aa3a:	b289      	uxth	r1, r1
 801aa3c:	fb02 f901 	mul.w	r9, r2, r1
 801aa40:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aa44:	0112      	lsls	r2, r2, #4
 801aa46:	eba2 0809 	sub.w	r8, r2, r9
 801aa4a:	b289      	uxth	r1, r1
 801aa4c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801aa50:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aa52:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa54:	fa1f f888 	uxth.w	r8, r8
 801aa58:	1a52      	subs	r2, r2, r1
 801aa5a:	b292      	uxth	r2, r2
 801aa5c:	fb08 f000 	mul.w	r0, r8, r0
 801aa60:	fb02 000e 	mla	r0, r2, lr, r0
 801aa64:	fb01 0004 	mla	r0, r1, r4, r0
 801aa68:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aa6a:	fb09 0004 	mla	r0, r9, r4, r0
 801aa6e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801aa72:	2800      	cmp	r0, #0
 801aa74:	f000 80fa 	beq.w	801ac6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aa78:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801aa7c:	d01b      	beq.n	801aab6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801aa7e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801aa82:	fb0e fa0a 	mul.w	sl, lr, sl
 801aa86:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aa8a:	fb0e fe03 	mul.w	lr, lr, r3
 801aa8e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801aa92:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aa96:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801aa9a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801aa9e:	4453      	add	r3, sl
 801aaa0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801aaa4:	0a1b      	lsrs	r3, r3, #8
 801aaa6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aaaa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aaae:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801aab2:	ea43 030c 	orr.w	r3, r3, ip
 801aab6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aab8:	2cff      	cmp	r4, #255	; 0xff
 801aaba:	d021      	beq.n	801ab00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801aabc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aabe:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801aac2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aac4:	fb04 fb0b 	mul.w	fp, r4, fp
 801aac8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aaca:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aace:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aad0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aad4:	fb04 fa0a 	mul.w	sl, r4, sl
 801aad8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aadc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aae0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aae4:	44de      	add	lr, fp
 801aae6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aaea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aaee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aaf2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aaf6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aafa:	ea4e 040a 	orr.w	r4, lr, sl
 801aafe:	940e      	str	r4, [sp, #56]	; 0x38
 801ab00:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab02:	2cff      	cmp	r4, #255	; 0xff
 801ab04:	d021      	beq.n	801ab4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ab06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ab08:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ab0c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab0e:	fb04 fb0b 	mul.w	fp, r4, fp
 801ab12:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ab14:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ab18:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab1a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ab1e:	fb04 fa0a 	mul.w	sl, r4, sl
 801ab22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ab26:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ab2a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ab2e:	44de      	add	lr, fp
 801ab30:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ab34:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ab38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab3c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ab40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ab44:	ea4e 040a 	orr.w	r4, lr, sl
 801ab48:	940a      	str	r4, [sp, #40]	; 0x28
 801ab4a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ab4c:	2cff      	cmp	r4, #255	; 0xff
 801ab4e:	d021      	beq.n	801ab94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801ab50:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ab52:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ab56:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ab58:	fb04 fb0b 	mul.w	fp, r4, fp
 801ab5c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ab5e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ab62:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ab64:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ab68:	fb04 fa0a 	mul.w	sl, r4, sl
 801ab6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ab70:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ab74:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ab78:	44de      	add	lr, fp
 801ab7a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ab7e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ab82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab86:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ab8a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ab8e:	ea4e 040a 	orr.w	r4, lr, sl
 801ab92:	940f      	str	r4, [sp, #60]	; 0x3c
 801ab94:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ab96:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ab9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ab9c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801aba0:	fb08 fc0c 	mul.w	ip, r8, ip
 801aba4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801aba8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801abac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801abae:	fb01 cc0e 	mla	ip, r1, lr, ip
 801abb2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801abb6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801abb8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801abbc:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801abc0:	fb08 f80e 	mul.w	r8, r8, lr
 801abc4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801abc8:	fb02 8303 	mla	r3, r2, r3, r8
 801abcc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801abce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801abd0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801abd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801abd6:	fb01 330a 	mla	r3, r1, sl, r3
 801abda:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801abde:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801abe0:	fb09 3901 	mla	r9, r9, r1, r3
 801abe4:	4342      	muls	r2, r0
 801abe6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801abee:	883b      	ldrh	r3, [r7, #0]
 801abf0:	1c50      	adds	r0, r2, #1
 801abf2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801abf6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801abfa:	ea4c 0c09 	orr.w	ip, ip, r9
 801abfe:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ac02:	1219      	asrs	r1, r3, #8
 801ac04:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ac08:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ac0c:	b2c0      	uxtb	r0, r0
 801ac0e:	fb12 f204 	smulbb	r2, r2, r4
 801ac12:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ac16:	fb01 2100 	mla	r1, r1, r0, r2
 801ac1a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ac1e:	10da      	asrs	r2, r3, #3
 801ac20:	fa5f fc8c 	uxtb.w	ip, ip
 801ac24:	00db      	lsls	r3, r3, #3
 801ac26:	fb1c fc04 	smulbb	ip, ip, r4
 801ac2a:	b2db      	uxtb	r3, r3
 801ac2c:	b289      	uxth	r1, r1
 801ac2e:	fb03 c300 	mla	r3, r3, r0, ip
 801ac32:	fa1f fc83 	uxth.w	ip, r3
 801ac36:	1c4b      	adds	r3, r1, #1
 801ac38:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ac3c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ac40:	fb1e fe04 	smulbb	lr, lr, r4
 801ac44:	f10c 0301 	add.w	r3, ip, #1
 801ac48:	fb02 e200 	mla	r2, r2, r0, lr
 801ac4c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ac50:	b292      	uxth	r2, r2
 801ac52:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ac56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ac5a:	430b      	orrs	r3, r1
 801ac5c:	1c51      	adds	r1, r2, #1
 801ac5e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ac62:	0952      	lsrs	r2, r2, #5
 801ac64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ac68:	4313      	orrs	r3, r2
 801ac6a:	803b      	strh	r3, [r7, #0]
 801ac6c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ac6e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ac70:	441a      	add	r2, r3
 801ac72:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac74:	9229      	str	r2, [sp, #164]	; 0xa4
 801ac76:	441d      	add	r5, r3
 801ac78:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ac7a:	3b01      	subs	r3, #1
 801ac7c:	3702      	adds	r7, #2
 801ac7e:	931a      	str	r3, [sp, #104]	; 0x68
 801ac80:	e694      	b.n	801a9ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ac82:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ac84:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ac86:	441c      	add	r4, r3
 801ac88:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac8a:	9429      	str	r4, [sp, #164]	; 0xa4
 801ac8c:	441d      	add	r5, r3
 801ac8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac90:	3b01      	subs	r3, #1
 801ac92:	9309      	str	r3, [sp, #36]	; 0x24
 801ac94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ac96:	3302      	adds	r3, #2
 801ac98:	930c      	str	r3, [sp, #48]	; 0x30
 801ac9a:	e666      	b.n	801a96a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ac9c:	d024      	beq.n	801ace8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801ac9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aca0:	982b      	ldr	r0, [sp, #172]	; 0xac
 801aca2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aca4:	3b01      	subs	r3, #1
 801aca6:	fb00 4003 	mla	r0, r0, r3, r4
 801acaa:	1400      	asrs	r0, r0, #16
 801acac:	f53f ae7b 	bmi.w	801a9a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801acb0:	3901      	subs	r1, #1
 801acb2:	4288      	cmp	r0, r1
 801acb4:	f6bf ae77 	bge.w	801a9a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801acb8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801acba:	fb01 5303 	mla	r3, r1, r3, r5
 801acbe:	141b      	asrs	r3, r3, #16
 801acc0:	f53f ae71 	bmi.w	801a9a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801acc4:	3a01      	subs	r2, #1
 801acc6:	4293      	cmp	r3, r2
 801acc8:	f6bf ae6d 	bge.w	801a9a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801accc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801acd0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801acd4:	f1bb 0f00 	cmp.w	fp, #0
 801acd8:	dc70      	bgt.n	801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801acda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801acdc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ace0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ace2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ace6:	930c      	str	r3, [sp, #48]	; 0x30
 801ace8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801acea:	2b00      	cmp	r3, #0
 801acec:	f340 81be 	ble.w	801b06c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801acf0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801acf4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801acf8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801acfc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801acfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad02:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad0a:	eef0 6a62 	vmov.f32	s13, s5
 801ad0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad16:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad1a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801ad1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad22:	eef0 6a43 	vmov.f32	s13, s6
 801ad26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad2a:	ee12 2a90 	vmov	r2, s5
 801ad2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad32:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad36:	ee13 2a10 	vmov	r2, s6
 801ad3a:	932b      	str	r3, [sp, #172]	; 0xac
 801ad3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ad3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad42:	932c      	str	r3, [sp, #176]	; 0xb0
 801ad44:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ad46:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801ad48:	3b01      	subs	r3, #1
 801ad4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad4e:	9319      	str	r3, [sp, #100]	; 0x64
 801ad50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ad52:	bf08      	it	eq
 801ad54:	4613      	moveq	r3, r2
 801ad56:	ee16 5a90 	vmov	r5, s13
 801ad5a:	9309      	str	r3, [sp, #36]	; 0x24
 801ad5c:	eeb0 3a67 	vmov.f32	s6, s15
 801ad60:	eef0 2a47 	vmov.f32	s5, s14
 801ad64:	e5f3      	b.n	801a94e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ad66:	2900      	cmp	r1, #0
 801ad68:	f43f ae66 	beq.w	801aa38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ad6c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ad70:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ad74:	900a      	str	r0, [sp, #40]	; 0x28
 801ad76:	0e00      	lsrs	r0, r0, #24
 801ad78:	9013      	str	r0, [sp, #76]	; 0x4c
 801ad7a:	e65d      	b.n	801aa38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ad7c:	f113 0801 	adds.w	r8, r3, #1
 801ad80:	f53f af74 	bmi.w	801ac6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ad84:	4540      	cmp	r0, r8
 801ad86:	f6ff af71 	blt.w	801ac6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ad8a:	f11c 0801 	adds.w	r8, ip, #1
 801ad8e:	f53f af6d 	bmi.w	801ac6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ad92:	45c6      	cmp	lr, r8
 801ad94:	f6ff af6a 	blt.w	801ac6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ad98:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801ad9a:	9302      	str	r3, [sp, #8]
 801ad9c:	b200      	sxth	r0, r0
 801ad9e:	fa0f f38e 	sxth.w	r3, lr
 801ada2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ada6:	e9cd c203 	strd	ip, r2, [sp, #12]
 801adaa:	9301      	str	r3, [sp, #4]
 801adac:	9000      	str	r0, [sp, #0]
 801adae:	4633      	mov	r3, r6
 801adb0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801adb2:	981d      	ldr	r0, [sp, #116]	; 0x74
 801adb4:	4639      	mov	r1, r7
 801adb6:	f7ff fc62 	bl	801a67e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801adba:	e757      	b.n	801ac6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801adbc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801adbe:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801adc0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801adc4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801adc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801adca:	1427      	asrs	r7, r4, #16
 801adcc:	142b      	asrs	r3, r5, #16
 801adce:	fb01 7303 	mla	r3, r1, r3, r7
 801add2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801add4:	18e7      	adds	r7, r4, r3
 801add6:	5ce3      	ldrb	r3, [r4, r3]
 801add8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801addc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ade0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ade4:	2a00      	cmp	r2, #0
 801ade6:	f000 8137 	beq.w	801b058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801adea:	f897 e001 	ldrb.w	lr, [r7, #1]
 801adee:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801adf2:	9410      	str	r4, [sp, #64]	; 0x40
 801adf4:	0e24      	lsrs	r4, r4, #24
 801adf6:	9417      	str	r4, [sp, #92]	; 0x5c
 801adf8:	b170      	cbz	r0, 801ae18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801adfa:	eb07 0e01 	add.w	lr, r7, r1
 801adfe:	5c79      	ldrb	r1, [r7, r1]
 801ae00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ae04:	910b      	str	r1, [sp, #44]	; 0x2c
 801ae06:	0e09      	lsrs	r1, r1, #24
 801ae08:	9114      	str	r1, [sp, #80]	; 0x50
 801ae0a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ae0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ae12:	9111      	str	r1, [sp, #68]	; 0x44
 801ae14:	0e09      	lsrs	r1, r1, #24
 801ae16:	9118      	str	r1, [sp, #96]	; 0x60
 801ae18:	b292      	uxth	r2, r2
 801ae1a:	b280      	uxth	r0, r0
 801ae1c:	fb02 f800 	mul.w	r8, r2, r0
 801ae20:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ae24:	0112      	lsls	r2, r2, #4
 801ae26:	eba2 0e08 	sub.w	lr, r2, r8
 801ae2a:	b280      	uxth	r0, r0
 801ae2c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ae30:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801ae32:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ae34:	fa1f fe8e 	uxth.w	lr, lr
 801ae38:	1a12      	subs	r2, r2, r0
 801ae3a:	b292      	uxth	r2, r2
 801ae3c:	fb0e f101 	mul.w	r1, lr, r1
 801ae40:	fb02 110c 	mla	r1, r2, ip, r1
 801ae44:	fb00 1104 	mla	r1, r0, r4, r1
 801ae48:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801ae4a:	fb08 1104 	mla	r1, r8, r4, r1
 801ae4e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ae52:	2900      	cmp	r1, #0
 801ae54:	f000 80f5 	beq.w	801b042 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ae58:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ae5c:	d019      	beq.n	801ae92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801ae5e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ae62:	fb0c fa0a 	mul.w	sl, ip, sl
 801ae66:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ae6a:	fb0c fc03 	mul.w	ip, ip, r3
 801ae6e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ae72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ae76:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ae7a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ae7e:	4453      	add	r3, sl
 801ae80:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ae84:	0a1b      	lsrs	r3, r3, #8
 801ae86:	0a3f      	lsrs	r7, r7, #8
 801ae88:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ae8c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ae90:	433b      	orrs	r3, r7
 801ae92:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ae94:	2cff      	cmp	r4, #255	; 0xff
 801ae96:	d020      	beq.n	801aeda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801ae98:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ae9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ae9e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801aea0:	4367      	muls	r7, r4
 801aea2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801aea4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aea8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801aeaa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aeae:	fb04 fa0a 	mul.w	sl, r4, sl
 801aeb2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aeb6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aeba:	44bc      	add	ip, r7
 801aebc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aec0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aec4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aec8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aecc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aed0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aed4:	ea4c 040a 	orr.w	r4, ip, sl
 801aed8:	9410      	str	r4, [sp, #64]	; 0x40
 801aeda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aedc:	2cff      	cmp	r4, #255	; 0xff
 801aede:	d020      	beq.n	801af22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801aee0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aee2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801aee6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aee8:	4367      	muls	r7, r4
 801aeea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aeec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aef0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aef2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aef6:	fb04 fa0a 	mul.w	sl, r4, sl
 801aefa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aefe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af02:	44bc      	add	ip, r7
 801af04:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801af08:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801af0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af14:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801af1c:	ea4c 040a 	orr.w	r4, ip, sl
 801af20:	940b      	str	r4, [sp, #44]	; 0x2c
 801af22:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801af24:	2cff      	cmp	r4, #255	; 0xff
 801af26:	d020      	beq.n	801af6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801af28:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801af2a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801af2e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801af30:	4367      	muls	r7, r4
 801af32:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801af34:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801af38:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801af3a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801af3e:	fb04 fa0a 	mul.w	sl, r4, sl
 801af42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801af46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af4a:	44bc      	add	ip, r7
 801af4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801af50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801af54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801af64:	ea4c 040a 	orr.w	r4, ip, sl
 801af68:	9411      	str	r4, [sp, #68]	; 0x44
 801af6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801af6c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801af70:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801af72:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801af76:	fb0e f707 	mul.w	r7, lr, r7
 801af7a:	fb02 770c 	mla	r7, r2, ip, r7
 801af7e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801af82:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801af84:	fb00 770c 	mla	r7, r0, ip, r7
 801af88:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801af8c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801af8e:	fb08 770c 	mla	r7, r8, ip, r7
 801af92:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801af96:	fb0e fe0c 	mul.w	lr, lr, ip
 801af9a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801af9e:	fb02 e303 	mla	r3, r2, r3, lr
 801afa2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801afa4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801afa6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801afaa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801afac:	fb00 330a 	mla	r3, r0, sl, r3
 801afb0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801afb4:	fb08 3c0c 	mla	ip, r8, ip, r3
 801afb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801afba:	f8b9 0000 	ldrh.w	r0, [r9]
 801afbe:	434b      	muls	r3, r1
 801afc0:	0a3f      	lsrs	r7, r7, #8
 801afc2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801afc6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801afca:	1c59      	adds	r1, r3, #1
 801afcc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801afd0:	ea47 070c 	orr.w	r7, r7, ip
 801afd4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801afd8:	1202      	asrs	r2, r0, #8
 801afda:	0c3b      	lsrs	r3, r7, #16
 801afdc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801afe0:	b2c9      	uxtb	r1, r1
 801afe2:	fb13 f304 	smulbb	r3, r3, r4
 801afe6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801afea:	fb02 3201 	mla	r2, r2, r1, r3
 801afee:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801aff2:	10c3      	asrs	r3, r0, #3
 801aff4:	b2ff      	uxtb	r7, r7
 801aff6:	00c0      	lsls	r0, r0, #3
 801aff8:	b292      	uxth	r2, r2
 801affa:	fb1c fc04 	smulbb	ip, ip, r4
 801affe:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b002:	b2c0      	uxtb	r0, r0
 801b004:	fb17 f704 	smulbb	r7, r7, r4
 801b008:	fb03 c301 	mla	r3, r3, r1, ip
 801b00c:	fb00 7001 	mla	r0, r0, r1, r7
 801b010:	f102 0c01 	add.w	ip, r2, #1
 801b014:	b280      	uxth	r0, r0
 801b016:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b01a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b01e:	1c42      	adds	r2, r0, #1
 801b020:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b024:	b29b      	uxth	r3, r3
 801b026:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b02a:	ea42 020c 	orr.w	r2, r2, ip
 801b02e:	f103 0c01 	add.w	ip, r3, #1
 801b032:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b036:	095b      	lsrs	r3, r3, #5
 801b038:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b03c:	431a      	orrs	r2, r3
 801b03e:	f8a9 2000 	strh.w	r2, [r9]
 801b042:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b044:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b046:	441a      	add	r2, r3
 801b048:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b04a:	9229      	str	r2, [sp, #164]	; 0xa4
 801b04c:	f109 0902 	add.w	r9, r9, #2
 801b050:	441d      	add	r5, r3
 801b052:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b056:	e63d      	b.n	801acd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b058:	2800      	cmp	r0, #0
 801b05a:	f43f aedd 	beq.w	801ae18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b05e:	5c79      	ldrb	r1, [r7, r1]
 801b060:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b064:	910b      	str	r1, [sp, #44]	; 0x2c
 801b066:	0e09      	lsrs	r1, r1, #24
 801b068:	9114      	str	r1, [sp, #80]	; 0x50
 801b06a:	e6d5      	b.n	801ae18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b06c:	b01f      	add	sp, #124	; 0x7c
 801b06e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b072 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b072:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b076:	b089      	sub	sp, #36	; 0x24
 801b078:	9101      	str	r1, [sp, #4]
 801b07a:	9801      	ldr	r0, [sp, #4]
 801b07c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b080:	8800      	ldrh	r0, [r0, #0]
 801b082:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b086:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b08a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b08e:	1206      	asrs	r6, r0, #8
 801b090:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b094:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b098:	9602      	str	r6, [sp, #8]
 801b09a:	10c6      	asrs	r6, r0, #3
 801b09c:	00c0      	lsls	r0, r0, #3
 801b09e:	b2c0      	uxtb	r0, r0
 801b0a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b0a4:	9004      	str	r0, [sp, #16]
 801b0a6:	2f00      	cmp	r7, #0
 801b0a8:	fb07 100c 	mla	r0, r7, ip, r1
 801b0ac:	9603      	str	r6, [sp, #12]
 801b0ae:	eb02 0e00 	add.w	lr, r2, r0
 801b0b2:	f2c0 810a 	blt.w	801b2ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b0b6:	45b8      	cmp	r8, r7
 801b0b8:	f340 8107 	ble.w	801b2ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b0bc:	2900      	cmp	r1, #0
 801b0be:	f2c0 8102 	blt.w	801b2c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b0c2:	458c      	cmp	ip, r1
 801b0c4:	f340 80ff 	ble.w	801b2c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b0c8:	5c12      	ldrb	r2, [r2, r0]
 801b0ca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b0ce:	1c4a      	adds	r2, r1, #1
 801b0d0:	f100 80fe 	bmi.w	801b2d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b0d4:	4594      	cmp	ip, r2
 801b0d6:	f340 80fb 	ble.w	801b2d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b0da:	2d00      	cmp	r5, #0
 801b0dc:	f000 80fa 	beq.w	801b2d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b0e0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b0e4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b0e8:	3701      	adds	r7, #1
 801b0ea:	f100 80f7 	bmi.w	801b2dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b0ee:	45b8      	cmp	r8, r7
 801b0f0:	f340 80f4 	ble.w	801b2dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b0f4:	2c00      	cmp	r4, #0
 801b0f6:	f000 80f4 	beq.w	801b2e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b0fa:	2900      	cmp	r1, #0
 801b0fc:	eb0e 020c 	add.w	r2, lr, ip
 801b100:	f2c0 80ea 	blt.w	801b2d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b104:	458c      	cmp	ip, r1
 801b106:	f340 80e7 	ble.w	801b2d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b10a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b10e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b112:	3101      	adds	r1, #1
 801b114:	f100 80e8 	bmi.w	801b2e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b118:	458c      	cmp	ip, r1
 801b11a:	f340 80e5 	ble.w	801b2e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b11e:	2d00      	cmp	r5, #0
 801b120:	f000 80e4 	beq.w	801b2ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b124:	7852      	ldrb	r2, [r2, #1]
 801b126:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b12a:	0e0b      	lsrs	r3, r1, #24
 801b12c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b130:	9300      	str	r3, [sp, #0]
 801b132:	b2a4      	uxth	r4, r4
 801b134:	b2ab      	uxth	r3, r5
 801b136:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b13a:	fb03 f904 	mul.w	r9, r3, r4
 801b13e:	fb0a f505 	mul.w	r5, sl, r5
 801b142:	011b      	lsls	r3, r3, #4
 801b144:	eba3 0e09 	sub.w	lr, r3, r9
 801b148:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b14c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b150:	0a28      	lsrs	r0, r5, #8
 801b152:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b156:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b15a:	4405      	add	r5, r0
 801b15c:	0a2d      	lsrs	r5, r5, #8
 801b15e:	fb0a f303 	mul.w	r3, sl, r3
 801b162:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b166:	9005      	str	r0, [sp, #20]
 801b168:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b16c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b170:	0a1b      	lsrs	r3, r3, #8
 801b172:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b176:	9306      	str	r3, [sp, #24]
 801b178:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b17c:	fb0b f303 	mul.w	r3, fp, r3
 801b180:	0a1d      	lsrs	r5, r3, #8
 801b182:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b186:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b18a:	fb0b f606 	mul.w	r6, fp, r6
 801b18e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b192:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b196:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b19a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b19e:	fb08 f707 	mul.w	r7, r8, r7
 801b1a2:	441d      	add	r5, r3
 801b1a4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b1a8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b1ac:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b1b0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b1b4:	fb08 fc0c 	mul.w	ip, r8, ip
 801b1b8:	0a1b      	lsrs	r3, r3, #8
 801b1ba:	9307      	str	r3, [sp, #28]
 801b1bc:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b1c0:	0e0b      	lsrs	r3, r1, #24
 801b1c2:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b1c6:	435f      	muls	r7, r3
 801b1c8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b1cc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b1d0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b1d4:	4460      	add	r0, ip
 801b1d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b1da:	b2a4      	uxth	r4, r4
 801b1dc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b1e0:	0a2d      	lsrs	r5, r5, #8
 801b1e2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b1e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1ea:	fa1f fe8e 	uxth.w	lr, lr
 801b1ee:	4359      	muls	r1, r3
 801b1f0:	1b12      	subs	r2, r2, r4
 801b1f2:	9b05      	ldr	r3, [sp, #20]
 801b1f4:	44bc      	add	ip, r7
 801b1f6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b1fa:	b292      	uxth	r2, r2
 801b1fc:	fb05 f50e 	mul.w	r5, r5, lr
 801b200:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b204:	fb03 5502 	mla	r5, r3, r2, r5
 801b208:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b20c:	9b06      	ldr	r3, [sp, #24]
 801b20e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b212:	0a36      	lsrs	r6, r6, #8
 801b214:	0a00      	lsrs	r0, r0, #8
 801b216:	fb0c 5509 	mla	r5, ip, r9, r5
 801b21a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b21e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b222:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b226:	fb00 5504 	mla	r5, r0, r4, r5
 801b22a:	fb0e f606 	mul.w	r6, lr, r6
 801b22e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b232:	0a09      	lsrs	r1, r1, #8
 801b234:	9b07      	ldr	r3, [sp, #28]
 801b236:	fb02 6000 	mla	r0, r2, r0, r6
 801b23a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b23e:	fb09 0001 	mla	r0, r9, r1, r0
 801b242:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b246:	fb0e fe0b 	mul.w	lr, lr, fp
 801b24a:	fb04 0003 	mla	r0, r4, r3, r0
 801b24e:	fb02 e20a 	mla	r2, r2, sl, lr
 801b252:	9b00      	ldr	r3, [sp, #0]
 801b254:	fb04 2408 	mla	r4, r4, r8, r2
 801b258:	fb09 4903 	mla	r9, r9, r3, r4
 801b25c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b260:	9b02      	ldr	r3, [sp, #8]
 801b262:	9a04      	ldr	r2, [sp, #16]
 801b264:	fa5f f989 	uxtb.w	r9, r9
 801b268:	fb03 f109 	mul.w	r1, r3, r9
 801b26c:	9b03      	ldr	r3, [sp, #12]
 801b26e:	0a2d      	lsrs	r5, r5, #8
 801b270:	0a00      	lsrs	r0, r0, #8
 801b272:	fb03 f309 	mul.w	r3, r3, r9
 801b276:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b27a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b27e:	4305      	orrs	r5, r0
 801b280:	fb02 f909 	mul.w	r9, r2, r9
 801b284:	1c58      	adds	r0, r3, #1
 801b286:	1c4a      	adds	r2, r1, #1
 801b288:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b28c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b290:	0a2b      	lsrs	r3, r5, #8
 801b292:	0c2a      	lsrs	r2, r5, #16
 801b294:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b298:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b29c:	00db      	lsls	r3, r3, #3
 801b29e:	0212      	lsls	r2, r2, #8
 801b2a0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b2a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b2a8:	4313      	orrs	r3, r2
 801b2aa:	f109 0201 	add.w	r2, r9, #1
 801b2ae:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b2b2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b2b6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b2ba:	431d      	orrs	r5, r3
 801b2bc:	9b01      	ldr	r3, [sp, #4]
 801b2be:	801d      	strh	r5, [r3, #0]
 801b2c0:	b009      	add	sp, #36	; 0x24
 801b2c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2c6:	2000      	movs	r0, #0
 801b2c8:	e701      	b.n	801b0ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b2ca:	2600      	movs	r6, #0
 801b2cc:	4630      	mov	r0, r6
 801b2ce:	e70b      	b.n	801b0e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b2d0:	2600      	movs	r6, #0
 801b2d2:	e709      	b.n	801b0e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b2d4:	462e      	mov	r6, r5
 801b2d6:	e707      	b.n	801b0e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b2d8:	2700      	movs	r7, #0
 801b2da:	e71a      	b.n	801b112 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b2dc:	2100      	movs	r1, #0
 801b2de:	460f      	mov	r7, r1
 801b2e0:	e723      	b.n	801b12a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b2e2:	4621      	mov	r1, r4
 801b2e4:	4627      	mov	r7, r4
 801b2e6:	e720      	b.n	801b12a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b2e8:	2100      	movs	r1, #0
 801b2ea:	e71e      	b.n	801b12a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b2ec:	4629      	mov	r1, r5
 801b2ee:	e71c      	b.n	801b12a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b2f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2f4:	b09b      	sub	sp, #108	; 0x6c
 801b2f6:	9218      	str	r2, [sp, #96]	; 0x60
 801b2f8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b2fa:	9116      	str	r1, [sp, #88]	; 0x58
 801b2fc:	9307      	str	r3, [sp, #28]
 801b2fe:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b302:	9019      	str	r0, [sp, #100]	; 0x64
 801b304:	6850      	ldr	r0, [r2, #4]
 801b306:	6812      	ldr	r2, [r2, #0]
 801b308:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b30a:	fb00 1303 	mla	r3, r0, r3, r1
 801b30e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b312:	930a      	str	r3, [sp, #40]	; 0x28
 801b314:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b316:	681b      	ldr	r3, [r3, #0]
 801b318:	930f      	str	r3, [sp, #60]	; 0x3c
 801b31a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b31c:	685e      	ldr	r6, [r3, #4]
 801b31e:	3604      	adds	r6, #4
 801b320:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b322:	2b00      	cmp	r3, #0
 801b324:	dc03      	bgt.n	801b32e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b326:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b328:	2b00      	cmp	r3, #0
 801b32a:	f340 8373 	ble.w	801ba14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b32e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b330:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b334:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b338:	1e48      	subs	r0, r1, #1
 801b33a:	1e57      	subs	r7, r2, #1
 801b33c:	9b07      	ldr	r3, [sp, #28]
 801b33e:	2b00      	cmp	r3, #0
 801b340:	f340 8190 	ble.w	801b664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b344:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b346:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b34a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b34e:	d406      	bmi.n	801b35e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b350:	4584      	cmp	ip, r0
 801b352:	da04      	bge.n	801b35e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b354:	2b00      	cmp	r3, #0
 801b356:	db02      	blt.n	801b35e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b358:	42bb      	cmp	r3, r7
 801b35a:	f2c0 8184 	blt.w	801b666 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b35e:	f11c 0c01 	adds.w	ip, ip, #1
 801b362:	f100 8172 	bmi.w	801b64a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b366:	4561      	cmp	r1, ip
 801b368:	f2c0 816f 	blt.w	801b64a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b36c:	3301      	adds	r3, #1
 801b36e:	f100 816c 	bmi.w	801b64a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b372:	429a      	cmp	r2, r3
 801b374:	f2c0 8169 	blt.w	801b64a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b378:	9b07      	ldr	r3, [sp, #28]
 801b37a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b37c:	9317      	str	r3, [sp, #92]	; 0x5c
 801b37e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b380:	2b00      	cmp	r3, #0
 801b382:	f340 818e 	ble.w	801b6a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b386:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b388:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b38c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b38e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b392:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b394:	141b      	asrs	r3, r3, #16
 801b396:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b39a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b39e:	f100 81d1 	bmi.w	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b3a2:	f101 38ff 	add.w	r8, r1, #4294967295
 801b3a6:	4543      	cmp	r3, r8
 801b3a8:	f280 81cc 	bge.w	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b3ac:	f1bc 0f00 	cmp.w	ip, #0
 801b3b0:	f2c0 81c8 	blt.w	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b3b4:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b3b8:	45c4      	cmp	ip, r8
 801b3ba:	f280 81c3 	bge.w	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b3be:	b209      	sxth	r1, r1
 801b3c0:	fb0c 3301 	mla	r3, ip, r1, r3
 801b3c4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b3c6:	eb04 0803 	add.w	r8, r4, r3
 801b3ca:	5ce3      	ldrb	r3, [r4, r3]
 801b3cc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b3d0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b3d4:	2a00      	cmp	r2, #0
 801b3d6:	f000 81aa 	beq.w	801b72e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b3da:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b3de:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b3e2:	940b      	str	r4, [sp, #44]	; 0x2c
 801b3e4:	0e24      	lsrs	r4, r4, #24
 801b3e6:	9412      	str	r4, [sp, #72]	; 0x48
 801b3e8:	b178      	cbz	r0, 801b40a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b3ea:	eb08 0c01 	add.w	ip, r8, r1
 801b3ee:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b3f2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b3f6:	9108      	str	r1, [sp, #32]
 801b3f8:	0e09      	lsrs	r1, r1, #24
 801b3fa:	9110      	str	r1, [sp, #64]	; 0x40
 801b3fc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b400:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b404:	910c      	str	r1, [sp, #48]	; 0x30
 801b406:	0e09      	lsrs	r1, r1, #24
 801b408:	9113      	str	r1, [sp, #76]	; 0x4c
 801b40a:	b292      	uxth	r2, r2
 801b40c:	b280      	uxth	r0, r0
 801b40e:	fb02 f900 	mul.w	r9, r2, r0
 801b412:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b416:	0112      	lsls	r2, r2, #4
 801b418:	eba2 0809 	sub.w	r8, r2, r9
 801b41c:	b280      	uxth	r0, r0
 801b41e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b422:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b424:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b426:	fa1f f888 	uxth.w	r8, r8
 801b42a:	1a12      	subs	r2, r2, r0
 801b42c:	b292      	uxth	r2, r2
 801b42e:	fb08 f101 	mul.w	r1, r8, r1
 801b432:	fb02 110e 	mla	r1, r2, lr, r1
 801b436:	fb00 1104 	mla	r1, r0, r4, r1
 801b43a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b43c:	fb09 1104 	mla	r1, r9, r4, r1
 801b440:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b444:	2900      	cmp	r1, #0
 801b446:	f000 80f5 	beq.w	801b634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b44a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b44e:	d01b      	beq.n	801b488 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b450:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b454:	fb0e fa0a 	mul.w	sl, lr, sl
 801b458:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b45c:	fb0e fe03 	mul.w	lr, lr, r3
 801b460:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b464:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b468:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b46c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b470:	4453      	add	r3, sl
 801b472:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b476:	0a1b      	lsrs	r3, r3, #8
 801b478:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b47c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b480:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b484:	ea43 030c 	orr.w	r3, r3, ip
 801b488:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b48a:	2cff      	cmp	r4, #255	; 0xff
 801b48c:	d021      	beq.n	801b4d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b48e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b490:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b494:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b496:	fb04 fb0b 	mul.w	fp, r4, fp
 801b49a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b49c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b4a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b4a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b4a6:	fb04 fa0a 	mul.w	sl, r4, sl
 801b4aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b4ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b4b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b4b6:	44de      	add	lr, fp
 801b4b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b4bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b4c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b4c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b4c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b4cc:	ea4e 040a 	orr.w	r4, lr, sl
 801b4d0:	940b      	str	r4, [sp, #44]	; 0x2c
 801b4d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b4d4:	2cff      	cmp	r4, #255	; 0xff
 801b4d6:	d021      	beq.n	801b51c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b4d8:	9c08      	ldr	r4, [sp, #32]
 801b4da:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b4de:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b4e0:	fb04 fb0b 	mul.w	fp, r4, fp
 801b4e4:	9c08      	ldr	r4, [sp, #32]
 801b4e6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b4ea:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b4ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b4f0:	fb04 fa0a 	mul.w	sl, r4, sl
 801b4f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b4f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b4fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b500:	44de      	add	lr, fp
 801b502:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b506:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b50a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b50e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b512:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b516:	ea4e 040a 	orr.w	r4, lr, sl
 801b51a:	9408      	str	r4, [sp, #32]
 801b51c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b51e:	2cff      	cmp	r4, #255	; 0xff
 801b520:	d021      	beq.n	801b566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b522:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b524:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b528:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b52a:	fb04 fb0b 	mul.w	fp, r4, fp
 801b52e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b530:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b534:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b536:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b53a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b53e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b542:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b546:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b54a:	44de      	add	lr, fp
 801b54c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b550:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b554:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b558:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b55c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b560:	ea4e 040a 	orr.w	r4, lr, sl
 801b564:	940c      	str	r4, [sp, #48]	; 0x30
 801b566:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b568:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b56c:	9c08      	ldr	r4, [sp, #32]
 801b56e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b572:	fb08 fc0c 	mul.w	ip, r8, ip
 801b576:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b57a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b57e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b580:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b584:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b588:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b58a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b58e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b592:	fb08 f80e 	mul.w	r8, r8, lr
 801b596:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b59a:	fb02 8303 	mla	r3, r2, r3, r8
 801b59e:	9a08      	ldr	r2, [sp, #32]
 801b5a0:	f8b7 8000 	ldrh.w	r8, [r7]
 801b5a4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b5a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b5aa:	fb00 330a 	mla	r3, r0, sl, r3
 801b5ae:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b5b2:	fb09 3900 	mla	r9, r9, r0, r3
 801b5b6:	43c9      	mvns	r1, r1
 801b5b8:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b5bc:	fa5f fe81 	uxtb.w	lr, r1
 801b5c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b5c8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b5cc:	fb02 f20e 	mul.w	r2, r2, lr
 801b5d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b5d4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b5d8:	ea4c 0c09 	orr.w	ip, ip, r9
 801b5dc:	1c53      	adds	r3, r2, #1
 801b5de:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b5e2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b5e6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b5ea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b5ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b5f2:	4a63      	ldr	r2, [pc, #396]	; (801b780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b5f4:	fb00 f00e 	mul.w	r0, r0, lr
 801b5f8:	b2db      	uxtb	r3, r3
 801b5fa:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b5fe:	1c43      	adds	r3, r0, #1
 801b600:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b604:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b608:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b60c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b610:	b2c9      	uxtb	r1, r1
 801b612:	00db      	lsls	r3, r3, #3
 801b614:	fb01 f10e 	mul.w	r1, r1, lr
 801b618:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b61c:	4313      	orrs	r3, r2
 801b61e:	1c4a      	adds	r2, r1, #1
 801b620:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b624:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b628:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b62c:	ea4c 0c03 	orr.w	ip, ip, r3
 801b630:	f8a7 c000 	strh.w	ip, [r7]
 801b634:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b636:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b638:	441a      	add	r2, r3
 801b63a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b63c:	9225      	str	r2, [sp, #148]	; 0x94
 801b63e:	441d      	add	r5, r3
 801b640:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b642:	3b01      	subs	r3, #1
 801b644:	3702      	adds	r7, #2
 801b646:	9317      	str	r3, [sp, #92]	; 0x5c
 801b648:	e699      	b.n	801b37e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b64a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b64c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b64e:	441c      	add	r4, r3
 801b650:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b652:	9425      	str	r4, [sp, #148]	; 0x94
 801b654:	441d      	add	r5, r3
 801b656:	9b07      	ldr	r3, [sp, #28]
 801b658:	3b01      	subs	r3, #1
 801b65a:	9307      	str	r3, [sp, #28]
 801b65c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b65e:	3302      	adds	r3, #2
 801b660:	930a      	str	r3, [sp, #40]	; 0x28
 801b662:	e66b      	b.n	801b33c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b664:	d024      	beq.n	801b6b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b666:	9b07      	ldr	r3, [sp, #28]
 801b668:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b66a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b66c:	3b01      	subs	r3, #1
 801b66e:	fb00 4003 	mla	r0, r0, r3, r4
 801b672:	1400      	asrs	r0, r0, #16
 801b674:	f53f ae80 	bmi.w	801b378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b678:	3901      	subs	r1, #1
 801b67a:	4288      	cmp	r0, r1
 801b67c:	f6bf ae7c 	bge.w	801b378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b680:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b682:	fb01 5303 	mla	r3, r1, r3, r5
 801b686:	141b      	asrs	r3, r3, #16
 801b688:	f53f ae76 	bmi.w	801b378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b68c:	3a01      	subs	r2, #1
 801b68e:	4293      	cmp	r3, r2
 801b690:	f6bf ae72 	bge.w	801b378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b694:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b698:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b69c:	f1bb 0f00 	cmp.w	fp, #0
 801b6a0:	dc70      	bgt.n	801b784 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b6a2:	9b07      	ldr	r3, [sp, #28]
 801b6a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b6a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b6aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b6ae:	930a      	str	r3, [sp, #40]	; 0x28
 801b6b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b6b2:	2b00      	cmp	r3, #0
 801b6b4:	f340 81ae 	ble.w	801ba14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b6b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b6bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b6c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b6c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b6c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b6ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b6ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b6d2:	eef0 6a62 	vmov.f32	s13, s5
 801b6d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b6da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b6de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b6e2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801b6e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b6ea:	eef0 6a43 	vmov.f32	s13, s6
 801b6ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b6f2:	ee12 2a90 	vmov	r2, s5
 801b6f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b6fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801b6fe:	ee13 2a10 	vmov	r2, s6
 801b702:	9327      	str	r3, [sp, #156]	; 0x9c
 801b704:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b706:	fb92 f3f3 	sdiv	r3, r2, r3
 801b70a:	9328      	str	r3, [sp, #160]	; 0xa0
 801b70c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b70e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b710:	3b01      	subs	r3, #1
 801b712:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b716:	9316      	str	r3, [sp, #88]	; 0x58
 801b718:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b71a:	bf08      	it	eq
 801b71c:	4613      	moveq	r3, r2
 801b71e:	ee16 5a90 	vmov	r5, s13
 801b722:	9307      	str	r3, [sp, #28]
 801b724:	eeb0 3a67 	vmov.f32	s6, s15
 801b728:	eef0 2a47 	vmov.f32	s5, s14
 801b72c:	e5f8      	b.n	801b320 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b72e:	2800      	cmp	r0, #0
 801b730:	f43f ae6b 	beq.w	801b40a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b734:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b738:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b73c:	9108      	str	r1, [sp, #32]
 801b73e:	0e09      	lsrs	r1, r1, #24
 801b740:	9110      	str	r1, [sp, #64]	; 0x40
 801b742:	e662      	b.n	801b40a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b744:	f113 0801 	adds.w	r8, r3, #1
 801b748:	f53f af74 	bmi.w	801b634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b74c:	4541      	cmp	r1, r8
 801b74e:	f6ff af71 	blt.w	801b634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b752:	f11c 0801 	adds.w	r8, ip, #1
 801b756:	f53f af6d 	bmi.w	801b634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b75a:	45c6      	cmp	lr, r8
 801b75c:	f6ff af6a 	blt.w	801b634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b760:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801b764:	b209      	sxth	r1, r1
 801b766:	fa0f f38e 	sxth.w	r3, lr
 801b76a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801b76e:	9301      	str	r3, [sp, #4]
 801b770:	9100      	str	r1, [sp, #0]
 801b772:	4633      	mov	r3, r6
 801b774:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b776:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b778:	4639      	mov	r1, r7
 801b77a:	f7ff fc7a 	bl	801b072 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801b77e:	e759      	b.n	801b634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b780:	fffff800 	.word	0xfffff800
 801b784:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b786:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b788:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b78c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b78e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b792:	1427      	asrs	r7, r4, #16
 801b794:	142b      	asrs	r3, r5, #16
 801b796:	fb01 7303 	mla	r3, r1, r3, r7
 801b79a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b79c:	18e7      	adds	r7, r4, r3
 801b79e:	5ce3      	ldrb	r3, [r4, r3]
 801b7a0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b7a4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b7a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b7ac:	2a00      	cmp	r2, #0
 801b7ae:	f000 8127 	beq.w	801ba00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801b7b2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b7b6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b7ba:	940d      	str	r4, [sp, #52]	; 0x34
 801b7bc:	0e24      	lsrs	r4, r4, #24
 801b7be:	9414      	str	r4, [sp, #80]	; 0x50
 801b7c0:	b170      	cbz	r0, 801b7e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b7c2:	eb07 0e01 	add.w	lr, r7, r1
 801b7c6:	5c79      	ldrb	r1, [r7, r1]
 801b7c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b7cc:	9109      	str	r1, [sp, #36]	; 0x24
 801b7ce:	0e09      	lsrs	r1, r1, #24
 801b7d0:	9111      	str	r1, [sp, #68]	; 0x44
 801b7d2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b7d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b7da:	910e      	str	r1, [sp, #56]	; 0x38
 801b7dc:	0e09      	lsrs	r1, r1, #24
 801b7de:	9115      	str	r1, [sp, #84]	; 0x54
 801b7e0:	b292      	uxth	r2, r2
 801b7e2:	b280      	uxth	r0, r0
 801b7e4:	fb02 f800 	mul.w	r8, r2, r0
 801b7e8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b7ec:	0112      	lsls	r2, r2, #4
 801b7ee:	eba2 0e08 	sub.w	lr, r2, r8
 801b7f2:	b280      	uxth	r0, r0
 801b7f4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b7f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b7fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b7fc:	fa1f fe8e 	uxth.w	lr, lr
 801b800:	1a09      	subs	r1, r1, r0
 801b802:	b289      	uxth	r1, r1
 801b804:	fb0e f202 	mul.w	r2, lr, r2
 801b808:	fb01 220c 	mla	r2, r1, ip, r2
 801b80c:	fb00 2204 	mla	r2, r0, r4, r2
 801b810:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b812:	fb08 2204 	mla	r2, r8, r4, r2
 801b816:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b81a:	2a00      	cmp	r2, #0
 801b81c:	f000 80e5 	beq.w	801b9ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801b820:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b824:	d019      	beq.n	801b85a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801b826:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b82a:	fb0c fa0a 	mul.w	sl, ip, sl
 801b82e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b832:	fb0c fc03 	mul.w	ip, ip, r3
 801b836:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b83a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b83e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b842:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b846:	4453      	add	r3, sl
 801b848:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b84c:	0a1b      	lsrs	r3, r3, #8
 801b84e:	0a3f      	lsrs	r7, r7, #8
 801b850:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b854:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b858:	433b      	orrs	r3, r7
 801b85a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b85c:	2cff      	cmp	r4, #255	; 0xff
 801b85e:	d020      	beq.n	801b8a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801b860:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b862:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b866:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b868:	4367      	muls	r7, r4
 801b86a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b86c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b870:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b872:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b876:	fb04 fa0a 	mul.w	sl, r4, sl
 801b87a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b87e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b882:	44bc      	add	ip, r7
 801b884:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b888:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b88c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b890:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b894:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b898:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b89c:	ea4c 040a 	orr.w	r4, ip, sl
 801b8a0:	940d      	str	r4, [sp, #52]	; 0x34
 801b8a2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b8a4:	2cff      	cmp	r4, #255	; 0xff
 801b8a6:	d020      	beq.n	801b8ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801b8a8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b8aa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b8ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b8b0:	4367      	muls	r7, r4
 801b8b2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b8b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b8b8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b8ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b8be:	fb04 fa0a 	mul.w	sl, r4, sl
 801b8c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b8c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b8ca:	44bc      	add	ip, r7
 801b8cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b8d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b8d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b8dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b8e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b8e4:	ea4c 040a 	orr.w	r4, ip, sl
 801b8e8:	9409      	str	r4, [sp, #36]	; 0x24
 801b8ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b8ec:	2cff      	cmp	r4, #255	; 0xff
 801b8ee:	d020      	beq.n	801b932 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801b8f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b8f2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b8f6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b8f8:	4367      	muls	r7, r4
 801b8fa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b8fc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b900:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b902:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b906:	fb04 fa0a 	mul.w	sl, r4, sl
 801b90a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b90e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b912:	44bc      	add	ip, r7
 801b914:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b918:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b91c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b920:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b924:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b928:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b92c:	ea4c 040a 	orr.w	r4, ip, sl
 801b930:	940e      	str	r4, [sp, #56]	; 0x38
 801b932:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b934:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b938:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b93a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b93e:	fb0e f707 	mul.w	r7, lr, r7
 801b942:	fb01 770c 	mla	r7, r1, ip, r7
 801b946:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b94a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b94c:	fb00 770c 	mla	r7, r0, ip, r7
 801b950:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b954:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b956:	fb08 770c 	mla	r7, r8, ip, r7
 801b95a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b95e:	fb0e fe0c 	mul.w	lr, lr, ip
 801b962:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b966:	fb01 e303 	mla	r3, r1, r3, lr
 801b96a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b96c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b970:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b972:	fb00 330a 	mla	r3, r0, sl, r3
 801b976:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801b97a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b97e:	f8b9 3000 	ldrh.w	r3, [r9]
 801b982:	43d2      	mvns	r2, r2
 801b984:	1218      	asrs	r0, r3, #8
 801b986:	b2d2      	uxtb	r2, r2
 801b988:	10d9      	asrs	r1, r3, #3
 801b98a:	0a3f      	lsrs	r7, r7, #8
 801b98c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b990:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b994:	00db      	lsls	r3, r3, #3
 801b996:	4350      	muls	r0, r2
 801b998:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b99c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b9a0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b9a4:	b2db      	uxtb	r3, r3
 801b9a6:	ea47 070c 	orr.w	r7, r7, ip
 801b9aa:	4351      	muls	r1, r2
 801b9ac:	4353      	muls	r3, r2
 801b9ae:	1c42      	adds	r2, r0, #1
 801b9b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b9b4:	0c3a      	lsrs	r2, r7, #16
 801b9b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b9ba:	4a18      	ldr	r2, [pc, #96]	; (801ba1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801b9bc:	b2c0      	uxtb	r0, r0
 801b9be:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801b9c2:	1c4a      	adds	r2, r1, #1
 801b9c4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b9c8:	0a3a      	lsrs	r2, r7, #8
 801b9ca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b9ce:	00c9      	lsls	r1, r1, #3
 801b9d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b9d4:	4301      	orrs	r1, r0
 801b9d6:	1c58      	adds	r0, r3, #1
 801b9d8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b9dc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b9e0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801b9e4:	4308      	orrs	r0, r1
 801b9e6:	f8a9 0000 	strh.w	r0, [r9]
 801b9ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b9ec:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b9ee:	441a      	add	r2, r3
 801b9f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b9f2:	9225      	str	r2, [sp, #148]	; 0x94
 801b9f4:	f109 0902 	add.w	r9, r9, #2
 801b9f8:	441d      	add	r5, r3
 801b9fa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b9fe:	e64d      	b.n	801b69c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801ba00:	2800      	cmp	r0, #0
 801ba02:	f43f aeed 	beq.w	801b7e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ba06:	5c79      	ldrb	r1, [r7, r1]
 801ba08:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ba0c:	9109      	str	r1, [sp, #36]	; 0x24
 801ba0e:	0e09      	lsrs	r1, r1, #24
 801ba10:	9111      	str	r1, [sp, #68]	; 0x44
 801ba12:	e6e5      	b.n	801b7e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ba14:	b01b      	add	sp, #108	; 0x6c
 801ba16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba1a:	bf00      	nop
 801ba1c:	fffff800 	.word	0xfffff800

0801ba20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801ba20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba24:	b085      	sub	sp, #20
 801ba26:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ba2a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ba2e:	9103      	str	r1, [sp, #12]
 801ba30:	fb00 7406 	mla	r4, r0, r6, r7
 801ba34:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801ba38:	2800      	cmp	r0, #0
 801ba3a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801ba3e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801ba42:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ba46:	9501      	str	r5, [sp, #4]
 801ba48:	eb03 0904 	add.w	r9, r3, r4
 801ba4c:	f2c0 8150 	blt.w	801bcf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ba50:	4583      	cmp	fp, r0
 801ba52:	f340 814d 	ble.w	801bcf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ba56:	2f00      	cmp	r7, #0
 801ba58:	f2c0 8146 	blt.w	801bce8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ba5c:	42be      	cmp	r6, r7
 801ba5e:	f340 8143 	ble.w	801bce8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ba62:	f813 c004 	ldrb.w	ip, [r3, r4]
 801ba66:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801ba6a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ba6e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801ba72:	4355      	muls	r5, r2
 801ba74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ba78:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801ba7c:	fb0c f203 	mul.w	r2, ip, r3
 801ba80:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801ba84:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801ba88:	441d      	add	r5, r3
 801ba8a:	f102 0320 	add.w	r3, r2, #32
 801ba8e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ba92:	0a1b      	lsrs	r3, r3, #8
 801ba94:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801ba98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ba9c:	431c      	orrs	r4, r3
 801ba9e:	1c7b      	adds	r3, r7, #1
 801baa0:	f100 812b 	bmi.w	801bcfa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801baa4:	429e      	cmp	r6, r3
 801baa6:	f340 8128 	ble.w	801bcfa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801baaa:	2900      	cmp	r1, #0
 801baac:	f000 8128 	beq.w	801bd00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bab0:	9a01      	ldr	r2, [sp, #4]
 801bab2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bab6:	8855      	ldrh	r5, [r2, #2]
 801bab8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801babc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bac0:	fb08 f802 	mul.w	r8, r8, r2
 801bac4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bac8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bacc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bad0:	435d      	muls	r5, r3
 801bad2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bad6:	44d0      	add	r8, sl
 801bad8:	f105 0a20 	add.w	sl, r5, #32
 801badc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bae0:	0a2d      	lsrs	r5, r5, #8
 801bae2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bae6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801baea:	432a      	orrs	r2, r5
 801baec:	3001      	adds	r0, #1
 801baee:	f100 810d 	bmi.w	801bd0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801baf2:	4583      	cmp	fp, r0
 801baf4:	f340 810a 	ble.w	801bd0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801baf8:	f1be 0f00 	cmp.w	lr, #0
 801bafc:	f000 810b 	beq.w	801bd16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801bb00:	2f00      	cmp	r7, #0
 801bb02:	f2c0 8100 	blt.w	801bd06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bb06:	42be      	cmp	r6, r7
 801bb08:	f340 80fd 	ble.w	801bd06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bb0c:	9801      	ldr	r0, [sp, #4]
 801bb0e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bb12:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bb16:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bb1a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801bb1e:	fb0a fa00 	mul.w	sl, sl, r0
 801bb22:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bb26:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bb2a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bb2e:	fb05 f808 	mul.w	r8, r5, r8
 801bb32:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801bb36:	4482      	add	sl, r0
 801bb38:	f108 0020 	add.w	r0, r8, #32
 801bb3c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bb40:	0a00      	lsrs	r0, r0, #8
 801bb42:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bb46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bb4a:	ea4b 0b00 	orr.w	fp, fp, r0
 801bb4e:	3701      	adds	r7, #1
 801bb50:	f100 80e6 	bmi.w	801bd20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bb54:	42be      	cmp	r6, r7
 801bb56:	f340 80e3 	ble.w	801bd20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bb5a:	2900      	cmp	r1, #0
 801bb5c:	f000 80e3 	beq.w	801bd26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bb60:	3601      	adds	r6, #1
 801bb62:	9801      	ldr	r0, [sp, #4]
 801bb64:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bb68:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bb6c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bb70:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bb74:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bb78:	fb09 f906 	mul.w	r9, r9, r6
 801bb7c:	fb07 f800 	mul.w	r8, r7, r0
 801bb80:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bb84:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bb88:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bb8c:	44d1      	add	r9, sl
 801bb8e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bb92:	f108 0020 	add.w	r0, r8, #32
 801bb96:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bb9a:	0a00      	lsrs	r0, r0, #8
 801bb9c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bba0:	4330      	orrs	r0, r6
 801bba2:	b28e      	uxth	r6, r1
 801bba4:	fa1f f98e 	uxth.w	r9, lr
 801bba8:	fb06 f809 	mul.w	r8, r6, r9
 801bbac:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bbb0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bbb4:	0136      	lsls	r6, r6, #4
 801bbb6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bbba:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801bbbe:	9601      	str	r6, [sp, #4]
 801bbc0:	ea4a 0404 	orr.w	r4, sl, r4
 801bbc4:	fa1f f689 	uxth.w	r6, r9
 801bbc8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bbcc:	fb11 f90e 	smulbb	r9, r1, lr
 801bbd0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bbd4:	9602      	str	r6, [sp, #8]
 801bbd6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bbda:	4626      	mov	r6, r4
 801bbdc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bbe0:	f1ce 0410 	rsb	r4, lr, #16
 801bbe4:	1a64      	subs	r4, r4, r1
 801bbe6:	ea4a 0202 	orr.w	r2, sl, r2
 801bbea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bbee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bbf2:	434a      	muls	r2, r1
 801bbf4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bbf8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bbfc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bc00:	fb04 2406 	mla	r4, r4, r6, r2
 801bc04:	ea4a 0000 	orr.w	r0, sl, r0
 801bc08:	fb09 4200 	mla	r2, r9, r0, r4
 801bc0c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bc10:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bc14:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801bc18:	ea44 0b0b 	orr.w	fp, r4, fp
 801bc1c:	9c01      	ldr	r4, [sp, #4]
 801bc1e:	9e02      	ldr	r6, [sp, #8]
 801bc20:	9903      	ldr	r1, [sp, #12]
 801bc22:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801bc26:	1ba4      	subs	r4, r4, r6
 801bc28:	9e01      	ldr	r6, [sp, #4]
 801bc2a:	8808      	ldrh	r0, [r1, #0]
 801bc2c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801bc30:	eba6 0608 	sub.w	r6, r6, r8
 801bc34:	b2b6      	uxth	r6, r6
 801bc36:	b2a4      	uxth	r4, r4
 801bc38:	4373      	muls	r3, r6
 801bc3a:	fb0c 3304 	mla	r3, ip, r4, r3
 801bc3e:	9c02      	ldr	r4, [sp, #8]
 801bc40:	fb04 3505 	mla	r5, r4, r5, r3
 801bc44:	fb08 5707 	mla	r7, r8, r7, r5
 801bc48:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bc4c:	b289      	uxth	r1, r1
 801bc4e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bc52:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bc56:	434f      	muls	r7, r1
 801bc58:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bc5c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bc60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bc64:	1c7b      	adds	r3, r7, #1
 801bc66:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bc6a:	ea42 0e0e 	orr.w	lr, r2, lr
 801bc6e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bc72:	fa1f f28e 	uxth.w	r2, lr
 801bc76:	1203      	asrs	r3, r0, #8
 801bc78:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bc7c:	b2ff      	uxtb	r7, r7
 801bc7e:	1215      	asrs	r5, r2, #8
 801bc80:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bc84:	fb13 f307 	smulbb	r3, r3, r7
 801bc88:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bc8c:	fb05 3501 	mla	r5, r5, r1, r3
 801bc90:	10c3      	asrs	r3, r0, #3
 801bc92:	10d4      	asrs	r4, r2, #3
 801bc94:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bc98:	fb13 f307 	smulbb	r3, r3, r7
 801bc9c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bca0:	fb04 3401 	mla	r4, r4, r1, r3
 801bca4:	00c3      	lsls	r3, r0, #3
 801bca6:	00d2      	lsls	r2, r2, #3
 801bca8:	b2db      	uxtb	r3, r3
 801bcaa:	fb13 f307 	smulbb	r3, r3, r7
 801bcae:	b2d2      	uxtb	r2, r2
 801bcb0:	fb02 3101 	mla	r1, r2, r1, r3
 801bcb4:	b2ad      	uxth	r5, r5
 801bcb6:	b289      	uxth	r1, r1
 801bcb8:	b2a4      	uxth	r4, r4
 801bcba:	1c6b      	adds	r3, r5, #1
 801bcbc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bcc0:	1c62      	adds	r2, r4, #1
 801bcc2:	1c4b      	adds	r3, r1, #1
 801bcc4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bcc8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801bccc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bcd0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bcd4:	0964      	lsrs	r4, r4, #5
 801bcd6:	432b      	orrs	r3, r5
 801bcd8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801bcdc:	9a03      	ldr	r2, [sp, #12]
 801bcde:	4323      	orrs	r3, r4
 801bce0:	8013      	strh	r3, [r2, #0]
 801bce2:	b005      	add	sp, #20
 801bce4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bce8:	f04f 0c00 	mov.w	ip, #0
 801bcec:	4664      	mov	r4, ip
 801bcee:	e6d6      	b.n	801ba9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801bcf0:	2300      	movs	r3, #0
 801bcf2:	469c      	mov	ip, r3
 801bcf4:	461a      	mov	r2, r3
 801bcf6:	461c      	mov	r4, r3
 801bcf8:	e6f8      	b.n	801baec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bcfa:	2300      	movs	r3, #0
 801bcfc:	461a      	mov	r2, r3
 801bcfe:	e6f5      	b.n	801baec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bd00:	460b      	mov	r3, r1
 801bd02:	460a      	mov	r2, r1
 801bd04:	e6f2      	b.n	801baec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bd06:	2500      	movs	r5, #0
 801bd08:	46ab      	mov	fp, r5
 801bd0a:	e720      	b.n	801bb4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801bd0c:	2700      	movs	r7, #0
 801bd0e:	463d      	mov	r5, r7
 801bd10:	4638      	mov	r0, r7
 801bd12:	46bb      	mov	fp, r7
 801bd14:	e745      	b.n	801bba2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bd16:	4677      	mov	r7, lr
 801bd18:	4675      	mov	r5, lr
 801bd1a:	4670      	mov	r0, lr
 801bd1c:	46f3      	mov	fp, lr
 801bd1e:	e740      	b.n	801bba2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bd20:	2700      	movs	r7, #0
 801bd22:	4638      	mov	r0, r7
 801bd24:	e73d      	b.n	801bba2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bd26:	460f      	mov	r7, r1
 801bd28:	4608      	mov	r0, r1
 801bd2a:	e73a      	b.n	801bba2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801bd2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd30:	b097      	sub	sp, #92	; 0x5c
 801bd32:	9214      	str	r2, [sp, #80]	; 0x50
 801bd34:	9308      	str	r3, [sp, #32]
 801bd36:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bd38:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801bd3c:	9312      	str	r3, [sp, #72]	; 0x48
 801bd3e:	9111      	str	r1, [sp, #68]	; 0x44
 801bd40:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801bd44:	9015      	str	r0, [sp, #84]	; 0x54
 801bd46:	6850      	ldr	r0, [r2, #4]
 801bd48:	6812      	ldr	r2, [r2, #0]
 801bd4a:	fb00 1303 	mla	r3, r0, r3, r1
 801bd4e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bd52:	9309      	str	r3, [sp, #36]	; 0x24
 801bd54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd56:	681b      	ldr	r3, [r3, #0]
 801bd58:	930b      	str	r3, [sp, #44]	; 0x2c
 801bd5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd5c:	685b      	ldr	r3, [r3, #4]
 801bd5e:	930c      	str	r3, [sp, #48]	; 0x30
 801bd60:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801bd64:	930a      	str	r3, [sp, #40]	; 0x28
 801bd66:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801bd68:	2b00      	cmp	r3, #0
 801bd6a:	dc03      	bgt.n	801bd74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bd6c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801bd6e:	2b00      	cmp	r3, #0
 801bd70:	f340 83cb 	ble.w	801c50a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801bd74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bd7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bd7e:	1e48      	subs	r0, r1, #1
 801bd80:	1e55      	subs	r5, r2, #1
 801bd82:	9b08      	ldr	r3, [sp, #32]
 801bd84:	2b00      	cmp	r3, #0
 801bd86:	f340 81a3 	ble.w	801c0d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801bd8a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801bd8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bd8e:	1436      	asrs	r6, r6, #16
 801bd90:	ea4f 4323 	mov.w	r3, r3, asr #16
 801bd94:	d406      	bmi.n	801bda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bd96:	4286      	cmp	r6, r0
 801bd98:	da04      	bge.n	801bda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bd9a:	2b00      	cmp	r3, #0
 801bd9c:	db02      	blt.n	801bda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bd9e:	42ab      	cmp	r3, r5
 801bda0:	f2c0 8197 	blt.w	801c0d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801bda4:	3601      	adds	r6, #1
 801bda6:	f100 8184 	bmi.w	801c0b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bdaa:	42b1      	cmp	r1, r6
 801bdac:	f2c0 8181 	blt.w	801c0b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bdb0:	3301      	adds	r3, #1
 801bdb2:	f100 817e 	bmi.w	801c0b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bdb6:	429a      	cmp	r2, r3
 801bdb8:	f2c0 817b 	blt.w	801c0b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bdbc:	9b08      	ldr	r3, [sp, #32]
 801bdbe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801bdc0:	9313      	str	r3, [sp, #76]	; 0x4c
 801bdc2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bdc6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801bdc8:	2b00      	cmp	r3, #0
 801bdca:	f340 81a4 	ble.w	801c116 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801bdce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bdd0:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801bdd2:	1418      	asrs	r0, r3, #16
 801bdd4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801bdd6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801bdda:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bddc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801bde0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bde2:	142d      	asrs	r5, r5, #16
 801bde4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801bde8:	f100 81f8 	bmi.w	801c1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bdec:	f102 3eff 	add.w	lr, r2, #4294967295
 801bdf0:	4575      	cmp	r5, lr
 801bdf2:	f280 81f3 	bge.w	801c1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bdf6:	2800      	cmp	r0, #0
 801bdf8:	f2c0 81f0 	blt.w	801c1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bdfc:	f103 3eff 	add.w	lr, r3, #4294967295
 801be00:	4570      	cmp	r0, lr
 801be02:	f280 81eb 	bge.w	801c1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801be06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801be08:	b212      	sxth	r2, r2
 801be0a:	fb00 5002 	mla	r0, r0, r2, r5
 801be0e:	fa1f fe81 	uxth.w	lr, r1
 801be12:	eb03 0a00 	add.w	sl, r3, r0
 801be16:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801be1a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801be1e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801be22:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801be26:	b29b      	uxth	r3, r3
 801be28:	f1bc 0f00 	cmp.w	ip, #0
 801be2c:	f000 81b9 	beq.w	801c1a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801be30:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801be34:	940d      	str	r4, [sp, #52]	; 0x34
 801be36:	eb0a 0b02 	add.w	fp, sl, r2
 801be3a:	fa1f fa8c 	uxth.w	sl, ip
 801be3e:	fb0a fe0e 	mul.w	lr, sl, lr
 801be42:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801be46:	fa1f fa8a 	uxth.w	sl, sl
 801be4a:	eba5 050e 	sub.w	r5, r5, lr
 801be4e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801be52:	940e      	str	r4, [sp, #56]	; 0x38
 801be54:	eba3 030a 	sub.w	r3, r3, sl
 801be58:	b2ad      	uxth	r5, r5
 801be5a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801be5c:	b29b      	uxth	r3, r3
 801be5e:	fb08 f505 	mul.w	r5, r8, r5
 801be62:	fb09 5303 	mla	r3, r9, r3, r5
 801be66:	fb0a 3304 	mla	r3, sl, r4, r3
 801be6a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801be6c:	fb0e 3304 	mla	r3, lr, r4, r3
 801be70:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801be74:	2b00      	cmp	r3, #0
 801be76:	f000 810f 	beq.w	801c098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801be7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801be7c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801be80:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801be84:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801be88:	f000 8190 	beq.w	801c1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801be8c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801be90:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801be94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be98:	fb09 f000 	mul.w	r0, r9, r0
 801be9c:	fb0a fe0e 	mul.w	lr, sl, lr
 801bea0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801bea4:	f100 0b20 	add.w	fp, r0, #32
 801bea8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801beac:	44ce      	add	lr, r9
 801beae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801beb2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801beb6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801beba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bebe:	ea4e 0909 	orr.w	r9, lr, r9
 801bec2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801bec6:	8868      	ldrh	r0, [r5, #2]
 801bec8:	d019      	beq.n	801befe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801beca:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801bece:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bed2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bed6:	fb08 f800 	mul.w	r8, r8, r0
 801beda:	fb0a fe0e 	mul.w	lr, sl, lr
 801bede:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801bee2:	f108 0b20 	add.w	fp, r8, #32
 801bee6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801beea:	4486      	add	lr, r0
 801beec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801bef0:	0a00      	lsrs	r0, r0, #8
 801bef2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bef6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801befa:	ea4e 0000 	orr.w	r0, lr, r0
 801befe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801bf02:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bf06:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801bf0a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bf0e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf12:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bf16:	ea4e 0909 	orr.w	r9, lr, r9
 801bf1a:	ea4a 0000 	orr.w	r0, sl, r0
 801bf1e:	f1bc 0f00 	cmp.w	ip, #0
 801bf22:	f000 8145 	beq.w	801c1b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801bf26:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801bf2a:	3a01      	subs	r2, #1
 801bf2c:	0052      	lsls	r2, r2, #1
 801bf2e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bf30:	3202      	adds	r2, #2
 801bf32:	2cff      	cmp	r4, #255	; 0xff
 801bf34:	eb05 0e02 	add.w	lr, r5, r2
 801bf38:	5aaa      	ldrh	r2, [r5, r2]
 801bf3a:	d018      	beq.n	801bf6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bf3c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801bf40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bf44:	fb04 fa02 	mul.w	sl, r4, r2
 801bf48:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bf4c:	fb08 f805 	mul.w	r8, r8, r5
 801bf50:	f10a 0520 	add.w	r5, sl, #32
 801bf54:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801bf58:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801bf5c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bf60:	4442      	add	r2, r8
 801bf62:	0a2d      	lsrs	r5, r5, #8
 801bf64:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801bf68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf6c:	432a      	orrs	r2, r5
 801bf6e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bf70:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801bf74:	2cff      	cmp	r4, #255	; 0xff
 801bf76:	d01a      	beq.n	801bfae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801bf78:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801bf7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf80:	fb04 fa05 	mul.w	sl, r4, r5
 801bf84:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bf88:	fb08 f80e 	mul.w	r8, r8, lr
 801bf8c:	f10a 0e20 	add.w	lr, sl, #32
 801bf90:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801bf94:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801bf98:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bf9c:	4445      	add	r5, r8
 801bf9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bfa2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801bfa6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801bfaa:	ea45 050e 	orr.w	r5, r5, lr
 801bfae:	fb1c fe01 	smulbb	lr, ip, r1
 801bfb2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801bfb6:	f1cc 0810 	rsb	r8, ip, #16
 801bfba:	eba8 0801 	sub.w	r8, r8, r1
 801bfbe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bfc2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801bfc6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801bfca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801bfce:	4341      	muls	r1, r0
 801bfd0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bfd4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bfd8:	ea4a 0202 	orr.w	r2, sl, r2
 801bfdc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801bfe0:	fb09 1108 	mla	r1, r9, r8, r1
 801bfe4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801bfe8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801bfec:	fb0c 1102 	mla	r1, ip, r2, r1
 801bff0:	ea4b 0505 	orr.w	r5, fp, r5
 801bff4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801bff8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bffc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c000:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c004:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c008:	ea42 0e0e 	orr.w	lr, r2, lr
 801c00c:	fa1f f28e 	uxth.w	r2, lr
 801c010:	2bff      	cmp	r3, #255	; 0xff
 801c012:	d103      	bne.n	801c01c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c014:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c016:	29ff      	cmp	r1, #255	; 0xff
 801c018:	f000 80de 	beq.w	801c1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c01c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c01e:	8838      	ldrh	r0, [r7, #0]
 801c020:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c022:	434b      	muls	r3, r1
 801c024:	f103 0c01 	add.w	ip, r3, #1
 801c028:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c02c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c030:	fa5f fc83 	uxtb.w	ip, r3
 801c034:	1203      	asrs	r3, r0, #8
 801c036:	1215      	asrs	r5, r2, #8
 801c038:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c03c:	fb13 f30c 	smulbb	r3, r3, ip
 801c040:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c044:	fb05 3501 	mla	r5, r5, r1, r3
 801c048:	10c3      	asrs	r3, r0, #3
 801c04a:	10d1      	asrs	r1, r2, #3
 801c04c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c050:	fb13 f30c 	smulbb	r3, r3, ip
 801c054:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c058:	fb01 3104 	mla	r1, r1, r4, r3
 801c05c:	00c3      	lsls	r3, r0, #3
 801c05e:	00d2      	lsls	r2, r2, #3
 801c060:	b2db      	uxtb	r3, r3
 801c062:	b2d2      	uxtb	r2, r2
 801c064:	fb13 f30c 	smulbb	r3, r3, ip
 801c068:	b2ad      	uxth	r5, r5
 801c06a:	fb02 3304 	mla	r3, r2, r4, r3
 801c06e:	b29a      	uxth	r2, r3
 801c070:	1c6b      	adds	r3, r5, #1
 801c072:	b289      	uxth	r1, r1
 801c074:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c078:	1c53      	adds	r3, r2, #1
 801c07a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c07e:	1c4a      	adds	r2, r1, #1
 801c080:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c084:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c088:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c08c:	0949      	lsrs	r1, r1, #5
 801c08e:	432b      	orrs	r3, r5
 801c090:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c094:	430b      	orrs	r3, r1
 801c096:	803b      	strh	r3, [r7, #0]
 801c098:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c09a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c09c:	4413      	add	r3, r2
 801c09e:	9321      	str	r3, [sp, #132]	; 0x84
 801c0a0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c0a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c0a4:	441a      	add	r2, r3
 801c0a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c0a8:	9222      	str	r2, [sp, #136]	; 0x88
 801c0aa:	3b01      	subs	r3, #1
 801c0ac:	3702      	adds	r7, #2
 801c0ae:	9313      	str	r3, [sp, #76]	; 0x4c
 801c0b0:	e689      	b.n	801bdc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c0b2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c0b4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c0b6:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c0b8:	4433      	add	r3, r6
 801c0ba:	9321      	str	r3, [sp, #132]	; 0x84
 801c0bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c0be:	441c      	add	r4, r3
 801c0c0:	9b08      	ldr	r3, [sp, #32]
 801c0c2:	9422      	str	r4, [sp, #136]	; 0x88
 801c0c4:	3b01      	subs	r3, #1
 801c0c6:	9308      	str	r3, [sp, #32]
 801c0c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c0ca:	3302      	adds	r3, #2
 801c0cc:	9309      	str	r3, [sp, #36]	; 0x24
 801c0ce:	e658      	b.n	801bd82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c0d0:	d028      	beq.n	801c124 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c0d2:	9b08      	ldr	r3, [sp, #32]
 801c0d4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c0d6:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c0d8:	3b01      	subs	r3, #1
 801c0da:	fb00 5003 	mla	r0, r0, r3, r5
 801c0de:	1400      	asrs	r0, r0, #16
 801c0e0:	f53f ae6c 	bmi.w	801bdbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c0e4:	3901      	subs	r1, #1
 801c0e6:	4288      	cmp	r0, r1
 801c0e8:	f6bf ae68 	bge.w	801bdbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c0ec:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c0ee:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c0f0:	fb01 0303 	mla	r3, r1, r3, r0
 801c0f4:	141b      	asrs	r3, r3, #16
 801c0f6:	f53f ae61 	bmi.w	801bdbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c0fa:	3a01      	subs	r2, #1
 801c0fc:	4293      	cmp	r3, r2
 801c0fe:	f6bf ae5d 	bge.w	801bdbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c102:	9b08      	ldr	r3, [sp, #32]
 801c104:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c108:	9313      	str	r3, [sp, #76]	; 0x4c
 801c10a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c10e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c110:	2b00      	cmp	r3, #0
 801c112:	f300 8082 	bgt.w	801c21a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c116:	9b08      	ldr	r3, [sp, #32]
 801c118:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c11c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c11e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c122:	9309      	str	r3, [sp, #36]	; 0x24
 801c124:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c126:	2b00      	cmp	r3, #0
 801c128:	f340 81ef 	ble.w	801c50a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c12c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c130:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c134:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c138:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c13a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c13e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c142:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c146:	eef0 6a62 	vmov.f32	s13, s5
 801c14a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c14e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c152:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c156:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c15a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c15e:	eef0 6a43 	vmov.f32	s13, s6
 801c162:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c166:	ee12 2a90 	vmov	r2, s5
 801c16a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c16e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c172:	ee13 2a10 	vmov	r2, s6
 801c176:	9323      	str	r3, [sp, #140]	; 0x8c
 801c178:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c17a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c17e:	9324      	str	r3, [sp, #144]	; 0x90
 801c180:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c182:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c184:	3b01      	subs	r3, #1
 801c186:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c18a:	9311      	str	r3, [sp, #68]	; 0x44
 801c18c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c18e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c192:	bf08      	it	eq
 801c194:	4613      	moveq	r3, r2
 801c196:	9308      	str	r3, [sp, #32]
 801c198:	eeb0 3a67 	vmov.f32	s6, s15
 801c19c:	eef0 2a47 	vmov.f32	s5, s14
 801c1a0:	e5e1      	b.n	801bd66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c1a2:	fb08 f505 	mul.w	r5, r8, r5
 801c1a6:	fb09 5303 	mla	r3, r9, r3, r5
 801c1aa:	e661      	b.n	801be70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c1ac:	4681      	mov	r9, r0
 801c1ae:	e688      	b.n	801bec2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c1b0:	f1c1 0210 	rsb	r2, r1, #16
 801c1b4:	4341      	muls	r1, r0
 801c1b6:	fb09 1902 	mla	r9, r9, r2, r1
 801c1ba:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c1be:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c1c2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c1c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c1ca:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c1ce:	ea42 0909 	orr.w	r9, r2, r9
 801c1d2:	fa1f f289 	uxth.w	r2, r9
 801c1d6:	e71b      	b.n	801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c1d8:	803a      	strh	r2, [r7, #0]
 801c1da:	e75d      	b.n	801c098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c1dc:	f115 0e01 	adds.w	lr, r5, #1
 801c1e0:	f53f af5a 	bmi.w	801c098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c1e4:	4572      	cmp	r2, lr
 801c1e6:	f6ff af57 	blt.w	801c098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c1ea:	f110 0e01 	adds.w	lr, r0, #1
 801c1ee:	f53f af53 	bmi.w	801c098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c1f2:	4573      	cmp	r3, lr
 801c1f4:	f6ff af50 	blt.w	801c098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c1f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c1fa:	9502      	str	r5, [sp, #8]
 801c1fc:	b21b      	sxth	r3, r3
 801c1fe:	b212      	sxth	r2, r2
 801c200:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c204:	9301      	str	r3, [sp, #4]
 801c206:	9200      	str	r2, [sp, #0]
 801c208:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c20c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c210:	4639      	mov	r1, r7
 801c212:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c214:	f7ff fc04 	bl	801ba20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c218:	e73e      	b.n	801c098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c21a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c21c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c220:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c222:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c226:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c228:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c22c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c22e:	141f      	asrs	r7, r3, #16
 801c230:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c232:	141b      	asrs	r3, r3, #16
 801c234:	fb01 3707 	mla	r7, r1, r7, r3
 801c238:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c23a:	fa1f fc82 	uxth.w	ip, r2
 801c23e:	eb03 0a07 	add.w	sl, r3, r7
 801c242:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c246:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c24a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c24e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c252:	b29b      	uxth	r3, r3
 801c254:	2d00      	cmp	r5, #0
 801c256:	f000 813d 	beq.w	801c4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c25a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c25e:	940f      	str	r4, [sp, #60]	; 0x3c
 801c260:	eb0a 0b01 	add.w	fp, sl, r1
 801c264:	fa1f fa85 	uxth.w	sl, r5
 801c268:	fb0a fc0c 	mul.w	ip, sl, ip
 801c26c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c270:	fa1f fa8a 	uxth.w	sl, sl
 801c274:	eba0 000c 	sub.w	r0, r0, ip
 801c278:	eba3 030a 	sub.w	r3, r3, sl
 801c27c:	b280      	uxth	r0, r0
 801c27e:	fb08 f000 	mul.w	r0, r8, r0
 801c282:	b29b      	uxth	r3, r3
 801c284:	fb09 0303 	mla	r3, r9, r3, r0
 801c288:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c28a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c28e:	9410      	str	r4, [sp, #64]	; 0x40
 801c290:	fb0a 3300 	mla	r3, sl, r0, r3
 801c294:	fb0c 3304 	mla	r3, ip, r4, r3
 801c298:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c29c:	2b00      	cmp	r3, #0
 801c29e:	f000 810b 	beq.w	801c4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c2a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c2a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c2a6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c2aa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c2ae:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c2b2:	f000 8114 	beq.w	801c4de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c2b6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c2ba:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c2be:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c2c2:	fb09 f707 	mul.w	r7, r9, r7
 801c2c6:	fb0a fc0c 	mul.w	ip, sl, ip
 801c2ca:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c2ce:	f107 0b20 	add.w	fp, r7, #32
 801c2d2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c2d6:	44cc      	add	ip, r9
 801c2d8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c2dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c2e0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c2e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c2e8:	ea4c 0909 	orr.w	r9, ip, r9
 801c2ec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c2f0:	8847      	ldrh	r7, [r0, #2]
 801c2f2:	d019      	beq.n	801c328 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c2f4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c2f8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c2fc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c300:	fb08 f807 	mul.w	r8, r8, r7
 801c304:	fb0a fc0c 	mul.w	ip, sl, ip
 801c308:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c30c:	f108 0b20 	add.w	fp, r8, #32
 801c310:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c314:	44bc      	add	ip, r7
 801c316:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c31a:	0a3f      	lsrs	r7, r7, #8
 801c31c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c320:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c324:	ea4c 0707 	orr.w	r7, ip, r7
 801c328:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c32c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c330:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c334:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c338:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c33c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c340:	ea4c 0909 	orr.w	r9, ip, r9
 801c344:	ea4a 0707 	orr.w	r7, sl, r7
 801c348:	2d00      	cmp	r5, #0
 801c34a:	f000 80ca 	beq.w	801c4e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c34e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c352:	3901      	subs	r1, #1
 801c354:	0049      	lsls	r1, r1, #1
 801c356:	3102      	adds	r1, #2
 801c358:	eb00 0c01 	add.w	ip, r0, r1
 801c35c:	5a41      	ldrh	r1, [r0, r1]
 801c35e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c360:	28ff      	cmp	r0, #255	; 0xff
 801c362:	d019      	beq.n	801c398 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c364:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c366:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c36a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c36e:	fb04 fa01 	mul.w	sl, r4, r1
 801c372:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c376:	fb08 f800 	mul.w	r8, r8, r0
 801c37a:	f10a 0020 	add.w	r0, sl, #32
 801c37e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c382:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c386:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c38a:	4441      	add	r1, r8
 801c38c:	0a00      	lsrs	r0, r0, #8
 801c38e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c392:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c396:	4301      	orrs	r1, r0
 801c398:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c39a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c39e:	2cff      	cmp	r4, #255	; 0xff
 801c3a0:	d01a      	beq.n	801c3d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c3a2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c3a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c3aa:	fb04 fa00 	mul.w	sl, r4, r0
 801c3ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c3b2:	fb08 f80c 	mul.w	r8, r8, ip
 801c3b6:	f10a 0c20 	add.w	ip, sl, #32
 801c3ba:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c3be:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c3c2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c3c6:	4440      	add	r0, r8
 801c3c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3cc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c3d0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c3d4:	ea40 000c 	orr.w	r0, r0, ip
 801c3d8:	fb15 fc02 	smulbb	ip, r5, r2
 801c3dc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c3e0:	f1c5 0810 	rsb	r8, r5, #16
 801c3e4:	eba8 0802 	sub.w	r8, r8, r2
 801c3e8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c3ec:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c3f0:	437a      	muls	r2, r7
 801c3f2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c3f6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c3fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c3fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c402:	fb09 2208 	mla	r2, r9, r8, r2
 801c406:	ea4a 0101 	orr.w	r1, sl, r1
 801c40a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c40e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c412:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c416:	fb05 2201 	mla	r2, r5, r1, r2
 801c41a:	ea4b 0000 	orr.w	r0, fp, r0
 801c41e:	fb0c 2200 	mla	r2, ip, r0, r2
 801c422:	0d57      	lsrs	r7, r2, #21
 801c424:	0952      	lsrs	r2, r2, #5
 801c426:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c42a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c42e:	433a      	orrs	r2, r7
 801c430:	2bff      	cmp	r3, #255	; 0xff
 801c432:	b292      	uxth	r2, r2
 801c434:	d102      	bne.n	801c43c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c436:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c438:	29ff      	cmp	r1, #255	; 0xff
 801c43a:	d063      	beq.n	801c504 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c43c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c43e:	f8be 1000 	ldrh.w	r1, [lr]
 801c442:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c444:	4343      	muls	r3, r0
 801c446:	1c58      	adds	r0, r3, #1
 801c448:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c44c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c450:	1208      	asrs	r0, r1, #8
 801c452:	b2db      	uxtb	r3, r3
 801c454:	1215      	asrs	r5, r2, #8
 801c456:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c45a:	fb10 f003 	smulbb	r0, r0, r3
 801c45e:	10cf      	asrs	r7, r1, #3
 801c460:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c464:	00c9      	lsls	r1, r1, #3
 801c466:	fb05 0504 	mla	r5, r5, r4, r0
 801c46a:	b2c9      	uxtb	r1, r1
 801c46c:	10d0      	asrs	r0, r2, #3
 801c46e:	00d2      	lsls	r2, r2, #3
 801c470:	fb11 f103 	smulbb	r1, r1, r3
 801c474:	b2d2      	uxtb	r2, r2
 801c476:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c47a:	fb02 1204 	mla	r2, r2, r4, r1
 801c47e:	fb17 f703 	smulbb	r7, r7, r3
 801c482:	b2ad      	uxth	r5, r5
 801c484:	b292      	uxth	r2, r2
 801c486:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c48a:	fb00 7004 	mla	r0, r0, r4, r7
 801c48e:	1c6b      	adds	r3, r5, #1
 801c490:	1c57      	adds	r7, r2, #1
 801c492:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c496:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c49a:	b280      	uxth	r0, r0
 801c49c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c4a0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c4a4:	433d      	orrs	r5, r7
 801c4a6:	1c47      	adds	r7, r0, #1
 801c4a8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c4ac:	097f      	lsrs	r7, r7, #5
 801c4ae:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c4b2:	433d      	orrs	r5, r7
 801c4b4:	f8ae 5000 	strh.w	r5, [lr]
 801c4b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c4ba:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c4bc:	4413      	add	r3, r2
 801c4be:	9321      	str	r3, [sp, #132]	; 0x84
 801c4c0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c4c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c4c4:	441a      	add	r2, r3
 801c4c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c4c8:	9222      	str	r2, [sp, #136]	; 0x88
 801c4ca:	3b01      	subs	r3, #1
 801c4cc:	f10e 0e02 	add.w	lr, lr, #2
 801c4d0:	9313      	str	r3, [sp, #76]	; 0x4c
 801c4d2:	e61c      	b.n	801c10e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c4d4:	fb08 f000 	mul.w	r0, r8, r0
 801c4d8:	fb09 0303 	mla	r3, r9, r3, r0
 801c4dc:	e6dc      	b.n	801c298 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c4de:	46b9      	mov	r9, r7
 801c4e0:	e704      	b.n	801c2ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c4e2:	f1c2 0110 	rsb	r1, r2, #16
 801c4e6:	437a      	muls	r2, r7
 801c4e8:	fb09 2901 	mla	r9, r9, r1, r2
 801c4ec:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c4f0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c4f4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c4f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c4fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c500:	4302      	orrs	r2, r0
 801c502:	e795      	b.n	801c430 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c504:	f8ae 2000 	strh.w	r2, [lr]
 801c508:	e7d6      	b.n	801c4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c50a:	b017      	add	sp, #92	; 0x5c
 801c50c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c510 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c514:	b085      	sub	sp, #20
 801c516:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c51a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c51e:	9103      	str	r1, [sp, #12]
 801c520:	fb00 7406 	mla	r4, r0, r6, r7
 801c524:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c528:	2800      	cmp	r0, #0
 801c52a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c52e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c532:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c536:	9501      	str	r5, [sp, #4]
 801c538:	eb02 0904 	add.w	r9, r2, r4
 801c53c:	f2c0 8141 	blt.w	801c7c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c540:	4583      	cmp	fp, r0
 801c542:	f340 813e 	ble.w	801c7c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c546:	2f00      	cmp	r7, #0
 801c548:	f2c0 8137 	blt.w	801c7ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c54c:	42be      	cmp	r6, r7
 801c54e:	f340 8134 	ble.w	801c7ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c552:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c556:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c55a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c55e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c562:	4355      	muls	r5, r2
 801c564:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c568:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c56c:	fb0c f203 	mul.w	r2, ip, r3
 801c570:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c574:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c578:	441d      	add	r5, r3
 801c57a:	f102 0320 	add.w	r3, r2, #32
 801c57e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c582:	0a1b      	lsrs	r3, r3, #8
 801c584:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c588:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c58c:	431c      	orrs	r4, r3
 801c58e:	1c7b      	adds	r3, r7, #1
 801c590:	f100 811c 	bmi.w	801c7cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c594:	429e      	cmp	r6, r3
 801c596:	f340 8119 	ble.w	801c7cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c59a:	2900      	cmp	r1, #0
 801c59c:	f000 8119 	beq.w	801c7d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c5a0:	9a01      	ldr	r2, [sp, #4]
 801c5a2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c5a6:	8855      	ldrh	r5, [r2, #2]
 801c5a8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c5ac:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c5b0:	fb08 f802 	mul.w	r8, r8, r2
 801c5b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c5b8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c5bc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c5c0:	435d      	muls	r5, r3
 801c5c2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c5c6:	44d0      	add	r8, sl
 801c5c8:	f105 0a20 	add.w	sl, r5, #32
 801c5cc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c5d0:	0a2d      	lsrs	r5, r5, #8
 801c5d2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c5d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c5da:	432a      	orrs	r2, r5
 801c5dc:	3001      	adds	r0, #1
 801c5de:	f100 80fe 	bmi.w	801c7de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c5e2:	4583      	cmp	fp, r0
 801c5e4:	f340 80fb 	ble.w	801c7de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c5e8:	f1be 0f00 	cmp.w	lr, #0
 801c5ec:	f000 80fc 	beq.w	801c7e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c5f0:	2f00      	cmp	r7, #0
 801c5f2:	f2c0 80f1 	blt.w	801c7d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c5f6:	42be      	cmp	r6, r7
 801c5f8:	f340 80ee 	ble.w	801c7d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c5fc:	9801      	ldr	r0, [sp, #4]
 801c5fe:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c602:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c606:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c60a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c60e:	fb0a fa00 	mul.w	sl, sl, r0
 801c612:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c616:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c61a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c61e:	fb05 f808 	mul.w	r8, r5, r8
 801c622:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c626:	4482      	add	sl, r0
 801c628:	f108 0020 	add.w	r0, r8, #32
 801c62c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c630:	0a00      	lsrs	r0, r0, #8
 801c632:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c636:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c63a:	ea4b 0b00 	orr.w	fp, fp, r0
 801c63e:	3701      	adds	r7, #1
 801c640:	f100 80d7 	bmi.w	801c7f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c644:	42be      	cmp	r6, r7
 801c646:	f340 80d4 	ble.w	801c7f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c64a:	2900      	cmp	r1, #0
 801c64c:	f000 80d4 	beq.w	801c7f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c650:	3601      	adds	r6, #1
 801c652:	9801      	ldr	r0, [sp, #4]
 801c654:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c658:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c65c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c660:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c664:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c668:	fb09 f906 	mul.w	r9, r9, r6
 801c66c:	fb07 f800 	mul.w	r8, r7, r0
 801c670:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c674:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c678:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c67c:	44d1      	add	r9, sl
 801c67e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c682:	f108 0020 	add.w	r0, r8, #32
 801c686:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c68a:	0a00      	lsrs	r0, r0, #8
 801c68c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c690:	4330      	orrs	r0, r6
 801c692:	b28e      	uxth	r6, r1
 801c694:	fa1f f98e 	uxth.w	r9, lr
 801c698:	fb06 f809 	mul.w	r8, r6, r9
 801c69c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c6a0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c6a4:	0136      	lsls	r6, r6, #4
 801c6a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c6aa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c6ae:	9601      	str	r6, [sp, #4]
 801c6b0:	ea4a 0404 	orr.w	r4, sl, r4
 801c6b4:	fa1f f689 	uxth.w	r6, r9
 801c6b8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c6bc:	fb11 f90e 	smulbb	r9, r1, lr
 801c6c0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c6c4:	9602      	str	r6, [sp, #8]
 801c6c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c6ca:	4626      	mov	r6, r4
 801c6cc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c6d0:	f1ce 0410 	rsb	r4, lr, #16
 801c6d4:	1a64      	subs	r4, r4, r1
 801c6d6:	ea4a 0202 	orr.w	r2, sl, r2
 801c6da:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c6de:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c6e2:	434a      	muls	r2, r1
 801c6e4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c6e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c6ec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c6f0:	fb04 2406 	mla	r4, r4, r6, r2
 801c6f4:	ea4a 0000 	orr.w	r0, sl, r0
 801c6f8:	fb09 4200 	mla	r2, r9, r0, r4
 801c6fc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c700:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c704:	9801      	ldr	r0, [sp, #4]
 801c706:	9903      	ldr	r1, [sp, #12]
 801c708:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c70c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c710:	9c02      	ldr	r4, [sp, #8]
 801c712:	8809      	ldrh	r1, [r1, #0]
 801c714:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801c718:	1b00      	subs	r0, r0, r4
 801c71a:	9c01      	ldr	r4, [sp, #4]
 801c71c:	eba4 0608 	sub.w	r6, r4, r8
 801c720:	b2b6      	uxth	r6, r6
 801c722:	b280      	uxth	r0, r0
 801c724:	4373      	muls	r3, r6
 801c726:	fb0c 3300 	mla	r3, ip, r0, r3
 801c72a:	9802      	ldr	r0, [sp, #8]
 801c72c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c730:	fb00 3505 	mla	r5, r0, r5, r3
 801c734:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c738:	fb08 5707 	mla	r7, r8, r7, r5
 801c73c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c740:	120b      	asrs	r3, r1, #8
 801c742:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c746:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801c74a:	b2ff      	uxtb	r7, r7
 801c74c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c750:	10c8      	asrs	r0, r1, #3
 801c752:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c756:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c75a:	00c9      	lsls	r1, r1, #3
 801c75c:	437b      	muls	r3, r7
 801c75e:	ea42 0e0e 	orr.w	lr, r2, lr
 801c762:	b2c9      	uxtb	r1, r1
 801c764:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c768:	fa1f f28e 	uxth.w	r2, lr
 801c76c:	4378      	muls	r0, r7
 801c76e:	434f      	muls	r7, r1
 801c770:	1c59      	adds	r1, r3, #1
 801c772:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c776:	1213      	asrs	r3, r2, #8
 801c778:	f023 0307 	bic.w	r3, r3, #7
 801c77c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c780:	1c41      	adds	r1, r0, #1
 801c782:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c786:	10d1      	asrs	r1, r2, #3
 801c788:	f021 0103 	bic.w	r1, r1, #3
 801c78c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c790:	021b      	lsls	r3, r3, #8
 801c792:	00c9      	lsls	r1, r1, #3
 801c794:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c798:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c79c:	430b      	orrs	r3, r1
 801c79e:	1c79      	adds	r1, r7, #1
 801c7a0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801c7a4:	00d2      	lsls	r2, r2, #3
 801c7a6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c7aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c7ae:	431a      	orrs	r2, r3
 801c7b0:	9b03      	ldr	r3, [sp, #12]
 801c7b2:	801a      	strh	r2, [r3, #0]
 801c7b4:	b005      	add	sp, #20
 801c7b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7ba:	f04f 0c00 	mov.w	ip, #0
 801c7be:	4664      	mov	r4, ip
 801c7c0:	e6e5      	b.n	801c58e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801c7c2:	2300      	movs	r3, #0
 801c7c4:	469c      	mov	ip, r3
 801c7c6:	461a      	mov	r2, r3
 801c7c8:	461c      	mov	r4, r3
 801c7ca:	e707      	b.n	801c5dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c7cc:	2300      	movs	r3, #0
 801c7ce:	461a      	mov	r2, r3
 801c7d0:	e704      	b.n	801c5dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c7d2:	460b      	mov	r3, r1
 801c7d4:	460a      	mov	r2, r1
 801c7d6:	e701      	b.n	801c5dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c7d8:	2500      	movs	r5, #0
 801c7da:	46ab      	mov	fp, r5
 801c7dc:	e72f      	b.n	801c63e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801c7de:	2700      	movs	r7, #0
 801c7e0:	463d      	mov	r5, r7
 801c7e2:	4638      	mov	r0, r7
 801c7e4:	46bb      	mov	fp, r7
 801c7e6:	e754      	b.n	801c692 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c7e8:	4677      	mov	r7, lr
 801c7ea:	4675      	mov	r5, lr
 801c7ec:	4670      	mov	r0, lr
 801c7ee:	46f3      	mov	fp, lr
 801c7f0:	e74f      	b.n	801c692 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c7f2:	2700      	movs	r7, #0
 801c7f4:	4638      	mov	r0, r7
 801c7f6:	e74c      	b.n	801c692 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c7f8:	460f      	mov	r7, r1
 801c7fa:	4608      	mov	r0, r1
 801c7fc:	e749      	b.n	801c692 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801c800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c804:	b093      	sub	sp, #76	; 0x4c
 801c806:	9210      	str	r2, [sp, #64]	; 0x40
 801c808:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c80a:	910e      	str	r1, [sp, #56]	; 0x38
 801c80c:	9306      	str	r3, [sp, #24]
 801c80e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801c812:	9011      	str	r0, [sp, #68]	; 0x44
 801c814:	6850      	ldr	r0, [r2, #4]
 801c816:	6812      	ldr	r2, [r2, #0]
 801c818:	fb00 1303 	mla	r3, r0, r3, r1
 801c81c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c820:	9307      	str	r3, [sp, #28]
 801c822:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c824:	681b      	ldr	r3, [r3, #0]
 801c826:	9308      	str	r3, [sp, #32]
 801c828:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c82a:	685b      	ldr	r3, [r3, #4]
 801c82c:	9309      	str	r3, [sp, #36]	; 0x24
 801c82e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c830:	2b00      	cmp	r3, #0
 801c832:	dc03      	bgt.n	801c83c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c834:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c836:	2b00      	cmp	r3, #0
 801c838:	f340 83b4 	ble.w	801cfa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801c83c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c83e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c842:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c846:	1e48      	subs	r0, r1, #1
 801c848:	1e55      	subs	r5, r2, #1
 801c84a:	9b06      	ldr	r3, [sp, #24]
 801c84c:	2b00      	cmp	r3, #0
 801c84e:	f340 8163 	ble.w	801cb18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c852:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801c854:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c856:	1436      	asrs	r6, r6, #16
 801c858:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c85c:	d406      	bmi.n	801c86c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c85e:	4286      	cmp	r6, r0
 801c860:	da04      	bge.n	801c86c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c862:	2b00      	cmp	r3, #0
 801c864:	db02      	blt.n	801c86c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c866:	42ab      	cmp	r3, r5
 801c868:	f2c0 8157 	blt.w	801cb1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801c86c:	3601      	adds	r6, #1
 801c86e:	f100 8144 	bmi.w	801cafa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c872:	42b1      	cmp	r1, r6
 801c874:	f2c0 8141 	blt.w	801cafa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c878:	3301      	adds	r3, #1
 801c87a:	f100 813e 	bmi.w	801cafa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c87e:	429a      	cmp	r2, r3
 801c880:	f2c0 813b 	blt.w	801cafa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c884:	9b06      	ldr	r3, [sp, #24]
 801c886:	9f07      	ldr	r7, [sp, #28]
 801c888:	930f      	str	r3, [sp, #60]	; 0x3c
 801c88a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c88e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c890:	2b00      	cmp	r3, #0
 801c892:	f340 8164 	ble.w	801cb5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801c896:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c898:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801c89a:	1418      	asrs	r0, r3, #16
 801c89c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c89e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c8a2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c8a4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c8a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c8aa:	142d      	asrs	r5, r5, #16
 801c8ac:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c8b0:	f100 81ee 	bmi.w	801cc90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c8b4:	f102 3eff 	add.w	lr, r2, #4294967295
 801c8b8:	4575      	cmp	r5, lr
 801c8ba:	f280 81e9 	bge.w	801cc90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c8be:	2800      	cmp	r0, #0
 801c8c0:	f2c0 81e6 	blt.w	801cc90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c8c4:	f103 3eff 	add.w	lr, r3, #4294967295
 801c8c8:	4570      	cmp	r0, lr
 801c8ca:	f280 81e1 	bge.w	801cc90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c8ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c8d0:	b212      	sxth	r2, r2
 801c8d2:	fb00 5002 	mla	r0, r0, r2, r5
 801c8d6:	fa1f fe81 	uxth.w	lr, r1
 801c8da:	eb03 0a00 	add.w	sl, r3, r0
 801c8de:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c8e2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c8e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c8ea:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c8ee:	b29b      	uxth	r3, r3
 801c8f0:	f1bc 0f00 	cmp.w	ip, #0
 801c8f4:	f000 8179 	beq.w	801cbea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c8f8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c8fc:	940a      	str	r4, [sp, #40]	; 0x28
 801c8fe:	eb0a 0b02 	add.w	fp, sl, r2
 801c902:	fa1f fa8c 	uxth.w	sl, ip
 801c906:	fb0a fe0e 	mul.w	lr, sl, lr
 801c90a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c90e:	fa1f fa8a 	uxth.w	sl, sl
 801c912:	eba5 050e 	sub.w	r5, r5, lr
 801c916:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c91a:	940b      	str	r4, [sp, #44]	; 0x2c
 801c91c:	eba3 030a 	sub.w	r3, r3, sl
 801c920:	b2ad      	uxth	r5, r5
 801c922:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c924:	b29b      	uxth	r3, r3
 801c926:	fb08 f505 	mul.w	r5, r8, r5
 801c92a:	fb09 5303 	mla	r3, r9, r3, r5
 801c92e:	fb0a 3304 	mla	r3, sl, r4, r3
 801c932:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c934:	fb0e 3304 	mla	r3, lr, r4, r3
 801c938:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c93c:	2b00      	cmp	r3, #0
 801c93e:	f000 80cf 	beq.w	801cae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c942:	9c08      	ldr	r4, [sp, #32]
 801c944:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c948:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c94c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c950:	f000 8150 	beq.w	801cbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801c954:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c958:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c95c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c960:	fb09 f000 	mul.w	r0, r9, r0
 801c964:	fb0a fe0e 	mul.w	lr, sl, lr
 801c968:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c96c:	f100 0b20 	add.w	fp, r0, #32
 801c970:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c974:	44ce      	add	lr, r9
 801c976:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c97a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c97e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c982:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c986:	ea4e 0909 	orr.w	r9, lr, r9
 801c98a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c98e:	8868      	ldrh	r0, [r5, #2]
 801c990:	d019      	beq.n	801c9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801c992:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c996:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c99a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c99e:	fb08 f800 	mul.w	r8, r8, r0
 801c9a2:	fb0a fe0e 	mul.w	lr, sl, lr
 801c9a6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c9aa:	f108 0b20 	add.w	fp, r8, #32
 801c9ae:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c9b2:	4486      	add	lr, r0
 801c9b4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c9b8:	0a00      	lsrs	r0, r0, #8
 801c9ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c9be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9c2:	ea4e 0000 	orr.w	r0, lr, r0
 801c9c6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c9ca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c9ce:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c9d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c9d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c9da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c9de:	ea4e 0909 	orr.w	r9, lr, r9
 801c9e2:	ea4a 0000 	orr.w	r0, sl, r0
 801c9e6:	f1bc 0f00 	cmp.w	ip, #0
 801c9ea:	f000 8105 	beq.w	801cbf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c9ee:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c9f2:	3a01      	subs	r2, #1
 801c9f4:	0052      	lsls	r2, r2, #1
 801c9f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c9f8:	3202      	adds	r2, #2
 801c9fa:	2cff      	cmp	r4, #255	; 0xff
 801c9fc:	eb05 0e02 	add.w	lr, r5, r2
 801ca00:	5aaa      	ldrh	r2, [r5, r2]
 801ca02:	d018      	beq.n	801ca36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ca04:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801ca08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ca0c:	fb04 fa02 	mul.w	sl, r4, r2
 801ca10:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ca14:	fb08 f805 	mul.w	r8, r8, r5
 801ca18:	f10a 0520 	add.w	r5, sl, #32
 801ca1c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ca20:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ca24:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ca28:	4442      	add	r2, r8
 801ca2a:	0a2d      	lsrs	r5, r5, #8
 801ca2c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ca30:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca34:	432a      	orrs	r2, r5
 801ca36:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ca38:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ca3c:	2cff      	cmp	r4, #255	; 0xff
 801ca3e:	d01a      	beq.n	801ca76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ca40:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801ca44:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca48:	fb04 fa05 	mul.w	sl, r4, r5
 801ca4c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ca50:	fb08 f80e 	mul.w	r8, r8, lr
 801ca54:	f10a 0e20 	add.w	lr, sl, #32
 801ca58:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ca5c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801ca60:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ca64:	4445      	add	r5, r8
 801ca66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ca6a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ca6e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801ca72:	ea45 050e 	orr.w	r5, r5, lr
 801ca76:	fb1c fe01 	smulbb	lr, ip, r1
 801ca7a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ca7e:	f1cc 0810 	rsb	r8, ip, #16
 801ca82:	eba8 0801 	sub.w	r8, r8, r1
 801ca86:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ca8a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ca8e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ca92:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ca96:	4341      	muls	r1, r0
 801ca98:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca9c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801caa0:	ea4a 0202 	orr.w	r2, sl, r2
 801caa4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801caa8:	fb09 1108 	mla	r1, r9, r8, r1
 801caac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cab0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cab4:	fb0c 1102 	mla	r1, ip, r2, r1
 801cab8:	ea4b 0505 	orr.w	r5, fp, r5
 801cabc:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cac0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cac4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cac8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cacc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cad0:	ea42 0e0e 	orr.w	lr, r2, lr
 801cad4:	fa1f f28e 	uxth.w	r2, lr
 801cad8:	2bff      	cmp	r3, #255	; 0xff
 801cada:	f040 80a1 	bne.w	801cc20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801cade:	803a      	strh	r2, [r7, #0]
 801cae0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cae2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801cae4:	4413      	add	r3, r2
 801cae6:	931d      	str	r3, [sp, #116]	; 0x74
 801cae8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801caea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801caec:	441a      	add	r2, r3
 801caee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801caf0:	921e      	str	r2, [sp, #120]	; 0x78
 801caf2:	3b01      	subs	r3, #1
 801caf4:	3702      	adds	r7, #2
 801caf6:	930f      	str	r3, [sp, #60]	; 0x3c
 801caf8:	e6c9      	b.n	801c88e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cafa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cafc:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801cafe:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801cb00:	4433      	add	r3, r6
 801cb02:	931d      	str	r3, [sp, #116]	; 0x74
 801cb04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cb06:	441c      	add	r4, r3
 801cb08:	9b06      	ldr	r3, [sp, #24]
 801cb0a:	941e      	str	r4, [sp, #120]	; 0x78
 801cb0c:	3b01      	subs	r3, #1
 801cb0e:	9306      	str	r3, [sp, #24]
 801cb10:	9b07      	ldr	r3, [sp, #28]
 801cb12:	3302      	adds	r3, #2
 801cb14:	9307      	str	r3, [sp, #28]
 801cb16:	e698      	b.n	801c84a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cb18:	d028      	beq.n	801cb6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cb1a:	9b06      	ldr	r3, [sp, #24]
 801cb1c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cb1e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cb20:	3b01      	subs	r3, #1
 801cb22:	fb00 5003 	mla	r0, r0, r3, r5
 801cb26:	1400      	asrs	r0, r0, #16
 801cb28:	f53f aeac 	bmi.w	801c884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb2c:	3901      	subs	r1, #1
 801cb2e:	4288      	cmp	r0, r1
 801cb30:	f6bf aea8 	bge.w	801c884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb34:	9920      	ldr	r1, [sp, #128]	; 0x80
 801cb36:	981e      	ldr	r0, [sp, #120]	; 0x78
 801cb38:	fb01 0303 	mla	r3, r1, r3, r0
 801cb3c:	141b      	asrs	r3, r3, #16
 801cb3e:	f53f aea1 	bmi.w	801c884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb42:	3a01      	subs	r2, #1
 801cb44:	4293      	cmp	r3, r2
 801cb46:	f6bf ae9d 	bge.w	801c884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb4a:	9b06      	ldr	r3, [sp, #24]
 801cb4c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801cb50:	930f      	str	r3, [sp, #60]	; 0x3c
 801cb52:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cb56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cb58:	2b00      	cmp	r3, #0
 801cb5a:	f300 80b6 	bgt.w	801ccca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801cb5e:	9b06      	ldr	r3, [sp, #24]
 801cb60:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cb64:	9b07      	ldr	r3, [sp, #28]
 801cb66:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cb6a:	9307      	str	r3, [sp, #28]
 801cb6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb6e:	2b00      	cmp	r3, #0
 801cb70:	f340 8218 	ble.w	801cfa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cb74:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cb7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cb80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cb82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb86:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb8e:	eef0 6a62 	vmov.f32	s13, s5
 801cb92:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb9e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801cba2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cba6:	eef0 6a43 	vmov.f32	s13, s6
 801cbaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cbae:	ee12 2a90 	vmov	r2, s5
 801cbb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cbb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801cbba:	ee13 2a10 	vmov	r2, s6
 801cbbe:	931f      	str	r3, [sp, #124]	; 0x7c
 801cbc0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cbc2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cbc6:	9320      	str	r3, [sp, #128]	; 0x80
 801cbc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cbca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cbcc:	3b01      	subs	r3, #1
 801cbce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cbd2:	930e      	str	r3, [sp, #56]	; 0x38
 801cbd4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cbd6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801cbda:	bf08      	it	eq
 801cbdc:	4613      	moveq	r3, r2
 801cbde:	9306      	str	r3, [sp, #24]
 801cbe0:	eeb0 3a67 	vmov.f32	s6, s15
 801cbe4:	eef0 2a47 	vmov.f32	s5, s14
 801cbe8:	e621      	b.n	801c82e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cbea:	fb08 f505 	mul.w	r5, r8, r5
 801cbee:	fb09 5303 	mla	r3, r9, r3, r5
 801cbf2:	e6a1      	b.n	801c938 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801cbf4:	4681      	mov	r9, r0
 801cbf6:	e6c8      	b.n	801c98a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801cbf8:	f1c1 0210 	rsb	r2, r1, #16
 801cbfc:	4341      	muls	r1, r0
 801cbfe:	fb09 1902 	mla	r9, r9, r2, r1
 801cc02:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cc06:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cc0a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cc0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cc12:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cc16:	ea42 0909 	orr.w	r9, r2, r9
 801cc1a:	fa1f f289 	uxth.w	r2, r9
 801cc1e:	e75b      	b.n	801cad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cc20:	f8b7 c000 	ldrh.w	ip, [r7]
 801cc24:	43db      	mvns	r3, r3
 801cc26:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cc2a:	fa5f fe83 	uxtb.w	lr, r3
 801cc2e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cc32:	fb00 f00e 	mul.w	r0, r0, lr
 801cc36:	1c41      	adds	r1, r0, #1
 801cc38:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cc3c:	1211      	asrs	r1, r2, #8
 801cc3e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cc42:	f021 0107 	bic.w	r1, r1, #7
 801cc46:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cc4a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cc4e:	48d7      	ldr	r0, [pc, #860]	; (801cfac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cc50:	fb05 f50e 	mul.w	r5, r5, lr
 801cc54:	b2c9      	uxtb	r1, r1
 801cc56:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cc5a:	1c69      	adds	r1, r5, #1
 801cc5c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cc60:	10d1      	asrs	r1, r2, #3
 801cc62:	f021 0103 	bic.w	r1, r1, #3
 801cc66:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801cc6a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cc6e:	b2db      	uxtb	r3, r3
 801cc70:	00c9      	lsls	r1, r1, #3
 801cc72:	fb03 f30e 	mul.w	r3, r3, lr
 801cc76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cc7a:	4301      	orrs	r1, r0
 801cc7c:	1c58      	adds	r0, r3, #1
 801cc7e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cc82:	00d2      	lsls	r2, r2, #3
 801cc84:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cc88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cc8c:	430a      	orrs	r2, r1
 801cc8e:	e726      	b.n	801cade <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801cc90:	f115 0e01 	adds.w	lr, r5, #1
 801cc94:	f53f af24 	bmi.w	801cae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cc98:	4572      	cmp	r2, lr
 801cc9a:	f6ff af21 	blt.w	801cae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cc9e:	f110 0e01 	adds.w	lr, r0, #1
 801cca2:	f53f af1d 	bmi.w	801cae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cca6:	4573      	cmp	r3, lr
 801cca8:	f6ff af1a 	blt.w	801cae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ccac:	b21b      	sxth	r3, r3
 801ccae:	b212      	sxth	r2, r2
 801ccb0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801ccb4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801ccb8:	9301      	str	r3, [sp, #4]
 801ccba:	9200      	str	r2, [sp, #0]
 801ccbc:	4639      	mov	r1, r7
 801ccbe:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801ccc2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ccc4:	f7ff fc24 	bl	801c510 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ccc8:	e70a      	b.n	801cae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ccca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cccc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ccd0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ccd2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801ccd6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ccd8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ccdc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ccde:	141f      	asrs	r7, r3, #16
 801cce0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cce2:	141b      	asrs	r3, r3, #16
 801cce4:	fb01 3707 	mla	r7, r1, r7, r3
 801cce8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ccea:	fa1f fc82 	uxth.w	ip, r2
 801ccee:	eb03 0a07 	add.w	sl, r3, r7
 801ccf2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801ccf6:	f813 9007 	ldrb.w	r9, [r3, r7]
 801ccfa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ccfe:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801cd02:	b29b      	uxth	r3, r3
 801cd04:	2d00      	cmp	r5, #0
 801cd06:	f000 80fe 	beq.w	801cf06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801cd0a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cd0e:	940c      	str	r4, [sp, #48]	; 0x30
 801cd10:	eb0a 0b01 	add.w	fp, sl, r1
 801cd14:	fa1f fa85 	uxth.w	sl, r5
 801cd18:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd1c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cd20:	fa1f fa8a 	uxth.w	sl, sl
 801cd24:	eba0 000c 	sub.w	r0, r0, ip
 801cd28:	eba3 030a 	sub.w	r3, r3, sl
 801cd2c:	b280      	uxth	r0, r0
 801cd2e:	fb08 f000 	mul.w	r0, r8, r0
 801cd32:	b29b      	uxth	r3, r3
 801cd34:	fb09 0303 	mla	r3, r9, r3, r0
 801cd38:	980c      	ldr	r0, [sp, #48]	; 0x30
 801cd3a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cd3e:	940d      	str	r4, [sp, #52]	; 0x34
 801cd40:	fb0a 3300 	mla	r3, sl, r0, r3
 801cd44:	fb0c 3304 	mla	r3, ip, r4, r3
 801cd48:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cd4c:	2b00      	cmp	r3, #0
 801cd4e:	f000 80cc 	beq.w	801ceea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801cd52:	9808      	ldr	r0, [sp, #32]
 801cd54:	9c08      	ldr	r4, [sp, #32]
 801cd56:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cd5a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cd5e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cd62:	f000 80d5 	beq.w	801cf10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cd66:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cd6a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cd6e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cd72:	fb09 f707 	mul.w	r7, r9, r7
 801cd76:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd7a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cd7e:	f107 0b20 	add.w	fp, r7, #32
 801cd82:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cd86:	44cc      	add	ip, r9
 801cd88:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cd8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cd90:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cd94:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cd98:	ea4c 0909 	orr.w	r9, ip, r9
 801cd9c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cda0:	8847      	ldrh	r7, [r0, #2]
 801cda2:	d019      	beq.n	801cdd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801cda4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cda8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cdac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cdb0:	fb08 f807 	mul.w	r8, r8, r7
 801cdb4:	fb0a fc0c 	mul.w	ip, sl, ip
 801cdb8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cdbc:	f108 0b20 	add.w	fp, r8, #32
 801cdc0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cdc4:	44bc      	add	ip, r7
 801cdc6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801cdca:	0a3f      	lsrs	r7, r7, #8
 801cdcc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cdd0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cdd4:	ea4c 0707 	orr.w	r7, ip, r7
 801cdd8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801cddc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801cde0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801cde4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cde8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cdec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801cdf0:	ea4c 0909 	orr.w	r9, ip, r9
 801cdf4:	ea4a 0707 	orr.w	r7, sl, r7
 801cdf8:	2d00      	cmp	r5, #0
 801cdfa:	f000 808b 	beq.w	801cf14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801cdfe:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801ce02:	3901      	subs	r1, #1
 801ce04:	0049      	lsls	r1, r1, #1
 801ce06:	3102      	adds	r1, #2
 801ce08:	eb00 0c01 	add.w	ip, r0, r1
 801ce0c:	5a41      	ldrh	r1, [r0, r1]
 801ce0e:	980c      	ldr	r0, [sp, #48]	; 0x30
 801ce10:	28ff      	cmp	r0, #255	; 0xff
 801ce12:	d019      	beq.n	801ce48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801ce14:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ce16:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801ce1a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ce1e:	fb04 fa01 	mul.w	sl, r4, r1
 801ce22:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce26:	fb08 f800 	mul.w	r8, r8, r0
 801ce2a:	f10a 0020 	add.w	r0, sl, #32
 801ce2e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801ce32:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ce36:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ce3a:	4441      	add	r1, r8
 801ce3c:	0a00      	lsrs	r0, r0, #8
 801ce3e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ce42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce46:	4301      	orrs	r1, r0
 801ce48:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ce4a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801ce4e:	2cff      	cmp	r4, #255	; 0xff
 801ce50:	d01a      	beq.n	801ce88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801ce52:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801ce56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce5a:	fb04 fa00 	mul.w	sl, r4, r0
 801ce5e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce62:	fb08 f80c 	mul.w	r8, r8, ip
 801ce66:	f10a 0c20 	add.w	ip, sl, #32
 801ce6a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ce6e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ce72:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ce76:	4440      	add	r0, r8
 801ce78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce7c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801ce80:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ce84:	ea40 000c 	orr.w	r0, r0, ip
 801ce88:	fb15 fc02 	smulbb	ip, r5, r2
 801ce8c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801ce90:	f1c5 0810 	rsb	r8, r5, #16
 801ce94:	eba8 0802 	sub.w	r8, r8, r2
 801ce98:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ce9c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801cea0:	437a      	muls	r2, r7
 801cea2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cea6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801ceaa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ceae:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ceb2:	fb09 2208 	mla	r2, r9, r8, r2
 801ceb6:	ea4a 0101 	orr.w	r1, sl, r1
 801ceba:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801cebe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cec2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cec6:	fb05 2201 	mla	r2, r5, r1, r2
 801ceca:	ea4b 0000 	orr.w	r0, fp, r0
 801cece:	fb0c 2200 	mla	r2, ip, r0, r2
 801ced2:	0d57      	lsrs	r7, r2, #21
 801ced4:	0952      	lsrs	r2, r2, #5
 801ced6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ceda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cede:	433a      	orrs	r2, r7
 801cee0:	2bff      	cmp	r3, #255	; 0xff
 801cee2:	b292      	uxth	r2, r2
 801cee4:	d127      	bne.n	801cf36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801cee6:	f8ae 2000 	strh.w	r2, [lr]
 801ceea:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ceec:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801ceee:	4413      	add	r3, r2
 801cef0:	931d      	str	r3, [sp, #116]	; 0x74
 801cef2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801cef4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cef6:	441a      	add	r2, r3
 801cef8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cefa:	921e      	str	r2, [sp, #120]	; 0x78
 801cefc:	3b01      	subs	r3, #1
 801cefe:	f10e 0e02 	add.w	lr, lr, #2
 801cf02:	930f      	str	r3, [sp, #60]	; 0x3c
 801cf04:	e627      	b.n	801cb56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801cf06:	fb08 f000 	mul.w	r0, r8, r0
 801cf0a:	fb09 0303 	mla	r3, r9, r3, r0
 801cf0e:	e71b      	b.n	801cd48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801cf10:	46b9      	mov	r9, r7
 801cf12:	e743      	b.n	801cd9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801cf14:	f1c2 0110 	rsb	r1, r2, #16
 801cf18:	437a      	muls	r2, r7
 801cf1a:	fb09 2901 	mla	r9, r9, r1, r2
 801cf1e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf22:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801cf26:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801cf2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cf32:	4302      	orrs	r2, r0
 801cf34:	e7d4      	b.n	801cee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801cf36:	f8be 7000 	ldrh.w	r7, [lr]
 801cf3a:	4c1c      	ldr	r4, [pc, #112]	; (801cfac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cf3c:	43db      	mvns	r3, r3
 801cf3e:	1238      	asrs	r0, r7, #8
 801cf40:	fa5f fc83 	uxtb.w	ip, r3
 801cf44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cf48:	10fd      	asrs	r5, r7, #3
 801cf4a:	fb00 f00c 	mul.w	r0, r0, ip
 801cf4e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cf52:	fb05 f10c 	mul.w	r1, r5, ip
 801cf56:	1c45      	adds	r5, r0, #1
 801cf58:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801cf5c:	1215      	asrs	r5, r2, #8
 801cf5e:	f025 0507 	bic.w	r5, r5, #7
 801cf62:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801cf66:	1c4d      	adds	r5, r1, #1
 801cf68:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801cf6c:	10d1      	asrs	r1, r2, #3
 801cf6e:	f021 0103 	bic.w	r1, r1, #3
 801cf72:	00fb      	lsls	r3, r7, #3
 801cf74:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cf78:	b2db      	uxtb	r3, r3
 801cf7a:	b2c0      	uxtb	r0, r0
 801cf7c:	00c9      	lsls	r1, r1, #3
 801cf7e:	fb03 f30c 	mul.w	r3, r3, ip
 801cf82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cf86:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801cf8a:	4308      	orrs	r0, r1
 801cf8c:	1c59      	adds	r1, r3, #1
 801cf8e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801cf92:	00d2      	lsls	r2, r2, #3
 801cf94:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801cf98:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801cf9c:	4318      	orrs	r0, r3
 801cf9e:	f8ae 0000 	strh.w	r0, [lr]
 801cfa2:	e7a2      	b.n	801ceea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801cfa4:	b013      	add	sp, #76	; 0x4c
 801cfa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfaa:	bf00      	nop
 801cfac:	fffff800 	.word	0xfffff800

0801cfb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801cfb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cfb4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801cfb8:	fb05 4c03 	mla	ip, r5, r3, r4
 801cfbc:	2d00      	cmp	r5, #0
 801cfbe:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801cfc2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801cfc6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801cfca:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801cfce:	8808      	ldrh	r0, [r1, #0]
 801cfd0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801cfd4:	f2c0 80a7 	blt.w	801d126 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801cfd8:	45aa      	cmp	sl, r5
 801cfda:	f340 80a4 	ble.w	801d126 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801cfde:	2c00      	cmp	r4, #0
 801cfe0:	f2c0 809f 	blt.w	801d122 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801cfe4:	42a3      	cmp	r3, r4
 801cfe6:	f340 809c 	ble.w	801d122 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801cfea:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801cfee:	1c62      	adds	r2, r4, #1
 801cff0:	f100 809c 	bmi.w	801d12c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801cff4:	4293      	cmp	r3, r2
 801cff6:	f340 8099 	ble.w	801d12c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801cffa:	f1b9 0f00 	cmp.w	r9, #0
 801cffe:	f000 8095 	beq.w	801d12c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d002:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d006:	3501      	adds	r5, #1
 801d008:	f100 8094 	bmi.w	801d134 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d00c:	45aa      	cmp	sl, r5
 801d00e:	f340 8091 	ble.w	801d134 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d012:	2f00      	cmp	r7, #0
 801d014:	f000 808e 	beq.w	801d134 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d018:	2c00      	cmp	r4, #0
 801d01a:	f2c0 8089 	blt.w	801d130 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d01e:	42a3      	cmp	r3, r4
 801d020:	f340 8086 	ble.w	801d130 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d024:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d028:	3401      	adds	r4, #1
 801d02a:	f100 8086 	bmi.w	801d13a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d02e:	42a3      	cmp	r3, r4
 801d030:	f340 8083 	ble.w	801d13a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d034:	f1b9 0f00 	cmp.w	r9, #0
 801d038:	d07f      	beq.n	801d13a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d03a:	3301      	adds	r3, #1
 801d03c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d040:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d044:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d048:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d04c:	fb19 fe07 	smulbb	lr, r9, r7
 801d050:	ea44 0808 	orr.w	r8, r4, r8
 801d054:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d058:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d05c:	f1c7 0210 	rsb	r2, r7, #16
 801d060:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d064:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d068:	ea44 0c0c 	orr.w	ip, r4, ip
 801d06c:	eba2 0209 	sub.w	r2, r2, r9
 801d070:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d074:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d078:	fb04 f40c 	mul.w	r4, r4, ip
 801d07c:	fb02 4808 	mla	r8, r2, r8, r4
 801d080:	041a      	lsls	r2, r3, #16
 801d082:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d086:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d08a:	4313      	orrs	r3, r2
 801d08c:	042a      	lsls	r2, r5, #16
 801d08e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d092:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d096:	fb0e 8303 	mla	r3, lr, r3, r8
 801d09a:	432a      	orrs	r2, r5
 801d09c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d0a0:	fb07 3202 	mla	r2, r7, r2, r3
 801d0a4:	0d53      	lsrs	r3, r2, #21
 801d0a6:	0952      	lsrs	r2, r2, #5
 801d0a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d0ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d0b0:	431a      	orrs	r2, r3
 801d0b2:	b293      	uxth	r3, r2
 801d0b4:	b2b4      	uxth	r4, r6
 801d0b6:	1202      	asrs	r2, r0, #8
 801d0b8:	43f6      	mvns	r6, r6
 801d0ba:	b2f6      	uxtb	r6, r6
 801d0bc:	121d      	asrs	r5, r3, #8
 801d0be:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d0c2:	fb12 f206 	smulbb	r2, r2, r6
 801d0c6:	10c7      	asrs	r7, r0, #3
 801d0c8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d0cc:	00c0      	lsls	r0, r0, #3
 801d0ce:	fb05 2504 	mla	r5, r5, r4, r2
 801d0d2:	b2c0      	uxtb	r0, r0
 801d0d4:	10da      	asrs	r2, r3, #3
 801d0d6:	00db      	lsls	r3, r3, #3
 801d0d8:	b2db      	uxtb	r3, r3
 801d0da:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d0de:	fb10 f006 	smulbb	r0, r0, r6
 801d0e2:	b2ad      	uxth	r5, r5
 801d0e4:	fb03 0004 	mla	r0, r3, r4, r0
 801d0e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d0ec:	fb17 f706 	smulbb	r7, r7, r6
 801d0f0:	b280      	uxth	r0, r0
 801d0f2:	1c6b      	adds	r3, r5, #1
 801d0f4:	fb02 7204 	mla	r2, r2, r4, r7
 801d0f8:	b292      	uxth	r2, r2
 801d0fa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d0fe:	1c43      	adds	r3, r0, #1
 801d100:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d104:	1c50      	adds	r0, r2, #1
 801d106:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d10a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d10e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d112:	0952      	lsrs	r2, r2, #5
 801d114:	432b      	orrs	r3, r5
 801d116:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d11a:	4313      	orrs	r3, r2
 801d11c:	800b      	strh	r3, [r1, #0]
 801d11e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d122:	4680      	mov	r8, r0
 801d124:	e763      	b.n	801cfee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d126:	4684      	mov	ip, r0
 801d128:	4680      	mov	r8, r0
 801d12a:	e76c      	b.n	801d006 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d12c:	4684      	mov	ip, r0
 801d12e:	e76a      	b.n	801d006 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d130:	4605      	mov	r5, r0
 801d132:	e779      	b.n	801d028 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d134:	4603      	mov	r3, r0
 801d136:	4605      	mov	r5, r0
 801d138:	e782      	b.n	801d040 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d13a:	4603      	mov	r3, r0
 801d13c:	e780      	b.n	801d040 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d13e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d13e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d142:	b093      	sub	sp, #76	; 0x4c
 801d144:	461d      	mov	r5, r3
 801d146:	9210      	str	r2, [sp, #64]	; 0x40
 801d148:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d14a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d14e:	920b      	str	r2, [sp, #44]	; 0x2c
 801d150:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d154:	910a      	str	r1, [sp, #40]	; 0x28
 801d156:	6859      	ldr	r1, [r3, #4]
 801d158:	681b      	ldr	r3, [r3, #0]
 801d15a:	9011      	str	r0, [sp, #68]	; 0x44
 801d15c:	fb01 2707 	mla	r7, r1, r7, r2
 801d160:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d164:	9307      	str	r3, [sp, #28]
 801d166:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d168:	681b      	ldr	r3, [r3, #0]
 801d16a:	9309      	str	r3, [sp, #36]	; 0x24
 801d16c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d16e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d172:	43db      	mvns	r3, r3
 801d174:	b2db      	uxtb	r3, r3
 801d176:	9308      	str	r3, [sp, #32]
 801d178:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d17a:	2b00      	cmp	r3, #0
 801d17c:	dc03      	bgt.n	801d186 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d17e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d180:	2b00      	cmp	r3, #0
 801d182:	f340 8203 	ble.w	801d58c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d186:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d188:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d18c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d190:	1e48      	subs	r0, r1, #1
 801d192:	f102 3cff 	add.w	ip, r2, #4294967295
 801d196:	2d00      	cmp	r5, #0
 801d198:	f340 80da 	ble.w	801d350 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d19c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d1a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d1a4:	d406      	bmi.n	801d1b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d1a6:	4586      	cmp	lr, r0
 801d1a8:	da04      	bge.n	801d1b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d1aa:	2b00      	cmp	r3, #0
 801d1ac:	db02      	blt.n	801d1b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d1ae:	4563      	cmp	r3, ip
 801d1b0:	f2c0 80cf 	blt.w	801d352 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d1b4:	f11e 0e01 	adds.w	lr, lr, #1
 801d1b8:	f100 80c1 	bmi.w	801d33e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d1bc:	4571      	cmp	r1, lr
 801d1be:	f2c0 80be 	blt.w	801d33e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d1c2:	3301      	adds	r3, #1
 801d1c4:	f100 80bb 	bmi.w	801d33e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d1c8:	429a      	cmp	r2, r3
 801d1ca:	f2c0 80b8 	blt.w	801d33e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d1ce:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d1d2:	46a9      	mov	r9, r5
 801d1d4:	f1b9 0f00 	cmp.w	r9, #0
 801d1d8:	f340 80d8 	ble.w	801d38c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d1dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d1de:	1421      	asrs	r1, r4, #16
 801d1e0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d1e4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d1e8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d1ec:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d1f0:	f100 8111 	bmi.w	801d416 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d1f4:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d1f8:	4551      	cmp	r1, sl
 801d1fa:	f280 810c 	bge.w	801d416 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d1fe:	2800      	cmp	r0, #0
 801d200:	f2c0 8109 	blt.w	801d416 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d204:	f103 3aff 	add.w	sl, r3, #4294967295
 801d208:	4550      	cmp	r0, sl
 801d20a:	f280 8104 	bge.w	801d416 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d20e:	fa0f f38e 	sxth.w	r3, lr
 801d212:	fb00 1103 	mla	r1, r0, r3, r1
 801d216:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d218:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d21c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d220:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d224:	f1bc 0f00 	cmp.w	ip, #0
 801d228:	d007      	beq.n	801d23a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d22a:	005b      	lsls	r3, r3, #1
 801d22c:	eb0a 0003 	add.w	r0, sl, r3
 801d230:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d234:	930c      	str	r3, [sp, #48]	; 0x30
 801d236:	8843      	ldrh	r3, [r0, #2]
 801d238:	930d      	str	r3, [sp, #52]	; 0x34
 801d23a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d23e:	fb12 f30c 	smulbb	r3, r2, ip
 801d242:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d246:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d24a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d24e:	10db      	asrs	r3, r3, #3
 801d250:	ea40 000e 	orr.w	r0, r0, lr
 801d254:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d258:	f1cc 0e10 	rsb	lr, ip, #16
 801d25c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d260:	ebae 0e02 	sub.w	lr, lr, r2
 801d264:	ea4a 0101 	orr.w	r1, sl, r1
 801d268:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d26c:	4351      	muls	r1, r2
 801d26e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d270:	9f08      	ldr	r7, [sp, #32]
 801d272:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d276:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d27a:	0410      	lsls	r0, r2, #16
 801d27c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d280:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d284:	4310      	orrs	r0, r2
 801d286:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d288:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d28a:	0412      	lsls	r2, r2, #16
 801d28c:	fb03 e000 	mla	r0, r3, r0, lr
 801d290:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d294:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d298:	ea42 020e 	orr.w	r2, r2, lr
 801d29c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d2a0:	fb03 0302 	mla	r3, r3, r2, r0
 801d2a4:	0d5a      	lsrs	r2, r3, #21
 801d2a6:	095b      	lsrs	r3, r3, #5
 801d2a8:	f8b8 0000 	ldrh.w	r0, [r8]
 801d2ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d2b0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d2b4:	4313      	orrs	r3, r2
 801d2b6:	b29b      	uxth	r3, r3
 801d2b8:	1201      	asrs	r1, r0, #8
 801d2ba:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d2be:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d2c2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d2c6:	fb11 f107 	smulbb	r1, r1, r7
 801d2ca:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d2ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d2d2:	00c0      	lsls	r0, r0, #3
 801d2d4:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d2d8:	b2c0      	uxtb	r0, r0
 801d2da:	10d9      	asrs	r1, r3, #3
 801d2dc:	00db      	lsls	r3, r3, #3
 801d2de:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d2e2:	b2db      	uxtb	r3, r3
 801d2e4:	fb10 f007 	smulbb	r0, r0, r7
 801d2e8:	fa1f fc8c 	uxth.w	ip, ip
 801d2ec:	fb03 0302 	mla	r3, r3, r2, r0
 801d2f0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d2f4:	fb1e fe07 	smulbb	lr, lr, r7
 801d2f8:	fb01 e102 	mla	r1, r1, r2, lr
 801d2fc:	b29a      	uxth	r2, r3
 801d2fe:	f10c 0301 	add.w	r3, ip, #1
 801d302:	b289      	uxth	r1, r1
 801d304:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d308:	1c53      	adds	r3, r2, #1
 801d30a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d30e:	1c4a      	adds	r2, r1, #1
 801d310:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d314:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d318:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d31c:	0949      	lsrs	r1, r1, #5
 801d31e:	ea43 030c 	orr.w	r3, r3, ip
 801d322:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d326:	430b      	orrs	r3, r1
 801d328:	f8a8 3000 	strh.w	r3, [r8]
 801d32c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d32e:	441c      	add	r4, r3
 801d330:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d332:	f108 0802 	add.w	r8, r8, #2
 801d336:	441e      	add	r6, r3
 801d338:	f109 39ff 	add.w	r9, r9, #4294967295
 801d33c:	e74a      	b.n	801d1d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d33e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d340:	441c      	add	r4, r3
 801d342:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d344:	441e      	add	r6, r3
 801d346:	9b07      	ldr	r3, [sp, #28]
 801d348:	3302      	adds	r3, #2
 801d34a:	3d01      	subs	r5, #1
 801d34c:	9307      	str	r3, [sp, #28]
 801d34e:	e722      	b.n	801d196 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d350:	d022      	beq.n	801d398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d352:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d354:	1e6b      	subs	r3, r5, #1
 801d356:	fb00 4003 	mla	r0, r0, r3, r4
 801d35a:	1400      	asrs	r0, r0, #16
 801d35c:	f53f af37 	bmi.w	801d1ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d360:	3901      	subs	r1, #1
 801d362:	4288      	cmp	r0, r1
 801d364:	f6bf af33 	bge.w	801d1ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d368:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d36a:	fb01 6303 	mla	r3, r1, r3, r6
 801d36e:	141b      	asrs	r3, r3, #16
 801d370:	f53f af2d 	bmi.w	801d1ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d374:	3a01      	subs	r2, #1
 801d376:	4293      	cmp	r3, r2
 801d378:	f6bf af29 	bge.w	801d1ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d37c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d380:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d384:	46a8      	mov	r8, r5
 801d386:	f1b8 0f00 	cmp.w	r8, #0
 801d38a:	dc5e      	bgt.n	801d44a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d38c:	9b07      	ldr	r3, [sp, #28]
 801d38e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d392:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d396:	9307      	str	r3, [sp, #28]
 801d398:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d39a:	2b00      	cmp	r3, #0
 801d39c:	f340 80f6 	ble.w	801d58c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d3a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d3a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d3a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d3ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d3ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d3b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d3b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d3ba:	eef0 6a62 	vmov.f32	s13, s5
 801d3be:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d3c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d3c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d3ca:	ee16 4a90 	vmov	r4, s13
 801d3ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d3d2:	eef0 6a43 	vmov.f32	s13, s6
 801d3d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d3da:	ee12 2a90 	vmov	r2, s5
 801d3de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d3e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3e6:	ee13 2a10 	vmov	r2, s6
 801d3ea:	931f      	str	r3, [sp, #124]	; 0x7c
 801d3ec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d3ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3f2:	9320      	str	r3, [sp, #128]	; 0x80
 801d3f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d3f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d3f8:	3b01      	subs	r3, #1
 801d3fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d3fe:	930a      	str	r3, [sp, #40]	; 0x28
 801d400:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d402:	ee16 6a90 	vmov	r6, s13
 801d406:	bf14      	ite	ne
 801d408:	461d      	movne	r5, r3
 801d40a:	4615      	moveq	r5, r2
 801d40c:	eeb0 3a67 	vmov.f32	s6, s15
 801d410:	eef0 2a47 	vmov.f32	s5, s14
 801d414:	e6b0      	b.n	801d178 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d416:	f111 0a01 	adds.w	sl, r1, #1
 801d41a:	d487      	bmi.n	801d32c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d41c:	45d6      	cmp	lr, sl
 801d41e:	db85      	blt.n	801d32c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d420:	f110 0a01 	adds.w	sl, r0, #1
 801d424:	d482      	bmi.n	801d32c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d426:	4553      	cmp	r3, sl
 801d428:	db80      	blt.n	801d32c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d42a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d42c:	9101      	str	r1, [sp, #4]
 801d42e:	b21b      	sxth	r3, r3
 801d430:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d434:	9300      	str	r3, [sp, #0]
 801d436:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d43a:	fa0f f38e 	sxth.w	r3, lr
 801d43e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d440:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d442:	4641      	mov	r1, r8
 801d444:	f7ff fdb4 	bl	801cfb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d448:	e770      	b.n	801d32c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d44a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d44c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d44e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d452:	1430      	asrs	r0, r6, #16
 801d454:	1423      	asrs	r3, r4, #16
 801d456:	fb01 3000 	mla	r0, r1, r0, r3
 801d45a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d45c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d460:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d464:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d468:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d46c:	8858      	ldrh	r0, [r3, #2]
 801d46e:	f1be 0f00 	cmp.w	lr, #0
 801d472:	d00b      	beq.n	801d48c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d474:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d478:	3901      	subs	r1, #1
 801d47a:	0049      	lsls	r1, r1, #1
 801d47c:	3102      	adds	r1, #2
 801d47e:	eb03 0b01 	add.w	fp, r3, r1
 801d482:	5a5b      	ldrh	r3, [r3, r1]
 801d484:	930e      	str	r3, [sp, #56]	; 0x38
 801d486:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d48a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d48c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d490:	fb12 f30e 	smulbb	r3, r2, lr
 801d494:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d498:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d49c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d4a0:	10db      	asrs	r3, r3, #3
 801d4a2:	ea41 010c 	orr.w	r1, r1, ip
 801d4a6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d4aa:	f1ce 0c10 	rsb	ip, lr, #16
 801d4ae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d4b2:	ebac 0c02 	sub.w	ip, ip, r2
 801d4b6:	ea4b 0000 	orr.w	r0, fp, r0
 801d4ba:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d4be:	4350      	muls	r0, r2
 801d4c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d4c2:	9f08      	ldr	r7, [sp, #32]
 801d4c4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d4c8:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d4cc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d4d0:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d4d4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d4d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d4d8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d4dc:	0412      	lsls	r2, r2, #16
 801d4de:	ea4b 0101 	orr.w	r1, fp, r1
 801d4e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d4e6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d4ea:	fb03 c101 	mla	r1, r3, r1, ip
 801d4ee:	4302      	orrs	r2, r0
 801d4f0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d4f4:	fb03 1202 	mla	r2, r3, r2, r1
 801d4f8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d4fc:	0952      	lsrs	r2, r2, #5
 801d4fe:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d502:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d506:	f8b9 2000 	ldrh.w	r2, [r9]
 801d50a:	ea4b 0303 	orr.w	r3, fp, r3
 801d50e:	b29b      	uxth	r3, r3
 801d510:	1211      	asrs	r1, r2, #8
 801d512:	1218      	asrs	r0, r3, #8
 801d514:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d518:	fb11 f107 	smulbb	r1, r1, r7
 801d51c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d520:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d524:	00d2      	lsls	r2, r2, #3
 801d526:	fb00 100a 	mla	r0, r0, sl, r1
 801d52a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d52e:	10d9      	asrs	r1, r3, #3
 801d530:	b2d2      	uxtb	r2, r2
 801d532:	00db      	lsls	r3, r3, #3
 801d534:	fb1c fc07 	smulbb	ip, ip, r7
 801d538:	fb12 f207 	smulbb	r2, r2, r7
 801d53c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d540:	b2db      	uxtb	r3, r3
 801d542:	b280      	uxth	r0, r0
 801d544:	fb01 c10a 	mla	r1, r1, sl, ip
 801d548:	fb03 230a 	mla	r3, r3, sl, r2
 801d54c:	b29b      	uxth	r3, r3
 801d54e:	b289      	uxth	r1, r1
 801d550:	1c42      	adds	r2, r0, #1
 801d552:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d556:	f101 0c01 	add.w	ip, r1, #1
 801d55a:	1c5a      	adds	r2, r3, #1
 801d55c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d560:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d564:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d566:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d56a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d56e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d572:	4310      	orrs	r0, r2
 801d574:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d578:	441c      	add	r4, r3
 801d57a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d57c:	ea40 000c 	orr.w	r0, r0, ip
 801d580:	f829 0b02 	strh.w	r0, [r9], #2
 801d584:	441e      	add	r6, r3
 801d586:	f108 38ff 	add.w	r8, r8, #4294967295
 801d58a:	e6fc      	b.n	801d386 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d58c:	b013      	add	sp, #76	; 0x4c
 801d58e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d592 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d592:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d596:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d59a:	fb0e 4703 	mla	r7, lr, r3, r4
 801d59e:	f1be 0f00 	cmp.w	lr, #0
 801d5a2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d5a6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d5aa:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d5ae:	8808      	ldrh	r0, [r1, #0]
 801d5b0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d5b4:	db60      	blt.n	801d678 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d5b6:	45f1      	cmp	r9, lr
 801d5b8:	dd5e      	ble.n	801d678 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d5ba:	2c00      	cmp	r4, #0
 801d5bc:	db5a      	blt.n	801d674 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d5be:	42a3      	cmp	r3, r4
 801d5c0:	dd58      	ble.n	801d674 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d5c2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d5c6:	1c62      	adds	r2, r4, #1
 801d5c8:	d459      	bmi.n	801d67e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d5ca:	4293      	cmp	r3, r2
 801d5cc:	dd57      	ble.n	801d67e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d5ce:	2d00      	cmp	r5, #0
 801d5d0:	d055      	beq.n	801d67e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d5d2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d5d6:	f11e 0e01 	adds.w	lr, lr, #1
 801d5da:	d454      	bmi.n	801d686 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d5dc:	45f1      	cmp	r9, lr
 801d5de:	dd52      	ble.n	801d686 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d5e0:	2e00      	cmp	r6, #0
 801d5e2:	d050      	beq.n	801d686 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d5e4:	2c00      	cmp	r4, #0
 801d5e6:	db4c      	blt.n	801d682 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d5e8:	42a3      	cmp	r3, r4
 801d5ea:	dd4a      	ble.n	801d682 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d5ec:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d5f0:	3401      	adds	r4, #1
 801d5f2:	d405      	bmi.n	801d600 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d5f4:	42a3      	cmp	r3, r4
 801d5f6:	dd03      	ble.n	801d600 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d5f8:	b115      	cbz	r5, 801d600 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d5fa:	3301      	adds	r3, #1
 801d5fc:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d600:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d604:	fb15 f406 	smulbb	r4, r5, r6
 801d608:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d60c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d610:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d614:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d618:	ea43 0c0c 	orr.w	ip, r3, ip
 801d61c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d620:	f1c6 0310 	rsb	r3, r6, #16
 801d624:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d628:	1b5b      	subs	r3, r3, r5
 801d62a:	ea4e 0707 	orr.w	r7, lr, r7
 801d62e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d632:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d636:	437d      	muls	r5, r7
 801d638:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d63c:	0403      	lsls	r3, r0, #16
 801d63e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d642:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d646:	4318      	orrs	r0, r3
 801d648:	0413      	lsls	r3, r2, #16
 801d64a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d64e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d652:	4313      	orrs	r3, r2
 801d654:	fb04 c000 	mla	r0, r4, r0, ip
 801d658:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d65c:	fb06 0003 	mla	r0, r6, r3, r0
 801d660:	0d43      	lsrs	r3, r0, #21
 801d662:	0940      	lsrs	r0, r0, #5
 801d664:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d668:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d66c:	4318      	orrs	r0, r3
 801d66e:	8008      	strh	r0, [r1, #0]
 801d670:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d674:	4684      	mov	ip, r0
 801d676:	e7a6      	b.n	801d5c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d678:	4607      	mov	r7, r0
 801d67a:	4684      	mov	ip, r0
 801d67c:	e7ab      	b.n	801d5d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d67e:	4607      	mov	r7, r0
 801d680:	e7a9      	b.n	801d5d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d682:	4602      	mov	r2, r0
 801d684:	e7b4      	b.n	801d5f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d686:	4602      	mov	r2, r0
 801d688:	e7ba      	b.n	801d600 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d68a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d68a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d68e:	b08f      	sub	sp, #60	; 0x3c
 801d690:	461d      	mov	r5, r3
 801d692:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d694:	920c      	str	r2, [sp, #48]	; 0x30
 801d696:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801d69a:	9107      	str	r1, [sp, #28]
 801d69c:	6859      	ldr	r1, [r3, #4]
 801d69e:	681b      	ldr	r3, [r3, #0]
 801d6a0:	900d      	str	r0, [sp, #52]	; 0x34
 801d6a2:	fb01 2707 	mla	r7, r1, r7, r2
 801d6a6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d6aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d6ac:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801d6b0:	f8d3 8000 	ldr.w	r8, [r3]
 801d6b4:	9b07      	ldr	r3, [sp, #28]
 801d6b6:	2b00      	cmp	r3, #0
 801d6b8:	dc03      	bgt.n	801d6c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d6ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d6bc:	2b00      	cmp	r3, #0
 801d6be:	f340 8181 	ble.w	801d9c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d6c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d6c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d6c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d6cc:	1e48      	subs	r0, r1, #1
 801d6ce:	f102 3cff 	add.w	ip, r2, #4294967295
 801d6d2:	2d00      	cmp	r5, #0
 801d6d4:	f340 809b 	ble.w	801d80e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801d6d8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d6dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d6e0:	d406      	bmi.n	801d6f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d6e2:	4586      	cmp	lr, r0
 801d6e4:	da04      	bge.n	801d6f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d6e6:	2b00      	cmp	r3, #0
 801d6e8:	db02      	blt.n	801d6f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d6ea:	4563      	cmp	r3, ip
 801d6ec:	f2c0 8090 	blt.w	801d810 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d6f0:	f11e 0e01 	adds.w	lr, lr, #1
 801d6f4:	f100 8084 	bmi.w	801d800 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d6f8:	4571      	cmp	r1, lr
 801d6fa:	f2c0 8081 	blt.w	801d800 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d6fe:	3301      	adds	r3, #1
 801d700:	d47e      	bmi.n	801d800 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d702:	429a      	cmp	r2, r3
 801d704:	db7c      	blt.n	801d800 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d706:	46aa      	mov	sl, r5
 801d708:	46b9      	mov	r9, r7
 801d70a:	f1ba 0f00 	cmp.w	sl, #0
 801d70e:	f340 8099 	ble.w	801d844 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801d712:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d714:	1421      	asrs	r1, r4, #16
 801d716:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d71a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d71e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d722:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d726:	f100 80d0 	bmi.w	801d8ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d72a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d72e:	4559      	cmp	r1, fp
 801d730:	f280 80cb 	bge.w	801d8ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d734:	2800      	cmp	r0, #0
 801d736:	f2c0 80c8 	blt.w	801d8ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d73a:	f103 3bff 	add.w	fp, r3, #4294967295
 801d73e:	4558      	cmp	r0, fp
 801d740:	f280 80c3 	bge.w	801d8ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d744:	fa0f fe8e 	sxth.w	lr, lr
 801d748:	fb00 110e 	mla	r1, r0, lr, r1
 801d74c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d750:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801d754:	8841      	ldrh	r1, [r0, #2]
 801d756:	f1bc 0f00 	cmp.w	ip, #0
 801d75a:	d00b      	beq.n	801d774 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801d75c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801d760:	3b01      	subs	r3, #1
 801d762:	005b      	lsls	r3, r3, #1
 801d764:	3302      	adds	r3, #2
 801d766:	eb00 0e03 	add.w	lr, r0, r3
 801d76a:	5ac3      	ldrh	r3, [r0, r3]
 801d76c:	9308      	str	r3, [sp, #32]
 801d76e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801d772:	9309      	str	r3, [sp, #36]	; 0x24
 801d774:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801d778:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d77c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d780:	ea40 000b 	orr.w	r0, r0, fp
 801d784:	fb12 f30c 	smulbb	r3, r2, ip
 801d788:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d78c:	10db      	asrs	r3, r3, #3
 801d78e:	f1cc 0e10 	rsb	lr, ip, #16
 801d792:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d796:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d79a:	ebae 0e02 	sub.w	lr, lr, r2
 801d79e:	ea4b 0101 	orr.w	r1, fp, r1
 801d7a2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d7a6:	4351      	muls	r1, r2
 801d7a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d7aa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d7ae:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d7b2:	0410      	lsls	r0, r2, #16
 801d7b4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d7b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d7bc:	4310      	orrs	r0, r2
 801d7be:	9a08      	ldr	r2, [sp, #32]
 801d7c0:	9908      	ldr	r1, [sp, #32]
 801d7c2:	0412      	lsls	r2, r2, #16
 801d7c4:	fb03 e000 	mla	r0, r3, r0, lr
 801d7c8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d7cc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d7d0:	ea42 020e 	orr.w	r2, r2, lr
 801d7d4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d7d8:	fb03 0302 	mla	r3, r3, r2, r0
 801d7dc:	0d5a      	lsrs	r2, r3, #21
 801d7de:	095b      	lsrs	r3, r3, #5
 801d7e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d7e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d7e8:	4313      	orrs	r3, r2
 801d7ea:	f8a9 3000 	strh.w	r3, [r9]
 801d7ee:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d7f0:	441c      	add	r4, r3
 801d7f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d7f4:	f109 0902 	add.w	r9, r9, #2
 801d7f8:	441e      	add	r6, r3
 801d7fa:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d7fe:	e784      	b.n	801d70a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d800:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d802:	441c      	add	r4, r3
 801d804:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d806:	3d01      	subs	r5, #1
 801d808:	441e      	add	r6, r3
 801d80a:	3702      	adds	r7, #2
 801d80c:	e761      	b.n	801d6d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d80e:	d01d      	beq.n	801d84c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d810:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d812:	1e6b      	subs	r3, r5, #1
 801d814:	fb00 4003 	mla	r0, r0, r3, r4
 801d818:	1400      	asrs	r0, r0, #16
 801d81a:	f53f af74 	bmi.w	801d706 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d81e:	3901      	subs	r1, #1
 801d820:	4288      	cmp	r0, r1
 801d822:	f6bf af70 	bge.w	801d706 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d826:	991c      	ldr	r1, [sp, #112]	; 0x70
 801d828:	fb01 6303 	mla	r3, r1, r3, r6
 801d82c:	141b      	asrs	r3, r3, #16
 801d82e:	f53f af6a 	bmi.w	801d706 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d832:	3a01      	subs	r2, #1
 801d834:	4293      	cmp	r3, r2
 801d836:	f6bf af66 	bge.w	801d706 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d83a:	46a9      	mov	r9, r5
 801d83c:	46ba      	mov	sl, r7
 801d83e:	f1b9 0f00 	cmp.w	r9, #0
 801d842:	dc5a      	bgt.n	801d8fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801d844:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d848:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801d84c:	9b07      	ldr	r3, [sp, #28]
 801d84e:	2b00      	cmp	r3, #0
 801d850:	f340 80b8 	ble.w	801d9c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d854:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d858:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d85c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d860:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d862:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d866:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d86a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d86e:	eef0 6a62 	vmov.f32	s13, s5
 801d872:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d876:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d87a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d87e:	ee16 4a90 	vmov	r4, s13
 801d882:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d886:	eef0 6a43 	vmov.f32	s13, s6
 801d88a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d88e:	ee12 2a90 	vmov	r2, s5
 801d892:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d896:	fb92 f3f3 	sdiv	r3, r2, r3
 801d89a:	ee13 2a10 	vmov	r2, s6
 801d89e:	931b      	str	r3, [sp, #108]	; 0x6c
 801d8a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d8a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d8a6:	931c      	str	r3, [sp, #112]	; 0x70
 801d8a8:	9b07      	ldr	r3, [sp, #28]
 801d8aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d8ac:	3b01      	subs	r3, #1
 801d8ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d8b2:	9307      	str	r3, [sp, #28]
 801d8b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d8b6:	ee16 6a90 	vmov	r6, s13
 801d8ba:	bf14      	ite	ne
 801d8bc:	461d      	movne	r5, r3
 801d8be:	4615      	moveq	r5, r2
 801d8c0:	eeb0 3a67 	vmov.f32	s6, s15
 801d8c4:	eef0 2a47 	vmov.f32	s5, s14
 801d8c8:	e6f4      	b.n	801d6b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801d8ca:	f111 0b01 	adds.w	fp, r1, #1
 801d8ce:	d48e      	bmi.n	801d7ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d8d0:	45de      	cmp	lr, fp
 801d8d2:	db8c      	blt.n	801d7ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d8d4:	f110 0b01 	adds.w	fp, r0, #1
 801d8d8:	d489      	bmi.n	801d7ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d8da:	455b      	cmp	r3, fp
 801d8dc:	db87      	blt.n	801d7ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d8de:	b21b      	sxth	r3, r3
 801d8e0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801d8e4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801d8e8:	9300      	str	r3, [sp, #0]
 801d8ea:	4642      	mov	r2, r8
 801d8ec:	fa0f f38e 	sxth.w	r3, lr
 801d8f0:	4649      	mov	r1, r9
 801d8f2:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d8f4:	f7ff fe4d 	bl	801d592 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801d8f8:	e779      	b.n	801d7ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d8fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d8fc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d900:	1420      	asrs	r0, r4, #16
 801d902:	1431      	asrs	r1, r6, #16
 801d904:	fb03 0101 	mla	r1, r3, r1, r0
 801d908:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d90c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d910:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801d914:	8841      	ldrh	r1, [r0, #2]
 801d916:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d91a:	f1be 0f00 	cmp.w	lr, #0
 801d91e:	d00b      	beq.n	801d938 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801d920:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801d924:	3b01      	subs	r3, #1
 801d926:	005b      	lsls	r3, r3, #1
 801d928:	3302      	adds	r3, #2
 801d92a:	eb00 0b03 	add.w	fp, r0, r3
 801d92e:	5ac3      	ldrh	r3, [r0, r3]
 801d930:	930a      	str	r3, [sp, #40]	; 0x28
 801d932:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d936:	930b      	str	r3, [sp, #44]	; 0x2c
 801d938:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801d93c:	fb12 f30e 	smulbb	r3, r2, lr
 801d940:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d944:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d948:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d94c:	10db      	asrs	r3, r3, #3
 801d94e:	ea40 000c 	orr.w	r0, r0, ip
 801d952:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d956:	f1ce 0c10 	rsb	ip, lr, #16
 801d95a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d95e:	ebac 0c02 	sub.w	ip, ip, r2
 801d962:	ea4b 0101 	orr.w	r1, fp, r1
 801d966:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d96a:	4351      	muls	r1, r2
 801d96c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d96e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d972:	fb0c 1c00 	mla	ip, ip, r0, r1
 801d976:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d97a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801d97e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d980:	990a      	ldr	r1, [sp, #40]	; 0x28
 801d982:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d986:	0412      	lsls	r2, r2, #16
 801d988:	ea4b 0000 	orr.w	r0, fp, r0
 801d98c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d990:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801d994:	fb03 c000 	mla	r0, r3, r0, ip
 801d998:	ea42 0b0b 	orr.w	fp, r2, fp
 801d99c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d9a0:	fb03 000b 	mla	r0, r3, fp, r0
 801d9a4:	0d43      	lsrs	r3, r0, #21
 801d9a6:	0940      	lsrs	r0, r0, #5
 801d9a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d9ac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d9b0:	4318      	orrs	r0, r3
 801d9b2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d9b4:	f82a 0b02 	strh.w	r0, [sl], #2
 801d9b8:	441c      	add	r4, r3
 801d9ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d9bc:	f109 39ff 	add.w	r9, r9, #4294967295
 801d9c0:	441e      	add	r6, r3
 801d9c2:	e73c      	b.n	801d83e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801d9c4:	b00f      	add	sp, #60	; 0x3c
 801d9c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d9ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801d9ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9ce:	b085      	sub	sp, #20
 801d9d0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801d9d4:	9102      	str	r1, [sp, #8]
 801d9d6:	2c00      	cmp	r4, #0
 801d9d8:	fb04 7103 	mla	r1, r4, r3, r7
 801d9dc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801d9e0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801d9e4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801d9e8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801d9ec:	f2c0 811b 	blt.w	801dc26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d9f0:	45a6      	cmp	lr, r4
 801d9f2:	f340 8118 	ble.w	801dc26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d9f6:	2f00      	cmp	r7, #0
 801d9f8:	f2c0 8113 	blt.w	801dc22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801d9fc:	42bb      	cmp	r3, r7
 801d9fe:	f340 8110 	ble.w	801dc22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801da02:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801da06:	1c7a      	adds	r2, r7, #1
 801da08:	f100 8110 	bmi.w	801dc2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801da0c:	4293      	cmp	r3, r2
 801da0e:	f340 810d 	ble.w	801dc2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801da12:	2e00      	cmp	r6, #0
 801da14:	f000 810c 	beq.w	801dc30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801da18:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801da1c:	3401      	adds	r4, #1
 801da1e:	f100 810b 	bmi.w	801dc38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801da22:	45a6      	cmp	lr, r4
 801da24:	f340 8108 	ble.w	801dc38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801da28:	2800      	cmp	r0, #0
 801da2a:	f000 8108 	beq.w	801dc3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801da2e:	2f00      	cmp	r7, #0
 801da30:	f2c0 8100 	blt.w	801dc34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801da34:	42bb      	cmp	r3, r7
 801da36:	f340 80fd 	ble.w	801dc34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801da3a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801da3e:	3701      	adds	r7, #1
 801da40:	f100 8100 	bmi.w	801dc44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801da44:	42bb      	cmp	r3, r7
 801da46:	f340 80fd 	ble.w	801dc44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801da4a:	2e00      	cmp	r6, #0
 801da4c:	f000 80fc 	beq.w	801dc48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801da50:	3301      	adds	r3, #1
 801da52:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801da56:	b2b6      	uxth	r6, r6
 801da58:	b280      	uxth	r0, r0
 801da5a:	fb00 fe06 	mul.w	lr, r0, r6
 801da5e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801da62:	0136      	lsls	r6, r6, #4
 801da64:	eba6 070e 	sub.w	r7, r6, lr
 801da68:	b280      	uxth	r0, r0
 801da6a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801da6e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801da72:	b2bf      	uxth	r7, r7
 801da74:	1a1b      	subs	r3, r3, r0
 801da76:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801da7a:	b29b      	uxth	r3, r3
 801da7c:	fb0a f607 	mul.w	r6, sl, r7
 801da80:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801da84:	fb0b 6603 	mla	r6, fp, r3, r6
 801da88:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801da8c:	fb00 6609 	mla	r6, r0, r9, r6
 801da90:	fb0e 6608 	mla	r6, lr, r8, r6
 801da94:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801da98:	9600      	str	r6, [sp, #0]
 801da9a:	2e00      	cmp	r6, #0
 801da9c:	f000 80be 	beq.w	801dc1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801daa0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801daa4:	fb0b fc0c 	mul.w	ip, fp, ip
 801daa8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801daac:	fb0b f505 	mul.w	r5, fp, r5
 801dab0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dab4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801dab8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dabc:	44dc      	add	ip, fp
 801dabe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dac2:	9501      	str	r5, [sp, #4]
 801dac4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801dac8:	9503      	str	r5, [sp, #12]
 801daca:	9d01      	ldr	r5, [sp, #4]
 801dacc:	9e02      	ldr	r6, [sp, #8]
 801dace:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801dad2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dad6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801dada:	fb0a fc0c 	mul.w	ip, sl, ip
 801dade:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dae2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801dae6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801daea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801daee:	4465      	add	r5, ip
 801daf0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801daf4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801daf8:	fb09 fc0c 	mul.w	ip, r9, ip
 801dafc:	fb09 f904 	mul.w	r9, r9, r4
 801db00:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801db04:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801db08:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801db0c:	fb08 f404 	mul.w	r4, r8, r4
 801db10:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801db14:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801db18:	fb08 f802 	mul.w	r8, r8, r2
 801db1c:	fb0a fa01 	mul.w	sl, sl, r1
 801db20:	0a22      	lsrs	r2, r4, #8
 801db22:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801db26:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801db2a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801db2e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801db32:	4414      	add	r4, r2
 801db34:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801db38:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801db3c:	0a2d      	lsrs	r5, r5, #8
 801db3e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801db42:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801db46:	9a03      	ldr	r2, [sp, #12]
 801db48:	8836      	ldrh	r6, [r6, #0]
 801db4a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801db4e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801db52:	437d      	muls	r5, r7
 801db54:	4461      	add	r1, ip
 801db56:	0a24      	lsrs	r4, r4, #8
 801db58:	fb02 5503 	mla	r5, r2, r3, r5
 801db5c:	0a09      	lsrs	r1, r1, #8
 801db5e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801db62:	fb04 540e 	mla	r4, r4, lr, r5
 801db66:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801db6a:	fb01 4100 	mla	r1, r1, r0, r4
 801db6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801db72:	0a09      	lsrs	r1, r1, #8
 801db74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801db78:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801db7c:	fb07 f70a 	mul.w	r7, r7, sl
 801db80:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801db84:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801db88:	fb03 7101 	mla	r1, r3, r1, r7
 801db8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801db90:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801db94:	fb0e 1e08 	mla	lr, lr, r8, r1
 801db98:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801db9c:	fb00 e101 	mla	r1, r0, r1, lr
 801dba0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801dba4:	9a00      	ldr	r2, [sp, #0]
 801dba6:	b287      	uxth	r7, r0
 801dba8:	437a      	muls	r2, r7
 801dbaa:	0a09      	lsrs	r1, r1, #8
 801dbac:	1c53      	adds	r3, r2, #1
 801dbae:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dbb2:	4321      	orrs	r1, r4
 801dbb4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dbb8:	1235      	asrs	r5, r6, #8
 801dbba:	0c0a      	lsrs	r2, r1, #16
 801dbbc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801dbc0:	b2db      	uxtb	r3, r3
 801dbc2:	fb12 f207 	smulbb	r2, r2, r7
 801dbc6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801dbca:	fb05 2503 	mla	r5, r5, r3, r2
 801dbce:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801dbd2:	10f2      	asrs	r2, r6, #3
 801dbd4:	b2c8      	uxtb	r0, r1
 801dbd6:	00f6      	lsls	r6, r6, #3
 801dbd8:	fb14 f407 	smulbb	r4, r4, r7
 801dbdc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801dbe0:	b2f6      	uxtb	r6, r6
 801dbe2:	fb10 f007 	smulbb	r0, r0, r7
 801dbe6:	fb02 4203 	mla	r2, r2, r3, r4
 801dbea:	b2ad      	uxth	r5, r5
 801dbec:	fb06 0303 	mla	r3, r6, r3, r0
 801dbf0:	b299      	uxth	r1, r3
 801dbf2:	b294      	uxth	r4, r2
 801dbf4:	1c6b      	adds	r3, r5, #1
 801dbf6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dbfa:	1c62      	adds	r2, r4, #1
 801dbfc:	1c4b      	adds	r3, r1, #1
 801dbfe:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dc02:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801dc06:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801dc0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dc0e:	0952      	lsrs	r2, r2, #5
 801dc10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dc14:	432b      	orrs	r3, r5
 801dc16:	4313      	orrs	r3, r2
 801dc18:	9a02      	ldr	r2, [sp, #8]
 801dc1a:	8013      	strh	r3, [r2, #0]
 801dc1c:	b005      	add	sp, #20
 801dc1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc22:	2500      	movs	r5, #0
 801dc24:	e6ef      	b.n	801da06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801dc26:	2100      	movs	r1, #0
 801dc28:	460d      	mov	r5, r1
 801dc2a:	e6f7      	b.n	801da1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dc2c:	2100      	movs	r1, #0
 801dc2e:	e6f5      	b.n	801da1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dc30:	4631      	mov	r1, r6
 801dc32:	e6f3      	b.n	801da1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dc34:	2400      	movs	r4, #0
 801dc36:	e702      	b.n	801da3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801dc38:	2200      	movs	r2, #0
 801dc3a:	4614      	mov	r4, r2
 801dc3c:	e70b      	b.n	801da56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dc3e:	4602      	mov	r2, r0
 801dc40:	4604      	mov	r4, r0
 801dc42:	e708      	b.n	801da56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dc44:	2200      	movs	r2, #0
 801dc46:	e706      	b.n	801da56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dc48:	4632      	mov	r2, r6
 801dc4a:	e704      	b.n	801da56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801dc4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc50:	b09d      	sub	sp, #116	; 0x74
 801dc52:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801dc56:	9219      	str	r2, [sp, #100]	; 0x64
 801dc58:	9307      	str	r3, [sp, #28]
 801dc5a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801dc5c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801dc60:	931a      	str	r3, [sp, #104]	; 0x68
 801dc62:	9117      	str	r1, [sp, #92]	; 0x5c
 801dc64:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801dc68:	901b      	str	r0, [sp, #108]	; 0x6c
 801dc6a:	6850      	ldr	r0, [r2, #4]
 801dc6c:	6812      	ldr	r2, [r2, #0]
 801dc6e:	fb00 1303 	mla	r3, r0, r3, r1
 801dc72:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dc76:	930a      	str	r3, [sp, #40]	; 0x28
 801dc78:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dc7a:	681b      	ldr	r3, [r3, #0]
 801dc7c:	9310      	str	r3, [sp, #64]	; 0x40
 801dc7e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801dc82:	930b      	str	r3, [sp, #44]	; 0x2c
 801dc84:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dc86:	2b00      	cmp	r3, #0
 801dc88:	dc03      	bgt.n	801dc92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801dc8a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801dc8c:	2b00      	cmp	r3, #0
 801dc8e:	f340 8375 	ble.w	801e37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801dc92:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dc94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc98:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dc9c:	1e48      	subs	r0, r1, #1
 801dc9e:	1e57      	subs	r7, r2, #1
 801dca0:	9b07      	ldr	r3, [sp, #28]
 801dca2:	2b00      	cmp	r3, #0
 801dca4:	f340 818e 	ble.w	801dfc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801dca8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801dcac:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dcb0:	d406      	bmi.n	801dcc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dcb2:	4584      	cmp	ip, r0
 801dcb4:	da04      	bge.n	801dcc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dcb6:	2b00      	cmp	r3, #0
 801dcb8:	db02      	blt.n	801dcc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dcba:	42bb      	cmp	r3, r7
 801dcbc:	f2c0 8183 	blt.w	801dfc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801dcc0:	f11c 0c01 	adds.w	ip, ip, #1
 801dcc4:	f100 8173 	bmi.w	801dfae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dcc8:	4561      	cmp	r1, ip
 801dcca:	f2c0 8170 	blt.w	801dfae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dcce:	3301      	adds	r3, #1
 801dcd0:	f100 816d 	bmi.w	801dfae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dcd4:	429a      	cmp	r2, r3
 801dcd6:	f2c0 816a 	blt.w	801dfae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dcda:	9b07      	ldr	r3, [sp, #28]
 801dcdc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801dcde:	9318      	str	r3, [sp, #96]	; 0x60
 801dce0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dce2:	2b00      	cmp	r3, #0
 801dce4:	f340 818c 	ble.w	801e000 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801dce8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801dcea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dcec:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801dcf0:	689b      	ldr	r3, [r3, #8]
 801dcf2:	1422      	asrs	r2, r4, #16
 801dcf4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dcf8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801dcfc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801dd00:	f100 81cd 	bmi.w	801e09e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dd04:	f103 38ff 	add.w	r8, r3, #4294967295
 801dd08:	4542      	cmp	r2, r8
 801dd0a:	f280 81c8 	bge.w	801e09e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dd0e:	f1bc 0f00 	cmp.w	ip, #0
 801dd12:	f2c0 81c4 	blt.w	801e09e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dd16:	f10e 38ff 	add.w	r8, lr, #4294967295
 801dd1a:	45c4      	cmp	ip, r8
 801dd1c:	f280 81bf 	bge.w	801e09e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dd20:	b21b      	sxth	r3, r3
 801dd22:	fb0c 2203 	mla	r2, ip, r3, r2
 801dd26:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801dd28:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801dd2c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801dd30:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801dd34:	2800      	cmp	r0, #0
 801dd36:	f000 81a9 	beq.w	801e08c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801dd3a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801dd3e:	950c      	str	r5, [sp, #48]	; 0x30
 801dd40:	0e2d      	lsrs	r5, r5, #24
 801dd42:	9513      	str	r5, [sp, #76]	; 0x4c
 801dd44:	b181      	cbz	r1, 801dd68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801dd46:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801dd4a:	3b01      	subs	r3, #1
 801dd4c:	009b      	lsls	r3, r3, #2
 801dd4e:	3304      	adds	r3, #4
 801dd50:	eb08 0c03 	add.w	ip, r8, r3
 801dd54:	f858 3003 	ldr.w	r3, [r8, r3]
 801dd58:	9308      	str	r3, [sp, #32]
 801dd5a:	0e1b      	lsrs	r3, r3, #24
 801dd5c:	9311      	str	r3, [sp, #68]	; 0x44
 801dd5e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801dd62:	930d      	str	r3, [sp, #52]	; 0x34
 801dd64:	0e1b      	lsrs	r3, r3, #24
 801dd66:	9314      	str	r3, [sp, #80]	; 0x50
 801dd68:	b280      	uxth	r0, r0
 801dd6a:	b289      	uxth	r1, r1
 801dd6c:	fb00 f901 	mul.w	r9, r0, r1
 801dd70:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801dd74:	0100      	lsls	r0, r0, #4
 801dd76:	eba0 0809 	sub.w	r8, r0, r9
 801dd7a:	b289      	uxth	r1, r1
 801dd7c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801dd80:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dd82:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd84:	fa1f f888 	uxth.w	r8, r8
 801dd88:	1a5b      	subs	r3, r3, r1
 801dd8a:	b29b      	uxth	r3, r3
 801dd8c:	fb08 f000 	mul.w	r0, r8, r0
 801dd90:	fb03 000e 	mla	r0, r3, lr, r0
 801dd94:	fb01 0005 	mla	r0, r1, r5, r0
 801dd98:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dd9a:	fb09 0005 	mla	r0, r9, r5, r0
 801dd9e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801dda2:	2800      	cmp	r0, #0
 801dda4:	f000 80fa 	beq.w	801df9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801dda8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ddac:	d01b      	beq.n	801dde6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801ddae:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801ddb2:	fb0e fa0a 	mul.w	sl, lr, sl
 801ddb6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ddba:	fb0e fe02 	mul.w	lr, lr, r2
 801ddbe:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ddc2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ddc6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ddca:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ddce:	4452      	add	r2, sl
 801ddd0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ddd4:	0a12      	lsrs	r2, r2, #8
 801ddd6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ddda:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ddde:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801dde2:	ea42 020c 	orr.w	r2, r2, ip
 801dde6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801dde8:	2dff      	cmp	r5, #255	; 0xff
 801ddea:	d021      	beq.n	801de30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ddec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ddee:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ddf2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ddf4:	fb05 fb0b 	mul.w	fp, r5, fp
 801ddf8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ddfa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ddfe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801de00:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801de04:	fb05 fa0a 	mul.w	sl, r5, sl
 801de08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801de0c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801de10:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801de14:	44de      	add	lr, fp
 801de16:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801de1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801de1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801de26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801de2a:	ea4e 050a 	orr.w	r5, lr, sl
 801de2e:	950c      	str	r5, [sp, #48]	; 0x30
 801de30:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801de32:	2dff      	cmp	r5, #255	; 0xff
 801de34:	d021      	beq.n	801de7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801de36:	9d08      	ldr	r5, [sp, #32]
 801de38:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801de3c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801de3e:	fb05 fb0b 	mul.w	fp, r5, fp
 801de42:	9d08      	ldr	r5, [sp, #32]
 801de44:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801de48:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801de4a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801de4e:	fb05 fa0a 	mul.w	sl, r5, sl
 801de52:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801de56:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801de5a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801de5e:	44de      	add	lr, fp
 801de60:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801de64:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801de68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801de70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801de74:	ea4e 050a 	orr.w	r5, lr, sl
 801de78:	9508      	str	r5, [sp, #32]
 801de7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801de7c:	2dff      	cmp	r5, #255	; 0xff
 801de7e:	d021      	beq.n	801dec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801de80:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801de82:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801de86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801de88:	fb05 fb0b 	mul.w	fp, r5, fp
 801de8c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801de8e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801de92:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801de94:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801de98:	fb05 fa0a 	mul.w	sl, r5, sl
 801de9c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dea0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dea4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dea8:	44de      	add	lr, fp
 801deaa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801deae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801deb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801deb6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801deba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801debe:	ea4e 050a 	orr.w	r5, lr, sl
 801dec2:	950d      	str	r5, [sp, #52]	; 0x34
 801dec4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dec6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801deca:	9d08      	ldr	r5, [sp, #32]
 801decc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801ded0:	fb08 fc0c 	mul.w	ip, r8, ip
 801ded4:	fb03 cc0e 	mla	ip, r3, lr, ip
 801ded8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801dedc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dede:	fb01 cc0e 	mla	ip, r1, lr, ip
 801dee2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801dee6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dee8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801deec:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801def0:	fb08 f80e 	mul.w	r8, r8, lr
 801def4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801def8:	fb03 8202 	mla	r2, r3, r2, r8
 801defc:	9b08      	ldr	r3, [sp, #32]
 801defe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801df00:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801df04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801df06:	fb01 220a 	mla	r2, r1, sl, r2
 801df0a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801df0e:	fb09 2901 	mla	r9, r9, r1, r2
 801df12:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801df14:	883b      	ldrh	r3, [r7, #0]
 801df16:	4342      	muls	r2, r0
 801df18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801df1c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801df20:	1c50      	adds	r0, r2, #1
 801df22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801df26:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801df2a:	ea4c 0c09 	orr.w	ip, ip, r9
 801df2e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801df32:	1219      	asrs	r1, r3, #8
 801df34:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801df38:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801df3c:	b2c0      	uxtb	r0, r0
 801df3e:	fb12 f205 	smulbb	r2, r2, r5
 801df42:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801df46:	fb01 2100 	mla	r1, r1, r0, r2
 801df4a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801df4e:	10da      	asrs	r2, r3, #3
 801df50:	fa5f fc8c 	uxtb.w	ip, ip
 801df54:	00db      	lsls	r3, r3, #3
 801df56:	fb1c fc05 	smulbb	ip, ip, r5
 801df5a:	b2db      	uxtb	r3, r3
 801df5c:	b289      	uxth	r1, r1
 801df5e:	fb03 c300 	mla	r3, r3, r0, ip
 801df62:	fa1f fc83 	uxth.w	ip, r3
 801df66:	1c4b      	adds	r3, r1, #1
 801df68:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801df6c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801df70:	fb1e fe05 	smulbb	lr, lr, r5
 801df74:	f10c 0301 	add.w	r3, ip, #1
 801df78:	fb02 e200 	mla	r2, r2, r0, lr
 801df7c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801df80:	b292      	uxth	r2, r2
 801df82:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801df86:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801df8a:	430b      	orrs	r3, r1
 801df8c:	1c51      	adds	r1, r2, #1
 801df8e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801df92:	0952      	lsrs	r2, r2, #5
 801df94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df98:	4313      	orrs	r3, r2
 801df9a:	803b      	strh	r3, [r7, #0]
 801df9c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801df9e:	441c      	add	r4, r3
 801dfa0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dfa2:	441e      	add	r6, r3
 801dfa4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dfa6:	3b01      	subs	r3, #1
 801dfa8:	3702      	adds	r7, #2
 801dfaa:	9318      	str	r3, [sp, #96]	; 0x60
 801dfac:	e698      	b.n	801dce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801dfae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801dfb0:	441c      	add	r4, r3
 801dfb2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dfb4:	441e      	add	r6, r3
 801dfb6:	9b07      	ldr	r3, [sp, #28]
 801dfb8:	3b01      	subs	r3, #1
 801dfba:	9307      	str	r3, [sp, #28]
 801dfbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dfbe:	3302      	adds	r3, #2
 801dfc0:	930a      	str	r3, [sp, #40]	; 0x28
 801dfc2:	e66d      	b.n	801dca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801dfc4:	d023      	beq.n	801e00e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801dfc6:	9b07      	ldr	r3, [sp, #28]
 801dfc8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801dfca:	3b01      	subs	r3, #1
 801dfcc:	fb00 4003 	mla	r0, r0, r3, r4
 801dfd0:	1400      	asrs	r0, r0, #16
 801dfd2:	f53f ae82 	bmi.w	801dcda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dfd6:	3901      	subs	r1, #1
 801dfd8:	4288      	cmp	r0, r1
 801dfda:	f6bf ae7e 	bge.w	801dcda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dfde:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801dfe0:	fb01 6303 	mla	r3, r1, r3, r6
 801dfe4:	141b      	asrs	r3, r3, #16
 801dfe6:	f53f ae78 	bmi.w	801dcda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dfea:	3a01      	subs	r2, #1
 801dfec:	4293      	cmp	r3, r2
 801dfee:	f6bf ae74 	bge.w	801dcda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dff2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801dff6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801dffa:	f1bb 0f00 	cmp.w	fp, #0
 801dffe:	dc6c      	bgt.n	801e0da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e000:	9b07      	ldr	r3, [sp, #28]
 801e002:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e006:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e008:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e00c:	930a      	str	r3, [sp, #40]	; 0x28
 801e00e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e010:	2b00      	cmp	r3, #0
 801e012:	f340 81b3 	ble.w	801e37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e016:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e01a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e01e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e022:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e024:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e028:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e02c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e030:	eef0 6a62 	vmov.f32	s13, s5
 801e034:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e038:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e03c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e040:	ee16 4a90 	vmov	r4, s13
 801e044:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e048:	eef0 6a43 	vmov.f32	s13, s6
 801e04c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e050:	ee12 2a90 	vmov	r2, s5
 801e054:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e058:	fb92 f3f3 	sdiv	r3, r2, r3
 801e05c:	ee13 2a10 	vmov	r2, s6
 801e060:	9329      	str	r3, [sp, #164]	; 0xa4
 801e062:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e064:	fb92 f3f3 	sdiv	r3, r2, r3
 801e068:	932a      	str	r3, [sp, #168]	; 0xa8
 801e06a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e06c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e06e:	3b01      	subs	r3, #1
 801e070:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e074:	9317      	str	r3, [sp, #92]	; 0x5c
 801e076:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e078:	bf08      	it	eq
 801e07a:	4613      	moveq	r3, r2
 801e07c:	ee16 6a90 	vmov	r6, s13
 801e080:	9307      	str	r3, [sp, #28]
 801e082:	eeb0 3a67 	vmov.f32	s6, s15
 801e086:	eef0 2a47 	vmov.f32	s5, s14
 801e08a:	e5fb      	b.n	801dc84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e08c:	2900      	cmp	r1, #0
 801e08e:	f43f ae6b 	beq.w	801dd68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e092:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e096:	9308      	str	r3, [sp, #32]
 801e098:	0e1b      	lsrs	r3, r3, #24
 801e09a:	9311      	str	r3, [sp, #68]	; 0x44
 801e09c:	e664      	b.n	801dd68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e09e:	f112 0801 	adds.w	r8, r2, #1
 801e0a2:	f53f af7b 	bmi.w	801df9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e0a6:	4543      	cmp	r3, r8
 801e0a8:	f6ff af78 	blt.w	801df9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e0ac:	f11c 0801 	adds.w	r8, ip, #1
 801e0b0:	f53f af74 	bmi.w	801df9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e0b4:	45c6      	cmp	lr, r8
 801e0b6:	f6ff af71 	blt.w	801df9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e0ba:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e0bc:	9201      	str	r2, [sp, #4]
 801e0be:	fa0f f28e 	sxth.w	r2, lr
 801e0c2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e0c6:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e0ca:	9200      	str	r2, [sp, #0]
 801e0cc:	b21b      	sxth	r3, r3
 801e0ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e0d0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e0d2:	4639      	mov	r1, r7
 801e0d4:	f7ff fc79 	bl	801d9ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e0d8:	e760      	b.n	801df9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e0da:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e0dc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e0de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e0e2:	1427      	asrs	r7, r4, #16
 801e0e4:	1433      	asrs	r3, r6, #16
 801e0e6:	fb01 7303 	mla	r3, r1, r3, r7
 801e0ea:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e0ee:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e0f2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e0f6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e0fa:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e0fe:	2a00      	cmp	r2, #0
 801e100:	f000 8133 	beq.w	801e36a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e104:	687d      	ldr	r5, [r7, #4]
 801e106:	950e      	str	r5, [sp, #56]	; 0x38
 801e108:	0e2d      	lsrs	r5, r5, #24
 801e10a:	9515      	str	r5, [sp, #84]	; 0x54
 801e10c:	b178      	cbz	r0, 801e12e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e10e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e112:	3901      	subs	r1, #1
 801e114:	0089      	lsls	r1, r1, #2
 801e116:	3104      	adds	r1, #4
 801e118:	eb07 0e01 	add.w	lr, r7, r1
 801e11c:	5879      	ldr	r1, [r7, r1]
 801e11e:	9109      	str	r1, [sp, #36]	; 0x24
 801e120:	0e09      	lsrs	r1, r1, #24
 801e122:	9112      	str	r1, [sp, #72]	; 0x48
 801e124:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e128:	910f      	str	r1, [sp, #60]	; 0x3c
 801e12a:	0e09      	lsrs	r1, r1, #24
 801e12c:	9116      	str	r1, [sp, #88]	; 0x58
 801e12e:	b292      	uxth	r2, r2
 801e130:	b280      	uxth	r0, r0
 801e132:	fb02 f800 	mul.w	r8, r2, r0
 801e136:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e13a:	0112      	lsls	r2, r2, #4
 801e13c:	eba2 0e08 	sub.w	lr, r2, r8
 801e140:	b280      	uxth	r0, r0
 801e142:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e146:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e148:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e14a:	fa1f fe8e 	uxth.w	lr, lr
 801e14e:	1a12      	subs	r2, r2, r0
 801e150:	b292      	uxth	r2, r2
 801e152:	fb0e f101 	mul.w	r1, lr, r1
 801e156:	fb02 110c 	mla	r1, r2, ip, r1
 801e15a:	fb00 1105 	mla	r1, r0, r5, r1
 801e15e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e160:	fb08 1105 	mla	r1, r8, r5, r1
 801e164:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e168:	2900      	cmp	r1, #0
 801e16a:	f000 80f5 	beq.w	801e358 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e16e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e172:	d019      	beq.n	801e1a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e174:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e178:	fb0c fa0a 	mul.w	sl, ip, sl
 801e17c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e180:	fb0c fc03 	mul.w	ip, ip, r3
 801e184:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e188:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e18c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e190:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e194:	4453      	add	r3, sl
 801e196:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e19a:	0a1b      	lsrs	r3, r3, #8
 801e19c:	0a3f      	lsrs	r7, r7, #8
 801e19e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e1a2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e1a6:	433b      	orrs	r3, r7
 801e1a8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e1aa:	2dff      	cmp	r5, #255	; 0xff
 801e1ac:	d020      	beq.n	801e1f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e1ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e1b0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e1b4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e1b6:	436f      	muls	r7, r5
 801e1b8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e1ba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e1be:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e1c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e1c4:	fb05 fa0a 	mul.w	sl, r5, sl
 801e1c8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e1cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e1d0:	44bc      	add	ip, r7
 801e1d2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e1d6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e1da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e1de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e1e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e1ea:	ea4c 050a 	orr.w	r5, ip, sl
 801e1ee:	950e      	str	r5, [sp, #56]	; 0x38
 801e1f0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e1f2:	2dff      	cmp	r5, #255	; 0xff
 801e1f4:	d020      	beq.n	801e238 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e1f6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e1f8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e1fc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e1fe:	436f      	muls	r7, r5
 801e200:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e202:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e206:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e208:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e20c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e210:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e214:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e218:	44bc      	add	ip, r7
 801e21a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e21e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e222:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e226:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e22a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e22e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e232:	ea4c 050a 	orr.w	r5, ip, sl
 801e236:	9509      	str	r5, [sp, #36]	; 0x24
 801e238:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e23a:	2dff      	cmp	r5, #255	; 0xff
 801e23c:	d020      	beq.n	801e280 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e23e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e240:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e244:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e246:	436f      	muls	r7, r5
 801e248:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e24a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e24e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e250:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e254:	fb05 fa0a 	mul.w	sl, r5, sl
 801e258:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e25c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e260:	44bc      	add	ip, r7
 801e262:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e266:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e26a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e26e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e272:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e276:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e27a:	ea4c 050a 	orr.w	r5, ip, sl
 801e27e:	950f      	str	r5, [sp, #60]	; 0x3c
 801e280:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e282:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e286:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e288:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e28c:	fb0e f707 	mul.w	r7, lr, r7
 801e290:	fb02 770c 	mla	r7, r2, ip, r7
 801e294:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e298:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e29a:	fb00 770c 	mla	r7, r0, ip, r7
 801e29e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e2a2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e2a4:	fb08 770c 	mla	r7, r8, ip, r7
 801e2a8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e2ac:	fb0e fe0c 	mul.w	lr, lr, ip
 801e2b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e2b4:	fb02 e303 	mla	r3, r2, r3, lr
 801e2b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e2ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e2bc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e2c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e2c2:	fb00 330a 	mla	r3, r0, sl, r3
 801e2c6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e2ca:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e2ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e2d0:	f8b9 0000 	ldrh.w	r0, [r9]
 801e2d4:	4359      	muls	r1, r3
 801e2d6:	0a3f      	lsrs	r7, r7, #8
 801e2d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2dc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e2e0:	1c4b      	adds	r3, r1, #1
 801e2e2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e2e6:	ea47 070c 	orr.w	r7, r7, ip
 801e2ea:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e2ee:	1202      	asrs	r2, r0, #8
 801e2f0:	0c3b      	lsrs	r3, r7, #16
 801e2f2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e2f6:	b2c9      	uxtb	r1, r1
 801e2f8:	fb13 f305 	smulbb	r3, r3, r5
 801e2fc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e300:	fb02 3201 	mla	r2, r2, r1, r3
 801e304:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e308:	10c3      	asrs	r3, r0, #3
 801e30a:	b2ff      	uxtb	r7, r7
 801e30c:	00c0      	lsls	r0, r0, #3
 801e30e:	b2c0      	uxtb	r0, r0
 801e310:	fb17 f705 	smulbb	r7, r7, r5
 801e314:	fb00 7001 	mla	r0, r0, r1, r7
 801e318:	b292      	uxth	r2, r2
 801e31a:	fb1c fc05 	smulbb	ip, ip, r5
 801e31e:	b280      	uxth	r0, r0
 801e320:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e324:	fb03 c301 	mla	r3, r3, r1, ip
 801e328:	1c51      	adds	r1, r2, #1
 801e32a:	f100 0c01 	add.w	ip, r0, #1
 801e32e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e332:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e336:	b29b      	uxth	r3, r3
 801e338:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e33c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e340:	ea4c 0202 	orr.w	r2, ip, r2
 801e344:	f103 0c01 	add.w	ip, r3, #1
 801e348:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e34c:	095b      	lsrs	r3, r3, #5
 801e34e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e352:	431a      	orrs	r2, r3
 801e354:	f8a9 2000 	strh.w	r2, [r9]
 801e358:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e35a:	441c      	add	r4, r3
 801e35c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e35e:	f109 0902 	add.w	r9, r9, #2
 801e362:	441e      	add	r6, r3
 801e364:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e368:	e647      	b.n	801dffa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e36a:	2800      	cmp	r0, #0
 801e36c:	f43f aedf 	beq.w	801e12e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e370:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e374:	9109      	str	r1, [sp, #36]	; 0x24
 801e376:	0e09      	lsrs	r1, r1, #24
 801e378:	9112      	str	r1, [sp, #72]	; 0x48
 801e37a:	e6d8      	b.n	801e12e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e37c:	b01d      	add	sp, #116	; 0x74
 801e37e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e382 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e382:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e386:	b085      	sub	sp, #20
 801e388:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e38c:	9102      	str	r1, [sp, #8]
 801e38e:	2c00      	cmp	r4, #0
 801e390:	fb04 7103 	mla	r1, r4, r3, r7
 801e394:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e398:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e39c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e3a0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e3a4:	f2c0 810c 	blt.w	801e5c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e3a8:	45a6      	cmp	lr, r4
 801e3aa:	f340 8109 	ble.w	801e5c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e3ae:	2f00      	cmp	r7, #0
 801e3b0:	f2c0 8104 	blt.w	801e5bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e3b4:	42bb      	cmp	r3, r7
 801e3b6:	f340 8101 	ble.w	801e5bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e3ba:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e3be:	1c7a      	adds	r2, r7, #1
 801e3c0:	f100 8101 	bmi.w	801e5c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e3c4:	4293      	cmp	r3, r2
 801e3c6:	f340 80fe 	ble.w	801e5c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e3ca:	2e00      	cmp	r6, #0
 801e3cc:	f000 80fd 	beq.w	801e5ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e3d0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e3d4:	3401      	adds	r4, #1
 801e3d6:	f100 80fc 	bmi.w	801e5d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e3da:	45a6      	cmp	lr, r4
 801e3dc:	f340 80f9 	ble.w	801e5d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e3e0:	2800      	cmp	r0, #0
 801e3e2:	f000 80f9 	beq.w	801e5d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e3e6:	2f00      	cmp	r7, #0
 801e3e8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e3ec:	f2c0 80ef 	blt.w	801e5ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e3f0:	42bb      	cmp	r3, r7
 801e3f2:	f340 80ec 	ble.w	801e5ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e3f6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e3fa:	3701      	adds	r7, #1
 801e3fc:	f100 80ef 	bmi.w	801e5de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e400:	42bb      	cmp	r3, r7
 801e402:	f340 80ec 	ble.w	801e5de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e406:	2e00      	cmp	r6, #0
 801e408:	f000 80eb 	beq.w	801e5e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e40c:	6852      	ldr	r2, [r2, #4]
 801e40e:	b2b6      	uxth	r6, r6
 801e410:	b280      	uxth	r0, r0
 801e412:	fb00 fe06 	mul.w	lr, r0, r6
 801e416:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e41a:	0136      	lsls	r6, r6, #4
 801e41c:	eba6 070e 	sub.w	r7, r6, lr
 801e420:	b280      	uxth	r0, r0
 801e422:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e426:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e42a:	b2bf      	uxth	r7, r7
 801e42c:	1a1b      	subs	r3, r3, r0
 801e42e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e432:	b29b      	uxth	r3, r3
 801e434:	fb07 f60a 	mul.w	r6, r7, sl
 801e438:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e43c:	fb0b 6603 	mla	r6, fp, r3, r6
 801e440:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e444:	fb00 6609 	mla	r6, r0, r9, r6
 801e448:	fb0e 6608 	mla	r6, lr, r8, r6
 801e44c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e450:	9600      	str	r6, [sp, #0]
 801e452:	2e00      	cmp	r6, #0
 801e454:	f000 80af 	beq.w	801e5b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e458:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e45c:	fb0b fc0c 	mul.w	ip, fp, ip
 801e460:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e464:	fb0b f505 	mul.w	r5, fp, r5
 801e468:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e46c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e470:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e474:	44dc      	add	ip, fp
 801e476:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e47a:	9501      	str	r5, [sp, #4]
 801e47c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e480:	9503      	str	r5, [sp, #12]
 801e482:	9d01      	ldr	r5, [sp, #4]
 801e484:	9e02      	ldr	r6, [sp, #8]
 801e486:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e48a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e48e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e492:	fb0a fc0c 	mul.w	ip, sl, ip
 801e496:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e49a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e49e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e4a2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e4a6:	4465      	add	r5, ip
 801e4a8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e4ac:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e4b0:	fb09 fc0c 	mul.w	ip, r9, ip
 801e4b4:	fb09 f904 	mul.w	r9, r9, r4
 801e4b8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e4bc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e4c0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e4c4:	fb08 f404 	mul.w	r4, r8, r4
 801e4c8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e4cc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e4d0:	fb08 f802 	mul.w	r8, r8, r2
 801e4d4:	fb0a fa01 	mul.w	sl, sl, r1
 801e4d8:	0a22      	lsrs	r2, r4, #8
 801e4da:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e4de:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e4e2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e4e6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e4ea:	4414      	add	r4, r2
 801e4ec:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e4f0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e4f4:	0a2d      	lsrs	r5, r5, #8
 801e4f6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e4fa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e4fe:	9a03      	ldr	r2, [sp, #12]
 801e500:	8836      	ldrh	r6, [r6, #0]
 801e502:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e506:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e50a:	437d      	muls	r5, r7
 801e50c:	4461      	add	r1, ip
 801e50e:	0a24      	lsrs	r4, r4, #8
 801e510:	fb02 5503 	mla	r5, r2, r3, r5
 801e514:	0a09      	lsrs	r1, r1, #8
 801e516:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e51a:	fb04 540e 	mla	r4, r4, lr, r5
 801e51e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e522:	fb01 4100 	mla	r1, r1, r0, r4
 801e526:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e52a:	0a09      	lsrs	r1, r1, #8
 801e52c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e530:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e534:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e538:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e53c:	fb07 f70a 	mul.w	r7, r7, sl
 801e540:	fb03 7101 	mla	r1, r3, r1, r7
 801e544:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e548:	9b00      	ldr	r3, [sp, #0]
 801e54a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e54e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e552:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e556:	fb00 e101 	mla	r1, r0, r1, lr
 801e55a:	43da      	mvns	r2, r3
 801e55c:	1233      	asrs	r3, r6, #8
 801e55e:	b2d2      	uxtb	r2, r2
 801e560:	10f0      	asrs	r0, r6, #3
 801e562:	0a09      	lsrs	r1, r1, #8
 801e564:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e568:	00f6      	lsls	r6, r6, #3
 801e56a:	4353      	muls	r3, r2
 801e56c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e570:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e574:	b2f6      	uxtb	r6, r6
 801e576:	4321      	orrs	r1, r4
 801e578:	4350      	muls	r0, r2
 801e57a:	4356      	muls	r6, r2
 801e57c:	1c5a      	adds	r2, r3, #1
 801e57e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e582:	0c0b      	lsrs	r3, r1, #16
 801e584:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e588:	1c42      	adds	r2, r0, #1
 801e58a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e58e:	0a0a      	lsrs	r2, r1, #8
 801e590:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e594:	021b      	lsls	r3, r3, #8
 801e596:	00d2      	lsls	r2, r2, #3
 801e598:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e59c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e5a0:	4313      	orrs	r3, r2
 801e5a2:	1c72      	adds	r2, r6, #1
 801e5a4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e5a8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e5ac:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e5b0:	4319      	orrs	r1, r3
 801e5b2:	9b02      	ldr	r3, [sp, #8]
 801e5b4:	8019      	strh	r1, [r3, #0]
 801e5b6:	b005      	add	sp, #20
 801e5b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e5bc:	2500      	movs	r5, #0
 801e5be:	e6fe      	b.n	801e3be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e5c0:	2100      	movs	r1, #0
 801e5c2:	460d      	mov	r5, r1
 801e5c4:	e706      	b.n	801e3d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e5c6:	2100      	movs	r1, #0
 801e5c8:	e704      	b.n	801e3d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e5ca:	4631      	mov	r1, r6
 801e5cc:	e702      	b.n	801e3d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e5ce:	2400      	movs	r4, #0
 801e5d0:	e713      	b.n	801e3fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e5d2:	2200      	movs	r2, #0
 801e5d4:	4614      	mov	r4, r2
 801e5d6:	e71a      	b.n	801e40e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e5d8:	4602      	mov	r2, r0
 801e5da:	4604      	mov	r4, r0
 801e5dc:	e717      	b.n	801e40e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e5de:	2200      	movs	r2, #0
 801e5e0:	e715      	b.n	801e40e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e5e2:	4632      	mov	r2, r6
 801e5e4:	e713      	b.n	801e40e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801e5e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5ec:	b09b      	sub	sp, #108	; 0x6c
 801e5ee:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e5f2:	9218      	str	r2, [sp, #96]	; 0x60
 801e5f4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e5f6:	9116      	str	r1, [sp, #88]	; 0x58
 801e5f8:	9307      	str	r3, [sp, #28]
 801e5fa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e5fe:	9019      	str	r0, [sp, #100]	; 0x64
 801e600:	6850      	ldr	r0, [r2, #4]
 801e602:	6812      	ldr	r2, [r2, #0]
 801e604:	fb00 1303 	mla	r3, r0, r3, r1
 801e608:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e60c:	930a      	str	r3, [sp, #40]	; 0x28
 801e60e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e610:	681b      	ldr	r3, [r3, #0]
 801e612:	930f      	str	r3, [sp, #60]	; 0x3c
 801e614:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e616:	2b00      	cmp	r3, #0
 801e618:	dc03      	bgt.n	801e622 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e61a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e61c:	2b00      	cmp	r3, #0
 801e61e:	f340 8386 	ble.w	801ed2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e622:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e624:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e628:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e62c:	1e48      	subs	r0, r1, #1
 801e62e:	1e57      	subs	r7, r2, #1
 801e630:	9b07      	ldr	r3, [sp, #28]
 801e632:	2b00      	cmp	r3, #0
 801e634:	f340 8166 	ble.w	801e904 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e638:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e63c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e640:	d406      	bmi.n	801e650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e642:	4584      	cmp	ip, r0
 801e644:	da04      	bge.n	801e650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e646:	2b00      	cmp	r3, #0
 801e648:	db02      	blt.n	801e650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e64a:	42bb      	cmp	r3, r7
 801e64c:	f2c0 815b 	blt.w	801e906 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e650:	f11c 0c01 	adds.w	ip, ip, #1
 801e654:	f100 814b 	bmi.w	801e8ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e658:	4561      	cmp	r1, ip
 801e65a:	f2c0 8148 	blt.w	801e8ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e65e:	3301      	adds	r3, #1
 801e660:	f100 8145 	bmi.w	801e8ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e664:	429a      	cmp	r2, r3
 801e666:	f2c0 8142 	blt.w	801e8ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e66a:	9b07      	ldr	r3, [sp, #28]
 801e66c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e66e:	9317      	str	r3, [sp, #92]	; 0x5c
 801e670:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e672:	2b00      	cmp	r3, #0
 801e674:	f340 8165 	ble.w	801e942 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e678:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e67a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e67c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e680:	689b      	ldr	r3, [r3, #8]
 801e682:	1422      	asrs	r2, r4, #16
 801e684:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e688:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e68c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e690:	f100 81d5 	bmi.w	801ea3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e694:	f103 38ff 	add.w	r8, r3, #4294967295
 801e698:	4542      	cmp	r2, r8
 801e69a:	f280 81d0 	bge.w	801ea3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e69e:	f1bc 0f00 	cmp.w	ip, #0
 801e6a2:	f2c0 81cc 	blt.w	801ea3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e6a6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e6aa:	45c4      	cmp	ip, r8
 801e6ac:	f280 81c7 	bge.w	801ea3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e6b0:	b21b      	sxth	r3, r3
 801e6b2:	fb0c 2203 	mla	r2, ip, r3, r2
 801e6b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e6b8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e6bc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e6c0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e6c4:	2900      	cmp	r1, #0
 801e6c6:	f000 8182 	beq.w	801e9ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e6ca:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e6ce:	950b      	str	r5, [sp, #44]	; 0x2c
 801e6d0:	0e2d      	lsrs	r5, r5, #24
 801e6d2:	9512      	str	r5, [sp, #72]	; 0x48
 801e6d4:	b180      	cbz	r0, 801e6f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e6d6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e6da:	3b01      	subs	r3, #1
 801e6dc:	009b      	lsls	r3, r3, #2
 801e6de:	3304      	adds	r3, #4
 801e6e0:	eb08 0c03 	add.w	ip, r8, r3
 801e6e4:	f858 3003 	ldr.w	r3, [r8, r3]
 801e6e8:	9308      	str	r3, [sp, #32]
 801e6ea:	0e1b      	lsrs	r3, r3, #24
 801e6ec:	9310      	str	r3, [sp, #64]	; 0x40
 801e6ee:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e6f2:	930c      	str	r3, [sp, #48]	; 0x30
 801e6f4:	0e1b      	lsrs	r3, r3, #24
 801e6f6:	9313      	str	r3, [sp, #76]	; 0x4c
 801e6f8:	b289      	uxth	r1, r1
 801e6fa:	b280      	uxth	r0, r0
 801e6fc:	fb01 f900 	mul.w	r9, r1, r0
 801e700:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e704:	0109      	lsls	r1, r1, #4
 801e706:	eba1 0809 	sub.w	r8, r1, r9
 801e70a:	b280      	uxth	r0, r0
 801e70c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801e710:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e712:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e714:	fa1f f888 	uxth.w	r8, r8
 801e718:	1a09      	subs	r1, r1, r0
 801e71a:	b289      	uxth	r1, r1
 801e71c:	fb08 f303 	mul.w	r3, r8, r3
 801e720:	fb01 330e 	mla	r3, r1, lr, r3
 801e724:	fb00 3305 	mla	r3, r0, r5, r3
 801e728:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e72a:	fb09 3305 	mla	r3, r9, r5, r3
 801e72e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e732:	2b00      	cmp	r3, #0
 801e734:	f000 80d2 	beq.w	801e8dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e738:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e73c:	d01b      	beq.n	801e776 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801e73e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e742:	fb0e fa0a 	mul.w	sl, lr, sl
 801e746:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e74a:	fb0e fe02 	mul.w	lr, lr, r2
 801e74e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e752:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e756:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e75a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e75e:	4452      	add	r2, sl
 801e760:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e764:	0a12      	lsrs	r2, r2, #8
 801e766:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e76a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e76e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e772:	ea42 020c 	orr.w	r2, r2, ip
 801e776:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e778:	2dff      	cmp	r5, #255	; 0xff
 801e77a:	d021      	beq.n	801e7c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801e77c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e77e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e782:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e784:	fb05 fb0b 	mul.w	fp, r5, fp
 801e788:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e78a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e78e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e790:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e794:	fb05 fa0a 	mul.w	sl, r5, sl
 801e798:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e79c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e7a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e7a4:	44de      	add	lr, fp
 801e7a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e7aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e7ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e7b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e7b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e7ba:	ea4e 050a 	orr.w	r5, lr, sl
 801e7be:	950b      	str	r5, [sp, #44]	; 0x2c
 801e7c0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e7c2:	2dff      	cmp	r5, #255	; 0xff
 801e7c4:	d021      	beq.n	801e80a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801e7c6:	9d08      	ldr	r5, [sp, #32]
 801e7c8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e7cc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e7ce:	fb05 fb0b 	mul.w	fp, r5, fp
 801e7d2:	9d08      	ldr	r5, [sp, #32]
 801e7d4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e7d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e7da:	fb05 fa0e 	mul.w	sl, r5, lr
 801e7de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e7e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e7e6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e7ea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e7ee:	44de      	add	lr, fp
 801e7f0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e7f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e7f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e7fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e800:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e804:	ea4e 050a 	orr.w	r5, lr, sl
 801e808:	9508      	str	r5, [sp, #32]
 801e80a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e80c:	2dff      	cmp	r5, #255	; 0xff
 801e80e:	d021      	beq.n	801e854 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801e810:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e812:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e816:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e818:	fb05 fb0b 	mul.w	fp, r5, fp
 801e81c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e81e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e822:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e824:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e828:	fb05 fa0a 	mul.w	sl, r5, sl
 801e82c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e830:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e834:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e838:	44de      	add	lr, fp
 801e83a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e83e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e842:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e846:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e84a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e84e:	ea4e 050a 	orr.w	r5, lr, sl
 801e852:	950c      	str	r5, [sp, #48]	; 0x30
 801e854:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e856:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e85a:	9d08      	ldr	r5, [sp, #32]
 801e85c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e860:	fb08 fc0c 	mul.w	ip, r8, ip
 801e864:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e868:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e86c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e86e:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e872:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e876:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e878:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e87c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e880:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e884:	fb08 f80e 	mul.w	r8, r8, lr
 801e888:	fb01 8202 	mla	r2, r1, r2, r8
 801e88c:	9908      	ldr	r1, [sp, #32]
 801e88e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e892:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e894:	fb00 220a 	mla	r2, r0, sl, r2
 801e898:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801e89c:	fb09 2900 	mla	r9, r9, r0, r2
 801e8a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e8a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e8ac:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e8b0:	ea4c 0c09 	orr.w	ip, ip, r9
 801e8b4:	2bff      	cmp	r3, #255	; 0xff
 801e8b6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801e8ba:	f040 8091 	bne.w	801e9e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e8be:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801e8c2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801e8c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e8ca:	f022 0207 	bic.w	r2, r2, #7
 801e8ce:	431a      	orrs	r2, r3
 801e8d0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801e8d4:	ea4c 0c02 	orr.w	ip, ip, r2
 801e8d8:	f8a7 c000 	strh.w	ip, [r7]
 801e8dc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e8de:	441c      	add	r4, r3
 801e8e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e8e2:	441e      	add	r6, r3
 801e8e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e8e6:	3b01      	subs	r3, #1
 801e8e8:	3702      	adds	r7, #2
 801e8ea:	9317      	str	r3, [sp, #92]	; 0x5c
 801e8ec:	e6c0      	b.n	801e670 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801e8ee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e8f0:	441c      	add	r4, r3
 801e8f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e8f4:	441e      	add	r6, r3
 801e8f6:	9b07      	ldr	r3, [sp, #28]
 801e8f8:	3b01      	subs	r3, #1
 801e8fa:	9307      	str	r3, [sp, #28]
 801e8fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e8fe:	3302      	adds	r3, #2
 801e900:	930a      	str	r3, [sp, #40]	; 0x28
 801e902:	e695      	b.n	801e630 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e904:	d024      	beq.n	801e950 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e906:	9b07      	ldr	r3, [sp, #28]
 801e908:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801e90a:	3b01      	subs	r3, #1
 801e90c:	fb00 4003 	mla	r0, r0, r3, r4
 801e910:	1400      	asrs	r0, r0, #16
 801e912:	f53f aeaa 	bmi.w	801e66a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e916:	3901      	subs	r1, #1
 801e918:	4288      	cmp	r0, r1
 801e91a:	f6bf aea6 	bge.w	801e66a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e91e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e920:	fb01 6303 	mla	r3, r1, r3, r6
 801e924:	141b      	asrs	r3, r3, #16
 801e926:	f53f aea0 	bmi.w	801e66a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e92a:	3a01      	subs	r2, #1
 801e92c:	4293      	cmp	r3, r2
 801e92e:	f6bf ae9c 	bge.w	801e66a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e932:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e936:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801e93a:	f1bb 0f00 	cmp.w	fp, #0
 801e93e:	f300 809a 	bgt.w	801ea76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e942:	9b07      	ldr	r3, [sp, #28]
 801e944:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e948:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e94a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e94e:	930a      	str	r3, [sp, #40]	; 0x28
 801e950:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e952:	2b00      	cmp	r3, #0
 801e954:	f340 81eb 	ble.w	801ed2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e958:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e95c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e960:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e964:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e966:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e96a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e96e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e972:	eef0 6a62 	vmov.f32	s13, s5
 801e976:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e97a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e97e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e982:	ee16 4a90 	vmov	r4, s13
 801e986:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e98a:	eef0 6a43 	vmov.f32	s13, s6
 801e98e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e992:	ee12 2a90 	vmov	r2, s5
 801e996:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e99a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e99e:	ee13 2a10 	vmov	r2, s6
 801e9a2:	9327      	str	r3, [sp, #156]	; 0x9c
 801e9a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e9a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9aa:	9328      	str	r3, [sp, #160]	; 0xa0
 801e9ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e9ae:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e9b0:	3b01      	subs	r3, #1
 801e9b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e9b6:	9316      	str	r3, [sp, #88]	; 0x58
 801e9b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e9ba:	bf08      	it	eq
 801e9bc:	4613      	moveq	r3, r2
 801e9be:	ee16 6a90 	vmov	r6, s13
 801e9c2:	9307      	str	r3, [sp, #28]
 801e9c4:	eeb0 3a67 	vmov.f32	s6, s15
 801e9c8:	eef0 2a47 	vmov.f32	s5, s14
 801e9cc:	e622      	b.n	801e614 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801e9ce:	2800      	cmp	r0, #0
 801e9d0:	f43f ae92 	beq.w	801e6f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e9d4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e9d8:	9308      	str	r3, [sp, #32]
 801e9da:	0e1b      	lsrs	r3, r3, #24
 801e9dc:	9310      	str	r3, [sp, #64]	; 0x40
 801e9de:	e68b      	b.n	801e6f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e9e0:	8839      	ldrh	r1, [r7, #0]
 801e9e2:	4dd4      	ldr	r5, [pc, #848]	; (801ed34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801e9e4:	43db      	mvns	r3, r3
 801e9e6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801e9ea:	fa5f f883 	uxtb.w	r8, r3
 801e9ee:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e9f2:	fb0e fe08 	mul.w	lr, lr, r8
 801e9f6:	10c8      	asrs	r0, r1, #3
 801e9f8:	00cb      	lsls	r3, r1, #3
 801e9fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e9fe:	f10e 0101 	add.w	r1, lr, #1
 801ea02:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ea06:	fb00 f008 	mul.w	r0, r0, r8
 801ea0a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ea0e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ea12:	f100 0e01 	add.w	lr, r0, #1
 801ea16:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ea1a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ea1e:	b2db      	uxtb	r3, r3
 801ea20:	b2c9      	uxtb	r1, r1
 801ea22:	00d2      	lsls	r2, r2, #3
 801ea24:	fb03 f308 	mul.w	r3, r3, r8
 801ea28:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ea2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea30:	430a      	orrs	r2, r1
 801ea32:	1c59      	adds	r1, r3, #1
 801ea34:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ea38:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ea3c:	e748      	b.n	801e8d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ea3e:	f112 0801 	adds.w	r8, r2, #1
 801ea42:	f53f af4b 	bmi.w	801e8dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ea46:	4543      	cmp	r3, r8
 801ea48:	f6ff af48 	blt.w	801e8dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ea4c:	f11c 0801 	adds.w	r8, ip, #1
 801ea50:	f53f af44 	bmi.w	801e8dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ea54:	45c6      	cmp	lr, r8
 801ea56:	f6ff af41 	blt.w	801e8dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ea5a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ea5e:	fa0f f28e 	sxth.w	r2, lr
 801ea62:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ea66:	9200      	str	r2, [sp, #0]
 801ea68:	b21b      	sxth	r3, r3
 801ea6a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ea6c:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ea6e:	4639      	mov	r1, r7
 801ea70:	f7ff fc87 	bl	801e382 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ea74:	e732      	b.n	801e8dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ea76:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ea78:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ea7a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ea7e:	1421      	asrs	r1, r4, #16
 801ea80:	1433      	asrs	r3, r6, #16
 801ea82:	fb07 1303 	mla	r3, r7, r3, r1
 801ea86:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ea88:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ea8c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ea90:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ea94:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ea98:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ea9c:	2a00      	cmp	r2, #0
 801ea9e:	f000 8107 	beq.w	801ecb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801eaa2:	684d      	ldr	r5, [r1, #4]
 801eaa4:	950d      	str	r5, [sp, #52]	; 0x34
 801eaa6:	0e2d      	lsrs	r5, r5, #24
 801eaa8:	9514      	str	r5, [sp, #80]	; 0x50
 801eaaa:	b178      	cbz	r0, 801eacc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801eaac:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801eab0:	3f01      	subs	r7, #1
 801eab2:	00bf      	lsls	r7, r7, #2
 801eab4:	3704      	adds	r7, #4
 801eab6:	eb01 0e07 	add.w	lr, r1, r7
 801eaba:	59c9      	ldr	r1, [r1, r7]
 801eabc:	9109      	str	r1, [sp, #36]	; 0x24
 801eabe:	0e09      	lsrs	r1, r1, #24
 801eac0:	9111      	str	r1, [sp, #68]	; 0x44
 801eac2:	f8de 1004 	ldr.w	r1, [lr, #4]
 801eac6:	910e      	str	r1, [sp, #56]	; 0x38
 801eac8:	0e09      	lsrs	r1, r1, #24
 801eaca:	9115      	str	r1, [sp, #84]	; 0x54
 801eacc:	b292      	uxth	r2, r2
 801eace:	b280      	uxth	r0, r0
 801ead0:	fb02 f900 	mul.w	r9, r2, r0
 801ead4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ead8:	0112      	lsls	r2, r2, #4
 801eada:	eba2 0e09 	sub.w	lr, r2, r9
 801eade:	b280      	uxth	r0, r0
 801eae0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801eae4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eae6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eae8:	fa1f fe8e 	uxth.w	lr, lr
 801eaec:	1a09      	subs	r1, r1, r0
 801eaee:	b289      	uxth	r1, r1
 801eaf0:	fb0e f202 	mul.w	r2, lr, r2
 801eaf4:	fb01 220c 	mla	r2, r1, ip, r2
 801eaf8:	fb00 2205 	mla	r2, r0, r5, r2
 801eafc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801eafe:	fb09 2205 	mla	r2, r9, r5, r2
 801eb02:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801eb06:	2a00      	cmp	r2, #0
 801eb08:	f000 80c9 	beq.w	801ec9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801eb0c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801eb10:	d019      	beq.n	801eb46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801eb12:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801eb16:	fb0c fa0a 	mul.w	sl, ip, sl
 801eb1a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801eb1e:	fb0c fc03 	mul.w	ip, ip, r3
 801eb22:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801eb26:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801eb2a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eb2e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801eb32:	4453      	add	r3, sl
 801eb34:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801eb38:	0a1b      	lsrs	r3, r3, #8
 801eb3a:	0a3f      	lsrs	r7, r7, #8
 801eb3c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801eb40:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801eb44:	433b      	orrs	r3, r7
 801eb46:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eb48:	2dff      	cmp	r5, #255	; 0xff
 801eb4a:	d020      	beq.n	801eb8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801eb4c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eb4e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eb52:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eb54:	436f      	muls	r7, r5
 801eb56:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eb58:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eb5c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eb5e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eb62:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb66:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eb6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eb6e:	44bc      	add	ip, r7
 801eb70:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eb74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eb78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eb84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb88:	ea4c 050a 	orr.w	r5, ip, sl
 801eb8c:	950d      	str	r5, [sp, #52]	; 0x34
 801eb8e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eb90:	2dff      	cmp	r5, #255	; 0xff
 801eb92:	d020      	beq.n	801ebd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801eb94:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eb96:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eb9a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eb9c:	436f      	muls	r7, r5
 801eb9e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eba0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801eba4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eba6:	fb05 fa0c 	mul.w	sl, r5, ip
 801ebaa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ebae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ebb2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ebb6:	44bc      	add	ip, r7
 801ebb8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ebbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ebc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ebc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ebcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ebd0:	ea4c 050a 	orr.w	r5, ip, sl
 801ebd4:	9509      	str	r5, [sp, #36]	; 0x24
 801ebd6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ebd8:	2dff      	cmp	r5, #255	; 0xff
 801ebda:	d020      	beq.n	801ec1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ebdc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ebde:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ebe2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ebe4:	436f      	muls	r7, r5
 801ebe6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ebe8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ebec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ebee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ebf2:	fb05 fa0a 	mul.w	sl, r5, sl
 801ebf6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ebfa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ebfe:	44bc      	add	ip, r7
 801ec00:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ec04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ec08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ec14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ec18:	ea4c 050a 	orr.w	r5, ip, sl
 801ec1c:	950e      	str	r5, [sp, #56]	; 0x38
 801ec1e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ec20:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ec24:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ec26:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ec2a:	fb0e f707 	mul.w	r7, lr, r7
 801ec2e:	fb01 770c 	mla	r7, r1, ip, r7
 801ec32:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ec36:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ec38:	fb00 770c 	mla	r7, r0, ip, r7
 801ec3c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ec40:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ec42:	fb09 770c 	mla	r7, r9, ip, r7
 801ec46:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ec4a:	fb0e fe0c 	mul.w	lr, lr, ip
 801ec4e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ec52:	fb01 e303 	mla	r3, r1, r3, lr
 801ec56:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ec58:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ec5c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ec5e:	fb00 330a 	mla	r3, r0, sl, r3
 801ec62:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ec66:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ec6a:	0a3f      	lsrs	r7, r7, #8
 801ec6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec70:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ec74:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ec78:	ea47 070c 	orr.w	r7, r7, ip
 801ec7c:	2aff      	cmp	r2, #255	; 0xff
 801ec7e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801ec82:	d11e      	bne.n	801ecc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801ec84:	097a      	lsrs	r2, r7, #5
 801ec86:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801ec8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec8e:	f023 0307 	bic.w	r3, r3, #7
 801ec92:	4313      	orrs	r3, r2
 801ec94:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ec98:	431f      	orrs	r7, r3
 801ec9a:	f8a8 7000 	strh.w	r7, [r8]
 801ec9e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801eca0:	441c      	add	r4, r3
 801eca2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801eca4:	f108 0802 	add.w	r8, r8, #2
 801eca8:	441e      	add	r6, r3
 801ecaa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ecae:	e644      	b.n	801e93a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ecb0:	2800      	cmp	r0, #0
 801ecb2:	f43f af0b 	beq.w	801eacc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ecb6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801ecba:	9109      	str	r1, [sp, #36]	; 0x24
 801ecbc:	0e09      	lsrs	r1, r1, #24
 801ecbe:	9111      	str	r1, [sp, #68]	; 0x44
 801ecc0:	e704      	b.n	801eacc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ecc2:	f8b8 1000 	ldrh.w	r1, [r8]
 801ecc6:	43d2      	mvns	r2, r2
 801ecc8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801eccc:	fa5f fe82 	uxtb.w	lr, r2
 801ecd0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ecd4:	fb0c fc0e 	mul.w	ip, ip, lr
 801ecd8:	10c8      	asrs	r0, r1, #3
 801ecda:	00ca      	lsls	r2, r1, #3
 801ecdc:	f10c 0101 	add.w	r1, ip, #1
 801ece0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ece4:	0c39      	lsrs	r1, r7, #16
 801ece6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ecea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ecee:	4911      	ldr	r1, [pc, #68]	; (801ed34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ecf0:	fb00 f00e 	mul.w	r0, r0, lr
 801ecf4:	fa5f fc8c 	uxtb.w	ip, ip
 801ecf8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ecfc:	b2d2      	uxtb	r2, r2
 801ecfe:	1c41      	adds	r1, r0, #1
 801ed00:	fb02 f20e 	mul.w	r2, r2, lr
 801ed04:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ed08:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ed0c:	1c51      	adds	r1, r2, #1
 801ed0e:	00c0      	lsls	r0, r0, #3
 801ed10:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ed14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ed18:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ed1c:	ea4c 0c00 	orr.w	ip, ip, r0
 801ed20:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ed24:	ea47 0c0c 	orr.w	ip, r7, ip
 801ed28:	f8a8 c000 	strh.w	ip, [r8]
 801ed2c:	e7b7      	b.n	801ec9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ed2e:	b01b      	add	sp, #108	; 0x6c
 801ed30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed34:	fffff800 	.word	0xfffff800

0801ed38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801ed38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ed3c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801ed40:	2d00      	cmp	r5, #0
 801ed42:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ed46:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ed4a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801ed4e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801ed52:	fb05 0e03 	mla	lr, r5, r3, r0
 801ed56:	f2c0 808c 	blt.w	801ee72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801ed5a:	45a9      	cmp	r9, r5
 801ed5c:	f340 8089 	ble.w	801ee72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801ed60:	2800      	cmp	r0, #0
 801ed62:	f2c0 8084 	blt.w	801ee6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801ed66:	4580      	cmp	r8, r0
 801ed68:	f340 8081 	ble.w	801ee6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801ed6c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801ed70:	f01e 0f01 	tst.w	lr, #1
 801ed74:	5d16      	ldrb	r6, [r2, r4]
 801ed76:	bf0c      	ite	eq
 801ed78:	f006 060f 	andeq.w	r6, r6, #15
 801ed7c:	1136      	asrne	r6, r6, #4
 801ed7e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ed82:	b2f6      	uxtb	r6, r6
 801ed84:	1c44      	adds	r4, r0, #1
 801ed86:	d477      	bmi.n	801ee78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801ed88:	45a0      	cmp	r8, r4
 801ed8a:	dd75      	ble.n	801ee78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801ed8c:	2f00      	cmp	r7, #0
 801ed8e:	d075      	beq.n	801ee7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801ed90:	f10e 0a01 	add.w	sl, lr, #1
 801ed94:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801ed98:	f01a 0f01 	tst.w	sl, #1
 801ed9c:	5d14      	ldrb	r4, [r2, r4]
 801ed9e:	bf0c      	ite	eq
 801eda0:	f004 040f 	andeq.w	r4, r4, #15
 801eda4:	1124      	asrne	r4, r4, #4
 801eda6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801edaa:	b2e4      	uxtb	r4, r4
 801edac:	3501      	adds	r5, #1
 801edae:	d469      	bmi.n	801ee84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801edb0:	45a9      	cmp	r9, r5
 801edb2:	dd67      	ble.n	801ee84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801edb4:	f1bc 0f00 	cmp.w	ip, #0
 801edb8:	d067      	beq.n	801ee8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801edba:	2800      	cmp	r0, #0
 801edbc:	db60      	blt.n	801ee80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801edbe:	4580      	cmp	r8, r0
 801edc0:	dd5e      	ble.n	801ee80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801edc2:	eb03 090e 	add.w	r9, r3, lr
 801edc6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801edca:	f019 0f01 	tst.w	r9, #1
 801edce:	5d55      	ldrb	r5, [r2, r5]
 801edd0:	bf0c      	ite	eq
 801edd2:	f005 050f 	andeq.w	r5, r5, #15
 801edd6:	112d      	asrne	r5, r5, #4
 801edd8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801eddc:	b2ed      	uxtb	r5, r5
 801edde:	3001      	adds	r0, #1
 801ede0:	d456      	bmi.n	801ee90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801ede2:	4580      	cmp	r8, r0
 801ede4:	dd54      	ble.n	801ee90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801ede6:	2f00      	cmp	r7, #0
 801ede8:	d054      	beq.n	801ee94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801edea:	3301      	adds	r3, #1
 801edec:	449e      	add	lr, r3
 801edee:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801edf2:	f01e 0f01 	tst.w	lr, #1
 801edf6:	5cd0      	ldrb	r0, [r2, r3]
 801edf8:	bf0c      	ite	eq
 801edfa:	f000 000f 	andeq.w	r0, r0, #15
 801edfe:	1100      	asrne	r0, r0, #4
 801ee00:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ee04:	b2c3      	uxtb	r3, r0
 801ee06:	b2ba      	uxth	r2, r7
 801ee08:	fa1f fc8c 	uxth.w	ip, ip
 801ee0c:	fb02 f00c 	mul.w	r0, r2, ip
 801ee10:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801ee14:	0112      	lsls	r2, r2, #4
 801ee16:	fa1f fc8c 	uxth.w	ip, ip
 801ee1a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801ee1e:	1a12      	subs	r2, r2, r0
 801ee20:	eba7 070c 	sub.w	r7, r7, ip
 801ee24:	b292      	uxth	r2, r2
 801ee26:	b2bf      	uxth	r7, r7
 801ee28:	4362      	muls	r2, r4
 801ee2a:	fb06 2207 	mla	r2, r6, r7, r2
 801ee2e:	fb0c 2505 	mla	r5, ip, r5, r2
 801ee32:	fb00 5303 	mla	r3, r0, r3, r5
 801ee36:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ee3a:	b1b3      	cbz	r3, 801ee6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801ee3c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801ee40:	435a      	muls	r2, r3
 801ee42:	1c53      	adds	r3, r2, #1
 801ee44:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ee48:	4a2d      	ldr	r2, [pc, #180]	; (801ef00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801ee4a:	121b      	asrs	r3, r3, #8
 801ee4c:	6812      	ldr	r2, [r2, #0]
 801ee4e:	2bff      	cmp	r3, #255	; 0xff
 801ee50:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ee54:	d120      	bne.n	801ee98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801ee56:	4b2b      	ldr	r3, [pc, #172]	; (801ef04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801ee58:	0950      	lsrs	r0, r2, #5
 801ee5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ee5e:	4033      	ands	r3, r6
 801ee60:	4318      	orrs	r0, r3
 801ee62:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ee66:	4302      	orrs	r2, r0
 801ee68:	800a      	strh	r2, [r1, #0]
 801ee6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ee6e:	2600      	movs	r6, #0
 801ee70:	e788      	b.n	801ed84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801ee72:	2400      	movs	r4, #0
 801ee74:	4626      	mov	r6, r4
 801ee76:	e799      	b.n	801edac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ee78:	2400      	movs	r4, #0
 801ee7a:	e797      	b.n	801edac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ee7c:	463c      	mov	r4, r7
 801ee7e:	e795      	b.n	801edac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ee80:	2500      	movs	r5, #0
 801ee82:	e7ac      	b.n	801edde <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801ee84:	2300      	movs	r3, #0
 801ee86:	461d      	mov	r5, r3
 801ee88:	e7bd      	b.n	801ee06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ee8a:	4663      	mov	r3, ip
 801ee8c:	4665      	mov	r5, ip
 801ee8e:	e7ba      	b.n	801ee06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ee90:	2300      	movs	r3, #0
 801ee92:	e7b8      	b.n	801ee06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ee94:	463b      	mov	r3, r7
 801ee96:	e7b6      	b.n	801ee06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ee98:	880d      	ldrh	r5, [r1, #0]
 801ee9a:	b29f      	uxth	r7, r3
 801ee9c:	122c      	asrs	r4, r5, #8
 801ee9e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801eea2:	43db      	mvns	r3, r3
 801eea4:	b2db      	uxtb	r3, r3
 801eea6:	fb10 f007 	smulbb	r0, r0, r7
 801eeaa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801eeae:	fb04 0403 	mla	r4, r4, r3, r0
 801eeb2:	b2f6      	uxtb	r6, r6
 801eeb4:	10e8      	asrs	r0, r5, #3
 801eeb6:	b2d2      	uxtb	r2, r2
 801eeb8:	00ed      	lsls	r5, r5, #3
 801eeba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801eebe:	fb12 f207 	smulbb	r2, r2, r7
 801eec2:	fb16 f607 	smulbb	r6, r6, r7
 801eec6:	b2ed      	uxtb	r5, r5
 801eec8:	b2a4      	uxth	r4, r4
 801eeca:	fb00 6603 	mla	r6, r0, r3, r6
 801eece:	fb05 2303 	mla	r3, r5, r3, r2
 801eed2:	b29a      	uxth	r2, r3
 801eed4:	1c63      	adds	r3, r4, #1
 801eed6:	b2b0      	uxth	r0, r6
 801eed8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801eedc:	1c53      	adds	r3, r2, #1
 801eede:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eee2:	1c42      	adds	r2, r0, #1
 801eee4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801eee8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801eeec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eef0:	0940      	lsrs	r0, r0, #5
 801eef2:	4323      	orrs	r3, r4
 801eef4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801eef8:	4303      	orrs	r3, r0
 801eefa:	800b      	strh	r3, [r1, #0]
 801eefc:	e7b5      	b.n	801ee6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801eefe:	bf00      	nop
 801ef00:	200153f4 	.word	0x200153f4
 801ef04:	00fff800 	.word	0x00fff800

0801ef08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef0c:	b097      	sub	sp, #92	; 0x5c
 801ef0e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801ef12:	9214      	str	r2, [sp, #80]	; 0x50
 801ef14:	9309      	str	r3, [sp, #36]	; 0x24
 801ef16:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ef18:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ef1c:	910d      	str	r1, [sp, #52]	; 0x34
 801ef1e:	930f      	str	r3, [sp, #60]	; 0x3c
 801ef20:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801ef24:	9015      	str	r0, [sp, #84]	; 0x54
 801ef26:	6850      	ldr	r0, [r2, #4]
 801ef28:	6812      	ldr	r2, [r2, #0]
 801ef2a:	fb00 1303 	mla	r3, r0, r3, r1
 801ef2e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ef32:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ef34:	689b      	ldr	r3, [r3, #8]
 801ef36:	3301      	adds	r3, #1
 801ef38:	f023 0301 	bic.w	r3, r3, #1
 801ef3c:	930a      	str	r3, [sp, #40]	; 0x28
 801ef3e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ef40:	681f      	ldr	r7, [r3, #0]
 801ef42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ef44:	2b00      	cmp	r3, #0
 801ef46:	dc03      	bgt.n	801ef50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ef48:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ef4a:	2b00      	cmp	r3, #0
 801ef4c:	f340 8287 	ble.w	801f45e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801ef50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ef52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ef5a:	1e48      	subs	r0, r1, #1
 801ef5c:	f102 3cff 	add.w	ip, r2, #4294967295
 801ef60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef62:	2b00      	cmp	r3, #0
 801ef64:	f340 80c4 	ble.w	801f0f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ef68:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ef6c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ef70:	d406      	bmi.n	801ef80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ef72:	4586      	cmp	lr, r0
 801ef74:	da04      	bge.n	801ef80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ef76:	2b00      	cmp	r3, #0
 801ef78:	db02      	blt.n	801ef80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ef7a:	4563      	cmp	r3, ip
 801ef7c:	f2c0 80b9 	blt.w	801f0f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ef80:	f11e 0e01 	adds.w	lr, lr, #1
 801ef84:	f100 80aa 	bmi.w	801f0dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ef88:	4571      	cmp	r1, lr
 801ef8a:	f2c0 80a7 	blt.w	801f0dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ef8e:	3301      	adds	r3, #1
 801ef90:	f100 80a4 	bmi.w	801f0dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ef94:	429a      	cmp	r2, r3
 801ef96:	f2c0 80a1 	blt.w	801f0dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ef9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef9c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801efa0:	930e      	str	r3, [sp, #56]	; 0x38
 801efa2:	46c8      	mov	r8, r9
 801efa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801efa6:	2b00      	cmp	r3, #0
 801efa8:	f340 80c3 	ble.w	801f132 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801efac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801efae:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801efb2:	1423      	asrs	r3, r4, #16
 801efb4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801efb8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801efbc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801efc0:	f100 814d 	bmi.w	801f25e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801efc4:	f10c 3bff 	add.w	fp, ip, #4294967295
 801efc8:	455b      	cmp	r3, fp
 801efca:	f280 8148 	bge.w	801f25e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801efce:	2800      	cmp	r0, #0
 801efd0:	f2c0 8145 	blt.w	801f25e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801efd4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801efd8:	4558      	cmp	r0, fp
 801efda:	f280 8140 	bge.w	801f25e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801efde:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801efe0:	fb00 3305 	mla	r3, r0, r5, r3
 801efe4:	0858      	lsrs	r0, r3, #1
 801efe6:	07dd      	lsls	r5, r3, #31
 801efe8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801efec:	bf54      	ite	pl
 801efee:	f00c 0c0f 	andpl.w	ip, ip, #15
 801eff2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801eff6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801effa:	fa5f fc8c 	uxtb.w	ip, ip
 801effe:	2a00      	cmp	r2, #0
 801f000:	f000 80db 	beq.w	801f1ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f004:	1c58      	adds	r0, r3, #1
 801f006:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f00a:	07c0      	lsls	r0, r0, #31
 801f00c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f010:	bf54      	ite	pl
 801f012:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f016:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f01a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f01e:	fa5f f08e 	uxtb.w	r0, lr
 801f022:	9010      	str	r0, [sp, #64]	; 0x40
 801f024:	b1c9      	cbz	r1, 801f05a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f026:	4453      	add	r3, sl
 801f028:	0858      	lsrs	r0, r3, #1
 801f02a:	07dd      	lsls	r5, r3, #31
 801f02c:	5c38      	ldrb	r0, [r7, r0]
 801f02e:	bf54      	ite	pl
 801f030:	f000 000f 	andpl.w	r0, r0, #15
 801f034:	1100      	asrmi	r0, r0, #4
 801f036:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f03a:	3301      	adds	r3, #1
 801f03c:	b2c0      	uxtb	r0, r0
 801f03e:	900b      	str	r0, [sp, #44]	; 0x2c
 801f040:	0858      	lsrs	r0, r3, #1
 801f042:	07dd      	lsls	r5, r3, #31
 801f044:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f048:	bf54      	ite	pl
 801f04a:	f00e 030f 	andpl.w	r3, lr, #15
 801f04e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f052:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f056:	b2db      	uxtb	r3, r3
 801f058:	9311      	str	r3, [sp, #68]	; 0x44
 801f05a:	b292      	uxth	r2, r2
 801f05c:	b289      	uxth	r1, r1
 801f05e:	fb02 f301 	mul.w	r3, r2, r1
 801f062:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f066:	0112      	lsls	r2, r2, #4
 801f068:	b289      	uxth	r1, r1
 801f06a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f06e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f070:	1ad2      	subs	r2, r2, r3
 801f072:	1a40      	subs	r0, r0, r1
 801f074:	b292      	uxth	r2, r2
 801f076:	436a      	muls	r2, r5
 801f078:	b280      	uxth	r0, r0
 801f07a:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f07e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f080:	fb01 c102 	mla	r1, r1, r2, ip
 801f084:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f086:	fb03 1302 	mla	r3, r3, r2, r1
 801f08a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f08e:	b1db      	cbz	r3, 801f0c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f090:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f092:	4353      	muls	r3, r2
 801f094:	1c5a      	adds	r2, r3, #1
 801f096:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f09a:	4ac6      	ldr	r2, [pc, #792]	; (801f3b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f09c:	121b      	asrs	r3, r3, #8
 801f09e:	6812      	ldr	r2, [r2, #0]
 801f0a0:	2bff      	cmp	r3, #255	; 0xff
 801f0a2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f0a6:	f040 8099 	bne.w	801f1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f0aa:	0953      	lsrs	r3, r2, #5
 801f0ac:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f0b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f0b4:	f02c 0c07 	bic.w	ip, ip, #7
 801f0b8:	ea43 0c0c 	orr.w	ip, r3, ip
 801f0bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f0c0:	ea4c 0202 	orr.w	r2, ip, r2
 801f0c4:	f8a8 2000 	strh.w	r2, [r8]
 801f0c8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f0ca:	441c      	add	r4, r3
 801f0cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f0ce:	441e      	add	r6, r3
 801f0d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f0d2:	3b01      	subs	r3, #1
 801f0d4:	f108 0802 	add.w	r8, r8, #2
 801f0d8:	930e      	str	r3, [sp, #56]	; 0x38
 801f0da:	e763      	b.n	801efa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f0dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f0de:	441c      	add	r4, r3
 801f0e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f0e2:	441e      	add	r6, r3
 801f0e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0e6:	3b01      	subs	r3, #1
 801f0e8:	9309      	str	r3, [sp, #36]	; 0x24
 801f0ea:	f109 0902 	add.w	r9, r9, #2
 801f0ee:	e737      	b.n	801ef60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f0f0:	d024      	beq.n	801f13c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f0f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0f4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f0f6:	3b01      	subs	r3, #1
 801f0f8:	fb00 4003 	mla	r0, r0, r3, r4
 801f0fc:	1400      	asrs	r0, r0, #16
 801f0fe:	f53f af4c 	bmi.w	801ef9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f102:	3901      	subs	r1, #1
 801f104:	4288      	cmp	r0, r1
 801f106:	f6bf af48 	bge.w	801ef9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f10a:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f10c:	fb01 6303 	mla	r3, r1, r3, r6
 801f110:	141b      	asrs	r3, r3, #16
 801f112:	f53f af42 	bmi.w	801ef9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f116:	3a01      	subs	r2, #1
 801f118:	4293      	cmp	r3, r2
 801f11a:	f6bf af3e 	bge.w	801ef9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f11e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f122:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f126:	930e      	str	r3, [sp, #56]	; 0x38
 801f128:	46c8      	mov	r8, r9
 801f12a:	f1bb 0f00 	cmp.w	fp, #0
 801f12e:	f300 80b7 	bgt.w	801f2a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f132:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f134:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f138:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f13c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f13e:	2b00      	cmp	r3, #0
 801f140:	f340 818d 	ble.w	801f45e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f144:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f148:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f14c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f150:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f152:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f156:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f15a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f15e:	eef0 6a62 	vmov.f32	s13, s5
 801f162:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f166:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f16a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f16e:	ee16 4a90 	vmov	r4, s13
 801f172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f176:	eef0 6a43 	vmov.f32	s13, s6
 801f17a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f17e:	ee12 2a90 	vmov	r2, s5
 801f182:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f186:	fb92 f3f3 	sdiv	r3, r2, r3
 801f18a:	ee13 2a10 	vmov	r2, s6
 801f18e:	9323      	str	r3, [sp, #140]	; 0x8c
 801f190:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f192:	fb92 f3f3 	sdiv	r3, r2, r3
 801f196:	9324      	str	r3, [sp, #144]	; 0x90
 801f198:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f19a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f19c:	3b01      	subs	r3, #1
 801f19e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1a2:	930d      	str	r3, [sp, #52]	; 0x34
 801f1a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f1a6:	bf08      	it	eq
 801f1a8:	4613      	moveq	r3, r2
 801f1aa:	ee16 6a90 	vmov	r6, s13
 801f1ae:	9309      	str	r3, [sp, #36]	; 0x24
 801f1b0:	eeb0 3a67 	vmov.f32	s6, s15
 801f1b4:	eef0 2a47 	vmov.f32	s5, s14
 801f1b8:	e6c3      	b.n	801ef42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f1ba:	2900      	cmp	r1, #0
 801f1bc:	f43f af4d 	beq.w	801f05a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f1c0:	eb0a 0003 	add.w	r0, sl, r3
 801f1c4:	0843      	lsrs	r3, r0, #1
 801f1c6:	07c0      	lsls	r0, r0, #31
 801f1c8:	5cfb      	ldrb	r3, [r7, r3]
 801f1ca:	bf54      	ite	pl
 801f1cc:	f003 030f 	andpl.w	r3, r3, #15
 801f1d0:	111b      	asrmi	r3, r3, #4
 801f1d2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f1d6:	b2db      	uxtb	r3, r3
 801f1d8:	930b      	str	r3, [sp, #44]	; 0x2c
 801f1da:	e73e      	b.n	801f05a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f1dc:	f8b8 e000 	ldrh.w	lr, [r8]
 801f1e0:	fa1f fb83 	uxth.w	fp, r3
 801f1e4:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f1e8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f1ec:	43db      	mvns	r3, r3
 801f1ee:	b2db      	uxtb	r3, r3
 801f1f0:	fb11 f10b 	smulbb	r1, r1, fp
 801f1f4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f1f8:	fb00 1003 	mla	r0, r0, r3, r1
 801f1fc:	fa5f fc8c 	uxtb.w	ip, ip
 801f200:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f204:	b2d2      	uxtb	r2, r2
 801f206:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f20a:	b280      	uxth	r0, r0
 801f20c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f210:	fb1c fc0b 	smulbb	ip, ip, fp
 801f214:	fa5f fe8e 	uxtb.w	lr, lr
 801f218:	fb12 fb0b 	smulbb	fp, r2, fp
 801f21c:	fb01 cc03 	mla	ip, r1, r3, ip
 801f220:	fb0e bb03 	mla	fp, lr, r3, fp
 801f224:	1c43      	adds	r3, r0, #1
 801f226:	fa1f fc8c 	uxth.w	ip, ip
 801f22a:	fa1f fb8b 	uxth.w	fp, fp
 801f22e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f232:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f236:	f10c 0101 	add.w	r1, ip, #1
 801f23a:	f10b 0001 	add.w	r0, fp, #1
 801f23e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f242:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f246:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f24a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f24e:	4318      	orrs	r0, r3
 801f250:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f254:	ea40 000c 	orr.w	r0, r0, ip
 801f258:	f8a8 0000 	strh.w	r0, [r8]
 801f25c:	e734      	b.n	801f0c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f25e:	f113 0b01 	adds.w	fp, r3, #1
 801f262:	f53f af31 	bmi.w	801f0c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f266:	45dc      	cmp	ip, fp
 801f268:	f6ff af2e 	blt.w	801f0c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f26c:	f110 0b01 	adds.w	fp, r0, #1
 801f270:	f53f af2a 	bmi.w	801f0c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f274:	45de      	cmp	lr, fp
 801f276:	f6ff af27 	blt.w	801f0c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f27a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f27c:	9302      	str	r3, [sp, #8]
 801f27e:	fa0f f38e 	sxth.w	r3, lr
 801f282:	9301      	str	r3, [sp, #4]
 801f284:	fa0f f38c 	sxth.w	r3, ip
 801f288:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f28c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f290:	9300      	str	r3, [sp, #0]
 801f292:	463a      	mov	r2, r7
 801f294:	4653      	mov	r3, sl
 801f296:	4641      	mov	r1, r8
 801f298:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f29a:	f7ff fd4d 	bl	801ed38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f29e:	e713      	b.n	801f0c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f2a0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f2a2:	1422      	asrs	r2, r4, #16
 801f2a4:	1433      	asrs	r3, r6, #16
 801f2a6:	fb05 2303 	mla	r3, r5, r3, r2
 801f2aa:	085a      	lsrs	r2, r3, #1
 801f2ac:	07dd      	lsls	r5, r3, #31
 801f2ae:	5cba      	ldrb	r2, [r7, r2]
 801f2b0:	bf54      	ite	pl
 801f2b2:	f002 020f 	andpl.w	r2, r2, #15
 801f2b6:	1112      	asrmi	r2, r2, #4
 801f2b8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f2bc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f2c0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f2c4:	b2d2      	uxtb	r2, r2
 801f2c6:	2900      	cmp	r1, #0
 801f2c8:	d076      	beq.n	801f3b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f2ca:	f103 0e01 	add.w	lr, r3, #1
 801f2ce:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f2d2:	f01e 0f01 	tst.w	lr, #1
 801f2d6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f2da:	bf0c      	ite	eq
 801f2dc:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f2e0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f2e4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f2e8:	fa5f f58c 	uxtb.w	r5, ip
 801f2ec:	9512      	str	r5, [sp, #72]	; 0x48
 801f2ee:	b300      	cbz	r0, 801f332 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f2f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f2f2:	442b      	add	r3, r5
 801f2f4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f2f8:	07dd      	lsls	r5, r3, #31
 801f2fa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f2fe:	bf54      	ite	pl
 801f300:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f304:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f308:	3301      	adds	r3, #1
 801f30a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f30e:	fa5f f58c 	uxtb.w	r5, ip
 801f312:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f316:	950c      	str	r5, [sp, #48]	; 0x30
 801f318:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f31c:	07dd      	lsls	r5, r3, #31
 801f31e:	bf54      	ite	pl
 801f320:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f324:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f328:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f32c:	fa5f f38c 	uxtb.w	r3, ip
 801f330:	9313      	str	r3, [sp, #76]	; 0x4c
 801f332:	b289      	uxth	r1, r1
 801f334:	b280      	uxth	r0, r0
 801f336:	fb01 f300 	mul.w	r3, r1, r0
 801f33a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f33e:	0109      	lsls	r1, r1, #4
 801f340:	b280      	uxth	r0, r0
 801f342:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f346:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f348:	1ac9      	subs	r1, r1, r3
 801f34a:	ebac 0c00 	sub.w	ip, ip, r0
 801f34e:	b289      	uxth	r1, r1
 801f350:	4369      	muls	r1, r5
 801f352:	fa1f fc8c 	uxth.w	ip, ip
 801f356:	fb02 120c 	mla	r2, r2, ip, r1
 801f35a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f35c:	fb00 2001 	mla	r0, r0, r1, r2
 801f360:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f362:	fb03 0302 	mla	r3, r3, r2, r0
 801f366:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f36a:	b1d3      	cbz	r3, 801f3a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f36c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f36e:	4353      	muls	r3, r2
 801f370:	1c5a      	adds	r2, r3, #1
 801f372:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f376:	4a0f      	ldr	r2, [pc, #60]	; (801f3b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f378:	121b      	asrs	r3, r3, #8
 801f37a:	6812      	ldr	r2, [r2, #0]
 801f37c:	2bff      	cmp	r3, #255	; 0xff
 801f37e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f382:	d12d      	bne.n	801f3e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f384:	0953      	lsrs	r3, r2, #5
 801f386:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f38a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f38e:	f02c 0c07 	bic.w	ip, ip, #7
 801f392:	ea43 0c0c 	orr.w	ip, r3, ip
 801f396:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f39a:	ea4c 0202 	orr.w	r2, ip, r2
 801f39e:	f8a8 2000 	strh.w	r2, [r8]
 801f3a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f3a4:	441c      	add	r4, r3
 801f3a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f3a8:	f108 0802 	add.w	r8, r8, #2
 801f3ac:	441e      	add	r6, r3
 801f3ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f3b2:	e6ba      	b.n	801f12a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f3b4:	200153f4 	.word	0x200153f4
 801f3b8:	2800      	cmp	r0, #0
 801f3ba:	d0ba      	beq.n	801f332 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f3bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f3be:	442b      	add	r3, r5
 801f3c0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f3c4:	07db      	lsls	r3, r3, #31
 801f3c6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f3ca:	bf54      	ite	pl
 801f3cc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f3d0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f3d4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f3d8:	fa5f f38c 	uxtb.w	r3, ip
 801f3dc:	930c      	str	r3, [sp, #48]	; 0x30
 801f3de:	e7a8      	b.n	801f332 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f3e0:	f8b8 e000 	ldrh.w	lr, [r8]
 801f3e4:	fa1f fa83 	uxth.w	sl, r3
 801f3e8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f3ec:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f3f0:	43db      	mvns	r3, r3
 801f3f2:	b2db      	uxtb	r3, r3
 801f3f4:	fb11 f10a 	smulbb	r1, r1, sl
 801f3f8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f3fc:	fb00 1003 	mla	r0, r0, r3, r1
 801f400:	b2d2      	uxtb	r2, r2
 801f402:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f406:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f40a:	fa5f fe8e 	uxtb.w	lr, lr
 801f40e:	fb12 f20a 	smulbb	r2, r2, sl
 801f412:	fb0e 2203 	mla	r2, lr, r3, r2
 801f416:	fa5f fc8c 	uxtb.w	ip, ip
 801f41a:	b280      	uxth	r0, r0
 801f41c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f420:	b292      	uxth	r2, r2
 801f422:	fb1c fc0a 	smulbb	ip, ip, sl
 801f426:	fb01 cc03 	mla	ip, r1, r3, ip
 801f42a:	1c43      	adds	r3, r0, #1
 801f42c:	1c51      	adds	r1, r2, #1
 801f42e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f432:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f436:	fa1f fc8c 	uxth.w	ip, ip
 801f43a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f43e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f442:	4308      	orrs	r0, r1
 801f444:	f10c 0101 	add.w	r1, ip, #1
 801f448:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f44c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f450:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f454:	ea40 000c 	orr.w	r0, r0, ip
 801f458:	f8a8 0000 	strh.w	r0, [r8]
 801f45c:	e7a1      	b.n	801f3a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f45e:	b017      	add	sp, #92	; 0x5c
 801f460:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f464 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f464:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f468:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f46c:	2d00      	cmp	r5, #0
 801f46e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f472:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f476:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f47a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f47e:	fb05 0e03 	mla	lr, r5, r3, r0
 801f482:	f2c0 80b0 	blt.w	801f5e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f486:	45a9      	cmp	r9, r5
 801f488:	f340 80ad 	ble.w	801f5e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f48c:	2800      	cmp	r0, #0
 801f48e:	f2c0 80a8 	blt.w	801f5e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f492:	4580      	cmp	r8, r0
 801f494:	f340 80a5 	ble.w	801f5e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f498:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f49c:	f01e 0f01 	tst.w	lr, #1
 801f4a0:	5d16      	ldrb	r6, [r2, r4]
 801f4a2:	bf0c      	ite	eq
 801f4a4:	f006 060f 	andeq.w	r6, r6, #15
 801f4a8:	1136      	asrne	r6, r6, #4
 801f4aa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f4ae:	b2f6      	uxtb	r6, r6
 801f4b0:	1c44      	adds	r4, r0, #1
 801f4b2:	f100 809b 	bmi.w	801f5ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f4b6:	45a0      	cmp	r8, r4
 801f4b8:	f340 8098 	ble.w	801f5ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f4bc:	2f00      	cmp	r7, #0
 801f4be:	f000 8097 	beq.w	801f5f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f4c2:	f10e 0a01 	add.w	sl, lr, #1
 801f4c6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f4ca:	f01a 0f01 	tst.w	sl, #1
 801f4ce:	5d14      	ldrb	r4, [r2, r4]
 801f4d0:	bf0c      	ite	eq
 801f4d2:	f004 040f 	andeq.w	r4, r4, #15
 801f4d6:	1124      	asrne	r4, r4, #4
 801f4d8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f4dc:	b2e4      	uxtb	r4, r4
 801f4de:	3501      	adds	r5, #1
 801f4e0:	f100 808a 	bmi.w	801f5f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f4e4:	45a9      	cmp	r9, r5
 801f4e6:	f340 8087 	ble.w	801f5f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f4ea:	f1bc 0f00 	cmp.w	ip, #0
 801f4ee:	f000 8086 	beq.w	801f5fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f4f2:	2800      	cmp	r0, #0
 801f4f4:	db7e      	blt.n	801f5f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f4f6:	4580      	cmp	r8, r0
 801f4f8:	dd7c      	ble.n	801f5f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f4fa:	eb03 090e 	add.w	r9, r3, lr
 801f4fe:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f502:	f019 0f01 	tst.w	r9, #1
 801f506:	5d55      	ldrb	r5, [r2, r5]
 801f508:	bf0c      	ite	eq
 801f50a:	f005 050f 	andeq.w	r5, r5, #15
 801f50e:	112d      	asrne	r5, r5, #4
 801f510:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f514:	b2ed      	uxtb	r5, r5
 801f516:	3001      	adds	r0, #1
 801f518:	d474      	bmi.n	801f604 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f51a:	4580      	cmp	r8, r0
 801f51c:	dd72      	ble.n	801f604 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f51e:	2f00      	cmp	r7, #0
 801f520:	d072      	beq.n	801f608 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f522:	3301      	adds	r3, #1
 801f524:	449e      	add	lr, r3
 801f526:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f52a:	f01e 0f01 	tst.w	lr, #1
 801f52e:	5cd0      	ldrb	r0, [r2, r3]
 801f530:	bf0c      	ite	eq
 801f532:	f000 000f 	andeq.w	r0, r0, #15
 801f536:	1100      	asrne	r0, r0, #4
 801f538:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f53c:	b2c3      	uxtb	r3, r0
 801f53e:	b2ba      	uxth	r2, r7
 801f540:	fa1f fc8c 	uxth.w	ip, ip
 801f544:	fb02 f00c 	mul.w	r0, r2, ip
 801f548:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f54c:	0112      	lsls	r2, r2, #4
 801f54e:	fa1f fc8c 	uxth.w	ip, ip
 801f552:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f556:	1a12      	subs	r2, r2, r0
 801f558:	eba7 070c 	sub.w	r7, r7, ip
 801f55c:	b292      	uxth	r2, r2
 801f55e:	b2bf      	uxth	r7, r7
 801f560:	4362      	muls	r2, r4
 801f562:	fb06 2207 	mla	r2, r6, r7, r2
 801f566:	fb0c 2505 	mla	r5, ip, r5, r2
 801f56a:	fb00 5303 	mla	r3, r0, r3, r5
 801f56e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f572:	b3a3      	cbz	r3, 801f5de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f574:	4a25      	ldr	r2, [pc, #148]	; (801f60c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f576:	880e      	ldrh	r6, [r1, #0]
 801f578:	6815      	ldr	r5, [r2, #0]
 801f57a:	1234      	asrs	r4, r6, #8
 801f57c:	b29a      	uxth	r2, r3
 801f57e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f582:	43db      	mvns	r3, r3
 801f584:	b2db      	uxtb	r3, r3
 801f586:	fb10 f002 	smulbb	r0, r0, r2
 801f58a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f58e:	fb04 0403 	mla	r4, r4, r3, r0
 801f592:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f596:	10f0      	asrs	r0, r6, #3
 801f598:	b2ed      	uxtb	r5, r5
 801f59a:	00f6      	lsls	r6, r6, #3
 801f59c:	fb17 f702 	smulbb	r7, r7, r2
 801f5a0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f5a4:	fb15 f202 	smulbb	r2, r5, r2
 801f5a8:	b2f6      	uxtb	r6, r6
 801f5aa:	b2a4      	uxth	r4, r4
 801f5ac:	fb00 7003 	mla	r0, r0, r3, r7
 801f5b0:	fb06 2303 	mla	r3, r6, r3, r2
 801f5b4:	b29a      	uxth	r2, r3
 801f5b6:	1c63      	adds	r3, r4, #1
 801f5b8:	b280      	uxth	r0, r0
 801f5ba:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f5be:	1c53      	adds	r3, r2, #1
 801f5c0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f5c4:	1c42      	adds	r2, r0, #1
 801f5c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f5ca:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f5ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f5d2:	0940      	lsrs	r0, r0, #5
 801f5d4:	4323      	orrs	r3, r4
 801f5d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f5da:	4303      	orrs	r3, r0
 801f5dc:	800b      	strh	r3, [r1, #0]
 801f5de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f5e2:	2600      	movs	r6, #0
 801f5e4:	e764      	b.n	801f4b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f5e6:	2400      	movs	r4, #0
 801f5e8:	4626      	mov	r6, r4
 801f5ea:	e778      	b.n	801f4de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f5ec:	2400      	movs	r4, #0
 801f5ee:	e776      	b.n	801f4de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f5f0:	463c      	mov	r4, r7
 801f5f2:	e774      	b.n	801f4de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f5f4:	2500      	movs	r5, #0
 801f5f6:	e78e      	b.n	801f516 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f5f8:	2300      	movs	r3, #0
 801f5fa:	461d      	mov	r5, r3
 801f5fc:	e79f      	b.n	801f53e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f5fe:	4663      	mov	r3, ip
 801f600:	4665      	mov	r5, ip
 801f602:	e79c      	b.n	801f53e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f604:	2300      	movs	r3, #0
 801f606:	e79a      	b.n	801f53e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f608:	463b      	mov	r3, r7
 801f60a:	e798      	b.n	801f53e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f60c:	200153f4 	.word	0x200153f4

0801f610 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f614:	b093      	sub	sp, #76	; 0x4c
 801f616:	461d      	mov	r5, r3
 801f618:	920c      	str	r2, [sp, #48]	; 0x30
 801f61a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f61c:	9107      	str	r1, [sp, #28]
 801f61e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f622:	9011      	str	r0, [sp, #68]	; 0x44
 801f624:	6850      	ldr	r0, [r2, #4]
 801f626:	6812      	ldr	r2, [r2, #0]
 801f628:	fb00 1303 	mla	r3, r0, r3, r1
 801f62c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f630:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f632:	689b      	ldr	r3, [r3, #8]
 801f634:	3301      	adds	r3, #1
 801f636:	f023 0301 	bic.w	r3, r3, #1
 801f63a:	9306      	str	r3, [sp, #24]
 801f63c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f63e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f642:	681f      	ldr	r7, [r3, #0]
 801f644:	9b07      	ldr	r3, [sp, #28]
 801f646:	2b00      	cmp	r3, #0
 801f648:	dc03      	bgt.n	801f652 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f64a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f64c:	2b00      	cmp	r3, #0
 801f64e:	f340 8267 	ble.w	801fb20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f652:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f654:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f658:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f65c:	1e48      	subs	r0, r1, #1
 801f65e:	f102 3cff 	add.w	ip, r2, #4294967295
 801f662:	2d00      	cmp	r5, #0
 801f664:	f340 80b8 	ble.w	801f7d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f668:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f66c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f670:	d406      	bmi.n	801f680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f672:	4586      	cmp	lr, r0
 801f674:	da04      	bge.n	801f680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f676:	2b00      	cmp	r3, #0
 801f678:	db02      	blt.n	801f680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f67a:	4563      	cmp	r3, ip
 801f67c:	f2c0 80ad 	blt.w	801f7da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801f680:	f11e 0e01 	adds.w	lr, lr, #1
 801f684:	f100 80a0 	bmi.w	801f7c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f688:	4571      	cmp	r1, lr
 801f68a:	f2c0 809d 	blt.w	801f7c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f68e:	3301      	adds	r3, #1
 801f690:	f100 809a 	bmi.w	801f7c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f694:	429a      	cmp	r2, r3
 801f696:	f2c0 8097 	blt.w	801f7c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f69a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801f69e:	9509      	str	r5, [sp, #36]	; 0x24
 801f6a0:	46c8      	mov	r8, r9
 801f6a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6a4:	2b00      	cmp	r3, #0
 801f6a6:	f340 80b6 	ble.w	801f816 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801f6aa:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f6ae:	9308      	str	r3, [sp, #32]
 801f6b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6b2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f6b6:	1423      	asrs	r3, r4, #16
 801f6b8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f6bc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f6c0:	f100 813e 	bmi.w	801f940 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f6c4:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f6c8:	455b      	cmp	r3, fp
 801f6ca:	f280 8139 	bge.w	801f940 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f6ce:	2800      	cmp	r0, #0
 801f6d0:	f2c0 8136 	blt.w	801f940 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f6d4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f6d8:	4558      	cmp	r0, fp
 801f6da:	f280 8131 	bge.w	801f940 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f6de:	9a06      	ldr	r2, [sp, #24]
 801f6e0:	fb00 3302 	mla	r3, r0, r2, r3
 801f6e4:	0858      	lsrs	r0, r3, #1
 801f6e6:	07da      	lsls	r2, r3, #31
 801f6e8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f6ec:	9a08      	ldr	r2, [sp, #32]
 801f6ee:	bf54      	ite	pl
 801f6f0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f6f4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f6f8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f6fc:	fa5f fc8c 	uxtb.w	ip, ip
 801f700:	2a00      	cmp	r2, #0
 801f702:	f000 80cb 	beq.w	801f89c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f706:	1c58      	adds	r0, r3, #1
 801f708:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f70c:	07c0      	lsls	r0, r0, #31
 801f70e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f712:	bf54      	ite	pl
 801f714:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f718:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f71c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f720:	fa5f fe8e 	uxtb.w	lr, lr
 801f724:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801f728:	b1b9      	cbz	r1, 801f75a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f72a:	4453      	add	r3, sl
 801f72c:	0858      	lsrs	r0, r3, #1
 801f72e:	07da      	lsls	r2, r3, #31
 801f730:	5c38      	ldrb	r0, [r7, r0]
 801f732:	bf54      	ite	pl
 801f734:	f000 000f 	andpl.w	r0, r0, #15
 801f738:	1100      	asrmi	r0, r0, #4
 801f73a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f73e:	b2c0      	uxtb	r0, r0
 801f740:	900a      	str	r0, [sp, #40]	; 0x28
 801f742:	1c58      	adds	r0, r3, #1
 801f744:	0843      	lsrs	r3, r0, #1
 801f746:	07c2      	lsls	r2, r0, #31
 801f748:	5cfb      	ldrb	r3, [r7, r3]
 801f74a:	bf54      	ite	pl
 801f74c:	f003 030f 	andpl.w	r3, r3, #15
 801f750:	111b      	asrmi	r3, r3, #4
 801f752:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f756:	b2db      	uxtb	r3, r3
 801f758:	930e      	str	r3, [sp, #56]	; 0x38
 801f75a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f75e:	b289      	uxth	r1, r1
 801f760:	fb02 f301 	mul.w	r3, r2, r1
 801f764:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f768:	0112      	lsls	r2, r2, #4
 801f76a:	b289      	uxth	r1, r1
 801f76c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f770:	1a40      	subs	r0, r0, r1
 801f772:	fa1f fe80 	uxth.w	lr, r0
 801f776:	1ad2      	subs	r2, r2, r3
 801f778:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f77a:	b292      	uxth	r2, r2
 801f77c:	4342      	muls	r2, r0
 801f77e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801f782:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f784:	fb01 c102 	mla	r1, r1, r2, ip
 801f788:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f78a:	fb03 1302 	mla	r3, r3, r2, r1
 801f78e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f792:	2bff      	cmp	r3, #255	; 0xff
 801f794:	f040 8093 	bne.w	801f8be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f798:	4bbe      	ldr	r3, [pc, #760]	; (801fa94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f79a:	681a      	ldr	r2, [r3, #0]
 801f79c:	4bbe      	ldr	r3, [pc, #760]	; (801fa98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f79e:	0951      	lsrs	r1, r2, #5
 801f7a0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f7a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f7a8:	430b      	orrs	r3, r1
 801f7aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f7ae:	4313      	orrs	r3, r2
 801f7b0:	f8a8 3000 	strh.w	r3, [r8]
 801f7b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f7b6:	441c      	add	r4, r3
 801f7b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f7ba:	441e      	add	r6, r3
 801f7bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7be:	3b01      	subs	r3, #1
 801f7c0:	f108 0802 	add.w	r8, r8, #2
 801f7c4:	9309      	str	r3, [sp, #36]	; 0x24
 801f7c6:	e76c      	b.n	801f6a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f7c8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f7ca:	441c      	add	r4, r3
 801f7cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f7ce:	3d01      	subs	r5, #1
 801f7d0:	441e      	add	r6, r3
 801f7d2:	f109 0902 	add.w	r9, r9, #2
 801f7d6:	e744      	b.n	801f662 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f7d8:	d021      	beq.n	801f81e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f7da:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f7dc:	1e6b      	subs	r3, r5, #1
 801f7de:	fb00 4003 	mla	r0, r0, r3, r4
 801f7e2:	1400      	asrs	r0, r0, #16
 801f7e4:	f53f af59 	bmi.w	801f69a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f7e8:	3901      	subs	r1, #1
 801f7ea:	4288      	cmp	r0, r1
 801f7ec:	f6bf af55 	bge.w	801f69a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f7f0:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f7f2:	fb01 6303 	mla	r3, r1, r3, r6
 801f7f6:	141b      	asrs	r3, r3, #16
 801f7f8:	f53f af4f 	bmi.w	801f69a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f7fc:	3a01      	subs	r2, #1
 801f7fe:	4293      	cmp	r3, r2
 801f800:	f6bf af4b 	bge.w	801f69a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f804:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801f808:	9308      	str	r3, [sp, #32]
 801f80a:	46a8      	mov	r8, r5
 801f80c:	46ce      	mov	lr, r9
 801f80e:	f1b8 0f00 	cmp.w	r8, #0
 801f812:	f300 80b5 	bgt.w	801f980 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f816:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f81a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f81e:	9b07      	ldr	r3, [sp, #28]
 801f820:	2b00      	cmp	r3, #0
 801f822:	f340 817d 	ble.w	801fb20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f826:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f82a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f82e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f832:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f834:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f838:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f83c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f840:	eef0 6a62 	vmov.f32	s13, s5
 801f844:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f848:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f84c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f850:	ee16 4a90 	vmov	r4, s13
 801f854:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f858:	eef0 6a43 	vmov.f32	s13, s6
 801f85c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f860:	ee12 2a90 	vmov	r2, s5
 801f864:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f868:	fb92 f3f3 	sdiv	r3, r2, r3
 801f86c:	ee13 2a10 	vmov	r2, s6
 801f870:	931f      	str	r3, [sp, #124]	; 0x7c
 801f872:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f874:	fb92 f3f3 	sdiv	r3, r2, r3
 801f878:	9320      	str	r3, [sp, #128]	; 0x80
 801f87a:	9b07      	ldr	r3, [sp, #28]
 801f87c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f87e:	3b01      	subs	r3, #1
 801f880:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f884:	9307      	str	r3, [sp, #28]
 801f886:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f888:	ee16 6a90 	vmov	r6, s13
 801f88c:	bf14      	ite	ne
 801f88e:	461d      	movne	r5, r3
 801f890:	4615      	moveq	r5, r2
 801f892:	eeb0 3a67 	vmov.f32	s6, s15
 801f896:	eef0 2a47 	vmov.f32	s5, s14
 801f89a:	e6d3      	b.n	801f644 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f89c:	2900      	cmp	r1, #0
 801f89e:	f43f af5c 	beq.w	801f75a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f8a2:	eb0a 0003 	add.w	r0, sl, r3
 801f8a6:	0843      	lsrs	r3, r0, #1
 801f8a8:	07c0      	lsls	r0, r0, #31
 801f8aa:	5cfb      	ldrb	r3, [r7, r3]
 801f8ac:	bf54      	ite	pl
 801f8ae:	f003 030f 	andpl.w	r3, r3, #15
 801f8b2:	111b      	asrmi	r3, r3, #4
 801f8b4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f8b8:	b2db      	uxtb	r3, r3
 801f8ba:	930a      	str	r3, [sp, #40]	; 0x28
 801f8bc:	e74d      	b.n	801f75a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f8be:	2b00      	cmp	r3, #0
 801f8c0:	f43f af78 	beq.w	801f7b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f8c4:	4a73      	ldr	r2, [pc, #460]	; (801fa94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f8c6:	f8b8 c000 	ldrh.w	ip, [r8]
 801f8ca:	6810      	ldr	r0, [r2, #0]
 801f8cc:	fa1f fe83 	uxth.w	lr, r3
 801f8d0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801f8d4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801f8d8:	43db      	mvns	r3, r3
 801f8da:	b2db      	uxtb	r3, r3
 801f8dc:	fb12 f20e 	smulbb	r2, r2, lr
 801f8e0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f8e4:	fb01 2103 	mla	r1, r1, r3, r2
 801f8e8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801f8ec:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f8f0:	b2c0      	uxtb	r0, r0
 801f8f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f8f6:	fb1b fb0e 	smulbb	fp, fp, lr
 801f8fa:	b289      	uxth	r1, r1
 801f8fc:	fb10 fe0e 	smulbb	lr, r0, lr
 801f900:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f904:	fa5f fc8c 	uxtb.w	ip, ip
 801f908:	fb02 b203 	mla	r2, r2, r3, fp
 801f90c:	1c48      	adds	r0, r1, #1
 801f90e:	fb0c e303 	mla	r3, ip, r3, lr
 801f912:	b292      	uxth	r2, r2
 801f914:	b29b      	uxth	r3, r3
 801f916:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801f91a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801f91e:	f102 0b01 	add.w	fp, r2, #1
 801f922:	1c59      	adds	r1, r3, #1
 801f924:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f928:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801f92c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f930:	0952      	lsrs	r2, r2, #5
 801f932:	4301      	orrs	r1, r0
 801f934:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f938:	4311      	orrs	r1, r2
 801f93a:	f8a8 1000 	strh.w	r1, [r8]
 801f93e:	e739      	b.n	801f7b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f940:	f113 0b01 	adds.w	fp, r3, #1
 801f944:	f53f af36 	bmi.w	801f7b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f948:	45dc      	cmp	ip, fp
 801f94a:	f6ff af33 	blt.w	801f7b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f94e:	f110 0b01 	adds.w	fp, r0, #1
 801f952:	f53f af2f 	bmi.w	801f7b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f956:	45de      	cmp	lr, fp
 801f958:	f6ff af2c 	blt.w	801f7b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f95c:	9a08      	ldr	r2, [sp, #32]
 801f95e:	9302      	str	r3, [sp, #8]
 801f960:	fa0f f38e 	sxth.w	r3, lr
 801f964:	9301      	str	r3, [sp, #4]
 801f966:	fa0f f38c 	sxth.w	r3, ip
 801f96a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f96e:	9105      	str	r1, [sp, #20]
 801f970:	9300      	str	r3, [sp, #0]
 801f972:	463a      	mov	r2, r7
 801f974:	4653      	mov	r3, sl
 801f976:	4641      	mov	r1, r8
 801f978:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f97a:	f7ff fd73 	bl	801f464 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801f97e:	e719      	b.n	801f7b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f980:	9906      	ldr	r1, [sp, #24]
 801f982:	1422      	asrs	r2, r4, #16
 801f984:	1433      	asrs	r3, r6, #16
 801f986:	fb01 2303 	mla	r3, r1, r3, r2
 801f98a:	085a      	lsrs	r2, r3, #1
 801f98c:	07d9      	lsls	r1, r3, #31
 801f98e:	5cba      	ldrb	r2, [r7, r2]
 801f990:	bf54      	ite	pl
 801f992:	f002 020f 	andpl.w	r2, r2, #15
 801f996:	1112      	asrmi	r2, r2, #4
 801f998:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f99c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f9a0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f9a4:	b2d2      	uxtb	r2, r2
 801f9a6:	2800      	cmp	r0, #0
 801f9a8:	d062      	beq.n	801fa70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801f9aa:	f103 0a01 	add.w	sl, r3, #1
 801f9ae:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801f9b2:	f01a 0f01 	tst.w	sl, #1
 801f9b6:	5c79      	ldrb	r1, [r7, r1]
 801f9b8:	bf0c      	ite	eq
 801f9ba:	f001 010f 	andeq.w	r1, r1, #15
 801f9be:	1109      	asrne	r1, r1, #4
 801f9c0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f9c4:	b2c9      	uxtb	r1, r1
 801f9c6:	910f      	str	r1, [sp, #60]	; 0x3c
 801f9c8:	f1bc 0f00 	cmp.w	ip, #0
 801f9cc:	d019      	beq.n	801fa02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f9ce:	9908      	ldr	r1, [sp, #32]
 801f9d0:	440b      	add	r3, r1
 801f9d2:	0859      	lsrs	r1, r3, #1
 801f9d4:	f013 0f01 	tst.w	r3, #1
 801f9d8:	5c79      	ldrb	r1, [r7, r1]
 801f9da:	bf0c      	ite	eq
 801f9dc:	f001 010f 	andeq.w	r1, r1, #15
 801f9e0:	1109      	asrne	r1, r1, #4
 801f9e2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f9e6:	b2c9      	uxtb	r1, r1
 801f9e8:	3301      	adds	r3, #1
 801f9ea:	910b      	str	r1, [sp, #44]	; 0x2c
 801f9ec:	0859      	lsrs	r1, r3, #1
 801f9ee:	07db      	lsls	r3, r3, #31
 801f9f0:	5c79      	ldrb	r1, [r7, r1]
 801f9f2:	bf54      	ite	pl
 801f9f4:	f001 010f 	andpl.w	r1, r1, #15
 801f9f8:	1109      	asrmi	r1, r1, #4
 801f9fa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f9fe:	b2c9      	uxtb	r1, r1
 801fa00:	9110      	str	r1, [sp, #64]	; 0x40
 801fa02:	b280      	uxth	r0, r0
 801fa04:	fa1f fc8c 	uxth.w	ip, ip
 801fa08:	fb00 f30c 	mul.w	r3, r0, ip
 801fa0c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fa10:	0100      	lsls	r0, r0, #4
 801fa12:	fa1f fc8c 	uxth.w	ip, ip
 801fa16:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fa1a:	eba1 010c 	sub.w	r1, r1, ip
 801fa1e:	fa1f fa81 	uxth.w	sl, r1
 801fa22:	1ac0      	subs	r0, r0, r3
 801fa24:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fa26:	b280      	uxth	r0, r0
 801fa28:	4348      	muls	r0, r1
 801fa2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fa2c:	fb02 020a 	mla	r2, r2, sl, r0
 801fa30:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fa34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fa36:	fb03 c302 	mla	r3, r3, r2, ip
 801fa3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fa3e:	2bff      	cmp	r3, #255	; 0xff
 801fa40:	d12c      	bne.n	801fa9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fa42:	4b14      	ldr	r3, [pc, #80]	; (801fa94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fa44:	681a      	ldr	r2, [r3, #0]
 801fa46:	4b14      	ldr	r3, [pc, #80]	; (801fa98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fa48:	0951      	lsrs	r1, r2, #5
 801fa4a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fa4e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fa52:	430b      	orrs	r3, r1
 801fa54:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fa58:	4313      	orrs	r3, r2
 801fa5a:	f8ae 3000 	strh.w	r3, [lr]
 801fa5e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fa60:	441c      	add	r4, r3
 801fa62:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa64:	f10e 0e02 	add.w	lr, lr, #2
 801fa68:	441e      	add	r6, r3
 801fa6a:	f108 38ff 	add.w	r8, r8, #4294967295
 801fa6e:	e6ce      	b.n	801f80e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fa70:	f1bc 0f00 	cmp.w	ip, #0
 801fa74:	d0c5      	beq.n	801fa02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fa76:	9908      	ldr	r1, [sp, #32]
 801fa78:	440b      	add	r3, r1
 801fa7a:	0859      	lsrs	r1, r3, #1
 801fa7c:	07db      	lsls	r3, r3, #31
 801fa7e:	5c79      	ldrb	r1, [r7, r1]
 801fa80:	bf54      	ite	pl
 801fa82:	f001 010f 	andpl.w	r1, r1, #15
 801fa86:	1109      	asrmi	r1, r1, #4
 801fa88:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fa8c:	b2c9      	uxtb	r1, r1
 801fa8e:	910b      	str	r1, [sp, #44]	; 0x2c
 801fa90:	e7b7      	b.n	801fa02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fa92:	bf00      	nop
 801fa94:	200153f4 	.word	0x200153f4
 801fa98:	fffff800 	.word	0xfffff800
 801fa9c:	2b00      	cmp	r3, #0
 801fa9e:	d0de      	beq.n	801fa5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801faa0:	4a21      	ldr	r2, [pc, #132]	; (801fb28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801faa2:	f8be c000 	ldrh.w	ip, [lr]
 801faa6:	6810      	ldr	r0, [r2, #0]
 801faa8:	fa1f fa83 	uxth.w	sl, r3
 801faac:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fab0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fab4:	43db      	mvns	r3, r3
 801fab6:	b2db      	uxtb	r3, r3
 801fab8:	fb12 f20a 	smulbb	r2, r2, sl
 801fabc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fac0:	fb01 2103 	mla	r1, r1, r3, r2
 801fac4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fac8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801facc:	b2c0      	uxtb	r0, r0
 801face:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fad2:	fa5f fc8c 	uxtb.w	ip, ip
 801fad6:	fb10 f00a 	smulbb	r0, r0, sl
 801fada:	fb0c 0003 	mla	r0, ip, r3, r0
 801fade:	b289      	uxth	r1, r1
 801fae0:	fb1b fb0a 	smulbb	fp, fp, sl
 801fae4:	b280      	uxth	r0, r0
 801fae6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801faea:	fb02 b203 	mla	r2, r2, r3, fp
 801faee:	1c4b      	adds	r3, r1, #1
 801faf0:	f100 0b01 	add.w	fp, r0, #1
 801faf4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801faf8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fafc:	b292      	uxth	r2, r2
 801fafe:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fb02:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fb06:	ea4b 0101 	orr.w	r1, fp, r1
 801fb0a:	f102 0b01 	add.w	fp, r2, #1
 801fb0e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fb12:	0952      	lsrs	r2, r2, #5
 801fb14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb18:	4311      	orrs	r1, r2
 801fb1a:	f8ae 1000 	strh.w	r1, [lr]
 801fb1e:	e79e      	b.n	801fa5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fb20:	b013      	add	sp, #76	; 0x4c
 801fb22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb26:	bf00      	nop
 801fb28:	200153f4 	.word	0x200153f4

0801fb2c <CRC_Lock>:
 801fb2c:	b530      	push	{r4, r5, lr}
 801fb2e:	4a20      	ldr	r2, [pc, #128]	; (801fbb0 <CRC_Lock+0x84>)
 801fb30:	6813      	ldr	r3, [r2, #0]
 801fb32:	f023 0301 	bic.w	r3, r3, #1
 801fb36:	6013      	str	r3, [r2, #0]
 801fb38:	4b1e      	ldr	r3, [pc, #120]	; (801fbb4 <CRC_Lock+0x88>)
 801fb3a:	681a      	ldr	r2, [r3, #0]
 801fb3c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801fb40:	4022      	ands	r2, r4
 801fb42:	f24c 2540 	movw	r5, #49728	; 0xc240
 801fb46:	42aa      	cmp	r2, r5
 801fb48:	d005      	beq.n	801fb56 <CRC_Lock+0x2a>
 801fb4a:	681b      	ldr	r3, [r3, #0]
 801fb4c:	f24c 2270 	movw	r2, #49776	; 0xc270
 801fb50:	4023      	ands	r3, r4
 801fb52:	4293      	cmp	r3, r2
 801fb54:	d124      	bne.n	801fba0 <CRC_Lock+0x74>
 801fb56:	4b18      	ldr	r3, [pc, #96]	; (801fbb8 <CRC_Lock+0x8c>)
 801fb58:	681b      	ldr	r3, [r3, #0]
 801fb5a:	bb0b      	cbnz	r3, 801fba0 <CRC_Lock+0x74>
 801fb5c:	4b17      	ldr	r3, [pc, #92]	; (801fbbc <CRC_Lock+0x90>)
 801fb5e:	681a      	ldr	r2, [r3, #0]
 801fb60:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fb64:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801fb68:	d00d      	beq.n	801fb86 <CRC_Lock+0x5a>
 801fb6a:	681a      	ldr	r2, [r3, #0]
 801fb6c:	f240 4483 	movw	r4, #1155	; 0x483
 801fb70:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fb74:	42a2      	cmp	r2, r4
 801fb76:	d006      	beq.n	801fb86 <CRC_Lock+0x5a>
 801fb78:	681b      	ldr	r3, [r3, #0]
 801fb7a:	f240 4285 	movw	r2, #1157	; 0x485
 801fb7e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801fb82:	4293      	cmp	r3, r2
 801fb84:	d10c      	bne.n	801fba0 <CRC_Lock+0x74>
 801fb86:	4b0e      	ldr	r3, [pc, #56]	; (801fbc0 <CRC_Lock+0x94>)
 801fb88:	2201      	movs	r2, #1
 801fb8a:	601a      	str	r2, [r3, #0]
 801fb8c:	681a      	ldr	r2, [r3, #0]
 801fb8e:	2a00      	cmp	r2, #0
 801fb90:	d1fc      	bne.n	801fb8c <CRC_Lock+0x60>
 801fb92:	4b0c      	ldr	r3, [pc, #48]	; (801fbc4 <CRC_Lock+0x98>)
 801fb94:	6018      	str	r0, [r3, #0]
 801fb96:	6818      	ldr	r0, [r3, #0]
 801fb98:	1a43      	subs	r3, r0, r1
 801fb9a:	4258      	negs	r0, r3
 801fb9c:	4158      	adcs	r0, r3
 801fb9e:	bd30      	pop	{r4, r5, pc}
 801fba0:	4b09      	ldr	r3, [pc, #36]	; (801fbc8 <CRC_Lock+0x9c>)
 801fba2:	2201      	movs	r2, #1
 801fba4:	601a      	str	r2, [r3, #0]
 801fba6:	681a      	ldr	r2, [r3, #0]
 801fba8:	2a00      	cmp	r2, #0
 801fbaa:	d1fc      	bne.n	801fba6 <CRC_Lock+0x7a>
 801fbac:	4b07      	ldr	r3, [pc, #28]	; (801fbcc <CRC_Lock+0xa0>)
 801fbae:	e7f1      	b.n	801fb94 <CRC_Lock+0x68>
 801fbb0:	e0002000 	.word	0xe0002000
 801fbb4:	e000ed00 	.word	0xe000ed00
 801fbb8:	e0042000 	.word	0xe0042000
 801fbbc:	5c001000 	.word	0x5c001000
 801fbc0:	58024c08 	.word	0x58024c08
 801fbc4:	58024c00 	.word	0x58024c00
 801fbc8:	40023008 	.word	0x40023008
 801fbcc:	40023000 	.word	0x40023000

0801fbd0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801fbd0:	6101      	str	r1, [r0, #16]
 801fbd2:	4770      	bx	lr

0801fbd4 <_ZN8touchgfx8Gestures4tickEv>:
 801fbd4:	7b83      	ldrb	r3, [r0, #14]
 801fbd6:	b14b      	cbz	r3, 801fbec <_ZN8touchgfx8Gestures4tickEv+0x18>
 801fbd8:	8903      	ldrh	r3, [r0, #8]
 801fbda:	3301      	adds	r3, #1
 801fbdc:	b29b      	uxth	r3, r3
 801fbde:	2b07      	cmp	r3, #7
 801fbe0:	8103      	strh	r3, [r0, #8]
 801fbe2:	bf81      	itttt	hi
 801fbe4:	2300      	movhi	r3, #0
 801fbe6:	8143      	strhhi	r3, [r0, #10]
 801fbe8:	8183      	strhhi	r3, [r0, #12]
 801fbea:	7383      	strbhi	r3, [r0, #14]
 801fbec:	4770      	bx	lr
	...

0801fbf0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801fbf0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801fbf4:	4698      	mov	r8, r3
 801fbf6:	8883      	ldrh	r3, [r0, #4]
 801fbf8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801fbfc:	eba8 0303 	sub.w	r3, r8, r3
 801fc00:	b21b      	sxth	r3, r3
 801fc02:	4604      	mov	r4, r0
 801fc04:	2b00      	cmp	r3, #0
 801fc06:	4617      	mov	r7, r2
 801fc08:	4a18      	ldr	r2, [pc, #96]	; (801fc6c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801fc0a:	9200      	str	r2, [sp, #0]
 801fc0c:	bfb8      	it	lt
 801fc0e:	425b      	neglt	r3, r3
 801fc10:	8aa2      	ldrh	r2, [r4, #20]
 801fc12:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801fc16:	f8ad 800a 	strh.w	r8, [sp, #10]
 801fc1a:	b21b      	sxth	r3, r3
 801fc1c:	460e      	mov	r6, r1
 801fc1e:	4293      	cmp	r3, r2
 801fc20:	88c1      	ldrh	r1, [r0, #6]
 801fc22:	f8ad 1008 	strh.w	r1, [sp, #8]
 801fc26:	f04f 0000 	mov.w	r0, #0
 801fc2a:	f88d 0004 	strb.w	r0, [sp, #4]
 801fc2e:	f8ad 500c 	strh.w	r5, [sp, #12]
 801fc32:	dc07      	bgt.n	801fc44 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801fc34:	1a69      	subs	r1, r5, r1
 801fc36:	b209      	sxth	r1, r1
 801fc38:	2900      	cmp	r1, #0
 801fc3a:	bfb8      	it	lt
 801fc3c:	4249      	neglt	r1, r1
 801fc3e:	b209      	sxth	r1, r1
 801fc40:	428a      	cmp	r2, r1
 801fc42:	da10      	bge.n	801fc66 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801fc44:	6920      	ldr	r0, [r4, #16]
 801fc46:	6803      	ldr	r3, [r0, #0]
 801fc48:	4669      	mov	r1, sp
 801fc4a:	685b      	ldr	r3, [r3, #4]
 801fc4c:	4798      	blx	r3
 801fc4e:	eba8 0606 	sub.w	r6, r8, r6
 801fc52:	2300      	movs	r3, #0
 801fc54:	1bef      	subs	r7, r5, r7
 801fc56:	2001      	movs	r0, #1
 801fc58:	8123      	strh	r3, [r4, #8]
 801fc5a:	8166      	strh	r6, [r4, #10]
 801fc5c:	81a7      	strh	r7, [r4, #12]
 801fc5e:	f8a4 8004 	strh.w	r8, [r4, #4]
 801fc62:	80e5      	strh	r5, [r4, #6]
 801fc64:	73a0      	strb	r0, [r4, #14]
 801fc66:	b004      	add	sp, #16
 801fc68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fc6c:	08023fbc 	.word	0x08023fbc

0801fc70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801fc70:	b5f0      	push	{r4, r5, r6, r7, lr}
 801fc72:	461e      	mov	r6, r3
 801fc74:	1e4b      	subs	r3, r1, #1
 801fc76:	2b01      	cmp	r3, #1
 801fc78:	b085      	sub	sp, #20
 801fc7a:	4604      	mov	r4, r0
 801fc7c:	460d      	mov	r5, r1
 801fc7e:	4617      	mov	r7, r2
 801fc80:	d84b      	bhi.n	801fd1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801fc82:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801fc86:	1cd3      	adds	r3, r2, #3
 801fc88:	b29b      	uxth	r3, r3
 801fc8a:	2b06      	cmp	r3, #6
 801fc8c:	d916      	bls.n	801fcbc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801fc8e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801fd30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801fc92:	f8cd c004 	str.w	ip, [sp, #4]
 801fc96:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fc9a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fc9e:	6900      	ldr	r0, [r0, #16]
 801fca0:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fca4:	f04f 0c00 	mov.w	ip, #0
 801fca8:	f88d c008 	strb.w	ip, [sp, #8]
 801fcac:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fcb0:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fcb4:	6803      	ldr	r3, [r0, #0]
 801fcb6:	a901      	add	r1, sp, #4
 801fcb8:	689b      	ldr	r3, [r3, #8]
 801fcba:	4798      	blx	r3
 801fcbc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801fcc0:	1cd3      	adds	r3, r2, #3
 801fcc2:	b29b      	uxth	r3, r3
 801fcc4:	2b06      	cmp	r3, #6
 801fcc6:	d916      	bls.n	801fcf6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fcc8:	f8df c064 	ldr.w	ip, [pc, #100]	; 801fd30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801fccc:	f8cd c004 	str.w	ip, [sp, #4]
 801fcd0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fcd4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fcd8:	6920      	ldr	r0, [r4, #16]
 801fcda:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fcde:	f04f 0c01 	mov.w	ip, #1
 801fce2:	f88d c008 	strb.w	ip, [sp, #8]
 801fce6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fcea:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fcee:	6803      	ldr	r3, [r0, #0]
 801fcf0:	a901      	add	r1, sp, #4
 801fcf2:	689b      	ldr	r3, [r3, #8]
 801fcf4:	4798      	blx	r3
 801fcf6:	4b0d      	ldr	r3, [pc, #52]	; (801fd2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801fcf8:	9301      	str	r3, [sp, #4]
 801fcfa:	6920      	ldr	r0, [r4, #16]
 801fcfc:	f88d 5008 	strb.w	r5, [sp, #8]
 801fd00:	2300      	movs	r3, #0
 801fd02:	f8ad 700a 	strh.w	r7, [sp, #10]
 801fd06:	f8ad 600c 	strh.w	r6, [sp, #12]
 801fd0a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fd0e:	6803      	ldr	r3, [r0, #0]
 801fd10:	a901      	add	r1, sp, #4
 801fd12:	681b      	ldr	r3, [r3, #0]
 801fd14:	4798      	blx	r3
 801fd16:	b005      	add	sp, #20
 801fd18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801fd1a:	2900      	cmp	r1, #0
 801fd1c:	d1eb      	bne.n	801fcf6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fd1e:	80a2      	strh	r2, [r4, #4]
 801fd20:	80c6      	strh	r6, [r0, #6]
 801fd22:	60a1      	str	r1, [r4, #8]
 801fd24:	81a1      	strh	r1, [r4, #12]
 801fd26:	73a1      	strb	r1, [r4, #14]
 801fd28:	e7e5      	b.n	801fcf6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fd2a:	bf00      	nop
 801fd2c:	08023fa8 	.word	0x08023fa8
 801fd30:	08023fd0 	.word	0x08023fd0

0801fd34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 801fd34:	10c9      	asrs	r1, r1, #3
 801fd36:	2900      	cmp	r1, #0
 801fd38:	bfb8      	it	lt
 801fd3a:	4249      	neglt	r1, r1
 801fd3c:	2801      	cmp	r0, #1
 801fd3e:	d108      	bne.n	801fd52 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801fd40:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801fd44:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801fd48:	4601      	mov	r1, r0
 801fd4a:	dd02      	ble.n	801fd52 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801fd4c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801fd50:	4770      	bx	lr
 801fd52:	29ff      	cmp	r1, #255	; 0xff
 801fd54:	bfa8      	it	ge
 801fd56:	21ff      	movge	r1, #255	; 0xff
 801fd58:	4608      	mov	r0, r1
 801fd5a:	4770      	bx	lr

0801fd5c <_ZN8touchgfx10Rasterizer6lineToEii>:
 801fd5c:	b410      	push	{r4}
 801fd5e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801fd62:	429c      	cmp	r4, r3
 801fd64:	d803      	bhi.n	801fd6e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 801fd66:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fd6a:	f7ef b97d 	b.w	800f068 <_ZN8touchgfx7Outline6lineToEii>
 801fd6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fd72:	4770      	bx	lr

0801fd74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 801fd74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd78:	b08b      	sub	sp, #44	; 0x2c
 801fd7a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801fd7e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801fd82:	9308      	str	r3, [sp, #32]
 801fd84:	4606      	mov	r6, r0
 801fd86:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801fd8a:	9309      	str	r3, [sp, #36]	; 0x24
 801fd8c:	468a      	mov	sl, r1
 801fd8e:	f7ef fad8 	bl	800f342 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801fd92:	68b5      	ldr	r5, [r6, #8]
 801fd94:	4604      	mov	r4, r0
 801fd96:	2d00      	cmp	r5, #0
 801fd98:	d044      	beq.n	801fe24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801fd9a:	6873      	ldr	r3, [r6, #4]
 801fd9c:	42ab      	cmp	r3, r5
 801fd9e:	d33d      	bcc.n	801fe1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801fda0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801fda4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 801fda8:	eb02 0b03 	add.w	fp, r2, r3
 801fdac:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801fdb0:	fb02 1203 	mla	r2, r2, r3, r1
 801fdb4:	9205      	str	r2, [sp, #20]
 801fdb6:	1e6a      	subs	r2, r5, #1
 801fdb8:	9204      	str	r2, [sp, #16]
 801fdba:	f04f 0800 	mov.w	r8, #0
 801fdbe:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801fdc2:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fdc6:	454b      	cmp	r3, r9
 801fdc8:	463a      	mov	r2, r7
 801fdca:	d008      	beq.n	801fdde <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 801fdcc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 801fdd0:	eb03 0b09 	add.w	fp, r3, r9
 801fdd4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801fdd8:	fb03 1309 	mla	r3, r3, r9, r1
 801fddc:	9305      	str	r3, [sp, #20]
 801fdde:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801fde2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801fde6:	4498      	add	r8, r3
 801fde8:	9b04      	ldr	r3, [sp, #16]
 801fdea:	3b01      	subs	r3, #1
 801fdec:	9304      	str	r3, [sp, #16]
 801fdee:	9b04      	ldr	r3, [sp, #16]
 801fdf0:	3301      	adds	r3, #1
 801fdf2:	d015      	beq.n	801fe20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 801fdf4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 801fdf8:	42bb      	cmp	r3, r7
 801fdfa:	d117      	bne.n	801fe2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 801fdfc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801fe00:	9b04      	ldr	r3, [sp, #16]
 801fe02:	4548      	cmp	r0, r9
 801fe04:	f103 33ff 	add.w	r3, r3, #4294967295
 801fe08:	d17f      	bne.n	801ff0a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 801fe0a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 801fe0e:	4401      	add	r1, r0
 801fe10:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fe14:	4480      	add	r8, r0
 801fe16:	e7e9      	b.n	801fdec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 801fe18:	461f      	mov	r7, r3
 801fe1a:	e044      	b.n	801fea6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 801fe1c:	2000      	movs	r0, #0
 801fe1e:	e002      	b.n	801fe26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 801fe20:	2900      	cmp	r1, #0
 801fe22:	d16f      	bne.n	801ff04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 801fe24:	2001      	movs	r0, #1
 801fe26:	b00b      	add	sp, #44	; 0x2c
 801fe28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe2c:	2900      	cmp	r1, #0
 801fe2e:	d030      	beq.n	801fe92 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 801fe30:	2f00      	cmp	r7, #0
 801fe32:	db29      	blt.n	801fe88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801fe34:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801fe38:	42bb      	cmp	r3, r7
 801fe3a:	dd25      	ble.n	801fe88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801fe3c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 801fe40:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801fe44:	f7ff ff76 	bl	801fd34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801fe48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe4a:	fb10 f003 	smulbb	r0, r0, r3
 801fe4e:	b280      	uxth	r0, r0
 801fe50:	1c41      	adds	r1, r0, #1
 801fe52:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fe56:	1209      	asrs	r1, r1, #8
 801fe58:	f011 0fff 	tst.w	r1, #255	; 0xff
 801fe5c:	d014      	beq.n	801fe88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801fe5e:	9808      	ldr	r0, [sp, #32]
 801fe60:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801fe62:	b2c9      	uxtb	r1, r1
 801fe64:	b2ba      	uxth	r2, r7
 801fe66:	9102      	str	r1, [sp, #8]
 801fe68:	2101      	movs	r1, #1
 801fe6a:	4413      	add	r3, r2
 801fe6c:	9101      	str	r1, [sp, #4]
 801fe6e:	4402      	add	r2, r0
 801fe70:	fa0f f18b 	sxth.w	r1, fp
 801fe74:	f8da 0000 	ldr.w	r0, [sl]
 801fe78:	9100      	str	r1, [sp, #0]
 801fe7a:	6941      	ldr	r1, [r0, #20]
 801fe7c:	b21b      	sxth	r3, r3
 801fe7e:	460d      	mov	r5, r1
 801fe80:	b212      	sxth	r2, r2
 801fe82:	9905      	ldr	r1, [sp, #20]
 801fe84:	4650      	mov	r0, sl
 801fe86:	47a8      	blx	r5
 801fe88:	9b04      	ldr	r3, [sp, #16]
 801fe8a:	3301      	adds	r3, #1
 801fe8c:	f107 0201 	add.w	r2, r7, #1
 801fe90:	d0c8      	beq.n	801fe24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801fe92:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fe96:	1abb      	subs	r3, r7, r2
 801fe98:	2b00      	cmp	r3, #0
 801fe9a:	dd31      	ble.n	801ff00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801fe9c:	2a00      	cmp	r2, #0
 801fe9e:	dabb      	bge.n	801fe18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 801fea0:	2f00      	cmp	r7, #0
 801fea2:	dd2d      	ble.n	801ff00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801fea4:	2200      	movs	r2, #0
 801fea6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801feaa:	19d1      	adds	r1, r2, r7
 801feac:	4299      	cmp	r1, r3
 801feae:	db02      	blt.n	801feb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 801feb0:	1a9f      	subs	r7, r3, r2
 801feb2:	2f00      	cmp	r7, #0
 801feb4:	dd24      	ble.n	801ff00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801feb6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 801feba:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801febe:	f7ff ff39 	bl	801fd34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801fec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fec4:	fb10 f003 	smulbb	r0, r0, r3
 801fec8:	b280      	uxth	r0, r0
 801feca:	1c41      	adds	r1, r0, #1
 801fecc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fed0:	1209      	asrs	r1, r1, #8
 801fed2:	f011 0fff 	tst.w	r1, #255	; 0xff
 801fed6:	d013      	beq.n	801ff00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801fed8:	9808      	ldr	r0, [sp, #32]
 801feda:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801fedc:	b292      	uxth	r2, r2
 801fede:	b2c9      	uxtb	r1, r1
 801fee0:	4413      	add	r3, r2
 801fee2:	9102      	str	r1, [sp, #8]
 801fee4:	4402      	add	r2, r0
 801fee6:	b23f      	sxth	r7, r7
 801fee8:	f8da 0000 	ldr.w	r0, [sl]
 801feec:	9701      	str	r7, [sp, #4]
 801feee:	fa0f f18b 	sxth.w	r1, fp
 801fef2:	9100      	str	r1, [sp, #0]
 801fef4:	6947      	ldr	r7, [r0, #20]
 801fef6:	9905      	ldr	r1, [sp, #20]
 801fef8:	b21b      	sxth	r3, r3
 801fefa:	b212      	sxth	r2, r2
 801fefc:	4650      	mov	r0, sl
 801fefe:	47b8      	blx	r7
 801ff00:	464b      	mov	r3, r9
 801ff02:	e75c      	b.n	801fdbe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 801ff04:	2f00      	cmp	r7, #0
 801ff06:	da95      	bge.n	801fe34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 801ff08:	e78c      	b.n	801fe24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801ff0a:	2900      	cmp	r1, #0
 801ff0c:	d0f8      	beq.n	801ff00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ff0e:	e78f      	b.n	801fe30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0801ff10 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801ff10:	4b4c      	ldr	r3, [pc, #304]	; (8020044 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 801ff12:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801ff16:	2500      	movs	r5, #0
 801ff18:	f100 0620 	add.w	r6, r0, #32
 801ff1c:	4604      	mov	r4, r0
 801ff1e:	e9c0 3100 	strd	r3, r1, [r0]
 801ff22:	e9c0 5502 	strd	r5, r5, [r0, #8]
 801ff26:	e9c0 5504 	strd	r5, r5, [r0, #16]
 801ff2a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 801ff2e:	f100 0718 	add.w	r7, r0, #24
 801ff32:	4630      	mov	r0, r6
 801ff34:	4690      	mov	r8, r2
 801ff36:	f7ee fbcf 	bl	800e6d8 <_ZN8touchgfx7OutlineC1Ev>
 801ff3a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 801ff3e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 801ff42:	2301      	movs	r3, #1
 801ff44:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 801ff48:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 801ff4c:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 801ff50:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 801ff54:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801ff58:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 801ff5c:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 801ff60:	f9b8 2000 	ldrsh.w	r2, [r8]
 801ff64:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801ff68:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801ff6c:	9500      	str	r5, [sp, #0]
 801ff6e:	4410      	add	r0, r2
 801ff70:	b280      	uxth	r0, r0
 801ff72:	fa0f fa80 	sxth.w	sl, r0
 801ff76:	45aa      	cmp	sl, r5
 801ff78:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801ff7c:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801ff80:	dd5c      	ble.n	802003c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801ff82:	4591      	cmp	r9, r2
 801ff84:	dd5a      	ble.n	802003c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801ff86:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801ff8a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801ff8e:	440b      	add	r3, r1
 801ff90:	b29b      	uxth	r3, r3
 801ff92:	b21d      	sxth	r5, r3
 801ff94:	2d00      	cmp	r5, #0
 801ff96:	dd51      	ble.n	802003c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801ff98:	458e      	cmp	lr, r1
 801ff9a:	dd4f      	ble.n	802003c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801ff9c:	45d1      	cmp	r9, sl
 801ff9e:	bfb8      	it	lt
 801ffa0:	fa1f f089 	uxthlt.w	r0, r9
 801ffa4:	45ae      	cmp	lr, r5
 801ffa6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801ffaa:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801ffae:	bfb8      	it	lt
 801ffb0:	fa1f f38e 	uxthlt.w	r3, lr
 801ffb4:	1a80      	subs	r0, r0, r2
 801ffb6:	1a5b      	subs	r3, r3, r1
 801ffb8:	f8ad 0004 	strh.w	r0, [sp, #4]
 801ffbc:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ffc0:	f8ad 2000 	strh.w	r2, [sp]
 801ffc4:	f8ad 1002 	strh.w	r1, [sp, #2]
 801ffc8:	466d      	mov	r5, sp
 801ffca:	e895 0003 	ldmia.w	r5, {r0, r1}
 801ffce:	e887 0003 	stmia.w	r7, {r0, r1}
 801ffd2:	f8dc 3000 	ldr.w	r3, [ip]
 801ffd6:	4660      	mov	r0, ip
 801ffd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ffda:	4639      	mov	r1, r7
 801ffdc:	4798      	blx	r3
 801ffde:	6861      	ldr	r1, [r4, #4]
 801ffe0:	4628      	mov	r0, r5
 801ffe2:	3104      	adds	r1, #4
 801ffe4:	f7f0 fd0c 	bl	8010a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ffe8:	4638      	mov	r0, r7
 801ffea:	f7f0 fce1 	bl	80109b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ffee:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801fff2:	f8bd 2000 	ldrh.w	r2, [sp]
 801fff6:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 801fffa:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 801fffe:	4630      	mov	r0, r6
 8020000:	f7ee fb4e 	bl	800e6a0 <_ZN8touchgfx7Outline5resetEv>
 8020004:	f9bd 3000 	ldrsh.w	r3, [sp]
 8020008:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802000c:	015b      	lsls	r3, r3, #5
 802000e:	60a3      	str	r3, [r4, #8]
 8020010:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020014:	015b      	lsls	r3, r3, #5
 8020016:	60e3      	str	r3, [r4, #12]
 8020018:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802001c:	015b      	lsls	r3, r3, #5
 802001e:	6123      	str	r3, [r4, #16]
 8020020:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020024:	015b      	lsls	r3, r3, #5
 8020026:	6163      	str	r3, [r4, #20]
 8020028:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802002c:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020030:	4620      	mov	r0, r4
 8020032:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8020036:	b002      	add	sp, #8
 8020038:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802003c:	2300      	movs	r3, #0
 802003e:	9301      	str	r3, [sp, #4]
 8020040:	e7c2      	b.n	801ffc8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 8020042:	bf00      	nop
 8020044:	08023838 	.word	0x08023838

08020048 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8020048:	b510      	push	{r4, lr}
 802004a:	4b07      	ldr	r3, [pc, #28]	; (8020068 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802004c:	781b      	ldrb	r3, [r3, #0]
 802004e:	2b01      	cmp	r3, #1
 8020050:	d108      	bne.n	8020064 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8020052:	6843      	ldr	r3, [r0, #4]
 8020054:	6814      	ldr	r4, [r2, #0]
 8020056:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802005a:	680b      	ldr	r3, [r1, #0]
 802005c:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8020060:	6013      	str	r3, [r2, #0]
 8020062:	600c      	str	r4, [r1, #0]
 8020064:	bd10      	pop	{r4, pc}
 8020066:	bf00      	nop
 8020068:	200153dc 	.word	0x200153dc

0802006c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802006c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802006e:	ab02      	add	r3, sp, #8
 8020070:	4604      	mov	r4, r0
 8020072:	f843 2d08 	str.w	r2, [r3, #-8]!
 8020076:	9101      	str	r1, [sp, #4]
 8020078:	461a      	mov	r2, r3
 802007a:	a901      	add	r1, sp, #4
 802007c:	f7ff ffe4 	bl	8020048 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020080:	68a3      	ldr	r3, [r4, #8]
 8020082:	9901      	ldr	r1, [sp, #4]
 8020084:	9a00      	ldr	r2, [sp, #0]
 8020086:	1ac9      	subs	r1, r1, r3
 8020088:	68e3      	ldr	r3, [r4, #12]
 802008a:	9101      	str	r1, [sp, #4]
 802008c:	1ad2      	subs	r2, r2, r3
 802008e:	2a00      	cmp	r2, #0
 8020090:	9200      	str	r2, [sp, #0]
 8020092:	db1c      	blt.n	80200ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8020094:	6963      	ldr	r3, [r4, #20]
 8020096:	429a      	cmp	r2, r3
 8020098:	bfac      	ite	ge
 802009a:	2002      	movge	r0, #2
 802009c:	2000      	movlt	r0, #0
 802009e:	2900      	cmp	r1, #0
 80200a0:	db17      	blt.n	80200d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80200a2:	6923      	ldr	r3, [r4, #16]
 80200a4:	4299      	cmp	r1, r3
 80200a6:	bfac      	ite	ge
 80200a8:	2308      	movge	r3, #8
 80200aa:	2300      	movlt	r3, #0
 80200ac:	4303      	orrs	r3, r0
 80200ae:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80200b2:	b2dd      	uxtb	r5, r3
 80200b4:	b978      	cbnz	r0, 80200d6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80200b6:	f104 0020 	add.w	r0, r4, #32
 80200ba:	f7ff fe4f 	bl	801fd5c <_ZN8touchgfx10Rasterizer6lineToEii>
 80200be:	9b01      	ldr	r3, [sp, #4]
 80200c0:	65e3      	str	r3, [r4, #92]	; 0x5c
 80200c2:	9b00      	ldr	r3, [sp, #0]
 80200c4:	6623      	str	r3, [r4, #96]	; 0x60
 80200c6:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80200ca:	b002      	add	sp, #8
 80200cc:	bd70      	pop	{r4, r5, r6, pc}
 80200ce:	2001      	movs	r0, #1
 80200d0:	e7e5      	b.n	802009e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80200d2:	2304      	movs	r3, #4
 80200d4:	e7ea      	b.n	80200ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80200d6:	b113      	cbz	r3, 80200de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80200d8:	ea10 0305 	ands.w	r3, r0, r5
 80200dc:	d11d      	bne.n	802011a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 80200de:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80200e2:	f104 0620 	add.w	r6, r4, #32
 80200e6:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80200ea:	b193      	cbz	r3, 8020112 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 80200ec:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80200f0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80200f4:	4298      	cmp	r0, r3
 80200f6:	d802      	bhi.n	80200fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80200f8:	4630      	mov	r0, r6
 80200fa:	f7ee ffcf 	bl	800f09c <_ZN8touchgfx7Outline6moveToEii>
 80200fe:	2300      	movs	r3, #0
 8020100:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020104:	2301      	movs	r3, #1
 8020106:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802010a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802010e:	4630      	mov	r0, r6
 8020110:	e7d3      	b.n	80200ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020112:	4630      	mov	r0, r6
 8020114:	f7ff fe22 	bl	801fd5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8020118:	e7f7      	b.n	802010a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802011a:	461d      	mov	r5, r3
 802011c:	e7cf      	b.n	80200be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

0802011e <_ZN8touchgfx6Canvas5closeEv>:
 802011e:	b538      	push	{r3, r4, r5, lr}
 8020120:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020124:	4604      	mov	r4, r0
 8020126:	b993      	cbnz	r3, 802014e <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020128:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802012c:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020130:	4213      	tst	r3, r2
 8020132:	d10c      	bne.n	802014e <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020134:	f100 0520 	add.w	r5, r0, #32
 8020138:	b123      	cbz	r3, 8020144 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802013a:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802013e:	4628      	mov	r0, r5
 8020140:	f7ff fe0c 	bl	801fd5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8020144:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8020148:	4628      	mov	r0, r5
 802014a:	f7ff fe07 	bl	801fd5c <_ZN8touchgfx10Rasterizer6lineToEii>
 802014e:	2300      	movs	r3, #0
 8020150:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020154:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8020158:	4298      	cmp	r0, r3
 802015a:	bf34      	ite	cc
 802015c:	2000      	movcc	r0, #0
 802015e:	2001      	movcs	r0, #1
 8020160:	bd38      	pop	{r3, r4, r5, pc}
	...

08020164 <_ZN8touchgfx6Canvas6renderEh>:
 8020164:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8020168:	4604      	mov	r4, r0
 802016a:	6840      	ldr	r0, [r0, #4]
 802016c:	6803      	ldr	r3, [r0, #0]
 802016e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8020170:	460d      	mov	r5, r1
 8020172:	4798      	blx	r3
 8020174:	fb10 f105 	smulbb	r1, r0, r5
 8020178:	b289      	uxth	r1, r1
 802017a:	1c4d      	adds	r5, r1, #1
 802017c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8020180:	122d      	asrs	r5, r5, #8
 8020182:	f000 8098 	beq.w	80202b6 <_ZN8touchgfx6Canvas6renderEh+0x152>
 8020186:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802018a:	2b00      	cmp	r3, #0
 802018c:	f000 8093 	beq.w	80202b6 <_ZN8touchgfx6Canvas6renderEh+0x152>
 8020190:	4620      	mov	r0, r4
 8020192:	f7ff ffc4 	bl	802011e <_ZN8touchgfx6Canvas5closeEv>
 8020196:	4607      	mov	r7, r0
 8020198:	2800      	cmp	r0, #0
 802019a:	d043      	beq.n	8020224 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 802019c:	6863      	ldr	r3, [r4, #4]
 802019e:	4e47      	ldr	r6, [pc, #284]	; (80202bc <_ZN8touchgfx6Canvas6renderEh+0x158>)
 80201a0:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80201a2:	6837      	ldr	r7, [r6, #0]
 80201a4:	6803      	ldr	r3, [r0, #0]
 80201a6:	689b      	ldr	r3, [r3, #8]
 80201a8:	4798      	blx	r3
 80201aa:	4601      	mov	r1, r0
 80201ac:	4638      	mov	r0, r7
 80201ae:	f7eb fb03 	bl	800b7b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80201b2:	4607      	mov	r7, r0
 80201b4:	f7e2 f91e 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 80201b8:	6803      	ldr	r3, [r0, #0]
 80201ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80201bc:	4798      	blx	r3
 80201be:	4680      	mov	r8, r0
 80201c0:	f7e2 f918 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 80201c4:	6803      	ldr	r3, [r0, #0]
 80201c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80201c8:	4798      	blx	r3
 80201ca:	280b      	cmp	r0, #11
 80201cc:	d858      	bhi.n	8020280 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 80201ce:	e8df f000 	tbb	[pc, r0]
 80201d2:	594e      	.short	0x594e
 80201d4:	2d570669 	.word	0x2d570669
 80201d8:	6262623d 	.word	0x6262623d
 80201dc:	6262      	.short	0x6262
 80201de:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80201e2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80201e6:	2208      	movs	r2, #8
 80201e8:	fb91 f2f2 	sdiv	r2, r1, r2
 80201ec:	fb08 2303 	mla	r3, r8, r3, r2
 80201f0:	441f      	add	r7, r3
 80201f2:	424b      	negs	r3, r1
 80201f4:	f003 0307 	and.w	r3, r3, #7
 80201f8:	f001 0107 	and.w	r1, r1, #7
 80201fc:	bf58      	it	pl
 80201fe:	4259      	negpl	r1, r3
 8020200:	b2c9      	uxtb	r1, r1
 8020202:	b2ed      	uxtb	r5, r5
 8020204:	e9cd 1500 	strd	r1, r5, [sp]
 8020208:	6860      	ldr	r0, [r4, #4]
 802020a:	fa0f f388 	sxth.w	r3, r8
 802020e:	463a      	mov	r2, r7
 8020210:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020212:	f104 0020 	add.w	r0, r4, #32
 8020216:	f7ff fdad 	bl	801fd74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802021a:	4607      	mov	r7, r0
 802021c:	6830      	ldr	r0, [r6, #0]
 802021e:	6803      	ldr	r3, [r0, #0]
 8020220:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020222:	4798      	blx	r3
 8020224:	4638      	mov	r0, r7
 8020226:	b002      	add	sp, #8
 8020228:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802022c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020230:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020234:	2204      	movs	r2, #4
 8020236:	fb91 f2f2 	sdiv	r2, r1, r2
 802023a:	fb08 2303 	mla	r3, r8, r3, r2
 802023e:	441f      	add	r7, r3
 8020240:	424b      	negs	r3, r1
 8020242:	f003 0303 	and.w	r3, r3, #3
 8020246:	f001 0103 	and.w	r1, r1, #3
 802024a:	e7d7      	b.n	80201fc <_ZN8touchgfx6Canvas6renderEh+0x98>
 802024c:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020250:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020254:	2900      	cmp	r1, #0
 8020256:	f04f 0202 	mov.w	r2, #2
 802025a:	fb91 f2f2 	sdiv	r2, r1, r2
 802025e:	f001 0101 	and.w	r1, r1, #1
 8020262:	fb08 2303 	mla	r3, r8, r3, r2
 8020266:	441f      	add	r7, r3
 8020268:	bfb8      	it	lt
 802026a:	4249      	neglt	r1, r1
 802026c:	e7c8      	b.n	8020200 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802026e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020272:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020276:	fb08 f303 	mul.w	r3, r8, r3
 802027a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802027e:	441f      	add	r7, r3
 8020280:	2100      	movs	r1, #0
 8020282:	e7be      	b.n	8020202 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8020284:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020288:	fb08 f203 	mul.w	r2, r8, r3
 802028c:	8b23      	ldrh	r3, [r4, #24]
 802028e:	2103      	movs	r1, #3
 8020290:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020294:	e7f3      	b.n	802027e <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020296:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802029a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802029e:	fb08 2303 	mla	r3, r8, r3, r2
 80202a2:	e7ec      	b.n	802027e <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80202a4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80202a8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80202ac:	fb08 f303 	mul.w	r3, r8, r3
 80202b0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80202b4:	e7e3      	b.n	802027e <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80202b6:	2701      	movs	r7, #1
 80202b8:	e7b4      	b.n	8020224 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80202ba:	bf00      	nop
 80202bc:	200153e4 	.word	0x200153e4

080202c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80202c0:	b513      	push	{r0, r1, r4, lr}
 80202c2:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80202c6:	4604      	mov	r4, r0
 80202c8:	e9cd 2100 	strd	r2, r1, [sp]
 80202cc:	b1a3      	cbz	r3, 80202f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80202ce:	466a      	mov	r2, sp
 80202d0:	a901      	add	r1, sp, #4
 80202d2:	4620      	mov	r0, r4
 80202d4:	f7ff feb8 	bl	8020048 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80202d8:	68a3      	ldr	r3, [r4, #8]
 80202da:	9901      	ldr	r1, [sp, #4]
 80202dc:	9a00      	ldr	r2, [sp, #0]
 80202de:	1ac9      	subs	r1, r1, r3
 80202e0:	68e3      	ldr	r3, [r4, #12]
 80202e2:	9101      	str	r1, [sp, #4]
 80202e4:	1ad2      	subs	r2, r2, r3
 80202e6:	2a00      	cmp	r2, #0
 80202e8:	9200      	str	r2, [sp, #0]
 80202ea:	da0b      	bge.n	8020304 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80202ec:	2301      	movs	r3, #1
 80202ee:	2900      	cmp	r1, #0
 80202f0:	da0e      	bge.n	8020310 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80202f2:	f043 0304 	orr.w	r3, r3, #4
 80202f6:	e013      	b.n	8020320 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80202f8:	f7ff ff11 	bl	802011e <_ZN8touchgfx6Canvas5closeEv>
 80202fc:	2800      	cmp	r0, #0
 80202fe:	d1e6      	bne.n	80202ce <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020300:	b002      	add	sp, #8
 8020302:	bd10      	pop	{r4, pc}
 8020304:	6963      	ldr	r3, [r4, #20]
 8020306:	429a      	cmp	r2, r3
 8020308:	bfac      	ite	ge
 802030a:	2302      	movge	r3, #2
 802030c:	2300      	movlt	r3, #0
 802030e:	e7ee      	b.n	80202ee <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020310:	6920      	ldr	r0, [r4, #16]
 8020312:	4281      	cmp	r1, r0
 8020314:	bfac      	ite	ge
 8020316:	2008      	movge	r0, #8
 8020318:	2000      	movlt	r0, #0
 802031a:	4318      	orrs	r0, r3
 802031c:	b2c3      	uxtb	r3, r0
 802031e:	b158      	cbz	r0, 8020338 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020320:	2201      	movs	r2, #1
 8020322:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8020326:	9901      	ldr	r1, [sp, #4]
 8020328:	9a00      	ldr	r2, [sp, #0]
 802032a:	66a1      	str	r1, [r4, #104]	; 0x68
 802032c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802032e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020332:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8020336:	e7e3      	b.n	8020300 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020338:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802033c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020340:	4298      	cmp	r0, r3
 8020342:	d803      	bhi.n	802034c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020344:	f104 0020 	add.w	r0, r4, #32
 8020348:	f7ee fea8 	bl	800f09c <_ZN8touchgfx7Outline6moveToEii>
 802034c:	2300      	movs	r3, #0
 802034e:	2201      	movs	r2, #1
 8020350:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020354:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8020358:	e7e5      	b.n	8020326 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802035a <__aeabi_atexit>:
 802035a:	460b      	mov	r3, r1
 802035c:	4601      	mov	r1, r0
 802035e:	4618      	mov	r0, r3
 8020360:	f000 b8d8 	b.w	8020514 <__cxa_atexit>

08020364 <_ZdlPvj>:
 8020364:	f000 b812 	b.w	802038c <_ZdlPv>

08020368 <__cxa_guard_acquire>:
 8020368:	6803      	ldr	r3, [r0, #0]
 802036a:	07db      	lsls	r3, r3, #31
 802036c:	d406      	bmi.n	802037c <__cxa_guard_acquire+0x14>
 802036e:	7843      	ldrb	r3, [r0, #1]
 8020370:	b103      	cbz	r3, 8020374 <__cxa_guard_acquire+0xc>
 8020372:	deff      	udf	#255	; 0xff
 8020374:	2301      	movs	r3, #1
 8020376:	7043      	strb	r3, [r0, #1]
 8020378:	4618      	mov	r0, r3
 802037a:	4770      	bx	lr
 802037c:	2000      	movs	r0, #0
 802037e:	4770      	bx	lr

08020380 <__cxa_guard_release>:
 8020380:	2301      	movs	r3, #1
 8020382:	6003      	str	r3, [r0, #0]
 8020384:	4770      	bx	lr

08020386 <__cxa_pure_virtual>:
 8020386:	b508      	push	{r3, lr}
 8020388:	f000 f80e 	bl	80203a8 <_ZSt9terminatev>

0802038c <_ZdlPv>:
 802038c:	f000 ba0e 	b.w	80207ac <free>

08020390 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020390:	b508      	push	{r3, lr}
 8020392:	4780      	blx	r0
 8020394:	f000 f892 	bl	80204bc <abort>

08020398 <_ZSt13get_terminatev>:
 8020398:	4b02      	ldr	r3, [pc, #8]	; (80203a4 <_ZSt13get_terminatev+0xc>)
 802039a:	6818      	ldr	r0, [r3, #0]
 802039c:	f3bf 8f5b 	dmb	ish
 80203a0:	4770      	bx	lr
 80203a2:	bf00      	nop
 80203a4:	20000100 	.word	0x20000100

080203a8 <_ZSt9terminatev>:
 80203a8:	b508      	push	{r3, lr}
 80203aa:	f7ff fff5 	bl	8020398 <_ZSt13get_terminatev>
 80203ae:	f7ff ffef 	bl	8020390 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080203b4 <ceilf>:
 80203b4:	ee10 3a10 	vmov	r3, s0
 80203b8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80203bc:	3a7f      	subs	r2, #127	; 0x7f
 80203be:	2a16      	cmp	r2, #22
 80203c0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80203c4:	dc2a      	bgt.n	802041c <ceilf+0x68>
 80203c6:	2a00      	cmp	r2, #0
 80203c8:	da11      	bge.n	80203ee <ceilf+0x3a>
 80203ca:	eddf 7a19 	vldr	s15, [pc, #100]	; 8020430 <ceilf+0x7c>
 80203ce:	ee30 0a27 	vadd.f32	s0, s0, s15
 80203d2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80203d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203da:	dd05      	ble.n	80203e8 <ceilf+0x34>
 80203dc:	2b00      	cmp	r3, #0
 80203de:	db23      	blt.n	8020428 <ceilf+0x74>
 80203e0:	2900      	cmp	r1, #0
 80203e2:	bf18      	it	ne
 80203e4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 80203e8:	ee00 3a10 	vmov	s0, r3
 80203ec:	4770      	bx	lr
 80203ee:	4911      	ldr	r1, [pc, #68]	; (8020434 <ceilf+0x80>)
 80203f0:	4111      	asrs	r1, r2
 80203f2:	420b      	tst	r3, r1
 80203f4:	d0fa      	beq.n	80203ec <ceilf+0x38>
 80203f6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8020430 <ceilf+0x7c>
 80203fa:	ee30 0a27 	vadd.f32	s0, s0, s15
 80203fe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020406:	ddef      	ble.n	80203e8 <ceilf+0x34>
 8020408:	2b00      	cmp	r3, #0
 802040a:	bfc2      	ittt	gt
 802040c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020410:	fa40 f202 	asrgt.w	r2, r0, r2
 8020414:	189b      	addgt	r3, r3, r2
 8020416:	ea23 0301 	bic.w	r3, r3, r1
 802041a:	e7e5      	b.n	80203e8 <ceilf+0x34>
 802041c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020420:	d3e4      	bcc.n	80203ec <ceilf+0x38>
 8020422:	ee30 0a00 	vadd.f32	s0, s0, s0
 8020426:	4770      	bx	lr
 8020428:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802042c:	e7dc      	b.n	80203e8 <ceilf+0x34>
 802042e:	bf00      	nop
 8020430:	7149f2ca 	.word	0x7149f2ca
 8020434:	007fffff 	.word	0x007fffff

08020438 <floorf>:
 8020438:	ee10 3a10 	vmov	r3, s0
 802043c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020440:	3a7f      	subs	r2, #127	; 0x7f
 8020442:	2a16      	cmp	r2, #22
 8020444:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020448:	dc2a      	bgt.n	80204a0 <floorf+0x68>
 802044a:	2a00      	cmp	r2, #0
 802044c:	da11      	bge.n	8020472 <floorf+0x3a>
 802044e:	eddf 7a18 	vldr	s15, [pc, #96]	; 80204b0 <floorf+0x78>
 8020452:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020456:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802045a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802045e:	dd05      	ble.n	802046c <floorf+0x34>
 8020460:	2b00      	cmp	r3, #0
 8020462:	da23      	bge.n	80204ac <floorf+0x74>
 8020464:	4a13      	ldr	r2, [pc, #76]	; (80204b4 <floorf+0x7c>)
 8020466:	2900      	cmp	r1, #0
 8020468:	bf18      	it	ne
 802046a:	4613      	movne	r3, r2
 802046c:	ee00 3a10 	vmov	s0, r3
 8020470:	4770      	bx	lr
 8020472:	4911      	ldr	r1, [pc, #68]	; (80204b8 <floorf+0x80>)
 8020474:	4111      	asrs	r1, r2
 8020476:	420b      	tst	r3, r1
 8020478:	d0fa      	beq.n	8020470 <floorf+0x38>
 802047a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80204b0 <floorf+0x78>
 802047e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020482:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802048a:	ddef      	ble.n	802046c <floorf+0x34>
 802048c:	2b00      	cmp	r3, #0
 802048e:	bfbe      	ittt	lt
 8020490:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8020494:	fa40 f202 	asrlt.w	r2, r0, r2
 8020498:	189b      	addlt	r3, r3, r2
 802049a:	ea23 0301 	bic.w	r3, r3, r1
 802049e:	e7e5      	b.n	802046c <floorf+0x34>
 80204a0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80204a4:	d3e4      	bcc.n	8020470 <floorf+0x38>
 80204a6:	ee30 0a00 	vadd.f32	s0, s0, s0
 80204aa:	4770      	bx	lr
 80204ac:	2300      	movs	r3, #0
 80204ae:	e7dd      	b.n	802046c <floorf+0x34>
 80204b0:	7149f2ca 	.word	0x7149f2ca
 80204b4:	bf800000 	.word	0xbf800000
 80204b8:	007fffff 	.word	0x007fffff

080204bc <abort>:
 80204bc:	b508      	push	{r3, lr}
 80204be:	2006      	movs	r0, #6
 80204c0:	f000 fe02 	bl	80210c8 <raise>
 80204c4:	2001      	movs	r0, #1
 80204c6:	f7e1 fd8f 	bl	8001fe8 <_exit>
	...

080204cc <__assert_func>:
 80204cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80204ce:	4614      	mov	r4, r2
 80204d0:	461a      	mov	r2, r3
 80204d2:	4b09      	ldr	r3, [pc, #36]	; (80204f8 <__assert_func+0x2c>)
 80204d4:	681b      	ldr	r3, [r3, #0]
 80204d6:	4605      	mov	r5, r0
 80204d8:	68d8      	ldr	r0, [r3, #12]
 80204da:	b14c      	cbz	r4, 80204f0 <__assert_func+0x24>
 80204dc:	4b07      	ldr	r3, [pc, #28]	; (80204fc <__assert_func+0x30>)
 80204de:	9100      	str	r1, [sp, #0]
 80204e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80204e4:	4906      	ldr	r1, [pc, #24]	; (8020500 <__assert_func+0x34>)
 80204e6:	462b      	mov	r3, r5
 80204e8:	f000 f8fe 	bl	80206e8 <fiprintf>
 80204ec:	f7ff ffe6 	bl	80204bc <abort>
 80204f0:	4b04      	ldr	r3, [pc, #16]	; (8020504 <__assert_func+0x38>)
 80204f2:	461c      	mov	r4, r3
 80204f4:	e7f3      	b.n	80204de <__assert_func+0x12>
 80204f6:	bf00      	nop
 80204f8:	20000104 	.word	0x20000104
 80204fc:	08024298 	.word	0x08024298
 8020500:	080242a5 	.word	0x080242a5
 8020504:	08023347 	.word	0x08023347

08020508 <atexit>:
 8020508:	2300      	movs	r3, #0
 802050a:	4601      	mov	r1, r0
 802050c:	461a      	mov	r2, r3
 802050e:	4618      	mov	r0, r3
 8020510:	f000 bf0c 	b.w	802132c <__register_exitproc>

08020514 <__cxa_atexit>:
 8020514:	b510      	push	{r4, lr}
 8020516:	4c05      	ldr	r4, [pc, #20]	; (802052c <__cxa_atexit+0x18>)
 8020518:	4613      	mov	r3, r2
 802051a:	b12c      	cbz	r4, 8020528 <__cxa_atexit+0x14>
 802051c:	460a      	mov	r2, r1
 802051e:	4601      	mov	r1, r0
 8020520:	2002      	movs	r0, #2
 8020522:	f000 ff03 	bl	802132c <__register_exitproc>
 8020526:	bd10      	pop	{r4, pc}
 8020528:	4620      	mov	r0, r4
 802052a:	e7fc      	b.n	8020526 <__cxa_atexit+0x12>
 802052c:	0802132d 	.word	0x0802132d

08020530 <__errno>:
 8020530:	4b01      	ldr	r3, [pc, #4]	; (8020538 <__errno+0x8>)
 8020532:	6818      	ldr	r0, [r3, #0]
 8020534:	4770      	bx	lr
 8020536:	bf00      	nop
 8020538:	20000104 	.word	0x20000104

0802053c <std>:
 802053c:	2300      	movs	r3, #0
 802053e:	b510      	push	{r4, lr}
 8020540:	4604      	mov	r4, r0
 8020542:	e9c0 3300 	strd	r3, r3, [r0]
 8020546:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802054a:	6083      	str	r3, [r0, #8]
 802054c:	8181      	strh	r1, [r0, #12]
 802054e:	6643      	str	r3, [r0, #100]	; 0x64
 8020550:	81c2      	strh	r2, [r0, #14]
 8020552:	6183      	str	r3, [r0, #24]
 8020554:	4619      	mov	r1, r3
 8020556:	2208      	movs	r2, #8
 8020558:	305c      	adds	r0, #92	; 0x5c
 802055a:	f000 f93d 	bl	80207d8 <memset>
 802055e:	4b05      	ldr	r3, [pc, #20]	; (8020574 <std+0x38>)
 8020560:	6263      	str	r3, [r4, #36]	; 0x24
 8020562:	4b05      	ldr	r3, [pc, #20]	; (8020578 <std+0x3c>)
 8020564:	62a3      	str	r3, [r4, #40]	; 0x28
 8020566:	4b05      	ldr	r3, [pc, #20]	; (802057c <std+0x40>)
 8020568:	62e3      	str	r3, [r4, #44]	; 0x2c
 802056a:	4b05      	ldr	r3, [pc, #20]	; (8020580 <std+0x44>)
 802056c:	6224      	str	r4, [r4, #32]
 802056e:	6323      	str	r3, [r4, #48]	; 0x30
 8020570:	bd10      	pop	{r4, pc}
 8020572:	bf00      	nop
 8020574:	08021101 	.word	0x08021101
 8020578:	08021123 	.word	0x08021123
 802057c:	0802115b 	.word	0x0802115b
 8020580:	0802117f 	.word	0x0802117f

08020584 <_cleanup_r>:
 8020584:	4901      	ldr	r1, [pc, #4]	; (802058c <_cleanup_r+0x8>)
 8020586:	f000 b8c1 	b.w	802070c <_fwalk_reent>
 802058a:	bf00      	nop
 802058c:	0802151d 	.word	0x0802151d

08020590 <__sfmoreglue>:
 8020590:	b570      	push	{r4, r5, r6, lr}
 8020592:	2268      	movs	r2, #104	; 0x68
 8020594:	1e4d      	subs	r5, r1, #1
 8020596:	4355      	muls	r5, r2
 8020598:	460e      	mov	r6, r1
 802059a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 802059e:	f000 f98f 	bl	80208c0 <_malloc_r>
 80205a2:	4604      	mov	r4, r0
 80205a4:	b140      	cbz	r0, 80205b8 <__sfmoreglue+0x28>
 80205a6:	2100      	movs	r1, #0
 80205a8:	e9c0 1600 	strd	r1, r6, [r0]
 80205ac:	300c      	adds	r0, #12
 80205ae:	60a0      	str	r0, [r4, #8]
 80205b0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80205b4:	f000 f910 	bl	80207d8 <memset>
 80205b8:	4620      	mov	r0, r4
 80205ba:	bd70      	pop	{r4, r5, r6, pc}

080205bc <__sfp_lock_acquire>:
 80205bc:	4801      	ldr	r0, [pc, #4]	; (80205c4 <__sfp_lock_acquire+0x8>)
 80205be:	f000 b8ea 	b.w	8020796 <__retarget_lock_acquire_recursive>
 80205c2:	bf00      	nop
 80205c4:	200154ea 	.word	0x200154ea

080205c8 <__sfp_lock_release>:
 80205c8:	4801      	ldr	r0, [pc, #4]	; (80205d0 <__sfp_lock_release+0x8>)
 80205ca:	f000 b8e6 	b.w	802079a <__retarget_lock_release_recursive>
 80205ce:	bf00      	nop
 80205d0:	200154ea 	.word	0x200154ea

080205d4 <__sinit_lock_acquire>:
 80205d4:	4801      	ldr	r0, [pc, #4]	; (80205dc <__sinit_lock_acquire+0x8>)
 80205d6:	f000 b8de 	b.w	8020796 <__retarget_lock_acquire_recursive>
 80205da:	bf00      	nop
 80205dc:	200154eb 	.word	0x200154eb

080205e0 <__sinit_lock_release>:
 80205e0:	4801      	ldr	r0, [pc, #4]	; (80205e8 <__sinit_lock_release+0x8>)
 80205e2:	f000 b8da 	b.w	802079a <__retarget_lock_release_recursive>
 80205e6:	bf00      	nop
 80205e8:	200154eb 	.word	0x200154eb

080205ec <__sinit>:
 80205ec:	b510      	push	{r4, lr}
 80205ee:	4604      	mov	r4, r0
 80205f0:	f7ff fff0 	bl	80205d4 <__sinit_lock_acquire>
 80205f4:	69a3      	ldr	r3, [r4, #24]
 80205f6:	b11b      	cbz	r3, 8020600 <__sinit+0x14>
 80205f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80205fc:	f7ff bff0 	b.w	80205e0 <__sinit_lock_release>
 8020600:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020604:	6523      	str	r3, [r4, #80]	; 0x50
 8020606:	4b13      	ldr	r3, [pc, #76]	; (8020654 <__sinit+0x68>)
 8020608:	4a13      	ldr	r2, [pc, #76]	; (8020658 <__sinit+0x6c>)
 802060a:	681b      	ldr	r3, [r3, #0]
 802060c:	62a2      	str	r2, [r4, #40]	; 0x28
 802060e:	42a3      	cmp	r3, r4
 8020610:	bf04      	itt	eq
 8020612:	2301      	moveq	r3, #1
 8020614:	61a3      	streq	r3, [r4, #24]
 8020616:	4620      	mov	r0, r4
 8020618:	f000 f820 	bl	802065c <__sfp>
 802061c:	6060      	str	r0, [r4, #4]
 802061e:	4620      	mov	r0, r4
 8020620:	f000 f81c 	bl	802065c <__sfp>
 8020624:	60a0      	str	r0, [r4, #8]
 8020626:	4620      	mov	r0, r4
 8020628:	f000 f818 	bl	802065c <__sfp>
 802062c:	2200      	movs	r2, #0
 802062e:	60e0      	str	r0, [r4, #12]
 8020630:	2104      	movs	r1, #4
 8020632:	6860      	ldr	r0, [r4, #4]
 8020634:	f7ff ff82 	bl	802053c <std>
 8020638:	68a0      	ldr	r0, [r4, #8]
 802063a:	2201      	movs	r2, #1
 802063c:	2109      	movs	r1, #9
 802063e:	f7ff ff7d 	bl	802053c <std>
 8020642:	68e0      	ldr	r0, [r4, #12]
 8020644:	2202      	movs	r2, #2
 8020646:	2112      	movs	r1, #18
 8020648:	f7ff ff78 	bl	802053c <std>
 802064c:	2301      	movs	r3, #1
 802064e:	61a3      	str	r3, [r4, #24]
 8020650:	e7d2      	b.n	80205f8 <__sinit+0xc>
 8020652:	bf00      	nop
 8020654:	08024334 	.word	0x08024334
 8020658:	08020585 	.word	0x08020585

0802065c <__sfp>:
 802065c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802065e:	4607      	mov	r7, r0
 8020660:	f7ff ffac 	bl	80205bc <__sfp_lock_acquire>
 8020664:	4b1e      	ldr	r3, [pc, #120]	; (80206e0 <__sfp+0x84>)
 8020666:	681e      	ldr	r6, [r3, #0]
 8020668:	69b3      	ldr	r3, [r6, #24]
 802066a:	b913      	cbnz	r3, 8020672 <__sfp+0x16>
 802066c:	4630      	mov	r0, r6
 802066e:	f7ff ffbd 	bl	80205ec <__sinit>
 8020672:	3648      	adds	r6, #72	; 0x48
 8020674:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020678:	3b01      	subs	r3, #1
 802067a:	d503      	bpl.n	8020684 <__sfp+0x28>
 802067c:	6833      	ldr	r3, [r6, #0]
 802067e:	b30b      	cbz	r3, 80206c4 <__sfp+0x68>
 8020680:	6836      	ldr	r6, [r6, #0]
 8020682:	e7f7      	b.n	8020674 <__sfp+0x18>
 8020684:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020688:	b9d5      	cbnz	r5, 80206c0 <__sfp+0x64>
 802068a:	4b16      	ldr	r3, [pc, #88]	; (80206e4 <__sfp+0x88>)
 802068c:	60e3      	str	r3, [r4, #12]
 802068e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020692:	6665      	str	r5, [r4, #100]	; 0x64
 8020694:	f000 f87e 	bl	8020794 <__retarget_lock_init_recursive>
 8020698:	f7ff ff96 	bl	80205c8 <__sfp_lock_release>
 802069c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80206a0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80206a4:	6025      	str	r5, [r4, #0]
 80206a6:	61a5      	str	r5, [r4, #24]
 80206a8:	2208      	movs	r2, #8
 80206aa:	4629      	mov	r1, r5
 80206ac:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80206b0:	f000 f892 	bl	80207d8 <memset>
 80206b4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80206b8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80206bc:	4620      	mov	r0, r4
 80206be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80206c0:	3468      	adds	r4, #104	; 0x68
 80206c2:	e7d9      	b.n	8020678 <__sfp+0x1c>
 80206c4:	2104      	movs	r1, #4
 80206c6:	4638      	mov	r0, r7
 80206c8:	f7ff ff62 	bl	8020590 <__sfmoreglue>
 80206cc:	4604      	mov	r4, r0
 80206ce:	6030      	str	r0, [r6, #0]
 80206d0:	2800      	cmp	r0, #0
 80206d2:	d1d5      	bne.n	8020680 <__sfp+0x24>
 80206d4:	f7ff ff78 	bl	80205c8 <__sfp_lock_release>
 80206d8:	230c      	movs	r3, #12
 80206da:	603b      	str	r3, [r7, #0]
 80206dc:	e7ee      	b.n	80206bc <__sfp+0x60>
 80206de:	bf00      	nop
 80206e0:	08024334 	.word	0x08024334
 80206e4:	ffff0001 	.word	0xffff0001

080206e8 <fiprintf>:
 80206e8:	b40e      	push	{r1, r2, r3}
 80206ea:	b503      	push	{r0, r1, lr}
 80206ec:	4601      	mov	r1, r0
 80206ee:	ab03      	add	r3, sp, #12
 80206f0:	4805      	ldr	r0, [pc, #20]	; (8020708 <fiprintf+0x20>)
 80206f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80206f6:	6800      	ldr	r0, [r0, #0]
 80206f8:	9301      	str	r3, [sp, #4]
 80206fa:	f000 f97f 	bl	80209fc <_vfiprintf_r>
 80206fe:	b002      	add	sp, #8
 8020700:	f85d eb04 	ldr.w	lr, [sp], #4
 8020704:	b003      	add	sp, #12
 8020706:	4770      	bx	lr
 8020708:	20000104 	.word	0x20000104

0802070c <_fwalk_reent>:
 802070c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020710:	4606      	mov	r6, r0
 8020712:	4688      	mov	r8, r1
 8020714:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020718:	2700      	movs	r7, #0
 802071a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802071e:	f1b9 0901 	subs.w	r9, r9, #1
 8020722:	d505      	bpl.n	8020730 <_fwalk_reent+0x24>
 8020724:	6824      	ldr	r4, [r4, #0]
 8020726:	2c00      	cmp	r4, #0
 8020728:	d1f7      	bne.n	802071a <_fwalk_reent+0xe>
 802072a:	4638      	mov	r0, r7
 802072c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020730:	89ab      	ldrh	r3, [r5, #12]
 8020732:	2b01      	cmp	r3, #1
 8020734:	d907      	bls.n	8020746 <_fwalk_reent+0x3a>
 8020736:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802073a:	3301      	adds	r3, #1
 802073c:	d003      	beq.n	8020746 <_fwalk_reent+0x3a>
 802073e:	4629      	mov	r1, r5
 8020740:	4630      	mov	r0, r6
 8020742:	47c0      	blx	r8
 8020744:	4307      	orrs	r7, r0
 8020746:	3568      	adds	r5, #104	; 0x68
 8020748:	e7e9      	b.n	802071e <_fwalk_reent+0x12>
	...

0802074c <__libc_init_array>:
 802074c:	b570      	push	{r4, r5, r6, lr}
 802074e:	4d0d      	ldr	r5, [pc, #52]	; (8020784 <__libc_init_array+0x38>)
 8020750:	4c0d      	ldr	r4, [pc, #52]	; (8020788 <__libc_init_array+0x3c>)
 8020752:	1b64      	subs	r4, r4, r5
 8020754:	10a4      	asrs	r4, r4, #2
 8020756:	2600      	movs	r6, #0
 8020758:	42a6      	cmp	r6, r4
 802075a:	d109      	bne.n	8020770 <__libc_init_array+0x24>
 802075c:	4d0b      	ldr	r5, [pc, #44]	; (802078c <__libc_init_array+0x40>)
 802075e:	4c0c      	ldr	r4, [pc, #48]	; (8020790 <__libc_init_array+0x44>)
 8020760:	f000 ffd0 	bl	8021704 <_init>
 8020764:	1b64      	subs	r4, r4, r5
 8020766:	10a4      	asrs	r4, r4, #2
 8020768:	2600      	movs	r6, #0
 802076a:	42a6      	cmp	r6, r4
 802076c:	d105      	bne.n	802077a <__libc_init_array+0x2e>
 802076e:	bd70      	pop	{r4, r5, r6, pc}
 8020770:	f855 3b04 	ldr.w	r3, [r5], #4
 8020774:	4798      	blx	r3
 8020776:	3601      	adds	r6, #1
 8020778:	e7ee      	b.n	8020758 <__libc_init_array+0xc>
 802077a:	f855 3b04 	ldr.w	r3, [r5], #4
 802077e:	4798      	blx	r3
 8020780:	3601      	adds	r6, #1
 8020782:	e7f2      	b.n	802076a <__libc_init_array+0x1e>
 8020784:	080a8ef8 	.word	0x080a8ef8
 8020788:	080a8ef8 	.word	0x080a8ef8
 802078c:	080a8ef8 	.word	0x080a8ef8
 8020790:	080a8f0c 	.word	0x080a8f0c

08020794 <__retarget_lock_init_recursive>:
 8020794:	4770      	bx	lr

08020796 <__retarget_lock_acquire_recursive>:
 8020796:	4770      	bx	lr

08020798 <__retarget_lock_release>:
 8020798:	4770      	bx	lr

0802079a <__retarget_lock_release_recursive>:
 802079a:	4770      	bx	lr

0802079c <malloc>:
 802079c:	4b02      	ldr	r3, [pc, #8]	; (80207a8 <malloc+0xc>)
 802079e:	4601      	mov	r1, r0
 80207a0:	6818      	ldr	r0, [r3, #0]
 80207a2:	f000 b88d 	b.w	80208c0 <_malloc_r>
 80207a6:	bf00      	nop
 80207a8:	20000104 	.word	0x20000104

080207ac <free>:
 80207ac:	4b02      	ldr	r3, [pc, #8]	; (80207b8 <free+0xc>)
 80207ae:	4601      	mov	r1, r0
 80207b0:	6818      	ldr	r0, [r3, #0]
 80207b2:	f000 b819 	b.w	80207e8 <_free_r>
 80207b6:	bf00      	nop
 80207b8:	20000104 	.word	0x20000104

080207bc <memcpy>:
 80207bc:	440a      	add	r2, r1
 80207be:	4291      	cmp	r1, r2
 80207c0:	f100 33ff 	add.w	r3, r0, #4294967295
 80207c4:	d100      	bne.n	80207c8 <memcpy+0xc>
 80207c6:	4770      	bx	lr
 80207c8:	b510      	push	{r4, lr}
 80207ca:	f811 4b01 	ldrb.w	r4, [r1], #1
 80207ce:	f803 4f01 	strb.w	r4, [r3, #1]!
 80207d2:	4291      	cmp	r1, r2
 80207d4:	d1f9      	bne.n	80207ca <memcpy+0xe>
 80207d6:	bd10      	pop	{r4, pc}

080207d8 <memset>:
 80207d8:	4402      	add	r2, r0
 80207da:	4603      	mov	r3, r0
 80207dc:	4293      	cmp	r3, r2
 80207de:	d100      	bne.n	80207e2 <memset+0xa>
 80207e0:	4770      	bx	lr
 80207e2:	f803 1b01 	strb.w	r1, [r3], #1
 80207e6:	e7f9      	b.n	80207dc <memset+0x4>

080207e8 <_free_r>:
 80207e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80207ea:	2900      	cmp	r1, #0
 80207ec:	d044      	beq.n	8020878 <_free_r+0x90>
 80207ee:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80207f2:	9001      	str	r0, [sp, #4]
 80207f4:	2b00      	cmp	r3, #0
 80207f6:	f1a1 0404 	sub.w	r4, r1, #4
 80207fa:	bfb8      	it	lt
 80207fc:	18e4      	addlt	r4, r4, r3
 80207fe:	f000 ff41 	bl	8021684 <__malloc_lock>
 8020802:	4a1e      	ldr	r2, [pc, #120]	; (802087c <_free_r+0x94>)
 8020804:	9801      	ldr	r0, [sp, #4]
 8020806:	6813      	ldr	r3, [r2, #0]
 8020808:	b933      	cbnz	r3, 8020818 <_free_r+0x30>
 802080a:	6063      	str	r3, [r4, #4]
 802080c:	6014      	str	r4, [r2, #0]
 802080e:	b003      	add	sp, #12
 8020810:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020814:	f000 bf3c 	b.w	8021690 <__malloc_unlock>
 8020818:	42a3      	cmp	r3, r4
 802081a:	d908      	bls.n	802082e <_free_r+0x46>
 802081c:	6825      	ldr	r5, [r4, #0]
 802081e:	1961      	adds	r1, r4, r5
 8020820:	428b      	cmp	r3, r1
 8020822:	bf01      	itttt	eq
 8020824:	6819      	ldreq	r1, [r3, #0]
 8020826:	685b      	ldreq	r3, [r3, #4]
 8020828:	1949      	addeq	r1, r1, r5
 802082a:	6021      	streq	r1, [r4, #0]
 802082c:	e7ed      	b.n	802080a <_free_r+0x22>
 802082e:	461a      	mov	r2, r3
 8020830:	685b      	ldr	r3, [r3, #4]
 8020832:	b10b      	cbz	r3, 8020838 <_free_r+0x50>
 8020834:	42a3      	cmp	r3, r4
 8020836:	d9fa      	bls.n	802082e <_free_r+0x46>
 8020838:	6811      	ldr	r1, [r2, #0]
 802083a:	1855      	adds	r5, r2, r1
 802083c:	42a5      	cmp	r5, r4
 802083e:	d10b      	bne.n	8020858 <_free_r+0x70>
 8020840:	6824      	ldr	r4, [r4, #0]
 8020842:	4421      	add	r1, r4
 8020844:	1854      	adds	r4, r2, r1
 8020846:	42a3      	cmp	r3, r4
 8020848:	6011      	str	r1, [r2, #0]
 802084a:	d1e0      	bne.n	802080e <_free_r+0x26>
 802084c:	681c      	ldr	r4, [r3, #0]
 802084e:	685b      	ldr	r3, [r3, #4]
 8020850:	6053      	str	r3, [r2, #4]
 8020852:	4421      	add	r1, r4
 8020854:	6011      	str	r1, [r2, #0]
 8020856:	e7da      	b.n	802080e <_free_r+0x26>
 8020858:	d902      	bls.n	8020860 <_free_r+0x78>
 802085a:	230c      	movs	r3, #12
 802085c:	6003      	str	r3, [r0, #0]
 802085e:	e7d6      	b.n	802080e <_free_r+0x26>
 8020860:	6825      	ldr	r5, [r4, #0]
 8020862:	1961      	adds	r1, r4, r5
 8020864:	428b      	cmp	r3, r1
 8020866:	bf04      	itt	eq
 8020868:	6819      	ldreq	r1, [r3, #0]
 802086a:	685b      	ldreq	r3, [r3, #4]
 802086c:	6063      	str	r3, [r4, #4]
 802086e:	bf04      	itt	eq
 8020870:	1949      	addeq	r1, r1, r5
 8020872:	6021      	streq	r1, [r4, #0]
 8020874:	6054      	str	r4, [r2, #4]
 8020876:	e7ca      	b.n	802080e <_free_r+0x26>
 8020878:	b003      	add	sp, #12
 802087a:	bd30      	pop	{r4, r5, pc}
 802087c:	200154ec 	.word	0x200154ec

08020880 <sbrk_aligned>:
 8020880:	b570      	push	{r4, r5, r6, lr}
 8020882:	4e0e      	ldr	r6, [pc, #56]	; (80208bc <sbrk_aligned+0x3c>)
 8020884:	460c      	mov	r4, r1
 8020886:	6831      	ldr	r1, [r6, #0]
 8020888:	4605      	mov	r5, r0
 802088a:	b911      	cbnz	r1, 8020892 <sbrk_aligned+0x12>
 802088c:	f000 fbe4 	bl	8021058 <_sbrk_r>
 8020890:	6030      	str	r0, [r6, #0]
 8020892:	4621      	mov	r1, r4
 8020894:	4628      	mov	r0, r5
 8020896:	f000 fbdf 	bl	8021058 <_sbrk_r>
 802089a:	1c43      	adds	r3, r0, #1
 802089c:	d00a      	beq.n	80208b4 <sbrk_aligned+0x34>
 802089e:	1cc4      	adds	r4, r0, #3
 80208a0:	f024 0403 	bic.w	r4, r4, #3
 80208a4:	42a0      	cmp	r0, r4
 80208a6:	d007      	beq.n	80208b8 <sbrk_aligned+0x38>
 80208a8:	1a21      	subs	r1, r4, r0
 80208aa:	4628      	mov	r0, r5
 80208ac:	f000 fbd4 	bl	8021058 <_sbrk_r>
 80208b0:	3001      	adds	r0, #1
 80208b2:	d101      	bne.n	80208b8 <sbrk_aligned+0x38>
 80208b4:	f04f 34ff 	mov.w	r4, #4294967295
 80208b8:	4620      	mov	r0, r4
 80208ba:	bd70      	pop	{r4, r5, r6, pc}
 80208bc:	200154f0 	.word	0x200154f0

080208c0 <_malloc_r>:
 80208c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80208c4:	1ccd      	adds	r5, r1, #3
 80208c6:	f025 0503 	bic.w	r5, r5, #3
 80208ca:	3508      	adds	r5, #8
 80208cc:	2d0c      	cmp	r5, #12
 80208ce:	bf38      	it	cc
 80208d0:	250c      	movcc	r5, #12
 80208d2:	2d00      	cmp	r5, #0
 80208d4:	4607      	mov	r7, r0
 80208d6:	db01      	blt.n	80208dc <_malloc_r+0x1c>
 80208d8:	42a9      	cmp	r1, r5
 80208da:	d905      	bls.n	80208e8 <_malloc_r+0x28>
 80208dc:	230c      	movs	r3, #12
 80208de:	603b      	str	r3, [r7, #0]
 80208e0:	2600      	movs	r6, #0
 80208e2:	4630      	mov	r0, r6
 80208e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80208e8:	4e2e      	ldr	r6, [pc, #184]	; (80209a4 <_malloc_r+0xe4>)
 80208ea:	f000 fecb 	bl	8021684 <__malloc_lock>
 80208ee:	6833      	ldr	r3, [r6, #0]
 80208f0:	461c      	mov	r4, r3
 80208f2:	bb34      	cbnz	r4, 8020942 <_malloc_r+0x82>
 80208f4:	4629      	mov	r1, r5
 80208f6:	4638      	mov	r0, r7
 80208f8:	f7ff ffc2 	bl	8020880 <sbrk_aligned>
 80208fc:	1c43      	adds	r3, r0, #1
 80208fe:	4604      	mov	r4, r0
 8020900:	d14d      	bne.n	802099e <_malloc_r+0xde>
 8020902:	6834      	ldr	r4, [r6, #0]
 8020904:	4626      	mov	r6, r4
 8020906:	2e00      	cmp	r6, #0
 8020908:	d140      	bne.n	802098c <_malloc_r+0xcc>
 802090a:	6823      	ldr	r3, [r4, #0]
 802090c:	4631      	mov	r1, r6
 802090e:	4638      	mov	r0, r7
 8020910:	eb04 0803 	add.w	r8, r4, r3
 8020914:	f000 fba0 	bl	8021058 <_sbrk_r>
 8020918:	4580      	cmp	r8, r0
 802091a:	d13a      	bne.n	8020992 <_malloc_r+0xd2>
 802091c:	6821      	ldr	r1, [r4, #0]
 802091e:	3503      	adds	r5, #3
 8020920:	1a6d      	subs	r5, r5, r1
 8020922:	f025 0503 	bic.w	r5, r5, #3
 8020926:	3508      	adds	r5, #8
 8020928:	2d0c      	cmp	r5, #12
 802092a:	bf38      	it	cc
 802092c:	250c      	movcc	r5, #12
 802092e:	4629      	mov	r1, r5
 8020930:	4638      	mov	r0, r7
 8020932:	f7ff ffa5 	bl	8020880 <sbrk_aligned>
 8020936:	3001      	adds	r0, #1
 8020938:	d02b      	beq.n	8020992 <_malloc_r+0xd2>
 802093a:	6823      	ldr	r3, [r4, #0]
 802093c:	442b      	add	r3, r5
 802093e:	6023      	str	r3, [r4, #0]
 8020940:	e00e      	b.n	8020960 <_malloc_r+0xa0>
 8020942:	6822      	ldr	r2, [r4, #0]
 8020944:	1b52      	subs	r2, r2, r5
 8020946:	d41e      	bmi.n	8020986 <_malloc_r+0xc6>
 8020948:	2a0b      	cmp	r2, #11
 802094a:	d916      	bls.n	802097a <_malloc_r+0xba>
 802094c:	1961      	adds	r1, r4, r5
 802094e:	42a3      	cmp	r3, r4
 8020950:	6025      	str	r5, [r4, #0]
 8020952:	bf18      	it	ne
 8020954:	6059      	strne	r1, [r3, #4]
 8020956:	6863      	ldr	r3, [r4, #4]
 8020958:	bf08      	it	eq
 802095a:	6031      	streq	r1, [r6, #0]
 802095c:	5162      	str	r2, [r4, r5]
 802095e:	604b      	str	r3, [r1, #4]
 8020960:	4638      	mov	r0, r7
 8020962:	f104 060b 	add.w	r6, r4, #11
 8020966:	f000 fe93 	bl	8021690 <__malloc_unlock>
 802096a:	f026 0607 	bic.w	r6, r6, #7
 802096e:	1d23      	adds	r3, r4, #4
 8020970:	1af2      	subs	r2, r6, r3
 8020972:	d0b6      	beq.n	80208e2 <_malloc_r+0x22>
 8020974:	1b9b      	subs	r3, r3, r6
 8020976:	50a3      	str	r3, [r4, r2]
 8020978:	e7b3      	b.n	80208e2 <_malloc_r+0x22>
 802097a:	6862      	ldr	r2, [r4, #4]
 802097c:	42a3      	cmp	r3, r4
 802097e:	bf0c      	ite	eq
 8020980:	6032      	streq	r2, [r6, #0]
 8020982:	605a      	strne	r2, [r3, #4]
 8020984:	e7ec      	b.n	8020960 <_malloc_r+0xa0>
 8020986:	4623      	mov	r3, r4
 8020988:	6864      	ldr	r4, [r4, #4]
 802098a:	e7b2      	b.n	80208f2 <_malloc_r+0x32>
 802098c:	4634      	mov	r4, r6
 802098e:	6876      	ldr	r6, [r6, #4]
 8020990:	e7b9      	b.n	8020906 <_malloc_r+0x46>
 8020992:	230c      	movs	r3, #12
 8020994:	603b      	str	r3, [r7, #0]
 8020996:	4638      	mov	r0, r7
 8020998:	f000 fe7a 	bl	8021690 <__malloc_unlock>
 802099c:	e7a1      	b.n	80208e2 <_malloc_r+0x22>
 802099e:	6025      	str	r5, [r4, #0]
 80209a0:	e7de      	b.n	8020960 <_malloc_r+0xa0>
 80209a2:	bf00      	nop
 80209a4:	200154ec 	.word	0x200154ec

080209a8 <__sfputc_r>:
 80209a8:	6893      	ldr	r3, [r2, #8]
 80209aa:	3b01      	subs	r3, #1
 80209ac:	2b00      	cmp	r3, #0
 80209ae:	b410      	push	{r4}
 80209b0:	6093      	str	r3, [r2, #8]
 80209b2:	da08      	bge.n	80209c6 <__sfputc_r+0x1e>
 80209b4:	6994      	ldr	r4, [r2, #24]
 80209b6:	42a3      	cmp	r3, r4
 80209b8:	db01      	blt.n	80209be <__sfputc_r+0x16>
 80209ba:	290a      	cmp	r1, #10
 80209bc:	d103      	bne.n	80209c6 <__sfputc_r+0x1e>
 80209be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80209c2:	f000 bbe1 	b.w	8021188 <__swbuf_r>
 80209c6:	6813      	ldr	r3, [r2, #0]
 80209c8:	1c58      	adds	r0, r3, #1
 80209ca:	6010      	str	r0, [r2, #0]
 80209cc:	7019      	strb	r1, [r3, #0]
 80209ce:	4608      	mov	r0, r1
 80209d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80209d4:	4770      	bx	lr

080209d6 <__sfputs_r>:
 80209d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80209d8:	4606      	mov	r6, r0
 80209da:	460f      	mov	r7, r1
 80209dc:	4614      	mov	r4, r2
 80209de:	18d5      	adds	r5, r2, r3
 80209e0:	42ac      	cmp	r4, r5
 80209e2:	d101      	bne.n	80209e8 <__sfputs_r+0x12>
 80209e4:	2000      	movs	r0, #0
 80209e6:	e007      	b.n	80209f8 <__sfputs_r+0x22>
 80209e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80209ec:	463a      	mov	r2, r7
 80209ee:	4630      	mov	r0, r6
 80209f0:	f7ff ffda 	bl	80209a8 <__sfputc_r>
 80209f4:	1c43      	adds	r3, r0, #1
 80209f6:	d1f3      	bne.n	80209e0 <__sfputs_r+0xa>
 80209f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080209fc <_vfiprintf_r>:
 80209fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a00:	460d      	mov	r5, r1
 8020a02:	b09d      	sub	sp, #116	; 0x74
 8020a04:	4614      	mov	r4, r2
 8020a06:	4698      	mov	r8, r3
 8020a08:	4606      	mov	r6, r0
 8020a0a:	b118      	cbz	r0, 8020a14 <_vfiprintf_r+0x18>
 8020a0c:	6983      	ldr	r3, [r0, #24]
 8020a0e:	b90b      	cbnz	r3, 8020a14 <_vfiprintf_r+0x18>
 8020a10:	f7ff fdec 	bl	80205ec <__sinit>
 8020a14:	4b89      	ldr	r3, [pc, #548]	; (8020c3c <_vfiprintf_r+0x240>)
 8020a16:	429d      	cmp	r5, r3
 8020a18:	d11b      	bne.n	8020a52 <_vfiprintf_r+0x56>
 8020a1a:	6875      	ldr	r5, [r6, #4]
 8020a1c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020a1e:	07d9      	lsls	r1, r3, #31
 8020a20:	d405      	bmi.n	8020a2e <_vfiprintf_r+0x32>
 8020a22:	89ab      	ldrh	r3, [r5, #12]
 8020a24:	059a      	lsls	r2, r3, #22
 8020a26:	d402      	bmi.n	8020a2e <_vfiprintf_r+0x32>
 8020a28:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020a2a:	f7ff feb4 	bl	8020796 <__retarget_lock_acquire_recursive>
 8020a2e:	89ab      	ldrh	r3, [r5, #12]
 8020a30:	071b      	lsls	r3, r3, #28
 8020a32:	d501      	bpl.n	8020a38 <_vfiprintf_r+0x3c>
 8020a34:	692b      	ldr	r3, [r5, #16]
 8020a36:	b9eb      	cbnz	r3, 8020a74 <_vfiprintf_r+0x78>
 8020a38:	4629      	mov	r1, r5
 8020a3a:	4630      	mov	r0, r6
 8020a3c:	f000 fc08 	bl	8021250 <__swsetup_r>
 8020a40:	b1c0      	cbz	r0, 8020a74 <_vfiprintf_r+0x78>
 8020a42:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020a44:	07dc      	lsls	r4, r3, #31
 8020a46:	d50e      	bpl.n	8020a66 <_vfiprintf_r+0x6a>
 8020a48:	f04f 30ff 	mov.w	r0, #4294967295
 8020a4c:	b01d      	add	sp, #116	; 0x74
 8020a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a52:	4b7b      	ldr	r3, [pc, #492]	; (8020c40 <_vfiprintf_r+0x244>)
 8020a54:	429d      	cmp	r5, r3
 8020a56:	d101      	bne.n	8020a5c <_vfiprintf_r+0x60>
 8020a58:	68b5      	ldr	r5, [r6, #8]
 8020a5a:	e7df      	b.n	8020a1c <_vfiprintf_r+0x20>
 8020a5c:	4b79      	ldr	r3, [pc, #484]	; (8020c44 <_vfiprintf_r+0x248>)
 8020a5e:	429d      	cmp	r5, r3
 8020a60:	bf08      	it	eq
 8020a62:	68f5      	ldreq	r5, [r6, #12]
 8020a64:	e7da      	b.n	8020a1c <_vfiprintf_r+0x20>
 8020a66:	89ab      	ldrh	r3, [r5, #12]
 8020a68:	0598      	lsls	r0, r3, #22
 8020a6a:	d4ed      	bmi.n	8020a48 <_vfiprintf_r+0x4c>
 8020a6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020a6e:	f7ff fe94 	bl	802079a <__retarget_lock_release_recursive>
 8020a72:	e7e9      	b.n	8020a48 <_vfiprintf_r+0x4c>
 8020a74:	2300      	movs	r3, #0
 8020a76:	9309      	str	r3, [sp, #36]	; 0x24
 8020a78:	2320      	movs	r3, #32
 8020a7a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020a7e:	f8cd 800c 	str.w	r8, [sp, #12]
 8020a82:	2330      	movs	r3, #48	; 0x30
 8020a84:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020c48 <_vfiprintf_r+0x24c>
 8020a88:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020a8c:	f04f 0901 	mov.w	r9, #1
 8020a90:	4623      	mov	r3, r4
 8020a92:	469a      	mov	sl, r3
 8020a94:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020a98:	b10a      	cbz	r2, 8020a9e <_vfiprintf_r+0xa2>
 8020a9a:	2a25      	cmp	r2, #37	; 0x25
 8020a9c:	d1f9      	bne.n	8020a92 <_vfiprintf_r+0x96>
 8020a9e:	ebba 0b04 	subs.w	fp, sl, r4
 8020aa2:	d00b      	beq.n	8020abc <_vfiprintf_r+0xc0>
 8020aa4:	465b      	mov	r3, fp
 8020aa6:	4622      	mov	r2, r4
 8020aa8:	4629      	mov	r1, r5
 8020aaa:	4630      	mov	r0, r6
 8020aac:	f7ff ff93 	bl	80209d6 <__sfputs_r>
 8020ab0:	3001      	adds	r0, #1
 8020ab2:	f000 80aa 	beq.w	8020c0a <_vfiprintf_r+0x20e>
 8020ab6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020ab8:	445a      	add	r2, fp
 8020aba:	9209      	str	r2, [sp, #36]	; 0x24
 8020abc:	f89a 3000 	ldrb.w	r3, [sl]
 8020ac0:	2b00      	cmp	r3, #0
 8020ac2:	f000 80a2 	beq.w	8020c0a <_vfiprintf_r+0x20e>
 8020ac6:	2300      	movs	r3, #0
 8020ac8:	f04f 32ff 	mov.w	r2, #4294967295
 8020acc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020ad0:	f10a 0a01 	add.w	sl, sl, #1
 8020ad4:	9304      	str	r3, [sp, #16]
 8020ad6:	9307      	str	r3, [sp, #28]
 8020ad8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020adc:	931a      	str	r3, [sp, #104]	; 0x68
 8020ade:	4654      	mov	r4, sl
 8020ae0:	2205      	movs	r2, #5
 8020ae2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020ae6:	4858      	ldr	r0, [pc, #352]	; (8020c48 <_vfiprintf_r+0x24c>)
 8020ae8:	f7df fb82 	bl	80001f0 <memchr>
 8020aec:	9a04      	ldr	r2, [sp, #16]
 8020aee:	b9d8      	cbnz	r0, 8020b28 <_vfiprintf_r+0x12c>
 8020af0:	06d1      	lsls	r1, r2, #27
 8020af2:	bf44      	itt	mi
 8020af4:	2320      	movmi	r3, #32
 8020af6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020afa:	0713      	lsls	r3, r2, #28
 8020afc:	bf44      	itt	mi
 8020afe:	232b      	movmi	r3, #43	; 0x2b
 8020b00:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020b04:	f89a 3000 	ldrb.w	r3, [sl]
 8020b08:	2b2a      	cmp	r3, #42	; 0x2a
 8020b0a:	d015      	beq.n	8020b38 <_vfiprintf_r+0x13c>
 8020b0c:	9a07      	ldr	r2, [sp, #28]
 8020b0e:	4654      	mov	r4, sl
 8020b10:	2000      	movs	r0, #0
 8020b12:	f04f 0c0a 	mov.w	ip, #10
 8020b16:	4621      	mov	r1, r4
 8020b18:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020b1c:	3b30      	subs	r3, #48	; 0x30
 8020b1e:	2b09      	cmp	r3, #9
 8020b20:	d94e      	bls.n	8020bc0 <_vfiprintf_r+0x1c4>
 8020b22:	b1b0      	cbz	r0, 8020b52 <_vfiprintf_r+0x156>
 8020b24:	9207      	str	r2, [sp, #28]
 8020b26:	e014      	b.n	8020b52 <_vfiprintf_r+0x156>
 8020b28:	eba0 0308 	sub.w	r3, r0, r8
 8020b2c:	fa09 f303 	lsl.w	r3, r9, r3
 8020b30:	4313      	orrs	r3, r2
 8020b32:	9304      	str	r3, [sp, #16]
 8020b34:	46a2      	mov	sl, r4
 8020b36:	e7d2      	b.n	8020ade <_vfiprintf_r+0xe2>
 8020b38:	9b03      	ldr	r3, [sp, #12]
 8020b3a:	1d19      	adds	r1, r3, #4
 8020b3c:	681b      	ldr	r3, [r3, #0]
 8020b3e:	9103      	str	r1, [sp, #12]
 8020b40:	2b00      	cmp	r3, #0
 8020b42:	bfbb      	ittet	lt
 8020b44:	425b      	neglt	r3, r3
 8020b46:	f042 0202 	orrlt.w	r2, r2, #2
 8020b4a:	9307      	strge	r3, [sp, #28]
 8020b4c:	9307      	strlt	r3, [sp, #28]
 8020b4e:	bfb8      	it	lt
 8020b50:	9204      	strlt	r2, [sp, #16]
 8020b52:	7823      	ldrb	r3, [r4, #0]
 8020b54:	2b2e      	cmp	r3, #46	; 0x2e
 8020b56:	d10c      	bne.n	8020b72 <_vfiprintf_r+0x176>
 8020b58:	7863      	ldrb	r3, [r4, #1]
 8020b5a:	2b2a      	cmp	r3, #42	; 0x2a
 8020b5c:	d135      	bne.n	8020bca <_vfiprintf_r+0x1ce>
 8020b5e:	9b03      	ldr	r3, [sp, #12]
 8020b60:	1d1a      	adds	r2, r3, #4
 8020b62:	681b      	ldr	r3, [r3, #0]
 8020b64:	9203      	str	r2, [sp, #12]
 8020b66:	2b00      	cmp	r3, #0
 8020b68:	bfb8      	it	lt
 8020b6a:	f04f 33ff 	movlt.w	r3, #4294967295
 8020b6e:	3402      	adds	r4, #2
 8020b70:	9305      	str	r3, [sp, #20]
 8020b72:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020c58 <_vfiprintf_r+0x25c>
 8020b76:	7821      	ldrb	r1, [r4, #0]
 8020b78:	2203      	movs	r2, #3
 8020b7a:	4650      	mov	r0, sl
 8020b7c:	f7df fb38 	bl	80001f0 <memchr>
 8020b80:	b140      	cbz	r0, 8020b94 <_vfiprintf_r+0x198>
 8020b82:	2340      	movs	r3, #64	; 0x40
 8020b84:	eba0 000a 	sub.w	r0, r0, sl
 8020b88:	fa03 f000 	lsl.w	r0, r3, r0
 8020b8c:	9b04      	ldr	r3, [sp, #16]
 8020b8e:	4303      	orrs	r3, r0
 8020b90:	3401      	adds	r4, #1
 8020b92:	9304      	str	r3, [sp, #16]
 8020b94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020b98:	482c      	ldr	r0, [pc, #176]	; (8020c4c <_vfiprintf_r+0x250>)
 8020b9a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020b9e:	2206      	movs	r2, #6
 8020ba0:	f7df fb26 	bl	80001f0 <memchr>
 8020ba4:	2800      	cmp	r0, #0
 8020ba6:	d03f      	beq.n	8020c28 <_vfiprintf_r+0x22c>
 8020ba8:	4b29      	ldr	r3, [pc, #164]	; (8020c50 <_vfiprintf_r+0x254>)
 8020baa:	bb1b      	cbnz	r3, 8020bf4 <_vfiprintf_r+0x1f8>
 8020bac:	9b03      	ldr	r3, [sp, #12]
 8020bae:	3307      	adds	r3, #7
 8020bb0:	f023 0307 	bic.w	r3, r3, #7
 8020bb4:	3308      	adds	r3, #8
 8020bb6:	9303      	str	r3, [sp, #12]
 8020bb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020bba:	443b      	add	r3, r7
 8020bbc:	9309      	str	r3, [sp, #36]	; 0x24
 8020bbe:	e767      	b.n	8020a90 <_vfiprintf_r+0x94>
 8020bc0:	fb0c 3202 	mla	r2, ip, r2, r3
 8020bc4:	460c      	mov	r4, r1
 8020bc6:	2001      	movs	r0, #1
 8020bc8:	e7a5      	b.n	8020b16 <_vfiprintf_r+0x11a>
 8020bca:	2300      	movs	r3, #0
 8020bcc:	3401      	adds	r4, #1
 8020bce:	9305      	str	r3, [sp, #20]
 8020bd0:	4619      	mov	r1, r3
 8020bd2:	f04f 0c0a 	mov.w	ip, #10
 8020bd6:	4620      	mov	r0, r4
 8020bd8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020bdc:	3a30      	subs	r2, #48	; 0x30
 8020bde:	2a09      	cmp	r2, #9
 8020be0:	d903      	bls.n	8020bea <_vfiprintf_r+0x1ee>
 8020be2:	2b00      	cmp	r3, #0
 8020be4:	d0c5      	beq.n	8020b72 <_vfiprintf_r+0x176>
 8020be6:	9105      	str	r1, [sp, #20]
 8020be8:	e7c3      	b.n	8020b72 <_vfiprintf_r+0x176>
 8020bea:	fb0c 2101 	mla	r1, ip, r1, r2
 8020bee:	4604      	mov	r4, r0
 8020bf0:	2301      	movs	r3, #1
 8020bf2:	e7f0      	b.n	8020bd6 <_vfiprintf_r+0x1da>
 8020bf4:	ab03      	add	r3, sp, #12
 8020bf6:	9300      	str	r3, [sp, #0]
 8020bf8:	462a      	mov	r2, r5
 8020bfa:	4b16      	ldr	r3, [pc, #88]	; (8020c54 <_vfiprintf_r+0x258>)
 8020bfc:	a904      	add	r1, sp, #16
 8020bfe:	4630      	mov	r0, r6
 8020c00:	f3af 8000 	nop.w
 8020c04:	4607      	mov	r7, r0
 8020c06:	1c78      	adds	r0, r7, #1
 8020c08:	d1d6      	bne.n	8020bb8 <_vfiprintf_r+0x1bc>
 8020c0a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020c0c:	07d9      	lsls	r1, r3, #31
 8020c0e:	d405      	bmi.n	8020c1c <_vfiprintf_r+0x220>
 8020c10:	89ab      	ldrh	r3, [r5, #12]
 8020c12:	059a      	lsls	r2, r3, #22
 8020c14:	d402      	bmi.n	8020c1c <_vfiprintf_r+0x220>
 8020c16:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020c18:	f7ff fdbf 	bl	802079a <__retarget_lock_release_recursive>
 8020c1c:	89ab      	ldrh	r3, [r5, #12]
 8020c1e:	065b      	lsls	r3, r3, #25
 8020c20:	f53f af12 	bmi.w	8020a48 <_vfiprintf_r+0x4c>
 8020c24:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020c26:	e711      	b.n	8020a4c <_vfiprintf_r+0x50>
 8020c28:	ab03      	add	r3, sp, #12
 8020c2a:	9300      	str	r3, [sp, #0]
 8020c2c:	462a      	mov	r2, r5
 8020c2e:	4b09      	ldr	r3, [pc, #36]	; (8020c54 <_vfiprintf_r+0x258>)
 8020c30:	a904      	add	r1, sp, #16
 8020c32:	4630      	mov	r0, r6
 8020c34:	f000 f880 	bl	8020d38 <_printf_i>
 8020c38:	e7e4      	b.n	8020c04 <_vfiprintf_r+0x208>
 8020c3a:	bf00      	nop
 8020c3c:	080242f4 	.word	0x080242f4
 8020c40:	08024314 	.word	0x08024314
 8020c44:	080242d4 	.word	0x080242d4
 8020c48:	08024338 	.word	0x08024338
 8020c4c:	08024342 	.word	0x08024342
 8020c50:	00000000 	.word	0x00000000
 8020c54:	080209d7 	.word	0x080209d7
 8020c58:	0802433e 	.word	0x0802433e

08020c5c <_printf_common>:
 8020c5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020c60:	4616      	mov	r6, r2
 8020c62:	4699      	mov	r9, r3
 8020c64:	688a      	ldr	r2, [r1, #8]
 8020c66:	690b      	ldr	r3, [r1, #16]
 8020c68:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020c6c:	4293      	cmp	r3, r2
 8020c6e:	bfb8      	it	lt
 8020c70:	4613      	movlt	r3, r2
 8020c72:	6033      	str	r3, [r6, #0]
 8020c74:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020c78:	4607      	mov	r7, r0
 8020c7a:	460c      	mov	r4, r1
 8020c7c:	b10a      	cbz	r2, 8020c82 <_printf_common+0x26>
 8020c7e:	3301      	adds	r3, #1
 8020c80:	6033      	str	r3, [r6, #0]
 8020c82:	6823      	ldr	r3, [r4, #0]
 8020c84:	0699      	lsls	r1, r3, #26
 8020c86:	bf42      	ittt	mi
 8020c88:	6833      	ldrmi	r3, [r6, #0]
 8020c8a:	3302      	addmi	r3, #2
 8020c8c:	6033      	strmi	r3, [r6, #0]
 8020c8e:	6825      	ldr	r5, [r4, #0]
 8020c90:	f015 0506 	ands.w	r5, r5, #6
 8020c94:	d106      	bne.n	8020ca4 <_printf_common+0x48>
 8020c96:	f104 0a19 	add.w	sl, r4, #25
 8020c9a:	68e3      	ldr	r3, [r4, #12]
 8020c9c:	6832      	ldr	r2, [r6, #0]
 8020c9e:	1a9b      	subs	r3, r3, r2
 8020ca0:	42ab      	cmp	r3, r5
 8020ca2:	dc26      	bgt.n	8020cf2 <_printf_common+0x96>
 8020ca4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8020ca8:	1e13      	subs	r3, r2, #0
 8020caa:	6822      	ldr	r2, [r4, #0]
 8020cac:	bf18      	it	ne
 8020cae:	2301      	movne	r3, #1
 8020cb0:	0692      	lsls	r2, r2, #26
 8020cb2:	d42b      	bmi.n	8020d0c <_printf_common+0xb0>
 8020cb4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8020cb8:	4649      	mov	r1, r9
 8020cba:	4638      	mov	r0, r7
 8020cbc:	47c0      	blx	r8
 8020cbe:	3001      	adds	r0, #1
 8020cc0:	d01e      	beq.n	8020d00 <_printf_common+0xa4>
 8020cc2:	6823      	ldr	r3, [r4, #0]
 8020cc4:	68e5      	ldr	r5, [r4, #12]
 8020cc6:	6832      	ldr	r2, [r6, #0]
 8020cc8:	f003 0306 	and.w	r3, r3, #6
 8020ccc:	2b04      	cmp	r3, #4
 8020cce:	bf08      	it	eq
 8020cd0:	1aad      	subeq	r5, r5, r2
 8020cd2:	68a3      	ldr	r3, [r4, #8]
 8020cd4:	6922      	ldr	r2, [r4, #16]
 8020cd6:	bf0c      	ite	eq
 8020cd8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8020cdc:	2500      	movne	r5, #0
 8020cde:	4293      	cmp	r3, r2
 8020ce0:	bfc4      	itt	gt
 8020ce2:	1a9b      	subgt	r3, r3, r2
 8020ce4:	18ed      	addgt	r5, r5, r3
 8020ce6:	2600      	movs	r6, #0
 8020ce8:	341a      	adds	r4, #26
 8020cea:	42b5      	cmp	r5, r6
 8020cec:	d11a      	bne.n	8020d24 <_printf_common+0xc8>
 8020cee:	2000      	movs	r0, #0
 8020cf0:	e008      	b.n	8020d04 <_printf_common+0xa8>
 8020cf2:	2301      	movs	r3, #1
 8020cf4:	4652      	mov	r2, sl
 8020cf6:	4649      	mov	r1, r9
 8020cf8:	4638      	mov	r0, r7
 8020cfa:	47c0      	blx	r8
 8020cfc:	3001      	adds	r0, #1
 8020cfe:	d103      	bne.n	8020d08 <_printf_common+0xac>
 8020d00:	f04f 30ff 	mov.w	r0, #4294967295
 8020d04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020d08:	3501      	adds	r5, #1
 8020d0a:	e7c6      	b.n	8020c9a <_printf_common+0x3e>
 8020d0c:	18e1      	adds	r1, r4, r3
 8020d0e:	1c5a      	adds	r2, r3, #1
 8020d10:	2030      	movs	r0, #48	; 0x30
 8020d12:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8020d16:	4422      	add	r2, r4
 8020d18:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8020d1c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8020d20:	3302      	adds	r3, #2
 8020d22:	e7c7      	b.n	8020cb4 <_printf_common+0x58>
 8020d24:	2301      	movs	r3, #1
 8020d26:	4622      	mov	r2, r4
 8020d28:	4649      	mov	r1, r9
 8020d2a:	4638      	mov	r0, r7
 8020d2c:	47c0      	blx	r8
 8020d2e:	3001      	adds	r0, #1
 8020d30:	d0e6      	beq.n	8020d00 <_printf_common+0xa4>
 8020d32:	3601      	adds	r6, #1
 8020d34:	e7d9      	b.n	8020cea <_printf_common+0x8e>
	...

08020d38 <_printf_i>:
 8020d38:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8020d3c:	7e0f      	ldrb	r7, [r1, #24]
 8020d3e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020d40:	2f78      	cmp	r7, #120	; 0x78
 8020d42:	4691      	mov	r9, r2
 8020d44:	4680      	mov	r8, r0
 8020d46:	460c      	mov	r4, r1
 8020d48:	469a      	mov	sl, r3
 8020d4a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8020d4e:	d807      	bhi.n	8020d60 <_printf_i+0x28>
 8020d50:	2f62      	cmp	r7, #98	; 0x62
 8020d52:	d80a      	bhi.n	8020d6a <_printf_i+0x32>
 8020d54:	2f00      	cmp	r7, #0
 8020d56:	f000 80d8 	beq.w	8020f0a <_printf_i+0x1d2>
 8020d5a:	2f58      	cmp	r7, #88	; 0x58
 8020d5c:	f000 80a3 	beq.w	8020ea6 <_printf_i+0x16e>
 8020d60:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020d64:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8020d68:	e03a      	b.n	8020de0 <_printf_i+0xa8>
 8020d6a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8020d6e:	2b15      	cmp	r3, #21
 8020d70:	d8f6      	bhi.n	8020d60 <_printf_i+0x28>
 8020d72:	a101      	add	r1, pc, #4	; (adr r1, 8020d78 <_printf_i+0x40>)
 8020d74:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8020d78:	08020dd1 	.word	0x08020dd1
 8020d7c:	08020de5 	.word	0x08020de5
 8020d80:	08020d61 	.word	0x08020d61
 8020d84:	08020d61 	.word	0x08020d61
 8020d88:	08020d61 	.word	0x08020d61
 8020d8c:	08020d61 	.word	0x08020d61
 8020d90:	08020de5 	.word	0x08020de5
 8020d94:	08020d61 	.word	0x08020d61
 8020d98:	08020d61 	.word	0x08020d61
 8020d9c:	08020d61 	.word	0x08020d61
 8020da0:	08020d61 	.word	0x08020d61
 8020da4:	08020ef1 	.word	0x08020ef1
 8020da8:	08020e15 	.word	0x08020e15
 8020dac:	08020ed3 	.word	0x08020ed3
 8020db0:	08020d61 	.word	0x08020d61
 8020db4:	08020d61 	.word	0x08020d61
 8020db8:	08020f13 	.word	0x08020f13
 8020dbc:	08020d61 	.word	0x08020d61
 8020dc0:	08020e15 	.word	0x08020e15
 8020dc4:	08020d61 	.word	0x08020d61
 8020dc8:	08020d61 	.word	0x08020d61
 8020dcc:	08020edb 	.word	0x08020edb
 8020dd0:	682b      	ldr	r3, [r5, #0]
 8020dd2:	1d1a      	adds	r2, r3, #4
 8020dd4:	681b      	ldr	r3, [r3, #0]
 8020dd6:	602a      	str	r2, [r5, #0]
 8020dd8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020ddc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8020de0:	2301      	movs	r3, #1
 8020de2:	e0a3      	b.n	8020f2c <_printf_i+0x1f4>
 8020de4:	6820      	ldr	r0, [r4, #0]
 8020de6:	6829      	ldr	r1, [r5, #0]
 8020de8:	0606      	lsls	r6, r0, #24
 8020dea:	f101 0304 	add.w	r3, r1, #4
 8020dee:	d50a      	bpl.n	8020e06 <_printf_i+0xce>
 8020df0:	680e      	ldr	r6, [r1, #0]
 8020df2:	602b      	str	r3, [r5, #0]
 8020df4:	2e00      	cmp	r6, #0
 8020df6:	da03      	bge.n	8020e00 <_printf_i+0xc8>
 8020df8:	232d      	movs	r3, #45	; 0x2d
 8020dfa:	4276      	negs	r6, r6
 8020dfc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020e00:	485e      	ldr	r0, [pc, #376]	; (8020f7c <_printf_i+0x244>)
 8020e02:	230a      	movs	r3, #10
 8020e04:	e019      	b.n	8020e3a <_printf_i+0x102>
 8020e06:	680e      	ldr	r6, [r1, #0]
 8020e08:	602b      	str	r3, [r5, #0]
 8020e0a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020e0e:	bf18      	it	ne
 8020e10:	b236      	sxthne	r6, r6
 8020e12:	e7ef      	b.n	8020df4 <_printf_i+0xbc>
 8020e14:	682b      	ldr	r3, [r5, #0]
 8020e16:	6820      	ldr	r0, [r4, #0]
 8020e18:	1d19      	adds	r1, r3, #4
 8020e1a:	6029      	str	r1, [r5, #0]
 8020e1c:	0601      	lsls	r1, r0, #24
 8020e1e:	d501      	bpl.n	8020e24 <_printf_i+0xec>
 8020e20:	681e      	ldr	r6, [r3, #0]
 8020e22:	e002      	b.n	8020e2a <_printf_i+0xf2>
 8020e24:	0646      	lsls	r6, r0, #25
 8020e26:	d5fb      	bpl.n	8020e20 <_printf_i+0xe8>
 8020e28:	881e      	ldrh	r6, [r3, #0]
 8020e2a:	4854      	ldr	r0, [pc, #336]	; (8020f7c <_printf_i+0x244>)
 8020e2c:	2f6f      	cmp	r7, #111	; 0x6f
 8020e2e:	bf0c      	ite	eq
 8020e30:	2308      	moveq	r3, #8
 8020e32:	230a      	movne	r3, #10
 8020e34:	2100      	movs	r1, #0
 8020e36:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8020e3a:	6865      	ldr	r5, [r4, #4]
 8020e3c:	60a5      	str	r5, [r4, #8]
 8020e3e:	2d00      	cmp	r5, #0
 8020e40:	bfa2      	ittt	ge
 8020e42:	6821      	ldrge	r1, [r4, #0]
 8020e44:	f021 0104 	bicge.w	r1, r1, #4
 8020e48:	6021      	strge	r1, [r4, #0]
 8020e4a:	b90e      	cbnz	r6, 8020e50 <_printf_i+0x118>
 8020e4c:	2d00      	cmp	r5, #0
 8020e4e:	d04d      	beq.n	8020eec <_printf_i+0x1b4>
 8020e50:	4615      	mov	r5, r2
 8020e52:	fbb6 f1f3 	udiv	r1, r6, r3
 8020e56:	fb03 6711 	mls	r7, r3, r1, r6
 8020e5a:	5dc7      	ldrb	r7, [r0, r7]
 8020e5c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8020e60:	4637      	mov	r7, r6
 8020e62:	42bb      	cmp	r3, r7
 8020e64:	460e      	mov	r6, r1
 8020e66:	d9f4      	bls.n	8020e52 <_printf_i+0x11a>
 8020e68:	2b08      	cmp	r3, #8
 8020e6a:	d10b      	bne.n	8020e84 <_printf_i+0x14c>
 8020e6c:	6823      	ldr	r3, [r4, #0]
 8020e6e:	07de      	lsls	r6, r3, #31
 8020e70:	d508      	bpl.n	8020e84 <_printf_i+0x14c>
 8020e72:	6923      	ldr	r3, [r4, #16]
 8020e74:	6861      	ldr	r1, [r4, #4]
 8020e76:	4299      	cmp	r1, r3
 8020e78:	bfde      	ittt	le
 8020e7a:	2330      	movle	r3, #48	; 0x30
 8020e7c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8020e80:	f105 35ff 	addle.w	r5, r5, #4294967295
 8020e84:	1b52      	subs	r2, r2, r5
 8020e86:	6122      	str	r2, [r4, #16]
 8020e88:	f8cd a000 	str.w	sl, [sp]
 8020e8c:	464b      	mov	r3, r9
 8020e8e:	aa03      	add	r2, sp, #12
 8020e90:	4621      	mov	r1, r4
 8020e92:	4640      	mov	r0, r8
 8020e94:	f7ff fee2 	bl	8020c5c <_printf_common>
 8020e98:	3001      	adds	r0, #1
 8020e9a:	d14c      	bne.n	8020f36 <_printf_i+0x1fe>
 8020e9c:	f04f 30ff 	mov.w	r0, #4294967295
 8020ea0:	b004      	add	sp, #16
 8020ea2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020ea6:	4835      	ldr	r0, [pc, #212]	; (8020f7c <_printf_i+0x244>)
 8020ea8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8020eac:	6829      	ldr	r1, [r5, #0]
 8020eae:	6823      	ldr	r3, [r4, #0]
 8020eb0:	f851 6b04 	ldr.w	r6, [r1], #4
 8020eb4:	6029      	str	r1, [r5, #0]
 8020eb6:	061d      	lsls	r5, r3, #24
 8020eb8:	d514      	bpl.n	8020ee4 <_printf_i+0x1ac>
 8020eba:	07df      	lsls	r7, r3, #31
 8020ebc:	bf44      	itt	mi
 8020ebe:	f043 0320 	orrmi.w	r3, r3, #32
 8020ec2:	6023      	strmi	r3, [r4, #0]
 8020ec4:	b91e      	cbnz	r6, 8020ece <_printf_i+0x196>
 8020ec6:	6823      	ldr	r3, [r4, #0]
 8020ec8:	f023 0320 	bic.w	r3, r3, #32
 8020ecc:	6023      	str	r3, [r4, #0]
 8020ece:	2310      	movs	r3, #16
 8020ed0:	e7b0      	b.n	8020e34 <_printf_i+0xfc>
 8020ed2:	6823      	ldr	r3, [r4, #0]
 8020ed4:	f043 0320 	orr.w	r3, r3, #32
 8020ed8:	6023      	str	r3, [r4, #0]
 8020eda:	2378      	movs	r3, #120	; 0x78
 8020edc:	4828      	ldr	r0, [pc, #160]	; (8020f80 <_printf_i+0x248>)
 8020ede:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8020ee2:	e7e3      	b.n	8020eac <_printf_i+0x174>
 8020ee4:	0659      	lsls	r1, r3, #25
 8020ee6:	bf48      	it	mi
 8020ee8:	b2b6      	uxthmi	r6, r6
 8020eea:	e7e6      	b.n	8020eba <_printf_i+0x182>
 8020eec:	4615      	mov	r5, r2
 8020eee:	e7bb      	b.n	8020e68 <_printf_i+0x130>
 8020ef0:	682b      	ldr	r3, [r5, #0]
 8020ef2:	6826      	ldr	r6, [r4, #0]
 8020ef4:	6961      	ldr	r1, [r4, #20]
 8020ef6:	1d18      	adds	r0, r3, #4
 8020ef8:	6028      	str	r0, [r5, #0]
 8020efa:	0635      	lsls	r5, r6, #24
 8020efc:	681b      	ldr	r3, [r3, #0]
 8020efe:	d501      	bpl.n	8020f04 <_printf_i+0x1cc>
 8020f00:	6019      	str	r1, [r3, #0]
 8020f02:	e002      	b.n	8020f0a <_printf_i+0x1d2>
 8020f04:	0670      	lsls	r0, r6, #25
 8020f06:	d5fb      	bpl.n	8020f00 <_printf_i+0x1c8>
 8020f08:	8019      	strh	r1, [r3, #0]
 8020f0a:	2300      	movs	r3, #0
 8020f0c:	6123      	str	r3, [r4, #16]
 8020f0e:	4615      	mov	r5, r2
 8020f10:	e7ba      	b.n	8020e88 <_printf_i+0x150>
 8020f12:	682b      	ldr	r3, [r5, #0]
 8020f14:	1d1a      	adds	r2, r3, #4
 8020f16:	602a      	str	r2, [r5, #0]
 8020f18:	681d      	ldr	r5, [r3, #0]
 8020f1a:	6862      	ldr	r2, [r4, #4]
 8020f1c:	2100      	movs	r1, #0
 8020f1e:	4628      	mov	r0, r5
 8020f20:	f7df f966 	bl	80001f0 <memchr>
 8020f24:	b108      	cbz	r0, 8020f2a <_printf_i+0x1f2>
 8020f26:	1b40      	subs	r0, r0, r5
 8020f28:	6060      	str	r0, [r4, #4]
 8020f2a:	6863      	ldr	r3, [r4, #4]
 8020f2c:	6123      	str	r3, [r4, #16]
 8020f2e:	2300      	movs	r3, #0
 8020f30:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020f34:	e7a8      	b.n	8020e88 <_printf_i+0x150>
 8020f36:	6923      	ldr	r3, [r4, #16]
 8020f38:	462a      	mov	r2, r5
 8020f3a:	4649      	mov	r1, r9
 8020f3c:	4640      	mov	r0, r8
 8020f3e:	47d0      	blx	sl
 8020f40:	3001      	adds	r0, #1
 8020f42:	d0ab      	beq.n	8020e9c <_printf_i+0x164>
 8020f44:	6823      	ldr	r3, [r4, #0]
 8020f46:	079b      	lsls	r3, r3, #30
 8020f48:	d413      	bmi.n	8020f72 <_printf_i+0x23a>
 8020f4a:	68e0      	ldr	r0, [r4, #12]
 8020f4c:	9b03      	ldr	r3, [sp, #12]
 8020f4e:	4298      	cmp	r0, r3
 8020f50:	bfb8      	it	lt
 8020f52:	4618      	movlt	r0, r3
 8020f54:	e7a4      	b.n	8020ea0 <_printf_i+0x168>
 8020f56:	2301      	movs	r3, #1
 8020f58:	4632      	mov	r2, r6
 8020f5a:	4649      	mov	r1, r9
 8020f5c:	4640      	mov	r0, r8
 8020f5e:	47d0      	blx	sl
 8020f60:	3001      	adds	r0, #1
 8020f62:	d09b      	beq.n	8020e9c <_printf_i+0x164>
 8020f64:	3501      	adds	r5, #1
 8020f66:	68e3      	ldr	r3, [r4, #12]
 8020f68:	9903      	ldr	r1, [sp, #12]
 8020f6a:	1a5b      	subs	r3, r3, r1
 8020f6c:	42ab      	cmp	r3, r5
 8020f6e:	dcf2      	bgt.n	8020f56 <_printf_i+0x21e>
 8020f70:	e7eb      	b.n	8020f4a <_printf_i+0x212>
 8020f72:	2500      	movs	r5, #0
 8020f74:	f104 0619 	add.w	r6, r4, #25
 8020f78:	e7f5      	b.n	8020f66 <_printf_i+0x22e>
 8020f7a:	bf00      	nop
 8020f7c:	08024349 	.word	0x08024349
 8020f80:	0802435a 	.word	0x0802435a

08020f84 <cleanup_glue>:
 8020f84:	b538      	push	{r3, r4, r5, lr}
 8020f86:	460c      	mov	r4, r1
 8020f88:	6809      	ldr	r1, [r1, #0]
 8020f8a:	4605      	mov	r5, r0
 8020f8c:	b109      	cbz	r1, 8020f92 <cleanup_glue+0xe>
 8020f8e:	f7ff fff9 	bl	8020f84 <cleanup_glue>
 8020f92:	4621      	mov	r1, r4
 8020f94:	4628      	mov	r0, r5
 8020f96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020f9a:	f7ff bc25 	b.w	80207e8 <_free_r>
	...

08020fa0 <_reclaim_reent>:
 8020fa0:	4b2c      	ldr	r3, [pc, #176]	; (8021054 <_reclaim_reent+0xb4>)
 8020fa2:	681b      	ldr	r3, [r3, #0]
 8020fa4:	4283      	cmp	r3, r0
 8020fa6:	b570      	push	{r4, r5, r6, lr}
 8020fa8:	4604      	mov	r4, r0
 8020faa:	d051      	beq.n	8021050 <_reclaim_reent+0xb0>
 8020fac:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8020fae:	b143      	cbz	r3, 8020fc2 <_reclaim_reent+0x22>
 8020fb0:	68db      	ldr	r3, [r3, #12]
 8020fb2:	2b00      	cmp	r3, #0
 8020fb4:	d14a      	bne.n	802104c <_reclaim_reent+0xac>
 8020fb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8020fb8:	6819      	ldr	r1, [r3, #0]
 8020fba:	b111      	cbz	r1, 8020fc2 <_reclaim_reent+0x22>
 8020fbc:	4620      	mov	r0, r4
 8020fbe:	f7ff fc13 	bl	80207e8 <_free_r>
 8020fc2:	6961      	ldr	r1, [r4, #20]
 8020fc4:	b111      	cbz	r1, 8020fcc <_reclaim_reent+0x2c>
 8020fc6:	4620      	mov	r0, r4
 8020fc8:	f7ff fc0e 	bl	80207e8 <_free_r>
 8020fcc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8020fce:	b111      	cbz	r1, 8020fd6 <_reclaim_reent+0x36>
 8020fd0:	4620      	mov	r0, r4
 8020fd2:	f7ff fc09 	bl	80207e8 <_free_r>
 8020fd6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8020fd8:	b111      	cbz	r1, 8020fe0 <_reclaim_reent+0x40>
 8020fda:	4620      	mov	r0, r4
 8020fdc:	f7ff fc04 	bl	80207e8 <_free_r>
 8020fe0:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8020fe2:	b111      	cbz	r1, 8020fea <_reclaim_reent+0x4a>
 8020fe4:	4620      	mov	r0, r4
 8020fe6:	f7ff fbff 	bl	80207e8 <_free_r>
 8020fea:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020fec:	b111      	cbz	r1, 8020ff4 <_reclaim_reent+0x54>
 8020fee:	4620      	mov	r0, r4
 8020ff0:	f7ff fbfa 	bl	80207e8 <_free_r>
 8020ff4:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8020ff6:	b111      	cbz	r1, 8020ffe <_reclaim_reent+0x5e>
 8020ff8:	4620      	mov	r0, r4
 8020ffa:	f7ff fbf5 	bl	80207e8 <_free_r>
 8020ffe:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021000:	b111      	cbz	r1, 8021008 <_reclaim_reent+0x68>
 8021002:	4620      	mov	r0, r4
 8021004:	f7ff fbf0 	bl	80207e8 <_free_r>
 8021008:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802100a:	b111      	cbz	r1, 8021012 <_reclaim_reent+0x72>
 802100c:	4620      	mov	r0, r4
 802100e:	f7ff fbeb 	bl	80207e8 <_free_r>
 8021012:	69a3      	ldr	r3, [r4, #24]
 8021014:	b1e3      	cbz	r3, 8021050 <_reclaim_reent+0xb0>
 8021016:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8021018:	4620      	mov	r0, r4
 802101a:	4798      	blx	r3
 802101c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802101e:	b1b9      	cbz	r1, 8021050 <_reclaim_reent+0xb0>
 8021020:	4620      	mov	r0, r4
 8021022:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8021026:	f7ff bfad 	b.w	8020f84 <cleanup_glue>
 802102a:	5949      	ldr	r1, [r1, r5]
 802102c:	b941      	cbnz	r1, 8021040 <_reclaim_reent+0xa0>
 802102e:	3504      	adds	r5, #4
 8021030:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021032:	2d80      	cmp	r5, #128	; 0x80
 8021034:	68d9      	ldr	r1, [r3, #12]
 8021036:	d1f8      	bne.n	802102a <_reclaim_reent+0x8a>
 8021038:	4620      	mov	r0, r4
 802103a:	f7ff fbd5 	bl	80207e8 <_free_r>
 802103e:	e7ba      	b.n	8020fb6 <_reclaim_reent+0x16>
 8021040:	680e      	ldr	r6, [r1, #0]
 8021042:	4620      	mov	r0, r4
 8021044:	f7ff fbd0 	bl	80207e8 <_free_r>
 8021048:	4631      	mov	r1, r6
 802104a:	e7ef      	b.n	802102c <_reclaim_reent+0x8c>
 802104c:	2500      	movs	r5, #0
 802104e:	e7ef      	b.n	8021030 <_reclaim_reent+0x90>
 8021050:	bd70      	pop	{r4, r5, r6, pc}
 8021052:	bf00      	nop
 8021054:	20000104 	.word	0x20000104

08021058 <_sbrk_r>:
 8021058:	b538      	push	{r3, r4, r5, lr}
 802105a:	4d06      	ldr	r5, [pc, #24]	; (8021074 <_sbrk_r+0x1c>)
 802105c:	2300      	movs	r3, #0
 802105e:	4604      	mov	r4, r0
 8021060:	4608      	mov	r0, r1
 8021062:	602b      	str	r3, [r5, #0]
 8021064:	f7e0 ffee 	bl	8002044 <_sbrk>
 8021068:	1c43      	adds	r3, r0, #1
 802106a:	d102      	bne.n	8021072 <_sbrk_r+0x1a>
 802106c:	682b      	ldr	r3, [r5, #0]
 802106e:	b103      	cbz	r3, 8021072 <_sbrk_r+0x1a>
 8021070:	6023      	str	r3, [r4, #0]
 8021072:	bd38      	pop	{r3, r4, r5, pc}
 8021074:	200155fc 	.word	0x200155fc

08021078 <_raise_r>:
 8021078:	291f      	cmp	r1, #31
 802107a:	b538      	push	{r3, r4, r5, lr}
 802107c:	4604      	mov	r4, r0
 802107e:	460d      	mov	r5, r1
 8021080:	d904      	bls.n	802108c <_raise_r+0x14>
 8021082:	2316      	movs	r3, #22
 8021084:	6003      	str	r3, [r0, #0]
 8021086:	f04f 30ff 	mov.w	r0, #4294967295
 802108a:	bd38      	pop	{r3, r4, r5, pc}
 802108c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802108e:	b112      	cbz	r2, 8021096 <_raise_r+0x1e>
 8021090:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021094:	b94b      	cbnz	r3, 80210aa <_raise_r+0x32>
 8021096:	4620      	mov	r0, r4
 8021098:	f000 f830 	bl	80210fc <_getpid_r>
 802109c:	462a      	mov	r2, r5
 802109e:	4601      	mov	r1, r0
 80210a0:	4620      	mov	r0, r4
 80210a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80210a6:	f000 b817 	b.w	80210d8 <_kill_r>
 80210aa:	2b01      	cmp	r3, #1
 80210ac:	d00a      	beq.n	80210c4 <_raise_r+0x4c>
 80210ae:	1c59      	adds	r1, r3, #1
 80210b0:	d103      	bne.n	80210ba <_raise_r+0x42>
 80210b2:	2316      	movs	r3, #22
 80210b4:	6003      	str	r3, [r0, #0]
 80210b6:	2001      	movs	r0, #1
 80210b8:	e7e7      	b.n	802108a <_raise_r+0x12>
 80210ba:	2400      	movs	r4, #0
 80210bc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80210c0:	4628      	mov	r0, r5
 80210c2:	4798      	blx	r3
 80210c4:	2000      	movs	r0, #0
 80210c6:	e7e0      	b.n	802108a <_raise_r+0x12>

080210c8 <raise>:
 80210c8:	4b02      	ldr	r3, [pc, #8]	; (80210d4 <raise+0xc>)
 80210ca:	4601      	mov	r1, r0
 80210cc:	6818      	ldr	r0, [r3, #0]
 80210ce:	f7ff bfd3 	b.w	8021078 <_raise_r>
 80210d2:	bf00      	nop
 80210d4:	20000104 	.word	0x20000104

080210d8 <_kill_r>:
 80210d8:	b538      	push	{r3, r4, r5, lr}
 80210da:	4d07      	ldr	r5, [pc, #28]	; (80210f8 <_kill_r+0x20>)
 80210dc:	2300      	movs	r3, #0
 80210de:	4604      	mov	r4, r0
 80210e0:	4608      	mov	r0, r1
 80210e2:	4611      	mov	r1, r2
 80210e4:	602b      	str	r3, [r5, #0]
 80210e6:	f7e0 ff77 	bl	8001fd8 <_kill>
 80210ea:	1c43      	adds	r3, r0, #1
 80210ec:	d102      	bne.n	80210f4 <_kill_r+0x1c>
 80210ee:	682b      	ldr	r3, [r5, #0]
 80210f0:	b103      	cbz	r3, 80210f4 <_kill_r+0x1c>
 80210f2:	6023      	str	r3, [r4, #0]
 80210f4:	bd38      	pop	{r3, r4, r5, pc}
 80210f6:	bf00      	nop
 80210f8:	200155fc 	.word	0x200155fc

080210fc <_getpid_r>:
 80210fc:	f7e0 bf6a 	b.w	8001fd4 <_getpid>

08021100 <__sread>:
 8021100:	b510      	push	{r4, lr}
 8021102:	460c      	mov	r4, r1
 8021104:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021108:	f000 fac8 	bl	802169c <_read_r>
 802110c:	2800      	cmp	r0, #0
 802110e:	bfab      	itete	ge
 8021110:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021112:	89a3      	ldrhlt	r3, [r4, #12]
 8021114:	181b      	addge	r3, r3, r0
 8021116:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802111a:	bfac      	ite	ge
 802111c:	6563      	strge	r3, [r4, #84]	; 0x54
 802111e:	81a3      	strhlt	r3, [r4, #12]
 8021120:	bd10      	pop	{r4, pc}

08021122 <__swrite>:
 8021122:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021126:	461f      	mov	r7, r3
 8021128:	898b      	ldrh	r3, [r1, #12]
 802112a:	05db      	lsls	r3, r3, #23
 802112c:	4605      	mov	r5, r0
 802112e:	460c      	mov	r4, r1
 8021130:	4616      	mov	r6, r2
 8021132:	d505      	bpl.n	8021140 <__swrite+0x1e>
 8021134:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021138:	2302      	movs	r3, #2
 802113a:	2200      	movs	r2, #0
 802113c:	f000 fa2a 	bl	8021594 <_lseek_r>
 8021140:	89a3      	ldrh	r3, [r4, #12]
 8021142:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021146:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802114a:	81a3      	strh	r3, [r4, #12]
 802114c:	4632      	mov	r2, r6
 802114e:	463b      	mov	r3, r7
 8021150:	4628      	mov	r0, r5
 8021152:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021156:	f000 b869 	b.w	802122c <_write_r>

0802115a <__sseek>:
 802115a:	b510      	push	{r4, lr}
 802115c:	460c      	mov	r4, r1
 802115e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021162:	f000 fa17 	bl	8021594 <_lseek_r>
 8021166:	1c43      	adds	r3, r0, #1
 8021168:	89a3      	ldrh	r3, [r4, #12]
 802116a:	bf15      	itete	ne
 802116c:	6560      	strne	r0, [r4, #84]	; 0x54
 802116e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8021172:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8021176:	81a3      	strheq	r3, [r4, #12]
 8021178:	bf18      	it	ne
 802117a:	81a3      	strhne	r3, [r4, #12]
 802117c:	bd10      	pop	{r4, pc}

0802117e <__sclose>:
 802117e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021182:	f000 b935 	b.w	80213f0 <_close_r>
	...

08021188 <__swbuf_r>:
 8021188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802118a:	460e      	mov	r6, r1
 802118c:	4614      	mov	r4, r2
 802118e:	4605      	mov	r5, r0
 8021190:	b118      	cbz	r0, 802119a <__swbuf_r+0x12>
 8021192:	6983      	ldr	r3, [r0, #24]
 8021194:	b90b      	cbnz	r3, 802119a <__swbuf_r+0x12>
 8021196:	f7ff fa29 	bl	80205ec <__sinit>
 802119a:	4b21      	ldr	r3, [pc, #132]	; (8021220 <__swbuf_r+0x98>)
 802119c:	429c      	cmp	r4, r3
 802119e:	d12b      	bne.n	80211f8 <__swbuf_r+0x70>
 80211a0:	686c      	ldr	r4, [r5, #4]
 80211a2:	69a3      	ldr	r3, [r4, #24]
 80211a4:	60a3      	str	r3, [r4, #8]
 80211a6:	89a3      	ldrh	r3, [r4, #12]
 80211a8:	071a      	lsls	r2, r3, #28
 80211aa:	d52f      	bpl.n	802120c <__swbuf_r+0x84>
 80211ac:	6923      	ldr	r3, [r4, #16]
 80211ae:	b36b      	cbz	r3, 802120c <__swbuf_r+0x84>
 80211b0:	6923      	ldr	r3, [r4, #16]
 80211b2:	6820      	ldr	r0, [r4, #0]
 80211b4:	1ac0      	subs	r0, r0, r3
 80211b6:	6963      	ldr	r3, [r4, #20]
 80211b8:	b2f6      	uxtb	r6, r6
 80211ba:	4283      	cmp	r3, r0
 80211bc:	4637      	mov	r7, r6
 80211be:	dc04      	bgt.n	80211ca <__swbuf_r+0x42>
 80211c0:	4621      	mov	r1, r4
 80211c2:	4628      	mov	r0, r5
 80211c4:	f000 f9aa 	bl	802151c <_fflush_r>
 80211c8:	bb30      	cbnz	r0, 8021218 <__swbuf_r+0x90>
 80211ca:	68a3      	ldr	r3, [r4, #8]
 80211cc:	3b01      	subs	r3, #1
 80211ce:	60a3      	str	r3, [r4, #8]
 80211d0:	6823      	ldr	r3, [r4, #0]
 80211d2:	1c5a      	adds	r2, r3, #1
 80211d4:	6022      	str	r2, [r4, #0]
 80211d6:	701e      	strb	r6, [r3, #0]
 80211d8:	6963      	ldr	r3, [r4, #20]
 80211da:	3001      	adds	r0, #1
 80211dc:	4283      	cmp	r3, r0
 80211de:	d004      	beq.n	80211ea <__swbuf_r+0x62>
 80211e0:	89a3      	ldrh	r3, [r4, #12]
 80211e2:	07db      	lsls	r3, r3, #31
 80211e4:	d506      	bpl.n	80211f4 <__swbuf_r+0x6c>
 80211e6:	2e0a      	cmp	r6, #10
 80211e8:	d104      	bne.n	80211f4 <__swbuf_r+0x6c>
 80211ea:	4621      	mov	r1, r4
 80211ec:	4628      	mov	r0, r5
 80211ee:	f000 f995 	bl	802151c <_fflush_r>
 80211f2:	b988      	cbnz	r0, 8021218 <__swbuf_r+0x90>
 80211f4:	4638      	mov	r0, r7
 80211f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80211f8:	4b0a      	ldr	r3, [pc, #40]	; (8021224 <__swbuf_r+0x9c>)
 80211fa:	429c      	cmp	r4, r3
 80211fc:	d101      	bne.n	8021202 <__swbuf_r+0x7a>
 80211fe:	68ac      	ldr	r4, [r5, #8]
 8021200:	e7cf      	b.n	80211a2 <__swbuf_r+0x1a>
 8021202:	4b09      	ldr	r3, [pc, #36]	; (8021228 <__swbuf_r+0xa0>)
 8021204:	429c      	cmp	r4, r3
 8021206:	bf08      	it	eq
 8021208:	68ec      	ldreq	r4, [r5, #12]
 802120a:	e7ca      	b.n	80211a2 <__swbuf_r+0x1a>
 802120c:	4621      	mov	r1, r4
 802120e:	4628      	mov	r0, r5
 8021210:	f000 f81e 	bl	8021250 <__swsetup_r>
 8021214:	2800      	cmp	r0, #0
 8021216:	d0cb      	beq.n	80211b0 <__swbuf_r+0x28>
 8021218:	f04f 37ff 	mov.w	r7, #4294967295
 802121c:	e7ea      	b.n	80211f4 <__swbuf_r+0x6c>
 802121e:	bf00      	nop
 8021220:	080242f4 	.word	0x080242f4
 8021224:	08024314 	.word	0x08024314
 8021228:	080242d4 	.word	0x080242d4

0802122c <_write_r>:
 802122c:	b538      	push	{r3, r4, r5, lr}
 802122e:	4d07      	ldr	r5, [pc, #28]	; (802124c <_write_r+0x20>)
 8021230:	4604      	mov	r4, r0
 8021232:	4608      	mov	r0, r1
 8021234:	4611      	mov	r1, r2
 8021236:	2200      	movs	r2, #0
 8021238:	602a      	str	r2, [r5, #0]
 802123a:	461a      	mov	r2, r3
 802123c:	f7e0 fee8 	bl	8002010 <_write>
 8021240:	1c43      	adds	r3, r0, #1
 8021242:	d102      	bne.n	802124a <_write_r+0x1e>
 8021244:	682b      	ldr	r3, [r5, #0]
 8021246:	b103      	cbz	r3, 802124a <_write_r+0x1e>
 8021248:	6023      	str	r3, [r4, #0]
 802124a:	bd38      	pop	{r3, r4, r5, pc}
 802124c:	200155fc 	.word	0x200155fc

08021250 <__swsetup_r>:
 8021250:	4b32      	ldr	r3, [pc, #200]	; (802131c <__swsetup_r+0xcc>)
 8021252:	b570      	push	{r4, r5, r6, lr}
 8021254:	681d      	ldr	r5, [r3, #0]
 8021256:	4606      	mov	r6, r0
 8021258:	460c      	mov	r4, r1
 802125a:	b125      	cbz	r5, 8021266 <__swsetup_r+0x16>
 802125c:	69ab      	ldr	r3, [r5, #24]
 802125e:	b913      	cbnz	r3, 8021266 <__swsetup_r+0x16>
 8021260:	4628      	mov	r0, r5
 8021262:	f7ff f9c3 	bl	80205ec <__sinit>
 8021266:	4b2e      	ldr	r3, [pc, #184]	; (8021320 <__swsetup_r+0xd0>)
 8021268:	429c      	cmp	r4, r3
 802126a:	d10f      	bne.n	802128c <__swsetup_r+0x3c>
 802126c:	686c      	ldr	r4, [r5, #4]
 802126e:	89a3      	ldrh	r3, [r4, #12]
 8021270:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021274:	0719      	lsls	r1, r3, #28
 8021276:	d42c      	bmi.n	80212d2 <__swsetup_r+0x82>
 8021278:	06dd      	lsls	r5, r3, #27
 802127a:	d411      	bmi.n	80212a0 <__swsetup_r+0x50>
 802127c:	2309      	movs	r3, #9
 802127e:	6033      	str	r3, [r6, #0]
 8021280:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8021284:	81a3      	strh	r3, [r4, #12]
 8021286:	f04f 30ff 	mov.w	r0, #4294967295
 802128a:	e03e      	b.n	802130a <__swsetup_r+0xba>
 802128c:	4b25      	ldr	r3, [pc, #148]	; (8021324 <__swsetup_r+0xd4>)
 802128e:	429c      	cmp	r4, r3
 8021290:	d101      	bne.n	8021296 <__swsetup_r+0x46>
 8021292:	68ac      	ldr	r4, [r5, #8]
 8021294:	e7eb      	b.n	802126e <__swsetup_r+0x1e>
 8021296:	4b24      	ldr	r3, [pc, #144]	; (8021328 <__swsetup_r+0xd8>)
 8021298:	429c      	cmp	r4, r3
 802129a:	bf08      	it	eq
 802129c:	68ec      	ldreq	r4, [r5, #12]
 802129e:	e7e6      	b.n	802126e <__swsetup_r+0x1e>
 80212a0:	0758      	lsls	r0, r3, #29
 80212a2:	d512      	bpl.n	80212ca <__swsetup_r+0x7a>
 80212a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80212a6:	b141      	cbz	r1, 80212ba <__swsetup_r+0x6a>
 80212a8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80212ac:	4299      	cmp	r1, r3
 80212ae:	d002      	beq.n	80212b6 <__swsetup_r+0x66>
 80212b0:	4630      	mov	r0, r6
 80212b2:	f7ff fa99 	bl	80207e8 <_free_r>
 80212b6:	2300      	movs	r3, #0
 80212b8:	6363      	str	r3, [r4, #52]	; 0x34
 80212ba:	89a3      	ldrh	r3, [r4, #12]
 80212bc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80212c0:	81a3      	strh	r3, [r4, #12]
 80212c2:	2300      	movs	r3, #0
 80212c4:	6063      	str	r3, [r4, #4]
 80212c6:	6923      	ldr	r3, [r4, #16]
 80212c8:	6023      	str	r3, [r4, #0]
 80212ca:	89a3      	ldrh	r3, [r4, #12]
 80212cc:	f043 0308 	orr.w	r3, r3, #8
 80212d0:	81a3      	strh	r3, [r4, #12]
 80212d2:	6923      	ldr	r3, [r4, #16]
 80212d4:	b94b      	cbnz	r3, 80212ea <__swsetup_r+0x9a>
 80212d6:	89a3      	ldrh	r3, [r4, #12]
 80212d8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80212dc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80212e0:	d003      	beq.n	80212ea <__swsetup_r+0x9a>
 80212e2:	4621      	mov	r1, r4
 80212e4:	4630      	mov	r0, r6
 80212e6:	f000 f98d 	bl	8021604 <__smakebuf_r>
 80212ea:	89a0      	ldrh	r0, [r4, #12]
 80212ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80212f0:	f010 0301 	ands.w	r3, r0, #1
 80212f4:	d00a      	beq.n	802130c <__swsetup_r+0xbc>
 80212f6:	2300      	movs	r3, #0
 80212f8:	60a3      	str	r3, [r4, #8]
 80212fa:	6963      	ldr	r3, [r4, #20]
 80212fc:	425b      	negs	r3, r3
 80212fe:	61a3      	str	r3, [r4, #24]
 8021300:	6923      	ldr	r3, [r4, #16]
 8021302:	b943      	cbnz	r3, 8021316 <__swsetup_r+0xc6>
 8021304:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8021308:	d1ba      	bne.n	8021280 <__swsetup_r+0x30>
 802130a:	bd70      	pop	{r4, r5, r6, pc}
 802130c:	0781      	lsls	r1, r0, #30
 802130e:	bf58      	it	pl
 8021310:	6963      	ldrpl	r3, [r4, #20]
 8021312:	60a3      	str	r3, [r4, #8]
 8021314:	e7f4      	b.n	8021300 <__swsetup_r+0xb0>
 8021316:	2000      	movs	r0, #0
 8021318:	e7f7      	b.n	802130a <__swsetup_r+0xba>
 802131a:	bf00      	nop
 802131c:	20000104 	.word	0x20000104
 8021320:	080242f4 	.word	0x080242f4
 8021324:	08024314 	.word	0x08024314
 8021328:	080242d4 	.word	0x080242d4

0802132c <__register_exitproc>:
 802132c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021330:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80213ec <__register_exitproc+0xc0>
 8021334:	4606      	mov	r6, r0
 8021336:	f8d8 0000 	ldr.w	r0, [r8]
 802133a:	461f      	mov	r7, r3
 802133c:	460d      	mov	r5, r1
 802133e:	4691      	mov	r9, r2
 8021340:	f7ff fa29 	bl	8020796 <__retarget_lock_acquire_recursive>
 8021344:	4b25      	ldr	r3, [pc, #148]	; (80213dc <__register_exitproc+0xb0>)
 8021346:	681c      	ldr	r4, [r3, #0]
 8021348:	b934      	cbnz	r4, 8021358 <__register_exitproc+0x2c>
 802134a:	4c25      	ldr	r4, [pc, #148]	; (80213e0 <__register_exitproc+0xb4>)
 802134c:	601c      	str	r4, [r3, #0]
 802134e:	4b25      	ldr	r3, [pc, #148]	; (80213e4 <__register_exitproc+0xb8>)
 8021350:	b113      	cbz	r3, 8021358 <__register_exitproc+0x2c>
 8021352:	681b      	ldr	r3, [r3, #0]
 8021354:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8021358:	6863      	ldr	r3, [r4, #4]
 802135a:	2b1f      	cmp	r3, #31
 802135c:	dd07      	ble.n	802136e <__register_exitproc+0x42>
 802135e:	f8d8 0000 	ldr.w	r0, [r8]
 8021362:	f7ff fa1a 	bl	802079a <__retarget_lock_release_recursive>
 8021366:	f04f 30ff 	mov.w	r0, #4294967295
 802136a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802136e:	b34e      	cbz	r6, 80213c4 <__register_exitproc+0x98>
 8021370:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021374:	b988      	cbnz	r0, 802139a <__register_exitproc+0x6e>
 8021376:	4b1c      	ldr	r3, [pc, #112]	; (80213e8 <__register_exitproc+0xbc>)
 8021378:	b923      	cbnz	r3, 8021384 <__register_exitproc+0x58>
 802137a:	f8d8 0000 	ldr.w	r0, [r8]
 802137e:	f7ff fa0b 	bl	8020798 <__retarget_lock_release>
 8021382:	e7f0      	b.n	8021366 <__register_exitproc+0x3a>
 8021384:	f44f 7084 	mov.w	r0, #264	; 0x108
 8021388:	f7ff fa08 	bl	802079c <malloc>
 802138c:	2800      	cmp	r0, #0
 802138e:	d0f4      	beq.n	802137a <__register_exitproc+0x4e>
 8021390:	2300      	movs	r3, #0
 8021392:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8021396:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802139a:	6863      	ldr	r3, [r4, #4]
 802139c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80213a0:	2201      	movs	r2, #1
 80213a2:	409a      	lsls	r2, r3
 80213a4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80213a8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80213ac:	4313      	orrs	r3, r2
 80213ae:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80213b2:	2e02      	cmp	r6, #2
 80213b4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80213b8:	bf02      	ittt	eq
 80213ba:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80213be:	4313      	orreq	r3, r2
 80213c0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80213c4:	6863      	ldr	r3, [r4, #4]
 80213c6:	f8d8 0000 	ldr.w	r0, [r8]
 80213ca:	1c5a      	adds	r2, r3, #1
 80213cc:	3302      	adds	r3, #2
 80213ce:	6062      	str	r2, [r4, #4]
 80213d0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80213d4:	f7ff f9e1 	bl	802079a <__retarget_lock_release_recursive>
 80213d8:	2000      	movs	r0, #0
 80213da:	e7c6      	b.n	802136a <__register_exitproc+0x3e>
 80213dc:	2001568c 	.word	0x2001568c
 80213e0:	20015600 	.word	0x20015600
 80213e4:	0802436c 	.word	0x0802436c
 80213e8:	0802079d 	.word	0x0802079d
 80213ec:	20000168 	.word	0x20000168

080213f0 <_close_r>:
 80213f0:	b538      	push	{r3, r4, r5, lr}
 80213f2:	4d06      	ldr	r5, [pc, #24]	; (802140c <_close_r+0x1c>)
 80213f4:	2300      	movs	r3, #0
 80213f6:	4604      	mov	r4, r0
 80213f8:	4608      	mov	r0, r1
 80213fa:	602b      	str	r3, [r5, #0]
 80213fc:	f7e0 fe16 	bl	800202c <_close>
 8021400:	1c43      	adds	r3, r0, #1
 8021402:	d102      	bne.n	802140a <_close_r+0x1a>
 8021404:	682b      	ldr	r3, [r5, #0]
 8021406:	b103      	cbz	r3, 802140a <_close_r+0x1a>
 8021408:	6023      	str	r3, [r4, #0]
 802140a:	bd38      	pop	{r3, r4, r5, pc}
 802140c:	200155fc 	.word	0x200155fc

08021410 <__sflush_r>:
 8021410:	898a      	ldrh	r2, [r1, #12]
 8021412:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021416:	4605      	mov	r5, r0
 8021418:	0710      	lsls	r0, r2, #28
 802141a:	460c      	mov	r4, r1
 802141c:	d458      	bmi.n	80214d0 <__sflush_r+0xc0>
 802141e:	684b      	ldr	r3, [r1, #4]
 8021420:	2b00      	cmp	r3, #0
 8021422:	dc05      	bgt.n	8021430 <__sflush_r+0x20>
 8021424:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8021426:	2b00      	cmp	r3, #0
 8021428:	dc02      	bgt.n	8021430 <__sflush_r+0x20>
 802142a:	2000      	movs	r0, #0
 802142c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021430:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021432:	2e00      	cmp	r6, #0
 8021434:	d0f9      	beq.n	802142a <__sflush_r+0x1a>
 8021436:	2300      	movs	r3, #0
 8021438:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802143c:	682f      	ldr	r7, [r5, #0]
 802143e:	602b      	str	r3, [r5, #0]
 8021440:	d032      	beq.n	80214a8 <__sflush_r+0x98>
 8021442:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021444:	89a3      	ldrh	r3, [r4, #12]
 8021446:	075a      	lsls	r2, r3, #29
 8021448:	d505      	bpl.n	8021456 <__sflush_r+0x46>
 802144a:	6863      	ldr	r3, [r4, #4]
 802144c:	1ac0      	subs	r0, r0, r3
 802144e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021450:	b10b      	cbz	r3, 8021456 <__sflush_r+0x46>
 8021452:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021454:	1ac0      	subs	r0, r0, r3
 8021456:	2300      	movs	r3, #0
 8021458:	4602      	mov	r2, r0
 802145a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802145c:	6a21      	ldr	r1, [r4, #32]
 802145e:	4628      	mov	r0, r5
 8021460:	47b0      	blx	r6
 8021462:	1c43      	adds	r3, r0, #1
 8021464:	89a3      	ldrh	r3, [r4, #12]
 8021466:	d106      	bne.n	8021476 <__sflush_r+0x66>
 8021468:	6829      	ldr	r1, [r5, #0]
 802146a:	291d      	cmp	r1, #29
 802146c:	d82c      	bhi.n	80214c8 <__sflush_r+0xb8>
 802146e:	4a2a      	ldr	r2, [pc, #168]	; (8021518 <__sflush_r+0x108>)
 8021470:	40ca      	lsrs	r2, r1
 8021472:	07d6      	lsls	r6, r2, #31
 8021474:	d528      	bpl.n	80214c8 <__sflush_r+0xb8>
 8021476:	2200      	movs	r2, #0
 8021478:	6062      	str	r2, [r4, #4]
 802147a:	04d9      	lsls	r1, r3, #19
 802147c:	6922      	ldr	r2, [r4, #16]
 802147e:	6022      	str	r2, [r4, #0]
 8021480:	d504      	bpl.n	802148c <__sflush_r+0x7c>
 8021482:	1c42      	adds	r2, r0, #1
 8021484:	d101      	bne.n	802148a <__sflush_r+0x7a>
 8021486:	682b      	ldr	r3, [r5, #0]
 8021488:	b903      	cbnz	r3, 802148c <__sflush_r+0x7c>
 802148a:	6560      	str	r0, [r4, #84]	; 0x54
 802148c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802148e:	602f      	str	r7, [r5, #0]
 8021490:	2900      	cmp	r1, #0
 8021492:	d0ca      	beq.n	802142a <__sflush_r+0x1a>
 8021494:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021498:	4299      	cmp	r1, r3
 802149a:	d002      	beq.n	80214a2 <__sflush_r+0x92>
 802149c:	4628      	mov	r0, r5
 802149e:	f7ff f9a3 	bl	80207e8 <_free_r>
 80214a2:	2000      	movs	r0, #0
 80214a4:	6360      	str	r0, [r4, #52]	; 0x34
 80214a6:	e7c1      	b.n	802142c <__sflush_r+0x1c>
 80214a8:	6a21      	ldr	r1, [r4, #32]
 80214aa:	2301      	movs	r3, #1
 80214ac:	4628      	mov	r0, r5
 80214ae:	47b0      	blx	r6
 80214b0:	1c41      	adds	r1, r0, #1
 80214b2:	d1c7      	bne.n	8021444 <__sflush_r+0x34>
 80214b4:	682b      	ldr	r3, [r5, #0]
 80214b6:	2b00      	cmp	r3, #0
 80214b8:	d0c4      	beq.n	8021444 <__sflush_r+0x34>
 80214ba:	2b1d      	cmp	r3, #29
 80214bc:	d001      	beq.n	80214c2 <__sflush_r+0xb2>
 80214be:	2b16      	cmp	r3, #22
 80214c0:	d101      	bne.n	80214c6 <__sflush_r+0xb6>
 80214c2:	602f      	str	r7, [r5, #0]
 80214c4:	e7b1      	b.n	802142a <__sflush_r+0x1a>
 80214c6:	89a3      	ldrh	r3, [r4, #12]
 80214c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80214cc:	81a3      	strh	r3, [r4, #12]
 80214ce:	e7ad      	b.n	802142c <__sflush_r+0x1c>
 80214d0:	690f      	ldr	r7, [r1, #16]
 80214d2:	2f00      	cmp	r7, #0
 80214d4:	d0a9      	beq.n	802142a <__sflush_r+0x1a>
 80214d6:	0793      	lsls	r3, r2, #30
 80214d8:	680e      	ldr	r6, [r1, #0]
 80214da:	bf08      	it	eq
 80214dc:	694b      	ldreq	r3, [r1, #20]
 80214de:	600f      	str	r7, [r1, #0]
 80214e0:	bf18      	it	ne
 80214e2:	2300      	movne	r3, #0
 80214e4:	eba6 0807 	sub.w	r8, r6, r7
 80214e8:	608b      	str	r3, [r1, #8]
 80214ea:	f1b8 0f00 	cmp.w	r8, #0
 80214ee:	dd9c      	ble.n	802142a <__sflush_r+0x1a>
 80214f0:	6a21      	ldr	r1, [r4, #32]
 80214f2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80214f4:	4643      	mov	r3, r8
 80214f6:	463a      	mov	r2, r7
 80214f8:	4628      	mov	r0, r5
 80214fa:	47b0      	blx	r6
 80214fc:	2800      	cmp	r0, #0
 80214fe:	dc06      	bgt.n	802150e <__sflush_r+0xfe>
 8021500:	89a3      	ldrh	r3, [r4, #12]
 8021502:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021506:	81a3      	strh	r3, [r4, #12]
 8021508:	f04f 30ff 	mov.w	r0, #4294967295
 802150c:	e78e      	b.n	802142c <__sflush_r+0x1c>
 802150e:	4407      	add	r7, r0
 8021510:	eba8 0800 	sub.w	r8, r8, r0
 8021514:	e7e9      	b.n	80214ea <__sflush_r+0xda>
 8021516:	bf00      	nop
 8021518:	20400001 	.word	0x20400001

0802151c <_fflush_r>:
 802151c:	b538      	push	{r3, r4, r5, lr}
 802151e:	690b      	ldr	r3, [r1, #16]
 8021520:	4605      	mov	r5, r0
 8021522:	460c      	mov	r4, r1
 8021524:	b913      	cbnz	r3, 802152c <_fflush_r+0x10>
 8021526:	2500      	movs	r5, #0
 8021528:	4628      	mov	r0, r5
 802152a:	bd38      	pop	{r3, r4, r5, pc}
 802152c:	b118      	cbz	r0, 8021536 <_fflush_r+0x1a>
 802152e:	6983      	ldr	r3, [r0, #24]
 8021530:	b90b      	cbnz	r3, 8021536 <_fflush_r+0x1a>
 8021532:	f7ff f85b 	bl	80205ec <__sinit>
 8021536:	4b14      	ldr	r3, [pc, #80]	; (8021588 <_fflush_r+0x6c>)
 8021538:	429c      	cmp	r4, r3
 802153a:	d11b      	bne.n	8021574 <_fflush_r+0x58>
 802153c:	686c      	ldr	r4, [r5, #4]
 802153e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021542:	2b00      	cmp	r3, #0
 8021544:	d0ef      	beq.n	8021526 <_fflush_r+0xa>
 8021546:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8021548:	07d0      	lsls	r0, r2, #31
 802154a:	d404      	bmi.n	8021556 <_fflush_r+0x3a>
 802154c:	0599      	lsls	r1, r3, #22
 802154e:	d402      	bmi.n	8021556 <_fflush_r+0x3a>
 8021550:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021552:	f7ff f920 	bl	8020796 <__retarget_lock_acquire_recursive>
 8021556:	4628      	mov	r0, r5
 8021558:	4621      	mov	r1, r4
 802155a:	f7ff ff59 	bl	8021410 <__sflush_r>
 802155e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021560:	07da      	lsls	r2, r3, #31
 8021562:	4605      	mov	r5, r0
 8021564:	d4e0      	bmi.n	8021528 <_fflush_r+0xc>
 8021566:	89a3      	ldrh	r3, [r4, #12]
 8021568:	059b      	lsls	r3, r3, #22
 802156a:	d4dd      	bmi.n	8021528 <_fflush_r+0xc>
 802156c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802156e:	f7ff f914 	bl	802079a <__retarget_lock_release_recursive>
 8021572:	e7d9      	b.n	8021528 <_fflush_r+0xc>
 8021574:	4b05      	ldr	r3, [pc, #20]	; (802158c <_fflush_r+0x70>)
 8021576:	429c      	cmp	r4, r3
 8021578:	d101      	bne.n	802157e <_fflush_r+0x62>
 802157a:	68ac      	ldr	r4, [r5, #8]
 802157c:	e7df      	b.n	802153e <_fflush_r+0x22>
 802157e:	4b04      	ldr	r3, [pc, #16]	; (8021590 <_fflush_r+0x74>)
 8021580:	429c      	cmp	r4, r3
 8021582:	bf08      	it	eq
 8021584:	68ec      	ldreq	r4, [r5, #12]
 8021586:	e7da      	b.n	802153e <_fflush_r+0x22>
 8021588:	080242f4 	.word	0x080242f4
 802158c:	08024314 	.word	0x08024314
 8021590:	080242d4 	.word	0x080242d4

08021594 <_lseek_r>:
 8021594:	b538      	push	{r3, r4, r5, lr}
 8021596:	4d07      	ldr	r5, [pc, #28]	; (80215b4 <_lseek_r+0x20>)
 8021598:	4604      	mov	r4, r0
 802159a:	4608      	mov	r0, r1
 802159c:	4611      	mov	r1, r2
 802159e:	2200      	movs	r2, #0
 80215a0:	602a      	str	r2, [r5, #0]
 80215a2:	461a      	mov	r2, r3
 80215a4:	f7e0 fd4c 	bl	8002040 <_lseek>
 80215a8:	1c43      	adds	r3, r0, #1
 80215aa:	d102      	bne.n	80215b2 <_lseek_r+0x1e>
 80215ac:	682b      	ldr	r3, [r5, #0]
 80215ae:	b103      	cbz	r3, 80215b2 <_lseek_r+0x1e>
 80215b0:	6023      	str	r3, [r4, #0]
 80215b2:	bd38      	pop	{r3, r4, r5, pc}
 80215b4:	200155fc 	.word	0x200155fc

080215b8 <__swhatbuf_r>:
 80215b8:	b570      	push	{r4, r5, r6, lr}
 80215ba:	460e      	mov	r6, r1
 80215bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80215c0:	2900      	cmp	r1, #0
 80215c2:	b096      	sub	sp, #88	; 0x58
 80215c4:	4614      	mov	r4, r2
 80215c6:	461d      	mov	r5, r3
 80215c8:	da08      	bge.n	80215dc <__swhatbuf_r+0x24>
 80215ca:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80215ce:	2200      	movs	r2, #0
 80215d0:	602a      	str	r2, [r5, #0]
 80215d2:	061a      	lsls	r2, r3, #24
 80215d4:	d410      	bmi.n	80215f8 <__swhatbuf_r+0x40>
 80215d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80215da:	e00e      	b.n	80215fa <__swhatbuf_r+0x42>
 80215dc:	466a      	mov	r2, sp
 80215de:	f000 f86f 	bl	80216c0 <_fstat_r>
 80215e2:	2800      	cmp	r0, #0
 80215e4:	dbf1      	blt.n	80215ca <__swhatbuf_r+0x12>
 80215e6:	9a01      	ldr	r2, [sp, #4]
 80215e8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80215ec:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80215f0:	425a      	negs	r2, r3
 80215f2:	415a      	adcs	r2, r3
 80215f4:	602a      	str	r2, [r5, #0]
 80215f6:	e7ee      	b.n	80215d6 <__swhatbuf_r+0x1e>
 80215f8:	2340      	movs	r3, #64	; 0x40
 80215fa:	2000      	movs	r0, #0
 80215fc:	6023      	str	r3, [r4, #0]
 80215fe:	b016      	add	sp, #88	; 0x58
 8021600:	bd70      	pop	{r4, r5, r6, pc}
	...

08021604 <__smakebuf_r>:
 8021604:	898b      	ldrh	r3, [r1, #12]
 8021606:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021608:	079d      	lsls	r5, r3, #30
 802160a:	4606      	mov	r6, r0
 802160c:	460c      	mov	r4, r1
 802160e:	d507      	bpl.n	8021620 <__smakebuf_r+0x1c>
 8021610:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021614:	6023      	str	r3, [r4, #0]
 8021616:	6123      	str	r3, [r4, #16]
 8021618:	2301      	movs	r3, #1
 802161a:	6163      	str	r3, [r4, #20]
 802161c:	b002      	add	sp, #8
 802161e:	bd70      	pop	{r4, r5, r6, pc}
 8021620:	ab01      	add	r3, sp, #4
 8021622:	466a      	mov	r2, sp
 8021624:	f7ff ffc8 	bl	80215b8 <__swhatbuf_r>
 8021628:	9900      	ldr	r1, [sp, #0]
 802162a:	4605      	mov	r5, r0
 802162c:	4630      	mov	r0, r6
 802162e:	f7ff f947 	bl	80208c0 <_malloc_r>
 8021632:	b948      	cbnz	r0, 8021648 <__smakebuf_r+0x44>
 8021634:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021638:	059a      	lsls	r2, r3, #22
 802163a:	d4ef      	bmi.n	802161c <__smakebuf_r+0x18>
 802163c:	f023 0303 	bic.w	r3, r3, #3
 8021640:	f043 0302 	orr.w	r3, r3, #2
 8021644:	81a3      	strh	r3, [r4, #12]
 8021646:	e7e3      	b.n	8021610 <__smakebuf_r+0xc>
 8021648:	4b0d      	ldr	r3, [pc, #52]	; (8021680 <__smakebuf_r+0x7c>)
 802164a:	62b3      	str	r3, [r6, #40]	; 0x28
 802164c:	89a3      	ldrh	r3, [r4, #12]
 802164e:	6020      	str	r0, [r4, #0]
 8021650:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021654:	81a3      	strh	r3, [r4, #12]
 8021656:	9b00      	ldr	r3, [sp, #0]
 8021658:	6163      	str	r3, [r4, #20]
 802165a:	9b01      	ldr	r3, [sp, #4]
 802165c:	6120      	str	r0, [r4, #16]
 802165e:	b15b      	cbz	r3, 8021678 <__smakebuf_r+0x74>
 8021660:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021664:	4630      	mov	r0, r6
 8021666:	f000 f83d 	bl	80216e4 <_isatty_r>
 802166a:	b128      	cbz	r0, 8021678 <__smakebuf_r+0x74>
 802166c:	89a3      	ldrh	r3, [r4, #12]
 802166e:	f023 0303 	bic.w	r3, r3, #3
 8021672:	f043 0301 	orr.w	r3, r3, #1
 8021676:	81a3      	strh	r3, [r4, #12]
 8021678:	89a0      	ldrh	r0, [r4, #12]
 802167a:	4305      	orrs	r5, r0
 802167c:	81a5      	strh	r5, [r4, #12]
 802167e:	e7cd      	b.n	802161c <__smakebuf_r+0x18>
 8021680:	08020585 	.word	0x08020585

08021684 <__malloc_lock>:
 8021684:	4801      	ldr	r0, [pc, #4]	; (802168c <__malloc_lock+0x8>)
 8021686:	f7ff b886 	b.w	8020796 <__retarget_lock_acquire_recursive>
 802168a:	bf00      	nop
 802168c:	200154e9 	.word	0x200154e9

08021690 <__malloc_unlock>:
 8021690:	4801      	ldr	r0, [pc, #4]	; (8021698 <__malloc_unlock+0x8>)
 8021692:	f7ff b882 	b.w	802079a <__retarget_lock_release_recursive>
 8021696:	bf00      	nop
 8021698:	200154e9 	.word	0x200154e9

0802169c <_read_r>:
 802169c:	b538      	push	{r3, r4, r5, lr}
 802169e:	4d07      	ldr	r5, [pc, #28]	; (80216bc <_read_r+0x20>)
 80216a0:	4604      	mov	r4, r0
 80216a2:	4608      	mov	r0, r1
 80216a4:	4611      	mov	r1, r2
 80216a6:	2200      	movs	r2, #0
 80216a8:	602a      	str	r2, [r5, #0]
 80216aa:	461a      	mov	r2, r3
 80216ac:	f7e0 fca2 	bl	8001ff4 <_read>
 80216b0:	1c43      	adds	r3, r0, #1
 80216b2:	d102      	bne.n	80216ba <_read_r+0x1e>
 80216b4:	682b      	ldr	r3, [r5, #0]
 80216b6:	b103      	cbz	r3, 80216ba <_read_r+0x1e>
 80216b8:	6023      	str	r3, [r4, #0]
 80216ba:	bd38      	pop	{r3, r4, r5, pc}
 80216bc:	200155fc 	.word	0x200155fc

080216c0 <_fstat_r>:
 80216c0:	b538      	push	{r3, r4, r5, lr}
 80216c2:	4d07      	ldr	r5, [pc, #28]	; (80216e0 <_fstat_r+0x20>)
 80216c4:	2300      	movs	r3, #0
 80216c6:	4604      	mov	r4, r0
 80216c8:	4608      	mov	r0, r1
 80216ca:	4611      	mov	r1, r2
 80216cc:	602b      	str	r3, [r5, #0]
 80216ce:	f7e0 fcb0 	bl	8002032 <_fstat>
 80216d2:	1c43      	adds	r3, r0, #1
 80216d4:	d102      	bne.n	80216dc <_fstat_r+0x1c>
 80216d6:	682b      	ldr	r3, [r5, #0]
 80216d8:	b103      	cbz	r3, 80216dc <_fstat_r+0x1c>
 80216da:	6023      	str	r3, [r4, #0]
 80216dc:	bd38      	pop	{r3, r4, r5, pc}
 80216de:	bf00      	nop
 80216e0:	200155fc 	.word	0x200155fc

080216e4 <_isatty_r>:
 80216e4:	b538      	push	{r3, r4, r5, lr}
 80216e6:	4d06      	ldr	r5, [pc, #24]	; (8021700 <_isatty_r+0x1c>)
 80216e8:	2300      	movs	r3, #0
 80216ea:	4604      	mov	r4, r0
 80216ec:	4608      	mov	r0, r1
 80216ee:	602b      	str	r3, [r5, #0]
 80216f0:	f7e0 fca4 	bl	800203c <_isatty>
 80216f4:	1c43      	adds	r3, r0, #1
 80216f6:	d102      	bne.n	80216fe <_isatty_r+0x1a>
 80216f8:	682b      	ldr	r3, [r5, #0]
 80216fa:	b103      	cbz	r3, 80216fe <_isatty_r+0x1a>
 80216fc:	6023      	str	r3, [r4, #0]
 80216fe:	bd38      	pop	{r3, r4, r5, pc}
 8021700:	200155fc 	.word	0x200155fc

08021704 <_init>:
 8021704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021706:	bf00      	nop
 8021708:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802170a:	bc08      	pop	{r3}
 802170c:	469e      	mov	lr, r3
 802170e:	4770      	bx	lr

08021710 <_fini>:
 8021710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021712:	bf00      	nop
 8021714:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021716:	bc08      	pop	{r3}
 8021718:	469e      	mov	lr, r3
 802171a:	4770      	bx	lr
