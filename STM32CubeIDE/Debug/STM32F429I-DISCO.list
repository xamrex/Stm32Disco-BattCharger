
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002167c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002c68  0802182c  0802182c  0003182c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00001566  08024494  08024494  00034494  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000090  080259fc  080259fc  000359fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000001f4  08025a8c  08025a8c  00035a8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000833f8  08025c80  08025c80  00035c80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080a9078  080a9078  000c016c  2**0
                  CONTENTS
  8 .ARM          00000008  080a9078  080a9078  000b9078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080a9080  080a9080  000c016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080a9080  080a9080  000b9080  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080a9094  080a9094  000b9094  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080a909c  000c0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000155c8  2000016c  080a9208  000c016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20015734  080a9208  000c5734  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000c016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000d0000  2**2
                  ALLOC
 17 .debug_line   0005093d  00000000  00000000  000c019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ed896  00000000  00000000  00110ad9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014f3c  00000000  00000000  001fe36f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003050  00000000  00000000  002132b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00119b9c  00000000  00000000  00216300  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000070a0  00000000  00000000  0032fea0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00035698  00000000  00000000  00336f40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030b19  00000000  00000000  0036c5d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  0039d0f1  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e70  00000000  00000000  0039d1c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021814 	.word	0x08021814

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021814 	.word	0x08021814

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fb51 	bl	8005c64 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 f94b 	bl	802085c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 ff29 	bl	800141c <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080a909c 	.word	0x080a909c
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20015734 	.word	0x20015734

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f01f ff3d 	bl	8020474 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	20015487 	.word	0x20015487

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f8fe 	bl	80019b4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b f833 	bl	800b834 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a ba90 	b.w	800ad1c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f fe37 	bl	8020474 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	20015480 	.word	0x20015480
 800085c:	2001547c 	.word	0x2001547c
 8000860:	2001547e 	.word	0x2001547e

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01f feb1 	bl	80205dc <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021884 	.word	0x08021884
 8000898:	080218bc 	.word	0x080218bc
 800089c:	0802190a 	.word	0x0802190a
 80008a0:	20015486 	.word	0x20015486

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01f fe8d 	bl	80205dc <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	2001547c 	.word	0x2001547c
 80008d0:	2001547e 	.word	0x2001547e
 80008d4:	0802194f 	.word	0x0802194f
 80008d8:	080219b2 	.word	0x080219b2
 80008dc:	0802190a 	.word	0x0802190a
 80008e0:	20015482 	.word	0x20015482
 80008e4:	20015484 	.word	0x20015484

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 fe6a 	bl	80085c8 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01f fe6b 	bl	80205dc <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 ff22 	bl	8008754 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08021ad0 	.word	0x08021ad0
 8000928:	08021b19 	.word	0x08021b19
 800092c:	08021b48 	.word	0x08021b48
 8000930:	20000198 	.word	0x20000198
 8000934:	08021b96 	.word	0x08021b96

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 be98 	b.w	8008674 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 becc 	b.w	80086e8 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 be8b 	b.w	8008674 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 bf35 	b.w	80087e0 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 ff6a 	bl	8008864 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 ff63 	bl	8008864 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	200038e8 	.word	0x200038e8
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08021d34 	.word	0x08021d34
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f fd1b 	bl	8020474 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	20015488 	.word	0x20015488

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b f837 	bl	800bae0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08021d34 	.word	0x08021d34

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f fd95 	bl	80205dc <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08021bd8 	.word	0x08021bd8
 8000ac0:	08021bf3 	.word	0x08021bf3
 8000ac4:	08021c3d 	.word	0x08021c3d

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f fd77 	bl	80205dc <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08021bd8 	.word	0x08021bd8
 8000afc:	08021c89 	.word	0x08021c89
 8000b00:	08021c3d 	.word	0x08021c3d

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f fd04 	bl	80205dc <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08021cd4 	.word	0x08021cd4
 8000c48:	08021cee 	.word	0x08021cee
 8000c4c:	08021c3d 	.word	0x08021c3d
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 6018 	movw	r0, #9752	; 0x2618
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 6318 	movw	r3, #9752	; 0x2618
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 6318 	movw	r3, #9752	; 0x2618
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bc4e 	b.w	8002628 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fd0f 	bl	800a7b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08021dec 	.word	0x08021dec

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fb62 	bl	8020474 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fcfb 	bl	800a7b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08021db8 	.word	0x08021db8

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 6120 	movw	r1, #9760	; 0x2620
 8000dd6:	f01f fb4d 	bl	8020474 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fce5 	bl	800a7b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08021d84 	.word	0x08021d84

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fb38 	bl	8020474 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 5019 	add.w	r0, r0, #9792	; 0x2640
 8000e14:	300c      	adds	r0, #12
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08021e20 	.word	0x08021e20

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f242 71e8 	movw	r1, #10216	; 0x27e8
 8000e52:	f01f fb0f 	bl	8020474 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f99c 	bl	800219c <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f99d 	bl	80021a4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 f9fd 	bl	8014274 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 ff72 	bl	8004d6c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 f95b 	bl	8014144 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f faed 	bl	8020478 <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fc7b 	bl	800a7b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fc76 	bl	800a7b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fc71 	bl	800a7b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 264c 	str.w	r2, [r3, #1612]	; 0x64c
 8000ee0:	f203 608c 	addw	r0, r3, #1676	; 0x68c
 8000ee4:	f003 ffbe 	bl	8004e64 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f003 ffae 	bl	8004e50 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fb97 	bl	8002628 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fb8c 	bl	8020618 <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fac5 	bl	8020490 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	200154ec 	.word	0x200154ec
 8000f18:	200037ac 	.word	0x200037ac
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	200027f0 	.word	0x200027f0
 8000f2c:	08021e20 	.word	0x08021e20
 8000f30:	08021d84 	.word	0x08021d84
 8000f34:	08021db8 	.word	0x08021db8
 8000f38:	08021dec 	.word	0x08021dec
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003730 	.word	0x20003730

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003730 	.word	0x20003730

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fa90 	bl	8017488 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	2000298c 	.word	0x2000298c
 8000fe4:	20002990 	.word	0x20002990
 8000fe8:	08021874 	.word	0x08021874
 8000fec:	200037b0 	.word	0x200037b0
 8000ff0:	20003730 	.word	0x20003730
 8000ff4:	20015488 	.word	0x20015488
 8000ff8:	2001547c 	.word	0x2001547c
 8000ffc:	20015482 	.word	0x20015482
 8001000:	01000001 	.word	0x01000001
 8001004:	2001547e 	.word	0x2001547e
 8001008:	20015484 	.word	0x20015484
 800100c:	20015480 	.word	0x20015480
 8001010:	08021a00 	.word	0x08021a00

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002990 	.word	0x20002990

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	2000382c 	.word	0x2000382c
 8001064:	2000382a 	.word	0x2000382a

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f009 fe9d 	bl	800adc6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f00f fed4 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f009 be6c 	b.w	800ad94 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f009 be70 	b.w	800adac <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	20003828 	.word	0x20003828

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 be2a 	b.w	800ad28 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f009 bf83 	b.w	800afde <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 f83a 	bl	80071a4 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a fb77 	bl	800b834 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 f828 	bl	80071a4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	20015488 	.word	0x20015488
 800116c:	40016800 	.word	0x40016800
 8001170:	2000382c 	.word	0x2000382c
 8001174:	2000382a 	.word	0x2000382a

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fd1c 	bl	8007bc6 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003a58 	.word	0x20003a58

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	490c      	ldr	r1, [pc, #48]	; (80011d0 <CountAvgFrom60sec+0x34>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
	return result/60;
 80011c0:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011c4:	eddf 7a03 	vldr	s15, [pc, #12]	; 80011d4 <CountAvgFrom60sec+0x38>
 80011c8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011cc:	b002      	add	sp, #8
 80011ce:	4770      	bx	lr
 80011d0:	20003af0 	.word	0x20003af0
 80011d4:	42700000 	.word	0x42700000

080011d8 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	  static volatile uint32_t value=0; //actual value of adc measurement on battery
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011dc:	4c55      	ldr	r4, [pc, #340]	; (8001334 <ZadanieDwa+0x15c>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia baterii
					HAL_ADC_Start(&hadc1);
 80011de:	4d56      	ldr	r5, [pc, #344]	; (8001338 <ZadanieDwa+0x160>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011e0:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	; 0xa6c
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	f000 8096 	beq.w	8001316 <ZadanieDwa+0x13e>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ea:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc1);
 80011ec:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ee:	f8c4 3a6c 	str.w	r3, [r4, #2668]	; 0xa6c
					value += HAL_ADC_GetValue(&hadc1);
 80011f2:	4f52      	ldr	r7, [pc, #328]	; (800133c <ZadanieDwa+0x164>)

					//pomiar napiecia na baterii i rezystorze
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
					liczbaPomiarow++;
 80011f4:	f8df 8164 	ldr.w	r8, [pc, #356]	; 800135c <ZadanieDwa+0x184>
					value2 += HAL_ADC_GetValue(&hadc2);
 80011f8:	4e51      	ldr	r6, [pc, #324]	; (8001340 <ZadanieDwa+0x168>)
					HAL_ADC_Start(&hadc1);
 80011fa:	f004 fe27 	bl	8005e4c <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc1);
 80011fe:	4628      	mov	r0, r5
 8001200:	f004 fe98 	bl	8005f34 <HAL_ADC_GetValue>
 8001204:	683b      	ldr	r3, [r7, #0]
 8001206:	4418      	add	r0, r3
 8001208:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc2);
 800120a:	484e      	ldr	r0, [pc, #312]	; (8001344 <ZadanieDwa+0x16c>)
 800120c:	f004 fe1e 	bl	8005e4c <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001210:	484c      	ldr	r0, [pc, #304]	; (8001344 <ZadanieDwa+0x16c>)
 8001212:	f004 fe8f 	bl	8005f34 <HAL_ADC_GetValue>
					liczbaPomiarow++;
 8001216:	f8d8 2000 	ldr.w	r2, [r8]
					value2 += HAL_ADC_GetValue(&hadc2);
 800121a:	6833      	ldr	r3, [r6, #0]
					liczbaPomiarow++;
 800121c:	3201      	adds	r2, #1
 800121e:	210a      	movs	r1, #10
					value2 += HAL_ADC_GetValue(&hadc2);
 8001220:	4418      	add	r0, r3
					liczbaPomiarow++;
 8001222:	f8c8 2000 	str.w	r2, [r8]
 8001226:	fb92 f3f1 	sdiv	r3, r2, r1
 800122a:	fb01 2213 	mls	r2, r1, r3, r2
					value2 += HAL_ADC_GetValue(&hadc2);
 800122e:	6030      	str	r0, [r6, #0]

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 8001230:	2a00      	cmp	r2, #0
 8001232:	d170      	bne.n	8001316 <ZadanieDwa+0x13e>
						ladowarka.BatteryVoltage=(value/10) * 3.3f / 4096.0f; // napiecie na baterii
 8001234:	683a      	ldr	r2, [r7, #0]
 8001236:	fbb2 f3f1 	udiv	r3, r2, r1
 800123a:	ee07 3a10 	vmov	s14, r3
 800123e:	ed9f 6a42 	vldr	s12, [pc, #264]	; 8001348 <ZadanieDwa+0x170>
 8001242:	eddf 6a42 	vldr	s13, [pc, #264]	; 800134c <ZadanieDwa+0x174>
 8001246:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800124a:	ee27 7a06 	vmul.f32	s14, s14, s12
 800124e:	ee27 7a26 	vmul.f32	s14, s14, s13
 8001252:	ed84 7a00 	vstr	s14, [r4]
						ladowarka.ChargingCurrent=(value2/10) * 3.3f / 4096.0f; // napiecie na baterii i rezystorze,
 8001256:	6833      	ldr	r3, [r6, #0]
 8001258:	fbb3 f3f1 	udiv	r3, r3, r1
 800125c:	ee07 3a90 	vmov	s15, r3
 8001260:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001264:	4b3a      	ldr	r3, [pc, #232]	; (8001350 <ZadanieDwa+0x178>)
 8001266:	ee67 7a86 	vmul.f32	s15, s15, s12
 800126a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800126e:	edc3 7a00 	vstr	s15, [r3]
						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; //	Jako ze rezystor jest 1Ohm, to prad jest rowny napiecu. wynik w [mA]
 8001272:	edd3 7a00 	vldr	s15, [r3]
 8001276:	ed94 7a00 	vldr	s14, [r4]
 800127a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800127e:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8001354 <ZadanieDwa+0x17c>
 8001282:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001286:	edc3 7a00 	vstr	s15, [r3]

						if (ladowarka.ChargeStarted){ //jesli zaczeto ladwowac
 800128a:	6923      	ldr	r3, [r4, #16]
 800128c:	2b00      	cmp	r3, #0
 800128e:	d03d      	beq.n	800130c <ZadanieDwa+0x134>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001290:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001294:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 8001360 <ZadanieDwa+0x188>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001298:	2b00      	cmp	r3, #0
 800129a:	bfdf      	itttt	le
 800129c:	6823      	ldrle	r3, [r4, #0]
 800129e:	61a3      	strle	r3, [r4, #24]
 80012a0:	2301      	movle	r3, #1
 80012a2:	f8c4 3a74 	strle.w	r3, [r4, #2676]	; 0xa74
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 80012a6:	ed94 7a00 	vldr	s14, [r4]
 80012aa:	edd4 7a01 	vldr	s15, [r4, #4]
 80012ae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80012b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012b6:	bfc4      	itt	gt
 80012b8:	6823      	ldrgt	r3, [r4, #0]
 80012ba:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 80012bc:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 80012c0:	3301      	adds	r3, #1
 80012c2:	f8c4 3a78 	str.w	r3, [r4, #2680]	; 0xa78
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012c6:	f8d9 3000 	ldr.w	r3, [r9]
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012ca:	f04f 0a01 	mov.w	sl, #1
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012ce:	eb03 020a 	add.w	r2, r3, sl
 80012d2:	f203 235e 	addw	r3, r3, #606	; 0x25e
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012d6:	f8c4 aa70 	str.w	sl, [r4, #2672]	; 0xa70
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012da:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80012de:	6821      	ldr	r1, [r4, #0]
 80012e0:	f8c9 2000 	str.w	r2, [r9]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012e4:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012e6:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012e8:	dd10      	ble.n	800130c <ZadanieDwa+0x134>
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012ea:	233c      	movs	r3, #60	; 0x3c
 80012ec:	f8d4 0a78 	ldr.w	r0, [r4, #2680]	; 0xa78
 80012f0:	fb90 f0f3 	sdiv	r0, r0, r3
 80012f4:	f7ff ff52 	bl	800119c <CountAvgFrom60sec>
 80012f8:	3006      	adds	r0, #6
 80012fa:	eb04 0080 	add.w	r0, r4, r0, lsl #2
								sec0to59=0;
 80012fe:	2300      	movs	r3, #0
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 8001300:	ed80 0a00 	vstr	s0, [r0]
								sec0to59=0;
 8001304:	f8c9 3000 	str.w	r3, [r9]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 8001308:	f8c4 aa74 	str.w	sl, [r4, #2676]	; 0xa74
							}

						}
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 800130c:	2300      	movs	r3, #0
						value=0; //resetuj pomiar napiecia na baterii
 800130e:	603b      	str	r3, [r7, #0]
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001310:	f8c8 3000 	str.w	r3, [r8]
						value2=0; //resetuj  napiecie na baterii i rezystorze,
 8001314:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 8001316:	6923      	ldr	r3, [r4, #16]
 8001318:	2b01      	cmp	r3, #1
 800131a:	d107      	bne.n	800132c <ZadanieDwa+0x154>
 800131c:	6962      	ldr	r2, [r4, #20]
 800131e:	b92a      	cbnz	r2, 800132c <ZadanieDwa+0x154>

							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 2700);  //ustaw poprawne napiece tutaj (3V)
 8001320:	480d      	ldr	r0, [pc, #52]	; (8001358 <ZadanieDwa+0x180>)
 8001322:	f640 238c 	movw	r3, #2700	; 0xa8c
 8001326:	2110      	movs	r1, #16
 8001328:	f004 ff67 	bl	80061fa <HAL_DAC_SetValue>
							//ladowarka.UstawioneNapiecieNaopAmpie=1;
					}



    osDelay(1); //to chyba ma zostac?
 800132c:	2001      	movs	r0, #1
 800132e:	f007 f931 	bl	8008594 <osDelay>
  {
 8001332:	e755      	b.n	80011e0 <ZadanieDwa+0x8>
 8001334:	20003af0 	.word	0x20003af0
 8001338:	2000383c 	.word	0x2000383c
 800133c:	20004578 	.word	0x20004578
 8001340:	2000457c 	.word	0x2000457c
 8001344:	20003884 	.word	0x20003884
 8001348:	40533333 	.word	0x40533333
 800134c:	39800000 	.word	0x39800000
 8001350:	2000456c 	.word	0x2000456c
 8001354:	447a0000 	.word	0x447a0000
 8001358:	200038d4 	.word	0x200038d4
 800135c:	20004570 	.word	0x20004570
 8001360:	20004574 	.word	0x20004574

08001364 <SystemClock_Config>:
{
 8001364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001366:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001368:	2210      	movs	r2, #16
 800136a:	2100      	movs	r1, #0
 800136c:	a80a      	add	r0, sp, #40	; 0x28
 800136e:	f01f fabb 	bl	80208e8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001372:	2214      	movs	r2, #20
 8001374:	2100      	movs	r1, #0
 8001376:	a803      	add	r0, sp, #12
 8001378:	f01f fab6 	bl	80208e8 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800137c:	2100      	movs	r1, #0
 800137e:	2230      	movs	r2, #48	; 0x30
 8001380:	a814      	add	r0, sp, #80	; 0x50
 8001382:	f01f fab1 	bl	80208e8 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001386:	2400      	movs	r4, #0
 8001388:	4b22      	ldr	r3, [pc, #136]	; (8001414 <SystemClock_Config+0xb0>)
 800138a:	9401      	str	r4, [sp, #4]
 800138c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800138e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001392:	641a      	str	r2, [r3, #64]	; 0x40
 8001394:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001396:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800139a:	9301      	str	r3, [sp, #4]
 800139c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800139e:	4b1e      	ldr	r3, [pc, #120]	; (8001418 <SystemClock_Config+0xb4>)
 80013a0:	9402      	str	r4, [sp, #8]
 80013a2:	681a      	ldr	r2, [r3, #0]
 80013a4:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013a8:	601a      	str	r2, [r3, #0]
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80013b0:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80013b2:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013b4:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80013b6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013ba:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013be:	2502      	movs	r5, #2
 80013c0:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80013c4:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013c8:	2708      	movs	r7, #8
 80013ca:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80013ce:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013d0:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013d2:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013d6:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80013d8:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013da:	f005 ff01 	bl	80071e0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80013de:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80013e0:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80013e4:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80013e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80013ec:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80013f0:	a803      	add	r0, sp, #12
 80013f2:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80013f4:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80013f6:	f006 f8cb 	bl	8007590 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80013fa:	23c0      	movs	r3, #192	; 0xc0
 80013fc:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013fe:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001400:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001404:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001406:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001408:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800140a:	f006 f99b 	bl	8007744 <HAL_RCCEx_PeriphCLKConfig>
}
 800140e:	b021      	add	sp, #132	; 0x84
 8001410:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001412:	bf00      	nop
 8001414:	40023800 	.word	0x40023800
 8001418:	40007000 	.word	0x40007000

0800141c <main>:
{
 800141c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001420:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001422:	f004 fc2d 	bl	8005c80 <HAL_Init>
  SystemClock_Config();
 8001426:	f7ff ff9d 	bl	8001364 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800142a:	2214      	movs	r2, #20
 800142c:	2100      	movs	r1, #0
 800142e:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001430:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001432:	f01f fa59 	bl	80208e8 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001436:	4bc6      	ldr	r3, [pc, #792]	; (8001750 <main+0x334>)
 8001438:	9400      	str	r4, [sp, #0]
 800143a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800143c:	48c5      	ldr	r0, [pc, #788]	; (8001754 <main+0x338>)
  hi2c3.Instance = I2C3;
 800143e:	4ec6      	ldr	r6, [pc, #792]	; (8001758 <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001440:	f042 0220 	orr.w	r2, r2, #32
 8001444:	631a      	str	r2, [r3, #48]	; 0x30
 8001446:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001448:	f002 0220 	and.w	r2, r2, #32
 800144c:	9200      	str	r2, [sp, #0]
 800144e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001450:	9401      	str	r4, [sp, #4]
 8001452:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001454:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001458:	631a      	str	r2, [r3, #48]	; 0x30
 800145a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800145c:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001460:	9201      	str	r2, [sp, #4]
 8001462:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001464:	9402      	str	r4, [sp, #8]
 8001466:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001468:	f042 0204 	orr.w	r2, r2, #4
 800146c:	631a      	str	r2, [r3, #48]	; 0x30
 800146e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001470:	f002 0204 	and.w	r2, r2, #4
 8001474:	9202      	str	r2, [sp, #8]
 8001476:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001478:	9403      	str	r4, [sp, #12]
 800147a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800147c:	f042 0201 	orr.w	r2, r2, #1
 8001480:	631a      	str	r2, [r3, #48]	; 0x30
 8001482:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001484:	f002 0201 	and.w	r2, r2, #1
 8001488:	9203      	str	r2, [sp, #12]
 800148a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800148c:	9404      	str	r4, [sp, #16]
 800148e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001490:	f042 0202 	orr.w	r2, r2, #2
 8001494:	631a      	str	r2, [r3, #48]	; 0x30
 8001496:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001498:	f002 0202 	and.w	r2, r2, #2
 800149c:	9204      	str	r2, [sp, #16]
 800149e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014a0:	9405      	str	r4, [sp, #20]
 80014a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014a4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014a8:	631a      	str	r2, [r3, #48]	; 0x30
 80014aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ac:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80014b0:	9205      	str	r2, [sp, #20]
 80014b2:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014b4:	9406      	str	r4, [sp, #24]
 80014b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014b8:	f042 0210 	orr.w	r2, r2, #16
 80014bc:	631a      	str	r2, [r3, #48]	; 0x30
 80014be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014c0:	f002 0210 	and.w	r2, r2, #16
 80014c4:	9206      	str	r2, [sp, #24]
 80014c6:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014c8:	9407      	str	r4, [sp, #28]
 80014ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014cc:	f042 0208 	orr.w	r2, r2, #8
 80014d0:	631a      	str	r2, [r3, #48]	; 0x30
 80014d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014d4:	f003 0308 	and.w	r3, r3, #8
 80014d8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80014da:	4622      	mov	r2, r4
 80014dc:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014de:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80014e0:	f005 f882 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80014e4:	489d      	ldr	r0, [pc, #628]	; (800175c <main+0x340>)
 80014e6:	4622      	mov	r2, r4
 80014e8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80014ec:	f005 f87c 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014f0:	4622      	mov	r2, r4
 80014f2:	489b      	ldr	r0, [pc, #620]	; (8001760 <main+0x344>)
 80014f4:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014f8:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014fa:	f005 f875 	bl	80065e8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014fe:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001500:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001504:	4893      	ldr	r0, [pc, #588]	; (8001754 <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001506:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001508:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800150a:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800150e:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001510:	f004 ff82 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001514:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001518:	4890      	ldr	r0, [pc, #576]	; (800175c <main+0x340>)
 800151a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800151c:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001520:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001524:	f004 ff78 	bl	8006418 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001528:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800152a:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800152e:	488c      	ldr	r0, [pc, #560]	; (8001760 <main+0x344>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001530:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001534:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001538:	f004 ff6e 	bl	8006418 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800153c:	4889      	ldr	r0, [pc, #548]	; (8001764 <main+0x348>)
 800153e:	4a8a      	ldr	r2, [pc, #552]	; (8001768 <main+0x34c>)
 8001540:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001542:	f004 fde9 	bl	8006118 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001546:	4b89      	ldr	r3, [pc, #548]	; (800176c <main+0x350>)
 8001548:	4a89      	ldr	r2, [pc, #548]	; (8001770 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800154a:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 800154c:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001550:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001552:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001556:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800155a:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800155e:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001562:	f005 fa23 	bl	80069ac <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001566:	2110      	movs	r1, #16
 8001568:	4630      	mov	r0, r6
 800156a:	f005 fc5f 	bl	8006e2c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800156e:	4621      	mov	r1, r4
 8001570:	4630      	mov	r0, r6
 8001572:	f005 fc7a 	bl	8006e6a <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001576:	487f      	ldr	r0, [pc, #508]	; (8001774 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001578:	497f      	ldr	r1, [pc, #508]	; (8001778 <main+0x35c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800157a:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800157c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001580:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001584:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001588:	2218      	movs	r2, #24
 800158a:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800158e:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001590:	4e7a      	ldr	r6, [pc, #488]	; (800177c <main+0x360>)
  hspi5.Init.CRCPolynomial = 10;
 8001592:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001594:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001598:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800159c:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80015a0:	f006 fad4 	bl	8007b4c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80015a4:	4a76      	ldr	r2, [pc, #472]	; (8001780 <main+0x364>)
  SdramTiming.LoadToActiveDelay = 2;
 80015a6:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80015a8:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80015ac:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80015b0:	2240      	movs	r2, #64	; 0x40
 80015b2:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80015b6:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80015ba:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80015be:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 80015c2:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80015c4:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80015c8:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015cc:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80015ce:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015d2:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 80015d4:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015d8:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80015dc:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80015e0:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 80015e2:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 80015e6:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 80015ea:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015ec:	f006 f9d4 	bl	8007998 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015f4:	a909      	add	r1, sp, #36	; 0x24
 80015f6:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 80015f8:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 80015fc:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80015fe:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001600:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001602:	f006 f9e9 	bl	80079d8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001606:	4628      	mov	r0, r5
 8001608:	f004 fb66 	bl	8005cd8 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 800160c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001610:	a909      	add	r1, sp, #36	; 0x24
 8001612:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001614:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001618:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 800161c:	f006 f9dc 	bl	80079d8 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001620:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001622:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001626:	a909      	add	r1, sp, #36	; 0x24
 8001628:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800162a:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800162e:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001632:	f006 f9d1 	bl	80079d8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001636:	f44f 720c 	mov.w	r2, #560	; 0x230
 800163a:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800163c:	9b08      	ldr	r3, [sp, #32]
 800163e:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001640:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001644:	a909      	add	r1, sp, #36	; 0x24
 8001646:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001648:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 800164c:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800164e:	f006 f9c3 	bl	80079d8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001652:	f240 516a 	movw	r1, #1386	; 0x56a
 8001656:	4630      	mov	r0, r6
 8001658:	f006 f9d5 	bl	8007a06 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800165c:	2234      	movs	r2, #52	; 0x34
 800165e:	4621      	mov	r1, r4
 8001660:	eb0d 0002 	add.w	r0, sp, r2
 8001664:	f01f f940 	bl	80208e8 <memset>
  hltdc.Instance = LTDC;
 8001668:	4e46      	ldr	r6, [pc, #280]	; (8001784 <main+0x368>)
 800166a:	4b47      	ldr	r3, [pc, #284]	; (8001788 <main+0x36c>)
  hltdc.Init.Backcolor.Blue = 0;
 800166c:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800166e:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 8001672:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 8001674:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 8001678:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 800167c:	2303      	movs	r3, #3
 800167e:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001682:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001686:	f240 1343 	movw	r3, #323	; 0x143
 800168a:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 800168e:	f240 1917 	movw	r9, #279	; 0x117
 8001692:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001696:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 8001698:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800169c:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80016a0:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 80016a2:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016a6:	f005 fc85 	bl	8006fb4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80016aa:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 80016ac:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 80016ae:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80016b2:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 80016b6:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80016b8:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80016bc:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 80016c0:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016c4:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 80016c6:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016ca:	4630      	mov	r0, r6
 80016cc:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 80016ce:	4e2f      	ldr	r6, [pc, #188]	; (800178c <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 80016d0:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80016d2:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  pLayerCfg.WindowX0 = 0;
 80016d6:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80016d8:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80016dc:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016e0:	f005 fd33 	bl	800714a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80016e4:	4b2a      	ldr	r3, [pc, #168]	; (8001790 <main+0x374>)
 80016e6:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 80016e8:	681b      	ldr	r3, [r3, #0]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80016ea:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 80017a4 <main+0x388>
  hdac.Instance = DAC;
 80016ee:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 80017a8 <main+0x38c>
  LcdDrv->Init();
 80016f2:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80016f4:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 80016f6:	4e27      	ldr	r6, [pc, #156]	; (8001794 <main+0x378>)
  LcdDrv->DisplayOff();
 80016f8:	68db      	ldr	r3, [r3, #12]
 80016fa:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80016fc:	4b26      	ldr	r3, [pc, #152]	; (8001798 <main+0x37c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80016fe:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001702:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001706:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001708:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800170c:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001710:	f004 fd85 	bl	800621e <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001714:	4629      	mov	r1, r5
 8001716:	4630      	mov	r0, r6
 8001718:	f004 fe3a 	bl	8006390 <HAL_DMA2D_ConfigLayer>
  hadc1.Instance = ADC1;
 800171c:	4e1f      	ldr	r6, [pc, #124]	; (800179c <main+0x380>)
  ADC_ChannelConfTypeDef sConfig = {0};
 800171e:	4621      	mov	r1, r4
 8001720:	4642      	mov	r2, r8
 8001722:	a80d      	add	r0, sp, #52	; 0x34
 8001724:	f01f f8e0 	bl	80208e8 <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001728:	4a1d      	ldr	r2, [pc, #116]	; (80017a0 <main+0x384>)
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800172a:	60b4      	str	r4, [r6, #8]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800172c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001730:	4630      	mov	r0, r6
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001732:	e9c6 2300 	strd	r2, r3, [r6]
  hadc1.Init.ScanConvMode = DISABLE;
 8001736:	6134      	str	r4, [r6, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8001738:	7635      	strb	r5, [r6, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800173a:	f886 4020 	strb.w	r4, [r6, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800173e:	62f4      	str	r4, [r6, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001740:	f8c6 b028 	str.w	fp, [r6, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001744:	60f4      	str	r4, [r6, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001746:	61f5      	str	r5, [r6, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001748:	f886 4030 	strb.w	r4, [r6, #48]	; 0x30
 800174c:	e02e      	b.n	80017ac <main+0x390>
 800174e:	bf00      	nop
 8001750:	40023800 	.word	0x40023800
 8001754:	40020800 	.word	0x40020800
 8001758:	20003928 	.word	0x20003928
 800175c:	40020400 	.word	0x40020400
 8001760:	40020c00 	.word	0x40020c00
 8001764:	200038cc 	.word	0x200038cc
 8001768:	40023000 	.word	0x40023000
 800176c:	40005c00 	.word	0x40005c00
 8001770:	000186a0 	.word	0x000186a0
 8001774:	20003a58 	.word	0x20003a58
 8001778:	40015000 	.word	0x40015000
 800177c:	20003a24 	.word	0x20003a24
 8001780:	a0000140 	.word	0xa0000140
 8001784:	2000397c 	.word	0x2000397c
 8001788:	40016800 	.word	0x40016800
 800178c:	20003834 	.word	0x20003834
 8001790:	2000001c 	.word	0x2000001c
 8001794:	200038e8 	.word	0x200038e8
 8001798:	4002b000 	.word	0x4002b000
 800179c:	2000383c 	.word	0x2000383c
 80017a0:	40012000 	.word	0x40012000
 80017a4:	0f000001 	.word	0x0f000001
 80017a8:	200038d4 	.word	0x200038d4
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80017ac:	6175      	str	r5, [r6, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80017ae:	f004 faa7 	bl	8005d00 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80017b2:	a90d      	add	r1, sp, #52	; 0x34
 80017b4:	4630      	mov	r0, r6
  sConfig.Rank = 1;
 80017b6:	e9cd a50d 	strd	sl, r5, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 80017ba:	4e37      	ldr	r6, [pc, #220]	; (8001898 <main+0x47c>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80017bc:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80017c0:	f004 fbbc 	bl	8005f3c <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 80017c4:	4935      	ldr	r1, [pc, #212]	; (800189c <main+0x480>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017c6:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 80017c8:	f242 02cf 	movw	r2, #8399	; 0x20cf
 80017cc:	e9c6 1200 	strd	r1, r2, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80017d0:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1;
 80017d2:	f240 32e7 	movw	r2, #999	; 0x3e7
 80017d6:	60f2      	str	r2, [r6, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017d8:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017dc:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80017de:	f006 fd4f 	bl	8008280 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80017e2:	a90d      	add	r1, sp, #52	; 0x34
 80017e4:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017e6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80017ea:	f006 fd63 	bl	80082b4 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 80017ee:	4a2c      	ldr	r2, [pc, #176]	; (80018a0 <main+0x484>)
 80017f0:	f8c9 2000 	str.w	r2, [r9]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 80017f4:	4648      	mov	r0, r9
  DAC_ChannelConfTypeDef sConfig = {0};
 80017f6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 80017fa:	f004 fc9d 	bl	8006138 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 80017fe:	4642      	mov	r2, r8
 8001800:	a90d      	add	r1, sp, #52	; 0x34
 8001802:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001804:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001808:	f004 fcd6 	bl	80061b8 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 800180c:	4642      	mov	r2, r8
 800180e:	4621      	mov	r1, r4
 8001810:	a80d      	add	r0, sp, #52	; 0x34
 8001812:	f01f f869 	bl	80208e8 <memset>
  hadc2.Instance = ADC2;
 8001816:	4a23      	ldr	r2, [pc, #140]	; (80018a4 <main+0x488>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001818:	4923      	ldr	r1, [pc, #140]	; (80018a8 <main+0x48c>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 800181a:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800181c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001820:	4610      	mov	r0, r2
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001822:	e9c2 1300 	strd	r1, r3, [r2]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001826:	e9c2 b40a 	strd	fp, r4, [r2, #40]	; 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 800182a:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 800182c:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 800182e:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001832:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 8001834:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8001836:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800183a:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 800183c:	f004 fa60 	bl	8005d00 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001840:	4a18      	ldr	r2, [pc, #96]	; (80018a4 <main+0x488>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001842:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001846:	4610      	mov	r0, r2
 8001848:	a90d      	add	r1, sp, #52	; 0x34
  sConfig.Rank = 1;
 800184a:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800184e:	f004 fb75 	bl	8005f3c <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 8001852:	f7fe fec8 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 8001856:	4630      	mov	r0, r6
 8001858:	f006 fbf5 	bl	8008046 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 800185c:	4641      	mov	r1, r8
 800185e:	4648      	mov	r0, r9
 8001860:	f004 fc7d 	bl	800615e <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 3400); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 8001864:	f640 5348 	movw	r3, #3400	; 0xd48
 8001868:	4622      	mov	r2, r4
 800186a:	4641      	mov	r1, r8
 800186c:	4648      	mov	r0, r9
 800186e:	f004 fcc4 	bl	80061fa <HAL_DAC_SetValue>
  osKernelInitialize();
 8001872:	f006 fdff 	bl	8008474 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001876:	4a0d      	ldr	r2, [pc, #52]	; (80018ac <main+0x490>)
 8001878:	480d      	ldr	r0, [pc, #52]	; (80018b0 <main+0x494>)
 800187a:	4621      	mov	r1, r4
 800187c:	f006 fe34 	bl	80084e8 <osThreadNew>
 8001880:	4b0c      	ldr	r3, [pc, #48]	; (80018b4 <main+0x498>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 8001882:	4a0d      	ldr	r2, [pc, #52]	; (80018b8 <main+0x49c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001884:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 8001886:	4621      	mov	r1, r4
 8001888:	480c      	ldr	r0, [pc, #48]	; (80018bc <main+0x4a0>)
 800188a:	f006 fe2d 	bl	80084e8 <osThreadNew>
 800188e:	4b0c      	ldr	r3, [pc, #48]	; (80018c0 <main+0x4a4>)
 8001890:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001892:	f006 fe09 	bl	80084a8 <osKernelStart>
  while (1)
 8001896:	e7fe      	b.n	8001896 <main+0x47a>
 8001898:	20003ab0 	.word	0x20003ab0
 800189c:	40001400 	.word	0x40001400
 80018a0:	40007400 	.word	0x40007400
 80018a4:	20003884 	.word	0x20003884
 80018a8:	40012100 	.word	0x40012100
 80018ac:	08021e40 	.word	0x08021e40
 80018b0:	080005eb 	.word	0x080005eb
 80018b4:	20003830 	.word	0x20003830
 80018b8:	08021e64 	.word	0x08021e64
 80018bc:	080011d9 	.word	0x080011d9
 80018c0:	20003838 	.word	0x20003838

080018c4 <IOE_Init>:
 80018c4:	4770      	bx	lr

080018c6 <IOE_ITConfig>:
 80018c6:	4770      	bx	lr

080018c8 <IOE_Write>:
{
 80018c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 80018ca:	4b09      	ldr	r3, [pc, #36]	; (80018f0 <IOE_Write+0x28>)
 80018cc:	f88d 2017 	strb.w	r2, [sp, #23]
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	9302      	str	r3, [sp, #8]
 80018d4:	f10d 0217 	add.w	r2, sp, #23
 80018d8:	2301      	movs	r3, #1
 80018da:	9200      	str	r2, [sp, #0]
 80018dc:	9301      	str	r3, [sp, #4]
 80018de:	460a      	mov	r2, r1
 80018e0:	4601      	mov	r1, r0
 80018e2:	4804      	ldr	r0, [pc, #16]	; (80018f4 <IOE_Write+0x2c>)
 80018e4:	f005 f90a 	bl	8006afc <HAL_I2C_Mem_Write>
}
 80018e8:	b007      	add	sp, #28
 80018ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80018ee:	bf00      	nop
 80018f0:	2000000c 	.word	0x2000000c
 80018f4:	20003928 	.word	0x20003928

080018f8 <IOE_Read>:
{
 80018f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80018fa:	2300      	movs	r3, #0
 80018fc:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001900:	4b08      	ldr	r3, [pc, #32]	; (8001924 <IOE_Read+0x2c>)
 8001902:	681b      	ldr	r3, [r3, #0]
 8001904:	9302      	str	r3, [sp, #8]
{
 8001906:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001908:	2301      	movs	r3, #1
 800190a:	f10d 0117 	add.w	r1, sp, #23
 800190e:	9100      	str	r1, [sp, #0]
 8001910:	9301      	str	r3, [sp, #4]
 8001912:	4601      	mov	r1, r0
 8001914:	4804      	ldr	r0, [pc, #16]	; (8001928 <IOE_Read+0x30>)
 8001916:	f005 f981 	bl	8006c1c <HAL_I2C_Mem_Read>
}
 800191a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800191e:	b007      	add	sp, #28
 8001920:	f85d fb04 	ldr.w	pc, [sp], #4
 8001924:	2000000c 	.word	0x2000000c
 8001928:	20003928 	.word	0x20003928

0800192c <IOE_ReadMultiple>:
{
 800192c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800192e:	4c08      	ldr	r4, [pc, #32]	; (8001950 <IOE_ReadMultiple+0x24>)
 8001930:	6824      	ldr	r4, [r4, #0]
 8001932:	9200      	str	r2, [sp, #0]
 8001934:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001938:	460a      	mov	r2, r1
 800193a:	2301      	movs	r3, #1
 800193c:	4601      	mov	r1, r0
 800193e:	4805      	ldr	r0, [pc, #20]	; (8001954 <IOE_ReadMultiple+0x28>)
 8001940:	f005 f96c 	bl	8006c1c <HAL_I2C_Mem_Read>
}
 8001944:	3800      	subs	r0, #0
 8001946:	bf18      	it	ne
 8001948:	2001      	movne	r0, #1
 800194a:	b004      	add	sp, #16
 800194c:	bd10      	pop	{r4, pc}
 800194e:	bf00      	nop
 8001950:	2000000c 	.word	0x2000000c
 8001954:	20003928 	.word	0x20003928

08001958 <IOE_Delay>:
 8001958:	f004 b9be 	b.w	8005cd8 <HAL_Delay>

0800195c <LCD_IO_Init>:
{
 800195c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800195e:	4806      	ldr	r0, [pc, #24]	; (8001978 <LCD_IO_Init+0x1c>)
 8001960:	2200      	movs	r2, #0
 8001962:	2104      	movs	r1, #4
 8001964:	f004 fe40 	bl	80065e8 <HAL_GPIO_WritePin>
}
 8001968:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800196c:	4802      	ldr	r0, [pc, #8]	; (8001978 <LCD_IO_Init+0x1c>)
 800196e:	2201      	movs	r2, #1
 8001970:	2104      	movs	r1, #4
 8001972:	f004 be39 	b.w	80065e8 <HAL_GPIO_WritePin>
 8001976:	bf00      	nop
 8001978:	40020800 	.word	0x40020800

0800197c <LCD_IO_WriteData>:
{
 800197c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800197e:	4d0b      	ldr	r5, [pc, #44]	; (80019ac <LCD_IO_WriteData+0x30>)
{
 8001980:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001982:	2201      	movs	r2, #1
 8001984:	480a      	ldr	r0, [pc, #40]	; (80019b0 <LCD_IO_WriteData+0x34>)
 8001986:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800198a:	f004 fe2d 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800198e:	2200      	movs	r2, #0
 8001990:	2104      	movs	r1, #4
 8001992:	4628      	mov	r0, r5
 8001994:	f004 fe28 	bl	80065e8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001998:	4620      	mov	r0, r4
 800199a:	f7ff fbed 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800199e:	4628      	mov	r0, r5
 80019a0:	2201      	movs	r2, #1
}
 80019a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019a6:	2104      	movs	r1, #4
 80019a8:	f004 be1e 	b.w	80065e8 <HAL_GPIO_WritePin>
 80019ac:	40020800 	.word	0x40020800
 80019b0:	40020c00 	.word	0x40020c00

080019b4 <LCD_IO_WriteReg>:
{
 80019b4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b6:	4d0b      	ldr	r5, [pc, #44]	; (80019e4 <LCD_IO_WriteReg+0x30>)
{
 80019b8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019ba:	2200      	movs	r2, #0
 80019bc:	480a      	ldr	r0, [pc, #40]	; (80019e8 <LCD_IO_WriteReg+0x34>)
 80019be:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019c2:	f004 fe11 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019c6:	2200      	movs	r2, #0
 80019c8:	2104      	movs	r1, #4
 80019ca:	4628      	mov	r0, r5
 80019cc:	f004 fe0c 	bl	80065e8 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80019d0:	4620      	mov	r0, r4
 80019d2:	f7ff fbd1 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019d6:	4628      	mov	r0, r5
 80019d8:	2201      	movs	r2, #1
}
 80019da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019de:	2104      	movs	r1, #4
 80019e0:	f004 be02 	b.w	80065e8 <HAL_GPIO_WritePin>
 80019e4:	40020800 	.word	0x40020800
 80019e8:	40020c00 	.word	0x40020c00

080019ec <LCD_IO_ReadData>:
{
 80019ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019ee:	4e14      	ldr	r6, [pc, #80]	; (8001a40 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019f0:	4f14      	ldr	r7, [pc, #80]	; (8001a44 <LCD_IO_ReadData+0x58>)
{
 80019f2:	4605      	mov	r5, r0
 80019f4:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019f6:	4630      	mov	r0, r6
 80019f8:	2200      	movs	r2, #0
 80019fa:	2104      	movs	r1, #4
 80019fc:	f004 fdf4 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a00:	2200      	movs	r2, #0
 8001a02:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a06:	4638      	mov	r0, r7
 8001a08:	f004 fdee 	bl	80065e8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a0c:	4628      	mov	r0, r5
 8001a0e:	f7ff fbb3 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a12:	4b0d      	ldr	r3, [pc, #52]	; (8001a48 <LCD_IO_ReadData+0x5c>)
 8001a14:	480d      	ldr	r0, [pc, #52]	; (8001a4c <LCD_IO_ReadData+0x60>)
 8001a16:	681b      	ldr	r3, [r3, #0]
 8001a18:	4622      	mov	r2, r4
 8001a1a:	a901      	add	r1, sp, #4
 8001a1c:	f006 fa71 	bl	8007f02 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a20:	4638      	mov	r0, r7
 8001a22:	2201      	movs	r2, #1
 8001a24:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001a28:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a2a:	f004 fddd 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a2e:	4630      	mov	r0, r6
 8001a30:	2201      	movs	r2, #1
 8001a32:	2104      	movs	r1, #4
 8001a34:	f004 fdd8 	bl	80065e8 <HAL_GPIO_WritePin>
}
 8001a38:	4620      	mov	r0, r4
 8001a3a:	b003      	add	sp, #12
 8001a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a3e:	bf00      	nop
 8001a40:	40020800 	.word	0x40020800
 8001a44:	40020c00 	.word	0x40020c00
 8001a48:	20000010 	.word	0x20000010
 8001a4c:	20003a58 	.word	0x20003a58

08001a50 <LCD_Delay>:
  HAL_Delay(Delay);
 8001a50:	f004 b942 	b.w	8005cd8 <HAL_Delay>

08001a54 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001a54:	6802      	ldr	r2, [r0, #0]
 8001a56:	4b08      	ldr	r3, [pc, #32]	; (8001a78 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001a58:	429a      	cmp	r2, r3
{
 8001a5a:	b510      	push	{r4, lr}
 8001a5c:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001a5e:	d101      	bne.n	8001a64 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001a60:	f004 f928 	bl	8005cb4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001a64:	6822      	ldr	r2, [r4, #0]
 8001a66:	4b05      	ldr	r3, [pc, #20]	; (8001a7c <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001a68:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 8001a6a:	bf02      	ittt	eq
 8001a6c:	4b04      	ldreq	r3, [pc, #16]	; (8001a80 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001a6e:	2201      	moveq	r2, #1
 8001a70:	f8c3 2a6c 	streq.w	r2, [r3, #2668]	; 0xa6c
  }

  /* USER CODE END Callback 1 */
}
 8001a74:	bd10      	pop	{r4, pc}
 8001a76:	bf00      	nop
 8001a78:	40010400 	.word	0x40010400
 8001a7c:	40001400 	.word	0x40001400
 8001a80:	20003af0 	.word	0x20003af0

08001a84 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a84:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a86:	4b0e      	ldr	r3, [pc, #56]	; (8001ac0 <HAL_MspInit+0x3c>)
 8001a88:	2200      	movs	r2, #0
 8001a8a:	9200      	str	r2, [sp, #0]
 8001a8c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a8e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001a92:	6459      	str	r1, [r3, #68]	; 0x44
 8001a94:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a96:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001a9a:	9100      	str	r1, [sp, #0]
 8001a9c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a9e:	9201      	str	r2, [sp, #4]
 8001aa0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001aa2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001aa6:	6419      	str	r1, [r3, #64]	; 0x40
 8001aa8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001aaa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001aae:	9301      	str	r3, [sp, #4]
 8001ab0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ab2:	210f      	movs	r1, #15
 8001ab4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ab8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001aba:	f004 baed 	b.w	8006098 <HAL_NVIC_SetPriority>
 8001abe:	bf00      	nop
 8001ac0:	40023800 	.word	0x40023800

08001ac4 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001ac4:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ac6:	2214      	movs	r2, #20
{
 8001ac8:	b08a      	sub	sp, #40	; 0x28
 8001aca:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001acc:	2100      	movs	r1, #0
 8001ace:	eb0d 0002 	add.w	r0, sp, r2
 8001ad2:	f01e ff09 	bl	80208e8 <memset>
  if(hadc->Instance==ADC1)
 8001ad6:	6823      	ldr	r3, [r4, #0]
 8001ad8:	4a1e      	ldr	r2, [pc, #120]	; (8001b54 <HAL_ADC_MspInit+0x90>)
 8001ada:	4293      	cmp	r3, r2
 8001adc:	d11f      	bne.n	8001b1e <HAL_ADC_MspInit+0x5a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001ade:	4b1e      	ldr	r3, [pc, #120]	; (8001b58 <HAL_ADC_MspInit+0x94>)
 8001ae0:	2100      	movs	r1, #0
 8001ae2:	9101      	str	r1, [sp, #4]
 8001ae4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ae6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001aea:	645a      	str	r2, [r3, #68]	; 0x44
 8001aec:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001aee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001af2:	9201      	str	r2, [sp, #4]
 8001af4:	9a01      	ldr	r2, [sp, #4]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001af6:	9102      	str	r1, [sp, #8]
 8001af8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001afa:	f042 0201 	orr.w	r2, r2, #1
 8001afe:	631a      	str	r2, [r3, #48]	; 0x30
 8001b00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b02:	f003 0301 	and.w	r3, r3, #1
 8001b06:	9302      	str	r3, [sp, #8]
 8001b08:	9b02      	ldr	r3, [sp, #8]
    /**ADC1 GPIO Configuration
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001b0a:	2380      	movs	r3, #128	; 0x80

    __HAL_RCC_GPIOA_CLK_ENABLE();
    /**ADC2 GPIO Configuration
    PA2     ------> ADC2_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b0c:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b0e:	4813      	ldr	r0, [pc, #76]	; (8001b5c <HAL_ADC_MspInit+0x98>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b10:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b12:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b14:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b16:	f004 fc7f 	bl	8006418 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001b1a:	b00a      	add	sp, #40	; 0x28
 8001b1c:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001b1e:	4a10      	ldr	r2, [pc, #64]	; (8001b60 <HAL_ADC_MspInit+0x9c>)
 8001b20:	4293      	cmp	r3, r2
 8001b22:	d1fa      	bne.n	8001b1a <HAL_ADC_MspInit+0x56>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001b24:	4b0c      	ldr	r3, [pc, #48]	; (8001b58 <HAL_ADC_MspInit+0x94>)
 8001b26:	2100      	movs	r1, #0
 8001b28:	9103      	str	r1, [sp, #12]
 8001b2a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b2c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b30:	645a      	str	r2, [r3, #68]	; 0x44
 8001b32:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b34:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001b38:	9203      	str	r2, [sp, #12]
 8001b3a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b3c:	9104      	str	r1, [sp, #16]
 8001b3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b40:	f042 0201 	orr.w	r2, r2, #1
 8001b44:	631a      	str	r2, [r3, #48]	; 0x30
 8001b46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b48:	f003 0301 	and.w	r3, r3, #1
 8001b4c:	9304      	str	r3, [sp, #16]
 8001b4e:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b50:	2304      	movs	r3, #4
 8001b52:	e7db      	b.n	8001b0c <HAL_ADC_MspInit+0x48>
 8001b54:	40012000 	.word	0x40012000
 8001b58:	40023800 	.word	0x40023800
 8001b5c:	40020000 	.word	0x40020000
 8001b60:	40012100 	.word	0x40012100

08001b64 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001b64:	6802      	ldr	r2, [r0, #0]
 8001b66:	4b09      	ldr	r3, [pc, #36]	; (8001b8c <HAL_CRC_MspInit+0x28>)
 8001b68:	429a      	cmp	r2, r3
{
 8001b6a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001b6c:	d10b      	bne.n	8001b86 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001b6e:	2300      	movs	r3, #0
 8001b70:	9301      	str	r3, [sp, #4]
 8001b72:	4b07      	ldr	r3, [pc, #28]	; (8001b90 <HAL_CRC_MspInit+0x2c>)
 8001b74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b76:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001b7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b7e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001b82:	9301      	str	r3, [sp, #4]
 8001b84:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001b86:	b002      	add	sp, #8
 8001b88:	4770      	bx	lr
 8001b8a:	bf00      	nop
 8001b8c:	40023000 	.word	0x40023000
 8001b90:	40023800 	.word	0x40023800

08001b94 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001b94:	b510      	push	{r4, lr}
 8001b96:	4604      	mov	r4, r0
 8001b98:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b9a:	2214      	movs	r2, #20
 8001b9c:	2100      	movs	r1, #0
 8001b9e:	a803      	add	r0, sp, #12
 8001ba0:	f01e fea2 	bl	80208e8 <memset>
  if(hdac->Instance==DAC)
 8001ba4:	6822      	ldr	r2, [r4, #0]
 8001ba6:	4b12      	ldr	r3, [pc, #72]	; (8001bf0 <HAL_DAC_MspInit+0x5c>)
 8001ba8:	429a      	cmp	r2, r3
 8001baa:	d11e      	bne.n	8001bea <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001bac:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001bb0:	2100      	movs	r1, #0
 8001bb2:	9101      	str	r1, [sp, #4]
 8001bb4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb6:	480f      	ldr	r0, [pc, #60]	; (8001bf4 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001bb8:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001bbc:	641a      	str	r2, [r3, #64]	; 0x40
 8001bbe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001bc0:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001bc4:	9201      	str	r2, [sp, #4]
 8001bc6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bc8:	9102      	str	r1, [sp, #8]
 8001bca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bcc:	f042 0201 	orr.w	r2, r2, #1
 8001bd0:	631a      	str	r2, [r3, #48]	; 0x30
 8001bd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd4:	f003 0301 	and.w	r3, r3, #1
 8001bd8:	9302      	str	r3, [sp, #8]
 8001bda:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001bdc:	2220      	movs	r2, #32
 8001bde:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001be0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001be2:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001be6:	f004 fc17 	bl	8006418 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001bea:	b008      	add	sp, #32
 8001bec:	bd10      	pop	{r4, pc}
 8001bee:	bf00      	nop
 8001bf0:	40007400 	.word	0x40007400
 8001bf4:	40020000 	.word	0x40020000

08001bf8 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001bf8:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001bfa:	4b0f      	ldr	r3, [pc, #60]	; (8001c38 <HAL_DMA2D_MspInit+0x40>)
 8001bfc:	6802      	ldr	r2, [r0, #0]
 8001bfe:	429a      	cmp	r2, r3
 8001c00:	d116      	bne.n	8001c30 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c02:	2200      	movs	r2, #0
 8001c04:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c08:	9201      	str	r2, [sp, #4]
 8001c0a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c0c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c10:	6319      	str	r1, [r3, #48]	; 0x30
 8001c12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c14:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c18:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c1a:	2105      	movs	r1, #5
 8001c1c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c1e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c20:	f004 fa3a 	bl	8006098 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c24:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c26:	b003      	add	sp, #12
 8001c28:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c2c:	f004 ba66 	b.w	80060fc <HAL_NVIC_EnableIRQ>
}
 8001c30:	b003      	add	sp, #12
 8001c32:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c36:	bf00      	nop
 8001c38:	4002b000 	.word	0x4002b000

08001c3c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c40:	4604      	mov	r4, r0
 8001c42:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c44:	2214      	movs	r2, #20
 8001c46:	2100      	movs	r1, #0
 8001c48:	a803      	add	r0, sp, #12
 8001c4a:	f01e fe4d 	bl	80208e8 <memset>
  if(hi2c->Instance==I2C3)
 8001c4e:	6822      	ldr	r2, [r4, #0]
 8001c50:	4b24      	ldr	r3, [pc, #144]	; (8001ce4 <HAL_I2C_MspInit+0xa8>)
 8001c52:	429a      	cmp	r2, r3
 8001c54:	d143      	bne.n	8001cde <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c56:	4c24      	ldr	r4, [pc, #144]	; (8001ce8 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c58:	4824      	ldr	r0, [pc, #144]	; (8001cec <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c5a:	2500      	movs	r5, #0
 8001c5c:	9500      	str	r5, [sp, #0]
 8001c5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001c60:	f043 0304 	orr.w	r3, r3, #4
 8001c64:	6323      	str	r3, [r4, #48]	; 0x30
 8001c66:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001c68:	f003 0304 	and.w	r3, r3, #4
 8001c6c:	9300      	str	r3, [sp, #0]
 8001c6e:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c70:	9501      	str	r5, [sp, #4]
 8001c72:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001c74:	f043 0301 	orr.w	r3, r3, #1
 8001c78:	6323      	str	r3, [r4, #48]	; 0x30
 8001c7a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001c7c:	f003 0301 	and.w	r3, r3, #1
 8001c80:	9301      	str	r3, [sp, #4]
 8001c82:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c84:	f04f 0912 	mov.w	r9, #18
 8001c88:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c8c:	f04f 0801 	mov.w	r8, #1
 8001c90:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c92:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c94:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c96:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c9a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c9e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ca0:	f004 fbba 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ca4:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ca8:	4811      	ldr	r0, [pc, #68]	; (8001cf0 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001caa:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cac:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001cae:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cb2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cb6:	f004 fbaf 	bl	8006418 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cba:	9502      	str	r5, [sp, #8]
 8001cbc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001cbe:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cc2:	6423      	str	r3, [r4, #64]	; 0x40
 8001cc4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001cc6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001cca:	9302      	str	r3, [sp, #8]
 8001ccc:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001cce:	6a23      	ldr	r3, [r4, #32]
 8001cd0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cd4:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001cd6:	6a23      	ldr	r3, [r4, #32]
 8001cd8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001cdc:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001cde:	b009      	add	sp, #36	; 0x24
 8001ce0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ce4:	40005c00 	.word	0x40005c00
 8001ce8:	40023800 	.word	0x40023800
 8001cec:	40020800 	.word	0x40020800
 8001cf0:	40020000 	.word	0x40020000

08001cf4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001cf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cf6:	4604      	mov	r4, r0
 8001cf8:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cfa:	2214      	movs	r2, #20
 8001cfc:	2100      	movs	r1, #0
 8001cfe:	a807      	add	r0, sp, #28
 8001d00:	f01e fdf2 	bl	80208e8 <memset>
  if(hltdc->Instance==LTDC)
 8001d04:	6822      	ldr	r2, [r4, #0]
 8001d06:	4b57      	ldr	r3, [pc, #348]	; (8001e64 <HAL_LTDC_MspInit+0x170>)
 8001d08:	429a      	cmp	r2, r3
 8001d0a:	f040 80a8 	bne.w	8001e5e <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d0e:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001d12:	2500      	movs	r5, #0
 8001d14:	9500      	str	r5, [sp, #0]
 8001d16:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d18:	4853      	ldr	r0, [pc, #332]	; (8001e68 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d1a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d1e:	645a      	str	r2, [r3, #68]	; 0x44
 8001d20:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d22:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d26:	9200      	str	r2, [sp, #0]
 8001d28:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d2a:	9501      	str	r5, [sp, #4]
 8001d2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d2e:	f042 0220 	orr.w	r2, r2, #32
 8001d32:	631a      	str	r2, [r3, #48]	; 0x30
 8001d34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d36:	f002 0220 	and.w	r2, r2, #32
 8001d3a:	9201      	str	r2, [sp, #4]
 8001d3c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d3e:	9502      	str	r5, [sp, #8]
 8001d40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d42:	f042 0201 	orr.w	r2, r2, #1
 8001d46:	631a      	str	r2, [r3, #48]	; 0x30
 8001d48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d4a:	f002 0201 	and.w	r2, r2, #1
 8001d4e:	9202      	str	r2, [sp, #8]
 8001d50:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d52:	9503      	str	r5, [sp, #12]
 8001d54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d56:	f042 0202 	orr.w	r2, r2, #2
 8001d5a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d5e:	f002 0202 	and.w	r2, r2, #2
 8001d62:	9203      	str	r2, [sp, #12]
 8001d64:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d66:	9504      	str	r5, [sp, #16]
 8001d68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d72:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001d76:	9204      	str	r2, [sp, #16]
 8001d78:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d7a:	9505      	str	r5, [sp, #20]
 8001d7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d7e:	f042 0204 	orr.w	r2, r2, #4
 8001d82:	631a      	str	r2, [r3, #48]	; 0x30
 8001d84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d86:	f002 0204 	and.w	r2, r2, #4
 8001d8a:	9205      	str	r2, [sp, #20]
 8001d8c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d8e:	9506      	str	r5, [sp, #24]
 8001d90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d92:	f042 0208 	orr.w	r2, r2, #8
 8001d96:	631a      	str	r2, [r3, #48]	; 0x30
 8001d98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d9a:	f003 0308 	and.w	r3, r3, #8
 8001d9e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da0:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001da2:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001da4:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001da6:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da8:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dac:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dae:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001db2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db4:	f004 fb30 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001db8:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dbc:	482b      	ldr	r0, [pc, #172]	; (8001e6c <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dbe:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dc0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc2:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001dc6:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dc8:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dcc:	f004 fb24 	bl	8006418 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001dd0:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dd2:	4827      	ldr	r0, [pc, #156]	; (8001e70 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001dd4:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dd6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd8:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ddc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001de0:	f004 fb1a 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001de4:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001de8:	4821      	ldr	r0, [pc, #132]	; (8001e70 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dea:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dec:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dee:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001df2:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001df6:	f004 fb0f 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001dfa:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dfe:	481d      	ldr	r0, [pc, #116]	; (8001e74 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e00:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e02:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e04:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e08:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e0c:	f004 fb04 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e10:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e12:	4819      	ldr	r0, [pc, #100]	; (8001e78 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e14:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e16:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e18:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e1c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e20:	f004 fafa 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e24:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e26:	4815      	ldr	r0, [pc, #84]	; (8001e7c <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e28:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e2a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e2c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e30:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e34:	f004 faf0 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e38:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e3c:	480d      	ldr	r0, [pc, #52]	; (8001e74 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e3e:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e40:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e42:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e46:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e4a:	f004 fae5 	bl	8006418 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001e4e:	2058      	movs	r0, #88	; 0x58
 8001e50:	462a      	mov	r2, r5
 8001e52:	2105      	movs	r1, #5
 8001e54:	f004 f920 	bl	8006098 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e58:	2058      	movs	r0, #88	; 0x58
 8001e5a:	f004 f94f 	bl	80060fc <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001e5e:	b00d      	add	sp, #52	; 0x34
 8001e60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e62:	bf00      	nop
 8001e64:	40016800 	.word	0x40016800
 8001e68:	40021400 	.word	0x40021400
 8001e6c:	40020000 	.word	0x40020000
 8001e70:	40020400 	.word	0x40020400
 8001e74:	40021800 	.word	0x40021800
 8001e78:	40020800 	.word	0x40020800
 8001e7c:	40020c00 	.word	0x40020c00

08001e80 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001e80:	b510      	push	{r4, lr}
 8001e82:	4604      	mov	r4, r0
 8001e84:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e86:	2214      	movs	r2, #20
 8001e88:	2100      	movs	r1, #0
 8001e8a:	a803      	add	r0, sp, #12
 8001e8c:	f01e fd2c 	bl	80208e8 <memset>
  if(hspi->Instance==SPI5)
 8001e90:	6822      	ldr	r2, [r4, #0]
 8001e92:	4b14      	ldr	r3, [pc, #80]	; (8001ee4 <HAL_SPI_MspInit+0x64>)
 8001e94:	429a      	cmp	r2, r3
 8001e96:	d123      	bne.n	8001ee0 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001e98:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001e9c:	2100      	movs	r1, #0
 8001e9e:	9101      	str	r1, [sp, #4]
 8001ea0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ea2:	4811      	ldr	r0, [pc, #68]	; (8001ee8 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001ea4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001ea8:	645a      	str	r2, [r3, #68]	; 0x44
 8001eaa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001eac:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001eb0:	9201      	str	r2, [sp, #4]
 8001eb2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001eb4:	9102      	str	r1, [sp, #8]
 8001eb6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eb8:	f042 0220 	orr.w	r2, r2, #32
 8001ebc:	631a      	str	r2, [r3, #48]	; 0x30
 8001ebe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ec0:	f003 0320 	and.w	r3, r3, #32
 8001ec4:	9302      	str	r3, [sp, #8]
 8001ec6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ec8:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001ecc:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001ece:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ed0:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001ed4:	2305      	movs	r3, #5
 8001ed6:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001eda:	a903      	add	r1, sp, #12
 8001edc:	f004 fa9c 	bl	8006418 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ee0:	b008      	add	sp, #32
 8001ee2:	bd10      	pop	{r4, pc}
 8001ee4:	40015000 	.word	0x40015000
 8001ee8:	40021400 	.word	0x40021400

08001eec <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001eec:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001eee:	4b0f      	ldr	r3, [pc, #60]	; (8001f2c <HAL_TIM_Base_MspInit+0x40>)
 8001ef0:	6802      	ldr	r2, [r0, #0]
 8001ef2:	429a      	cmp	r2, r3
 8001ef4:	d116      	bne.n	8001f24 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001ef6:	2200      	movs	r2, #0
 8001ef8:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001efc:	9201      	str	r2, [sp, #4]
 8001efe:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001f00:	f041 0120 	orr.w	r1, r1, #32
 8001f04:	6419      	str	r1, [r3, #64]	; 0x40
 8001f06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f08:	f003 0320 	and.w	r3, r3, #32
 8001f0c:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f0e:	2105      	movs	r1, #5
 8001f10:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f12:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f14:	f004 f8c0 	bl	8006098 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f18:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001f1a:	b003      	add	sp, #12
 8001f1c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f20:	f004 b8ec 	b.w	80060fc <HAL_NVIC_EnableIRQ>
}
 8001f24:	b003      	add	sp, #12
 8001f26:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f2a:	bf00      	nop
 8001f2c:	40001400 	.word	0x40001400

08001f30 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001f30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f34:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001f36:	2300      	movs	r3, #0
 8001f38:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001f3a:	4b2b      	ldr	r3, [pc, #172]	; (8001fe8 <HAL_SDRAM_MspInit+0xb8>)
 8001f3c:	681c      	ldr	r4, [r3, #0]
 8001f3e:	2c00      	cmp	r4, #0
 8001f40:	d14f      	bne.n	8001fe2 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001f42:	f04f 0801 	mov.w	r8, #1
 8001f46:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f4a:	4b28      	ldr	r3, [pc, #160]	; (8001fec <HAL_SDRAM_MspInit+0xbc>)
 8001f4c:	9400      	str	r4, [sp, #0]
 8001f4e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f50:	4827      	ldr	r0, [pc, #156]	; (8001ff0 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f52:	ea42 0208 	orr.w	r2, r2, r8
 8001f56:	639a      	str	r2, [r3, #56]	; 0x38
 8001f58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001f5a:	ea03 0308 	and.w	r3, r3, r8
 8001f5e:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f60:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f62:	2603      	movs	r6, #3
 8001f64:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f66:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f68:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f6a:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001f6e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f72:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f76:	f004 fa4f 	bl	8006418 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f7a:	481e      	ldr	r0, [pc, #120]	; (8001ff4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f7c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f7e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f80:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f84:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f88:	f004 fa46 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001f8c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f90:	4819      	ldr	r0, [pc, #100]	; (8001ff8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f92:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f94:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f96:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f9a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f9e:	f004 fa3b 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001fa2:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001fa6:	4815      	ldr	r0, [pc, #84]	; (8001ffc <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fa8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001faa:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fac:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fb0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001fb4:	f004 fa30 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001fb8:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fbc:	4810      	ldr	r0, [pc, #64]	; (8002000 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fbe:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fc0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fc2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fca:	f004 fa25 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001fce:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fd0:	480c      	ldr	r0, [pc, #48]	; (8002004 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fd4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fd6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fda:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fde:	f004 fa1b 	bl	8006418 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001fe2:	b006      	add	sp, #24
 8001fe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001fe8:	20004580 	.word	0x20004580
 8001fec:	40023800 	.word	0x40023800
 8001ff0:	40021400 	.word	0x40021400
 8001ff4:	40020800 	.word	0x40020800
 8001ff8:	40021800 	.word	0x40021800
 8001ffc:	40021000 	.word	0x40021000
 8002000:	40020c00 	.word	0x40020c00
 8002004:	40020400 	.word	0x40020400

08002008 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002008:	b530      	push	{r4, r5, lr}
 800200a:	4601      	mov	r1, r0
 800200c:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 800200e:	2200      	movs	r2, #0
 8002010:	202c      	movs	r0, #44	; 0x2c
 8002012:	f004 f841 	bl	8006098 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8002016:	202c      	movs	r0, #44	; 0x2c
 8002018:	f004 f870 	bl	80060fc <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 800201c:	2500      	movs	r5, #0
 800201e:	4b15      	ldr	r3, [pc, #84]	; (8002074 <HAL_InitTick+0x6c>)
 8002020:	9502      	str	r5, [sp, #8]
 8002022:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8002024:	4c14      	ldr	r4, [pc, #80]	; (8002078 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 8002026:	f042 0202 	orr.w	r2, r2, #2
 800202a:	645a      	str	r2, [r3, #68]	; 0x44
 800202c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800202e:	f003 0302 	and.w	r3, r3, #2
 8002032:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002034:	a901      	add	r1, sp, #4
 8002036:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 8002038:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800203a:	f005 fb65 	bl	8007708 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 800203e:	f005 fb53 	bl	80076e8 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8002042:	4b0e      	ldr	r3, [pc, #56]	; (800207c <HAL_InitTick+0x74>)
 8002044:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 8002046:	f240 33e7 	movw	r3, #999	; 0x3e7
 800204a:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 800204c:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 800204e:	4b0c      	ldr	r3, [pc, #48]	; (8002080 <HAL_InitTick+0x78>)
 8002050:	fbb0 f0f3 	udiv	r0, r0, r3
 8002054:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 8002056:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8002058:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 800205a:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 800205c:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 800205e:	f006 f90f 	bl	8008280 <HAL_TIM_Base_Init>
 8002062:	b920      	cbnz	r0, 800206e <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 8002064:	4620      	mov	r0, r4
 8002066:	f005 ffee 	bl	8008046 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 800206a:	b009      	add	sp, #36	; 0x24
 800206c:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 800206e:	2001      	movs	r0, #1
 8002070:	e7fb      	b.n	800206a <HAL_InitTick+0x62>
 8002072:	bf00      	nop
 8002074:	40023800 	.word	0x40023800
 8002078:	20004584 	.word	0x20004584
 800207c:	40010400 	.word	0x40010400
 8002080:	000f4240 	.word	0x000f4240

08002084 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002084:	4770      	bx	lr

08002086 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002086:	e7fe      	b.n	8002086 <HardFault_Handler>

08002088 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002088:	e7fe      	b.n	8002088 <MemManage_Handler>

0800208a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800208a:	e7fe      	b.n	800208a <BusFault_Handler>

0800208c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800208c:	e7fe      	b.n	800208c <UsageFault_Handler>

0800208e <DebugMon_Handler>:
 800208e:	4770      	bx	lr

08002090 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8002090:	4801      	ldr	r0, [pc, #4]	; (8002098 <TIM8_UP_TIM13_IRQHandler+0x8>)
 8002092:	f005 bfec 	b.w	800806e <HAL_TIM_IRQHandler>
 8002096:	bf00      	nop
 8002098:	20004584 	.word	0x20004584

0800209c <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 800209c:	4801      	ldr	r0, [pc, #4]	; (80020a4 <TIM7_IRQHandler+0x8>)
 800209e:	f005 bfe6 	b.w	800806e <HAL_TIM_IRQHandler>
 80020a2:	bf00      	nop
 80020a4:	20003ab0 	.word	0x20003ab0

080020a8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80020a8:	4801      	ldr	r0, [pc, #4]	; (80020b0 <LTDC_IRQHandler+0x8>)
 80020aa:	f004 bff1 	b.w	8007090 <HAL_LTDC_IRQHandler>
 80020ae:	bf00      	nop
 80020b0:	2000397c 	.word	0x2000397c

080020b4 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80020b4:	4801      	ldr	r0, [pc, #4]	; (80020bc <DMA2D_IRQHandler+0x8>)
 80020b6:	f004 b8e0 	b.w	800627a <HAL_DMA2D_IRQHandler>
 80020ba:	bf00      	nop
 80020bc:	200038e8 	.word	0x200038e8

080020c0 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80020c0:	2001      	movs	r0, #1
 80020c2:	4770      	bx	lr

080020c4 <_kill>:

int _kill(int pid, int sig)
{
 80020c4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80020c6:	f01e fabb 	bl	8020640 <__errno>
 80020ca:	2316      	movs	r3, #22
 80020cc:	6003      	str	r3, [r0, #0]
	return -1;
}
 80020ce:	f04f 30ff 	mov.w	r0, #4294967295
 80020d2:	bd08      	pop	{r3, pc}

080020d4 <_exit>:

void _exit (int status)
{
 80020d4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80020d6:	f01e fab3 	bl	8020640 <__errno>
 80020da:	2316      	movs	r3, #22
 80020dc:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80020de:	e7fe      	b.n	80020de <_exit+0xa>

080020e0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80020e0:	b570      	push	{r4, r5, r6, lr}
 80020e2:	460d      	mov	r5, r1
 80020e4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80020e6:	460e      	mov	r6, r1
 80020e8:	1b73      	subs	r3, r6, r5
 80020ea:	429c      	cmp	r4, r3
 80020ec:	dc01      	bgt.n	80020f2 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80020ee:	4620      	mov	r0, r4
 80020f0:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80020f2:	f3af 8000 	nop.w
 80020f6:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80020fa:	e7f5      	b.n	80020e8 <_read+0x8>

080020fc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80020fc:	b570      	push	{r4, r5, r6, lr}
 80020fe:	460d      	mov	r5, r1
 8002100:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002102:	460e      	mov	r6, r1
 8002104:	1b73      	subs	r3, r6, r5
 8002106:	429c      	cmp	r4, r3
 8002108:	dc01      	bgt.n	800210e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800210a:	4620      	mov	r0, r4
 800210c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800210e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002112:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002116:	e7f5      	b.n	8002104 <_write+0x8>

08002118 <_close>:

int _close(int file)
{
	return -1;
}
 8002118:	f04f 30ff 	mov.w	r0, #4294967295
 800211c:	4770      	bx	lr

0800211e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800211e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002122:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002124:	2000      	movs	r0, #0
 8002126:	4770      	bx	lr

08002128 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002128:	2001      	movs	r0, #1
 800212a:	4770      	bx	lr

0800212c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 800212c:	2000      	movs	r0, #0
 800212e:	4770      	bx	lr

08002130 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002130:	4a0a      	ldr	r2, [pc, #40]	; (800215c <_sbrk+0x2c>)
 8002132:	6811      	ldr	r1, [r2, #0]
{
 8002134:	b508      	push	{r3, lr}
 8002136:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002138:	b909      	cbnz	r1, 800213e <_sbrk+0xe>
		heap_end = &end;
 800213a:	4909      	ldr	r1, [pc, #36]	; (8002160 <_sbrk+0x30>)
 800213c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800213e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002140:	4669      	mov	r1, sp
 8002142:	4403      	add	r3, r0
 8002144:	428b      	cmp	r3, r1
 8002146:	d906      	bls.n	8002156 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002148:	f01e fa7a 	bl	8020640 <__errno>
 800214c:	230c      	movs	r3, #12
 800214e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002150:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002154:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002156:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002158:	e7fc      	b.n	8002154 <_sbrk+0x24>
 800215a:	bf00      	nop
 800215c:	200045c4 	.word	0x200045c4
 8002160:	20015738 	.word	0x20015738

08002164 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002164:	4770      	bx	lr

08002166 <_ZN23ApplicationFontProviderD0Ev>:
 8002166:	b510      	push	{r4, lr}
 8002168:	2104      	movs	r1, #4
 800216a:	4604      	mov	r4, r0
 800216c:	f01e f982 	bl	8020474 <_ZdlPvj>
 8002170:	4620      	mov	r0, r4
 8002172:	bd10      	pop	{r4, pc}

08002174 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002174:	2901      	cmp	r1, #1
{
 8002176:	b508      	push	{r3, lr}
    switch (typography)
 8002178:	d006      	beq.n	8002188 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800217a:	2902      	cmp	r1, #2
 800217c:	d008      	beq.n	8002190 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800217e:	b959      	cbnz	r1, 8002198 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002180:	f002 fe40 	bl	8004e04 <_ZN17TypedTextDatabase8getFontsEv>
 8002184:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002186:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002188:	f002 fe3c 	bl	8004e04 <_ZN17TypedTextDatabase8getFontsEv>
 800218c:	6840      	ldr	r0, [r0, #4]
 800218e:	e7fa      	b.n	8002186 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002190:	f002 fe38 	bl	8004e04 <_ZN17TypedTextDatabase8getFontsEv>
 8002194:	6880      	ldr	r0, [r0, #8]
 8002196:	e7f6      	b.n	8002186 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002198:	2000      	movs	r0, #0
 800219a:	e7f4      	b.n	8002186 <_ZN23ApplicationFontProvider7getFontEt+0x12>

0800219c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800219c:	4800      	ldr	r0, [pc, #0]	; (80021a0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800219e:	4770      	bx	lr
 80021a0:	08021e9c 	.word	0x08021e9c

080021a4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80021a4:	2009      	movs	r0, #9
 80021a6:	4770      	bx	lr

080021a8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021a8:	b513      	push	{r0, r1, r4, lr}
 80021aa:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80021ac:	b151      	cbz	r1, 80021c4 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021ae:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80021b0:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80021b2:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021b6:	aa01      	add	r2, sp, #4
 80021b8:	689c      	ldr	r4, [r3, #8]
 80021ba:	f10d 0303 	add.w	r3, sp, #3
 80021be:	47a0      	blx	r4
        return glyph;
    }
 80021c0:	b002      	add	sp, #8
 80021c2:	bd10      	pop	{r4, pc}
            return 0;
 80021c4:	4608      	mov	r0, r1
 80021c6:	e7fb      	b.n	80021c0 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080021c8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80021c8:	8940      	ldrh	r0, [r0, #10]
 80021ca:	4770      	bx	lr

080021cc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80021cc:	8980      	ldrh	r0, [r0, #12]
 80021ce:	4770      	bx	lr

080021d0 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80021d0:	8880      	ldrh	r0, [r0, #4]
 80021d2:	4770      	bx	lr

080021d4 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80021d4:	7983      	ldrb	r3, [r0, #6]
 80021d6:	8880      	ldrh	r0, [r0, #4]
 80021d8:	4418      	add	r0, r3
    }
 80021da:	b280      	uxth	r0, r0
 80021dc:	4770      	bx	lr

080021de <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80021de:	79c0      	ldrb	r0, [r0, #7]
    }
 80021e0:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80021e4:	4770      	bx	lr

080021e6 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80021e6:	79c0      	ldrb	r0, [r0, #7]
    }
 80021e8:	09c0      	lsrs	r0, r0, #7
 80021ea:	4770      	bx	lr

080021ec <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80021ec:	4770      	bx	lr

080021ee <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80021ee:	b510      	push	{r4, lr}
    }
 80021f0:	2108      	movs	r1, #8
    virtual ~TypedText()
 80021f2:	4604      	mov	r4, r0
    }
 80021f4:	f01e f93e 	bl	8020474 <_ZdlPvj>
 80021f8:	4620      	mov	r0, r4
 80021fa:	bd10      	pop	{r4, pc}

080021fc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80021fc:	4770      	bx	lr

080021fe <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80021fe:	4770      	bx	lr

08002200 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002200:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002204:	6808      	ldr	r0, [r1, #0]
 8002206:	6849      	ldr	r1, [r1, #4]
 8002208:	c303      	stmia	r3!, {r0, r1}
    }
 800220a:	4770      	bx	lr

0800220c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800220c:	2000      	movs	r0, #0
 800220e:	4770      	bx	lr

08002210 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002210:	8081      	strh	r1, [r0, #4]
    }
 8002212:	4770      	bx	lr

08002214 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002214:	80c1      	strh	r1, [r0, #6]
    }
 8002216:	4770      	bx	lr

08002218 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002218:	8101      	strh	r1, [r0, #8]
    }
 800221a:	4770      	bx	lr

0800221c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800221c:	8141      	strh	r1, [r0, #10]
    }
 800221e:	4770      	bx	lr

08002220 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002220:	4770      	bx	lr

08002222 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002222:	4770      	bx	lr

08002224 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002224:	4770      	bx	lr

08002226 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002226:	4770      	bx	lr

08002228 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002228:	4770      	bx	lr

0800222a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800222a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800222c:	88c4      	ldrh	r4, [r0, #6]
 800222e:	6803      	ldr	r3, [r0, #0]
 8002230:	1b12      	subs	r2, r2, r4
 8002232:	8884      	ldrh	r4, [r0, #4]
 8002234:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002236:	1b09      	subs	r1, r1, r4
 8002238:	b212      	sxth	r2, r2
    }
 800223a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800223e:	b209      	sxth	r1, r1
 8002240:	4718      	bx	r3

08002242 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002242:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002246:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002248:	f04f 33ff 	mov.w	r3, #4294967295
 800224c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800224e:	6813      	ldr	r3, [r2, #0]
 8002250:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002252:	6010      	str	r0, [r2, #0]
    }
 8002254:	4770      	bx	lr

08002256 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002256:	4770      	bx	lr

08002258 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002258:	4770      	bx	lr

0800225a <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800225a:	6041      	str	r1, [r0, #4]
    }
 800225c:	4770      	bx	lr

0800225e <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800225e:	4770      	bx	lr

08002260 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002260:	4b06      	ldr	r3, [pc, #24]	; (800227c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002262:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002266:	2300      	movs	r3, #0
 8002268:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800226c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002270:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002274:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002278:	4770      	bx	lr
 800227a:	bf00      	nop
 800227c:	08002391 	.word	0x08002391

08002280 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002280:	2301      	movs	r3, #1
 8002282:	7203      	strb	r3, [r0, #8]
    }
 8002284:	4770      	bx	lr

08002286 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002286:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800228a:	b11a      	cbz	r2, 8002294 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800228c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002290:	b102      	cbz	r2, 8002294 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002292:	6018      	str	r0, [r3, #0]
        }
    }
 8002294:	4770      	bx	lr

08002296 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 8002296:	4770      	bx	lr

08002298 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 8002298:	4770      	bx	lr

0800229a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800229a:	4770      	bx	lr

0800229c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800229c:	4770      	bx	lr

0800229e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 800229e:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80022a0:	6840      	ldr	r0, [r0, #4]
 80022a2:	6803      	ldr	r3, [r0, #0]
 80022a4:	3110      	adds	r1, #16
 80022a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80022a8:	4718      	bx	r3

080022aa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80022aa:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80022ac:	6840      	ldr	r0, [r0, #4]
 80022ae:	6803      	ldr	r3, [r0, #0]
 80022b0:	3110      	adds	r1, #16
 80022b2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80022b4:	4718      	bx	r3

080022b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80022b6:	4770      	bx	lr

080022b8 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 80022b8:	4770      	bx	lr

080022ba <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 80022ba:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80022bc:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 80022be:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80022c2:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80022c6:	8002      	strh	r2, [r0, #0]
 80022c8:	8042      	strh	r2, [r0, #2]
 80022ca:	8084      	strh	r4, [r0, #4]
 80022cc:	80c1      	strh	r1, [r0, #6]
        }
 80022ce:	bd10      	pop	{r4, pc}

080022d0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80022d0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80022d2:	68c2      	ldr	r2, [r0, #12]
 80022d4:	6841      	ldr	r1, [r0, #4]
 80022d6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80022d8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80022da:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80022de:	07d2      	lsls	r2, r2, #31
 80022e0:	bf48      	it	mi
 80022e2:	590a      	ldrmi	r2, [r1, r4]
 80022e4:	689b      	ldr	r3, [r3, #8]
    }
 80022e6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80022ea:	bf48      	it	mi
 80022ec:	58d3      	ldrmi	r3, [r2, r3]
 80022ee:	4718      	bx	r3

080022f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80022f0:	6843      	ldr	r3, [r0, #4]
 80022f2:	b12b      	cbz	r3, 8002300 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80022f4:	6883      	ldr	r3, [r0, #8]
 80022f6:	b92b      	cbnz	r3, 8002304 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80022f8:	68c0      	ldr	r0, [r0, #12]
 80022fa:	f000 0001 	and.w	r0, r0, #1
 80022fe:	4770      	bx	lr
 8002300:	4618      	mov	r0, r3
 8002302:	4770      	bx	lr
 8002304:	2001      	movs	r0, #1
    }
 8002306:	4770      	bx	lr

08002308 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002308:	b510      	push	{r4, lr}
 800230a:	210c      	movs	r1, #12
 800230c:	4604      	mov	r4, r0
 800230e:	f01e f8b1 	bl	8020474 <_ZdlPvj>
 8002312:	4620      	mov	r0, r4
 8002314:	bd10      	pop	{r4, pc}

08002316 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002316:	b510      	push	{r4, lr}
 8002318:	2110      	movs	r1, #16
 800231a:	4604      	mov	r4, r0
 800231c:	f01e f8aa 	bl	8020474 <_ZdlPvj>
 8002320:	4620      	mov	r0, r4
 8002322:	bd10      	pop	{r4, pc}

08002324 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002324:	b510      	push	{r4, lr}
 8002326:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800232a:	4604      	mov	r4, r0
 800232c:	f01e f8a2 	bl	8020474 <_ZdlPvj>
 8002330:	4620      	mov	r0, r4
 8002332:	bd10      	pop	{r4, pc}

08002334 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002334:	b510      	push	{r4, lr}
 8002336:	2138      	movs	r1, #56	; 0x38
 8002338:	4604      	mov	r4, r0
 800233a:	f01e f89b 	bl	8020474 <_ZdlPvj>
 800233e:	4620      	mov	r0, r4
 8002340:	bd10      	pop	{r4, pc}

08002342 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002342:	b510      	push	{r4, lr}
 8002344:	2128      	movs	r1, #40	; 0x28
 8002346:	4604      	mov	r4, r0
 8002348:	f01e f894 	bl	8020474 <_ZdlPvj>
 800234c:	4620      	mov	r0, r4
 800234e:	bd10      	pop	{r4, pc}

08002350 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002350:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002352:	f00e fd73 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002356:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800235a:	f00f b913 	b.w	8011584 <_ZN8touchgfx11Application10invalidateEv>

0800235e <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800235e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002362:	b112      	cbz	r2, 800236a <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002364:	6803      	ldr	r3, [r0, #0]
 8002366:	695b      	ldr	r3, [r3, #20]
 8002368:	4718      	bx	r3
    }
 800236a:	4770      	bx	lr

0800236c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800236c:	b510      	push	{r4, lr}
 800236e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002370:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002374:	b158      	cbz	r0, 800238e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002376:	6803      	ldr	r3, [r0, #0]
 8002378:	68db      	ldr	r3, [r3, #12]
 800237a:	4798      	blx	r3
 800237c:	b138      	cbz	r0, 800238e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800237e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002382:	6803      	ldr	r3, [r0, #0]
 8002384:	689b      	ldr	r3, [r3, #8]
 8002386:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002388:	2300      	movs	r3, #0
 800238a:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800238e:	bd10      	pop	{r4, pc}

08002390 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002390:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002394:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002398:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800239a:	68a8      	ldr	r0, [r5, #8]
 800239c:	6803      	ldr	r3, [r0, #0]
 800239e:	6a1b      	ldr	r3, [r3, #32]
 80023a0:	4798      	blx	r3
 80023a2:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 80023a6:	d205      	bcs.n	80023b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80023a8:	4b45      	ldr	r3, [pc, #276]	; (80024c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80023aa:	4a46      	ldr	r2, [pc, #280]	; (80024c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80023ac:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80023ae:	4846      	ldr	r0, [pc, #280]	; (80024c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80023b0:	f01e f914 	bl	80205dc <__assert_func>
 80023b4:	6868      	ldr	r0, [r5, #4]
 80023b6:	6803      	ldr	r3, [r0, #0]
 80023b8:	6a1b      	ldr	r3, [r3, #32]
 80023ba:	4798      	blx	r3
 80023bc:	280f      	cmp	r0, #15
 80023be:	d803      	bhi.n	80023c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80023c0:	4b42      	ldr	r3, [pc, #264]	; (80024cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80023c2:	4a40      	ldr	r2, [pc, #256]	; (80024c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80023c4:	21a4      	movs	r1, #164	; 0xa4
 80023c6:	e7f2      	b.n	80023ae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80023c8:	68e8      	ldr	r0, [r5, #12]
 80023ca:	6803      	ldr	r3, [r0, #0]
 80023cc:	6a1b      	ldr	r3, [r3, #32]
 80023ce:	4798      	blx	r3
 80023d0:	280b      	cmp	r0, #11
 80023d2:	d803      	bhi.n	80023dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80023d4:	4b3e      	ldr	r3, [pc, #248]	; (80024d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 80023d6:	4a3b      	ldr	r2, [pc, #236]	; (80024c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80023d8:	21a5      	movs	r1, #165	; 0xa5
 80023da:	e7e8      	b.n	80023ae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80023dc:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80024d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80023e0:	f00e fd2c 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
 80023e4:	f00e fd30 	bl	8010e48 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80023e8:	f8d9 0000 	ldr.w	r0, [r9]
 80023ec:	b110      	cbz	r0, 80023f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80023ee:	6803      	ldr	r3, [r0, #0]
 80023f0:	68db      	ldr	r3, [r3, #12]
 80023f2:	4798      	blx	r3
    if (*currentTrans)
 80023f4:	f8d9 0000 	ldr.w	r0, [r9]
 80023f8:	b110      	cbz	r0, 8002400 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80023fa:	6803      	ldr	r3, [r0, #0]
 80023fc:	681b      	ldr	r3, [r3, #0]
 80023fe:	4798      	blx	r3
    if (*currentScreen)
 8002400:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80024dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002404:	f8d8 0000 	ldr.w	r0, [r8]
 8002408:	b110      	cbz	r0, 8002410 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800240a:	6803      	ldr	r3, [r0, #0]
 800240c:	695b      	ldr	r3, [r3, #20]
 800240e:	4798      	blx	r3
    if (*currentPresenter)
 8002410:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002414:	b110      	cbz	r0, 800241c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002416:	6803      	ldr	r3, [r0, #0]
 8002418:	685b      	ldr	r3, [r3, #4]
 800241a:	4798      	blx	r3
    if (*currentScreen)
 800241c:	f8d8 0000 	ldr.w	r0, [r8]
 8002420:	b110      	cbz	r0, 8002428 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	4798      	blx	r3
    if (*currentPresenter)
 8002428:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800242c:	b110      	cbz	r0, 8002434 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800242e:	6803      	ldr	r3, [r0, #0]
 8002430:	689b      	ldr	r3, [r3, #8]
 8002432:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002434:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002436:	6803      	ldr	r3, [r0, #0]
 8002438:	2100      	movs	r1, #0
 800243a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800243c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800243e:	f04f 0b00 	mov.w	fp, #0
 8002442:	4b24      	ldr	r3, [pc, #144]	; (80024d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002444:	6003      	str	r3, [r0, #0]
 8002446:	4604      	mov	r4, r0
 8002448:	f8c0 b004 	str.w	fp, [r0, #4]
 800244c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002450:	68a8      	ldr	r0, [r5, #8]
 8002452:	6803      	ldr	r3, [r0, #0]
 8002454:	4659      	mov	r1, fp
 8002456:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002458:	4798      	blx	r3
 800245a:	4606      	mov	r6, r0
 800245c:	f002 fe02 	bl	8005064 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002460:	6868      	ldr	r0, [r5, #4]
 8002462:	6803      	ldr	r3, [r0, #0]
 8002464:	4659      	mov	r1, fp
 8002466:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002468:	4798      	blx	r3
 800246a:	4631      	mov	r1, r6
 800246c:	4605      	mov	r5, r0
 800246e:	f002 fd4d 	bl	8004f0c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002472:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002476:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800247a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800247e:	b1e5      	cbz	r5, 80024ba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002480:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002482:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002486:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayRunningTime() {} ;
    virtual void DisplayCurrentValue() {};

    void bind(Model* m)
    {
        model = m;
 8002488:	f8c5 a008 	str.w	sl, [r5, #8]
 800248c:	4630      	mov	r0, r6
 800248e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002490:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002492:	4798      	blx	r3
    newPresenter->activate();
 8002494:	682b      	ldr	r3, [r5, #0]
 8002496:	4628      	mov	r0, r5
 8002498:	681b      	ldr	r3, [r3, #0]
 800249a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800249c:	4621      	mov	r1, r4
 800249e:	4630      	mov	r0, r6
 80024a0:	f010 f97a 	bl	8012798 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024a4:	6823      	ldr	r3, [r4, #0]
 80024a6:	4620      	mov	r0, r4
 80024a8:	691b      	ldr	r3, [r3, #16]
 80024aa:	4798      	blx	r3
    newTransition->invalidate();
 80024ac:	6823      	ldr	r3, [r4, #0]
 80024ae:	695b      	ldr	r3, [r3, #20]
 80024b0:	4620      	mov	r0, r4
}
 80024b2:	b001      	add	sp, #4
 80024b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024b8:	4718      	bx	r3
    model->bind(newPresenter);
 80024ba:	462b      	mov	r3, r5
 80024bc:	e7e1      	b.n	8002482 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 80024be:	bf00      	nop
 80024c0:	08021f60 	.word	0x08021f60
 80024c4:	08021fee 	.word	0x08021fee
 80024c8:	080220f2 	.word	0x080220f2
 80024cc:	08022139 	.word	0x08022139
 80024d0:	080221dc 	.word	0x080221dc
 80024d4:	08022520 	.word	0x08022520
 80024d8:	200154d0 	.word	0x200154d0
 80024dc:	200154cc 	.word	0x200154cc

080024e0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80024e0:	4b04      	ldr	r3, [pc, #16]	; (80024f4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80024e8:	b10a      	cbz	r2, 80024ee <_ZN8touchgfx3HAL3lcdEv+0xe>
 80024ea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80024ec:	b900      	cbnz	r0, 80024f0 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80024ee:	6898      	ldr	r0, [r3, #8]
    }
 80024f0:	4770      	bx	lr
 80024f2:	bf00      	nop
 80024f4:	20015488 	.word	0x20015488

080024f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80024f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024fa:	4604      	mov	r4, r0
        animationCounter++;
 80024fc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 80024fe:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002500:	3001      	adds	r0, #1
 8002502:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002504:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 8002506:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002508:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800250a:	d850      	bhi.n	80025ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800250c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002510:	2100      	movs	r1, #0
 8002512:	f010 f947 	bl	80127a4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002516:	f010 0201 	ands.w	r2, r0, #1
 800251a:	b283      	uxth	r3, r0
 800251c:	d04d      	beq.n	80025ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800251e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002522:	2800      	cmp	r0, #0
 8002524:	bfd8      	it	le
 8002526:	460a      	movle	r2, r1
 8002528:	4413      	add	r3, r2
 800252a:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800252c:	4e24      	ldr	r6, [pc, #144]	; (80025c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800252e:	4f25      	ldr	r7, [pc, #148]	; (80025c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002530:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002532:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002536:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002538:	f9b7 0000 	ldrsh.w	r0, [r7]
 800253c:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002540:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002542:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002544:	4463      	add	r3, ip
 8002546:	1a5b      	subs	r3, r3, r1
 8002548:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 800254c:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800254e:	b212      	sxth	r2, r2
 8002550:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 8002552:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002554:	8322      	strh	r2, [r4, #24]
 8002556:	f8ad 2018 	strh.w	r2, [sp, #24]
 800255a:	f8ad 501a 	strh.w	r5, [sp, #26]
 800255e:	a906      	add	r1, sp, #24
 8002560:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002562:	7aa3      	ldrb	r3, [r4, #10]
 8002564:	2b01      	cmp	r3, #1
 8002566:	d126      	bne.n	80025b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002568:	4b17      	ldr	r3, [pc, #92]	; (80025c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 800256a:	781b      	ldrb	r3, [r3, #0]
 800256c:	b31b      	cbz	r3, 80025b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 800256e:	69a1      	ldr	r1, [r4, #24]
 8002570:	6960      	ldr	r0, [r4, #20]
 8002572:	ab04      	add	r3, sp, #16
 8002574:	c303      	stmia	r3!, {r0, r1}
        return instance;
 8002576:	4b15      	ldr	r3, [pc, #84]	; (80025cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8002578:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800257a:	6803      	ldr	r3, [r0, #0]
 800257c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800257e:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002580:	8833      	ldrh	r3, [r6, #0]
 8002582:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 8002586:	883b      	ldrh	r3, [r7, #0]
 8002588:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800258c:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 800258e:	f8ad 5018 	strh.w	r5, [sp, #24]
 8002592:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 8002596:	f7ff ffa3 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800259a:	22ff      	movs	r2, #255	; 0xff
 800259c:	6803      	ldr	r3, [r0, #0]
 800259e:	9200      	str	r2, [sp, #0]
 80025a0:	9501      	str	r5, [sp, #4]
 80025a2:	68dc      	ldr	r4, [r3, #12]
 80025a4:	9903      	ldr	r1, [sp, #12]
 80025a6:	ab04      	add	r3, sp, #16
 80025a8:	aa06      	add	r2, sp, #24
 80025aa:	47a0      	blx	r4
 80025ac:	e003      	b.n	80025b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80025ae:	2301      	movs	r3, #1
 80025b0:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80025b2:	2300      	movs	r3, #0
 80025b4:	72a3      	strb	r3, [r4, #10]
    }
 80025b6:	b009      	add	sp, #36	; 0x24
 80025b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80025ba:	81e0      	strh	r0, [r4, #14]
 80025bc:	e7b6      	b.n	800252c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80025be:	bf00      	nop
 80025c0:	2001547c 	.word	0x2001547c
 80025c4:	2001547e 	.word	0x2001547e
 80025c8:	20015486 	.word	0x20015486
 80025cc:	20015488 	.word	0x20015488

080025d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80025d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80025d2:	4604      	mov	r4, r0
 80025d4:	4617      	mov	r7, r2
 80025d6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80025d8:	f00e fc50 	bl	8010e7c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80025dc:	4b0e      	ldr	r3, [pc, #56]	; (8002618 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80025de:	601c      	str	r4, [r3, #0]
      model(m)
 80025e0:	4b0e      	ldr	r3, [pc, #56]	; (800261c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80025e2:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80025e4:	4b0e      	ldr	r3, [pc, #56]	; (8002620 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80025e6:	2500      	movs	r5, #0
 80025e8:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80025ec:	4b0d      	ldr	r3, [pc, #52]	; (8002624 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80025ee:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80025f2:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80025f4:	6803      	ldr	r3, [r0, #0]
 80025f6:	4629      	mov	r1, r5
 80025f8:	689b      	ldr	r3, [r3, #8]
 80025fa:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 80025fe:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002602:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002604:	4628      	mov	r0, r5
 8002606:	f002 fbb1 	bl	8004d6c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800260a:	f7ff ff69 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800260e:	f016 fd22 	bl	8019056 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002612:	4620      	mov	r0, r4
 8002614:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002616:	bf00      	nop
 8002618:	200154dc 	.word	0x200154dc
 800261c:	080224d4 	.word	0x080224d4
 8002620:	080224bc 	.word	0x080224bc
 8002624:	20015488 	.word	0x20015488

08002628 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002628:	4b06      	ldr	r3, [pc, #24]	; (8002644 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800262a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800262e:	2300      	movs	r3, #0
 8002630:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002634:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002638:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800263c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002640:	4770      	bx	lr
 8002642:	bf00      	nop
 8002644:	08002391 	.word	0x08002391

08002648 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 8002648:	4b06      	ldr	r3, [pc, #24]	; (8002664 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 800264a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800264e:	2300      	movs	r3, #0
 8002650:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002654:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002658:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800265c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002660:	4770      	bx	lr
 8002662:	bf00      	nop
 8002664:	0800282d 	.word	0x0800282d

08002668 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002668:	4b06      	ldr	r3, [pc, #24]	; (8002684 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 800266a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800266e:	2300      	movs	r3, #0
 8002670:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// ScreenGraph

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002674:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002678:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800267c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002680:	4770      	bx	lr
 8002682:	bf00      	nop
 8002684:	080026ed 	.word	0x080026ed

08002688 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
    WipeTransition(const uint8_t transitionSteps = 20)
 8002688:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800268a:	4604      	mov	r4, r0
 800268c:	2300      	movs	r3, #0
          solid()
 800268e:	4a13      	ldr	r2, [pc, #76]	; (80026dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 8002690:	6002      	str	r2, [r0, #0]
 8002692:	6043      	str	r3, [r0, #4]
 8002694:	7203      	strb	r3, [r0, #8]
 8002696:	7241      	strb	r1, [r0, #9]
 8002698:	7283      	strb	r3, [r0, #10]
 800269a:	e9c4 3305 	strd	r3, r3, [r4, #20]
 800269e:	e9c4 3307 	strd	r3, r3, [r4, #28]
 80026a2:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
 80026a6:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80026aa:	81e3      	strh	r3, [r4, #14]
 80026ac:	f44f 7380 	mov.w	r3, #256	; 0x100
 80026b0:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 80026b2:	4b0b      	ldr	r3, [pc, #44]	; (80026e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
 80026b4:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 80026b6:	4b0b      	ldr	r3, [pc, #44]	; (80026e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 80026b8:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80026bc:	4b0a      	ldr	r3, [pc, #40]	; (80026e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
            targetValue = HAL::DISPLAY_WIDTH;
 80026be:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80026c0:	f9b3 5000 	ldrsh.w	r5, [r3]
          solid()
 80026c4:	3010      	adds	r0, #16
        setWidth(width);
 80026c6:	9001      	str	r0, [sp, #4]
 80026c8:	f7ff fda6 	bl	8002218 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80026cc:	9801      	ldr	r0, [sp, #4]
 80026ce:	4629      	mov	r1, r5
 80026d0:	f7ff fda4 	bl	800221c <_ZN8touchgfx8Drawable9setHeightEs>
    }
 80026d4:	4620      	mov	r0, r4
 80026d6:	b003      	add	sp, #12
 80026d8:	bd30      	pop	{r4, r5, pc}
 80026da:	bf00      	nop
 80026dc:	080225ac 	.word	0x080225ac
 80026e0:	08022544 	.word	0x08022544
 80026e4:	2001547c 	.word	0x2001547c
 80026e8:	2001547e 	.word	0x2001547e

080026ec <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 80026ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80026f0:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80026f4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80026f6:	68a0      	ldr	r0, [r4, #8]
 80026f8:	6803      	ldr	r3, [r0, #0]
 80026fa:	6a1b      	ldr	r3, [r3, #32]
 80026fc:	4798      	blx	r3
 80026fe:	f242 6317 	movw	r3, #9751	; 0x2617
 8002702:	4298      	cmp	r0, r3
 8002704:	d805      	bhi.n	8002712 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x26>
 8002706:	4b42      	ldr	r3, [pc, #264]	; (8002810 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x124>)
 8002708:	4a42      	ldr	r2, [pc, #264]	; (8002814 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800270a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800270c:	4842      	ldr	r0, [pc, #264]	; (8002818 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x12c>)
 800270e:	f01d ff65 	bl	80205dc <__assert_func>
 8002712:	6860      	ldr	r0, [r4, #4]
 8002714:	6803      	ldr	r3, [r0, #0]
 8002716:	6a1b      	ldr	r3, [r3, #32]
 8002718:	4798      	blx	r3
 800271a:	280f      	cmp	r0, #15
 800271c:	d803      	bhi.n	8002726 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3a>
 800271e:	4b3f      	ldr	r3, [pc, #252]	; (800281c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x130>)
 8002720:	4a3c      	ldr	r2, [pc, #240]	; (8002814 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 8002722:	21a4      	movs	r1, #164	; 0xa4
 8002724:	e7f2      	b.n	800270c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002726:	68e0      	ldr	r0, [r4, #12]
 8002728:	6803      	ldr	r3, [r0, #0]
 800272a:	6a1b      	ldr	r3, [r3, #32]
 800272c:	4798      	blx	r3
 800272e:	2837      	cmp	r0, #55	; 0x37
 8002730:	d803      	bhi.n	800273a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x4e>
 8002732:	4b3b      	ldr	r3, [pc, #236]	; (8002820 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x134>)
 8002734:	4a37      	ldr	r2, [pc, #220]	; (8002814 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 8002736:	21a5      	movs	r1, #165	; 0xa5
 8002738:	e7e8      	b.n	800270c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 800273a:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002824 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 800273e:	f00e fb7d 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
 8002742:	f00e fb81 	bl	8010e48 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002746:	f8d9 0000 	ldr.w	r0, [r9]
 800274a:	b110      	cbz	r0, 8002752 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800274c:	6803      	ldr	r3, [r0, #0]
 800274e:	68db      	ldr	r3, [r3, #12]
 8002750:	4798      	blx	r3
    if (*currentTrans)
 8002752:	f8d9 0000 	ldr.w	r0, [r9]
 8002756:	b110      	cbz	r0, 800275e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8002758:	6803      	ldr	r3, [r0, #0]
 800275a:	681b      	ldr	r3, [r3, #0]
 800275c:	4798      	blx	r3
    if (*currentScreen)
 800275e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002828 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 8002762:	f8d8 0000 	ldr.w	r0, [r8]
 8002766:	b110      	cbz	r0, 800276e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002768:	6803      	ldr	r3, [r0, #0]
 800276a:	695b      	ldr	r3, [r3, #20]
 800276c:	4798      	blx	r3
    if (*currentPresenter)
 800276e:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002772:	b110      	cbz	r0, 800277a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002774:	6803      	ldr	r3, [r0, #0]
 8002776:	685b      	ldr	r3, [r3, #4]
 8002778:	4798      	blx	r3
    if (*currentScreen)
 800277a:	f8d8 0000 	ldr.w	r0, [r8]
 800277e:	b110      	cbz	r0, 8002786 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002780:	6803      	ldr	r3, [r0, #0]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	4798      	blx	r3
    if (*currentPresenter)
 8002786:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800278a:	b110      	cbz	r0, 8002792 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800278c:	6803      	ldr	r3, [r0, #0]
 800278e:	689b      	ldr	r3, [r3, #8]
 8002790:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002792:	68e0      	ldr	r0, [r4, #12]
 8002794:	6803      	ldr	r3, [r0, #0]
 8002796:	2100      	movs	r1, #0
 8002798:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800279a:	4798      	blx	r3
 800279c:	2114      	movs	r1, #20
 800279e:	4605      	mov	r5, r0
 80027a0:	f7ff ff72 	bl	8002688 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80027a4:	68a0      	ldr	r0, [r4, #8]
 80027a6:	6803      	ldr	r3, [r0, #0]
 80027a8:	2100      	movs	r1, #0
 80027aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ac:	4798      	blx	r3
 80027ae:	4606      	mov	r6, r0
 80027b0:	f002 ffae 	bl	8005710 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80027b4:	6860      	ldr	r0, [r4, #4]
 80027b6:	6803      	ldr	r3, [r0, #0]
 80027b8:	2100      	movs	r1, #0
 80027ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027bc:	4798      	blx	r3
 80027be:	4631      	mov	r1, r6
 80027c0:	4604      	mov	r4, r0
 80027c2:	f002 fca1 	bl	8005108 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 80027c6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80027ca:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80027ce:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80027d2:	b1dc      	cbz	r4, 800280c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x120>
 80027d4:	1d23      	adds	r3, r4, #4
 80027d6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80027da:	6833      	ldr	r3, [r6, #0]
 80027dc:	f8c4 a008 	str.w	sl, [r4, #8]
 80027e0:	4630      	mov	r0, r6
 80027e2:	68db      	ldr	r3, [r3, #12]
 80027e4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80027e6:	4798      	blx	r3
    newPresenter->activate();
 80027e8:	6823      	ldr	r3, [r4, #0]
 80027ea:	4620      	mov	r0, r4
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80027f0:	4629      	mov	r1, r5
 80027f2:	4630      	mov	r0, r6
 80027f4:	f00f ffd0 	bl	8012798 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80027f8:	682b      	ldr	r3, [r5, #0]
 80027fa:	4628      	mov	r0, r5
 80027fc:	691b      	ldr	r3, [r3, #16]
 80027fe:	4798      	blx	r3
    newTransition->invalidate();
 8002800:	682b      	ldr	r3, [r5, #0]
 8002802:	4628      	mov	r0, r5
 8002804:	695b      	ldr	r3, [r3, #20]
}
 8002806:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800280a:	4718      	bx	r3
    model->bind(newPresenter);
 800280c:	4623      	mov	r3, r4
 800280e:	e7e2      	b.n	80027d6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xea>
 8002810:	08021f60 	.word	0x08021f60
 8002814:	0802227f 	.word	0x0802227f
 8002818:	080220f2 	.word	0x080220f2
 800281c:	08022139 	.word	0x08022139
 8002820:	080221dc 	.word	0x080221dc
 8002824:	200154d0 	.word	0x200154d0
 8002828:	200154cc 	.word	0x200154cc

0800282c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 800282c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002830:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002834:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002836:	68a0      	ldr	r0, [r4, #8]
 8002838:	6803      	ldr	r3, [r0, #0]
 800283a:	6a1b      	ldr	r3, [r3, #32]
 800283c:	4798      	blx	r3
 800283e:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 8002842:	d205      	bcs.n	8002850 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 8002844:	4b42      	ldr	r3, [pc, #264]	; (8002950 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 8002846:	4a43      	ldr	r2, [pc, #268]	; (8002954 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002848:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800284a:	4843      	ldr	r0, [pc, #268]	; (8002958 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 800284c:	f01d fec6 	bl	80205dc <__assert_func>
 8002850:	6860      	ldr	r0, [r4, #4]
 8002852:	6803      	ldr	r3, [r0, #0]
 8002854:	6a1b      	ldr	r3, [r3, #32]
 8002856:	4798      	blx	r3
 8002858:	280f      	cmp	r0, #15
 800285a:	d803      	bhi.n	8002864 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 800285c:	4b3f      	ldr	r3, [pc, #252]	; (800295c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 800285e:	4a3d      	ldr	r2, [pc, #244]	; (8002954 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002860:	21a4      	movs	r1, #164	; 0xa4
 8002862:	e7f2      	b.n	800284a <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002864:	68e0      	ldr	r0, [r4, #12]
 8002866:	6803      	ldr	r3, [r0, #0]
 8002868:	6a1b      	ldr	r3, [r3, #32]
 800286a:	4798      	blx	r3
 800286c:	2837      	cmp	r0, #55	; 0x37
 800286e:	d803      	bhi.n	8002878 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 8002870:	4b3b      	ldr	r3, [pc, #236]	; (8002960 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 8002872:	4a38      	ldr	r2, [pc, #224]	; (8002954 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002874:	21a5      	movs	r1, #165	; 0xa5
 8002876:	e7e8      	b.n	800284a <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8002878:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002964 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 800287c:	f00e fade 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
 8002880:	f00e fae2 	bl	8010e48 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002884:	f8d9 0000 	ldr.w	r0, [r9]
 8002888:	b110      	cbz	r0, 8002890 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 800288a:	6803      	ldr	r3, [r0, #0]
 800288c:	68db      	ldr	r3, [r3, #12]
 800288e:	4798      	blx	r3
    if (*currentTrans)
 8002890:	f8d9 0000 	ldr.w	r0, [r9]
 8002894:	b110      	cbz	r0, 800289c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 8002896:	6803      	ldr	r3, [r0, #0]
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	4798      	blx	r3
    if (*currentScreen)
 800289c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002968 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 80028a0:	f8d8 0000 	ldr.w	r0, [r8]
 80028a4:	b110      	cbz	r0, 80028ac <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80028a6:	6803      	ldr	r3, [r0, #0]
 80028a8:	695b      	ldr	r3, [r3, #20]
 80028aa:	4798      	blx	r3
    if (*currentPresenter)
 80028ac:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80028b0:	b110      	cbz	r0, 80028b8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80028b2:	6803      	ldr	r3, [r0, #0]
 80028b4:	685b      	ldr	r3, [r3, #4]
 80028b6:	4798      	blx	r3
    if (*currentScreen)
 80028b8:	f8d8 0000 	ldr.w	r0, [r8]
 80028bc:	b110      	cbz	r0, 80028c4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 80028be:	6803      	ldr	r3, [r0, #0]
 80028c0:	681b      	ldr	r3, [r3, #0]
 80028c2:	4798      	blx	r3
    if (*currentPresenter)
 80028c4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80028c8:	b110      	cbz	r0, 80028d0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80028ca:	6803      	ldr	r3, [r0, #0]
 80028cc:	689b      	ldr	r3, [r3, #8]
 80028ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80028d0:	68e0      	ldr	r0, [r4, #12]
 80028d2:	6803      	ldr	r3, [r0, #0]
 80028d4:	2100      	movs	r1, #0
 80028d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028d8:	4798      	blx	r3
 80028da:	2114      	movs	r1, #20
 80028dc:	4605      	mov	r5, r0
 80028de:	f7ff fed3 	bl	8002688 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80028e2:	68a0      	ldr	r0, [r4, #8]
 80028e4:	6803      	ldr	r3, [r0, #0]
 80028e6:	2100      	movs	r1, #0
 80028e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028ea:	4798      	blx	r3
 80028ec:	4606      	mov	r6, r0
 80028ee:	f002 fbb9 	bl	8005064 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80028f2:	6860      	ldr	r0, [r4, #4]
 80028f4:	6803      	ldr	r3, [r0, #0]
 80028f6:	2100      	movs	r1, #0
 80028f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028fa:	4798      	blx	r3
 80028fc:	4631      	mov	r1, r6
 80028fe:	4604      	mov	r4, r0
 8002900:	f002 fb04 	bl	8004f0c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002904:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002908:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800290c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002910:	b1dc      	cbz	r4, 800294a <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 8002912:	1d23      	adds	r3, r4, #4
 8002914:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002918:	6833      	ldr	r3, [r6, #0]
 800291a:	f8c4 a008 	str.w	sl, [r4, #8]
 800291e:	4630      	mov	r0, r6
 8002920:	68db      	ldr	r3, [r3, #12]
 8002922:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002924:	4798      	blx	r3
    newPresenter->activate();
 8002926:	6823      	ldr	r3, [r4, #0]
 8002928:	4620      	mov	r0, r4
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800292e:	4629      	mov	r1, r5
 8002930:	4630      	mov	r0, r6
 8002932:	f00f ff31 	bl	8012798 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002936:	682b      	ldr	r3, [r5, #0]
 8002938:	4628      	mov	r0, r5
 800293a:	691b      	ldr	r3, [r3, #16]
 800293c:	4798      	blx	r3
    newTransition->invalidate();
 800293e:	682b      	ldr	r3, [r5, #0]
 8002940:	4628      	mov	r0, r5
 8002942:	695b      	ldr	r3, [r3, #20]
}
 8002944:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002948:	4718      	bx	r3
    model->bind(newPresenter);
 800294a:	4623      	mov	r3, r4
 800294c:	e7e2      	b.n	8002914 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 800294e:	bf00      	nop
 8002950:	08021f60 	.word	0x08021f60
 8002954:	0802239d 	.word	0x0802239d
 8002958:	080220f2 	.word	0x080220f2
 800295c:	08022139 	.word	0x08022139
 8002960:	080221dc 	.word	0x080221dc
 8002964:	200154d0 	.word	0x200154d0
 8002968:	200154cc 	.word	0x200154cc

0800296c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800296c:	6a00      	ldr	r0, [r0, #32]
 800296e:	4770      	bx	lr

08002970 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002970:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002972:	4770      	bx	lr

08002974 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002974:	4770      	bx	lr

08002976 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002976:	888b      	ldrh	r3, [r1, #4]
 8002978:	6980      	ldr	r0, [r0, #24]
 800297a:	680a      	ldr	r2, [r1, #0]
 800297c:	0adb      	lsrs	r3, r3, #11
 800297e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002982:	4410      	add	r0, r2
 8002984:	4770      	bx	lr

08002986 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002986:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002988:	b1c2      	cbz	r2, 80029bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800298a:	7b13      	ldrb	r3, [r2, #12]
 800298c:	b1b3      	cbz	r3, 80029bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800298e:	7b54      	ldrb	r4, [r2, #13]
 8002990:	7ad2      	ldrb	r2, [r2, #11]
 8002992:	0224      	lsls	r4, r4, #8
 8002994:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002998:	4314      	orrs	r4, r2
 800299a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800299c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800299e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80029a2:	8813      	ldrh	r3, [r2, #0]
 80029a4:	428b      	cmp	r3, r1
 80029a6:	d102      	bne.n	80029ae <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80029a8:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80029ac:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80029ae:	d805      	bhi.n	80029bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80029b0:	3801      	subs	r0, #1
 80029b2:	b280      	uxth	r0, r0
 80029b4:	3204      	adds	r2, #4
 80029b6:	2800      	cmp	r0, #0
 80029b8:	d1f3      	bne.n	80029a2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80029ba:	e7f7      	b.n	80029ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80029bc:	2000      	movs	r0, #0
 80029be:	e7f5      	b.n	80029ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080029c0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80029c0:	b510      	push	{r4, lr}
 80029c2:	2128      	movs	r1, #40	; 0x28
 80029c4:	4604      	mov	r4, r0
 80029c6:	f01d fd55 	bl	8020474 <_ZdlPvj>
 80029ca:	4620      	mov	r0, r4
 80029cc:	bd10      	pop	{r4, pc}
	...

080029d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80029d0:	b530      	push	{r4, r5, lr}
 80029d2:	b089      	sub	sp, #36	; 0x24
 80029d4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80029d6:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80029da:	9506      	str	r5, [sp, #24]
 80029dc:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80029e0:	9505      	str	r5, [sp, #20]
 80029e2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80029e6:	9504      	str	r5, [sp, #16]
 80029e8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80029ec:	9503      	str	r5, [sp, #12]
 80029ee:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80029f2:	9502      	str	r5, [sp, #8]
 80029f4:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80029f8:	9501      	str	r5, [sp, #4]
 80029fa:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80029fe:	9500      	str	r5, [sp, #0]
 8002a00:	f00f fa60 	bl	8011ec4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002a04:	4b06      	ldr	r3, [pc, #24]	; (8002a20 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002a06:	6023      	str	r3, [r4, #0]
 8002a08:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002a0a:	61a3      	str	r3, [r4, #24]
 8002a0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002a0e:	61e3      	str	r3, [r4, #28]
 8002a10:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002a12:	6223      	str	r3, [r4, #32]
 8002a14:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002a16:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002a18:	4620      	mov	r0, r4
 8002a1a:	b009      	add	sp, #36	; 0x24
 8002a1c:	bd30      	pop	{r4, r5, pc}
 8002a1e:	bf00      	nop
 8002a20:	080225d0 	.word	0x080225d0

08002a24 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002a24:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002a26:	4770      	bx	lr

08002a28 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002a28:	4770      	bx	lr

08002a2a <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002a2a:	4770      	bx	lr

08002a2c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002a2c:	4770      	bx	lr

08002a2e <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002a2e:	4770      	bx	lr

08002a30 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002a30:	4770      	bx	lr

08002a32 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002a32:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002a34:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002a36:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002a38:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002a3a:	466d      	mov	r5, sp
 8002a3c:	4601      	mov	r1, r0
 8002a3e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002a42:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002a44:	4628      	mov	r0, r5
 8002a46:	4798      	blx	r3
 8002a48:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a4c:	343c      	adds	r4, #60	; 0x3c
 8002a4e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002a52:	b005      	add	sp, #20
 8002a54:	bd30      	pop	{r4, r5, pc}

08002a56 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002a56:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002a58:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002a5a:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002a5c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002a5e:	466d      	mov	r5, sp
 8002a60:	4601      	mov	r1, r0
 8002a62:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002a66:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002a68:	4628      	mov	r0, r5
 8002a6a:	4798      	blx	r3
 8002a6c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a70:	343c      	adds	r4, #60	; 0x3c
 8002a72:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002a76:	b005      	add	sp, #20
 8002a78:	bd30      	pop	{r4, r5, pc}

08002a7a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002a7a:	2200      	movs	r2, #0
 8002a7c:	8002      	strh	r2, [r0, #0]
 8002a7e:	8042      	strh	r2, [r0, #2]
 8002a80:	8082      	strh	r2, [r0, #4]
 8002a82:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002a84:	4770      	bx	lr

08002a86 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a86:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002a8a:	4770      	bx	lr

08002a8c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002a8c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002a8e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002a90:	4604      	mov	r4, r0
        setX(x);
 8002a92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002a94:	4615      	mov	r5, r2
        setX(x);
 8002a96:	4798      	blx	r3
        setBaselineY(baselineY);
 8002a98:	6823      	ldr	r3, [r4, #0]
 8002a9a:	4629      	mov	r1, r5
 8002a9c:	4620      	mov	r0, r4
 8002a9e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002aa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002aa4:	4718      	bx	r3

08002aa6 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002aa6:	2000      	movs	r0, #0
 8002aa8:	4770      	bx	lr

08002aaa <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002aaa:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002aac:	4770      	bx	lr

08002aae <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002aae:	4770      	bx	lr

08002ab0 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ab0:	4770      	bx	lr

08002ab2 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ab2:	4770      	bx	lr

08002ab4 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ab4:	4770      	bx	lr

08002ab6 <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ab6:	4770      	bx	lr

08002ab8 <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ab8:	4770      	bx	lr

08002aba <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002aba:	4770      	bx	lr

08002abc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002abc:	4770      	bx	lr

08002abe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002abe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002ac2:	b14b      	cbz	r3, 8002ad8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002ac4:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8002ac8:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002aca:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002acc:	b13b      	cbz	r3, 8002ade <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002ace:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002ad2:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002ad4:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002ad6:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002ad8:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002adc:	e7f4      	b.n	8002ac8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002ade:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002ae2:	e7f6      	b.n	8002ad2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002ae4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ae4:	4770      	bx	lr

08002ae6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002ae6:	4770      	bx	lr

08002ae8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002ae8:	4770      	bx	lr

08002aea <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002aea:	4770      	bx	lr

08002aec <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002aec:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002aee:	68c2      	ldr	r2, [r0, #12]
 8002af0:	6844      	ldr	r4, [r0, #4]
 8002af2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002af4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002af6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002afa:	07d2      	lsls	r2, r2, #31
 8002afc:	bf48      	it	mi
 8002afe:	5962      	ldrmi	r2, [r4, r5]
 8002b00:	689b      	ldr	r3, [r3, #8]
    }
 8002b02:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b04:	bf48      	it	mi
 8002b06:	58d3      	ldrmi	r3, [r2, r3]
 8002b08:	4718      	bx	r3

08002b0a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002b0a:	6843      	ldr	r3, [r0, #4]
 8002b0c:	b12b      	cbz	r3, 8002b1a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002b0e:	6883      	ldr	r3, [r0, #8]
 8002b10:	b92b      	cbnz	r3, 8002b1e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002b12:	68c0      	ldr	r0, [r0, #12]
 8002b14:	f000 0001 	and.w	r0, r0, #1
 8002b18:	4770      	bx	lr
 8002b1a:	4618      	mov	r0, r3
 8002b1c:	4770      	bx	lr
 8002b1e:	2001      	movs	r0, #1
    }
 8002b20:	4770      	bx	lr

08002b22 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b22:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b24:	68c2      	ldr	r2, [r0, #12]
 8002b26:	6844      	ldr	r4, [r0, #4]
 8002b28:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002b2a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002b2c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b30:	07d2      	lsls	r2, r2, #31
 8002b32:	bf48      	it	mi
 8002b34:	5962      	ldrmi	r2, [r4, r5]
 8002b36:	689b      	ldr	r3, [r3, #8]
    }
 8002b38:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b3a:	bf48      	it	mi
 8002b3c:	58d3      	ldrmi	r3, [r2, r3]
 8002b3e:	4718      	bx	r3

08002b40 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002b40:	6843      	ldr	r3, [r0, #4]
 8002b42:	b12b      	cbz	r3, 8002b50 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002b44:	6883      	ldr	r3, [r0, #8]
 8002b46:	b92b      	cbnz	r3, 8002b54 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002b48:	68c0      	ldr	r0, [r0, #12]
 8002b4a:	f000 0001 	and.w	r0, r0, #1
 8002b4e:	4770      	bx	lr
 8002b50:	4618      	mov	r0, r3
 8002b52:	4770      	bx	lr
 8002b54:	2001      	movs	r0, #1
    }
 8002b56:	4770      	bx	lr

08002b58 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002b58:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b5c:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b60:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002b64:	4770      	bx	lr

08002b66 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002b66:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002b6a:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002b6e:	4770      	bx	lr

08002b70 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002b70:	b510      	push	{r4, lr}
 8002b72:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002b74:	307c      	adds	r0, #124	; 0x7c
 8002b76:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002b7a:	b13b      	cbz	r3, 8002b8c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002b7c:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002b80:	f00b fcae 	bl	800e4e0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002b84:	4620      	mov	r0, r4
 8002b86:	f7ff ff9a 	bl	8002abe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002b8a:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002b8c:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002b90:	e7f6      	b.n	8002b80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002b92 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002b92:	b510      	push	{r4, lr}
 8002b94:	214c      	movs	r1, #76	; 0x4c
 8002b96:	4604      	mov	r4, r0
 8002b98:	f01d fc6c 	bl	8020474 <_ZdlPvj>
 8002b9c:	4620      	mov	r0, r4
 8002b9e:	bd10      	pop	{r4, pc}

08002ba0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002ba0:	b510      	push	{r4, lr}
 8002ba2:	2178      	movs	r1, #120	; 0x78
 8002ba4:	4604      	mov	r4, r0
 8002ba6:	f01d fc65 	bl	8020474 <_ZdlPvj>
 8002baa:	4620      	mov	r0, r4
 8002bac:	bd10      	pop	{r4, pc}

08002bae <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002bae:	b510      	push	{r4, lr}
 8002bb0:	21a8      	movs	r1, #168	; 0xa8
 8002bb2:	4604      	mov	r4, r0
 8002bb4:	f01d fc5e 	bl	8020474 <_ZdlPvj>
 8002bb8:	4620      	mov	r0, r4
 8002bba:	bd10      	pop	{r4, pc}

08002bbc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002bbc:	b510      	push	{r4, lr}
 8002bbe:	2110      	movs	r1, #16
 8002bc0:	4604      	mov	r4, r0
 8002bc2:	f01d fc57 	bl	8020474 <_ZdlPvj>
 8002bc6:	4620      	mov	r0, r4
 8002bc8:	bd10      	pop	{r4, pc}

08002bca <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002bca:	b510      	push	{r4, lr}
 8002bcc:	2110      	movs	r1, #16
 8002bce:	4604      	mov	r4, r0
 8002bd0:	f01d fc50 	bl	8020474 <_ZdlPvj>
 8002bd4:	4620      	mov	r0, r4
 8002bd6:	bd10      	pop	{r4, pc}

08002bd8 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002bd8:	b510      	push	{r4, lr}
 8002bda:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002bde:	4604      	mov	r4, r0
 8002be0:	f01d fc48 	bl	8020474 <_ZdlPvj>
 8002be4:	4620      	mov	r0, r4
 8002be6:	bd10      	pop	{r4, pc}

08002be8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002be8:	b510      	push	{r4, lr}
 8002bea:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002bec:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002bee:	b150      	cbz	r0, 8002c06 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002bf0:	6803      	ldr	r3, [r0, #0]
 8002bf2:	68db      	ldr	r3, [r3, #12]
 8002bf4:	4798      	blx	r3
 8002bf6:	b130      	cbz	r0, 8002c06 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002bf8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002bfa:	6803      	ldr	r3, [r0, #0]
 8002bfc:	4621      	mov	r1, r4
 8002bfe:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002c00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002c04:	4718      	bx	r3
    }
 8002c06:	bd10      	pop	{r4, pc}

08002c08 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002c08:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002c0c:	4291      	cmp	r1, r2
 8002c0e:	d102      	bne.n	8002c16 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002c10:	6803      	ldr	r3, [r0, #0]
 8002c12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002c14:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002c16:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002c1a:	4291      	cmp	r1, r2
 8002c1c:	d102      	bne.n	8002c24 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002c1e:	6803      	ldr	r3, [r0, #0]
 8002c20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c22:	e7f7      	b.n	8002c14 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002c24:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002c28:	4291      	cmp	r1, r2
 8002c2a:	d102      	bne.n	8002c32 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002c2c:	6803      	ldr	r3, [r0, #0]
 8002c2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c30:	e7f0      	b.n	8002c14 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002c32:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002c36:	4291      	cmp	r1, r2
 8002c38:	d102      	bne.n	8002c40 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002c3a:	6803      	ldr	r3, [r0, #0]
 8002c3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c3e:	e7e9      	b.n	8002c14 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002c40:	4770      	bx	lr

08002c42 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002c42:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002c44:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002c46:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002c4a:	4604      	mov	r4, r0
 8002c4c:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002c4e:	b99b      	cbnz	r3, 8002c78 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002c50:	b98e      	cbnz	r6, 8002c76 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002c52:	fab3 f383 	clz	r3, r3
 8002c56:	095b      	lsrs	r3, r3, #5
 8002c58:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002c5c:	6823      	ldr	r3, [r4, #0]
 8002c5e:	4620      	mov	r0, r4
 8002c60:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002c64:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002c66:	6823      	ldr	r3, [r4, #0]
 8002c68:	4620      	mov	r0, r4
 8002c6a:	695b      	ldr	r3, [r3, #20]
 8002c6c:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002c6e:	b116      	cbz	r6, 8002c76 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002c70:	792b      	ldrb	r3, [r5, #4]
 8002c72:	2b01      	cmp	r3, #1
 8002c74:	d003      	beq.n	8002c7e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002c76:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002c78:	2e00      	cmp	r6, #0
 8002c7a:	d0fc      	beq.n	8002c76 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002c7c:	e7e9      	b.n	8002c52 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002c7e:	6823      	ldr	r3, [r4, #0]
 8002c80:	4620      	mov	r0, r4
 8002c82:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002c86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002c8a:	4718      	bx	r3

08002c8c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002c8c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002c8e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002c90:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c92:	4b12      	ldr	r3, [pc, #72]	; (8002cdc <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002c94:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002c96:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002c98:	b28d      	uxth	r5, r1
 8002c9a:	b92b      	cbnz	r3, 8002ca8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002c9c:	4b10      	ldr	r3, [pc, #64]	; (8002ce0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002c9e:	4a11      	ldr	r2, [pc, #68]	; (8002ce4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002ca0:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ca2:	4811      	ldr	r0, [pc, #68]	; (8002ce8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002ca4:	f01d fc9a 	bl	80205dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002ca8:	4910      	ldr	r1, [pc, #64]	; (8002cec <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002caa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002cac:	8809      	ldrh	r1, [r1, #0]
 8002cae:	4291      	cmp	r1, r2
 8002cb0:	d803      	bhi.n	8002cba <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002cb2:	4b0f      	ldr	r3, [pc, #60]	; (8002cf0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002cb4:	4a0b      	ldr	r2, [pc, #44]	; (8002ce4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002cb6:	216d      	movs	r1, #109	; 0x6d
 8002cb8:	e7f3      	b.n	8002ca2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002cba:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002cbe:	4b0d      	ldr	r3, [pc, #52]	; (8002cf4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002cc0:	681b      	ldr	r3, [r3, #0]
 8002cc2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002cc6:	6803      	ldr	r3, [r0, #0]
 8002cc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cca:	4798      	blx	r3
 8002ccc:	1a28      	subs	r0, r5, r0
 8002cce:	b201      	sxth	r1, r0
 8002cd0:	4633      	mov	r3, r6
 8002cd2:	4620      	mov	r0, r4
    }
 8002cd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002cd8:	4718      	bx	r3
 8002cda:	bf00      	nop
 8002cdc:	200154e0 	.word	0x200154e0
 8002ce0:	08022620 	.word	0x08022620
 8002ce4:	08022662 	.word	0x08022662
 8002ce8:	0802269d 	.word	0x0802269d
 8002cec:	200154e4 	.word	0x200154e4
 8002cf0:	080226e4 	.word	0x080226e4
 8002cf4:	200154e8 	.word	0x200154e8

08002cf8 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002cf8:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002cfc:	428b      	cmp	r3, r1
{
 8002cfe:	b510      	push	{r4, lr}
 8002d00:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002d02:	d109      	bne.n	8002d18 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d04:	f00e f89a 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002d08:	f7ff fcae 	bl	8002668 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002d0c:	6823      	ldr	r3, [r4, #0]
 8002d0e:	4620      	mov	r0, r4
 8002d10:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002d12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002d16:	4718      	bx	r3
}
 8002d18:	bd10      	pop	{r4, pc}

08002d1a <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002d1a:	2200      	movs	r2, #0
 8002d1c:	f04f 31ff 	mov.w	r1, #4294967295
 8002d20:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002d24:	6082      	str	r2, [r0, #8]
    }
 8002d26:	4770      	bx	lr

08002d28 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002d28:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002d2a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002d2c:	4604      	mov	r4, r0
        setX(x);
 8002d2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002d30:	4615      	mov	r5, r2
        setX(x);
 8002d32:	4798      	blx	r3
        setY(y);
 8002d34:	6823      	ldr	r3, [r4, #0]
 8002d36:	4629      	mov	r1, r5
 8002d38:	4620      	mov	r0, r4
 8002d3a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002d3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002d40:	4718      	bx	r3

08002d42 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002d42:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002d48:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002d4c:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d4e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002d52:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d56:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d58:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d5a:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d5c:	f011 fa9e 	bl	801429c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002d60:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002d64:	4607      	mov	r7, r0
 8002d66:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002d6a:	4640      	mov	r0, r8
 8002d6c:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002d70:	f011 fac8 	bl	8014304 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002d74:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002d78:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002d7c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002d80:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002d84:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002d88:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002d8c:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002d90:	b239      	sxth	r1, r7
 8002d92:	b212      	sxth	r2, r2
 8002d94:	f7ff ffc8 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002d98:	6823      	ldr	r3, [r4, #0]
 8002d9a:	4620      	mov	r0, r4
 8002d9c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002da0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002da4:	4718      	bx	r3

08002da6 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002da6:	b570      	push	{r4, r5, r6, lr}
 8002da8:	4604      	mov	r4, r0
 8002daa:	461d      	mov	r5, r3
 8002dac:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002db0:	f7ff ffba 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002db4:	6823      	ldr	r3, [r4, #0]
 8002db6:	4629      	mov	r1, r5
 8002db8:	4620      	mov	r0, r4
 8002dba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002dbc:	4798      	blx	r3
        setHeight(height);
 8002dbe:	6823      	ldr	r3, [r4, #0]
 8002dc0:	4631      	mov	r1, r6
 8002dc2:	4620      	mov	r0, r4
 8002dc4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002dc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002dca:	4718      	bx	r3

08002dcc <_ZN8touchgfx6WidgetC1Ev>:
 8002dcc:	2200      	movs	r2, #0
 8002dce:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002dd2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002dd6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002dda:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002dde:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002de2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002de4:	4a01      	ldr	r2, [pc, #4]	; (8002dec <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002de6:	6002      	str	r2, [r0, #0]
 8002de8:	4770      	bx	lr
 8002dea:	bf00      	nop
 8002dec:	08022768 	.word	0x08022768

08002df0 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002df0:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002df2:	2226      	movs	r2, #38	; 0x26
    Box()
 8002df4:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002df6:	2100      	movs	r1, #0
 8002df8:	f01d fd76 	bl	80208e8 <memset>
 8002dfc:	4620      	mov	r0, r4
 8002dfe:	f7ff ffe5 	bl	8002dcc <_ZN8touchgfx6WidgetC1Ev>
 8002e02:	4b04      	ldr	r3, [pc, #16]	; (8002e14 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002e04:	6023      	str	r3, [r4, #0]
 8002e06:	23ff      	movs	r3, #255	; 0xff
 8002e08:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002e0c:	2300      	movs	r3, #0
 8002e0e:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002e10:	4620      	mov	r0, r4
 8002e12:	bd10      	pop	{r4, pc}
 8002e14:	08023df4 	.word	0x08023df4

08002e18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002e18:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002e1a:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002e1c:	4604      	mov	r4, r0
 8002e1e:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002e20:	2100      	movs	r1, #0
 8002e22:	f01d fd61 	bl	80208e8 <memset>
 8002e26:	4620      	mov	r0, r4
 8002e28:	f7ff ffd0 	bl	8002dcc <_ZN8touchgfx6WidgetC1Ev>
 8002e2c:	4b06      	ldr	r3, [pc, #24]	; (8002e48 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002e2e:	6023      	str	r3, [r4, #0]
 8002e30:	882b      	ldrh	r3, [r5, #0]
 8002e32:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002e34:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002e36:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002e38:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002e3c:	4629      	mov	r1, r5
 8002e3e:	f00b fb4f 	bl	800e4e0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002e42:	4620      	mov	r0, r4
 8002e44:	bd38      	pop	{r3, r4, r5, pc}
 8002e46:	bf00      	nop
 8002e48:	08023f38 	.word	0x08023f38

08002e4c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002e4c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e4e:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002e50:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e52:	2100      	movs	r1, #0
 8002e54:	f01d fd48 	bl	80208e8 <memset>
 8002e58:	4620      	mov	r0, r4
 8002e5a:	f7ff ffb7 	bl	8002dcc <_ZN8touchgfx6WidgetC1Ev>
 8002e5e:	4b0a      	ldr	r3, [pc, #40]	; (8002e88 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002e60:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002e62:	4b0a      	ldr	r3, [pc, #40]	; (8002e8c <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002e64:	62a3      	str	r3, [r4, #40]	; 0x28
 8002e66:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e6a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002e6c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002e70:	2300      	movs	r3, #0
 8002e72:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002e76:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002e7a:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e7e:	8723      	strh	r3, [r4, #56]	; 0x38
 8002e80:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002e82:	4620      	mov	r0, r4
 8002e84:	bd10      	pop	{r4, pc}
 8002e86:	bf00      	nop
 8002e88:	08023d64 	.word	0x08023d64
 8002e8c:	08021f58 	.word	0x08021f58

08002e90 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002e90:	4b1b      	ldr	r3, [pc, #108]	; (8002f00 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002e92:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002e94:	881b      	ldrh	r3, [r3, #0]
 8002e96:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002e98:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002e9a:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002e9c:	d92b      	bls.n	8002ef6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002e9e:	4b19      	ldr	r3, [pc, #100]	; (8002f04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	b92b      	cbnz	r3, 8002eb0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002ea4:	4b18      	ldr	r3, [pc, #96]	; (8002f08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002ea6:	4a19      	ldr	r2, [pc, #100]	; (8002f0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002ea8:	4819      	ldr	r0, [pc, #100]	; (8002f10 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002eaa:	216c      	movs	r1, #108	; 0x6c
 8002eac:	f01d fb96 	bl	80205dc <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002eb0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002eb4:	4b17      	ldr	r3, [pc, #92]	; (8002f14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002eb6:	681b      	ldr	r3, [r3, #0]
 8002eb8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002ebc:	4b16      	ldr	r3, [pc, #88]	; (8002f18 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002ebe:	6818      	ldr	r0, [r3, #0]
 8002ec0:	f001 ff90 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002ec4:	682b      	ldr	r3, [r5, #0]
 8002ec6:	9001      	str	r0, [sp, #4]
 8002ec8:	4601      	mov	r1, r0
 8002eca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002ecc:	4628      	mov	r0, r5
 8002ece:	4798      	blx	r3
 8002ed0:	682b      	ldr	r3, [r5, #0]
 8002ed2:	9901      	ldr	r1, [sp, #4]
 8002ed4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ed6:	4604      	mov	r4, r0
 8002ed8:	4628      	mov	r0, r5
 8002eda:	4798      	blx	r3
 8002edc:	682b      	ldr	r3, [r5, #0]
 8002ede:	9901      	ldr	r1, [sp, #4]
 8002ee0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ee2:	fb14 f400 	smulbb	r4, r4, r0
 8002ee6:	4628      	mov	r0, r5
 8002ee8:	4798      	blx	r3
 8002eea:	b2e4      	uxtb	r4, r4
 8002eec:	4404      	add	r4, r0
 8002eee:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002ef2:	b002      	add	sp, #8
 8002ef4:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002ef6:	2300      	movs	r3, #0
 8002ef8:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002efc:	e7f9      	b.n	8002ef2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002efe:	bf00      	nop
 8002f00:	200154e4 	.word	0x200154e4
 8002f04:	200154e0 	.word	0x200154e0
 8002f08:	08022620 	.word	0x08022620
 8002f0c:	08022662 	.word	0x08022662
 8002f10:	0802269d 	.word	0x0802269d
 8002f14:	200154e8 	.word	0x200154e8
 8002f18:	200154ec 	.word	0x200154ec

08002f1c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002f1c:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002f20:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002f22:	4606      	mov	r6, r0
 8002f24:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002f26:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002f2a:	2500      	movs	r5, #0
 8002f2c:	8483      	strh	r3, [r0, #36]	; 0x24
 8002f2e:	4b1d      	ldr	r3, [pc, #116]	; (8002fa4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002f30:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002f32:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002f36:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002f3a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002f3e:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002f42:	6305      	str	r5, [r0, #48]	; 0x30
 8002f44:	f846 3b34 	str.w	r3, [r6], #52
 8002f48:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002f4a:	4630      	mov	r0, r6
 8002f4c:	f7ff ff50 	bl	8002df0 <_ZN8touchgfx3BoxC1Ev>
 8002f50:	4b15      	ldr	r3, [pc, #84]	; (8002fa8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002f52:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002f54:	462a      	mov	r2, r5
        : color(0)
 8002f56:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002f5a:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002f5e:	6625      	str	r5, [r4, #96]	; 0x60
 8002f60:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002f64:	4629      	mov	r1, r5
 8002f66:	4630      	mov	r0, r6
 8002f68:	f7ff fede 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002f6c:	4631      	mov	r1, r6
 8002f6e:	4620      	mov	r0, r4
 8002f70:	f007 fc34 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002f74:	4b0d      	ldr	r3, [pc, #52]	; (8002fac <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002f76:	6023      	str	r3, [r4, #0]
 8002f78:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002f7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002f80:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002f84:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002f88:	a901      	add	r1, sp, #4
 8002f8a:	4628      	mov	r0, r5
 8002f8c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002f90:	f7ff ff42 	bl	8002e18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002f94:	4620      	mov	r0, r4
 8002f96:	4629      	mov	r1, r5
 8002f98:	f007 fc20 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002f9c:	4620      	mov	r0, r4
 8002f9e:	b002      	add	sp, #8
 8002fa0:	bd70      	pop	{r4, r5, r6, pc}
 8002fa2:	bf00      	nop
 8002fa4:	08022860 	.word	0x08022860
 8002fa8:	08023ed0 	.word	0x08023ed0
 8002fac:	080228fc 	.word	0x080228fc

08002fb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002fb0:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002fb2:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002fb4:	9b01      	ldr	r3, [sp, #4]
 8002fb6:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002fb8:	6803      	ldr	r3, [r0, #0]
    }
 8002fba:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002fbe:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8002fc2:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002fc6:	4718      	bx	r3

08002fc8 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fcc:	ed2d 8b0c 	vpush	{d8-d13}
 8002fd0:	4604      	mov	r4, r0
 8002fd2:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002fd4:	f00f fa34 	bl	8012440 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002fd8:	4622      	mov	r2, r4
 8002fda:	2500      	movs	r5, #0
 8002fdc:	4be5      	ldr	r3, [pc, #916]	; (8003374 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8002fde:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002fe0:	f842 3b40 	str.w	r3, [r2], #64
 8002fe4:	4610      	mov	r0, r2
 8002fe6:	ee08 2a10 	vmov	s16, r2
 8002fea:	f7ff ff01 	bl	8002df0 <_ZN8touchgfx3BoxC1Ev>
 8002fee:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002ff2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002ff6:	a90a      	add	r1, sp, #40	; 0x28
 8002ff8:	4618      	mov	r0, r3
 8002ffa:	ee0c 3a10 	vmov	s24, r3
 8002ffe:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003002:	f7ff ff09 	bl	8002e18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003006:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800300a:	a90a      	add	r1, sp, #40	; 0x28
 800300c:	4618      	mov	r0, r3
 800300e:	ee0c 3a90 	vmov	s25, r3
 8003012:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003016:	f7ff feff 	bl	8002e18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800301a:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 800301e:	4618      	mov	r0, r3
 8003020:	ee08 3a90 	vmov	s17, r3
 8003024:	f7ff ff7a 	bl	8002f1c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003028:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 800302c:	4618      	mov	r0, r3
 800302e:	ee09 3a10 	vmov	s18, r3
 8003032:	f7ff ff73 	bl	8002f1c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003036:	f504 7305 	add.w	r3, r4, #532	; 0x214
 800303a:	4618      	mov	r0, r3
 800303c:	ee09 3a90 	vmov	s19, r3
 8003040:	f7ff ff04 	bl	8002e4c <_ZN8touchgfx8TextAreaC1Ev>
 8003044:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 8003048:	4618      	mov	r0, r3
 800304a:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800304e:	4fca      	ldr	r7, [pc, #808]	; (8003378 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8003050:	f7ff fefc 	bl	8002e4c <_ZN8touchgfx8TextAreaC1Ev>
 8003054:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 8003058:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 800305c:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8003060:	4618      	mov	r0, r3
 8003062:	ee0a 3a90 	vmov	s21, r3
 8003066:	f00b fb6d 	bl	800e744 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800306a:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 800306e:	a90a      	add	r1, sp, #40	; 0x28
 8003070:	4618      	mov	r0, r3
 8003072:	ee0d 3a10 	vmov	s26, r3
 8003076:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800307a:	f7ff fecd 	bl	8002e18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800307e:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8003082:	4618      	mov	r0, r3
 8003084:	ee0b 3a10 	vmov	s22, r3
 8003088:	f7ff fee0 	bl	8002e4c <_ZN8touchgfx8TextAreaC1Ev>
 800308c:	f504 7359 	add.w	r3, r4, #868	; 0x364
 8003090:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 8003094:	4618      	mov	r0, r3
 8003096:	ee0b 3a90 	vmov	s23, r3
 800309a:	f7ff fed7 	bl	8002e4c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800309e:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 80030a2:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 80030a6:	4658      	mov	r0, fp
 80030a8:	f7ff fed0 	bl	8002e4c <_ZN8touchgfx8TextAreaC1Ev>
 80030ac:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 80030b0:	a90a      	add	r1, sp, #40	; 0x28
 80030b2:	4618      	mov	r0, r3
 80030b4:	f204 4924 	addw	r9, r4, #1060	; 0x424
 80030b8:	ee0d 3a90 	vmov	s27, r3
 80030bc:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 80030c0:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 80030c4:	f7ff fea8 	bl	8002e18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80030c8:	4648      	mov	r0, r9
 80030ca:	f7ff ff27 	bl	8002f1c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80030ce:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 80030d2:	4640      	mov	r0, r8
 80030d4:	f7ff ff22 	bl	8002f1c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 80030d8:	4650      	mov	r0, sl
 80030da:	f7ff feb7 	bl	8002e4c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80030de:	4ba7      	ldr	r3, [pc, #668]	; (800337c <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 80030e0:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 80030e4:	4ba6      	ldr	r3, [pc, #664]	; (8003380 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 80030e6:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 80030ea:	4ba6      	ldr	r3, [pc, #664]	; (8003384 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 80030ec:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 80030f0:	4ba5      	ldr	r3, [pc, #660]	; (8003388 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 80030f2:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 80030f6:	23f0      	movs	r3, #240	; 0xf0
 80030f8:	462a      	mov	r2, r5
 80030fa:	4629      	mov	r1, r5
 80030fc:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 8003100:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 8003104:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003108:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 800310c:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8003110:	9300      	str	r3, [sp, #0]
 8003112:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 8003116:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800311a:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 800311e:	f7ff fe42 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003122:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003126:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8003128:	462a      	mov	r2, r5
 800312a:	4629      	mov	r1, r5
 800312c:	ee1c 0a10 	vmov	r0, s24
 8003130:	f7ff fdfa 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8003134:	ee1c 0a10 	vmov	r0, s24
 8003138:	a90a      	add	r1, sp, #40	; 0x28
 800313a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800313e:	f00b f9cf 	bl	800e4e0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8003142:	ee1c 0a90 	vmov	r0, s25
 8003146:	2219      	movs	r2, #25
 8003148:	2176      	movs	r1, #118	; 0x76
 800314a:	f7ff fded 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800314e:	aa0a      	add	r2, sp, #40	; 0x28
 8003150:	f04f 0303 	mov.w	r3, #3
 8003154:	4611      	mov	r1, r2
 8003156:	ee1c 0a90 	vmov	r0, s25
 800315a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800315e:	f00b f9bf 	bl	800e4e0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 8003162:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003164:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003166:	4e89      	ldr	r6, [pc, #548]	; (800338c <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8003168:	9300      	str	r3, [sp, #0]
 800316a:	462a      	mov	r2, r5
 800316c:	4629      	mov	r1, r5
 800316e:	232b      	movs	r3, #43	; 0x2b
 8003170:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8003174:	f7ff fe17 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003178:	4b85      	ldr	r3, [pc, #532]	; (8003390 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 800317a:	4a86      	ldr	r2, [pc, #536]	; (8003394 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 800317c:	4986      	ldr	r1, [pc, #536]	; (8003398 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 800317e:	9600      	str	r6, [sp, #0]
 8003180:	ee18 0a90 	vmov	r0, s17
 8003184:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 8003188:	f7ff ff12 	bl	8002fb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 800318c:	ee18 0a90 	vmov	r0, s17
 8003190:	aa0a      	add	r2, sp, #40	; 0x28
 8003192:	a909      	add	r1, sp, #36	; 0x24
 8003194:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8003198:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800319c:	f7ff fdd1 	bl	8002d42 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 80031a0:	2317      	movs	r3, #23
 80031a2:	ee18 0a90 	vmov	r0, s17
 80031a6:	9300      	str	r3, [sp, #0]
 80031a8:	2231      	movs	r2, #49	; 0x31
 80031aa:	232b      	movs	r3, #43	; 0x2b
 80031ac:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 80031b0:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 80031b4:	f7ff fdf7 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 80031b8:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80031bc:	9303      	str	r3, [sp, #12]
        action = &callback;
 80031be:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80031c2:	2317      	movs	r3, #23
 80031c4:	462a      	mov	r2, r5
 80031c6:	4629      	mov	r1, r5
 80031c8:	9300      	str	r3, [sp, #0]
 80031ca:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 80031ce:	232b      	movs	r3, #43	; 0x2b
 80031d0:	f7ff fde9 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80031d4:	4b6e      	ldr	r3, [pc, #440]	; (8003390 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80031d6:	4a6f      	ldr	r2, [pc, #444]	; (8003394 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80031d8:	496f      	ldr	r1, [pc, #444]	; (8003398 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80031da:	9600      	str	r6, [sp, #0]
 80031dc:	ee19 0a10 	vmov	r0, s18
 80031e0:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 80031e4:	f7ff fee4 	bl	8002fb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80031e8:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 80031ec:	a80a      	add	r0, sp, #40	; 0x28
 80031ee:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80031f2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80031f6:	a909      	add	r1, sp, #36	; 0x24
 80031f8:	4602      	mov	r2, r0
 80031fa:	ee19 0a10 	vmov	r0, s18
 80031fe:	f7ff fda0 	bl	8002d42 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003202:	2006      	movs	r0, #6
 8003204:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 8003208:	2017      	movs	r0, #23
 800320a:	232b      	movs	r3, #43	; 0x2b
 800320c:	9000      	str	r0, [sp, #0]
 800320e:	2219      	movs	r2, #25
 8003210:	ee19 0a10 	vmov	r0, s18
 8003214:	f240 1111 	movw	r1, #273	; 0x111
 8003218:	f7ff fdc5 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800321c:	9a03      	ldr	r2, [sp, #12]
 800321e:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 8003222:	ee19 0a90 	vmov	r0, s19
 8003226:	221c      	movs	r2, #28
 8003228:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 800322a:	ae04      	add	r6, sp, #16
 800322c:	f7ff fd7c 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003230:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003234:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8003238:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 800323c:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003240:	4630      	mov	r0, r6
 8003242:	f00a fc3f 	bl	800dac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003246:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800324a:	f504 7314 	add.w	r3, r4, #592	; 0x250
 800324e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003252:	4b52      	ldr	r3, [pc, #328]	; (800339c <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003254:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 8003256:	ee19 0a90 	vmov	r0, s19
 800325a:	2313      	movs	r3, #19
 800325c:	a90a      	add	r1, sp, #40	; 0x28
 800325e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003262:	f00a febf 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 8003266:	2018      	movs	r0, #24
 8003268:	2224      	movs	r2, #36	; 0x24
 800326a:	9000      	str	r0, [sp, #0]
 800326c:	237c      	movs	r3, #124	; 0x7c
 800326e:	ee1a 0a10 	vmov	r0, s20
 8003272:	218f      	movs	r1, #143	; 0x8f
 8003274:	f7ff fd97 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003278:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 800327c:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 8003280:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003284:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003288:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 800328c:	ee1a 1a10 	vmov	r1, s20
 8003290:	4630      	mov	r0, r6
 8003292:	4798      	blx	r3
 8003294:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003298:	f504 7326 	add.w	r3, r4, #664	; 0x298
 800329c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 80032a0:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 80032a4:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 80032a8:	4b3c      	ldr	r3, [pc, #240]	; (800339c <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 80032aa:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80032ae:	ee1a 0a10 	vmov	r0, s20
 80032b2:	930a      	str	r3, [sp, #40]	; 0x28
 80032b4:	a90a      	add	r1, sp, #40	; 0x28
 80032b6:	2312      	movs	r3, #18
 80032b8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80032bc:	f00a fe92 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80032c0:	ee1a 0a90 	vmov	r0, s21
 80032c4:	22b4      	movs	r2, #180	; 0xb4
 80032c6:	214e      	movs	r1, #78	; 0x4e
 80032c8:	f7ff fd2e 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 80032cc:	f04f 0002 	mov.w	r0, #2
 80032d0:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80032d4:	a80a      	add	r0, sp, #40	; 0x28
 80032d6:	4602      	mov	r2, r0
 80032d8:	2301      	movs	r3, #1
 80032da:	a909      	add	r1, sp, #36	; 0x24
 80032dc:	ee1a 0a90 	vmov	r0, s21
 80032e0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80032e4:	f00a fed9 	bl	800e09a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80032e8:	2311      	movs	r3, #17
        updateTextPosition();
 80032ea:	ee1a 0a90 	vmov	r0, s21
 80032ee:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 80032f2:	f7ff fdcd 	bl	8002e90 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 80032f6:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 80032fa:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80032fe:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 8003302:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 8003304:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 8003308:	2176      	movs	r1, #118	; 0x76
 800330a:	ee1d 0a10 	vmov	r0, s26
 800330e:	f7ff fd0b 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 8003312:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003316:	a80a      	add	r0, sp, #40	; 0x28
 8003318:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800331c:	4601      	mov	r1, r0
 800331e:	ee1d 0a10 	vmov	r0, s26
 8003322:	f00b f8dd 	bl	800e4e0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 8003326:	228d      	movs	r2, #141	; 0x8d
 8003328:	ee1b 0a10 	vmov	r0, s22
 800332c:	2129      	movs	r1, #41	; 0x29
 800332e:	f7ff fcfb 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003332:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003336:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800333a:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 800333e:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 8003342:	4630      	mov	r0, r6
 8003344:	f00a fbbe 	bl	800dac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003348:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800334c:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003350:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003354:	4b11      	ldr	r3, [pc, #68]	; (800339c <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003356:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 8003358:	a80a      	add	r0, sp, #40	; 0x28
 800335a:	2310      	movs	r3, #16
 800335c:	4601      	mov	r1, r0
 800335e:	ee1b 0a10 	vmov	r0, s22
 8003362:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003366:	f00a fe3d 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 800336a:	2018      	movs	r0, #24
 800336c:	2293      	movs	r2, #147	; 0x93
 800336e:	9000      	str	r0, [sp, #0]
 8003370:	e016      	b.n	80033a0 <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 8003372:	bf00      	nop
 8003374:	080229cc 	.word	0x080229cc
 8003378:	080227d0 	.word	0x080227d0
 800337c:	0802299c 	.word	0x0802299c
 8003380:	08002cf9 	.word	0x08002cf9
 8003384:	080229b4 	.word	0x080229b4
 8003388:	08002c09 	.word	0x08002c09
 800338c:	ff336699 	.word	0xff336699
 8003390:	ff003366 	.word	0xff003366
 8003394:	ff0099cc 	.word	0xff0099cc
 8003398:	ff006699 	.word	0xff006699
 800339c:	08021f58 	.word	0x08021f58
 80033a0:	237c      	movs	r3, #124	; 0x7c
 80033a2:	ee1b 0a90 	vmov	r0, s23
 80033a6:	218f      	movs	r1, #143	; 0x8f
 80033a8:	f7ff fcfd 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80033ac:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80033b0:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80033b4:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80033b8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80033bc:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80033c0:	ee1b 1a90 	vmov	r1, s23
 80033c4:	4630      	mov	r0, r6
 80033c6:	4798      	blx	r3
 80033c8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80033cc:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80033d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80033d4:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80033d8:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80033dc:	a80a      	add	r0, sp, #40	; 0x28
 80033de:	4b98      	ldr	r3, [pc, #608]	; (8003640 <_ZN15Screen1ViewBaseC1Ev+0x678>)
    txtNapiecieBateriiBuffer[0] = 0;
 80033e0:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80033e4:	4601      	mov	r1, r0
 80033e6:	930a      	str	r3, [sp, #40]	; 0x28
 80033e8:	ee1b 0a90 	vmov	r0, s23
 80033ec:	230f      	movs	r3, #15
 80033ee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80033f2:	f00a fdf7 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 80033f6:	2256      	movs	r2, #86	; 0x56
 80033f8:	2106      	movs	r1, #6
 80033fa:	4658      	mov	r0, fp
 80033fc:	f7ff fc94 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003400:	f04f 30ff 	mov.w	r0, #4294967295
 8003404:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 8003408:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 800340c:	4659      	mov	r1, fp
 800340e:	4630      	mov	r0, r6
 8003410:	f00a fb58 	bl	800dac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003414:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003418:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 800341c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003420:	4b87      	ldr	r3, [pc, #540]	; (8003640 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 8003422:	930a      	str	r3, [sp, #40]	; 0x28
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 8003424:	a80a      	add	r0, sp, #40	; 0x28
 8003426:	2304      	movs	r3, #4
 8003428:	4601      	mov	r1, r0
 800342a:	4658      	mov	r0, fp
 800342c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003430:	f00a fdd8 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 8003434:	2253      	movs	r2, #83	; 0x53
 8003436:	ee1d 0a90 	vmov	r0, s27
 800343a:	2176      	movs	r1, #118	; 0x76
 800343c:	f7ff fc74 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 8003440:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003444:	ee1d 0a90 	vmov	r0, s27
 8003448:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800344c:	a90a      	add	r1, sp, #40	; 0x28
 800344e:	f00b f847 	bl	800e4e0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003452:	2117      	movs	r1, #23
 8003454:	462a      	mov	r2, r5
 8003456:	9100      	str	r1, [sp, #0]
 8003458:	232b      	movs	r3, #43	; 0x2b
 800345a:	4629      	mov	r1, r5
 800345c:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003460:	f7ff fca1 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003464:	4b77      	ldr	r3, [pc, #476]	; (8003644 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 8003466:	9300      	str	r3, [sp, #0]
 8003468:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 800346c:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003470:	4a75      	ldr	r2, [pc, #468]	; (8003648 <_ZN15Screen1ViewBaseC1Ev+0x680>)
 8003472:	4976      	ldr	r1, [pc, #472]	; (800364c <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003474:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 8003478:	4648      	mov	r0, r9
 800347a:	f7ff fd99 	bl	8002fb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 800347e:	a90a      	add	r1, sp, #40	; 0x28
 8003480:	460a      	mov	r2, r1
 8003482:	4648      	mov	r0, r9
 8003484:	a909      	add	r1, sp, #36	; 0x24
 8003486:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800348a:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800348e:	f7ff fc58 	bl	8002d42 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 8003492:	2117      	movs	r1, #23
 8003494:	9100      	str	r1, [sp, #0]
 8003496:	232b      	movs	r3, #43	; 0x2b
 8003498:	2269      	movs	r2, #105	; 0x69
 800349a:	f240 1111 	movw	r1, #273	; 0x111
 800349e:	4648      	mov	r0, r9
 80034a0:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 80034a4:	f7ff fc7f 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80034a8:	9a03      	ldr	r2, [sp, #12]
 80034aa:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 80034ae:	2117      	movs	r1, #23
 80034b0:	462a      	mov	r2, r5
 80034b2:	9100      	str	r1, [sp, #0]
 80034b4:	232b      	movs	r3, #43	; 0x2b
 80034b6:	4629      	mov	r1, r5
 80034b8:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 80034bc:	f7ff fc73 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80034c0:	4b60      	ldr	r3, [pc, #384]	; (8003644 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80034c2:	9300      	str	r3, [sp, #0]
 80034c4:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80034c8:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80034cc:	4a5e      	ldr	r2, [pc, #376]	; (8003648 <_ZN15Screen1ViewBaseC1Ev+0x680>)
 80034ce:	495f      	ldr	r1, [pc, #380]	; (800364c <_ZN15Screen1ViewBaseC1Ev+0x684>)
 80034d0:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 80034d4:	4640      	mov	r0, r8
 80034d6:	f7ff fd6b 	bl	8002fb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80034da:	f04f 0206 	mov.w	r2, #6
 80034de:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80034e2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 80034e6:	a909      	add	r1, sp, #36	; 0x24
 80034e8:	aa0a      	add	r2, sp, #40	; 0x28
 80034ea:	4640      	mov	r0, r8
 80034ec:	f7ff fc29 	bl	8002d42 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80034f0:	2306      	movs	r3, #6
 80034f2:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 80034f6:	2317      	movs	r3, #23
 80034f8:	9300      	str	r3, [sp, #0]
 80034fa:	2251      	movs	r2, #81	; 0x51
 80034fc:	232b      	movs	r3, #43	; 0x2b
 80034fe:	f240 1111 	movw	r1, #273	; 0x111
 8003502:	4640      	mov	r0, r8
 8003504:	f7ff fc4f 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003508:	9b03      	ldr	r3, [sp, #12]
 800350a:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 800350e:	2318      	movs	r3, #24
 8003510:	225d      	movs	r2, #93	; 0x5d
 8003512:	9300      	str	r3, [sp, #0]
 8003514:	218f      	movs	r1, #143	; 0x8f
 8003516:	237c      	movs	r3, #124	; 0x7c
 8003518:	4650      	mov	r0, sl
 800351a:	f7ff fc44 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800351e:	f04f 33ff 	mov.w	r3, #4294967295
 8003522:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 8003526:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 800352a:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 800352e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003532:	4651      	mov	r1, sl
 8003534:	4630      	mov	r0, r6
 8003536:	4798      	blx	r3
 8003538:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800353c:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003540:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003544:	4b42      	ldr	r3, [pc, #264]	; (8003650 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003546:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 8003548:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 800354c:	b92b      	cbnz	r3, 800355a <_ZN15Screen1ViewBaseC1Ev+0x592>
 800354e:	4b41      	ldr	r3, [pc, #260]	; (8003654 <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 8003550:	4a41      	ldr	r2, [pc, #260]	; (8003658 <_ZN15Screen1ViewBaseC1Ev+0x690>)
 8003552:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003554:	4841      	ldr	r0, [pc, #260]	; (800365c <_ZN15Screen1ViewBaseC1Ev+0x694>)
 8003556:	f01d f841 	bl	80205dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800355a:	4b41      	ldr	r3, [pc, #260]	; (8003660 <_ZN15Screen1ViewBaseC1Ev+0x698>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800355c:	881b      	ldrh	r3, [r3, #0]
 800355e:	2b02      	cmp	r3, #2
 8003560:	d803      	bhi.n	800356a <_ZN15Screen1ViewBaseC1Ev+0x5a2>
 8003562:	4b40      	ldr	r3, [pc, #256]	; (8003664 <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 8003564:	4a3c      	ldr	r2, [pc, #240]	; (8003658 <_ZN15Screen1ViewBaseC1Ev+0x690>)
 8003566:	2161      	movs	r1, #97	; 0x61
 8003568:	e7f4      	b.n	8003554 <_ZN15Screen1ViewBaseC1Ev+0x58c>
        return texts->getText(typedTextId);
 800356a:	4b3f      	ldr	r3, [pc, #252]	; (8003668 <_ZN15Screen1ViewBaseC1Ev+0x6a0>)
 800356c:	2102      	movs	r1, #2
 800356e:	6818      	ldr	r0, [r3, #0]
 8003570:	f001 fc38 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 8003574:	4a3d      	ldr	r2, [pc, #244]	; (800366c <_ZN15Screen1ViewBaseC1Ev+0x6a4>)
 8003576:	4603      	mov	r3, r0
 8003578:	2103      	movs	r1, #3
 800357a:	4628      	mov	r0, r5
 800357c:	f010 fc1c 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003580:	4b2f      	ldr	r3, [pc, #188]	; (8003640 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 8003582:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003586:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003588:	1d25      	adds	r5, r4, #4
 800358a:	f04f 0303 	mov.w	r3, #3
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 800358e:	a90a      	add	r1, sp, #40	; 0x28
 8003590:	4650      	mov	r0, sl
 8003592:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003596:	f00a fd25 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800359a:	ee18 1a10 	vmov	r1, s16
 800359e:	4628      	mov	r0, r5
 80035a0:	f007 f91c 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035a4:	ee1c 1a10 	vmov	r1, s24
 80035a8:	4628      	mov	r0, r5
 80035aa:	f007 f917 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035ae:	ee1c 1a90 	vmov	r1, s25
 80035b2:	4628      	mov	r0, r5
 80035b4:	f007 f912 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035b8:	ee18 1a90 	vmov	r1, s17
 80035bc:	4628      	mov	r0, r5
 80035be:	f007 f90d 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035c2:	ee19 1a10 	vmov	r1, s18
 80035c6:	4628      	mov	r0, r5
 80035c8:	f007 f908 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035cc:	ee19 1a90 	vmov	r1, s19
 80035d0:	4628      	mov	r0, r5
 80035d2:	f007 f903 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035d6:	ee1a 1a10 	vmov	r1, s20
 80035da:	4628      	mov	r0, r5
 80035dc:	f007 f8fe 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035e0:	ee1a 1a90 	vmov	r1, s21
 80035e4:	4628      	mov	r0, r5
 80035e6:	f007 f8f9 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035ea:	ee1d 1a10 	vmov	r1, s26
 80035ee:	4628      	mov	r0, r5
 80035f0:	f007 f8f4 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035f4:	ee1b 1a10 	vmov	r1, s22
 80035f8:	4628      	mov	r0, r5
 80035fa:	f007 f8ef 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035fe:	ee1b 1a90 	vmov	r1, s23
 8003602:	4628      	mov	r0, r5
 8003604:	f007 f8ea 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003608:	4659      	mov	r1, fp
 800360a:	4628      	mov	r0, r5
 800360c:	f007 f8e6 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003610:	ee1d 1a90 	vmov	r1, s27
 8003614:	4628      	mov	r0, r5
 8003616:	f007 f8e1 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800361a:	4649      	mov	r1, r9
 800361c:	4628      	mov	r0, r5
 800361e:	f007 f8dd 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003622:	4641      	mov	r1, r8
 8003624:	4628      	mov	r0, r5
 8003626:	f007 f8d9 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800362a:	4628      	mov	r0, r5
 800362c:	4651      	mov	r1, sl
 800362e:	f007 f8d5 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003632:	4620      	mov	r0, r4
 8003634:	b00d      	add	sp, #52	; 0x34
 8003636:	ecbd 8b0c 	vpop	{d8-d13}
 800363a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800363e:	bf00      	nop
 8003640:	08021f58 	.word	0x08021f58
 8003644:	ff336699 	.word	0xff336699
 8003648:	ff0099cc 	.word	0xff0099cc
 800364c:	ff006699 	.word	0xff006699
 8003650:	200154e0 	.word	0x200154e0
 8003654:	08022620 	.word	0x08022620
 8003658:	08022722 	.word	0x08022722
 800365c:	0802269d 	.word	0x0802269d
 8003660:	200154e4 	.word	0x200154e4
 8003664:	080226e4 	.word	0x080226e4
 8003668:	200154ec 	.word	0x200154ec
 800366c:	0802275a 	.word	0x0802275a

08003670 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8003670:	2000      	movs	r0, #0
 8003672:	4770      	bx	lr

08003674 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003674:	888b      	ldrh	r3, [r1, #4]
 8003676:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003678:	2001      	movs	r0, #1
 800367a:	4770      	bx	lr

0800367c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800367c:	4770      	bx	lr

0800367e <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800367e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 8003682:	4770      	bx	lr

08003684 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8003684:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003686:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8003688:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800368a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800368e:	4362      	muls	r2, r4
 8003690:	4361      	muls	r1, r4
    }
 8003692:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003696:	4718      	bx	r3

08003698 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 8003698:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800369c:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800369e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80036a2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80036a6:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80036aa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036b2:	db17      	blt.n	80036e4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80036b4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80036b8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036bc:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036c0:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80036c4:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80036c8:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80036cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036d0:	db1c      	blt.n	800370c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80036d2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036d6:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80036da:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80036de:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80036e2:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80036e4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036e8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80036ec:	ee17 2a10 	vmov	r2, s14
 80036f0:	ee30 0a66 	vsub.f32	s0, s0, s13
 80036f4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80036f8:	ee30 0a26 	vadd.f32	s0, s0, s13
 80036fc:	1e51      	subs	r1, r2, #1
 80036fe:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003702:	ee10 2a10 	vmov	r2, s0
 8003706:	440a      	add	r2, r1
 8003708:	4611      	mov	r1, r2
 800370a:	e7db      	b.n	80036c4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 800370c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003710:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003714:	ee17 2a90 	vmov	r2, s15
 8003718:	ee70 0ac7 	vsub.f32	s1, s1, s14
 800371c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003720:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003724:	3a01      	subs	r2, #1
 8003726:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800372a:	ee10 ca90 	vmov	ip, s1
 800372e:	4494      	add	ip, r2
 8003730:	4662      	mov	r2, ip
 8003732:	e7d6      	b.n	80036e2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003734 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003734:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003736:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003738:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800373a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800373e:	4362      	muls	r2, r4
    }
 8003740:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003744:	4718      	bx	r3

08003746 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003746:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800374a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800374c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003750:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003754:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003758:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800375c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003760:	db08      	blt.n	8003774 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003762:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003766:	ee30 0a27 	vadd.f32	s0, s0, s15
 800376a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800376e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003772:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003774:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003778:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800377c:	ee17 2a90 	vmov	r2, s15
 8003780:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003784:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003788:	ee30 0a07 	vadd.f32	s0, s0, s14
 800378c:	3a01      	subs	r2, #1
 800378e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003792:	ee10 ca10 	vmov	ip, s0
 8003796:	4494      	add	ip, r2
 8003798:	4662      	mov	r2, ip
 800379a:	e7ea      	b.n	8003772 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

0800379c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 800379c:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800379e:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80037a0:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80037a2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80037a6:	4362      	muls	r2, r4
 80037a8:	4361      	muls	r1, r4
    }
 80037aa:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80037ae:	4718      	bx	r3

080037b0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80037b0:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80037b4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80037b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80037ba:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80037be:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80037c2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80037c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037ca:	db17      	blt.n	80037fc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80037cc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80037d0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037d4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80037d8:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80037dc:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80037e0:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80037e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037e8:	db1c      	blt.n	8003824 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 80037ea:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80037ee:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80037f2:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80037f6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80037fa:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80037fc:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003800:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003804:	ee17 2a10 	vmov	r2, s14
 8003808:	ee30 0a66 	vsub.f32	s0, s0, s13
 800380c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003810:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003814:	1e51      	subs	r1, r2, #1
 8003816:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800381a:	ee10 2a10 	vmov	r2, s0
 800381e:	440a      	add	r2, r1
 8003820:	4611      	mov	r1, r2
 8003822:	e7db      	b.n	80037dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003824:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003828:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800382c:	ee17 2a90 	vmov	r2, s15
 8003830:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003834:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003838:	ee70 0a87 	vadd.f32	s1, s1, s14
 800383c:	3a01      	subs	r2, #1
 800383e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003842:	ee10 ca90 	vmov	ip, s1
 8003846:	4494      	add	ip, r2
 8003848:	4662      	mov	r2, ip
 800384a:	e7d6      	b.n	80037fa <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

0800384c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800384c:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800384e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003850:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003852:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003856:	4362      	muls	r2, r4
    }
 8003858:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800385c:	4718      	bx	r3

0800385e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800385e:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003862:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003864:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003868:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 800386c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003870:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003874:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003878:	db08      	blt.n	800388c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800387a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800387e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003882:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003886:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800388a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800388c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003890:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003894:	ee17 2a90 	vmov	r2, s15
 8003898:	ee30 0a47 	vsub.f32	s0, s0, s14
 800389c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80038a0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80038a4:	3a01      	subs	r2, #1
 80038a6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80038aa:	ee10 ca10 	vmov	ip, s0
 80038ae:	4494      	add	ip, r2
 80038b0:	4662      	mov	r2, ip
 80038b2:	e7ea      	b.n	800388a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080038b4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80038b4:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80038b8:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	db07      	blt.n	80038ce <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80038be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80038c2:	fb93 f0f2 	sdiv	r0, r3, r2
 80038c6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038ca:	1040      	asrs	r0, r0, #1
 80038cc:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038ce:	f06f 0001 	mvn.w	r0, #1
 80038d2:	fb00 2003 	mla	r0, r0, r3, r2
 80038d6:	3801      	subs	r0, #1
 80038d8:	fb90 f0f2 	sdiv	r0, r0, r2
 80038dc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038e0:	1040      	asrs	r0, r0, #1
 80038e2:	4240      	negs	r0, r0
    }
 80038e4:	4770      	bx	lr

080038e6 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80038e6:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 80038ea:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80038ee:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 80038f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80038f6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80038fa:	4770      	bx	lr

080038fc <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80038fc:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003900:	4770      	bx	lr

08003902 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8003902:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 8003906:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003908:	2b00      	cmp	r3, #0
 800390a:	db07      	blt.n	800391c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800390c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003910:	fb93 f0f2 	sdiv	r0, r3, r2
 8003914:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003918:	1040      	asrs	r0, r0, #1
 800391a:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800391c:	f06f 0001 	mvn.w	r0, #1
 8003920:	fb00 2003 	mla	r0, r0, r3, r2
 8003924:	3801      	subs	r0, #1
 8003926:	fb90 f0f2 	sdiv	r0, r0, r2
 800392a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800392e:	1040      	asrs	r0, r0, #1
 8003930:	4240      	negs	r0, r0
    }
 8003932:	4770      	bx	lr

08003934 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003934:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003938:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800393c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003940:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003944:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003948:	4770      	bx	lr

0800394a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800394a:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800394e:	4770      	bx	lr

08003950 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003950:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003954:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003956:	2b00      	cmp	r3, #0
 8003958:	db07      	blt.n	800396a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800395a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800395e:	fb93 f0f2 	sdiv	r0, r3, r2
 8003962:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003966:	1040      	asrs	r0, r0, #1
 8003968:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800396a:	f06f 0001 	mvn.w	r0, #1
 800396e:	fb00 2003 	mla	r0, r0, r3, r2
 8003972:	3801      	subs	r0, #1
 8003974:	fb90 f0f2 	sdiv	r0, r0, r2
 8003978:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800397c:	1040      	asrs	r0, r0, #1
 800397e:	4240      	negs	r0, r0
    }
 8003980:	4770      	bx	lr

08003982 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8003982:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003986:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800398a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 800398e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003992:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003996:	4770      	bx	lr

08003998 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8003998:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 800399c:	4770      	bx	lr

0800399e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 800399e:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80039a2:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80039a4:	2b00      	cmp	r3, #0
 80039a6:	db07      	blt.n	80039b8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80039a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80039ac:	fb93 f0f2 	sdiv	r0, r3, r2
 80039b0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039b4:	1040      	asrs	r0, r0, #1
 80039b6:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80039b8:	f06f 0001 	mvn.w	r0, #1
 80039bc:	fb00 2003 	mla	r0, r0, r3, r2
 80039c0:	3801      	subs	r0, #1
 80039c2:	fb90 f0f2 	sdiv	r0, r0, r2
 80039c6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039ca:	1040      	asrs	r0, r0, #1
 80039cc:	4240      	negs	r0, r0
    }
 80039ce:	4770      	bx	lr

080039d0 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80039d0:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80039d4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80039d8:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80039dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80039e0:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80039e4:	4770      	bx	lr

080039e6 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80039e6:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80039ea:	4770      	bx	lr

080039ec <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80039ec:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 80039ee:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 80039f0:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 80039f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 80039f6:	460d      	mov	r5, r1
 80039f8:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 80039fa:	4798      	blx	r3
        setScaleY(scale, updateData);
 80039fc:	6823      	ldr	r3, [r4, #0]
 80039fe:	4632      	mov	r2, r6
 8003a00:	4629      	mov	r1, r5
 8003a02:	4620      	mov	r0, r4
 8003a04:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003a08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003a0c:	4718      	bx	r3

08003a0e <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8003a0e:	6803      	ldr	r3, [r0, #0]
 8003a10:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003a14:	4718      	bx	r3

08003a16 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003a16:	6803      	ldr	r3, [r0, #0]
 8003a18:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003a1c:	4718      	bx	r3

08003a1e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8003a1e:	6803      	ldr	r3, [r0, #0]
 8003a20:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003a24:	4718      	bx	r3

08003a26 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a26:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003a28:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003a2a:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a2c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003a30:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003a32:	db0e      	blt.n	8003a52 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003a34:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003a38:	fb92 f1f4 	sdiv	r1, r2, r4
 8003a3c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003a40:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a42:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003a46:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a4a:	3a01      	subs	r2, #1
 8003a4c:	440a      	add	r2, r1
 8003a4e:	4249      	negs	r1, r1
 8003a50:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003a52:	f06f 0101 	mvn.w	r1, #1
 8003a56:	fb01 4102 	mla	r1, r1, r2, r4
 8003a5a:	3901      	subs	r1, #1
 8003a5c:	fb91 f1f4 	sdiv	r1, r1, r4
 8003a60:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003a64:	1049      	asrs	r1, r1, #1
 8003a66:	4249      	negs	r1, r1
 8003a68:	e7eb      	b.n	8003a42 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08003a6a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8003a6a:	6803      	ldr	r3, [r0, #0]
 8003a6c:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003a70:	4718      	bx	r3

08003a72 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003a72:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003a74:	6803      	ldr	r3, [r0, #0]
 8003a76:	4351      	muls	r1, r2
 8003a78:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003a7c:	4718      	bx	r3

08003a7e <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 8003a7e:	6803      	ldr	r3, [r0, #0]
 8003a80:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003a84:	4718      	bx	r3

08003a86 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003a86:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8003a8a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003a8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003a90:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003a94:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003a98:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003a9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003aa0:	db08      	blt.n	8003ab4 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8003aa2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003aa6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003aaa:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003aae:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003ab2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003ab4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ab8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003abc:	ee17 2a90 	vmov	r2, s15
 8003ac0:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003ac4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003ac8:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003acc:	1e51      	subs	r1, r2, #1
 8003ace:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003ad2:	ee10 2a10 	vmov	r2, s0
 8003ad6:	440a      	add	r2, r1
 8003ad8:	4611      	mov	r1, r2
 8003ada:	e7ea      	b.n	8003ab2 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003adc <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003adc:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003ae0:	4770      	bx	lr

08003ae2 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8003ae2:	6803      	ldr	r3, [r0, #0]
 8003ae4:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003ae8:	4718      	bx	r3

08003aea <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003aea:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003aec:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003aee:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003af2:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003af4:	4798      	blx	r3
        if (i >= 0)
 8003af6:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003af8:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003afa:	db07      	blt.n	8003b0c <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003afc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003b00:	fb90 f0f3 	sdiv	r0, r0, r3
 8003b04:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003b08:	1040      	asrs	r0, r0, #1
    }
 8003b0a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b0c:	f06f 0201 	mvn.w	r2, #1
 8003b10:	fb02 3000 	mla	r0, r2, r0, r3
 8003b14:	3801      	subs	r0, #1
 8003b16:	fb90 f0f3 	sdiv	r0, r0, r3
 8003b1a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003b1e:	1040      	asrs	r0, r0, #1
 8003b20:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003b22:	e7f2      	b.n	8003b0a <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003b24 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003b24:	6803      	ldr	r3, [r0, #0]
 8003b26:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003b2a:	4718      	bx	r3

08003b2c <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003b2c:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003b2e:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003b30:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003b34:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003b36:	4798      	blx	r3
        return (float)i / (float)scale;
 8003b38:	ee07 0a90 	vmov	s15, r0
 8003b3c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003b40:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003b44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003b48:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b4c:	bd10      	pop	{r4, pc}

08003b4e <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003b4e:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003b52:	4770      	bx	lr

08003b54 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003b54:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003b56:	6803      	ldr	r3, [r0, #0]
 8003b58:	4351      	muls	r1, r2
 8003b5a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003b5e:	4718      	bx	r3

08003b60 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003b60:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003b64:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003b66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003b6a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003b6e:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003b72:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003b76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003b7a:	db08      	blt.n	8003b8e <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003b7c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003b80:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003b84:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003b88:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003b8c:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003b8e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003b92:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003b96:	ee17 2a90 	vmov	r2, s15
 8003b9a:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003b9e:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003ba2:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003ba6:	1e51      	subs	r1, r2, #1
 8003ba8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003bac:	ee10 2a10 	vmov	r2, s0
 8003bb0:	440a      	add	r2, r1
 8003bb2:	4611      	mov	r1, r2
 8003bb4:	e7ea      	b.n	8003b8c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003bb6 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003bb6:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003bba:	4770      	bx	lr

08003bbc <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003bbc:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003bbe:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003bc0:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003bc4:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003bc6:	4798      	blx	r3
        if (i >= 0)
 8003bc8:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003bca:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003bcc:	db07      	blt.n	8003bde <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003bce:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003bd2:	fb90 f0f3 	sdiv	r0, r0, r3
 8003bd6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003bda:	1040      	asrs	r0, r0, #1
    }
 8003bdc:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003bde:	f06f 0201 	mvn.w	r2, #1
 8003be2:	fb02 3000 	mla	r0, r2, r0, r3
 8003be6:	3801      	subs	r0, #1
 8003be8:	fb90 f0f3 	sdiv	r0, r0, r3
 8003bec:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003bf0:	1040      	asrs	r0, r0, #1
 8003bf2:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003bf4:	e7f2      	b.n	8003bdc <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003bf6 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003bf6:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003bf8:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003bfa:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003bfe:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003c00:	4798      	blx	r3
        return (float)i / (float)scale;
 8003c02:	ee07 0a90 	vmov	s15, r0
 8003c06:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003c0a:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003c0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003c12:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003c16:	bd10      	pop	{r4, pc}

08003c18 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003c18:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003c1c:	4770      	bx	lr

08003c1e <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c1e:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003c20:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c22:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003c26:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003c28:	b510      	push	{r4, lr}
 8003c2a:	4604      	mov	r4, r0
        if (i >= 0)
 8003c2c:	db0e      	blt.n	8003c4c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003c2e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003c32:	fb91 f1f2 	sdiv	r1, r1, r2
 8003c36:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003c3a:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c3c:	b209      	sxth	r1, r1
 8003c3e:	4620      	mov	r0, r4
 8003c40:	4798      	blx	r3
 8003c42:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003c46:	fb02 3000 	mla	r0, r2, r0, r3
 8003c4a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003c4c:	f06f 0001 	mvn.w	r0, #1
 8003c50:	fb00 2101 	mla	r1, r0, r1, r2
 8003c54:	3901      	subs	r1, #1
 8003c56:	fb91 f1f2 	sdiv	r1, r1, r2
 8003c5a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003c5e:	1049      	asrs	r1, r1, #1
 8003c60:	4249      	negs	r1, r1
 8003c62:	e7eb      	b.n	8003c3c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003c64 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003c64:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003c66:	4770      	bx	lr

08003c68 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003c68:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003c6a:	4770      	bx	lr

08003c6c <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003c6c:	6803      	ldr	r3, [r0, #0]
 8003c6e:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003c72:	4718      	bx	r3

08003c74 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003c74:	6803      	ldr	r3, [r0, #0]
 8003c76:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003c7a:	4718      	bx	r3

08003c7c <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003c7c:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003c7e:	6803      	ldr	r3, [r0, #0]
 8003c80:	4351      	muls	r1, r2
 8003c82:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003c86:	4718      	bx	r3

08003c88 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003c88:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003c8a:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003c8c:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003c90:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003c94:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003c98:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003c9a:	4798      	blx	r3
 8003c9c:	462b      	mov	r3, r5
 8003c9e:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003ca2:	4620      	mov	r0, r4
    }
 8003ca4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003ca8:	4718      	bx	r3

08003caa <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003caa:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003cae:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003cb2:	4293      	cmp	r3, r2
 8003cb4:	db07      	blt.n	8003cc6 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003cb6:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003cba:	4419      	add	r1, r3
 8003cbc:	fb91 f0f2 	sdiv	r0, r1, r2
 8003cc0:	fb02 1110 	mls	r1, r2, r0, r1
 8003cc4:	b209      	sxth	r1, r1
    }
 8003cc6:	4608      	mov	r0, r1
 8003cc8:	4770      	bx	lr

08003cca <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003cca:	0148      	lsls	r0, r1, #5
 8003ccc:	4770      	bx	lr

08003cce <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003cce:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003cd2:	4770      	bx	lr

08003cd4 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003cd4:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003cd8:	4770      	bx	lr

08003cda <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003cda:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003cdc:	2200      	movs	r2, #0
        return rect.width;
 8003cde:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003ce2:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003ce6:	8002      	strh	r2, [r0, #0]
 8003ce8:	8042      	strh	r2, [r0, #2]
 8003cea:	8084      	strh	r4, [r0, #4]
 8003cec:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003cee:	bd10      	pop	{r4, pc}

08003cf0 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003cf0:	2200      	movs	r2, #0
 8003cf2:	8002      	strh	r2, [r0, #0]
 8003cf4:	8042      	strh	r2, [r0, #2]
 8003cf6:	8082      	strh	r2, [r0, #4]
 8003cf8:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003cfa:	4770      	bx	lr

08003cfc <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003cfc:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003cfe:	4770      	bx	lr

08003d00 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003d00:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003d02:	4770      	bx	lr

08003d04 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003d04:	2001      	movs	r0, #1
 8003d06:	4770      	bx	lr

08003d08 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003d08:	4770      	bx	lr

08003d0a <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003d0a:	4770      	bx	lr

08003d0c <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003d0c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003d0e:	b118      	cbz	r0, 8003d18 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003d10:	6803      	ldr	r3, [r0, #0]
 8003d12:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003d16:	4718      	bx	r3
    }
 8003d18:	4770      	bx	lr

08003d1a <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003d1a:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d1c:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003d20:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003d24:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d28:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003d2c:	8044      	strh	r4, [r0, #2]
 8003d2e:	4421      	add	r1, r4
 8003d30:	1a52      	subs	r2, r2, r1
 8003d32:	2100      	movs	r1, #0
 8003d34:	8001      	strh	r1, [r0, #0]
 8003d36:	8085      	strh	r5, [r0, #4]
 8003d38:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003d3a:	bd30      	pop	{r4, r5, pc}

08003d3c <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003d3c:	b510      	push	{r4, lr}
 8003d3e:	8042      	strh	r2, [r0, #2]
 8003d40:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003d44:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003d48:	8004      	strh	r4, [r0, #0]
 8003d4a:	8082      	strh	r2, [r0, #4]
 8003d4c:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003d4e:	bd10      	pop	{r4, pc}

08003d50 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003d50:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003d52:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003d54:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003d58:	4718      	bx	r3

08003d5a <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003d5a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003d5c:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003d5e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003d62:	4718      	bx	r3

08003d64 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003d64:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003d68:	4770      	bx	lr

08003d6a <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003d6a:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003d6e:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003d72:	4403      	add	r3, r0
 8003d74:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003d78:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003d7a:	b200      	sxth	r0, r0
 8003d7c:	4770      	bx	lr

08003d7e <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003d7e:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003d82:	4770      	bx	lr

08003d84 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003d84:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003d88:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003d8c:	4403      	add	r3, r0
 8003d8e:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003d92:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003d94:	b200      	sxth	r0, r0
 8003d96:	4770      	bx	lr

08003d98 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003d98:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003d9a:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003d9c:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003da0:	4611      	mov	r1, r2
 8003da2:	4718      	bx	r3

08003da4 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003da4:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003da8:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003daa:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003dae:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003db0:	186c      	adds	r4, r5, r1
 8003db2:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003db6:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003dba:	80c2      	strh	r2, [r0, #6]
 8003dbc:	1b09      	subs	r1, r1, r4
 8003dbe:	2400      	movs	r4, #0
 8003dc0:	8044      	strh	r4, [r0, #2]
 8003dc2:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003dc4:	bd30      	pop	{r4, r5, pc}

08003dc6 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003dc6:	8002      	strh	r2, [r0, #0]
 8003dc8:	8083      	strh	r3, [r0, #4]
 8003dca:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003dce:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003dd2:	8042      	strh	r2, [r0, #2]
 8003dd4:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003dd6:	4770      	bx	lr

08003dd8 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003dd8:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003dda:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003ddc:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003de0:	4718      	bx	r3

08003de2 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003de2:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003de4:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003de6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003dea:	4718      	bx	r3

08003dec <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003dec:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003df0:	4770      	bx	lr

08003df2 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003df2:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003df6:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003dfa:	4403      	add	r3, r0
 8003dfc:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003e00:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003e02:	b200      	sxth	r0, r0
 8003e04:	4770      	bx	lr

08003e06 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003e06:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003e0a:	4770      	bx	lr

08003e0c <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003e0c:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003e10:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003e14:	4403      	add	r3, r0
 8003e16:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003e1a:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003e1c:	b200      	sxth	r0, r0
 8003e1e:	4770      	bx	lr

08003e20 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003e20:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003e22:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003e24:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003e28:	4611      	mov	r1, r2
 8003e2a:	4718      	bx	r3

08003e2c <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003e2c:	4770      	bx	lr

08003e2e <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003e2e:	4770      	bx	lr

08003e30 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003e30:	4770      	bx	lr

08003e32 <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003e32:	4770      	bx	lr

08003e34 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003e34:	4770      	bx	lr

08003e36 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003e36:	4770      	bx	lr

08003e38 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003e38:	4770      	bx	lr

08003e3a <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003e3a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e3c:	68c2      	ldr	r2, [r0, #12]
 8003e3e:	6844      	ldr	r4, [r0, #4]
 8003e40:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003e42:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003e44:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003e48:	07d2      	lsls	r2, r2, #31
 8003e4a:	bf48      	it	mi
 8003e4c:	5962      	ldrmi	r2, [r4, r5]
 8003e4e:	689b      	ldr	r3, [r3, #8]
    }
 8003e50:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e52:	bf48      	it	mi
 8003e54:	58d3      	ldrmi	r3, [r2, r3]
 8003e56:	4718      	bx	r3

08003e58 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003e58:	6843      	ldr	r3, [r0, #4]
 8003e5a:	b12b      	cbz	r3, 8003e68 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003e5c:	6883      	ldr	r3, [r0, #8]
 8003e5e:	b92b      	cbnz	r3, 8003e6c <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003e60:	68c0      	ldr	r0, [r0, #12]
 8003e62:	f000 0001 	and.w	r0, r0, #1
 8003e66:	4770      	bx	lr
 8003e68:	4618      	mov	r0, r3
 8003e6a:	4770      	bx	lr
 8003e6c:	2001      	movs	r0, #1
    }
 8003e6e:	4770      	bx	lr

08003e70 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003e70:	b510      	push	{r4, lr}
 8003e72:	2140      	movs	r1, #64	; 0x40
 8003e74:	4604      	mov	r4, r0
 8003e76:	f01c fafd 	bl	8020474 <_ZdlPvj>
 8003e7a:	4620      	mov	r0, r4
 8003e7c:	bd10      	pop	{r4, pc}

08003e7e <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003e7e:	b510      	push	{r4, lr}
 8003e80:	2140      	movs	r1, #64	; 0x40
 8003e82:	4604      	mov	r4, r0
 8003e84:	f01c faf6 	bl	8020474 <_ZdlPvj>
 8003e88:	4620      	mov	r0, r4
 8003e8a:	bd10      	pop	{r4, pc}

08003e8c <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003e8c:	b510      	push	{r4, lr}
 8003e8e:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003e92:	4604      	mov	r4, r0
 8003e94:	f01c faee 	bl	8020474 <_ZdlPvj>
 8003e98:	4620      	mov	r0, r4
 8003e9a:	bd10      	pop	{r4, pc}

08003e9c <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003e9c:	b510      	push	{r4, lr}
 8003e9e:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003ea2:	4604      	mov	r4, r0
 8003ea4:	f01c fae6 	bl	8020474 <_ZdlPvj>
 8003ea8:	4620      	mov	r0, r4
 8003eaa:	bd10      	pop	{r4, pc}

08003eac <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003eac:	b510      	push	{r4, lr}
 8003eae:	2110      	movs	r1, #16
 8003eb0:	4604      	mov	r4, r0
 8003eb2:	f01c fadf 	bl	8020474 <_ZdlPvj>
 8003eb6:	4620      	mov	r0, r4
 8003eb8:	bd10      	pop	{r4, pc}

08003eba <_ZN19ScreenGraphViewBaseD0Ev>:
 8003eba:	b510      	push	{r4, lr}
 8003ebc:	f242 6118 	movw	r1, #9752	; 0x2618
 8003ec0:	4604      	mov	r4, r0
 8003ec2:	f01c fad7 	bl	8020474 <_ZdlPvj>
 8003ec6:	4620      	mov	r0, r4
 8003ec8:	bd10      	pop	{r4, pc}

08003eca <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003eca:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003ece:	b10b      	cbz	r3, 8003ed4 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003ed0:	f006 bcbd 	b.w	800a84e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003ed4:	4770      	bx	lr

08003ed6 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003ed6:	b513      	push	{r0, r1, r4, lr}
 8003ed8:	4603      	mov	r3, r0
 8003eda:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003edc:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003ee0:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003ee2:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003ee4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003ee8:	4798      	blx	r3
 8003eea:	9901      	ldr	r1, [sp, #4]
 8003eec:	4602      	mov	r2, r0
 8003eee:	4620      	mov	r0, r4
    }
 8003ef0:	b002      	add	sp, #8
 8003ef2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003ef6:	f008 baf3 	b.w	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003efa <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003efa:	b513      	push	{r0, r1, r4, lr}
 8003efc:	4603      	mov	r3, r0
 8003efe:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003f00:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003f04:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003f06:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003f08:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003f0c:	4798      	blx	r3
 8003f0e:	9901      	ldr	r1, [sp, #4]
 8003f10:	4602      	mov	r2, r0
 8003f12:	4620      	mov	r0, r4
    }
 8003f14:	b002      	add	sp, #8
 8003f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003f1a:	f008 bae1 	b.w	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003f20 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003f20:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003f22:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003f24:	db03      	blt.n	8003f2e <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003f26:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003f2a:	4294      	cmp	r4, r2
 8003f2c:	dc06      	bgt.n	8003f3c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003f2e:	4b08      	ldr	r3, [pc, #32]	; (8003f50 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003f30:	4a08      	ldr	r2, [pc, #32]	; (8003f54 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003f32:	4809      	ldr	r0, [pc, #36]	; (8003f58 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003f34:	f240 6133 	movw	r1, #1587	; 0x633
 8003f38:	f01c fb50 	bl	80205dc <__assert_func>
        return yValues[dataIndex(index)];
 8003f3c:	6803      	ldr	r3, [r0, #0]
 8003f3e:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003f42:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003f46:	4798      	blx	r3
    }
 8003f48:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003f4c:	bd10      	pop	{r4, pc}
 8003f4e:	bf00      	nop
 8003f50:	08022a0c 	.word	0x08022a0c
 8003f54:	08022a2f 	.word	0x08022a2f
 8003f58:	08022a7e 	.word	0x08022a7e

08003f5c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003f5c:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003f5e:	b510      	push	{r4, lr}
 8003f60:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003f62:	db03      	blt.n	8003f6c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003f64:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003f68:	429a      	cmp	r2, r3
 8003f6a:	dc06      	bgt.n	8003f7a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003f6c:	4b07      	ldr	r3, [pc, #28]	; (8003f8c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003f6e:	4a08      	ldr	r2, [pc, #32]	; (8003f90 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003f70:	4808      	ldr	r0, [pc, #32]	; (8003f94 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003f72:	f240 612d 	movw	r1, #1581	; 0x62d
 8003f76:	f01c fb31 	bl	80205dc <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003f7a:	6803      	ldr	r3, [r0, #0]
 8003f7c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003f80:	4798      	blx	r3
 8003f82:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003f86:	fb02 3000 	mla	r0, r2, r0, r3
 8003f8a:	bd10      	pop	{r4, pc}
 8003f8c:	08022a0c 	.word	0x08022a0c
 8003f90:	08022adb 	.word	0x08022adb
 8003f94:	08022a7e 	.word	0x08022a7e

08003f98 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003f98:	f100 03cc 	add.w	r3, r0, #204	; 0xcc
 8003f9c:	4299      	cmp	r1, r3
{
 8003f9e:	b510      	push	{r4, lr}
 8003fa0:	4604      	mov	r4, r0
    if (&src == &button1)
 8003fa2:	d105      	bne.n	8003fb0 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
     */
    virtual void action1();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003fa4:	f00c ff4a 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
        dynamicGraph1.invalidate();
        dynamicGraph2.invalidate();
    }
}
 8003fa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003fac:	f7fe bb4c 	b.w	8002648 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
    else if (&src == &toggleButton1)
 8003fb0:	f500 538a 	add.w	r3, r0, #4416	; 0x1140
 8003fb4:	331c      	adds	r3, #28
 8003fb6:	4299      	cmp	r1, r3
 8003fb8:	d115      	bne.n	8003fe6 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4e>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003fba:	f890 3db1 	ldrb.w	r3, [r0, #3505]	; 0xdb1
 8003fbe:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003fc2:	f880 3db1 	strb.w	r3, [r0, #3505]	; 0xdb1
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003fc6:	f890 3125 	ldrb.w	r3, [r0, #293]	; 0x125
 8003fca:	f083 0301 	eor.w	r3, r3, #1
 8003fce:	f880 3125 	strb.w	r3, [r0, #293]	; 0x125
        dynamicGraph1.invalidate();
 8003fd2:	f600 508c 	addw	r0, r0, #3468	; 0xd8c
 8003fd6:	f00d fec8 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003fda:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 8003fde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dynamicGraph2.invalidate();
 8003fe2:	f00d bec2 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8003fe6:	bd10      	pop	{r4, pc}

08003fe8 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8003fe8:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8003fea:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8003fec:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8003fee:	2100      	movs	r1, #0
 8003ff0:	f01c fc7a 	bl	80208e8 <memset>
 8003ff4:	4620      	mov	r0, r4
 8003ff6:	f7fe fee9 	bl	8002dcc <_ZN8touchgfx6WidgetC1Ev>
 8003ffa:	4b05      	ldr	r3, [pc, #20]	; (8004010 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8003ffc:	6023      	str	r3, [r4, #0]
 8003ffe:	2300      	movs	r3, #0
 8004000:	62a3      	str	r3, [r4, #40]	; 0x28
 8004002:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8004006:	2301      	movs	r3, #1
 8004008:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 800400c:	4620      	mov	r0, r4
 800400e:	bd10      	pop	{r4, pc}
 8004010:	08023c80 	.word	0x08023c80

08004014 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8004014:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8004016:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8004018:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 800401a:	f00e f848 	bl	80120ae <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 800401e:	2800      	cmp	r0, #0
 8004020:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004024:	9901      	ldr	r1, [sp, #4]
 8004026:	462a      	mov	r2, r5
 8004028:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 800402c:	db04      	blt.n	8004038 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800402e:	f00e f85d 	bl	80120ec <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8004032:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8004034:	b003      	add	sp, #12
 8004036:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004038:	f00e f858 	bl	80120ec <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 800403c:	1a20      	subs	r0, r4, r0
 800403e:	e7f9      	b.n	8004034 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08004040 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8004040:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8004042:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8004046:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 800404a:	1963      	adds	r3, r4, r5
 800404c:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8004050:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8004052:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8004056:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8004058:	b22d      	sxth	r5, r5
 800405a:	1ad2      	subs	r2, r2, r3
 800405c:	1e69      	subs	r1, r5, #1
 800405e:	1af0      	subs	r0, r6, r3
 8004060:	f7ff ffd8 	bl	8004014 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8004064:	442c      	add	r4, r5
 8004066:	3c01      	subs	r4, #1
    }
 8004068:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 800406c:	bd70      	pop	{r4, r5, r6, pc}

0800406e <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 800406e:	b538      	push	{r3, r4, r5, lr}
 8004070:	4604      	mov	r4, r0
 8004072:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8004074:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8004078:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 800407c:	440b      	add	r3, r1
 800407e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8004082:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8004086:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8004088:	b209      	sxth	r1, r1
 800408a:	1b52      	subs	r2, r2, r5
 800408c:	3901      	subs	r1, #1
 800408e:	1b40      	subs	r0, r0, r5
 8004090:	f7ff ffc0 	bl	8004014 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8004094:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8004098:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 800409c:	bd38      	pop	{r3, r4, r5, pc}
	...

080040a0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 80040a0:	b510      	push	{r4, lr}
 80040a2:	4604      	mov	r4, r0
        : CanvasWidget()
 80040a4:	f007 fe04 	bl	800bcb0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 80040a8:	4a06      	ldr	r2, [pc, #24]	; (80040c4 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 80040aa:	6022      	str	r2, [r4, #0]
        : color(col)
 80040ac:	2300      	movs	r3, #0
 80040ae:	2201      	movs	r2, #1
 80040b0:	210a      	movs	r1, #10
 80040b2:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 80040b6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80040b8:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 80040bc:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80040be:	4620      	mov	r0, r4
 80040c0:	bd10      	pop	{r4, pc}
 80040c2:	bf00      	nop
 80040c4:	080239e8 	.word	0x080239e8

080040c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80040c8:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80040ca:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80040cc:	4e12      	ldr	r6, [pc, #72]	; (8004118 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80040ce:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80040d0:	4b12      	ldr	r3, [pc, #72]	; (800411c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80040d2:	6003      	str	r3, [r0, #0]
 80040d4:	6833      	ldr	r3, [r6, #0]
 80040d6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 80040da:	4605      	mov	r5, r0
 80040dc:	b10a      	cbz	r2, 80040e2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80040de:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80040e0:	b900      	cbnz	r0, 80040e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80040e2:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80040e4:	6803      	ldr	r3, [r0, #0]
 80040e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040e8:	4798      	blx	r3
        return auxiliaryLCD;
 80040ea:	6833      	ldr	r3, [r6, #0]
 80040ec:	fab0 f480 	clz	r4, r0
 80040f0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80040f2:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80040f4:	b130      	cbz	r0, 8004104 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80040f6:	6803      	ldr	r3, [r0, #0]
 80040f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040fa:	4798      	blx	r3
 80040fc:	2800      	cmp	r0, #0
 80040fe:	bf08      	it	eq
 8004100:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8004104:	b92c      	cbnz	r4, 8004112 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8004106:	4b06      	ldr	r3, [pc, #24]	; (8004120 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8004108:	4a06      	ldr	r2, [pc, #24]	; (8004124 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800410a:	4807      	ldr	r0, [pc, #28]	; (8004128 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800410c:	212c      	movs	r1, #44	; 0x2c
 800410e:	f01c fa65 	bl	80205dc <__assert_func>
    }
 8004112:	4628      	mov	r0, r5
 8004114:	bd70      	pop	{r4, r5, r6, pc}
 8004116:	bf00      	nop
 8004118:	20015488 	.word	0x20015488
 800411c:	08022d9c 	.word	0x08022d9c
 8004120:	08022b2a 	.word	0x08022b2a
 8004124:	08022b88 	.word	0x08022b88
 8004128:	08022bc1 	.word	0x08022bc1

0800412c <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 800412c:	b510      	push	{r4, lr}
 800412e:	4604      	mov	r4, r0
        : CanvasWidget()
 8004130:	f007 fdbe 	bl	800bcb0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8004134:	4a0a      	ldr	r2, [pc, #40]	; (8004160 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8004136:	6022      	str	r2, [r4, #0]
 8004138:	2300      	movs	r3, #0
 800413a:	2201      	movs	r2, #1
 800413c:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8004140:	4a08      	ldr	r2, [pc, #32]	; (8004164 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8004142:	63a2      	str	r2, [r4, #56]	; 0x38
 8004144:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004148:	87a2      	strh	r2, [r4, #60]	; 0x3c
 800414a:	222e      	movs	r2, #46	; 0x2e
 800414c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800414e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8004152:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8004156:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 800415a:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 800415c:	4620      	mov	r0, r4
 800415e:	bd10      	pop	{r4, pc}
 8004160:	08023be0 	.word	0x08023be0
 8004164:	08021f58 	.word	0x08021f58

08004168 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8004168:	b510      	push	{r4, lr}
 800416a:	4604      	mov	r4, r0
        : TextArea()
 800416c:	f7fe fe6e 	bl	8002e4c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004170:	4b02      	ldr	r3, [pc, #8]	; (800417c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8004172:	6023      	str	r3, [r4, #0]
 8004174:	2300      	movs	r3, #0
 8004176:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8004178:	4620      	mov	r0, r4
 800417a:	bd10      	pop	{r4, pc}
 800417c:	080227d0 	.word	0x080227d0

08004180 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8004180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004184:	ed2d 8b10 	vpush	{d8-d15}
 8004188:	4604      	mov	r4, r0
 800418a:	b095      	sub	sp, #84	; 0x54
 800418c:	f00e f958 	bl	8012440 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8004190:	4622      	mov	r2, r4
 8004192:	2600      	movs	r6, #0
 8004194:	4be9      	ldr	r3, [pc, #932]	; (800453c <_ZN19ScreenGraphViewBaseC1Ev+0x3bc>)
 8004196:	63e6      	str	r6, [r4, #60]	; 0x3c
 8004198:	f842 3b40 	str.w	r3, [r2], #64
 800419c:	4610      	mov	r0, r2
 800419e:	ee0b 2a10 	vmov	s22, r2
 80041a2:	f7fe fe25 	bl	8002df0 <_ZN8touchgfx3BoxC1Ev>
 80041a6:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80041aa:	ee09 3a10 	vmov	s18, r3
 80041ae:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80041b2:	2226      	movs	r2, #38	; 0x26
 80041b4:	4631      	mov	r1, r6
 80041b6:	4618      	mov	r0, r3
 80041b8:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
 80041bc:	f01c fb94 	bl	80208e8 <memset>
 80041c0:	ee19 0a10 	vmov	r0, s18
 80041c4:	f7fe fe02 	bl	8002dcc <_ZN8touchgfx6WidgetC1Ev>
 80041c8:	4bdd      	ldr	r3, [pc, #884]	; (8004540 <_ZN19ScreenGraphViewBaseC1Ev+0x3c0>)
 80041ca:	66e3      	str	r3, [r4, #108]	; 0x6c
 80041cc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80041d0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80041d4:	a912      	add	r1, sp, #72	; 0x48
 80041d6:	ee19 0a10 	vmov	r0, s18
        : Widget(), bitmap(bmp), alpha(255)
 80041da:	f884 9094 	strb.w	r9, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80041de:	f00a f97f 	bl	800e4e0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80041e2:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 80041e6:	4618      	mov	r0, r3
 80041e8:	ee0c 3a90 	vmov	s25, r3
 80041ec:	f7fe fe00 	bl	8002df0 <_ZN8touchgfx3BoxC1Ev>
 80041f0:	4bd4      	ldr	r3, [pc, #848]	; (8004544 <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 80041f2:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80041f6:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80041fa:	4618      	mov	r0, r3
 80041fc:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 8004200:	f8a4 60c8 	strh.w	r6, [r4, #200]	; 0xc8
 8004204:	f504 7780 	add.w	r7, r4, #256	; 0x100
 8004208:	ee0b 3a90 	vmov	s23, r3
 800420c:	f7ff feec 	bl	8003fe8 <_ZN8touchgfx14AbstractButtonC1Ev>
 8004210:	4bcd      	ldr	r3, [pc, #820]	; (8004548 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 8004212:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8004216:	f8a4 90fa 	strh.w	r9, [r4, #250]	; 0xfa
 800421a:	f8a4 90fc 	strh.w	r9, [r4, #252]	; 0xfc
 800421e:	f884 90fe 	strb.w	r9, [r4, #254]	; 0xfe
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004222:	f44f 7116 	mov.w	r1, #600	; 0x258
 8004226:	4638      	mov	r0, r7
 8004228:	f008 f8f6 	bl	800c418 <_ZN8touchgfx17AbstractDataGraphC1Es>
 800422c:	2301      	movs	r3, #1
 800422e:	4dc7      	ldr	r5, [pc, #796]	; (800454c <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8004230:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8004234:	e9c4 368f 	strd	r3, r6, [r4, #572]	; 0x23c
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8004238:	f504 7314 	add.w	r3, r4, #592	; 0x250
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800423c:	4631      	mov	r1, r6
 800423e:	f240 2257 	movw	r2, #599	; 0x257
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004242:	e9c4 3691 	strd	r3, r6, [r4, #580]	; 0x244
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004246:	4638      	mov	r0, r7
 8004248:	f7ff fa1c 	bl	8003684 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 800424c:	4bc0      	ldr	r3, [pc, #768]	; (8004550 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 800424e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004252:	f504 633b 	add.w	r3, r4, #2992	; 0xbb0
 8004256:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8004258:	f8a4 624c 	strh.w	r6, [r4, #588]	; 0x24c
 800425c:	ee0e 3a10 	vmov	s28, r3
 8004260:	f007 fd26 	bl	800bcb0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8004264:	f04f 0202 	mov.w	r2, #2
 8004268:	4bba      	ldr	r3, [pc, #744]	; (8004554 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 800426a:	f884 2bdc 	strb.w	r2, [r4, #3036]	; 0xbdc
 800426e:	f504 623e 	add.w	r2, r4, #3040	; 0xbe0
 8004272:	f8c4 3bb0 	str.w	r3, [r4, #2992]	; 0xbb0
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004276:	4610      	mov	r0, r2
 8004278:	9208      	str	r2, [sp, #32]
 800427a:	f7ff ff25 	bl	80040c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800427e:	4bb6      	ldr	r3, [pc, #728]	; (8004558 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8004280:	f8c4 3be0 	str.w	r3, [r4, #3040]	; 0xbe0
 8004284:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004288:	f604 31f4 	addw	r1, r4, #3060	; 0xbf4
 800428c:	f8c4 2be8 	str.w	r2, [r4, #3048]	; 0xbe8
class GraphElementGridX : public GraphElementGridBase
 8004290:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8004292:	f8c4 6bec 	str.w	r6, [r4, #3052]	; 0xbec
 8004296:	f8df b2dc 	ldr.w	fp, [pc, #732]	; 8004574 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>
class GraphElementGridY : public GraphElementGridBase
 800429a:	f8df a2dc 	ldr.w	sl, [pc, #732]	; 8004578 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 800429e:	ee0e 1a90 	vmov	s29, r1
class GraphElementGridX : public GraphElementGridBase
 80042a2:	f7ff fefd 	bl	80040a0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042a6:	f604 4134 	addw	r1, r4, #3124	; 0xc34
 80042aa:	f8c4 bbf4 	str.w	fp, [r4, #3060]	; 0xbf4
class GraphElementGridY : public GraphElementGridBase
 80042ae:	4608      	mov	r0, r1
 80042b0:	ee0f 1a10 	vmov	s30, r1
 80042b4:	f7ff fef4 	bl	80040a0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042b8:	f604 4174 	addw	r1, r4, #3188	; 0xc74
 80042bc:	f8c4 ac34 	str.w	sl, [r4, #3124]	; 0xc34
class GraphElementGridX : public GraphElementGridBase
 80042c0:	4608      	mov	r0, r1
 80042c2:	ee0d 1a10 	vmov	s26, r1
 80042c6:	f7ff feeb 	bl	80040a0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042ca:	f604 41b4 	addw	r1, r4, #3252	; 0xcb4
 80042ce:	f8c4 bc74 	str.w	fp, [r4, #3188]	; 0xc74
class GraphElementGridY : public GraphElementGridBase
 80042d2:	4608      	mov	r0, r1
 80042d4:	ee0d 1a90 	vmov	s27, r1
 80042d8:	f7ff fee2 	bl	80040a0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042dc:	f604 41f4 	addw	r1, r4, #3316	; 0xcf4
 80042e0:	f8c4 acb4 	str.w	sl, [r4, #3252]	; 0xcb4

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 80042e4:	4608      	mov	r0, r1
 80042e6:	ee0f 1a90 	vmov	s31, r1
 80042ea:	f7ff ff1f 	bl	800412c <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80042ee:	4a9b      	ldr	r2, [pc, #620]	; (800455c <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 80042f0:	f8c4 2cf4 	str.w	r2, [r4, #3316]	; 0xcf4
 80042f4:	f504 6154 	add.w	r1, r4, #3392	; 0xd40

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 80042f8:	4608      	mov	r0, r1
 80042fa:	f604 588c 	addw	r8, r4, #3468	; 0xd8c
 80042fe:	9109      	str	r1, [sp, #36]	; 0x24
 8004300:	f7ff ff14 	bl	800412c <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8004304:	4996      	ldr	r1, [pc, #600]	; (8004560 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8004306:	f8c4 1d40 	str.w	r1, [r4, #3392]	; 0xd40
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800430a:	4640      	mov	r0, r8
 800430c:	213c      	movs	r1, #60	; 0x3c
 800430e:	f008 f883 	bl	800c418 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004312:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 8004314:	f604 62dc 	addw	r2, r4, #3804	; 0xedc
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004318:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800431a:	f8c4 5d8c 	str.w	r5, [r4, #3468]	; 0xd8c
 800431e:	f8c4 0ec8 	str.w	r0, [r4, #3784]	; 0xec8
 8004322:	f8c4 2ed0 	str.w	r2, [r4, #3792]	; 0xed0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004326:	4640      	mov	r0, r8
 8004328:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800432a:	f8c4 6ecc 	str.w	r6, [r4, #3788]	; 0xecc
 800432e:	f8c4 6ed4 	str.w	r6, [r4, #3796]	; 0xed4
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004332:	f7ff f9a7 	bl	8003684 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004336:	4a8b      	ldr	r2, [pc, #556]	; (8004564 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 8004338:	f8c4 2d8c 	str.w	r2, [r4, #3468]	; 0xd8c
 800433c:	f604 70cc 	addw	r0, r4, #4044	; 0xfcc
        : DynamicDataGraph(capacity, values), current(0)
 8004340:	f8a4 6ed8 	strh.w	r6, [r4, #3800]	; 0xed8
 8004344:	900a      	str	r0, [sp, #40]	; 0x28
        : CanvasWidget()
 8004346:	f007 fcb3 	bl	800bcb0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 800434a:	4b82      	ldr	r3, [pc, #520]	; (8004554 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 800434c:	f8c4 3fcc 	str.w	r3, [r4, #4044]	; 0xfcc
 8004350:	f04f 0302 	mov.w	r3, #2
 8004354:	f884 3ff8 	strb.w	r3, [r4, #4088]	; 0xff8
 8004358:	f604 73fc 	addw	r3, r4, #4092	; 0xffc
 800435c:	4618      	mov	r0, r3
 800435e:	f504 5580 	add.w	r5, r4, #4096	; 0x1000
 8004362:	930b      	str	r3, [sp, #44]	; 0x2c
 8004364:	f7ff feb0 	bl	80040c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004368:	4b7b      	ldr	r3, [pc, #492]	; (8004558 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 800436a:	60ae      	str	r6, [r5, #8]
 800436c:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004370:	f8c4 3ffc 	str.w	r3, [r4, #4092]	; 0xffc
 8004374:	462b      	mov	r3, r5
 8004376:	3310      	adds	r3, #16
 8004378:	606a      	str	r2, [r5, #4]
class GraphElementGridX : public GraphElementGridBase
 800437a:	4618      	mov	r0, r3
 800437c:	9304      	str	r3, [sp, #16]
 800437e:	f7ff fe8f 	bl	80040a0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004382:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8004386:	3310      	adds	r3, #16
 8004388:	f8c5 b010 	str.w	fp, [r5, #16]
class GraphElementGridY : public GraphElementGridBase
 800438c:	4618      	mov	r0, r3
 800438e:	9305      	str	r3, [sp, #20]
 8004390:	f7ff fe86 	bl	80040a0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004394:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 8004398:	3310      	adds	r3, #16
class GraphElementGridX : public GraphElementGridBase
 800439a:	4618      	mov	r0, r3
class GraphElementGridY : public GraphElementGridBase
 800439c:	f8c5 a050 	str.w	sl, [r5, #80]	; 0x50
 80043a0:	9303      	str	r3, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 80043a2:	f7ff fe7d 	bl	80040a0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80043a6:	f8c5 b090 	str.w	fp, [r5, #144]	; 0x90
 80043aa:	f504 5b86 	add.w	fp, r4, #4288	; 0x10c0
 80043ae:	f10b 0b10 	add.w	fp, fp, #16
class GraphElementGridY : public GraphElementGridBase
 80043b2:	4658      	mov	r0, fp
 80043b4:	f7ff fe74 	bl	80040a0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80043b8:	f504 5388 	add.w	r3, r4, #4352	; 0x1100
 80043bc:	3310      	adds	r3, #16
 80043be:	f8c5 a0d0 	str.w	sl, [r5, #208]	; 0xd0
 80043c2:	4618      	mov	r0, r3
 80043c4:	9306      	str	r3, [sp, #24]
 80043c6:	f7ff feb1 	bl	800412c <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80043ca:	f504 538a 	add.w	r3, r4, #4416	; 0x1140
 80043ce:	4964      	ldr	r1, [pc, #400]	; (8004560 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80043d0:	f8c5 1110 	str.w	r1, [r5, #272]	; 0x110
 80043d4:	331c      	adds	r3, #28
 80043d6:	4618      	mov	r0, r3
 80043d8:	ee09 3a90 	vmov	s19, r3
 80043dc:	f7ff fe04 	bl	8003fe8 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80043e0:	4b61      	ldr	r3, [pc, #388]	; (8004568 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 80043e2:	f8c5 315c 	str.w	r3, [r5, #348]	; 0x15c
 80043e6:	f504 538c 	add.w	r3, r4, #4480	; 0x1180
 80043ea:	3314      	adds	r3, #20
 80043ec:	f8a5 918a 	strh.w	r9, [r5, #394]	; 0x18a
 80043f0:	f8a5 918c 	strh.w	r9, [r5, #396]	; 0x18c
 80043f4:	f885 918e 	strb.w	r9, [r5, #398]	; 0x18e
 80043f8:	f8a5 9190 	strh.w	r9, [r5, #400]	; 0x190
 80043fc:	4618      	mov	r0, r3
 80043fe:	ee08 3a10 	vmov	s16, r3
 8004402:	f7fe fd23 	bl	8002e4c <_ZN8touchgfx8TextAreaC1Ev>
 8004406:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 800440a:	331c      	adds	r3, #28
 800440c:	4618      	mov	r0, r3
 800440e:	ee08 3a90 	vmov	s17, r3
 8004412:	f7ff fea9 	bl	8004168 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004416:	f504 5391 	add.w	r3, r4, #4640	; 0x1220
 800441a:	3308      	adds	r3, #8
 800441c:	4618      	mov	r0, r3
 800441e:	ee0a 3a10 	vmov	s20, r3
 8004422:	f7ff fea1 	bl	8004168 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004426:	f504 5393 	add.w	r3, r4, #4704	; 0x1260
 800442a:	3314      	adds	r3, #20
 800442c:	4618      	mov	r0, r3
 800442e:	ee0a 3a90 	vmov	s21, r3
 8004432:	f7ff fe99 	bl	8004168 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004436:	f504 5396 	add.w	r3, r4, #4800	; 0x12c0
 800443a:	4618      	mov	r0, r3
 800443c:	ee0c 3a10 	vmov	s24, r3
 8004440:	f7ff fe92 	bl	8004168 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004444:	4b49      	ldr	r3, [pc, #292]	; (800456c <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
        color = newColor;
 8004446:	f8df a134 	ldr.w	sl, [pc, #308]	; 800457c <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
 800444a:	e9c5 34d2 	strd	r3, r4, [r5, #840]	; 0x348
 800444e:	4b48      	ldr	r3, [pc, #288]	; (8004570 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004450:	f504 509a 	add.w	r0, r4, #4928	; 0x1340
 8004454:	e9c5 36d4 	strd	r3, r6, [r5, #848]	; 0x350
 8004458:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 800445c:	3018      	adds	r0, #24
 800445e:	f00b f82d 	bl	800f4bc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004462:	23f0      	movs	r3, #240	; 0xf0
 8004464:	ee1b 0a10 	vmov	r0, s22
 8004468:	9300      	str	r3, [sp, #0]
 800446a:	4632      	mov	r2, r6
 800446c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004470:	4631      	mov	r1, r6
 8004472:	f7fe fc98 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004476:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 800447a:	f06f 0216 	mvn.w	r2, #22
 800447e:	ee19 0a10 	vmov	r0, s18
 8004482:	66a3      	str	r3, [r4, #104]	; 0x68
 8004484:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 8004488:	f7fe fc4e 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 800448c:	f04f 0304 	mov.w	r3, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 8004490:	ee19 0a10 	vmov	r0, s18
 8004494:	a912      	add	r1, sp, #72	; 0x48
 8004496:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 800449a:	f00a f821 	bl	800e4e0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 800449e:	23a6      	movs	r3, #166	; 0xa6
 80044a0:	ee1c 0a90 	vmov	r0, s25
 80044a4:	9300      	str	r3, [sp, #0]
 80044a6:	4632      	mov	r2, r6
 80044a8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80044ac:	4631      	mov	r1, r6
 80044ae:	f7fe fc7a 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80044b2:	f04f 32ff 	mov.w	r2, #4294967295
 80044b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80044ba:	e9c4 2330 	strd	r2, r3, [r4, #192]	; 0xc0
        borderSize = size;
 80044be:	f04f 0301 	mov.w	r3, #1
    button1.setXY(187, 189);
 80044c2:	ee1b 0a90 	vmov	r0, s23
 80044c6:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 80044ca:	22bd      	movs	r2, #189	; 0xbd
 80044cc:	21bb      	movs	r1, #187	; 0xbb
 80044ce:	4699      	mov	r9, r3
 80044d0:	f7fe fc2a 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 80044d4:	f04f 0302 	mov.w	r3, #2
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80044d8:	ee1b 0a90 	vmov	r0, s23
 80044dc:	aa12      	add	r2, sp, #72	; 0x48
 80044de:	a911      	add	r1, sp, #68	; 0x44
 80044e0:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
 80044e4:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 80044e8:	f009 fdd7 	bl	800e09a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 80044ec:	f504 539a 	add.w	r3, r4, #4928	; 0x1340
 80044f0:	3308      	adds	r3, #8
        action = &callback;
 80044f2:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
    dynamicGraph2.setScale(1000);
 80044f6:	4632      	mov	r2, r6
 80044f8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80044fc:	4638      	mov	r0, r7
    button1.setAction(buttonCallback);
 80044fe:	9307      	str	r3, [sp, #28]
    dynamicGraph2.setScale(1000);
 8004500:	f7ff fa74 	bl	80039ec <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 8004504:	220a      	movs	r2, #10
 8004506:	4631      	mov	r1, r6
 8004508:	4638      	mov	r0, r7
 800450a:	f7ff f8bb 	bl	8003684 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 800450e:	23a6      	movs	r3, #166	; 0xa6
 8004510:	9300      	str	r3, [sp, #0]
 8004512:	4632      	mov	r2, r6
 8004514:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004518:	4631      	mov	r1, r6
 800451a:	4638      	mov	r0, r7
 800451c:	f7fe fc43 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 8004520:	230f      	movs	r3, #15
 8004522:	9300      	str	r3, [sp, #0]
 8004524:	2214      	movs	r2, #20
 8004526:	2305      	movs	r3, #5
 8004528:	2106      	movs	r1, #6
 800452a:	4638      	mov	r0, r7
 800452c:	f007 ff26 	bl	800c37c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004530:	4633      	mov	r3, r6
 8004532:	4632      	mov	r2, r6
 8004534:	4631      	mov	r1, r6
 8004536:	4638      	mov	r0, r7
 8004538:	9600      	str	r6, [sp, #0]
 800453a:	e021      	b.n	8004580 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 800453c:	0802310c 	.word	0x0802310c
 8004540:	08023f38 	.word	0x08023f38
 8004544:	08023ed0 	.word	0x08023ed0
 8004548:	08023e5c 	.word	0x08023e5c
 800454c:	08023694 	.word	0x08023694
 8004550:	08022dbc 	.word	0x08022dbc
 8004554:	0802396c 	.word	0x0802396c
 8004558:	080235e4 	.word	0x080235e4
 800455c:	08023aa0 	.word	0x08023aa0
 8004560:	08023b40 	.word	0x08023b40
 8004564:	08022f58 	.word	0x08022f58
 8004568:	08023cf0 	.word	0x08023cf0
 800456c:	080230f4 	.word	0x080230f4
 8004570:	08003f99 	.word	0x08003f99
 8004574:	08022c2c 	.word	0x08022c2c
 8004578:	08022ce4 	.word	0x08022ce4
 800457c:	ff1497c5 	.word	0xff1497c5
 8004580:	f007 fdff 	bl	800c182 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 8004584:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004588:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800458c:	4638      	mov	r0, r7
 800458e:	f7ff f90f 	bl	80037b0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004592:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004596:	f8d4 1c24 	ldr.w	r1, [r4, #3108]	; 0xc24
 800459a:	f8d4 0c28 	ldr.w	r0, [r4, #3112]	; 0xc28
        visible = vis;
 800459e:	f884 6125 	strb.w	r6, [r4, #293]	; 0x125
 80045a2:	f007 ff9d 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80045a6:	f04f 0301 	mov.w	r3, #1
 80045aa:	f884 3c2c 	strb.w	r3, [r4, #3116]	; 0xc2c
        majorGrid = &major;
 80045ae:	ee1d 3a10 	vmov	r3, s26
        dataScale = scale;
 80045b2:	f44f 797a 	mov.w	r9, #1000	; 0x3e8
        majorGrid = &major;
 80045b6:	f8c4 3c30 	str.w	r3, [r4, #3120]	; 0xc30
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 80045ba:	ee1e 1a90 	vmov	r1, s29
        dataScale = scale;
 80045be:	f8c4 9c24 	str.w	r9, [r4, #3108]	; 0xc24
        color = newColor;
 80045c2:	f8c4 ac20 	str.w	sl, [r4, #3104]	; 0xc20
        gridInterval = abs(interval);
 80045c6:	f8c4 9c28 	str.w	r9, [r4, #3112]	; 0xc28
 80045ca:	4638      	mov	r0, r7
 80045cc:	f007 fde4 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80045d0:	464a      	mov	r2, r9
 80045d2:	f8d4 1c64 	ldr.w	r1, [r4, #3172]	; 0xc64
 80045d6:	f8d4 0c68 	ldr.w	r0, [r4, #3176]	; 0xc68
 80045da:	f007 ff81 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 80045de:	234b      	movs	r3, #75	; 0x4b
 80045e0:	f8c4 3c68 	str.w	r3, [r4, #3176]	; 0xc68
        lineWidth = width;
 80045e4:	f04f 0301 	mov.w	r3, #1
 80045e8:	f884 3c6c 	strb.w	r3, [r4, #3180]	; 0xc6c
        majorGrid = &major;
 80045ec:	ee1d 3a90 	vmov	r3, s27
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 80045f0:	ee1f 1a10 	vmov	r1, s30
 80045f4:	f8c4 3c70 	str.w	r3, [r4, #3184]	; 0xc70
        dataScale = scale;
 80045f8:	f8c4 9c64 	str.w	r9, [r4, #3172]	; 0xc64
        color = newColor;
 80045fc:	f8c4 ac60 	str.w	sl, [r4, #3168]	; 0xc60
 8004600:	4638      	mov	r0, r7
 8004602:	f007 fdc9 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004606:	464a      	mov	r2, r9
 8004608:	f8d4 1ca4 	ldr.w	r1, [r4, #3236]	; 0xca4
 800460c:	f8d4 0ca8 	ldr.w	r0, [r4, #3240]	; 0xca8
 8004610:	f007 ff66 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004614:	f04f 0302 	mov.w	r3, #2
 8004618:	f884 3cac 	strb.w	r3, [r4, #3244]	; 0xcac
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 800461c:	ee1d 1a10 	vmov	r1, s26
        dataScale = scale;
 8004620:	f8c4 9ca4 	str.w	r9, [r4, #3236]	; 0xca4
        color = newColor;
 8004624:	f8c4 aca0 	str.w	sl, [r4, #3232]	; 0xca0
        gridInterval = abs(interval);
 8004628:	f8c4 9ca8 	str.w	r9, [r4, #3240]	; 0xca8
 800462c:	4638      	mov	r0, r7
 800462e:	f007 fdb3 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004632:	464a      	mov	r2, r9
 8004634:	f8d4 1ce4 	ldr.w	r1, [r4, #3300]	; 0xce4
 8004638:	f8d4 0ce8 	ldr.w	r0, [r4, #3304]	; 0xce8
 800463c:	f007 ff50 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004640:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 8004644:	2296      	movs	r2, #150	; 0x96
        lineWidth = width;
 8004646:	f884 3cec 	strb.w	r3, [r4, #3308]	; 0xcec
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 800464a:	ee1d 1a90 	vmov	r1, s27
        dataScale = scale;
 800464e:	f8c4 9ce4 	str.w	r9, [r4, #3300]	; 0xce4
        color = newColor;
 8004652:	f8c4 ace0 	str.w	sl, [r4, #3296]	; 0xce0
        gridInterval = abs(interval);
 8004656:	f8c4 2ce8 	str.w	r2, [r4, #3304]	; 0xce8
 800465a:	4638      	mov	r0, r7
 800465c:	f007 fd9c 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004660:	464a      	mov	r2, r9
 8004662:	f8d4 1d24 	ldr.w	r1, [r4, #3364]	; 0xd24
 8004666:	f8d4 0d28 	ldr.w	r0, [r4, #3368]	; 0xd28
 800466a:	f007 ff39 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 800466e:	f04f 0206 	mov.w	r2, #6
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 8004672:	ee1f 1a90 	vmov	r1, s31
        dataScale = scale;
 8004676:	f8c4 9d24 	str.w	r9, [r4, #3364]	; 0xd24
        labelInterval = abs(interval);
 800467a:	f8c4 9d28 	str.w	r9, [r4, #3368]	; 0xd28
 800467e:	f8a4 2d30 	strh.w	r2, [r4, #3376]	; 0xd30
        color = newColor;
 8004682:	f8c4 ad20 	str.w	sl, [r4, #3360]	; 0xd20
 8004686:	4638      	mov	r0, r7
 8004688:	f007 fdaa 	bl	800c1e0 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800468c:	464a      	mov	r2, r9
 800468e:	f8d4 1d70 	ldr.w	r1, [r4, #3440]	; 0xd70
 8004692:	f8d4 0d74 	ldr.w	r0, [r4, #3444]	; 0xd74
 8004696:	f007 ff23 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 800469a:	2296      	movs	r2, #150	; 0x96
 800469c:	2305      	movs	r3, #5
 800469e:	f8c4 2d74 	str.w	r2, [r4, #3444]	; 0xd74
        labelDecimals = decimals;
 80046a2:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 80046a6:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 80046a8:	f8c4 9d70 	str.w	r9, [r4, #3440]	; 0xd70
 80046ac:	f8a4 3d7c 	strh.w	r3, [r4, #3452]	; 0xd7c
        labelDecimals = decimals;
 80046b0:	f8a4 2d82 	strh.w	r2, [r4, #3458]	; 0xd82
 80046b4:	f8c4 ad6c 	str.w	sl, [r4, #3436]	; 0xd6c
 80046b8:	4638      	mov	r0, r7
 80046ba:	f007 fd7f 	bl	800c1bc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 80046be:	9b08      	ldr	r3, [sp, #32]
 80046c0:	f8c4 3bd8 	str.w	r3, [r4, #3032]	; 0xbd8
 80046c4:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80046c8:	f04f 0302 	mov.w	r3, #2
 80046cc:	f884 3bdc 	strb.w	r3, [r4, #3036]	; 0xbdc
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 80046d0:	ee1e 1a10 	vmov	r1, s28
 80046d4:	f8c4 2bec 	str.w	r2, [r4, #3052]	; 0xbec
 80046d8:	4638      	mov	r0, r7
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80046da:	f8a4 6bf0 	strh.w	r6, [r4, #3056]	; 0xbf0
 80046de:	f007 fd5b 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 80046e2:	4649      	mov	r1, r9
 80046e4:	4632      	mov	r2, r6
 80046e6:	4640      	mov	r0, r8
 80046e8:	f7ff f980 	bl	80039ec <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 80046ec:	22a6      	movs	r2, #166	; 0xa6
 80046ee:	9200      	str	r2, [sp, #0]
 80046f0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80046f4:	4632      	mov	r2, r6
 80046f6:	4631      	mov	r1, r6
 80046f8:	4640      	mov	r0, r8
 80046fa:	f7fe fb54 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 80046fe:	220f      	movs	r2, #15
 8004700:	9200      	str	r2, [sp, #0]
 8004702:	4633      	mov	r3, r6
 8004704:	2218      	movs	r2, #24
 8004706:	2106      	movs	r1, #6
 8004708:	4640      	mov	r0, r8
 800470a:	f007 fe37 	bl	800c37c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 800470e:	4633      	mov	r3, r6
 8004710:	4632      	mov	r2, r6
 8004712:	4631      	mov	r1, r6
 8004714:	4640      	mov	r0, r8
 8004716:	9600      	str	r6, [sp, #0]
 8004718:	f007 fd33 	bl	800c182 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 800471c:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004720:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004724:	4640      	mov	r0, r8
 8004726:	f7ff f843 	bl	80037b0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800472a:	464a      	mov	r2, r9
 800472c:	e9d5 1010 	ldrd	r1, r0, [r5, #64]	; 0x40
 8004730:	f007 fed6 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004734:	f241 3388 	movw	r3, #5000	; 0x1388
        lineWidth = width;
 8004738:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 800473c:	646b      	str	r3, [r5, #68]	; 0x44
        majorGrid = &major;
 800473e:	9b03      	ldr	r3, [sp, #12]
 8004740:	64eb      	str	r3, [r5, #76]	; 0x4c
        color = newColor;
 8004742:	e9c5 a90f 	strd	sl, r9, [r5, #60]	; 0x3c
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004746:	9904      	ldr	r1, [sp, #16]
        lineWidth = width;
 8004748:	f885 2048 	strb.w	r2, [r5, #72]	; 0x48
 800474c:	4640      	mov	r0, r8
 800474e:	f007 fd23 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004752:	464a      	mov	r2, r9
 8004754:	e9d5 1020 	ldrd	r1, r0, [r5, #128]	; 0x80
 8004758:	f007 fec2 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800475c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 8004760:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 8004764:	e9c5 a91f 	strd	sl, r9, [r5, #124]	; 0x7c
        gridInterval = abs(interval);
 8004768:	f8c5 3084 	str.w	r3, [r5, #132]	; 0x84
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 800476c:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 800476e:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
        majorGrid = &major;
 8004772:	f8c5 b08c 	str.w	fp, [r5, #140]	; 0x8c
 8004776:	4640      	mov	r0, r8
 8004778:	f007 fd0e 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800477c:	464a      	mov	r2, r9
 800477e:	e9d5 1030 	ldrd	r1, r0, [r5, #192]	; 0xc0
 8004782:	f007 fead 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004786:	f242 7310 	movw	r3, #10000	; 0x2710
 800478a:	f8c5 30c4 	str.w	r3, [r5, #196]	; 0xc4
        lineWidth = width;
 800478e:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004792:	e9c5 a92f 	strd	sl, r9, [r5, #188]	; 0xbc
        lineWidth = width;
 8004796:	f885 30c8 	strb.w	r3, [r5, #200]	; 0xc8
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800479a:	9903      	ldr	r1, [sp, #12]
 800479c:	4640      	mov	r0, r8
 800479e:	f007 fcfb 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80047a2:	464a      	mov	r2, r9
 80047a4:	e9d5 1040 	ldrd	r1, r0, [r5, #256]	; 0x100
 80047a8:	f007 fe9a 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80047ac:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80047b0:	e9c5 a93f 	strd	sl, r9, [r5, #252]	; 0xfc
        lineWidth = width;
 80047b4:	f885 3108 	strb.w	r3, [r5, #264]	; 0x108
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 80047b8:	4659      	mov	r1, fp
        gridInterval = abs(interval);
 80047ba:	f8c5 9104 	str.w	r9, [r5, #260]	; 0x104
 80047be:	4640      	mov	r0, r8
 80047c0:	f007 fcea 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80047c4:	464a      	mov	r2, r9
 80047c6:	e9d5 1050 	ldrd	r1, r0, [r5, #320]	; 0x140
 80047ca:	f007 fe89 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80047ce:	2396      	movs	r3, #150	; 0x96
 80047d0:	f8c5 3144 	str.w	r3, [r5, #324]	; 0x144
 80047d4:	230e      	movs	r3, #14
 80047d6:	f8a5 314c 	strh.w	r3, [r5, #332]	; 0x14c
        labelDecimals = decimals;
 80047da:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80047de:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 80047e0:	f8c5 9140 	str.w	r9, [r5, #320]	; 0x140
        labelDecimals = decimals;
 80047e4:	f8a5 3152 	strh.w	r3, [r5, #338]	; 0x152
        color = newColor;
 80047e8:	f8c5 a13c 	str.w	sl, [r5, #316]	; 0x13c
 80047ec:	4640      	mov	r0, r8
 80047ee:	f007 fce5 	bl	800c1bc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 80047f2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80047f6:	60ab      	str	r3, [r5, #8]
 80047f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80047fa:	81ae      	strh	r6, [r5, #12]
 80047fc:	f8c4 3ff4 	str.w	r3, [r4, #4084]	; 0xff4
        lineWidth = width;
 8004800:	f04f 0302 	mov.w	r3, #2
 8004804:	f884 3ff8 	strb.w	r3, [r4, #4088]	; 0xff8
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8004808:	990a      	ldr	r1, [sp, #40]	; 0x28
 800480a:	4640      	mov	r0, r8
 800480c:	f007 fcc4 	bl	800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 8004810:	f04f 0908 	mov.w	r9, #8
    toggleButton1.setXY(65, 211);
 8004814:	ee19 0a90 	vmov	r0, s19
 8004818:	22d3      	movs	r2, #211	; 0xd3
 800481a:	2141      	movs	r1, #65	; 0x41
 800481c:	f7fe fa84 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 8004820:	f04f 0307 	mov.w	r3, #7
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004824:	ee19 0a90 	vmov	r0, s19
 8004828:	aa12      	add	r2, sp, #72	; 0x48
 800482a:	a911      	add	r1, sp, #68	; 0x44
        originalPressed = bitmapPressed;
 800482c:	f8a5 9190 	strh.w	r9, [r5, #400]	; 0x190
 8004830:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8004834:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004838:	f009 fc2f 	bl	800e09a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800483c:	9b07      	ldr	r3, [sp, #28]
 800483e:	f8c5 3184 	str.w	r3, [r5, #388]	; 0x184
    txtShowWholeGraph.setXY(1, 219);
 8004842:	22db      	movs	r2, #219	; 0xdb
 8004844:	ee18 0a10 	vmov	r0, s16
 8004848:	2101      	movs	r1, #1
 800484a:	f7fe fa6d 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 800484e:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
        color = newColor;
 8004852:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004856:	4650      	mov	r0, sl
 8004858:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 800485c:	f8c5 31c4 	str.w	r3, [r5, #452]	; 0x1c4
        linespace = space;
 8004860:	f8a5 61c8 	strh.w	r6, [r5, #456]	; 0x1c8
        boundingArea = calculateBoundingArea();
 8004864:	f009 f92e 	bl	800dac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004868:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800486c:	ee18 3a10 	vmov	r3, s16
 8004870:	333c      	adds	r3, #60	; 0x3c
 8004872:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004876:	4ba0      	ldr	r3, [pc, #640]	; (8004af8 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
 8004878:	9312      	str	r3, [sp, #72]	; 0x48
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 800487a:	ee18 0a10 	vmov	r0, s16
 800487e:	230d      	movs	r3, #13
 8004880:	a912      	add	r1, sp, #72	; 0x48
 8004882:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004886:	f009 fbad 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 800488a:	230f      	movs	r3, #15
 800488c:	22a8      	movs	r2, #168	; 0xa8
 800488e:	ee18 0a90 	vmov	r0, s17
 8004892:	9300      	str	r3, [sp, #0]
 8004894:	2102      	movs	r1, #2
 8004896:	2384      	movs	r3, #132	; 0x84
 8004898:	f7fe fa85 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800489c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80048a0:	f8c5 320c 	str.w	r3, [r5, #524]	; 0x20c
        boundingArea = calculateBoundingArea();
 80048a4:	f8d5 31dc 	ldr.w	r3, [r5, #476]	; 0x1dc
        linespace = space;
 80048a8:	f8a5 6210 	strh.w	r6, [r5, #528]	; 0x210
        boundingArea = calculateBoundingArea();
 80048ac:	4650      	mov	r0, sl
 80048ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80048b2:	ee18 1a90 	vmov	r1, s17
 80048b6:	4798      	blx	r3
 80048b8:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80048bc:	ee18 3a90 	vmov	r3, s17
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048c0:	f8df a254 	ldr.w	sl, [pc, #596]	; 8004b18 <_ZN19ScreenGraphViewBaseC1Ev+0x998>
 80048c4:	333c      	adds	r3, #60	; 0x3c
 80048c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80048ca:	f8da 3000 	ldr.w	r3, [sl]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 80048ce:	f504 5b98 	add.w	fp, r4, #4864	; 0x1300
 80048d2:	f10b 0b0c 	add.w	fp, fp, #12
 80048d6:	b92b      	cbnz	r3, 80048e4 <_ZN19ScreenGraphViewBaseC1Ev+0x764>
 80048d8:	4b88      	ldr	r3, [pc, #544]	; (8004afc <_ZN19ScreenGraphViewBaseC1Ev+0x97c>)
 80048da:	4a89      	ldr	r2, [pc, #548]	; (8004b00 <_ZN19ScreenGraphViewBaseC1Ev+0x980>)
 80048dc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048de:	4889      	ldr	r0, [pc, #548]	; (8004b04 <_ZN19ScreenGraphViewBaseC1Ev+0x984>)
 80048e0:	f01b fe7c 	bl	80205dc <__assert_func>
 80048e4:	4b88      	ldr	r3, [pc, #544]	; (8004b08 <_ZN19ScreenGraphViewBaseC1Ev+0x988>)
 80048e6:	881b      	ldrh	r3, [r3, #0]
 80048e8:	2b0a      	cmp	r3, #10
 80048ea:	d803      	bhi.n	80048f4 <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 80048ec:	4b87      	ldr	r3, [pc, #540]	; (8004b0c <_ZN19ScreenGraphViewBaseC1Ev+0x98c>)
 80048ee:	4a84      	ldr	r2, [pc, #528]	; (8004b00 <_ZN19ScreenGraphViewBaseC1Ev+0x980>)
 80048f0:	2161      	movs	r1, #97	; 0x61
 80048f2:	e7f4      	b.n	80048de <_ZN19ScreenGraphViewBaseC1Ev+0x75e>
        return texts->getText(typedTextId);
 80048f4:	4b86      	ldr	r3, [pc, #536]	; (8004b10 <_ZN19ScreenGraphViewBaseC1Ev+0x990>)
 80048f6:	210a      	movs	r1, #10
 80048f8:	6818      	ldr	r0, [r3, #0]
 80048fa:	f000 fa73 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 80048fe:	4a85      	ldr	r2, [pc, #532]	; (8004b14 <_ZN19ScreenGraphViewBaseC1Ev+0x994>)
 8004900:	4603      	mov	r3, r0
 8004902:	4649      	mov	r1, r9
 8004904:	4658      	mov	r0, fp
 8004906:	f00f fa57 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800490a:	4a7b      	ldr	r2, [pc, #492]	; (8004af8 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
        wc1 = value;
 800490c:	f8c5 b224 	str.w	fp, [r5, #548]	; 0x224
 8004910:	230c      	movs	r3, #12
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 8004912:	ee18 0a90 	vmov	r0, s17
 8004916:	a912      	add	r1, sp, #72	; 0x48
 8004918:	9212      	str	r2, [sp, #72]	; 0x48
 800491a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800491e:	f009 fb61 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 8004922:	210f      	movs	r1, #15
 8004924:	9100      	str	r1, [sp, #0]
 8004926:	2384      	movs	r3, #132	; 0x84
 8004928:	2102      	movs	r1, #2
 800492a:	ee1a 0a10 	vmov	r0, s20
 800492e:	22b7      	movs	r2, #183	; 0xb7
 8004930:	f7fe fa39 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004934:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004938:	f8da 3000 	ldr.w	r3, [sl]
 800493c:	f8c5 1258 	str.w	r1, [r5, #600]	; 0x258
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004940:	f504 5b98 	add.w	fp, r4, #4864	; 0x1300
        boundingArea = calculateBoundingArea();
 8004944:	f04f 31ff 	mov.w	r1, #4294967295
 8004948:	e9c5 169a 	strd	r1, r6, [r5, #616]	; 0x268
        linespace = space;
 800494c:	f8a5 625c 	strh.w	r6, [r5, #604]	; 0x25c
        boundingArea = calculateBoundingArea();
 8004950:	f8c5 6264 	str.w	r6, [r5, #612]	; 0x264
 8004954:	f10b 0b1c 	add.w	fp, fp, #28
 8004958:	2b00      	cmp	r3, #0
 800495a:	d0bd      	beq.n	80048d8 <_ZN19ScreenGraphViewBaseC1Ev+0x758>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800495c:	496a      	ldr	r1, [pc, #424]	; (8004b08 <_ZN19ScreenGraphViewBaseC1Ev+0x988>)
 800495e:	880b      	ldrh	r3, [r1, #0]
 8004960:	2b09      	cmp	r3, #9
 8004962:	d9c3      	bls.n	80048ec <_ZN19ScreenGraphViewBaseC1Ev+0x76c>
        return texts->getText(typedTextId);
 8004964:	4b6a      	ldr	r3, [pc, #424]	; (8004b10 <_ZN19ScreenGraphViewBaseC1Ev+0x990>)
 8004966:	2109      	movs	r1, #9
 8004968:	6818      	ldr	r0, [r3, #0]
 800496a:	f000 fa3b 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800496e:	4a69      	ldr	r2, [pc, #420]	; (8004b14 <_ZN19ScreenGraphViewBaseC1Ev+0x994>)
 8004970:	4603      	mov	r3, r0
 8004972:	4649      	mov	r1, r9
 8004974:	4658      	mov	r0, fp
 8004976:	f00f fa1f 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 800497a:	a812      	add	r0, sp, #72	; 0x48
        : typedTextId(id)
 800497c:	4a5e      	ldr	r2, [pc, #376]	; (8004af8 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
 800497e:	f8c5 b270 	str.w	fp, [r5, #624]	; 0x270
 8004982:	230b      	movs	r3, #11
 8004984:	4601      	mov	r1, r0
 8004986:	ee1a 0a10 	vmov	r0, s20
 800498a:	9212      	str	r2, [sp, #72]	; 0x48
 800498c:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004990:	f009 fb28 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 8004994:	200f      	movs	r0, #15
 8004996:	9000      	str	r0, [sp, #0]
 8004998:	2384      	movs	r3, #132	; 0x84
 800499a:	ee1a 0a90 	vmov	r0, s21
 800499e:	22c6      	movs	r2, #198	; 0xc6
 80049a0:	2102      	movs	r1, #2
 80049a2:	f7fe fa00 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80049a6:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049aa:	f8da 3000 	ldr.w	r3, [sl]
 80049ae:	f8c5 02a4 	str.w	r0, [r5, #676]	; 0x2a4
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80049b2:	f504 5b99 	add.w	fp, r4, #4896	; 0x1320
        boundingArea = calculateBoundingArea();
 80049b6:	f04f 30ff 	mov.w	r0, #4294967295
 80049ba:	e9c5 06ad 	strd	r0, r6, [r5, #692]	; 0x2b4
        linespace = space;
 80049be:	f8a5 62a8 	strh.w	r6, [r5, #680]	; 0x2a8
        boundingArea = calculateBoundingArea();
 80049c2:	f8c5 62b0 	str.w	r6, [r5, #688]	; 0x2b0
 80049c6:	f10b 0b0c 	add.w	fp, fp, #12
 80049ca:	2b00      	cmp	r3, #0
 80049cc:	d084      	beq.n	80048d8 <_ZN19ScreenGraphViewBaseC1Ev+0x758>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049ce:	494e      	ldr	r1, [pc, #312]	; (8004b08 <_ZN19ScreenGraphViewBaseC1Ev+0x988>)
 80049d0:	880b      	ldrh	r3, [r1, #0]
 80049d2:	2b07      	cmp	r3, #7
 80049d4:	d98a      	bls.n	80048ec <_ZN19ScreenGraphViewBaseC1Ev+0x76c>
        return texts->getText(typedTextId);
 80049d6:	4b4e      	ldr	r3, [pc, #312]	; (8004b10 <_ZN19ScreenGraphViewBaseC1Ev+0x990>)
 80049d8:	2107      	movs	r1, #7
 80049da:	6818      	ldr	r0, [r3, #0]
 80049dc:	f000 fa02 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 80049e0:	4a4c      	ldr	r2, [pc, #304]	; (8004b14 <_ZN19ScreenGraphViewBaseC1Ev+0x994>)
 80049e2:	4603      	mov	r3, r0
 80049e4:	210a      	movs	r1, #10
 80049e6:	4658      	mov	r0, fp
 80049e8:	f00f f9e6 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 80049ec:	a812      	add	r0, sp, #72	; 0x48
        : typedTextId(id)
 80049ee:	4a42      	ldr	r2, [pc, #264]	; (8004af8 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
 80049f0:	f8c5 b2bc 	str.w	fp, [r5, #700]	; 0x2bc
 80049f4:	4601      	mov	r1, r0
 80049f6:	ee1a 0a90 	vmov	r0, s21
 80049fa:	9212      	str	r2, [sp, #72]	; 0x48
 80049fc:	f8ad 904c 	strh.w	r9, [sp, #76]	; 0x4c
 8004a00:	f009 faf0 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 8004a04:	200f      	movs	r0, #15
 8004a06:	9000      	str	r0, [sp, #0]
 8004a08:	2399      	movs	r3, #153	; 0x99
 8004a0a:	ee1c 0a10 	vmov	r0, s24
 8004a0e:	22a8      	movs	r2, #168	; 0xa8
 8004a10:	21a0      	movs	r1, #160	; 0xa0
 8004a12:	f7fe f9c8 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004a16:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a1a:	f8da 3000 	ldr.w	r3, [sl]
 8004a1e:	f8c5 02f0 	str.w	r0, [r5, #752]	; 0x2f0
        boundingArea = calculateBoundingArea();
 8004a22:	f04f 30ff 	mov.w	r0, #4294967295
 8004a26:	e9c5 06c0 	strd	r0, r6, [r5, #768]	; 0x300
        linespace = space;
 8004a2a:	f8a5 62f4 	strh.w	r6, [r5, #756]	; 0x2f4
        boundingArea = calculateBoundingArea();
 8004a2e:	f8c5 62fc 	str.w	r6, [r5, #764]	; 0x2fc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 8004a32:	f504 599a 	add.w	r9, r4, #4928	; 0x1340
 8004a36:	2b00      	cmp	r3, #0
 8004a38:	f43f af4e 	beq.w	80048d8 <_ZN19ScreenGraphViewBaseC1Ev+0x758>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a3c:	4932      	ldr	r1, [pc, #200]	; (8004b08 <_ZN19ScreenGraphViewBaseC1Ev+0x988>)
 8004a3e:	880b      	ldrh	r3, [r1, #0]
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	f43f af53 	beq.w	80048ec <_ZN19ScreenGraphViewBaseC1Ev+0x76c>
        return texts->getText(typedTextId);
 8004a46:	4b32      	ldr	r3, [pc, #200]	; (8004b10 <_ZN19ScreenGraphViewBaseC1Ev+0x990>)
 8004a48:	4631      	mov	r1, r6
 8004a4a:	6818      	ldr	r0, [r3, #0]
 8004a4c:	f000 f9ca 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 8004a50:	4a30      	ldr	r2, [pc, #192]	; (8004b14 <_ZN19ScreenGraphViewBaseC1Ev+0x994>)
 8004a52:	4603      	mov	r3, r0
 8004a54:	2104      	movs	r1, #4
 8004a56:	4648      	mov	r0, r9
 8004a58:	f00f f9ae 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004a5c:	4a26      	ldr	r2, [pc, #152]	; (8004af8 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
 8004a5e:	f8c5 9308 	str.w	r9, [r5, #776]	; 0x308
 8004a62:	f04f 0301 	mov.w	r3, #1
 8004a66:	1d25      	adds	r5, r4, #4
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 8004a68:	ee1c 0a10 	vmov	r0, s24
 8004a6c:	a912      	add	r1, sp, #72	; 0x48
 8004a6e:	9212      	str	r2, [sp, #72]	; 0x48
 8004a70:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004a74:	f009 fab6 	bl	800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004a78:	ee1b 1a10 	vmov	r1, s22
 8004a7c:	4628      	mov	r0, r5
 8004a7e:	f005 fead 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a82:	ee19 1a10 	vmov	r1, s18
 8004a86:	4628      	mov	r0, r5
 8004a88:	f005 fea8 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a8c:	ee1c 1a90 	vmov	r1, s25
 8004a90:	4628      	mov	r0, r5
 8004a92:	f005 fea3 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a96:	ee1b 1a90 	vmov	r1, s23
 8004a9a:	4628      	mov	r0, r5
 8004a9c:	f005 fe9e 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aa0:	4639      	mov	r1, r7
 8004aa2:	4628      	mov	r0, r5
 8004aa4:	f005 fe9a 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aa8:	4641      	mov	r1, r8
 8004aaa:	4628      	mov	r0, r5
 8004aac:	f005 fe96 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ab0:	ee19 1a90 	vmov	r1, s19
 8004ab4:	4628      	mov	r0, r5
 8004ab6:	f005 fe91 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aba:	ee18 1a10 	vmov	r1, s16
 8004abe:	4628      	mov	r0, r5
 8004ac0:	f005 fe8c 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ac4:	ee18 1a90 	vmov	r1, s17
 8004ac8:	4628      	mov	r0, r5
 8004aca:	f005 fe87 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ace:	ee1a 1a10 	vmov	r1, s20
 8004ad2:	4628      	mov	r0, r5
 8004ad4:	f005 fe82 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ad8:	ee1a 1a90 	vmov	r1, s21
 8004adc:	4628      	mov	r0, r5
 8004ade:	f005 fe7d 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ae2:	4628      	mov	r0, r5
 8004ae4:	ee1c 1a10 	vmov	r1, s24
 8004ae8:	f005 fe78 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004aec:	4620      	mov	r0, r4
 8004aee:	b015      	add	sp, #84	; 0x54
 8004af0:	ecbd 8b10 	vpop	{d8-d15}
 8004af4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004af8:	08021f58 	.word	0x08021f58
 8004afc:	08022620 	.word	0x08022620
 8004b00:	08022722 	.word	0x08022722
 8004b04:	0802269d 	.word	0x0802269d
 8004b08:	200154e4 	.word	0x200154e4
 8004b0c:	080226e4 	.word	0x080226e4
 8004b10:	200154ec 	.word	0x200154ec
 8004b14:	0802275a 	.word	0x0802275a
 8004b18:	200154e0 	.word	0x200154e0

08004b1c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b1c:	4770      	bx	lr
	...

08004b20 <_Z23getFont_verdana_10_4bppv>:
{
 8004b20:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b22:	4d16      	ldr	r5, [pc, #88]	; (8004b7c <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004b24:	782c      	ldrb	r4, [r5, #0]
 8004b26:	f3bf 8f5b 	dmb	ish
 8004b2a:	f014 0401 	ands.w	r4, r4, #1
{
 8004b2e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b30:	d120      	bne.n	8004b74 <_Z23getFont_verdana_10_4bppv+0x54>
 8004b32:	4628      	mov	r0, r5
 8004b34:	f01b fca0 	bl	8020478 <__cxa_guard_acquire>
 8004b38:	b1e0      	cbz	r0, 8004b74 <_Z23getFont_verdana_10_4bppv+0x54>
 8004b3a:	233f      	movs	r3, #63	; 0x3f
 8004b3c:	9307      	str	r3, [sp, #28]
 8004b3e:	4b10      	ldr	r3, [pc, #64]	; (8004b80 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004b40:	9306      	str	r3, [sp, #24]
 8004b42:	4b10      	ldr	r3, [pc, #64]	; (8004b84 <_Z23getFont_verdana_10_4bppv+0x64>)
 8004b44:	9305      	str	r3, [sp, #20]
 8004b46:	2301      	movs	r3, #1
 8004b48:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004b4c:	9302      	str	r3, [sp, #8]
 8004b4e:	2204      	movs	r2, #4
 8004b50:	2302      	movs	r3, #2
 8004b52:	e9cd 3200 	strd	r3, r2, [sp]
 8004b56:	490c      	ldr	r1, [pc, #48]	; (8004b88 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004b58:	480c      	ldr	r0, [pc, #48]	; (8004b8c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b5a:	9408      	str	r4, [sp, #32]
 8004b5c:	230a      	movs	r3, #10
 8004b5e:	2228      	movs	r2, #40	; 0x28
 8004b60:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004b64:	f7fd ff34 	bl	80029d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004b68:	4809      	ldr	r0, [pc, #36]	; (8004b90 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004b6a:	f01b fd55 	bl	8020618 <atexit>
 8004b6e:	4628      	mov	r0, r5
 8004b70:	f01b fc8e 	bl	8020490 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004b74:	4805      	ldr	r0, [pc, #20]	; (8004b8c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b76:	b00d      	add	sp, #52	; 0x34
 8004b78:	bd30      	pop	{r4, r5, pc}
 8004b7a:	bf00      	nop
 8004b7c:	200045c8 	.word	0x200045c8
 8004b80:	080259fc 	.word	0x080259fc
 8004b84:	08025a80 	.word	0x08025a80
 8004b88:	08025570 	.word	0x08025570
 8004b8c:	200045cc 	.word	0x200045cc
 8004b90:	08004b1d 	.word	0x08004b1d

08004b94 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b94:	4770      	bx	lr
	...

08004b98 <_Z23getFont_verdana_15_4bppv>:
{
 8004b98:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b9a:	4d16      	ldr	r5, [pc, #88]	; (8004bf4 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004b9c:	782c      	ldrb	r4, [r5, #0]
 8004b9e:	f3bf 8f5b 	dmb	ish
 8004ba2:	f014 0401 	ands.w	r4, r4, #1
{
 8004ba6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004ba8:	d120      	bne.n	8004bec <_Z23getFont_verdana_15_4bppv+0x54>
 8004baa:	4628      	mov	r0, r5
 8004bac:	f01b fc64 	bl	8020478 <__cxa_guard_acquire>
 8004bb0:	b1e0      	cbz	r0, 8004bec <_Z23getFont_verdana_15_4bppv+0x54>
 8004bb2:	233f      	movs	r3, #63	; 0x3f
 8004bb4:	9307      	str	r3, [sp, #28]
 8004bb6:	4b10      	ldr	r3, [pc, #64]	; (8004bf8 <_Z23getFont_verdana_15_4bppv+0x60>)
 8004bb8:	9306      	str	r3, [sp, #24]
 8004bba:	4b10      	ldr	r3, [pc, #64]	; (8004bfc <_Z23getFont_verdana_15_4bppv+0x64>)
 8004bbc:	9305      	str	r3, [sp, #20]
 8004bbe:	2301      	movs	r3, #1
 8004bc0:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004bc4:	9302      	str	r3, [sp, #8]
 8004bc6:	2204      	movs	r2, #4
 8004bc8:	2303      	movs	r3, #3
 8004bca:	e9cd 3200 	strd	r3, r2, [sp]
 8004bce:	490c      	ldr	r1, [pc, #48]	; (8004c00 <_Z23getFont_verdana_15_4bppv+0x68>)
 8004bd0:	480c      	ldr	r0, [pc, #48]	; (8004c04 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004bd2:	9408      	str	r4, [sp, #32]
 8004bd4:	230f      	movs	r3, #15
 8004bd6:	2226      	movs	r2, #38	; 0x26
 8004bd8:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004bdc:	f7fd fef8 	bl	80029d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004be0:	4809      	ldr	r0, [pc, #36]	; (8004c08 <_Z23getFont_verdana_15_4bppv+0x70>)
 8004be2:	f01b fd19 	bl	8020618 <atexit>
 8004be6:	4628      	mov	r0, r5
 8004be8:	f01b fc52 	bl	8020490 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004bec:	4805      	ldr	r0, [pc, #20]	; (8004c04 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004bee:	b00d      	add	sp, #52	; 0x34
 8004bf0:	bd30      	pop	{r4, r5, pc}
 8004bf2:	bf00      	nop
 8004bf4:	200045f4 	.word	0x200045f4
 8004bf8:	08025a18 	.word	0x08025a18
 8004bfc:	08025a84 	.word	0x08025a84
 8004c00:	080257a0 	.word	0x080257a0
 8004c04:	200045f8 	.word	0x200045f8
 8004c08:	08004b95 	.word	0x08004b95

08004c0c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c0c:	4770      	bx	lr
	...

08004c10 <_Z23getFont_verdana_40_4bppv>:
{
 8004c10:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c12:	4d15      	ldr	r5, [pc, #84]	; (8004c68 <_Z23getFont_verdana_40_4bppv+0x58>)
 8004c14:	782c      	ldrb	r4, [r5, #0]
 8004c16:	f3bf 8f5b 	dmb	ish
 8004c1a:	f014 0401 	ands.w	r4, r4, #1
{
 8004c1e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c20:	d11f      	bne.n	8004c62 <_Z23getFont_verdana_40_4bppv+0x52>
 8004c22:	4628      	mov	r0, r5
 8004c24:	f01b fc28 	bl	8020478 <__cxa_guard_acquire>
 8004c28:	b1d8      	cbz	r0, 8004c62 <_Z23getFont_verdana_40_4bppv+0x52>
 8004c2a:	233f      	movs	r3, #63	; 0x3f
 8004c2c:	9307      	str	r3, [sp, #28]
 8004c2e:	4b0f      	ldr	r3, [pc, #60]	; (8004c6c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004c30:	9306      	str	r3, [sp, #24]
 8004c32:	4b0f      	ldr	r3, [pc, #60]	; (8004c70 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004c34:	490f      	ldr	r1, [pc, #60]	; (8004c74 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004c36:	4810      	ldr	r0, [pc, #64]	; (8004c78 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c38:	9408      	str	r4, [sp, #32]
 8004c3a:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004c3e:	2204      	movs	r2, #4
 8004c40:	2301      	movs	r3, #1
 8004c42:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004c46:	9300      	str	r3, [sp, #0]
 8004c48:	2205      	movs	r2, #5
 8004c4a:	2328      	movs	r3, #40	; 0x28
 8004c4c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c50:	9403      	str	r4, [sp, #12]
 8004c52:	f7fd febd 	bl	80029d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c56:	4809      	ldr	r0, [pc, #36]	; (8004c7c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004c58:	f01b fcde 	bl	8020618 <atexit>
 8004c5c:	4628      	mov	r0, r5
 8004c5e:	f01b fc17 	bl	8020490 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004c62:	4805      	ldr	r0, [pc, #20]	; (8004c78 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c64:	b00d      	add	sp, #52	; 0x34
 8004c66:	bd30      	pop	{r4, r5, pc}
 8004c68:	20004620 	.word	0x20004620
 8004c6c:	08025a6c 	.word	0x08025a6c
 8004c70:	08025a88 	.word	0x08025a88
 8004c74:	080259b4 	.word	0x080259b4
 8004c78:	20004624 	.word	0x20004624
 8004c7c:	08004c0d 	.word	0x08004c0d

08004c80 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004c80:	2000      	movs	r0, #0
 8004c82:	4770      	bx	lr

08004c84 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004c84:	2000      	movs	r0, #0
 8004c86:	4770      	bx	lr

08004c88 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c88:	b40e      	push	{r1, r2, r3}
 8004c8a:	b503      	push	{r0, r1, lr}
 8004c8c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c8e:	2100      	movs	r1, #0
{
 8004c90:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004c94:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c96:	f00c ff47 	bl	8011b28 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004c9a:	b002      	add	sp, #8
 8004c9c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004ca0:	b003      	add	sp, #12
 8004ca2:	4770      	bx	lr

08004ca4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004ca4:	b40c      	push	{r2, r3}
 8004ca6:	b507      	push	{r0, r1, r2, lr}
 8004ca8:	ab04      	add	r3, sp, #16
 8004caa:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004cae:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004cb0:	f00c ff3a 	bl	8011b28 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004cb4:	b003      	add	sp, #12
 8004cb6:	f85d eb04 	ldr.w	lr, [sp], #4
 8004cba:	b002      	add	sp, #8
 8004cbc:	4770      	bx	lr
	...

08004cc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004cc0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004cc2:	b510      	push	{r4, lr}
 8004cc4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004cc6:	b373      	cbz	r3, 8004d26 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004cc8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004cca:	b92b      	cbnz	r3, 8004cd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004ccc:	4b18      	ldr	r3, [pc, #96]	; (8004d30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004cce:	4a19      	ldr	r2, [pc, #100]	; (8004d34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004cd0:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004cd2:	4819      	ldr	r0, [pc, #100]	; (8004d38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004cd4:	f01b fc82 	bl	80205dc <__assert_func>
            return buffer[pos];
 8004cd8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004cda:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004cde:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004ce0:	b30b      	cbz	r3, 8004d26 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004ce2:	f00e faba 	bl	801325a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004ce6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004ce8:	2b01      	cmp	r3, #1
 8004cea:	d803      	bhi.n	8004cf4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004cec:	4b13      	ldr	r3, [pc, #76]	; (8004d3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004cee:	4a14      	ldr	r2, [pc, #80]	; (8004d40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004cf0:	21c5      	movs	r1, #197	; 0xc5
 8004cf2:	e7ee      	b.n	8004cd2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004cf4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004cf6:	1c53      	adds	r3, r2, #1
 8004cf8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004cfa:	2b09      	cmp	r3, #9
 8004cfc:	4619      	mov	r1, r3
 8004cfe:	bf88      	it	hi
 8004d00:	f1a3 010a 	subhi.w	r1, r3, #10
 8004d04:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004d08:	f640 103f 	movw	r0, #2367	; 0x93f
 8004d0c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004d0e:	4281      	cmp	r1, r0
 8004d10:	d109      	bne.n	8004d26 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004d12:	2b0a      	cmp	r3, #10
 8004d14:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004d18:	bf28      	it	cs
 8004d1a:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004d1c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004d20:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004d22:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004d24:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004d26:	4620      	mov	r0, r4
}
 8004d28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004d2c:	f00e b998 	b.w	8013060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004d30:	0802313c 	.word	0x0802313c
 8004d34:	08023145 	.word	0x08023145
 8004d38:	080231f0 	.word	0x080231f0
 8004d3c:	0802323a 	.word	0x0802323a
 8004d40:	08023248 	.word	0x08023248

08004d44 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004d44:	f00e b953 	b.w	8012fee <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004d48 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004d48:	b510      	push	{r4, lr}
 8004d4a:	b086      	sub	sp, #24
 8004d4c:	ac02      	add	r4, sp, #8
 8004d4e:	e884 0006 	stmia.w	r4, {r1, r2}
 8004d52:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004d54:	ab0a      	add	r3, sp, #40	; 0x28
 8004d56:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004d58:	9301      	str	r3, [sp, #4]
 8004d5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d5c:	9300      	str	r3, [sp, #0]
 8004d5e:	4621      	mov	r1, r4
 8004d60:	9b08      	ldr	r3, [sp, #32]
 8004d62:	f00b fbe6 	bl	8010532 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004d66:	b006      	add	sp, #24
 8004d68:	bd10      	pop	{r4, pc}
	...

08004d6c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004d6c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004d6e:	bb18      	cbnz	r0, 8004db8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004d70:	4b12      	ldr	r3, [pc, #72]	; (8004dbc <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004d72:	4813      	ldr	r0, [pc, #76]	; (8004dc0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	4913      	ldr	r1, [pc, #76]	; (8004dc4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004d78:	b1b3      	cbz	r3, 8004da8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d7a:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d7c:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d7e:	441a      	add	r2, r3
 8004d80:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004d82:	685a      	ldr	r2, [r3, #4]
 8004d84:	441a      	add	r2, r3
 8004d86:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d88:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004d8a:	4b0f      	ldr	r3, [pc, #60]	; (8004dc8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004d8c:	2200      	movs	r2, #0
 8004d8e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004d90:	f000 f838 	bl	8004e04 <_ZN17TypedTextDatabase8getFontsEv>
 8004d94:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004d96:	f000 f833 	bl	8004e00 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004d9a:	4b0c      	ldr	r3, [pc, #48]	; (8004dcc <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004d9c:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004d9e:	4b0c      	ldr	r3, [pc, #48]	; (8004dd0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004da0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004da2:	4b0c      	ldr	r3, [pc, #48]	; (8004dd4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004da4:	8018      	strh	r0, [r3, #0]
    }
}
 8004da6:	e007      	b.n	8004db8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004da8:	4b0b      	ldr	r3, [pc, #44]	; (8004dd8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004daa:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004dac:	4b0b      	ldr	r3, [pc, #44]	; (8004ddc <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004dae:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004db0:	4b0b      	ldr	r3, [pc, #44]	; (8004de0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004db2:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004db4:	2c00      	cmp	r4, #0
 8004db6:	d1e8      	bne.n	8004d8a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004db8:	bd38      	pop	{r3, r4, r5, pc}
 8004dba:	bf00      	nop
 8004dbc:	2000464c 	.word	0x2000464c
 8004dc0:	20004650 	.word	0x20004650
 8004dc4:	20004654 	.word	0x20004654
 8004dc8:	20004658 	.word	0x20004658
 8004dcc:	200154e0 	.word	0x200154e0
 8004dd0:	200154e8 	.word	0x200154e8
 8004dd4:	200154e4 	.word	0x200154e4
 8004dd8:	08025adc 	.word	0x08025adc
 8004ddc:	08025a8c 	.word	0x08025a8c
 8004de0:	08025c7c 	.word	0x08025c7c

08004de4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004de4:	4b04      	ldr	r3, [pc, #16]	; (8004df8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004de6:	681b      	ldr	r3, [r3, #0]
 8004de8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004dec:	4b03      	ldr	r3, [pc, #12]	; (8004dfc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004dee:	681b      	ldr	r3, [r3, #0]
}
 8004df0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004df4:	4770      	bx	lr
 8004df6:	bf00      	nop
 8004df8:	20004654 	.word	0x20004654
 8004dfc:	20004650 	.word	0x20004650

08004e00 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004e00:	2014      	movs	r0, #20
 8004e02:	4770      	bx	lr

08004e04 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004e04:	4800      	ldr	r0, [pc, #0]	; (8004e08 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004e06:	4770      	bx	lr
 8004e08:	2000465c 	.word	0x2000465c

08004e0c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004e0c:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8004e0e:	f7ff fec3 	bl	8004b98 <_Z23getFont_verdana_15_4bppv>
};
 8004e12:	4c04      	ldr	r4, [pc, #16]	; (8004e24 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004e14:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004e16:	f7ff fefb 	bl	8004c10 <_Z23getFont_verdana_40_4bppv>
};
 8004e1a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004e1c:	f7ff fe80 	bl	8004b20 <_Z23getFont_verdana_10_4bppv>
};
 8004e20:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004e22:	bd10      	pop	{r4, pc}
 8004e24:	2000465c 	.word	0x2000465c

08004e28 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004e28:	4770      	bx	lr

08004e2a <_ZN19FrontendApplicationD0Ev>:
 8004e2a:	b510      	push	{r4, lr}
 8004e2c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004e30:	4604      	mov	r4, r0
 8004e32:	f01b fb1f 	bl	8020474 <_ZdlPvj>
 8004e36:	4620      	mov	r0, r4
 8004e38:	bd10      	pop	{r4, pc}

08004e3a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004e3a:	b510      	push	{r4, lr}
 8004e3c:	4604      	mov	r4, r0
    {
        model.tick();
 8004e3e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004e42:	f000 f813 	bl	8004e6c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004e46:	4620      	mov	r0, r4
    }
 8004e48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004e4c:	f00b beea 	b.w	8010c24 <_ZN8touchgfx11Application15handleTickEventEv>

08004e50 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004e50:	b510      	push	{r4, lr}
 8004e52:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004e54:	f7fd fbbc 	bl	80025d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004e58:	4b01      	ldr	r3, [pc, #4]	; (8004e60 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004e5a:	6023      	str	r3, [r4, #0]
{

}
 8004e5c:	4620      	mov	r0, r4
 8004e5e:	bd10      	pop	{r4, pc}
 8004e60:	08023324 	.word	0x08023324

08004e64 <_ZN5ModelC1Ev>:
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
Model::Model() : modelListener(0)
 8004e64:	2200      	movs	r2, #0
 8004e66:	6002      	str	r2, [r0, #0]
{

}
 8004e68:	4770      	bx	lr
	...

08004e6c <_ZN5Model4tickEv>:

void Model::tick()
{
 8004e6c:	b570      	push	{r4, r5, r6, lr}
 8004e6e:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004e70:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 8004e72:	4d17      	ldr	r5, [pc, #92]	; (8004ed0 <_ZN5Model4tickEv+0x64>)
modelListener->UpdateBatteryVoltage();
 8004e74:	6803      	ldr	r3, [r0, #0]
 8004e76:	689b      	ldr	r3, [r3, #8]
 8004e78:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004e7a:	f8d5 3a70 	ldr.w	r3, [r5, #2672]	; 0xa70
 8004e7e:	b173      	cbz	r3, 8004e9e <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8004e80:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8004e84:	2b01      	cmp	r3, #1
 8004e86:	d103      	bne.n	8004e90 <_ZN5Model4tickEv+0x24>
 8004e88:	6820      	ldr	r0, [r4, #0]
 8004e8a:	6803      	ldr	r3, [r0, #0]
 8004e8c:	68db      	ldr	r3, [r3, #12]
 8004e8e:	4798      	blx	r3
	modelListener->DrawPoint();
 8004e90:	6820      	ldr	r0, [r4, #0]
 8004e92:	6803      	ldr	r3, [r0, #0]
 8004e94:	68db      	ldr	r3, [r3, #12]
 8004e96:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004e98:	2300      	movs	r3, #0
 8004e9a:	f8c5 3a70 	str.w	r3, [r5, #2672]	; 0xa70
}

if (ladowarka.narysujPunktNaWykresieMin){
 8004e9e:	f8d5 3a74 	ldr.w	r3, [r5, #2676]	; 0xa74
 8004ea2:	b133      	cbz	r3, 8004eb2 <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004ea4:	6820      	ldr	r0, [r4, #0]
 8004ea6:	6803      	ldr	r3, [r0, #0]
 8004ea8:	691b      	ldr	r3, [r3, #16]
 8004eaa:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004eac:	2300      	movs	r3, #0
 8004eae:	f8c5 3a74 	str.w	r3, [r5, #2676]	; 0xa74
#endif



/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004eb2:	6820      	ldr	r0, [r4, #0]
 8004eb4:	6803      	ldr	r3, [r0, #0]
 8004eb6:	695b      	ldr	r3, [r3, #20]
 8004eb8:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004eba:	6820      	ldr	r0, [r4, #0]
 8004ebc:	6803      	ldr	r3, [r0, #0]
 8004ebe:	699b      	ldr	r3, [r3, #24]
 8004ec0:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 8004ec2:	6820      	ldr	r0, [r4, #0]
 8004ec4:	6803      	ldr	r3, [r0, #0]
}
 8004ec6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 8004eca:	69db      	ldr	r3, [r3, #28]
 8004ecc:	4718      	bx	r3
 8004ece:	bf00      	nop
 8004ed0:	20003af0 	.word	0x20003af0

08004ed4 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004ed4:	4770      	bx	lr

08004ed6 <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004ed6:	4770      	bx	lr

08004ed8 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004ed8:	4770      	bx	lr

08004eda <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004eda:	4770      	bx	lr

08004edc <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8004edc:	4770      	bx	lr

08004ede <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004ede:	4770      	bx	lr

08004ee0 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004ee0:	3804      	subs	r0, #4
 8004ee2:	4770      	bx	lr

08004ee4 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004ee4:	4770      	bx	lr

08004ee6 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8004ee6:	68c0      	ldr	r0, [r0, #12]
 8004ee8:	6803      	ldr	r3, [r0, #0]
 8004eea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eec:	4718      	bx	r3

08004eee <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8004eee:	f1a0 0004 	sub.w	r0, r0, #4
 8004ef2:	f7ff bff8 	b.w	8004ee6 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08004ef6 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8004ef6:	b510      	push	{r4, lr}
 8004ef8:	2110      	movs	r1, #16
 8004efa:	4604      	mov	r4, r0
 8004efc:	f01b faba 	bl	8020474 <_ZdlPvj>
 8004f00:	4620      	mov	r0, r4
 8004f02:	bd10      	pop	{r4, pc}

08004f04 <_ZThn4_N16Screen1PresenterD0Ev>:
 8004f04:	f1a0 0004 	sub.w	r0, r0, #4
 8004f08:	e7f5      	b.n	8004ef6 <_ZN16Screen1PresenterD0Ev>
	...

08004f0c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004f0c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004f0e:	2200      	movs	r2, #0
 8004f10:	6082      	str	r2, [r0, #8]
    : view(v)
 8004f12:	4a04      	ldr	r2, [pc, #16]	; (8004f24 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004f14:	60c1      	str	r1, [r0, #12]
 8004f16:	f102 0408 	add.w	r4, r2, #8
 8004f1a:	3224      	adds	r2, #36	; 0x24
 8004f1c:	6004      	str	r4, [r0, #0]
 8004f1e:	6042      	str	r2, [r0, #4]
}
 8004f20:	bd10      	pop	{r4, pc}
 8004f22:	bf00      	nop
 8004f24:	08023368 	.word	0x08023368

08004f28 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004f28:	4770      	bx	lr

08004f2a <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004f2a:	4770      	bx	lr

08004f2c <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8004f2c:	4b04      	ldr	r3, [pc, #16]	; (8004f40 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8004f2e:	681a      	ldr	r2, [r3, #0]
 8004f30:	4b04      	ldr	r3, [pc, #16]	; (8004f44 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8004f32:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8004f34:	2201      	movs	r2, #1
 8004f36:	611a      	str	r2, [r3, #16]
 ladowarka.ChargingTime=ChargingTime;
 8004f38:	4a03      	ldr	r2, [pc, #12]	; (8004f48 <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 8004f3a:	6812      	ldr	r2, [r2, #0]
 8004f3c:	60da      	str	r2, [r3, #12]
#endif
}
 8004f3e:	4770      	bx	lr
 8004f40:	20000018 	.word	0x20000018
 8004f44:	20003af0 	.word	0x20003af0
 8004f48:	20000014 	.word	0x20000014

08004f4c <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+10;
 8004f4c:	4b0b      	ldr	r3, [pc, #44]	; (8004f7c <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8004f4e:	681a      	ldr	r2, [r3, #0]
{
 8004f50:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+10;
 8004f52:	320a      	adds	r2, #10
	if (PradLadowania >400){
 8004f54:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004f58:	bfc8      	it	gt
 8004f5a:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8004f5e:	601a      	str	r2, [r3, #0]
{
 8004f60:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	4a06      	ldr	r2, [pc, #24]	; (8004f80 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004f66:	210a      	movs	r1, #10
 8004f68:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004f6c:	f00e ff24 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004f70:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004f74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004f78:	f00c bef7 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 8004f7c:	20000018 	.word	0x20000018
 8004f80:	080233ac 	.word	0x080233ac

08004f84 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-10;
 8004f84:	4b0a      	ldr	r3, [pc, #40]	; (8004fb0 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004f86:	681a      	ldr	r2, [r3, #0]
{
 8004f88:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-10;
 8004f8a:	3a0a      	subs	r2, #10
    if (PradLadowania <10){
 8004f8c:	2a09      	cmp	r2, #9
	PradLadowania=10;}
 8004f8e:	bfd8      	it	le
 8004f90:	220a      	movle	r2, #10
 8004f92:	601a      	str	r2, [r3, #0]
{
 8004f94:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f96:	681b      	ldr	r3, [r3, #0]
 8004f98:	4a06      	ldr	r2, [pc, #24]	; (8004fb4 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8004f9a:	210a      	movs	r1, #10
 8004f9c:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004fa0:	f00e ff0a 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004fa4:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004fa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004fac:	f00c bedd 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 8004fb0:	20000018 	.word	0x20000018
 8004fb4:	080233ac 	.word	0x080233ac

08004fb8 <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 8004fb8:	4b0a      	ldr	r3, [pc, #40]	; (8004fe4 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 8004fba:	681a      	ldr	r2, [r3, #0]
{
 8004fbc:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 8004fbe:	3201      	adds	r2, #1
	if (ChargingTime >10){
 8004fc0:	2a0a      	cmp	r2, #10
		ChargingTime=10;}
 8004fc2:	bfc8      	it	gt
 8004fc4:	220a      	movgt	r2, #10
 8004fc6:	601a      	str	r2, [r3, #0]
{
 8004fc8:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004fca:	681b      	ldr	r3, [r3, #0]
 8004fcc:	4a06      	ldr	r2, [pc, #24]	; (8004fe8 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 8004fce:	2103      	movs	r1, #3
 8004fd0:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8004fd4:	f00e fef0 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8004fd8:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8004fdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8004fe0:	f00c bec3 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 8004fe4:	20000014 	.word	0x20000014
 8004fe8:	080233ac 	.word	0x080233ac

08004fec <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 8004fec:	4b0a      	ldr	r3, [pc, #40]	; (8005018 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 8004fee:	681a      	ldr	r2, [r3, #0]
{
 8004ff0:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 8004ff2:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 8004ff4:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 8004ff6:	bfd8      	it	le
 8004ff8:	2201      	movle	r2, #1
 8004ffa:	601a      	str	r2, [r3, #0]
{
 8004ffc:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	4a06      	ldr	r2, [pc, #24]	; (800501c <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 8005002:	2103      	movs	r1, #3
 8005004:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8005008:	f00e fed6 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 800500c:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005010:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005014:	f00c bea9 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 8005018:	20000014 	.word	0x20000014
 800501c:	080233ac 	.word	0x080233ac

08005020 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8005020:	f7fd bd4b 	b.w	8002aba <_ZN15Screen1ViewBase11setupScreenEv>

08005024 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8005024:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8005026:	4b09      	ldr	r3, [pc, #36]	; (800504c <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005028:	4a09      	ldr	r2, [pc, #36]	; (8005050 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 800502a:	681b      	ldr	r3, [r3, #0]
 800502c:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 800502e:	4604      	mov	r4, r0
 8005030:	ab01      	add	r3, sp, #4
 8005032:	210a      	movs	r1, #10
 8005034:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8005038:	f00f f87a 	bl	8014130 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 800503c:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8005040:	b002      	add	sp, #8
 8005042:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8005046:	f00c be90 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 800504a:	bf00      	nop
 800504c:	20003af0 	.word	0x20003af0
 8005050:	080233af 	.word	0x080233af

08005054 <_ZN11Screen1ViewD0Ev>:
 8005054:	b510      	push	{r4, lr}
 8005056:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 800505a:	4604      	mov	r4, r0
 800505c:	f01b fa0a 	bl	8020474 <_ZdlPvj>
 8005060:	4620      	mov	r0, r4
 8005062:	bd10      	pop	{r4, pc}

08005064 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8005064:	b510      	push	{r4, lr}
 8005066:	4604      	mov	r4, r0
 8005068:	f7fd ffae 	bl	8002fc8 <_ZN15Screen1ViewBaseC1Ev>
 800506c:	4b07      	ldr	r3, [pc, #28]	; (800508c <_ZN11Screen1ViewC1Ev+0x28>)
 800506e:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005070:	4b07      	ldr	r3, [pc, #28]	; (8005090 <_ZN11Screen1ViewC1Ev+0x2c>)
 8005072:	4a08      	ldr	r2, [pc, #32]	; (8005094 <_ZN11Screen1ViewC1Ev+0x30>)
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	210a      	movs	r1, #10
 8005078:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 800507c:	f00e fe9c 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8005080:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 8005084:	f00c fe71 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005088:	4620      	mov	r0, r4
 800508a:	bd10      	pop	{r4, pc}
 800508c:	080233bc 	.word	0x080233bc
 8005090:	20000018 	.word	0x20000018
 8005094:	080233ac 	.word	0x080233ac

08005098 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8005098:	4770      	bx	lr

0800509a <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 800509a:	4770      	bx	lr

0800509c <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 800509c:	3804      	subs	r0, #4
 800509e:	4770      	bx	lr

080050a0 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 80050a0:	4770      	bx	lr

080050a2 <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 80050a2:	68c0      	ldr	r0, [r0, #12]
 80050a4:	6803      	ldr	r3, [r0, #0]
 80050a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050a8:	4718      	bx	r3

080050aa <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 80050aa:	f1a0 0004 	sub.w	r0, r0, #4
 80050ae:	f7ff bff8 	b.w	80050a2 <_ZN20ScreenGraphPresenter9DrawPointEv>

080050b2 <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 80050b2:	68c0      	ldr	r0, [r0, #12]
 80050b4:	6803      	ldr	r3, [r0, #0]
 80050b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80050b8:	4718      	bx	r3

080050ba <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 80050ba:	f1a0 0004 	sub.w	r0, r0, #4
 80050be:	f7ff bff8 	b.w	80050b2 <_ZN20ScreenGraphPresenter12DrawPointMinEv>

080050c2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 80050c2:	68c0      	ldr	r0, [r0, #12]
 80050c4:	6803      	ldr	r3, [r0, #0]
 80050c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050c8:	4718      	bx	r3

080050ca <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 80050ca:	f1a0 0004 	sub.w	r0, r0, #4
 80050ce:	f7ff bff8 	b.w	80050c2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

080050d2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 80050d2:	68c0      	ldr	r0, [r0, #12]
 80050d4:	6803      	ldr	r3, [r0, #0]
 80050d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80050d8:	4718      	bx	r3

080050da <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 80050da:	f1a0 0004 	sub.w	r0, r0, #4
 80050de:	f7ff bff8 	b.w	80050d2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

080050e2 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 80050e2:	68c0      	ldr	r0, [r0, #12]
 80050e4:	6803      	ldr	r3, [r0, #0]
 80050e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050e8:	4718      	bx	r3

080050ea <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 80050ea:	f1a0 0004 	sub.w	r0, r0, #4
 80050ee:	f7ff bff8 	b.w	80050e2 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

080050f2 <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 80050f2:	b510      	push	{r4, lr}
 80050f4:	2110      	movs	r1, #16
 80050f6:	4604      	mov	r4, r0
 80050f8:	f01b f9bc 	bl	8020474 <_ZdlPvj>
 80050fc:	4620      	mov	r0, r4
 80050fe:	bd10      	pop	{r4, pc}

08005100 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8005100:	f1a0 0004 	sub.w	r0, r0, #4
 8005104:	e7f5      	b.n	80050f2 <_ZN20ScreenGraphPresenterD0Ev>
	...

08005108 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8005108:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800510a:	2200      	movs	r2, #0
 800510c:	6082      	str	r2, [r0, #8]
    : view(v)
 800510e:	4a04      	ldr	r2, [pc, #16]	; (8005120 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8005110:	60c1      	str	r1, [r0, #12]
 8005112:	f102 0408 	add.w	r4, r2, #8
 8005116:	3234      	adds	r2, #52	; 0x34
 8005118:	6004      	str	r4, [r0, #0]
 800511a:	6042      	str	r2, [r0, #4]
}
 800511c:	bd10      	pop	{r4, pc}
 800511e:	bf00      	nop
 8005120:	08023400 	.word	0x08023400

08005124 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8005124:	4770      	bx	lr

08005126 <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8005126:	4770      	bx	lr

08005128 <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 8005128:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 800512a:	4915      	ldr	r1, [pc, #84]	; (8005180 <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 800512c:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005130:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 8005134:	2200      	movs	r2, #0
		if ((ladowarka.PomiaryCoSec[i] < results) && ladowarka.PomiaryCoSec[i]!=0)  results=ladowarka.PomiaryCoSec[i];
 8005136:	f6a1 1178 	subw	r1, r1, #2424	; 0x978
 800513a:	f202 235e 	addw	r3, r2, #606	; 0x25e
 800513e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8005142:	edd3 7a00 	vldr	s15, [r3]
 8005146:	eef4 7ac0 	vcmpe.f32	s15, s0
 800514a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800514e:	d508      	bpl.n	8005162 <_ZN15ScreenGraphView8countMinEv+0x3a>
 8005150:	edd3 7a00 	vldr	s15, [r3]
 8005154:	eef5 7a40 	vcmp.f32	s15, #0.0
 8005158:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800515c:	bf18      	it	ne
 800515e:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 8005162:	3201      	adds	r2, #1
 8005164:	2a3b      	cmp	r2, #59	; 0x3b
 8005166:	d1e8      	bne.n	800513a <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 8005168:	ed9f 8a06 	vldr	s16, [pc, #24]	; 8005184 <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 800516c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005170:	f01b f9ea 	bl	8020548 <floorf>
#else
	return 1.5;
#endif
}
 8005174:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005178:	ecbd 8b02 	vpop	{d8}
 800517c:	bd08      	pop	{r3, pc}
 800517e:	bf00      	nop
 8005180:	20004468 	.word	0x20004468
 8005184:	42c80000 	.word	0x42c80000

08005188 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 8005188:	b508      	push	{r3, lr}
 800518a:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 800518e:	ed9f 0a10 	vldr	s0, [pc, #64]	; 80051d0 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 8005192:	4910      	ldr	r1, [pc, #64]	; (80051d4 <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 8005194:	2300      	movs	r3, #0
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 8005196:	f203 225e 	addw	r2, r3, #606	; 0x25e
 800519a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 800519e:	edd2 7a00 	vldr	s15, [r2]
 80051a2:	eef4 7ac0 	vcmpe.f32	s15, s0
 80051a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 80051aa:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051ae:	bfc8      	it	gt
 80051b0:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 80051b4:	2b3b      	cmp	r3, #59	; 0x3b
 80051b6:	d1ee      	bne.n	8005196 <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 80051b8:	ed9f 8a07 	vldr	s16, [pc, #28]	; 80051d8 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 80051bc:	ee20 0a08 	vmul.f32	s0, s0, s16
 80051c0:	f01b f980 	bl	80204c4 <ceilf>


#else
	return 1.5;
#endif
}
 80051c4:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80051c8:	ecbd 8b02 	vpop	{d8}
 80051cc:	bd08      	pop	{r3, pc}
 80051ce:	bf00      	nop
 80051d0:	00000000 	.word	0x00000000
 80051d4:	20003af0 	.word	0x20003af0
 80051d8:	42c80000 	.word	0x42c80000

080051dc <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.CzsasLadowaniaWSec;
 80051dc:	4b11      	ldr	r3, [pc, #68]	; (8005224 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 80051de:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 80051e0:	f8d3 2a78 	ldr.w	r2, [r3, #2680]	; 0xa78
	m = (sec -(3600*h))/60;
 80051e4:	4910      	ldr	r1, [pc, #64]	; (8005228 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 80051e6:	4604      	mov	r4, r0
	h = (sec/3600);
 80051e8:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 80051ec:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 80051f0:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 80051f4:	fb01 2203 	mla	r2, r1, r3, r2
 80051f8:	213c      	movs	r1, #60	; 0x3c
 80051fa:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 80051fe:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 8005202:	f504 5099 	add.w	r0, r4, #4896	; 0x1320
 8005206:	e9cd 1200 	strd	r1, r2, [sp]
 800520a:	300c      	adds	r0, #12
 800520c:	4a07      	ldr	r2, [pc, #28]	; (800522c <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 800520e:	210a      	movs	r1, #10
 8005210:	f00e fdd2 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8005214:	f504 5093 	add.w	r0, r4, #4704	; 0x1260
 8005218:	3014      	adds	r0, #20
}
 800521a:	b002      	add	sp, #8
 800521c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 8005220:	f00c bda3 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 8005224:	20003af0 	.word	0x20003af0
 8005228:	fffff1f0 	.word	0xfffff1f0
 800522c:	08023454 	.word	0x08023454

08005230 <_ZN15ScreenGraphViewD0Ev>:
 8005230:	b510      	push	{r4, lr}
 8005232:	f242 6118 	movw	r1, #9752	; 0x2618
 8005236:	4604      	mov	r4, r0
 8005238:	f01b f91c 	bl	8020474 <_ZdlPvj>
 800523c:	4620      	mov	r0, r4
 800523e:	bd10      	pop	{r4, pc}

08005240 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8005240:	b510      	push	{r4, lr}
 8005242:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8005244:	f7fe fdf3 	bl	8003e2e <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8005248:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 800524c:	edd2 7a50 	vldr	s15, [r2, #320]	; 0x140
 8005250:	ed9f 6a91 	vldr	s12, [pc, #580]	; 8005498 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 8005254:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005258:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 800525c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005260:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005264:	f2c0 809f 	blt.w	80053a6 <_ZN15ScreenGraphView11setupScreenEv+0x166>
            return (int)(fs + 0.5f);
 8005268:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800526c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005270:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005274:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8005278:	edd2 7a40 	vldr	s15, [r2, #256]	; 0x100
 800527c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8005280:	2b00      	cmp	r3, #0
 8005282:	ee67 7a86 	vmul.f32	s15, s15, s12
 8005286:	bfb8      	it	lt
 8005288:	425b      	neglt	r3, r3
        if (fs >= 0)
 800528a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800528e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 8005292:	f8c2 3144 	str.w	r3, [r2, #324]	; 0x144
 8005296:	f2c0 809a 	blt.w	80053ce <_ZN15ScreenGraphView11setupScreenEv+0x18e>
            return (int)(fs + 0.5f);
 800529a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800529e:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052a6:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80052aa:	edd2 7a20 	vldr	s15, [r2, #128]	; 0x80
 80052ae:	ed9f 7a7b 	vldr	s14, [pc, #492]	; 800549c <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 80052b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80052bc:	bfb8      	it	lt
 80052be:	425b      	neglt	r3, r3
        if (fs >= 0)
 80052c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 80052c8:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
 80052cc:	f2c0 8093 	blt.w	80053f6 <_ZN15ScreenGraphView11setupScreenEv+0x1b6>
            return (int)(fs + 0.5f);
 80052d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052dc:	ee17 3a90 	vmov	r3, s15
 80052e0:	2b00      	cmp	r3, #0
 80052e2:	bfb8      	it	lt
 80052e4:	425b      	neglt	r3, r3
 80052e6:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
        const float fs = f * (float)scale;
 80052ea:	f8d4 3d70 	ldr.w	r3, [r4, #3440]	; 0xd70
 80052ee:	ed9f 6a6c 	vldr	s12, [pc, #432]	; 80054a0 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 80052f2:	ee07 3a90 	vmov	s15, r3
 80052f6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80052fa:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 80052fe:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005302:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005306:	f2c0 808a 	blt.w	800541e <_ZN15ScreenGraphView11setupScreenEv+0x1de>
            return (int)(fs + 0.5f);
 800530a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800530e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005312:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005316:	ee17 3a90 	vmov	r3, s15
 800531a:	2b00      	cmp	r3, #0
 800531c:	bfb8      	it	lt
 800531e:	425b      	neglt	r3, r3
 8005320:	f8c4 3d74 	str.w	r3, [r4, #3444]	; 0xd74
        const float fs = f * (float)scale;
 8005324:	f8d4 3ce4 	ldr.w	r3, [r4, #3300]	; 0xce4
 8005328:	ee07 3a90 	vmov	s15, r3
 800532c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005330:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 8005334:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800533c:	f2c0 8083 	blt.w	8005446 <_ZN15ScreenGraphView11setupScreenEv+0x206>
            return (int)(fs + 0.5f);
 8005340:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005344:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005348:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800534c:	ee17 3a90 	vmov	r3, s15
 8005350:	2b00      	cmp	r3, #0
 8005352:	bfb8      	it	lt
 8005354:	425b      	neglt	r3, r3
 8005356:	f8c4 3ce8 	str.w	r3, [r4, #3304]	; 0xce8
        const float fs = f * (float)scale;
 800535a:	f8d4 3c64 	ldr.w	r3, [r4, #3172]	; 0xc64
 800535e:	ed9f 7a51 	vldr	s14, [pc, #324]	; 80054a4 <_ZN15ScreenGraphView11setupScreenEv+0x264>
 8005362:	ee07 3a90 	vmov	s15, r3
 8005366:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800536a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800536e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005376:	db7a      	blt.n	800546e <_ZN15ScreenGraphView11setupScreenEv+0x22e>
            return (int)(fs + 0.5f);
 8005378:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800537c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005380:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005384:	ee17 3a90 	vmov	r3, s15
 8005388:	2b00      	cmp	r3, #0
 800538a:	bfb8      	it	lt
 800538c:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 800538e:	f604 508c 	addw	r0, r4, #3468	; 0xd8c
 8005392:	f8c4 3c68 	str.w	r3, [r4, #3176]	; 0xc68
 8005396:	f00c fce8 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 800539a:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 800539e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 80053a2:	f00c bce2 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80053a6:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80053aa:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80053ae:	ee16 3a90 	vmov	r3, s13
 80053b2:	ee37 7a67 	vsub.f32	s14, s14, s15
 80053b6:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80053ba:	ee37 7a27 	vadd.f32	s14, s14, s15
 80053be:	3b01      	subs	r3, #1
 80053c0:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80053c4:	ee17 1a10 	vmov	r1, s14
 80053c8:	4419      	add	r1, r3
 80053ca:	460b      	mov	r3, r1
 80053cc:	e754      	b.n	8005278 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 80053ce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80053d2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80053d6:	ee17 3a10 	vmov	r3, s14
 80053da:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80053de:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80053e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80053e6:	3b01      	subs	r3, #1
 80053e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053ec:	ee17 1a90 	vmov	r1, s15
 80053f0:	4419      	add	r1, r3
 80053f2:	460b      	mov	r3, r1
 80053f4:	e759      	b.n	80052aa <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 80053f6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80053fa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80053fe:	ee17 3a10 	vmov	r3, s14
 8005402:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005406:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800540a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800540e:	3b01      	subs	r3, #1
 8005410:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005414:	ee17 1a90 	vmov	r1, s15
 8005418:	4419      	add	r1, r3
 800541a:	460b      	mov	r3, r1
 800541c:	e760      	b.n	80052e0 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 800541e:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005422:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8005426:	ee16 3a90 	vmov	r3, s13
 800542a:	ee37 7a67 	vsub.f32	s14, s14, s15
 800542e:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005432:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005436:	3b01      	subs	r3, #1
 8005438:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800543c:	ee17 2a10 	vmov	r2, s14
 8005440:	441a      	add	r2, r3
 8005442:	4613      	mov	r3, r2
 8005444:	e769      	b.n	800531a <_ZN15ScreenGraphView11setupScreenEv+0xda>
 8005446:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800544a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800544e:	ee17 3a10 	vmov	r3, s14
 8005452:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005456:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800545a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800545e:	3b01      	subs	r3, #1
 8005460:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005464:	ee17 2a90 	vmov	r2, s15
 8005468:	441a      	add	r2, r3
 800546a:	4613      	mov	r3, r2
 800546c:	e770      	b.n	8005350 <_ZN15ScreenGraphView11setupScreenEv+0x110>
 800546e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005472:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005476:	ee17 3a10 	vmov	r3, s14
 800547a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800547e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005482:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005486:	3b01      	subs	r3, #1
 8005488:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800548c:	ee17 2a90 	vmov	r2, s15
 8005490:	441a      	add	r2, r3
 8005492:	4613      	mov	r3, r2
 8005494:	e778      	b.n	8005388 <_ZN15ScreenGraphView11setupScreenEv+0x148>
 8005496:	bf00      	nop
 8005498:	3c23d70a 	.word	0x3c23d70a
 800549c:	3ba3d70a 	.word	0x3ba3d70a
 80054a0:	3dcccccd 	.word	0x3dcccccd
 80054a4:	3d4ccccd 	.word	0x3d4ccccd

080054a8 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 80054a8:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 80054aa:	4b09      	ldr	r3, [pc, #36]	; (80054d0 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x28>)
 80054ac:	4a09      	ldr	r2, [pc, #36]	; (80054d4 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 80054ae:	681b      	ldr	r3, [r3, #0]
 80054b0:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 80054b2:	4604      	mov	r4, r0
 80054b4:	ab01      	add	r3, sp, #4
 80054b6:	2104      	movs	r1, #4
 80054b8:	f500 509a 	add.w	r0, r0, #4928	; 0x1340
 80054bc:	f00e fe38 	bl	8014130 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 80054c0:	f504 5096 	add.w	r0, r4, #4800	; 0x12c0
}
 80054c4:	b002      	add	sp, #8
 80054c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 80054ca:	f00c bc4e 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 80054ce:	bf00      	nop
 80054d0:	2000456c 	.word	0x2000456c
 80054d4:	08023464 	.word	0x08023464

080054d8 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 80054d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 80054da:	4d11      	ldr	r5, [pc, #68]	; (8005520 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 80054dc:	4a11      	ldr	r2, [pc, #68]	; (8005524 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 80054de:	682b      	ldr	r3, [r5, #0]
 80054e0:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 80054e2:	4604      	mov	r4, r0
 80054e4:	f500 5098 	add.w	r0, r0, #4864	; 0x1300
 80054e8:	ab01      	add	r3, sp, #4
 80054ea:	2108      	movs	r1, #8
 80054ec:	300c      	adds	r0, #12
 80054ee:	f00e fe1f 	bl	8014130 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 80054f2:	686b      	ldr	r3, [r5, #4]
 80054f4:	4a0b      	ldr	r2, [pc, #44]	; (8005524 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 80054f6:	9301      	str	r3, [sp, #4]
 80054f8:	f504 5098 	add.w	r0, r4, #4864	; 0x1300
 80054fc:	ab01      	add	r3, sp, #4
 80054fe:	2108      	movs	r1, #8
 8005500:	301c      	adds	r0, #28
 8005502:	f00e fe15 	bl	8014130 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8005506:	f504 5091 	add.w	r0, r4, #4640	; 0x1220
 800550a:	3008      	adds	r0, #8
 800550c:	f00c fc2d 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 8005510:	f504 508e 	add.w	r0, r4, #4544	; 0x11c0
 8005514:	301c      	adds	r0, #28
}
 8005516:	b003      	add	sp, #12
 8005518:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 800551c:	f00c bc25 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 8005520:	20003af0 	.word	0x20003af0
 8005524:	080233af 	.word	0x080233af

08005528 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005528:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800552a:	4b24      	ldr	r3, [pc, #144]	; (80055bc <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 800552c:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 8005530:	f8d0 3dc0 	ldr.w	r3, [r0, #3520]	; 0xdc0
 8005534:	ee07 3a90 	vmov	s15, r3
 8005538:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 800553c:	ed2d 8b02 	vpush	{d8}
 8005540:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005544:	4604      	mov	r4, r0
        if (fs >= 0)
 8005546:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800554a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800554e:	f600 558c 	addw	r5, r0, #3468	; 0xd8c
 8005552:	db1e      	blt.n	8005592 <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 8005554:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005558:	ee77 7a87 	vadd.f32	s15, s15, s14
 800555c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005560:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005564:	4628      	mov	r0, r5
 8005566:	f007 f815 	bl	800c594 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 800556a:	6823      	ldr	r3, [r4, #0]
 800556c:	4620      	mov	r0, r4
 800556e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005570:	4798      	blx	r3
 8005572:	6823      	ldr	r3, [r4, #0]
 8005574:	4620      	mov	r0, r4
 8005576:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005578:	eeb0 8a40 	vmov.f32	s16, s0
 800557c:	4798      	blx	r3
 800557e:	4628      	mov	r0, r5
 8005580:	eef0 0a40 	vmov.f32	s1, s0
 8005584:	eeb0 0a48 	vmov.f32	s0, s16
 8005588:	f7fe f912 	bl	80037b0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 800558c:	ecbd 8b02 	vpop	{d8}
 8005590:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005592:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005596:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800559a:	ee17 3a10 	vmov	r3, s14
 800559e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80055a2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80055a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055aa:	1e59      	subs	r1, r3, #1
 80055ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055b0:	ee17 3a90 	vmov	r3, s15
 80055b4:	440b      	add	r3, r1
 80055b6:	4619      	mov	r1, r3
 80055b8:	e7d4      	b.n	8005564 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 80055ba:	bf00      	nop
 80055bc:	20003af0 	.word	0x20003af0

080055c0 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
void ScreenGraphView::DrawPoint2Min(){
 80055c0:	b570      	push	{r4, r5, r6, lr}
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 80055c2:	4d52      	ldr	r5, [pc, #328]	; (800570c <_ZN15ScreenGraphView13DrawPoint2MinEv+0x14c>)
        const float fs = f * (float)scale;
 80055c4:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80055c8:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 80055cc:	223c      	movs	r2, #60	; 0x3c
 80055ce:	fb93 f3f2 	sdiv	r3, r3, r2
 80055d2:	3306      	adds	r3, #6
 80055d4:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80055d8:	ed93 7a00 	vldr	s14, [r3]
 80055dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2Min(){
 80055e0:	ed2d 8b02 	vpush	{d8}
 80055e4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80055e8:	4604      	mov	r4, r0
        if (fs >= 0)
 80055ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 80055f2:	f500 7680 	add.w	r6, r0, #256	; 0x100
 80055f6:	db74      	blt.n	80056e2 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x122>
            return (int)(fs + 0.5f);
 80055f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80055fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005600:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005604:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005608:	4630      	mov	r0, r6
 800560a:	f006 ffc3 	bl	800c594 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	    dynamicGraph2.setGraphRangeY((floor(ladowarka.NapiecieBaterii[0]*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10) );
 800560e:	ed95 0a06 	vldr	s0, [r5, #24]
 8005612:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 8005616:	ee20 0a08 	vmul.f32	s0, s0, s16
 800561a:	f01a ff95 	bl	8020548 <floorf>
 800561e:	eef0 8a40 	vmov.f32	s17, s0
 8005622:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 8005626:	ee20 0a08 	vmul.f32	s0, s0, s16
 800562a:	f01a ff4b 	bl	80204c4 <ceilf>
 800562e:	4630      	mov	r0, r6
 8005630:	eec0 0a08 	vdiv.f32	s1, s0, s16
 8005634:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005638:	f7fe f8ba 	bl	80037b0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.CzsasLadowaniaWSec>9*60 && ladowarka.CzsasLadowaniaWSec <59*60){ //jesli czas jest >9min i <59 min
 800563c:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8005640:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 8005644:	dd23      	ble.n	800568e <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
 8005646:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 800564a:	f640 53d3 	movw	r3, #3539	; 0xdd3
 800564e:	429a      	cmp	r2, r3
 8005650:	dc1d      	bgt.n	800568e <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
		dynamicGraph2.setGraphRangeX(0,60);
 8005652:	223c      	movs	r2, #60	; 0x3c
 8005654:	2100      	movs	r1, #0
 8005656:	4630      	mov	r0, r6
 8005658:	f7fe f814 	bl	8003684 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 800565c:	f8d4 2ca4 	ldr.w	r2, [r4, #3236]	; 0xca4
        return i * scale;
 8005660:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	; 0xd24
 8005664:	210a      	movs	r1, #10
 8005666:	434a      	muls	r2, r1
 8005668:	2a00      	cmp	r2, #0
 800566a:	bfb8      	it	lt
 800566c:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 800566e:	f8c4 2ca8 	str.w	r2, [r4, #3240]	; 0xca8
        setIntervalScaled(abs(interval) * dataScale);
 8005672:	f8d4 2c24 	ldr.w	r2, [r4, #3108]	; 0xc24
 8005676:	0052      	lsls	r2, r2, #1
 8005678:	434b      	muls	r3, r1
 800567a:	2a00      	cmp	r2, #0
 800567c:	bfb8      	it	lt
 800567e:	4252      	neglt	r2, r2
 8005680:	2b00      	cmp	r3, #0
 8005682:	bfb8      	it	lt
 8005684:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 8005686:	f8c4 2c28 	str.w	r2, [r4, #3112]	; 0xc28
 800568a:	f8c4 3d28 	str.w	r3, [r4, #3368]	; 0xd28
	if (ladowarka.CzsasLadowaniaWSec >59*60){ //jesli czas jest >59 min
 800568e:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8005692:	f640 53d4 	movw	r3, #3540	; 0xdd4
 8005696:	429a      	cmp	r2, r3
 8005698:	dd20      	ble.n	80056dc <_ZN15ScreenGraphView13DrawPoint2MinEv+0x11c>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 800569a:	68ea      	ldr	r2, [r5, #12]
 800569c:	253c      	movs	r5, #60	; 0x3c
 800569e:	436a      	muls	r2, r5
 80056a0:	2100      	movs	r1, #0
 80056a2:	4630      	mov	r0, r6
 80056a4:	f7fd ffee 	bl	8003684 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 80056a8:	f8d4 2ca4 	ldr.w	r2, [r4, #3236]	; 0xca4
 80056ac:	436a      	muls	r2, r5
 80056ae:	2a00      	cmp	r2, #0
 80056b0:	bfb8      	it	lt
 80056b2:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80056b4:	f8c4 2ca8 	str.w	r2, [r4, #3240]	; 0xca8
        setIntervalScaled(abs(interval) * dataScale);
 80056b8:	f8d4 2c24 	ldr.w	r2, [r4, #3108]	; 0xc24
 80056bc:	230a      	movs	r3, #10
 80056be:	435a      	muls	r2, r3
 80056c0:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	; 0xd24
 80056c4:	2a00      	cmp	r2, #0
 80056c6:	fb05 f303 	mul.w	r3, r5, r3
 80056ca:	bfb8      	it	lt
 80056cc:	4252      	neglt	r2, r2
 80056ce:	2b00      	cmp	r3, #0
 80056d0:	bfb8      	it	lt
 80056d2:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 80056d4:	f8c4 2c28 	str.w	r2, [r4, #3112]	; 0xc28
 80056d8:	f8c4 3d28 	str.w	r3, [r4, #3368]	; 0xd28
}
 80056dc:	ecbd 8b02 	vpop	{d8}
 80056e0:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80056e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80056e6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80056ea:	ee17 3a10 	vmov	r3, s14
 80056ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80056f2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80056f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80056fa:	1e59      	subs	r1, r3, #1
 80056fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005700:	ee17 3a90 	vmov	r3, s15
 8005704:	440b      	add	r3, r1
 8005706:	4619      	mov	r1, r3
 8005708:	e77e      	b.n	8005608 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x48>
 800570a:	bf00      	nop
 800570c:	20003af0 	.word	0x20003af0

08005710 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8005710:	b510      	push	{r4, lr}
 8005712:	4604      	mov	r4, r0
 8005714:	f7fe fd34 	bl	8004180 <_ZN19ScreenGraphViewBaseC1Ev>
 8005718:	4b01      	ldr	r3, [pc, #4]	; (8005720 <_ZN15ScreenGraphViewC1Ev+0x10>)
 800571a:	6023      	str	r3, [r4, #0]
}
 800571c:	4620      	mov	r0, r4
 800571e:	bd10      	pop	{r4, pc}
 8005720:	08023470 	.word	0x08023470

08005724 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005724:	20f0      	movs	r0, #240	; 0xf0
 8005726:	4770      	bx	lr

08005728 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005728:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800572c:	4770      	bx	lr

0800572e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800572e:	2029      	movs	r0, #41	; 0x29
 8005730:	f7fc b940 	b.w	80019b4 <LCD_IO_WriteReg>

08005734 <ili9341_DisplayOff>:
 8005734:	2028      	movs	r0, #40	; 0x28
 8005736:	f7fc b93d 	b.w	80019b4 <LCD_IO_WriteReg>

0800573a <ili9341_Init>:
{
 800573a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800573c:	f7fc f90e 	bl	800195c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8005740:	20ca      	movs	r0, #202	; 0xca
 8005742:	f7fc f937 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005746:	20c3      	movs	r0, #195	; 0xc3
 8005748:	f7fc f918 	bl	800197c <LCD_IO_WriteData>
 800574c:	2008      	movs	r0, #8
 800574e:	f7fc f915 	bl	800197c <LCD_IO_WriteData>
 8005752:	2050      	movs	r0, #80	; 0x50
 8005754:	f7fc f912 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005758:	20cf      	movs	r0, #207	; 0xcf
 800575a:	f7fc f92b 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800575e:	2000      	movs	r0, #0
 8005760:	f7fc f90c 	bl	800197c <LCD_IO_WriteData>
 8005764:	20c1      	movs	r0, #193	; 0xc1
 8005766:	f7fc f909 	bl	800197c <LCD_IO_WriteData>
 800576a:	2030      	movs	r0, #48	; 0x30
 800576c:	f7fc f906 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005770:	20ed      	movs	r0, #237	; 0xed
 8005772:	f7fc f91f 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005776:	2064      	movs	r0, #100	; 0x64
 8005778:	f7fc f900 	bl	800197c <LCD_IO_WriteData>
 800577c:	2003      	movs	r0, #3
 800577e:	f7fc f8fd 	bl	800197c <LCD_IO_WriteData>
 8005782:	2012      	movs	r0, #18
 8005784:	f7fc f8fa 	bl	800197c <LCD_IO_WriteData>
 8005788:	2081      	movs	r0, #129	; 0x81
 800578a:	f7fc f8f7 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800578e:	20e8      	movs	r0, #232	; 0xe8
 8005790:	f7fc f910 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005794:	2085      	movs	r0, #133	; 0x85
 8005796:	f7fc f8f1 	bl	800197c <LCD_IO_WriteData>
 800579a:	2000      	movs	r0, #0
 800579c:	f7fc f8ee 	bl	800197c <LCD_IO_WriteData>
 80057a0:	2078      	movs	r0, #120	; 0x78
 80057a2:	f7fc f8eb 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057a6:	20cb      	movs	r0, #203	; 0xcb
 80057a8:	f7fc f904 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057ac:	2039      	movs	r0, #57	; 0x39
 80057ae:	f7fc f8e5 	bl	800197c <LCD_IO_WriteData>
 80057b2:	202c      	movs	r0, #44	; 0x2c
 80057b4:	f7fc f8e2 	bl	800197c <LCD_IO_WriteData>
 80057b8:	2000      	movs	r0, #0
 80057ba:	f7fc f8df 	bl	800197c <LCD_IO_WriteData>
 80057be:	2034      	movs	r0, #52	; 0x34
 80057c0:	f7fc f8dc 	bl	800197c <LCD_IO_WriteData>
 80057c4:	2002      	movs	r0, #2
 80057c6:	f7fc f8d9 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057ca:	20f7      	movs	r0, #247	; 0xf7
 80057cc:	f7fc f8f2 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057d0:	2020      	movs	r0, #32
 80057d2:	f7fc f8d3 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057d6:	20ea      	movs	r0, #234	; 0xea
 80057d8:	f7fc f8ec 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057dc:	2000      	movs	r0, #0
 80057de:	f7fc f8cd 	bl	800197c <LCD_IO_WriteData>
 80057e2:	2000      	movs	r0, #0
 80057e4:	f7fc f8ca 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057e8:	20b1      	movs	r0, #177	; 0xb1
 80057ea:	f7fc f8e3 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057ee:	2000      	movs	r0, #0
 80057f0:	f7fc f8c4 	bl	800197c <LCD_IO_WriteData>
 80057f4:	201b      	movs	r0, #27
 80057f6:	f7fc f8c1 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057fa:	20b6      	movs	r0, #182	; 0xb6
 80057fc:	f7fc f8da 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005800:	200a      	movs	r0, #10
 8005802:	f7fc f8bb 	bl	800197c <LCD_IO_WriteData>
 8005806:	20a2      	movs	r0, #162	; 0xa2
 8005808:	f7fc f8b8 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800580c:	20c0      	movs	r0, #192	; 0xc0
 800580e:	f7fc f8d1 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005812:	2010      	movs	r0, #16
 8005814:	f7fc f8b2 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005818:	20c1      	movs	r0, #193	; 0xc1
 800581a:	f7fc f8cb 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800581e:	2010      	movs	r0, #16
 8005820:	f7fc f8ac 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005824:	20c5      	movs	r0, #197	; 0xc5
 8005826:	f7fc f8c5 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800582a:	2045      	movs	r0, #69	; 0x45
 800582c:	f7fc f8a6 	bl	800197c <LCD_IO_WriteData>
 8005830:	2015      	movs	r0, #21
 8005832:	f7fc f8a3 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005836:	20c7      	movs	r0, #199	; 0xc7
 8005838:	f7fc f8bc 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800583c:	2090      	movs	r0, #144	; 0x90
 800583e:	f7fc f89d 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005842:	2036      	movs	r0, #54	; 0x36
 8005844:	f7fc f8b6 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005848:	20c8      	movs	r0, #200	; 0xc8
 800584a:	f7fc f897 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800584e:	20f2      	movs	r0, #242	; 0xf2
 8005850:	f7fc f8b0 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005854:	2000      	movs	r0, #0
 8005856:	f7fc f891 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800585a:	20b0      	movs	r0, #176	; 0xb0
 800585c:	f7fc f8aa 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005860:	20c2      	movs	r0, #194	; 0xc2
 8005862:	f7fc f88b 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005866:	20b6      	movs	r0, #182	; 0xb6
 8005868:	f7fc f8a4 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800586c:	200a      	movs	r0, #10
 800586e:	f7fc f885 	bl	800197c <LCD_IO_WriteData>
 8005872:	20a7      	movs	r0, #167	; 0xa7
 8005874:	f7fc f882 	bl	800197c <LCD_IO_WriteData>
 8005878:	2027      	movs	r0, #39	; 0x27
 800587a:	f7fc f87f 	bl	800197c <LCD_IO_WriteData>
 800587e:	2004      	movs	r0, #4
 8005880:	f7fc f87c 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005884:	202a      	movs	r0, #42	; 0x2a
 8005886:	f7fc f895 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800588a:	2000      	movs	r0, #0
 800588c:	f7fc f876 	bl	800197c <LCD_IO_WriteData>
 8005890:	2000      	movs	r0, #0
 8005892:	f7fc f873 	bl	800197c <LCD_IO_WriteData>
 8005896:	2000      	movs	r0, #0
 8005898:	f7fc f870 	bl	800197c <LCD_IO_WriteData>
 800589c:	20ef      	movs	r0, #239	; 0xef
 800589e:	f7fc f86d 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058a2:	202b      	movs	r0, #43	; 0x2b
 80058a4:	f7fc f886 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058a8:	2000      	movs	r0, #0
 80058aa:	f7fc f867 	bl	800197c <LCD_IO_WriteData>
 80058ae:	2000      	movs	r0, #0
 80058b0:	f7fc f864 	bl	800197c <LCD_IO_WriteData>
 80058b4:	2001      	movs	r0, #1
 80058b6:	f7fc f861 	bl	800197c <LCD_IO_WriteData>
 80058ba:	203f      	movs	r0, #63	; 0x3f
 80058bc:	f7fc f85e 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058c0:	20f6      	movs	r0, #246	; 0xf6
 80058c2:	f7fc f877 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058c6:	2001      	movs	r0, #1
 80058c8:	f7fc f858 	bl	800197c <LCD_IO_WriteData>
 80058cc:	2000      	movs	r0, #0
 80058ce:	f7fc f855 	bl	800197c <LCD_IO_WriteData>
 80058d2:	2006      	movs	r0, #6
 80058d4:	f7fc f852 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058d8:	202c      	movs	r0, #44	; 0x2c
 80058da:	f7fc f86b 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80058de:	20c8      	movs	r0, #200	; 0xc8
 80058e0:	f7fc f8b6 	bl	8001a50 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80058e4:	2026      	movs	r0, #38	; 0x26
 80058e6:	f7fc f865 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058ea:	2001      	movs	r0, #1
 80058ec:	f7fc f846 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058f0:	20e0      	movs	r0, #224	; 0xe0
 80058f2:	f7fc f85f 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058f6:	200f      	movs	r0, #15
 80058f8:	f7fc f840 	bl	800197c <LCD_IO_WriteData>
 80058fc:	2029      	movs	r0, #41	; 0x29
 80058fe:	f7fc f83d 	bl	800197c <LCD_IO_WriteData>
 8005902:	2024      	movs	r0, #36	; 0x24
 8005904:	f7fc f83a 	bl	800197c <LCD_IO_WriteData>
 8005908:	200c      	movs	r0, #12
 800590a:	f7fc f837 	bl	800197c <LCD_IO_WriteData>
 800590e:	200e      	movs	r0, #14
 8005910:	f7fc f834 	bl	800197c <LCD_IO_WriteData>
 8005914:	2009      	movs	r0, #9
 8005916:	f7fc f831 	bl	800197c <LCD_IO_WriteData>
 800591a:	204e      	movs	r0, #78	; 0x4e
 800591c:	f7fc f82e 	bl	800197c <LCD_IO_WriteData>
 8005920:	2078      	movs	r0, #120	; 0x78
 8005922:	f7fc f82b 	bl	800197c <LCD_IO_WriteData>
 8005926:	203c      	movs	r0, #60	; 0x3c
 8005928:	f7fc f828 	bl	800197c <LCD_IO_WriteData>
 800592c:	2009      	movs	r0, #9
 800592e:	f7fc f825 	bl	800197c <LCD_IO_WriteData>
 8005932:	2013      	movs	r0, #19
 8005934:	f7fc f822 	bl	800197c <LCD_IO_WriteData>
 8005938:	2005      	movs	r0, #5
 800593a:	f7fc f81f 	bl	800197c <LCD_IO_WriteData>
 800593e:	2017      	movs	r0, #23
 8005940:	f7fc f81c 	bl	800197c <LCD_IO_WriteData>
 8005944:	2011      	movs	r0, #17
 8005946:	f7fc f819 	bl	800197c <LCD_IO_WriteData>
 800594a:	2000      	movs	r0, #0
 800594c:	f7fc f816 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005950:	20e1      	movs	r0, #225	; 0xe1
 8005952:	f7fc f82f 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005956:	2000      	movs	r0, #0
 8005958:	f7fc f810 	bl	800197c <LCD_IO_WriteData>
 800595c:	2016      	movs	r0, #22
 800595e:	f7fc f80d 	bl	800197c <LCD_IO_WriteData>
 8005962:	201b      	movs	r0, #27
 8005964:	f7fc f80a 	bl	800197c <LCD_IO_WriteData>
 8005968:	2004      	movs	r0, #4
 800596a:	f7fc f807 	bl	800197c <LCD_IO_WriteData>
 800596e:	2011      	movs	r0, #17
 8005970:	f7fc f804 	bl	800197c <LCD_IO_WriteData>
 8005974:	2007      	movs	r0, #7
 8005976:	f7fc f801 	bl	800197c <LCD_IO_WriteData>
 800597a:	2031      	movs	r0, #49	; 0x31
 800597c:	f7fb fffe 	bl	800197c <LCD_IO_WriteData>
 8005980:	2033      	movs	r0, #51	; 0x33
 8005982:	f7fb fffb 	bl	800197c <LCD_IO_WriteData>
 8005986:	2042      	movs	r0, #66	; 0x42
 8005988:	f7fb fff8 	bl	800197c <LCD_IO_WriteData>
 800598c:	2005      	movs	r0, #5
 800598e:	f7fb fff5 	bl	800197c <LCD_IO_WriteData>
 8005992:	200c      	movs	r0, #12
 8005994:	f7fb fff2 	bl	800197c <LCD_IO_WriteData>
 8005998:	200a      	movs	r0, #10
 800599a:	f7fb ffef 	bl	800197c <LCD_IO_WriteData>
 800599e:	2028      	movs	r0, #40	; 0x28
 80059a0:	f7fb ffec 	bl	800197c <LCD_IO_WriteData>
 80059a4:	202f      	movs	r0, #47	; 0x2f
 80059a6:	f7fb ffe9 	bl	800197c <LCD_IO_WriteData>
 80059aa:	200f      	movs	r0, #15
 80059ac:	f7fb ffe6 	bl	800197c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059b0:	2011      	movs	r0, #17
 80059b2:	f7fb ffff 	bl	80019b4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80059b6:	20c8      	movs	r0, #200	; 0xc8
 80059b8:	f7fc f84a 	bl	8001a50 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80059bc:	2029      	movs	r0, #41	; 0x29
 80059be:	f7fb fff9 	bl	80019b4 <LCD_IO_WriteReg>
}
 80059c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80059c6:	202c      	movs	r0, #44	; 0x2c
 80059c8:	f7fb bff4 	b.w	80019b4 <LCD_IO_WriteReg>

080059cc <ili9341_ReadID>:
{
 80059cc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80059ce:	f7fb ffc5 	bl	800195c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80059d2:	2103      	movs	r1, #3
 80059d4:	20d3      	movs	r0, #211	; 0xd3
 80059d6:	f7fc f809 	bl	80019ec <LCD_IO_ReadData>
}
 80059da:	b280      	uxth	r0, r0
 80059dc:	bd08      	pop	{r3, pc}

080059de <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80059de:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80059e0:	b2c4      	uxtb	r4, r0
 80059e2:	2202      	movs	r2, #2
 80059e4:	2103      	movs	r1, #3
 80059e6:	4620      	mov	r0, r4
 80059e8:	f7fb ff6e 	bl	80018c8 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80059ec:	200a      	movs	r0, #10
 80059ee:	f7fb ffb3 	bl	8001958 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80059f2:	4620      	mov	r0, r4
 80059f4:	2200      	movs	r2, #0
 80059f6:	2103      	movs	r1, #3
 80059f8:	f7fb ff66 	bl	80018c8 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80059fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005a00:	2002      	movs	r0, #2
 8005a02:	f7fb bfa9 	b.w	8001958 <IOE_Delay>

08005a06 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005a06:	b538      	push	{r3, r4, r5, lr}
 8005a08:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a0a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005a0c:	f7fb ff5a 	bl	80018c4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a10:	2100      	movs	r1, #0
 8005a12:	4620      	mov	r0, r4
 8005a14:	f7fb ff70 	bl	80018f8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a18:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a1a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a1c:	4620      	mov	r0, r4
 8005a1e:	f7fb ff6b 	bl	80018f8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a22:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005a26:	b280      	uxth	r0, r0
 8005a28:	bd38      	pop	{r3, r4, r5, pc}

08005a2a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005a2a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005a2c:	b2c4      	uxtb	r4, r0
 8005a2e:	2140      	movs	r1, #64	; 0x40
 8005a30:	4620      	mov	r0, r4
 8005a32:	f7fb ff61 	bl	80018f8 <IOE_Read>
  
  if(state > 0)
 8005a36:	0603      	lsls	r3, r0, #24
 8005a38:	d507      	bpl.n	8005a4a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005a3a:	214c      	movs	r1, #76	; 0x4c
 8005a3c:	4620      	mov	r0, r4
 8005a3e:	f7fb ff5b 	bl	80018f8 <IOE_Read>
    {
      ret = 1;
 8005a42:	3800      	subs	r0, #0
 8005a44:	bf18      	it	ne
 8005a46:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005a48:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a4a:	2201      	movs	r2, #1
 8005a4c:	214b      	movs	r1, #75	; 0x4b
 8005a4e:	4620      	mov	r0, r4
 8005a50:	f7fb ff3a 	bl	80018c8 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005a54:	4620      	mov	r0, r4
 8005a56:	2200      	movs	r2, #0
 8005a58:	214b      	movs	r1, #75	; 0x4b
 8005a5a:	f7fb ff35 	bl	80018c8 <IOE_Write>
  uint8_t ret = 0;
 8005a5e:	2000      	movs	r0, #0
 8005a60:	e7f2      	b.n	8005a48 <stmpe811_TS_DetectTouch+0x1e>

08005a62 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005a62:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005a64:	2304      	movs	r3, #4
 8005a66:	b2c4      	uxtb	r4, r0
{
 8005a68:	460e      	mov	r6, r1
 8005a6a:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005a6c:	21d7      	movs	r1, #215	; 0xd7
 8005a6e:	eb0d 0203 	add.w	r2, sp, r3
 8005a72:	4620      	mov	r0, r4
 8005a74:	f7fb ff5a 	bl	800192c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005a78:	9b01      	ldr	r3, [sp, #4]
 8005a7a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005a7c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005a7e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005a82:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a84:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005a86:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a88:	2201      	movs	r2, #1
 8005a8a:	214b      	movs	r1, #75	; 0x4b
 8005a8c:	f7fb ff1c 	bl	80018c8 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005a90:	2200      	movs	r2, #0
 8005a92:	214b      	movs	r1, #75	; 0x4b
 8005a94:	4620      	mov	r0, r4
 8005a96:	f7fb ff17 	bl	80018c8 <IOE_Write>
}
 8005a9a:	b002      	add	sp, #8
 8005a9c:	bd70      	pop	{r4, r5, r6, pc}
	...

08005aa0 <stmpe811_Init>:
{
 8005aa0:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005aa2:	4b0a      	ldr	r3, [pc, #40]	; (8005acc <stmpe811_Init+0x2c>)
 8005aa4:	781a      	ldrb	r2, [r3, #0]
 8005aa6:	4290      	cmp	r0, r2
{
 8005aa8:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005aaa:	d00d      	beq.n	8005ac8 <stmpe811_Init+0x28>
 8005aac:	7859      	ldrb	r1, [r3, #1]
 8005aae:	4288      	cmp	r0, r1
 8005ab0:	d00a      	beq.n	8005ac8 <stmpe811_Init+0x28>
 8005ab2:	b10a      	cbz	r2, 8005ab8 <stmpe811_Init+0x18>
 8005ab4:	b941      	cbnz	r1, 8005ac8 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005ab6:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005ab8:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005aba:	f7fb ff03 	bl	80018c4 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005abe:	4620      	mov	r0, r4
}
 8005ac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005ac4:	f7ff bf8b 	b.w	80059de <stmpe811_Reset>
}
 8005ac8:	bd10      	pop	{r4, pc}
 8005aca:	bf00      	nop
 8005acc:	20004668 	.word	0x20004668

08005ad0 <stmpe811_EnableGlobalIT>:
{
 8005ad0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005ad2:	b2c4      	uxtb	r4, r0
 8005ad4:	2109      	movs	r1, #9
 8005ad6:	4620      	mov	r0, r4
 8005ad8:	f7fb ff0e 	bl	80018f8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005adc:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005ae0:	b2c2      	uxtb	r2, r0
 8005ae2:	2109      	movs	r1, #9
 8005ae4:	4620      	mov	r0, r4
}
 8005ae6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005aea:	f7fb beed 	b.w	80018c8 <IOE_Write>

08005aee <stmpe811_DisableGlobalIT>:
{
 8005aee:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005af0:	b2c4      	uxtb	r4, r0
 8005af2:	2109      	movs	r1, #9
 8005af4:	4620      	mov	r0, r4
 8005af6:	f7fb feff 	bl	80018f8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005afa:	2109      	movs	r1, #9
 8005afc:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005b00:	4620      	mov	r0, r4
}
 8005b02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b06:	f7fb bedf 	b.w	80018c8 <IOE_Write>

08005b0a <stmpe811_EnableITSource>:
{
 8005b0a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b0c:	b2c4      	uxtb	r4, r0
{
 8005b0e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b10:	4620      	mov	r0, r4
 8005b12:	210a      	movs	r1, #10
 8005b14:	f7fb fef0 	bl	80018f8 <IOE_Read>
  tmp |= Source; 
 8005b18:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b1a:	b2c2      	uxtb	r2, r0
 8005b1c:	210a      	movs	r1, #10
 8005b1e:	4620      	mov	r0, r4
}
 8005b20:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b24:	f7fb bed0 	b.w	80018c8 <IOE_Write>

08005b28 <stmpe811_TS_EnableIT>:
{
 8005b28:	b507      	push	{r0, r1, r2, lr}
 8005b2a:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005b2c:	f7fb fecb 	bl	80018c6 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b30:	9801      	ldr	r0, [sp, #4]
 8005b32:	211f      	movs	r1, #31
 8005b34:	f7ff ffe9 	bl	8005b0a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b38:	9801      	ldr	r0, [sp, #4]
}
 8005b3a:	b003      	add	sp, #12
 8005b3c:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b40:	f7ff bfc6 	b.w	8005ad0 <stmpe811_EnableGlobalIT>

08005b44 <stmpe811_DisableITSource>:
{
 8005b44:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b46:	b2c4      	uxtb	r4, r0
{
 8005b48:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b4a:	4620      	mov	r0, r4
 8005b4c:	210a      	movs	r1, #10
 8005b4e:	f7fb fed3 	bl	80018f8 <IOE_Read>
  tmp &= ~Source; 
 8005b52:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b56:	b2c2      	uxtb	r2, r0
 8005b58:	210a      	movs	r1, #10
 8005b5a:	4620      	mov	r0, r4
}
 8005b5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b60:	f7fb beb2 	b.w	80018c8 <IOE_Write>

08005b64 <stmpe811_TS_DisableIT>:
{
 8005b64:	b510      	push	{r4, lr}
 8005b66:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005b68:	f7ff ffc1 	bl	8005aee <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b6c:	4620      	mov	r0, r4
 8005b6e:	211f      	movs	r1, #31
}
 8005b70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b74:	f7ff bfe6 	b.w	8005b44 <stmpe811_DisableITSource>

08005b78 <stmpe811_ReadGITStatus>:
{
 8005b78:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005b7a:	b2c0      	uxtb	r0, r0
{
 8005b7c:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005b7e:	210b      	movs	r1, #11
 8005b80:	f7fb feba 	bl	80018f8 <IOE_Read>
}
 8005b84:	4020      	ands	r0, r4
 8005b86:	bd10      	pop	{r4, pc}

08005b88 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005b88:	211f      	movs	r1, #31
 8005b8a:	f7ff bff5 	b.w	8005b78 <stmpe811_ReadGITStatus>

08005b8e <stmpe811_ClearGlobalIT>:
{
 8005b8e:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005b90:	b2c0      	uxtb	r0, r0
 8005b92:	210b      	movs	r1, #11
 8005b94:	f7fb be98 	b.w	80018c8 <IOE_Write>

08005b98 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005b98:	211f      	movs	r1, #31
 8005b9a:	f7ff bff8 	b.w	8005b8e <stmpe811_ClearGlobalIT>

08005b9e <stmpe811_IO_EnableAF>:
{
 8005b9e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005ba0:	b2c4      	uxtb	r4, r0
{
 8005ba2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005ba4:	4620      	mov	r0, r4
 8005ba6:	2117      	movs	r1, #23
 8005ba8:	f7fb fea6 	bl	80018f8 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005bac:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005bb0:	b2c2      	uxtb	r2, r0
 8005bb2:	2117      	movs	r1, #23
 8005bb4:	4620      	mov	r0, r4
}
 8005bb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005bba:	f7fb be85 	b.w	80018c8 <IOE_Write>

08005bbe <stmpe811_TS_Start>:
{
 8005bbe:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bc0:	b2c4      	uxtb	r4, r0
{
 8005bc2:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bc4:	2104      	movs	r1, #4
 8005bc6:	4620      	mov	r0, r4
 8005bc8:	f7fb fe96 	bl	80018f8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005bcc:	2104      	movs	r1, #4
 8005bce:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bd2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005bd4:	4620      	mov	r0, r4
 8005bd6:	f7fb fe77 	bl	80018c8 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005bda:	4630      	mov	r0, r6
 8005bdc:	21f0      	movs	r1, #240	; 0xf0
 8005bde:	f7ff ffde 	bl	8005b9e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005be2:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005be6:	4620      	mov	r0, r4
 8005be8:	2104      	movs	r1, #4
 8005bea:	f7fb fe6d 	bl	80018c8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005bee:	2249      	movs	r2, #73	; 0x49
 8005bf0:	2120      	movs	r1, #32
 8005bf2:	4620      	mov	r0, r4
 8005bf4:	f7fb fe68 	bl	80018c8 <IOE_Write>
  IOE_Delay(2); 
 8005bf8:	2002      	movs	r0, #2
 8005bfa:	f7fb fead 	bl	8001958 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005bfe:	4620      	mov	r0, r4
 8005c00:	2201      	movs	r2, #1
 8005c02:	2121      	movs	r1, #33	; 0x21
 8005c04:	f7fb fe60 	bl	80018c8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005c08:	4620      	mov	r0, r4
 8005c0a:	229a      	movs	r2, #154	; 0x9a
 8005c0c:	2141      	movs	r1, #65	; 0x41
 8005c0e:	f7fb fe5b 	bl	80018c8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005c12:	4620      	mov	r0, r4
 8005c14:	2201      	movs	r2, #1
 8005c16:	214a      	movs	r1, #74	; 0x4a
 8005c18:	f7fb fe56 	bl	80018c8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005c1c:	4620      	mov	r0, r4
 8005c1e:	2201      	movs	r2, #1
 8005c20:	214b      	movs	r1, #75	; 0x4b
 8005c22:	f7fb fe51 	bl	80018c8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005c26:	4620      	mov	r0, r4
 8005c28:	2200      	movs	r2, #0
 8005c2a:	214b      	movs	r1, #75	; 0x4b
 8005c2c:	f7fb fe4c 	bl	80018c8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005c30:	4620      	mov	r0, r4
 8005c32:	2201      	movs	r2, #1
 8005c34:	2156      	movs	r1, #86	; 0x56
 8005c36:	f7fb fe47 	bl	80018c8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005c3a:	4620      	mov	r0, r4
 8005c3c:	2201      	movs	r2, #1
 8005c3e:	2158      	movs	r1, #88	; 0x58
 8005c40:	f7fb fe42 	bl	80018c8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005c44:	4620      	mov	r0, r4
 8005c46:	2201      	movs	r2, #1
 8005c48:	2140      	movs	r1, #64	; 0x40
 8005c4a:	f7fb fe3d 	bl	80018c8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005c4e:	4620      	mov	r0, r4
 8005c50:	22ff      	movs	r2, #255	; 0xff
 8005c52:	210b      	movs	r1, #11
 8005c54:	f7fb fe38 	bl	80018c8 <IOE_Write>
}
 8005c58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005c5c:	2002      	movs	r0, #2
 8005c5e:	f7fb be7b 	b.w	8001958 <IOE_Delay>
	...

08005c64 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005c64:	4b05      	ldr	r3, [pc, #20]	; (8005c7c <SystemInit+0x18>)
 8005c66:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005c6a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005c6e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005c72:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005c76:	609a      	str	r2, [r3, #8]
#endif
}
 8005c78:	4770      	bx	lr
 8005c7a:	bf00      	nop
 8005c7c:	e000ed00 	.word	0xe000ed00

08005c80 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005c80:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005c82:	4b0b      	ldr	r3, [pc, #44]	; (8005cb0 <HAL_Init+0x30>)
 8005c84:	681a      	ldr	r2, [r3, #0]
 8005c86:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c8a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005c8c:	681a      	ldr	r2, [r3, #0]
 8005c8e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005c92:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005c94:	681a      	ldr	r2, [r3, #0]
 8005c96:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005c9a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005c9c:	2003      	movs	r0, #3
 8005c9e:	f000 f9e9 	bl	8006074 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005ca2:	2000      	movs	r0, #0
 8005ca4:	f7fc f9b0 	bl	8002008 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005ca8:	f7fb feec 	bl	8001a84 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005cac:	2000      	movs	r0, #0
 8005cae:	bd08      	pop	{r3, pc}
 8005cb0:	40023c00 	.word	0x40023c00

08005cb4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005cb4:	4a03      	ldr	r2, [pc, #12]	; (8005cc4 <HAL_IncTick+0x10>)
 8005cb6:	4b04      	ldr	r3, [pc, #16]	; (8005cc8 <HAL_IncTick+0x14>)
 8005cb8:	6811      	ldr	r1, [r2, #0]
 8005cba:	781b      	ldrb	r3, [r3, #0]
 8005cbc:	440b      	add	r3, r1
 8005cbe:	6013      	str	r3, [r2, #0]
}
 8005cc0:	4770      	bx	lr
 8005cc2:	bf00      	nop
 8005cc4:	2000466c 	.word	0x2000466c
 8005cc8:	20000080 	.word	0x20000080

08005ccc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005ccc:	4b01      	ldr	r3, [pc, #4]	; (8005cd4 <HAL_GetTick+0x8>)
 8005cce:	6818      	ldr	r0, [r3, #0]
}
 8005cd0:	4770      	bx	lr
 8005cd2:	bf00      	nop
 8005cd4:	2000466c 	.word	0x2000466c

08005cd8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005cd8:	b538      	push	{r3, r4, r5, lr}
 8005cda:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005cdc:	f7ff fff6 	bl	8005ccc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005ce0:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005ce2:	bf1c      	itt	ne
 8005ce4:	4b05      	ldrne	r3, [pc, #20]	; (8005cfc <HAL_Delay+0x24>)
 8005ce6:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005ce8:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005cea:	bf18      	it	ne
 8005cec:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005cee:	f7ff ffed 	bl	8005ccc <HAL_GetTick>
 8005cf2:	1b43      	subs	r3, r0, r5
 8005cf4:	42a3      	cmp	r3, r4
 8005cf6:	d3fa      	bcc.n	8005cee <HAL_Delay+0x16>
  {
  }
}
 8005cf8:	bd38      	pop	{r3, r4, r5, pc}
 8005cfa:	bf00      	nop
 8005cfc:	20000080 	.word	0x20000080

08005d00 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005d00:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005d02:	4604      	mov	r4, r0
 8005d04:	2800      	cmp	r0, #0
 8005d06:	f000 809b 	beq.w	8005e40 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005d0a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005d0c:	b925      	cbnz	r5, 8005d18 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005d0e:	f7fb fed9 	bl	8001ac4 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005d12:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005d14:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005d18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d1a:	06db      	lsls	r3, r3, #27
 8005d1c:	f100 808e 	bmi.w	8005e3c <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005d20:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d22:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005d26:	f023 0302 	bic.w	r3, r3, #2
 8005d2a:	f043 0302 	orr.w	r3, r3, #2
 8005d2e:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005d30:	4b44      	ldr	r3, [pc, #272]	; (8005e44 <HAL_ADC_Init+0x144>)
 8005d32:	685a      	ldr	r2, [r3, #4]
 8005d34:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005d38:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005d3a:	685a      	ldr	r2, [r3, #4]
 8005d3c:	6861      	ldr	r1, [r4, #4]
 8005d3e:	430a      	orrs	r2, r1
 8005d40:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d42:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d44:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d46:	685a      	ldr	r2, [r3, #4]
 8005d48:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005d4c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d4e:	685a      	ldr	r2, [r3, #4]
 8005d50:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005d54:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005d56:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005d58:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005d5a:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005d5e:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005d60:	685a      	ldr	r2, [r3, #4]
 8005d62:	430a      	orrs	r2, r1
 8005d64:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005d66:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005d68:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005d6a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005d6e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005d70:	689a      	ldr	r2, [r3, #8]
 8005d72:	430a      	orrs	r2, r1
 8005d74:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005d76:	4934      	ldr	r1, [pc, #208]	; (8005e48 <HAL_ADC_Init+0x148>)
 8005d78:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005d7a:	428a      	cmp	r2, r1
 8005d7c:	d052      	beq.n	8005e24 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005d7e:	6899      	ldr	r1, [r3, #8]
 8005d80:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005d84:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005d86:	6899      	ldr	r1, [r3, #8]
 8005d88:	430a      	orrs	r2, r1
 8005d8a:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005d8c:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005d8e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005d90:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005d94:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005d96:	689a      	ldr	r2, [r3, #8]
 8005d98:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005d9a:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005d9c:	689a      	ldr	r2, [r3, #8]
 8005d9e:	f022 0202 	bic.w	r2, r2, #2
 8005da2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005da4:	689a      	ldr	r2, [r3, #8]
 8005da6:	7e21      	ldrb	r1, [r4, #24]
 8005da8:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005dac:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005dae:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005db2:	2a00      	cmp	r2, #0
 8005db4:	d03e      	beq.n	8005e34 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005db6:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005db8:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005dba:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005dbe:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005dc0:	685a      	ldr	r2, [r3, #4]
 8005dc2:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005dc6:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005dc8:	685a      	ldr	r2, [r3, #4]
 8005dca:	3901      	subs	r1, #1
 8005dcc:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005dd0:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005dd2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005dd4:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005dd6:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005dda:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005ddc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005dde:	3901      	subs	r1, #1
 8005de0:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005de4:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005de6:	689a      	ldr	r2, [r3, #8]
 8005de8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005dec:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8005dee:	689a      	ldr	r2, [r3, #8]
 8005df0:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005df4:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005df8:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005dfa:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005dfc:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005dfe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e02:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e04:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e06:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e08:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8005e0c:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e0e:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005e10:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e12:	f023 0303 	bic.w	r3, r3, #3
 8005e16:	f043 0301 	orr.w	r3, r3, #1
 8005e1a:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8005e1c:	2300      	movs	r3, #0
 8005e1e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005e22:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005e24:	689a      	ldr	r2, [r3, #8]
 8005e26:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005e2a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005e2c:	689a      	ldr	r2, [r3, #8]
 8005e2e:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005e32:	e7b2      	b.n	8005d9a <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005e34:	685a      	ldr	r2, [r3, #4]
 8005e36:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005e3a:	e7c9      	b.n	8005dd0 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8005e3c:	2001      	movs	r0, #1
 8005e3e:	e7ed      	b.n	8005e1c <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005e40:	2001      	movs	r0, #1
 8005e42:	e7ee      	b.n	8005e22 <HAL_ADC_Init+0x122>
 8005e44:	40012300 	.word	0x40012300
 8005e48:	0f000001 	.word	0x0f000001

08005e4c <HAL_ADC_Start>:
{
 8005e4c:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8005e4e:	2300      	movs	r3, #0
 8005e50:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005e52:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005e56:	2b01      	cmp	r3, #1
 8005e58:	d060      	beq.n	8005f1c <HAL_ADC_Start+0xd0>
 8005e5a:	2301      	movs	r3, #1
 8005e5c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005e60:	6803      	ldr	r3, [r0, #0]
 8005e62:	689a      	ldr	r2, [r3, #8]
 8005e64:	07d2      	lsls	r2, r2, #31
 8005e66:	d505      	bpl.n	8005e74 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005e68:	689a      	ldr	r2, [r3, #8]
 8005e6a:	07d1      	lsls	r1, r2, #31
 8005e6c:	d414      	bmi.n	8005e98 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8005e6e:	2000      	movs	r0, #0
}
 8005e70:	b002      	add	sp, #8
 8005e72:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005e74:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005e76:	492a      	ldr	r1, [pc, #168]	; (8005f20 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005e78:	f042 0201 	orr.w	r2, r2, #1
 8005e7c:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005e7e:	4a29      	ldr	r2, [pc, #164]	; (8005f24 <HAL_ADC_Start+0xd8>)
 8005e80:	6812      	ldr	r2, [r2, #0]
 8005e82:	fbb2 f2f1 	udiv	r2, r2, r1
 8005e86:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005e8a:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005e8c:	9a01      	ldr	r2, [sp, #4]
 8005e8e:	2a00      	cmp	r2, #0
 8005e90:	d0ea      	beq.n	8005e68 <HAL_ADC_Start+0x1c>
      counter--;
 8005e92:	9a01      	ldr	r2, [sp, #4]
 8005e94:	3a01      	subs	r2, #1
 8005e96:	e7f8      	b.n	8005e8a <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005e98:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005e9a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005e9e:	f022 0201 	bic.w	r2, r2, #1
 8005ea2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ea6:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005ea8:	685a      	ldr	r2, [r3, #4]
 8005eaa:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005eac:	bf41      	itttt	mi
 8005eae:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005eb0:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005eb4:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005eb8:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005eba:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005ebc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005ec0:	bf1c      	itt	ne
 8005ec2:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005ec4:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005ec8:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8005eca:	2200      	movs	r2, #0
 8005ecc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005ed0:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005ed4:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005ed6:	4a14      	ldr	r2, [pc, #80]	; (8005f28 <HAL_ADC_Start+0xdc>)
 8005ed8:	6851      	ldr	r1, [r2, #4]
 8005eda:	f011 0f1f 	tst.w	r1, #31
 8005ede:	4913      	ldr	r1, [pc, #76]	; (8005f2c <HAL_ADC_Start+0xe0>)
 8005ee0:	d119      	bne.n	8005f16 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005ee2:	428b      	cmp	r3, r1
 8005ee4:	d007      	beq.n	8005ef6 <HAL_ADC_Start+0xaa>
 8005ee6:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8005eea:	428b      	cmp	r3, r1
 8005eec:	d10c      	bne.n	8005f08 <HAL_ADC_Start+0xbc>
 8005eee:	6852      	ldr	r2, [r2, #4]
 8005ef0:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005ef4:	d1bb      	bne.n	8005e6e <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005ef6:	6898      	ldr	r0, [r3, #8]
 8005ef8:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8005efc:	d1b7      	bne.n	8005e6e <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8005efe:	689a      	ldr	r2, [r3, #8]
 8005f00:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005f04:	609a      	str	r2, [r3, #8]
 8005f06:	e7b3      	b.n	8005e70 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f08:	4909      	ldr	r1, [pc, #36]	; (8005f30 <HAL_ADC_Start+0xe4>)
 8005f0a:	428b      	cmp	r3, r1
 8005f0c:	d1af      	bne.n	8005e6e <HAL_ADC_Start+0x22>
 8005f0e:	6852      	ldr	r2, [r2, #4]
 8005f10:	f012 0f10 	tst.w	r2, #16
 8005f14:	e7ee      	b.n	8005ef4 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f16:	428b      	cmp	r3, r1
 8005f18:	d1a9      	bne.n	8005e6e <HAL_ADC_Start+0x22>
 8005f1a:	e7ec      	b.n	8005ef6 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8005f1c:	2002      	movs	r0, #2
 8005f1e:	e7a7      	b.n	8005e70 <HAL_ADC_Start+0x24>
 8005f20:	000f4240 	.word	0x000f4240
 8005f24:	2000007c 	.word	0x2000007c
 8005f28:	40012300 	.word	0x40012300
 8005f2c:	40012000 	.word	0x40012000
 8005f30:	40012200 	.word	0x40012200

08005f34 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8005f34:	6803      	ldr	r3, [r0, #0]
 8005f36:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005f38:	4770      	bx	lr
	...

08005f3c <HAL_ADC_ConfigChannel>:
{
 8005f3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8005f3e:	2300      	movs	r3, #0
 8005f40:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005f42:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005f46:	2b01      	cmp	r3, #1
 8005f48:	d069      	beq.n	800601e <HAL_ADC_ConfigChannel+0xe2>
 8005f4a:	2301      	movs	r3, #1
 8005f4c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005f50:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005f52:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005f54:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005f56:	2d09      	cmp	r5, #9
 8005f58:	b2ac      	uxth	r4, r5
 8005f5a:	d934      	bls.n	8005fc6 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005f5c:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8005f60:	68df      	ldr	r7, [r3, #12]
 8005f62:	3a1e      	subs	r2, #30
 8005f64:	f04f 0c07 	mov.w	ip, #7
 8005f68:	fa0c fc02 	lsl.w	ip, ip, r2
 8005f6c:	ea27 070c 	bic.w	r7, r7, ip
 8005f70:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005f72:	68df      	ldr	r7, [r3, #12]
 8005f74:	fa06 f202 	lsl.w	r2, r6, r2
 8005f78:	433a      	orrs	r2, r7
 8005f7a:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8005f7c:	6849      	ldr	r1, [r1, #4]
 8005f7e:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005f80:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8005f84:	d82f      	bhi.n	8005fe6 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005f86:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005f88:	3a05      	subs	r2, #5
 8005f8a:	261f      	movs	r6, #31
 8005f8c:	4096      	lsls	r6, r2
 8005f8e:	ea21 0106 	bic.w	r1, r1, r6
 8005f92:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8005f94:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005f96:	fa04 f202 	lsl.w	r2, r4, r2
 8005f9a:	430a      	orrs	r2, r1
 8005f9c:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8005f9e:	4a30      	ldr	r2, [pc, #192]	; (8006060 <HAL_ADC_ConfigChannel+0x124>)
 8005fa0:	4293      	cmp	r3, r2
 8005fa2:	d10a      	bne.n	8005fba <HAL_ADC_ConfigChannel+0x7e>
 8005fa4:	2d12      	cmp	r5, #18
 8005fa6:	d13c      	bne.n	8006022 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8005fa8:	4b2e      	ldr	r3, [pc, #184]	; (8006064 <HAL_ADC_ConfigChannel+0x128>)
 8005faa:	685a      	ldr	r2, [r3, #4]
 8005fac:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005fb0:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8005fb2:	685a      	ldr	r2, [r3, #4]
 8005fb4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005fb8:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8005fba:	2300      	movs	r3, #0
 8005fbc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005fc0:	4618      	mov	r0, r3
}
 8005fc2:	b003      	add	sp, #12
 8005fc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8005fc6:	691f      	ldr	r7, [r3, #16]
 8005fc8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8005fcc:	f04f 0c07 	mov.w	ip, #7
 8005fd0:	fa0c fc02 	lsl.w	ip, ip, r2
 8005fd4:	ea27 070c 	bic.w	r7, r7, ip
 8005fd8:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8005fda:	691f      	ldr	r7, [r3, #16]
 8005fdc:	fa06 f202 	lsl.w	r2, r6, r2
 8005fe0:	433a      	orrs	r2, r7
 8005fe2:	611a      	str	r2, [r3, #16]
 8005fe4:	e7ca      	b.n	8005f7c <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8005fe6:	290c      	cmp	r1, #12
 8005fe8:	f04f 011f 	mov.w	r1, #31
 8005fec:	d80b      	bhi.n	8006006 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8005fee:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8005ff0:	3a23      	subs	r2, #35	; 0x23
 8005ff2:	4091      	lsls	r1, r2
 8005ff4:	ea26 0101 	bic.w	r1, r6, r1
 8005ff8:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8005ffa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005ffc:	fa04 f202 	lsl.w	r2, r4, r2
 8006000:	430a      	orrs	r2, r1
 8006002:	631a      	str	r2, [r3, #48]	; 0x30
 8006004:	e7cb      	b.n	8005f9e <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8006006:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006008:	3a41      	subs	r2, #65	; 0x41
 800600a:	4091      	lsls	r1, r2
 800600c:	ea26 0101 	bic.w	r1, r6, r1
 8006010:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8006012:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006014:	fa04 f202 	lsl.w	r2, r4, r2
 8006018:	430a      	orrs	r2, r1
 800601a:	62da      	str	r2, [r3, #44]	; 0x2c
 800601c:	e7bf      	b.n	8005f9e <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800601e:	2002      	movs	r0, #2
 8006020:	e7cf      	b.n	8005fc2 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8006022:	4b11      	ldr	r3, [pc, #68]	; (8006068 <HAL_ADC_ConfigChannel+0x12c>)
 8006024:	429d      	cmp	r5, r3
 8006026:	d001      	beq.n	800602c <HAL_ADC_ConfigChannel+0xf0>
 8006028:	2d11      	cmp	r5, #17
 800602a:	d1c6      	bne.n	8005fba <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800602c:	4b0d      	ldr	r3, [pc, #52]	; (8006064 <HAL_ADC_ConfigChannel+0x128>)
 800602e:	685a      	ldr	r2, [r3, #4]
 8006030:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8006034:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8006036:	685a      	ldr	r2, [r3, #4]
 8006038:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800603c:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800603e:	4b0a      	ldr	r3, [pc, #40]	; (8006068 <HAL_ADC_ConfigChannel+0x12c>)
 8006040:	429d      	cmp	r5, r3
 8006042:	d1ba      	bne.n	8005fba <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8006044:	4b09      	ldr	r3, [pc, #36]	; (800606c <HAL_ADC_ConfigChannel+0x130>)
 8006046:	4a0a      	ldr	r2, [pc, #40]	; (8006070 <HAL_ADC_ConfigChannel+0x134>)
 8006048:	681b      	ldr	r3, [r3, #0]
 800604a:	fbb3 f3f2 	udiv	r3, r3, r2
 800604e:	220a      	movs	r2, #10
 8006050:	4353      	muls	r3, r2
        counter--;
 8006052:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8006054:	9b01      	ldr	r3, [sp, #4]
 8006056:	2b00      	cmp	r3, #0
 8006058:	d0af      	beq.n	8005fba <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 800605a:	9b01      	ldr	r3, [sp, #4]
 800605c:	3b01      	subs	r3, #1
 800605e:	e7f8      	b.n	8006052 <HAL_ADC_ConfigChannel+0x116>
 8006060:	40012000 	.word	0x40012000
 8006064:	40012300 	.word	0x40012300
 8006068:	10000012 	.word	0x10000012
 800606c:	2000007c 	.word	0x2000007c
 8006070:	000f4240 	.word	0x000f4240

08006074 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8006074:	4907      	ldr	r1, [pc, #28]	; (8006094 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8006076:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006078:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800607c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800607e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006080:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006084:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8006086:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8006088:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800608c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8006090:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8006092:	4770      	bx	lr
 8006094:	e000ed00 	.word	0xe000ed00

08006098 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8006098:	4b16      	ldr	r3, [pc, #88]	; (80060f4 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800609a:	b530      	push	{r4, r5, lr}
 800609c:	68dc      	ldr	r4, [r3, #12]
 800609e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060a2:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060a6:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060a8:	2d04      	cmp	r5, #4
 80060aa:	bf28      	it	cs
 80060ac:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060ae:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060b0:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060b4:	bf8c      	ite	hi
 80060b6:	3c03      	subhi	r4, #3
 80060b8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060ba:	fa03 f505 	lsl.w	r5, r3, r5
 80060be:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80060c2:	40a3      	lsls	r3, r4
 80060c4:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060c8:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80060ca:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060cc:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060d0:	bfac      	ite	ge
 80060d2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060d6:	4a08      	ldrlt	r2, [pc, #32]	; (80060f8 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060d8:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060dc:	bfb8      	it	lt
 80060de:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060e2:	b2db      	uxtb	r3, r3
 80060e4:	bfaa      	itet	ge
 80060e6:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060ea:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060ec:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80060f0:	bd30      	pop	{r4, r5, pc}
 80060f2:	bf00      	nop
 80060f4:	e000ed00 	.word	0xe000ed00
 80060f8:	e000ed14 	.word	0xe000ed14

080060fc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80060fc:	2800      	cmp	r0, #0
 80060fe:	db08      	blt.n	8006112 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006100:	0942      	lsrs	r2, r0, #5
 8006102:	2301      	movs	r3, #1
 8006104:	f000 001f 	and.w	r0, r0, #31
 8006108:	fa03 f000 	lsl.w	r0, r3, r0
 800610c:	4b01      	ldr	r3, [pc, #4]	; (8006114 <HAL_NVIC_EnableIRQ+0x18>)
 800610e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006112:	4770      	bx	lr
 8006114:	e000e100 	.word	0xe000e100

08006118 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006118:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800611a:	4604      	mov	r4, r0
 800611c:	b150      	cbz	r0, 8006134 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800611e:	7943      	ldrb	r3, [r0, #5]
 8006120:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006124:	b913      	cbnz	r3, 800612c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006126:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006128:	f7fb fd1c 	bl	8001b64 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800612c:	2301      	movs	r3, #1
 800612e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006130:	2000      	movs	r0, #0
}
 8006132:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006134:	2001      	movs	r0, #1
 8006136:	e7fc      	b.n	8006132 <HAL_CRC_Init+0x1a>

08006138 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006138:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 800613a:	4604      	mov	r4, r0
 800613c:	b168      	cbz	r0, 800615a <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800613e:	7903      	ldrb	r3, [r0, #4]
 8006140:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006144:	b913      	cbnz	r3, 800614c <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8006146:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006148:	f7fb fd24 	bl	8001b94 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 800614c:	2302      	movs	r3, #2
 800614e:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006150:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 8006152:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006154:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 8006156:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006158:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800615a:	2001      	movs	r0, #1
 800615c:	e7fc      	b.n	8006158 <HAL_DAC_Init+0x20>

0800615e <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 800615e:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8006160:	7943      	ldrb	r3, [r0, #5]
 8006162:	2b01      	cmp	r3, #1
 8006164:	f04f 0302 	mov.w	r3, #2
 8006168:	d017      	beq.n	800619a <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 800616a:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 800616c:	6803      	ldr	r3, [r0, #0]
 800616e:	2201      	movs	r2, #1
 8006170:	681c      	ldr	r4, [r3, #0]
 8006172:	408a      	lsls	r2, r1
 8006174:	4322      	orrs	r2, r4
 8006176:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 8006178:	b989      	cbnz	r1, 800619e <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 800617a:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 800617c:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 800617e:	074c      	lsls	r4, r1, #29
 8006180:	d507      	bpl.n	8006192 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8006182:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8006186:	2a38      	cmp	r2, #56	; 0x38
 8006188:	d103      	bne.n	8006192 <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 800618a:	685a      	ldr	r2, [r3, #4]
 800618c:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 8006190:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8006192:	2301      	movs	r3, #1
 8006194:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8006196:	2300      	movs	r3, #0
 8006198:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 800619a:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 800619c:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 800619e:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061a0:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061a2:	0349      	lsls	r1, r1, #13
 80061a4:	d5f5      	bpl.n	8006192 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061a6:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061aa:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80061ae:	d1f0      	bne.n	8006192 <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80061b0:	685a      	ldr	r2, [r3, #4]
 80061b2:	f042 0202 	orr.w	r2, r2, #2
 80061b6:	e7eb      	b.n	8006190 <HAL_DAC_Start+0x32>

080061b8 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80061b8:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80061ba:	7943      	ldrb	r3, [r0, #5]
 80061bc:	2b01      	cmp	r3, #1
 80061be:	f04f 0302 	mov.w	r3, #2
 80061c2:	d018      	beq.n	80061f6 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 80061c4:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 80061c6:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 80061c8:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 80061ca:	f640 75fe 	movw	r5, #4094	; 0xffe
 80061ce:	4095      	lsls	r5, r2
 80061d0:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 80061d4:	e9d1 3100 	ldrd	r3, r1, [r1]
 80061d8:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 80061da:	4093      	lsls	r3, r2
 80061dc:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 80061de:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80061e0:	6823      	ldr	r3, [r4, #0]
 80061e2:	21c0      	movs	r1, #192	; 0xc0
 80061e4:	fa01 f202 	lsl.w	r2, r1, r2
 80061e8:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80061ec:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80061ee:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 80061f0:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80061f2:	2300      	movs	r3, #0
 80061f4:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80061f6:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 80061f8:	bd30      	pop	{r4, r5, pc}

080061fa <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 80061fa:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 80061fc:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 80061fe:	2400      	movs	r4, #0
 8006200:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8006202:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8006204:	b941      	cbnz	r1, 8006218 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8006206:	9901      	ldr	r1, [sp, #4]
 8006208:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 800620a:	440a      	add	r2, r1
 800620c:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800620e:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006210:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8006212:	6013      	str	r3, [r2, #0]
}
 8006214:	b002      	add	sp, #8
 8006216:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006218:	9901      	ldr	r1, [sp, #4]
 800621a:	3114      	adds	r1, #20
 800621c:	e7f5      	b.n	800620a <HAL_DAC_SetValue+0x10>

0800621e <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800621e:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8006220:	4604      	mov	r4, r0
 8006222:	b330      	cbz	r0, 8006272 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006224:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006228:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800622c:	b91b      	cbnz	r3, 8006236 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800622e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8006232:	f7fb fce1 	bl	8001bf8 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006236:	6822      	ldr	r2, [r4, #0]
 8006238:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800623a:	2302      	movs	r3, #2
 800623c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006240:	6813      	ldr	r3, [r2, #0]
 8006242:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006246:	430b      	orrs	r3, r1
 8006248:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800624a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800624c:	68a1      	ldr	r1, [r4, #8]
 800624e:	f023 0307 	bic.w	r3, r3, #7
 8006252:	430b      	orrs	r3, r1
 8006254:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8006256:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006258:	68e1      	ldr	r1, [r4, #12]
 800625a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800625e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006262:	430b      	orrs	r3, r1
 8006264:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006266:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006268:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800626a:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800626c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8006270:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8006272:	2001      	movs	r0, #1
 8006274:	e7fc      	b.n	8006270 <HAL_DMA2D_Init+0x52>

08006276 <HAL_DMA2D_LineEventCallback>:
 8006276:	4770      	bx	lr

08006278 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8006278:	4770      	bx	lr

0800627a <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800627a:	6803      	ldr	r3, [r0, #0]
{
 800627c:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800627e:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8006280:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006282:	07f2      	lsls	r2, r6, #31
{
 8006284:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006286:	d514      	bpl.n	80062b2 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8006288:	05e9      	lsls	r1, r5, #23
 800628a:	d512      	bpl.n	80062b2 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800628c:	681a      	ldr	r2, [r3, #0]
 800628e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006292:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8006294:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8006296:	f042 0201 	orr.w	r2, r2, #1
 800629a:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800629c:	2201      	movs	r2, #1
 800629e:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80062a0:	2304      	movs	r3, #4
 80062a2:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80062a6:	2300      	movs	r3, #0
 80062a8:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80062ac:	6943      	ldr	r3, [r0, #20]
 80062ae:	b103      	cbz	r3, 80062b2 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80062b0:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80062b2:	06b2      	lsls	r2, r6, #26
 80062b4:	d516      	bpl.n	80062e4 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80062b6:	04ab      	lsls	r3, r5, #18
 80062b8:	d514      	bpl.n	80062e4 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80062ba:	6823      	ldr	r3, [r4, #0]
 80062bc:	681a      	ldr	r2, [r3, #0]
 80062be:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80062c2:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80062c4:	2220      	movs	r2, #32
 80062c6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80062c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80062ca:	f043 0302 	orr.w	r3, r3, #2
 80062ce:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80062d0:	2304      	movs	r3, #4
 80062d2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80062d6:	2300      	movs	r3, #0
 80062d8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80062dc:	6963      	ldr	r3, [r4, #20]
 80062de:	b10b      	cbz	r3, 80062e4 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80062e0:	4620      	mov	r0, r4
 80062e2:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80062e4:	0730      	lsls	r0, r6, #28
 80062e6:	d516      	bpl.n	8006316 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80062e8:	0529      	lsls	r1, r5, #20
 80062ea:	d514      	bpl.n	8006316 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80062ec:	6823      	ldr	r3, [r4, #0]
 80062ee:	681a      	ldr	r2, [r3, #0]
 80062f0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80062f4:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80062f6:	2208      	movs	r2, #8
 80062f8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80062fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80062fc:	f043 0304 	orr.w	r3, r3, #4
 8006300:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006302:	2304      	movs	r3, #4
 8006304:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006308:	2300      	movs	r3, #0
 800630a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800630e:	6963      	ldr	r3, [r4, #20]
 8006310:	b10b      	cbz	r3, 8006316 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006312:	4620      	mov	r0, r4
 8006314:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006316:	0772      	lsls	r2, r6, #29
 8006318:	d50b      	bpl.n	8006332 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800631a:	056b      	lsls	r3, r5, #21
 800631c:	d509      	bpl.n	8006332 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800631e:	6823      	ldr	r3, [r4, #0]
 8006320:	681a      	ldr	r2, [r3, #0]
 8006322:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006326:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006328:	2204      	movs	r2, #4
 800632a:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800632c:	4620      	mov	r0, r4
 800632e:	f7ff ffa2 	bl	8006276 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8006332:	07b0      	lsls	r0, r6, #30
 8006334:	d514      	bpl.n	8006360 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006336:	05a9      	lsls	r1, r5, #22
 8006338:	d512      	bpl.n	8006360 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800633a:	6823      	ldr	r3, [r4, #0]
 800633c:	681a      	ldr	r2, [r3, #0]
 800633e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006342:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006344:	2202      	movs	r2, #2
 8006346:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006348:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800634a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800634c:	2301      	movs	r3, #1
 800634e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006352:	2300      	movs	r3, #0
 8006354:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006358:	6923      	ldr	r3, [r4, #16]
 800635a:	b10b      	cbz	r3, 8006360 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800635c:	4620      	mov	r0, r4
 800635e:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8006360:	06f2      	lsls	r2, r6, #27
 8006362:	d513      	bpl.n	800638c <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8006364:	04eb      	lsls	r3, r5, #19
 8006366:	d511      	bpl.n	800638c <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8006368:	6823      	ldr	r3, [r4, #0]
 800636a:	681a      	ldr	r2, [r3, #0]
 800636c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8006370:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8006372:	2210      	movs	r2, #16
 8006374:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006376:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006378:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800637a:	2301      	movs	r3, #1
 800637c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006380:	2300      	movs	r3, #0
 8006382:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8006386:	4620      	mov	r0, r4
 8006388:	f7ff ff76 	bl	8006278 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800638c:	bd70      	pop	{r4, r5, r6, pc}
	...

08006390 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8006390:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8006392:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8006396:	2b01      	cmp	r3, #1
 8006398:	f04f 0302 	mov.w	r3, #2
 800639c:	d02b      	beq.n	80063f6 <HAL_DMA2D_ConfigLayer+0x66>
 800639e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80063a0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80063a4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80063a8:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80063ac:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80063b0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80063b2:	4f18      	ldr	r7, [pc, #96]	; (8006414 <HAL_DMA2D_ConfigLayer+0x84>)
 80063b4:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063b8:	3c09      	subs	r4, #9
 80063ba:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80063bc:	bf9c      	itt	ls
 80063be:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80063c2:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80063c4:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80063c8:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80063ca:	bf88      	it	hi
 80063cc:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80063d0:	b999      	cbnz	r1, 80063fa <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80063d2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80063d4:	4039      	ands	r1, r7
 80063d6:	430a      	orrs	r2, r1
 80063d8:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063da:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80063dc:	6982      	ldr	r2, [r0, #24]
 80063de:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063e0:	d803      	bhi.n	80063ea <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80063e2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80063e4:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80063e8:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80063ea:	2301      	movs	r3, #1
 80063ec:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80063f0:	2300      	movs	r3, #0
 80063f2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80063f6:	4618      	mov	r0, r3

  return HAL_OK;
}
 80063f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80063fa:	69d9      	ldr	r1, [r3, #28]
 80063fc:	4039      	ands	r1, r7
 80063fe:	430a      	orrs	r2, r1
 8006400:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006402:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006404:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006406:	6992      	ldr	r2, [r2, #24]
 8006408:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800640a:	bf9c      	itt	ls
 800640c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006410:	621d      	strls	r5, [r3, #32]
 8006412:	e7ea      	b.n	80063ea <HAL_DMA2D_ConfigLayer+0x5a>
 8006414:	00fcfff0 	.word	0x00fcfff0

08006418 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006418:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800641c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80065e0 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006420:	4a6d      	ldr	r2, [pc, #436]	; (80065d8 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006422:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 80065e4 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006426:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006428:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800642a:	2401      	movs	r4, #1
 800642c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800642e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8006432:	43ac      	bics	r4, r5
 8006434:	f040 80b7 	bne.w	80065a6 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006438:	684c      	ldr	r4, [r1, #4]
 800643a:	f024 0c10 	bic.w	ip, r4, #16
 800643e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006442:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006444:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006448:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800644c:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800644e:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006452:	d811      	bhi.n	8006478 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8006454:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006456:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 800645a:	68cf      	ldr	r7, [r1, #12]
 800645c:	fa07 f70e 	lsl.w	r7, r7, lr
 8006460:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8006464:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8006466:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006468:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800646c:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8006470:	409f      	lsls	r7, r3
 8006472:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8006476:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8006478:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800647a:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800647e:	688f      	ldr	r7, [r1, #8]
 8006480:	fa07 f70e 	lsl.w	r7, r7, lr
 8006484:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006488:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 800648c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800648e:	d116      	bne.n	80064be <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8006490:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8006494:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006498:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800649c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064a0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80064a4:	f04f 0c0f 	mov.w	ip, #15
 80064a8:	fa0c fc0b 	lsl.w	ip, ip, fp
 80064ac:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80064b0:	690f      	ldr	r7, [r1, #16]
 80064b2:	fa07 f70b 	lsl.w	r7, r7, fp
 80064b6:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80064ba:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80064be:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80064c0:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80064c2:	f004 0703 	and.w	r7, r4, #3
 80064c6:	fa07 f70e 	lsl.w	r7, r7, lr
 80064ca:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 80064cc:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80064ce:	00e5      	lsls	r5, r4, #3
 80064d0:	d569      	bpl.n	80065a6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80064d2:	f04f 0b00 	mov.w	fp, #0
 80064d6:	f8cd b004 	str.w	fp, [sp, #4]
 80064da:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80064de:	4d3f      	ldr	r5, [pc, #252]	; (80065dc <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80064e0:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80064e4:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80064e8:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80064ec:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80064f0:	9701      	str	r7, [sp, #4]
 80064f2:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80064f4:	f023 0703 	bic.w	r7, r3, #3
 80064f8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80064fc:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006500:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006504:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006508:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800650c:	f04f 0c0f 	mov.w	ip, #15
 8006510:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006514:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006516:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800651a:	d04b      	beq.n	80065b4 <HAL_GPIO_Init+0x19c>
 800651c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006520:	42a8      	cmp	r0, r5
 8006522:	d049      	beq.n	80065b8 <HAL_GPIO_Init+0x1a0>
 8006524:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006528:	42a8      	cmp	r0, r5
 800652a:	d047      	beq.n	80065bc <HAL_GPIO_Init+0x1a4>
 800652c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006530:	42a8      	cmp	r0, r5
 8006532:	d045      	beq.n	80065c0 <HAL_GPIO_Init+0x1a8>
 8006534:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006538:	42a8      	cmp	r0, r5
 800653a:	d043      	beq.n	80065c4 <HAL_GPIO_Init+0x1ac>
 800653c:	4548      	cmp	r0, r9
 800653e:	d043      	beq.n	80065c8 <HAL_GPIO_Init+0x1b0>
 8006540:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006544:	42a8      	cmp	r0, r5
 8006546:	d041      	beq.n	80065cc <HAL_GPIO_Init+0x1b4>
 8006548:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800654c:	42a8      	cmp	r0, r5
 800654e:	d03f      	beq.n	80065d0 <HAL_GPIO_Init+0x1b8>
 8006550:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006554:	42a8      	cmp	r0, r5
 8006556:	d03d      	beq.n	80065d4 <HAL_GPIO_Init+0x1bc>
 8006558:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800655c:	42a8      	cmp	r0, r5
 800655e:	bf0c      	ite	eq
 8006560:	2509      	moveq	r5, #9
 8006562:	250a      	movne	r5, #10
 8006564:	fa05 f50e 	lsl.w	r5, r5, lr
 8006568:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 800656c:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 800656e:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8006570:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8006572:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8006576:	bf0c      	ite	eq
 8006578:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800657a:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 800657c:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 800657e:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8006580:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8006584:	bf0c      	ite	eq
 8006586:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006588:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 800658a:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800658c:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800658e:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8006592:	bf0c      	ite	eq
 8006594:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006596:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8006598:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 800659a:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800659c:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 800659e:	bf54      	ite	pl
 80065a0:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80065a2:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80065a4:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80065a6:	3301      	adds	r3, #1
 80065a8:	2b10      	cmp	r3, #16
 80065aa:	f47f af3d 	bne.w	8006428 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80065ae:	b003      	add	sp, #12
 80065b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80065b4:	465d      	mov	r5, fp
 80065b6:	e7d5      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065b8:	2501      	movs	r5, #1
 80065ba:	e7d3      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065bc:	2502      	movs	r5, #2
 80065be:	e7d1      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065c0:	2503      	movs	r5, #3
 80065c2:	e7cf      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065c4:	2504      	movs	r5, #4
 80065c6:	e7cd      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065c8:	2505      	movs	r5, #5
 80065ca:	e7cb      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065cc:	2506      	movs	r5, #6
 80065ce:	e7c9      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065d0:	2507      	movs	r5, #7
 80065d2:	e7c7      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065d4:	2508      	movs	r5, #8
 80065d6:	e7c5      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065d8:	40013c00 	.word	0x40013c00
 80065dc:	40020000 	.word	0x40020000
 80065e0:	40023800 	.word	0x40023800
 80065e4:	40021400 	.word	0x40021400

080065e8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80065e8:	b10a      	cbz	r2, 80065ee <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80065ea:	6181      	str	r1, [r0, #24]
  }
}
 80065ec:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80065ee:	0409      	lsls	r1, r1, #16
 80065f0:	e7fb      	b.n	80065ea <HAL_GPIO_WritePin+0x2>

080065f2 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80065f2:	6801      	ldr	r1, [r0, #0]
 80065f4:	694b      	ldr	r3, [r1, #20]
 80065f6:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80065fa:	f04f 0200 	mov.w	r2, #0
 80065fe:	d010      	beq.n	8006622 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006600:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006604:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006606:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006608:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800660a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800660e:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006612:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006614:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006618:	f043 0304 	orr.w	r3, r3, #4
 800661c:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800661e:	2001      	movs	r0, #1
 8006620:	4770      	bx	lr
  }
  return HAL_OK;
 8006622:	4618      	mov	r0, r3
}
 8006624:	4770      	bx	lr

08006626 <I2C_WaitOnFlagUntilTimeout>:
{
 8006626:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800662a:	4606      	mov	r6, r0
 800662c:	460f      	mov	r7, r1
 800662e:	4691      	mov	r9, r2
 8006630:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006632:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006636:	6833      	ldr	r3, [r6, #0]
 8006638:	f1ba 0f01 	cmp.w	sl, #1
 800663c:	bf0c      	ite	eq
 800663e:	695c      	ldreq	r4, [r3, #20]
 8006640:	699c      	ldrne	r4, [r3, #24]
 8006642:	ea27 0404 	bic.w	r4, r7, r4
 8006646:	b2a4      	uxth	r4, r4
 8006648:	fab4 f484 	clz	r4, r4
 800664c:	0964      	lsrs	r4, r4, #5
 800664e:	45a1      	cmp	r9, r4
 8006650:	d001      	beq.n	8006656 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8006652:	2000      	movs	r0, #0
 8006654:	e017      	b.n	8006686 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8006656:	1c6a      	adds	r2, r5, #1
 8006658:	d0ee      	beq.n	8006638 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800665a:	f7ff fb37 	bl	8005ccc <HAL_GetTick>
 800665e:	9b08      	ldr	r3, [sp, #32]
 8006660:	1ac0      	subs	r0, r0, r3
 8006662:	42a8      	cmp	r0, r5
 8006664:	d801      	bhi.n	800666a <I2C_WaitOnFlagUntilTimeout+0x44>
 8006666:	2d00      	cmp	r5, #0
 8006668:	d1e5      	bne.n	8006636 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800666a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800666c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800666e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006670:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006674:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006678:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800667a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800667e:	f042 0220 	orr.w	r2, r2, #32
 8006682:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8006684:	2001      	movs	r0, #1
}
 8006686:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800668a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800668a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800668e:	4604      	mov	r4, r0
 8006690:	460f      	mov	r7, r1
 8006692:	4616      	mov	r6, r2
 8006694:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006696:	6825      	ldr	r5, [r4, #0]
 8006698:	6968      	ldr	r0, [r5, #20]
 800669a:	ea27 0000 	bic.w	r0, r7, r0
 800669e:	b280      	uxth	r0, r0
 80066a0:	b1b8      	cbz	r0, 80066d2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80066a2:	696b      	ldr	r3, [r5, #20]
 80066a4:	055a      	lsls	r2, r3, #21
 80066a6:	d516      	bpl.n	80066d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80066a8:	682b      	ldr	r3, [r5, #0]
 80066aa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80066ae:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80066b0:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80066b4:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80066b6:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80066b8:	2300      	movs	r3, #0
 80066ba:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80066bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066c0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80066c4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80066c6:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066ca:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80066cc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80066d0:	2001      	movs	r0, #1
}
 80066d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80066d6:	1c73      	adds	r3, r6, #1
 80066d8:	d0de      	beq.n	8006698 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80066da:	f7ff faf7 	bl	8005ccc <HAL_GetTick>
 80066de:	eba0 0008 	sub.w	r0, r0, r8
 80066e2:	42b0      	cmp	r0, r6
 80066e4:	d801      	bhi.n	80066ea <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80066e6:	2e00      	cmp	r6, #0
 80066e8:	d1d5      	bne.n	8006696 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80066ea:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80066ec:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80066ee:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80066f0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066f8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80066fa:	f042 0220 	orr.w	r2, r2, #32
 80066fe:	e7e4      	b.n	80066ca <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006700 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006700:	b570      	push	{r4, r5, r6, lr}
 8006702:	4604      	mov	r4, r0
 8006704:	460d      	mov	r5, r1
 8006706:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006708:	6821      	ldr	r1, [r4, #0]
 800670a:	694b      	ldr	r3, [r1, #20]
 800670c:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006710:	d001      	beq.n	8006716 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006712:	2000      	movs	r0, #0
 8006714:	e010      	b.n	8006738 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006716:	694a      	ldr	r2, [r1, #20]
 8006718:	06d2      	lsls	r2, r2, #27
 800671a:	d50e      	bpl.n	800673a <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800671c:	f06f 0210 	mvn.w	r2, #16
 8006720:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006722:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006724:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006726:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800672a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800672e:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006730:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8006732:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006736:	2001      	movs	r0, #1
}
 8006738:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800673a:	f7ff fac7 	bl	8005ccc <HAL_GetTick>
 800673e:	1b80      	subs	r0, r0, r6
 8006740:	42a8      	cmp	r0, r5
 8006742:	d801      	bhi.n	8006748 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006744:	2d00      	cmp	r5, #0
 8006746:	d1df      	bne.n	8006708 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006748:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800674a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800674c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800674e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006752:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006756:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006758:	f042 0220 	orr.w	r2, r2, #32
 800675c:	e7e8      	b.n	8006730 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800675e <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800675e:	b570      	push	{r4, r5, r6, lr}
 8006760:	4604      	mov	r4, r0
 8006762:	460d      	mov	r5, r1
 8006764:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006766:	6823      	ldr	r3, [r4, #0]
 8006768:	695b      	ldr	r3, [r3, #20]
 800676a:	075b      	lsls	r3, r3, #29
 800676c:	d501      	bpl.n	8006772 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800676e:	2000      	movs	r0, #0
}
 8006770:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006772:	4620      	mov	r0, r4
 8006774:	f7ff ff3d 	bl	80065f2 <I2C_IsAcknowledgeFailed>
 8006778:	b9a8      	cbnz	r0, 80067a6 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800677a:	1c6a      	adds	r2, r5, #1
 800677c:	d0f3      	beq.n	8006766 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800677e:	f7ff faa5 	bl	8005ccc <HAL_GetTick>
 8006782:	1b80      	subs	r0, r0, r6
 8006784:	42a8      	cmp	r0, r5
 8006786:	d801      	bhi.n	800678c <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8006788:	2d00      	cmp	r5, #0
 800678a:	d1ec      	bne.n	8006766 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800678c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800678e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006790:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006792:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006796:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800679a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800679c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067a0:	f042 0220 	orr.w	r2, r2, #32
 80067a4:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80067a6:	2001      	movs	r0, #1
 80067a8:	e7e2      	b.n	8006770 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080067aa <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80067aa:	b570      	push	{r4, r5, r6, lr}
 80067ac:	4604      	mov	r4, r0
 80067ae:	460d      	mov	r5, r1
 80067b0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80067b2:	6823      	ldr	r3, [r4, #0]
 80067b4:	695b      	ldr	r3, [r3, #20]
 80067b6:	061b      	lsls	r3, r3, #24
 80067b8:	d501      	bpl.n	80067be <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80067ba:	2000      	movs	r0, #0
}
 80067bc:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80067be:	4620      	mov	r0, r4
 80067c0:	f7ff ff17 	bl	80065f2 <I2C_IsAcknowledgeFailed>
 80067c4:	b9a8      	cbnz	r0, 80067f2 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80067c6:	1c6a      	adds	r2, r5, #1
 80067c8:	d0f3      	beq.n	80067b2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067ca:	f7ff fa7f 	bl	8005ccc <HAL_GetTick>
 80067ce:	1b80      	subs	r0, r0, r6
 80067d0:	42a8      	cmp	r0, r5
 80067d2:	d801      	bhi.n	80067d8 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80067d4:	2d00      	cmp	r5, #0
 80067d6:	d1ec      	bne.n	80067b2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067d8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80067da:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067dc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80067de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80067e8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067ec:	f042 0220 	orr.w	r2, r2, #32
 80067f0:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80067f2:	2001      	movs	r0, #1
 80067f4:	e7e2      	b.n	80067bc <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

080067f8 <I2C_RequestMemoryWrite>:
{
 80067f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80067fc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80067fe:	6802      	ldr	r2, [r0, #0]
{
 8006800:	b085      	sub	sp, #20
 8006802:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006806:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006808:	6813      	ldr	r3, [r2, #0]
 800680a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800680e:	6013      	str	r3, [r2, #0]
{
 8006810:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006812:	463b      	mov	r3, r7
 8006814:	f8cd 8000 	str.w	r8, [sp]
 8006818:	2200      	movs	r2, #0
 800681a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800681e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006820:	f7ff ff01 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006824:	6823      	ldr	r3, [r4, #0]
 8006826:	b138      	cbz	r0, 8006838 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006828:	681b      	ldr	r3, [r3, #0]
 800682a:	05db      	lsls	r3, r3, #23
 800682c:	d502      	bpl.n	8006834 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800682e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006832:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006834:	2003      	movs	r0, #3
 8006836:	e00a      	b.n	800684e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006838:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800683c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800683e:	4919      	ldr	r1, [pc, #100]	; (80068a4 <I2C_RequestMemoryWrite+0xac>)
 8006840:	4643      	mov	r3, r8
 8006842:	463a      	mov	r2, r7
 8006844:	4620      	mov	r0, r4
 8006846:	f7ff ff20 	bl	800668a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800684a:	b118      	cbz	r0, 8006854 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800684c:	2001      	movs	r0, #1
}
 800684e:	b005      	add	sp, #20
 8006850:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006854:	6823      	ldr	r3, [r4, #0]
 8006856:	9003      	str	r0, [sp, #12]
 8006858:	695a      	ldr	r2, [r3, #20]
 800685a:	9203      	str	r2, [sp, #12]
 800685c:	699b      	ldr	r3, [r3, #24]
 800685e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006860:	4642      	mov	r2, r8
 8006862:	4639      	mov	r1, r7
 8006864:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006866:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006868:	f7ff ff9f 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 800686c:	b140      	cbz	r0, 8006880 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800686e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006870:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006872:	bf01      	itttt	eq
 8006874:	6822      	ldreq	r2, [r4, #0]
 8006876:	6813      	ldreq	r3, [r2, #0]
 8006878:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800687c:	6013      	streq	r3, [r2, #0]
 800687e:	e7e5      	b.n	800684c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006880:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006884:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006886:	d102      	bne.n	800688e <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006888:	b2ed      	uxtb	r5, r5
 800688a:	611d      	str	r5, [r3, #16]
 800688c:	e7df      	b.n	800684e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800688e:	0a2a      	lsrs	r2, r5, #8
 8006890:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006892:	4639      	mov	r1, r7
 8006894:	4642      	mov	r2, r8
 8006896:	4620      	mov	r0, r4
 8006898:	f7ff ff87 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 800689c:	2800      	cmp	r0, #0
 800689e:	d1e6      	bne.n	800686e <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068a0:	6823      	ldr	r3, [r4, #0]
 80068a2:	e7f1      	b.n	8006888 <I2C_RequestMemoryWrite+0x90>
 80068a4:	00010002 	.word	0x00010002

080068a8 <I2C_RequestMemoryRead>:
{
 80068a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80068ac:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068ae:	6803      	ldr	r3, [r0, #0]
{
 80068b0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068b2:	681a      	ldr	r2, [r3, #0]
 80068b4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80068b8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80068ba:	681a      	ldr	r2, [r3, #0]
{
 80068bc:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80068c0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80068c4:	601a      	str	r2, [r3, #0]
{
 80068c6:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80068c8:	463b      	mov	r3, r7
 80068ca:	f8cd 8000 	str.w	r8, [sp]
 80068ce:	2200      	movs	r2, #0
 80068d0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80068d4:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80068d6:	f7ff fea6 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 80068da:	6823      	ldr	r3, [r4, #0]
 80068dc:	b148      	cbz	r0, 80068f2 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80068de:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80068e0:	05db      	lsls	r3, r3, #23
 80068e2:	d502      	bpl.n	80068ea <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80068e4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80068e8:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80068ea:	2003      	movs	r0, #3
}
 80068ec:	b004      	add	sp, #16
 80068ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80068f2:	fa5f f986 	uxtb.w	r9, r6
 80068f6:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80068fa:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80068fc:	492a      	ldr	r1, [pc, #168]	; (80069a8 <I2C_RequestMemoryRead+0x100>)
 80068fe:	4643      	mov	r3, r8
 8006900:	463a      	mov	r2, r7
 8006902:	4620      	mov	r0, r4
 8006904:	f7ff fec1 	bl	800668a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006908:	b108      	cbz	r0, 800690e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800690a:	2001      	movs	r0, #1
 800690c:	e7ee      	b.n	80068ec <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800690e:	6823      	ldr	r3, [r4, #0]
 8006910:	9003      	str	r0, [sp, #12]
 8006912:	695a      	ldr	r2, [r3, #20]
 8006914:	9203      	str	r2, [sp, #12]
 8006916:	699b      	ldr	r3, [r3, #24]
 8006918:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800691a:	4642      	mov	r2, r8
 800691c:	4639      	mov	r1, r7
 800691e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006920:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006922:	f7ff ff42 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 8006926:	b140      	cbz	r0, 800693a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006928:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800692a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800692c:	bf01      	itttt	eq
 800692e:	6822      	ldreq	r2, [r4, #0]
 8006930:	6813      	ldreq	r3, [r2, #0]
 8006932:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006936:	6013      	streq	r3, [r2, #0]
 8006938:	e7e7      	b.n	800690a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800693a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800693e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006940:	d11a      	bne.n	8006978 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006942:	b2ed      	uxtb	r5, r5
 8006944:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006946:	4642      	mov	r2, r8
 8006948:	4639      	mov	r1, r7
 800694a:	4620      	mov	r0, r4
 800694c:	f7ff ff2d 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 8006950:	2800      	cmp	r0, #0
 8006952:	d1e9      	bne.n	8006928 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006954:	6822      	ldr	r2, [r4, #0]
 8006956:	6813      	ldr	r3, [r2, #0]
 8006958:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800695c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800695e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006962:	4602      	mov	r2, r0
 8006964:	f8cd 8000 	str.w	r8, [sp]
 8006968:	463b      	mov	r3, r7
 800696a:	4620      	mov	r0, r4
 800696c:	f7ff fe5b 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006970:	6822      	ldr	r2, [r4, #0]
 8006972:	b160      	cbz	r0, 800698e <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006974:	6813      	ldr	r3, [r2, #0]
 8006976:	e7b3      	b.n	80068e0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006978:	0a2a      	lsrs	r2, r5, #8
 800697a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800697c:	4639      	mov	r1, r7
 800697e:	4642      	mov	r2, r8
 8006980:	4620      	mov	r0, r4
 8006982:	f7ff ff12 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 8006986:	2800      	cmp	r0, #0
 8006988:	d1ce      	bne.n	8006928 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800698a:	6823      	ldr	r3, [r4, #0]
 800698c:	e7d9      	b.n	8006942 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800698e:	f049 0301 	orr.w	r3, r9, #1
 8006992:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006994:	4904      	ldr	r1, [pc, #16]	; (80069a8 <I2C_RequestMemoryRead+0x100>)
 8006996:	4643      	mov	r3, r8
 8006998:	463a      	mov	r2, r7
 800699a:	4620      	mov	r0, r4
 800699c:	f7ff fe75 	bl	800668a <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80069a0:	3800      	subs	r0, #0
 80069a2:	bf18      	it	ne
 80069a4:	2001      	movne	r0, #1
 80069a6:	e7a1      	b.n	80068ec <I2C_RequestMemoryRead+0x44>
 80069a8:	00010002 	.word	0x00010002

080069ac <HAL_I2C_Init>:
{
 80069ac:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80069ae:	4604      	mov	r4, r0
 80069b0:	b908      	cbnz	r0, 80069b6 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80069b2:	2001      	movs	r0, #1
}
 80069b4:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80069b6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80069ba:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80069be:	b91b      	cbnz	r3, 80069c8 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80069c0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80069c4:	f7fb f93a 	bl	8001c3c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80069c8:	2324      	movs	r3, #36	; 0x24
 80069ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80069ce:	6823      	ldr	r3, [r4, #0]
 80069d0:	681a      	ldr	r2, [r3, #0]
 80069d2:	f022 0201 	bic.w	r2, r2, #1
 80069d6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80069d8:	681a      	ldr	r2, [r3, #0]
 80069da:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80069de:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80069e0:	681a      	ldr	r2, [r3, #0]
 80069e2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80069e6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80069e8:	f000 fe6e 	bl	80076c8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80069ec:	4b3f      	ldr	r3, [pc, #252]	; (8006aec <HAL_I2C_Init+0x140>)
 80069ee:	6865      	ldr	r5, [r4, #4]
 80069f0:	429d      	cmp	r5, r3
 80069f2:	bf94      	ite	ls
 80069f4:	4b3e      	ldrls	r3, [pc, #248]	; (8006af0 <HAL_I2C_Init+0x144>)
 80069f6:	4b3f      	ldrhi	r3, [pc, #252]	; (8006af4 <HAL_I2C_Init+0x148>)
 80069f8:	4298      	cmp	r0, r3
 80069fa:	bf8c      	ite	hi
 80069fc:	2300      	movhi	r3, #0
 80069fe:	2301      	movls	r3, #1
 8006a00:	2b00      	cmp	r3, #0
 8006a02:	d1d6      	bne.n	80069b2 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a04:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a06:	4e39      	ldr	r6, [pc, #228]	; (8006aec <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a08:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006a0a:	493b      	ldr	r1, [pc, #236]	; (8006af8 <HAL_I2C_Init+0x14c>)
 8006a0c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a10:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a14:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a16:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a18:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a1a:	bf88      	it	hi
 8006a1c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006a20:	6a13      	ldr	r3, [r2, #32]
 8006a22:	bf88      	it	hi
 8006a24:	4371      	mulhi	r1, r6
 8006a26:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a2a:	bf84      	itt	hi
 8006a2c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006a30:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006a34:	3101      	adds	r1, #1
 8006a36:	4319      	orrs	r1, r3
 8006a38:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006a3a:	69d1      	ldr	r1, [r2, #28]
 8006a3c:	1e43      	subs	r3, r0, #1
 8006a3e:	482b      	ldr	r0, [pc, #172]	; (8006aec <HAL_I2C_Init+0x140>)
 8006a40:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006a44:	4285      	cmp	r5, r0
 8006a46:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a4a:	d832      	bhi.n	8006ab2 <HAL_I2C_Init+0x106>
 8006a4c:	006d      	lsls	r5, r5, #1
 8006a4e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006a52:	fbb3 f3f5 	udiv	r3, r3, r5
 8006a56:	3301      	adds	r3, #1
 8006a58:	4203      	tst	r3, r0
 8006a5a:	d042      	beq.n	8006ae2 <HAL_I2C_Init+0x136>
 8006a5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006a60:	430b      	orrs	r3, r1
 8006a62:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006a64:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006a68:	6811      	ldr	r1, [r2, #0]
 8006a6a:	4303      	orrs	r3, r0
 8006a6c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006a70:	430b      	orrs	r3, r1
 8006a72:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006a74:	6891      	ldr	r1, [r2, #8]
 8006a76:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006a7a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006a7e:	4303      	orrs	r3, r0
 8006a80:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a84:	430b      	orrs	r3, r1
 8006a86:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006a88:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006a8c:	68d1      	ldr	r1, [r2, #12]
 8006a8e:	4303      	orrs	r3, r0
 8006a90:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a94:	430b      	orrs	r3, r1
 8006a96:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006a98:	6813      	ldr	r3, [r2, #0]
 8006a9a:	f043 0301 	orr.w	r3, r3, #1
 8006a9e:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006aa0:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006aa2:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006aa4:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006aa6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006aaa:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006aac:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006ab0:	e780      	b.n	80069b4 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006ab2:	68a0      	ldr	r0, [r4, #8]
 8006ab4:	b950      	cbnz	r0, 8006acc <HAL_I2C_Init+0x120>
 8006ab6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006aba:	fbb3 f3f5 	udiv	r3, r3, r5
 8006abe:	3301      	adds	r3, #1
 8006ac0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ac4:	b17b      	cbz	r3, 8006ae6 <HAL_I2C_Init+0x13a>
 8006ac6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006aca:	e7c9      	b.n	8006a60 <HAL_I2C_Init+0xb4>
 8006acc:	2019      	movs	r0, #25
 8006ace:	4345      	muls	r5, r0
 8006ad0:	fbb3 f3f5 	udiv	r3, r3, r5
 8006ad4:	3301      	adds	r3, #1
 8006ad6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ada:	b123      	cbz	r3, 8006ae6 <HAL_I2C_Init+0x13a>
 8006adc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006ae0:	e7be      	b.n	8006a60 <HAL_I2C_Init+0xb4>
 8006ae2:	2304      	movs	r3, #4
 8006ae4:	e7bc      	b.n	8006a60 <HAL_I2C_Init+0xb4>
 8006ae6:	2301      	movs	r3, #1
 8006ae8:	e7ba      	b.n	8006a60 <HAL_I2C_Init+0xb4>
 8006aea:	bf00      	nop
 8006aec:	000186a0 	.word	0x000186a0
 8006af0:	001e847f 	.word	0x001e847f
 8006af4:	003d08ff 	.word	0x003d08ff
 8006af8:	000f4240 	.word	0x000f4240

08006afc <HAL_I2C_Mem_Write>:
{
 8006afc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b00:	4604      	mov	r4, r0
 8006b02:	4699      	mov	r9, r3
 8006b04:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006b06:	460f      	mov	r7, r1
 8006b08:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006b0a:	f7ff f8df 	bl	8005ccc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b0e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006b12:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006b14:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b16:	d003      	beq.n	8006b20 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006b18:	2002      	movs	r0, #2
}
 8006b1a:	b003      	add	sp, #12
 8006b1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006b20:	9000      	str	r0, [sp, #0]
 8006b22:	493c      	ldr	r1, [pc, #240]	; (8006c14 <HAL_I2C_Mem_Write+0x118>)
 8006b24:	2319      	movs	r3, #25
 8006b26:	2201      	movs	r2, #1
 8006b28:	4620      	mov	r0, r4
 8006b2a:	f7ff fd7c 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006b2e:	2800      	cmp	r0, #0
 8006b30:	d1f2      	bne.n	8006b18 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006b32:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006b36:	2b01      	cmp	r3, #1
 8006b38:	d0ee      	beq.n	8006b18 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b3a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006b3c:	2301      	movs	r3, #1
 8006b3e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b42:	6803      	ldr	r3, [r0, #0]
 8006b44:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006b46:	bf5e      	ittt	pl
 8006b48:	6803      	ldrpl	r3, [r0, #0]
 8006b4a:	f043 0301 	orrpl.w	r3, r3, #1
 8006b4e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006b50:	6803      	ldr	r3, [r0, #0]
 8006b52:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006b56:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006b58:	2321      	movs	r3, #33	; 0x21
 8006b5a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006b5e:	2340      	movs	r3, #64	; 0x40
 8006b60:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b64:	2300      	movs	r3, #0
 8006b66:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006b68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006b6a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006b6c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006b70:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006b72:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006b74:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006b76:	4b28      	ldr	r3, [pc, #160]	; (8006c18 <HAL_I2C_Mem_Write+0x11c>)
 8006b78:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006b7a:	e9cd 6500 	strd	r6, r5, [sp]
 8006b7e:	464b      	mov	r3, r9
 8006b80:	4642      	mov	r2, r8
 8006b82:	4639      	mov	r1, r7
 8006b84:	4620      	mov	r0, r4
 8006b86:	f7ff fe37 	bl	80067f8 <I2C_RequestMemoryWrite>
 8006b8a:	2800      	cmp	r0, #0
 8006b8c:	d02a      	beq.n	8006be4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006b8e:	2001      	movs	r0, #1
 8006b90:	e7c3      	b.n	8006b1a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006b92:	f7ff fe0a 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 8006b96:	b140      	cbz	r0, 8006baa <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006b98:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006b9a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006b9c:	bf01      	itttt	eq
 8006b9e:	6822      	ldreq	r2, [r4, #0]
 8006ba0:	6813      	ldreq	r3, [r2, #0]
 8006ba2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006ba6:	6013      	streq	r3, [r2, #0]
 8006ba8:	e7f1      	b.n	8006b8e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006baa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006bac:	6827      	ldr	r7, [r4, #0]
 8006bae:	461a      	mov	r2, r3
 8006bb0:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006bb4:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006bb6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006bb8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006bba:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006bbc:	3a01      	subs	r2, #1
 8006bbe:	b292      	uxth	r2, r2
 8006bc0:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bc2:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006bc4:	1e48      	subs	r0, r1, #1
 8006bc6:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bc8:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006bca:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bcc:	d50a      	bpl.n	8006be4 <HAL_I2C_Mem_Write+0xe8>
 8006bce:	b148      	cbz	r0, 8006be4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006bd0:	785a      	ldrb	r2, [r3, #1]
 8006bd2:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006bd4:	3302      	adds	r3, #2
 8006bd6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006bd8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006bda:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006bdc:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006bde:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006be0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006be2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006be4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006be6:	462a      	mov	r2, r5
 8006be8:	4631      	mov	r1, r6
 8006bea:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006bec:	2b00      	cmp	r3, #0
 8006bee:	d1d0      	bne.n	8006b92 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006bf0:	f7ff fdb5 	bl	800675e <I2C_WaitOnBTFFlagUntilTimeout>
 8006bf4:	2800      	cmp	r0, #0
 8006bf6:	d1cf      	bne.n	8006b98 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006bf8:	6822      	ldr	r2, [r4, #0]
 8006bfa:	6813      	ldr	r3, [r2, #0]
 8006bfc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c00:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006c02:	2320      	movs	r3, #32
 8006c04:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006c08:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006c0c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006c10:	e783      	b.n	8006b1a <HAL_I2C_Mem_Write+0x1e>
 8006c12:	bf00      	nop
 8006c14:	00100002 	.word	0x00100002
 8006c18:	ffff0000 	.word	0xffff0000

08006c1c <HAL_I2C_Mem_Read>:
{
 8006c1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006c20:	4604      	mov	r4, r0
 8006c22:	b087      	sub	sp, #28
 8006c24:	4699      	mov	r9, r3
 8006c26:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006c28:	460d      	mov	r5, r1
 8006c2a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006c2c:	f7ff f84e 	bl	8005ccc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c30:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006c34:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006c36:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c38:	d004      	beq.n	8006c44 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006c3a:	2502      	movs	r5, #2
}
 8006c3c:	4628      	mov	r0, r5
 8006c3e:	b007      	add	sp, #28
 8006c40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006c44:	9000      	str	r0, [sp, #0]
 8006c46:	4976      	ldr	r1, [pc, #472]	; (8006e20 <HAL_I2C_Mem_Read+0x204>)
 8006c48:	2319      	movs	r3, #25
 8006c4a:	2201      	movs	r2, #1
 8006c4c:	4620      	mov	r0, r4
 8006c4e:	f7ff fcea 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006c52:	2800      	cmp	r0, #0
 8006c54:	d1f1      	bne.n	8006c3a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006c56:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006c5a:	2b01      	cmp	r3, #1
 8006c5c:	d0ed      	beq.n	8006c3a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c5e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006c60:	2301      	movs	r3, #1
 8006c62:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c66:	6803      	ldr	r3, [r0, #0]
 8006c68:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006c6a:	bf5e      	ittt	pl
 8006c6c:	6803      	ldrpl	r3, [r0, #0]
 8006c6e:	f043 0301 	orrpl.w	r3, r3, #1
 8006c72:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006c74:	6803      	ldr	r3, [r0, #0]
 8006c76:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006c7a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006c7c:	2322      	movs	r3, #34	; 0x22
 8006c7e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006c82:	2340      	movs	r3, #64	; 0x40
 8006c84:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006c88:	2300      	movs	r3, #0
 8006c8a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006c8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006c8e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006c90:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006c94:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006c96:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006c98:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006c9a:	4b62      	ldr	r3, [pc, #392]	; (8006e24 <HAL_I2C_Mem_Read+0x208>)
 8006c9c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006c9e:	4629      	mov	r1, r5
 8006ca0:	e9cd 7600 	strd	r7, r6, [sp]
 8006ca4:	464b      	mov	r3, r9
 8006ca6:	4642      	mov	r2, r8
 8006ca8:	4620      	mov	r0, r4
 8006caa:	f7ff fdfd 	bl	80068a8 <I2C_RequestMemoryRead>
 8006cae:	4605      	mov	r5, r0
 8006cb0:	b108      	cbz	r0, 8006cb6 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006cb2:	2501      	movs	r5, #1
 8006cb4:	e7c2      	b.n	8006c3c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006cb6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cb8:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006cba:	b9b2      	cbnz	r2, 8006cea <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cbc:	9002      	str	r0, [sp, #8]
 8006cbe:	695a      	ldr	r2, [r3, #20]
 8006cc0:	9202      	str	r2, [sp, #8]
 8006cc2:	699a      	ldr	r2, [r3, #24]
 8006cc4:	9202      	str	r2, [sp, #8]
 8006cc6:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006cc8:	681a      	ldr	r2, [r3, #0]
 8006cca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006cce:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006cd0:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006e28 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006cd4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006cd6:	2b00      	cmp	r3, #0
 8006cd8:	d12c      	bne.n	8006d34 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006cda:	2220      	movs	r2, #32
 8006cdc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006ce0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006ce4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006ce8:	e7a8      	b.n	8006c3c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006cea:	2a01      	cmp	r2, #1
 8006cec:	d10a      	bne.n	8006d04 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006cee:	681a      	ldr	r2, [r3, #0]
 8006cf0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006cf4:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cf6:	9003      	str	r0, [sp, #12]
 8006cf8:	695a      	ldr	r2, [r3, #20]
 8006cfa:	9203      	str	r2, [sp, #12]
 8006cfc:	699a      	ldr	r2, [r3, #24]
 8006cfe:	9203      	str	r2, [sp, #12]
 8006d00:	9a03      	ldr	r2, [sp, #12]
 8006d02:	e7e1      	b.n	8006cc8 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006d04:	2a02      	cmp	r2, #2
 8006d06:	d10e      	bne.n	8006d26 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d08:	681a      	ldr	r2, [r3, #0]
 8006d0a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d0e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006d10:	681a      	ldr	r2, [r3, #0]
 8006d12:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006d16:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d18:	9004      	str	r0, [sp, #16]
 8006d1a:	695a      	ldr	r2, [r3, #20]
 8006d1c:	9204      	str	r2, [sp, #16]
 8006d1e:	699b      	ldr	r3, [r3, #24]
 8006d20:	9304      	str	r3, [sp, #16]
 8006d22:	9b04      	ldr	r3, [sp, #16]
 8006d24:	e7d4      	b.n	8006cd0 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d26:	9005      	str	r0, [sp, #20]
 8006d28:	695a      	ldr	r2, [r3, #20]
 8006d2a:	9205      	str	r2, [sp, #20]
 8006d2c:	699b      	ldr	r3, [r3, #24]
 8006d2e:	9305      	str	r3, [sp, #20]
 8006d30:	9b05      	ldr	r3, [sp, #20]
 8006d32:	e7cd      	b.n	8006cd0 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006d34:	2b03      	cmp	r3, #3
 8006d36:	d856      	bhi.n	8006de6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006d38:	2b01      	cmp	r3, #1
 8006d3a:	d115      	bne.n	8006d68 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d3c:	4632      	mov	r2, r6
 8006d3e:	4639      	mov	r1, r7
 8006d40:	4620      	mov	r0, r4
 8006d42:	f7ff fcdd 	bl	8006700 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006d46:	2800      	cmp	r0, #0
 8006d48:	d1b3      	bne.n	8006cb2 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d4a:	6823      	ldr	r3, [r4, #0]
 8006d4c:	691a      	ldr	r2, [r3, #16]
 8006d4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d50:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d54:	3301      	adds	r3, #1
 8006d56:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006d58:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d5a:	3b01      	subs	r3, #1
 8006d5c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006d5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d60:	3b01      	subs	r3, #1
 8006d62:	b29b      	uxth	r3, r3
 8006d64:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006d66:	e7b5      	b.n	8006cd4 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006d68:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d6a:	9600      	str	r6, [sp, #0]
 8006d6c:	463b      	mov	r3, r7
 8006d6e:	f04f 0200 	mov.w	r2, #0
 8006d72:	4641      	mov	r1, r8
 8006d74:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006d76:	d119      	bne.n	8006dac <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d78:	f7ff fc55 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006d7c:	2800      	cmp	r0, #0
 8006d7e:	d198      	bne.n	8006cb2 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d80:	6823      	ldr	r3, [r4, #0]
 8006d82:	681a      	ldr	r2, [r3, #0]
 8006d84:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006d88:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d8a:	691a      	ldr	r2, [r3, #16]
 8006d8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d8e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d90:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006d92:	1c53      	adds	r3, r2, #1
 8006d94:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006d96:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d98:	3b01      	subs	r3, #1
 8006d9a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006d9c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d9e:	3b01      	subs	r3, #1
 8006da0:	b29b      	uxth	r3, r3
 8006da2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006da4:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006da6:	691b      	ldr	r3, [r3, #16]
 8006da8:	7053      	strb	r3, [r2, #1]
 8006daa:	e7d2      	b.n	8006d52 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006dac:	f7ff fc3b 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006db0:	2800      	cmp	r0, #0
 8006db2:	f47f af7e 	bne.w	8006cb2 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006db6:	6823      	ldr	r3, [r4, #0]
 8006db8:	681a      	ldr	r2, [r3, #0]
 8006dba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006dbe:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006dc0:	691a      	ldr	r2, [r3, #16]
 8006dc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dc4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006dc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006dc8:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006dca:	3301      	adds	r3, #1
 8006dcc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006dce:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006dd0:	3b01      	subs	r3, #1
 8006dd2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006dd4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006dd6:	3b01      	subs	r3, #1
 8006dd8:	b29b      	uxth	r3, r3
 8006dda:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006ddc:	4602      	mov	r2, r0
 8006dde:	463b      	mov	r3, r7
 8006de0:	4641      	mov	r1, r8
 8006de2:	4620      	mov	r0, r4
 8006de4:	e7c8      	b.n	8006d78 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006de6:	4632      	mov	r2, r6
 8006de8:	4639      	mov	r1, r7
 8006dea:	4620      	mov	r0, r4
 8006dec:	f7ff fc88 	bl	8006700 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006df0:	2800      	cmp	r0, #0
 8006df2:	f47f af5e 	bne.w	8006cb2 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006df6:	6823      	ldr	r3, [r4, #0]
 8006df8:	691a      	ldr	r2, [r3, #16]
 8006dfa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dfc:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006dfe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006e00:	1c53      	adds	r3, r2, #1
 8006e02:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006e04:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e06:	3b01      	subs	r3, #1
 8006e08:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006e0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e0c:	3b01      	subs	r3, #1
 8006e0e:	b29b      	uxth	r3, r3
 8006e10:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006e12:	6823      	ldr	r3, [r4, #0]
 8006e14:	6959      	ldr	r1, [r3, #20]
 8006e16:	0749      	lsls	r1, r1, #29
 8006e18:	f57f af5c 	bpl.w	8006cd4 <HAL_I2C_Mem_Read+0xb8>
 8006e1c:	e7c3      	b.n	8006da6 <HAL_I2C_Mem_Read+0x18a>
 8006e1e:	bf00      	nop
 8006e20:	00100002 	.word	0x00100002
 8006e24:	ffff0000 	.word	0xffff0000
 8006e28:	00010004 	.word	0x00010004

08006e2c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006e2c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e2e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e32:	2b20      	cmp	r3, #32
 8006e34:	b2dc      	uxtb	r4, r3
 8006e36:	d116      	bne.n	8006e66 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006e38:	2324      	movs	r3, #36	; 0x24
 8006e3a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006e3e:	6803      	ldr	r3, [r0, #0]
 8006e40:	681a      	ldr	r2, [r3, #0]
 8006e42:	f022 0201 	bic.w	r2, r2, #1
 8006e46:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006e48:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e4a:	f022 0210 	bic.w	r2, r2, #16
 8006e4e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006e50:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e52:	4311      	orrs	r1, r2
 8006e54:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006e56:	681a      	ldr	r2, [r3, #0]
 8006e58:	f042 0201 	orr.w	r2, r2, #1
 8006e5c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006e5e:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006e62:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006e64:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006e66:	2002      	movs	r0, #2
 8006e68:	e7fc      	b.n	8006e64 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006e6a <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006e6a:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e6c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e70:	2b20      	cmp	r3, #32
 8006e72:	b2dc      	uxtb	r4, r3
 8006e74:	d116      	bne.n	8006ea4 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006e76:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006e78:	2324      	movs	r3, #36	; 0x24
 8006e7a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8006e7e:	6813      	ldr	r3, [r2, #0]
 8006e80:	f023 0301 	bic.w	r3, r3, #1
 8006e84:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006e86:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006e88:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006e8c:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8006e8e:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8006e90:	b29b      	uxth	r3, r3
 8006e92:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006e94:	6813      	ldr	r3, [r2, #0]
 8006e96:	f043 0301 	orr.w	r3, r3, #1
 8006e9a:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006e9c:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006ea0:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006ea2:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006ea4:	2002      	movs	r0, #2
 8006ea6:	e7fc      	b.n	8006ea2 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006ea8 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ea8:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006eaa:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006eae:	01d2      	lsls	r2, r2, #7
 8006eb0:	3284      	adds	r2, #132	; 0x84
 8006eb2:	1883      	adds	r3, r0, r2
{
 8006eb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006eb8:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006eba:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ebc:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006ebe:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006ec2:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006ec6:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ec8:	68c5      	ldr	r5, [r0, #12]
 8006eca:	f10c 0701 	add.w	r7, ip, #1
 8006ece:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ed2:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ed6:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ed8:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006eda:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006ede:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006ee0:	68c5      	ldr	r5, [r0, #12]
 8006ee2:	68ce      	ldr	r6, [r1, #12]
 8006ee4:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006ee8:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006eea:	689d      	ldr	r5, [r3, #8]
 8006eec:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006ef0:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006ef2:	68c7      	ldr	r7, [r0, #12]
 8006ef4:	688d      	ldr	r5, [r1, #8]
 8006ef6:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006efa:	3501      	adds	r5, #1
 8006efc:	443d      	add	r5, r7
 8006efe:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006f02:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f04:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f06:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f08:	f025 0507 	bic.w	r5, r5, #7
 8006f0c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f0e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f12:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f14:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006f16:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006f1a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f1e:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006f22:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006f26:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006f2a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006f2e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006f32:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006f34:	695d      	ldr	r5, [r3, #20]
 8006f36:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006f3a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006f3c:	694d      	ldr	r5, [r1, #20]
 8006f3e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006f40:	69dd      	ldr	r5, [r3, #28]
 8006f42:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006f46:	f025 0507 	bic.w	r5, r5, #7
 8006f4a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006f4c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006f50:	433d      	orrs	r5, r7
 8006f52:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006f54:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006f56:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006f58:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006f5c:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006f5e:	b31e      	cbz	r6, 8006fa8 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006f60:	2e01      	cmp	r6, #1
 8006f62:	d023      	beq.n	8006fac <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006f64:	1eb5      	subs	r5, r6, #2
 8006f66:	2d02      	cmp	r5, #2
 8006f68:	d922      	bls.n	8006fb0 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006f6a:	2e07      	cmp	r6, #7
 8006f6c:	bf0c      	ite	eq
 8006f6e:	2502      	moveq	r5, #2
 8006f70:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006f72:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006f74:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006f78:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006f7a:	eba4 040c 	sub.w	r4, r4, ip
 8006f7e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006f80:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006f82:	436c      	muls	r4, r5
 8006f84:	436e      	muls	r6, r5
 8006f86:	3403      	adds	r4, #3
 8006f88:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006f8c:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006f8e:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006f90:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006f94:	f024 0407 	bic.w	r4, r4, #7
 8006f98:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006f9a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006f9c:	5883      	ldr	r3, [r0, r2]
 8006f9e:	f043 0301 	orr.w	r3, r3, #1
 8006fa2:	5083      	str	r3, [r0, r2]
}
 8006fa4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006fa8:	2504      	movs	r5, #4
 8006faa:	e7e2      	b.n	8006f72 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006fac:	2503      	movs	r5, #3
 8006fae:	e7e0      	b.n	8006f72 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8006fb0:	2502      	movs	r5, #2
 8006fb2:	e7de      	b.n	8006f72 <LTDC_SetConfig+0xca>

08006fb4 <HAL_LTDC_Init>:
{
 8006fb4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006fb6:	4604      	mov	r4, r0
 8006fb8:	2800      	cmp	r0, #0
 8006fba:	d063      	beq.n	8007084 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006fbc:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006fc0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006fc4:	b91b      	cbnz	r3, 8006fce <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006fc6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006fca:	f7fa fe93 	bl	8001cf4 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006fce:	2302      	movs	r3, #2
 8006fd0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006fd4:	6823      	ldr	r3, [r4, #0]
 8006fd6:	699a      	ldr	r2, [r3, #24]
 8006fd8:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006fdc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006fde:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006fe2:	4302      	orrs	r2, r0
 8006fe4:	68e0      	ldr	r0, [r4, #12]
 8006fe6:	6999      	ldr	r1, [r3, #24]
 8006fe8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006fea:	6920      	ldr	r0, [r4, #16]
 8006fec:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006fee:	430a      	orrs	r2, r1
 8006ff0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006ff2:	689a      	ldr	r2, [r3, #8]
 8006ff4:	4924      	ldr	r1, [pc, #144]	; (8007088 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006ff6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006ff8:	400a      	ands	r2, r1
 8006ffa:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006ffc:	689a      	ldr	r2, [r3, #8]
 8006ffe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007002:	69a0      	ldr	r0, [r4, #24]
 8007004:	4302      	orrs	r2, r0
 8007006:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007008:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800700a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800700c:	400a      	ands	r2, r1
 800700e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007010:	68da      	ldr	r2, [r3, #12]
 8007012:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007016:	6a20      	ldr	r0, [r4, #32]
 8007018:	4302      	orrs	r2, r0
 800701a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800701c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800701e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007020:	400a      	ands	r2, r1
 8007022:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007024:	691a      	ldr	r2, [r3, #16]
 8007026:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800702a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800702c:	4302      	orrs	r2, r0
 800702e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007030:	695a      	ldr	r2, [r3, #20]
 8007032:	4011      	ands	r1, r2
 8007034:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007036:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007038:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800703a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800703e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007040:	430a      	orrs	r2, r1
 8007042:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007044:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007046:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800704a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800704e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8007052:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007054:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007056:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800705a:	430a      	orrs	r2, r1
 800705c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007060:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007064:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8007066:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007068:	f042 0206 	orr.w	r2, r2, #6
 800706c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800706e:	699a      	ldr	r2, [r3, #24]
 8007070:	f042 0201 	orr.w	r2, r2, #1
 8007074:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007076:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8007078:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800707a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800707e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8007082:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007084:	2001      	movs	r0, #1
 8007086:	e7fc      	b.n	8007082 <HAL_LTDC_Init+0xce>
 8007088:	f000f800 	.word	0xf000f800

0800708c <HAL_LTDC_ErrorCallback>:
 800708c:	4770      	bx	lr

0800708e <HAL_LTDC_ReloadEventCallback>:
 800708e:	4770      	bx	lr

08007090 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007090:	6803      	ldr	r3, [r0, #0]
{
 8007092:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007094:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8007096:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007098:	0772      	lsls	r2, r6, #29
{
 800709a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800709c:	d514      	bpl.n	80070c8 <HAL_LTDC_IRQHandler+0x38>
 800709e:	0769      	lsls	r1, r5, #29
 80070a0:	d512      	bpl.n	80070c8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80070a2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070a4:	f022 0204 	bic.w	r2, r2, #4
 80070a8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80070aa:	2204      	movs	r2, #4
 80070ac:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80070ae:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80070b2:	f043 0301 	orr.w	r3, r3, #1
 80070b6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80070ba:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80070bc:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80070c0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80070c4:	f7ff ffe2 	bl	800708c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80070c8:	07b2      	lsls	r2, r6, #30
 80070ca:	d516      	bpl.n	80070fa <HAL_LTDC_IRQHandler+0x6a>
 80070cc:	07ab      	lsls	r3, r5, #30
 80070ce:	d514      	bpl.n	80070fa <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80070d0:	6823      	ldr	r3, [r4, #0]
 80070d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070d4:	f022 0202 	bic.w	r2, r2, #2
 80070d8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80070da:	2202      	movs	r2, #2
 80070dc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80070de:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80070e2:	4313      	orrs	r3, r2
 80070e4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80070e8:	2304      	movs	r3, #4
 80070ea:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80070ee:	2300      	movs	r3, #0
 80070f0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80070f4:	4620      	mov	r0, r4
 80070f6:	f7ff ffc9 	bl	800708c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80070fa:	07f0      	lsls	r0, r6, #31
 80070fc:	d510      	bpl.n	8007120 <HAL_LTDC_IRQHandler+0x90>
 80070fe:	07e9      	lsls	r1, r5, #31
 8007100:	d50e      	bpl.n	8007120 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007102:	6823      	ldr	r3, [r4, #0]
 8007104:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007106:	f022 0201 	bic.w	r2, r2, #1
 800710a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800710c:	2201      	movs	r2, #1
 800710e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007110:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007112:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007116:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800711a:	4620      	mov	r0, r4
 800711c:	f7f9 fffa 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007120:	0732      	lsls	r2, r6, #28
 8007122:	d511      	bpl.n	8007148 <HAL_LTDC_IRQHandler+0xb8>
 8007124:	072b      	lsls	r3, r5, #28
 8007126:	d50f      	bpl.n	8007148 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007128:	6823      	ldr	r3, [r4, #0]
 800712a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800712c:	f022 0208 	bic.w	r2, r2, #8
 8007130:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007132:	2208      	movs	r2, #8
 8007134:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007136:	2301      	movs	r3, #1
 8007138:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800713c:	2300      	movs	r3, #0
 800713e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007142:	4620      	mov	r0, r4
 8007144:	f7ff ffa3 	bl	800708e <HAL_LTDC_ReloadEventCallback>
}
 8007148:	bd70      	pop	{r4, r5, r6, pc}

0800714a <HAL_LTDC_ConfigLayer>:
{
 800714a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800714e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007152:	2b01      	cmp	r3, #1
{
 8007154:	4606      	mov	r6, r0
 8007156:	460f      	mov	r7, r1
 8007158:	4694      	mov	ip, r2
 800715a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800715e:	d01f      	beq.n	80071a0 <HAL_LTDC_ConfigLayer+0x56>
 8007160:	f04f 0801 	mov.w	r8, #1
 8007164:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007168:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800716c:	2434      	movs	r4, #52	; 0x34
 800716e:	460d      	mov	r5, r1
 8007170:	fb04 6402 	mla	r4, r4, r2, r6
 8007174:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007176:	3438      	adds	r4, #56	; 0x38
 8007178:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800717a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800717c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800717e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007180:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007182:	682b      	ldr	r3, [r5, #0]
 8007184:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007186:	4630      	mov	r0, r6
 8007188:	4662      	mov	r2, ip
 800718a:	4639      	mov	r1, r7
 800718c:	f7ff fe8c 	bl	8006ea8 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007190:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8007192:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007194:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8007198:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800719c:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80071a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080071a4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80071a4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80071a8:	2b01      	cmp	r3, #1
 80071aa:	f04f 0302 	mov.w	r3, #2
 80071ae:	d012      	beq.n	80071d6 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80071b0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80071b4:	6803      	ldr	r3, [r0, #0]
 80071b6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071b8:	f022 0201 	bic.w	r2, r2, #1
 80071bc:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80071be:	4a07      	ldr	r2, [pc, #28]	; (80071dc <HAL_LTDC_ProgramLineEvent+0x38>)
 80071c0:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80071c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071c4:	f042 0201 	orr.w	r2, r2, #1
 80071c8:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80071ca:	2301      	movs	r3, #1
 80071cc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80071d0:	2300      	movs	r3, #0
 80071d2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80071d6:	4618      	mov	r0, r3
}
 80071d8:	4770      	bx	lr
 80071da:	bf00      	nop
 80071dc:	40016800 	.word	0x40016800

080071e0 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80071e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80071e4:	4604      	mov	r4, r0
 80071e6:	b340      	cbz	r0, 800723a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80071e8:	6803      	ldr	r3, [r0, #0]
 80071ea:	07dd      	lsls	r5, r3, #31
 80071ec:	d410      	bmi.n	8007210 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80071ee:	6823      	ldr	r3, [r4, #0]
 80071f0:	0798      	lsls	r0, r3, #30
 80071f2:	d45e      	bmi.n	80072b2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80071f4:	6823      	ldr	r3, [r4, #0]
 80071f6:	071a      	lsls	r2, r3, #28
 80071f8:	f100 80a0 	bmi.w	800733c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80071fc:	6823      	ldr	r3, [r4, #0]
 80071fe:	075b      	lsls	r3, r3, #29
 8007200:	f100 80c0 	bmi.w	8007384 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007204:	69a0      	ldr	r0, [r4, #24]
 8007206:	2800      	cmp	r0, #0
 8007208:	f040 8128 	bne.w	800745c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800720c:	2000      	movs	r0, #0
 800720e:	e02b      	b.n	8007268 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007210:	4b8f      	ldr	r3, [pc, #572]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 8007212:	689a      	ldr	r2, [r3, #8]
 8007214:	f002 020c 	and.w	r2, r2, #12
 8007218:	2a04      	cmp	r2, #4
 800721a:	d007      	beq.n	800722c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800721c:	689a      	ldr	r2, [r3, #8]
 800721e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007222:	2a08      	cmp	r2, #8
 8007224:	d10b      	bne.n	800723e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007226:	685a      	ldr	r2, [r3, #4]
 8007228:	0251      	lsls	r1, r2, #9
 800722a:	d508      	bpl.n	800723e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800722c:	4b88      	ldr	r3, [pc, #544]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 800722e:	681b      	ldr	r3, [r3, #0]
 8007230:	039a      	lsls	r2, r3, #14
 8007232:	d5dc      	bpl.n	80071ee <HAL_RCC_OscConfig+0xe>
 8007234:	6863      	ldr	r3, [r4, #4]
 8007236:	2b00      	cmp	r3, #0
 8007238:	d1d9      	bne.n	80071ee <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800723a:	2001      	movs	r0, #1
 800723c:	e014      	b.n	8007268 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800723e:	6862      	ldr	r2, [r4, #4]
 8007240:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007244:	d113      	bne.n	800726e <HAL_RCC_OscConfig+0x8e>
 8007246:	681a      	ldr	r2, [r3, #0]
 8007248:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800724c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800724e:	f7fe fd3d 	bl	8005ccc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007252:	4e7f      	ldr	r6, [pc, #508]	; (8007450 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007254:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007256:	6833      	ldr	r3, [r6, #0]
 8007258:	039b      	lsls	r3, r3, #14
 800725a:	d4c8      	bmi.n	80071ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800725c:	f7fe fd36 	bl	8005ccc <HAL_GetTick>
 8007260:	1b40      	subs	r0, r0, r5
 8007262:	2864      	cmp	r0, #100	; 0x64
 8007264:	d9f7      	bls.n	8007256 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8007266:	2003      	movs	r0, #3
}
 8007268:	b002      	add	sp, #8
 800726a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800726e:	4d78      	ldr	r5, [pc, #480]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 8007270:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8007274:	682b      	ldr	r3, [r5, #0]
 8007276:	d107      	bne.n	8007288 <HAL_RCC_OscConfig+0xa8>
 8007278:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800727c:	602b      	str	r3, [r5, #0]
 800727e:	682b      	ldr	r3, [r5, #0]
 8007280:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007284:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007286:	e7e2      	b.n	800724e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007288:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800728c:	602b      	str	r3, [r5, #0]
 800728e:	682b      	ldr	r3, [r5, #0]
 8007290:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007294:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007296:	2a00      	cmp	r2, #0
 8007298:	d1d9      	bne.n	800724e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800729a:	f7fe fd17 	bl	8005ccc <HAL_GetTick>
 800729e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80072a0:	682b      	ldr	r3, [r5, #0]
 80072a2:	039f      	lsls	r7, r3, #14
 80072a4:	d5a3      	bpl.n	80071ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80072a6:	f7fe fd11 	bl	8005ccc <HAL_GetTick>
 80072aa:	1b80      	subs	r0, r0, r6
 80072ac:	2864      	cmp	r0, #100	; 0x64
 80072ae:	d9f7      	bls.n	80072a0 <HAL_RCC_OscConfig+0xc0>
 80072b0:	e7d9      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80072b2:	4b67      	ldr	r3, [pc, #412]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 80072b4:	689a      	ldr	r2, [r3, #8]
 80072b6:	f012 0f0c 	tst.w	r2, #12
 80072ba:	d007      	beq.n	80072cc <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80072bc:	689a      	ldr	r2, [r3, #8]
 80072be:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80072c2:	2a08      	cmp	r2, #8
 80072c4:	d111      	bne.n	80072ea <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80072c6:	685b      	ldr	r3, [r3, #4]
 80072c8:	025e      	lsls	r6, r3, #9
 80072ca:	d40e      	bmi.n	80072ea <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80072cc:	4a60      	ldr	r2, [pc, #384]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 80072ce:	6813      	ldr	r3, [r2, #0]
 80072d0:	079d      	lsls	r5, r3, #30
 80072d2:	d502      	bpl.n	80072da <HAL_RCC_OscConfig+0xfa>
 80072d4:	68e3      	ldr	r3, [r4, #12]
 80072d6:	2b01      	cmp	r3, #1
 80072d8:	d1af      	bne.n	800723a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80072da:	6813      	ldr	r3, [r2, #0]
 80072dc:	6921      	ldr	r1, [r4, #16]
 80072de:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80072e2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80072e6:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80072e8:	e784      	b.n	80071f4 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80072ea:	68e2      	ldr	r2, [r4, #12]
 80072ec:	4b59      	ldr	r3, [pc, #356]	; (8007454 <HAL_RCC_OscConfig+0x274>)
 80072ee:	b1b2      	cbz	r2, 800731e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80072f0:	2201      	movs	r2, #1
 80072f2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80072f4:	f7fe fcea 	bl	8005ccc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80072f8:	4d55      	ldr	r5, [pc, #340]	; (8007450 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80072fa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80072fc:	682b      	ldr	r3, [r5, #0]
 80072fe:	0798      	lsls	r0, r3, #30
 8007300:	d507      	bpl.n	8007312 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007302:	682b      	ldr	r3, [r5, #0]
 8007304:	6922      	ldr	r2, [r4, #16]
 8007306:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800730a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800730e:	602b      	str	r3, [r5, #0]
 8007310:	e770      	b.n	80071f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007312:	f7fe fcdb 	bl	8005ccc <HAL_GetTick>
 8007316:	1b80      	subs	r0, r0, r6
 8007318:	2802      	cmp	r0, #2
 800731a:	d9ef      	bls.n	80072fc <HAL_RCC_OscConfig+0x11c>
 800731c:	e7a3      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800731e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007320:	f7fe fcd4 	bl	8005ccc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007324:	4e4a      	ldr	r6, [pc, #296]	; (8007450 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007326:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007328:	6833      	ldr	r3, [r6, #0]
 800732a:	0799      	lsls	r1, r3, #30
 800732c:	f57f af62 	bpl.w	80071f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007330:	f7fe fccc 	bl	8005ccc <HAL_GetTick>
 8007334:	1b40      	subs	r0, r0, r5
 8007336:	2802      	cmp	r0, #2
 8007338:	d9f6      	bls.n	8007328 <HAL_RCC_OscConfig+0x148>
 800733a:	e794      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800733c:	6962      	ldr	r2, [r4, #20]
 800733e:	4b45      	ldr	r3, [pc, #276]	; (8007454 <HAL_RCC_OscConfig+0x274>)
 8007340:	b182      	cbz	r2, 8007364 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8007342:	2201      	movs	r2, #1
 8007344:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007348:	f7fe fcc0 	bl	8005ccc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800734c:	4e40      	ldr	r6, [pc, #256]	; (8007450 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800734e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007350:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007352:	079f      	lsls	r7, r3, #30
 8007354:	f53f af52 	bmi.w	80071fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007358:	f7fe fcb8 	bl	8005ccc <HAL_GetTick>
 800735c:	1b40      	subs	r0, r0, r5
 800735e:	2802      	cmp	r0, #2
 8007360:	d9f6      	bls.n	8007350 <HAL_RCC_OscConfig+0x170>
 8007362:	e780      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8007364:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007368:	f7fe fcb0 	bl	8005ccc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800736c:	4e38      	ldr	r6, [pc, #224]	; (8007450 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800736e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007370:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007372:	0798      	lsls	r0, r3, #30
 8007374:	f57f af42 	bpl.w	80071fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007378:	f7fe fca8 	bl	8005ccc <HAL_GetTick>
 800737c:	1b40      	subs	r0, r0, r5
 800737e:	2802      	cmp	r0, #2
 8007380:	d9f6      	bls.n	8007370 <HAL_RCC_OscConfig+0x190>
 8007382:	e770      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007384:	4b32      	ldr	r3, [pc, #200]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 8007386:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007388:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800738c:	d128      	bne.n	80073e0 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800738e:	9201      	str	r2, [sp, #4]
 8007390:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007392:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007396:	641a      	str	r2, [r3, #64]	; 0x40
 8007398:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800739a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800739e:	9301      	str	r3, [sp, #4]
 80073a0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80073a2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80073a4:	4d2c      	ldr	r5, [pc, #176]	; (8007458 <HAL_RCC_OscConfig+0x278>)
 80073a6:	682b      	ldr	r3, [r5, #0]
 80073a8:	05d9      	lsls	r1, r3, #23
 80073aa:	d51b      	bpl.n	80073e4 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80073ac:	68a3      	ldr	r3, [r4, #8]
 80073ae:	4d28      	ldr	r5, [pc, #160]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 80073b0:	2b01      	cmp	r3, #1
 80073b2:	d127      	bne.n	8007404 <HAL_RCC_OscConfig+0x224>
 80073b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80073b6:	f043 0301 	orr.w	r3, r3, #1
 80073ba:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80073bc:	f7fe fc86 	bl	8005ccc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80073c0:	4e23      	ldr	r6, [pc, #140]	; (8007450 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80073c2:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80073c4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80073c8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80073ca:	079b      	lsls	r3, r3, #30
 80073cc:	d539      	bpl.n	8007442 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 80073ce:	2f00      	cmp	r7, #0
 80073d0:	f43f af18 	beq.w	8007204 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80073d4:	4a1e      	ldr	r2, [pc, #120]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 80073d6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80073d8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80073dc:	6413      	str	r3, [r2, #64]	; 0x40
 80073de:	e711      	b.n	8007204 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80073e0:	2700      	movs	r7, #0
 80073e2:	e7df      	b.n	80073a4 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80073e4:	682b      	ldr	r3, [r5, #0]
 80073e6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80073ea:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80073ec:	f7fe fc6e 	bl	8005ccc <HAL_GetTick>
 80073f0:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80073f2:	682b      	ldr	r3, [r5, #0]
 80073f4:	05da      	lsls	r2, r3, #23
 80073f6:	d4d9      	bmi.n	80073ac <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80073f8:	f7fe fc68 	bl	8005ccc <HAL_GetTick>
 80073fc:	1b80      	subs	r0, r0, r6
 80073fe:	2802      	cmp	r0, #2
 8007400:	d9f7      	bls.n	80073f2 <HAL_RCC_OscConfig+0x212>
 8007402:	e730      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007404:	2b05      	cmp	r3, #5
 8007406:	d104      	bne.n	8007412 <HAL_RCC_OscConfig+0x232>
 8007408:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800740a:	f043 0304 	orr.w	r3, r3, #4
 800740e:	672b      	str	r3, [r5, #112]	; 0x70
 8007410:	e7d0      	b.n	80073b4 <HAL_RCC_OscConfig+0x1d4>
 8007412:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007414:	f022 0201 	bic.w	r2, r2, #1
 8007418:	672a      	str	r2, [r5, #112]	; 0x70
 800741a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800741c:	f022 0204 	bic.w	r2, r2, #4
 8007420:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007422:	2b00      	cmp	r3, #0
 8007424:	d1ca      	bne.n	80073bc <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007426:	f7fe fc51 	bl	8005ccc <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800742a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800742e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007430:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007432:	0798      	lsls	r0, r3, #30
 8007434:	d5cb      	bpl.n	80073ce <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007436:	f7fe fc49 	bl	8005ccc <HAL_GetTick>
 800743a:	1b80      	subs	r0, r0, r6
 800743c:	4540      	cmp	r0, r8
 800743e:	d9f7      	bls.n	8007430 <HAL_RCC_OscConfig+0x250>
 8007440:	e711      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007442:	f7fe fc43 	bl	8005ccc <HAL_GetTick>
 8007446:	1b40      	subs	r0, r0, r5
 8007448:	4540      	cmp	r0, r8
 800744a:	d9bd      	bls.n	80073c8 <HAL_RCC_OscConfig+0x1e8>
 800744c:	e70b      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
 800744e:	bf00      	nop
 8007450:	40023800 	.word	0x40023800
 8007454:	42470000 	.word	0x42470000
 8007458:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800745c:	4d33      	ldr	r5, [pc, #204]	; (800752c <HAL_RCC_OscConfig+0x34c>)
 800745e:	68ab      	ldr	r3, [r5, #8]
 8007460:	f003 030c 	and.w	r3, r3, #12
 8007464:	2b08      	cmp	r3, #8
 8007466:	d03d      	beq.n	80074e4 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007468:	4b31      	ldr	r3, [pc, #196]	; (8007530 <HAL_RCC_OscConfig+0x350>)
 800746a:	2200      	movs	r2, #0
 800746c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800746e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007470:	d12b      	bne.n	80074ca <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8007472:	f7fe fc2b 	bl	8005ccc <HAL_GetTick>
 8007476:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007478:	682b      	ldr	r3, [r5, #0]
 800747a:	0199      	lsls	r1, r3, #6
 800747c:	d41f      	bmi.n	80074be <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800747e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007482:	4313      	orrs	r3, r2
 8007484:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007486:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800748a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800748c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007490:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007492:	0852      	lsrs	r2, r2, #1
 8007494:	3a01      	subs	r2, #1
 8007496:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800749a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800749c:	4b24      	ldr	r3, [pc, #144]	; (8007530 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800749e:	4d23      	ldr	r5, [pc, #140]	; (800752c <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80074a0:	2201      	movs	r2, #1
 80074a2:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80074a4:	f7fe fc12 	bl	8005ccc <HAL_GetTick>
 80074a8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80074aa:	682b      	ldr	r3, [r5, #0]
 80074ac:	019a      	lsls	r2, r3, #6
 80074ae:	f53f aead 	bmi.w	800720c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074b2:	f7fe fc0b 	bl	8005ccc <HAL_GetTick>
 80074b6:	1b00      	subs	r0, r0, r4
 80074b8:	2802      	cmp	r0, #2
 80074ba:	d9f6      	bls.n	80074aa <HAL_RCC_OscConfig+0x2ca>
 80074bc:	e6d3      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074be:	f7fe fc05 	bl	8005ccc <HAL_GetTick>
 80074c2:	1b80      	subs	r0, r0, r6
 80074c4:	2802      	cmp	r0, #2
 80074c6:	d9d7      	bls.n	8007478 <HAL_RCC_OscConfig+0x298>
 80074c8:	e6cd      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80074ca:	f7fe fbff 	bl	8005ccc <HAL_GetTick>
 80074ce:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80074d0:	682b      	ldr	r3, [r5, #0]
 80074d2:	019b      	lsls	r3, r3, #6
 80074d4:	f57f ae9a 	bpl.w	800720c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074d8:	f7fe fbf8 	bl	8005ccc <HAL_GetTick>
 80074dc:	1b00      	subs	r0, r0, r4
 80074de:	2802      	cmp	r0, #2
 80074e0:	d9f6      	bls.n	80074d0 <HAL_RCC_OscConfig+0x2f0>
 80074e2:	e6c0      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80074e4:	2801      	cmp	r0, #1
 80074e6:	f43f aebf 	beq.w	8007268 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80074ea:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80074ec:	69e2      	ldr	r2, [r4, #28]
 80074ee:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 80074f2:	4291      	cmp	r1, r2
 80074f4:	f47f aea1 	bne.w	800723a <HAL_RCC_OscConfig+0x5a>
 80074f8:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80074fa:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80074fe:	428a      	cmp	r2, r1
 8007500:	f47f ae9b 	bne.w	800723a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007504:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007506:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800750a:	401a      	ands	r2, r3
 800750c:	428a      	cmp	r2, r1
 800750e:	f47f ae94 	bne.w	800723a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007512:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007514:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007518:	428a      	cmp	r2, r1
 800751a:	f47f ae8e 	bne.w	800723a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800751e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8007520:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007524:	4293      	cmp	r3, r2
 8007526:	f43f ae71 	beq.w	800720c <HAL_RCC_OscConfig+0x2c>
 800752a:	e686      	b.n	800723a <HAL_RCC_OscConfig+0x5a>
 800752c:	40023800 	.word	0x40023800
 8007530:	42470000 	.word	0x42470000

08007534 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007534:	4913      	ldr	r1, [pc, #76]	; (8007584 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007536:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007538:	688b      	ldr	r3, [r1, #8]
 800753a:	f003 030c 	and.w	r3, r3, #12
 800753e:	2b04      	cmp	r3, #4
 8007540:	d01c      	beq.n	800757c <HAL_RCC_GetSysClockFreq+0x48>
 8007542:	2b08      	cmp	r3, #8
 8007544:	d11c      	bne.n	8007580 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007546:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007548:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800754a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800754c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007550:	bf14      	ite	ne
 8007552:	480d      	ldrne	r0, [pc, #52]	; (8007588 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007554:	480d      	ldreq	r0, [pc, #52]	; (800758c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007556:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800755a:	bf18      	it	ne
 800755c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800755e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007562:	fba1 0100 	umull	r0, r1, r1, r0
 8007566:	f7f8 fe93 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800756a:	4b06      	ldr	r3, [pc, #24]	; (8007584 <HAL_RCC_GetSysClockFreq+0x50>)
 800756c:	685b      	ldr	r3, [r3, #4]
 800756e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8007572:	3301      	adds	r3, #1
 8007574:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007576:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800757a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800757c:	4802      	ldr	r0, [pc, #8]	; (8007588 <HAL_RCC_GetSysClockFreq+0x54>)
 800757e:	e7fc      	b.n	800757a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8007580:	4802      	ldr	r0, [pc, #8]	; (800758c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8007582:	e7fa      	b.n	800757a <HAL_RCC_GetSysClockFreq+0x46>
 8007584:	40023800 	.word	0x40023800
 8007588:	007a1200 	.word	0x007a1200
 800758c:	00f42400 	.word	0x00f42400

08007590 <HAL_RCC_ClockConfig>:
{
 8007590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007594:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007596:	4604      	mov	r4, r0
 8007598:	b910      	cbnz	r0, 80075a0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800759a:	2001      	movs	r0, #1
}
 800759c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80075a0:	4b44      	ldr	r3, [pc, #272]	; (80076b4 <HAL_RCC_ClockConfig+0x124>)
 80075a2:	681a      	ldr	r2, [r3, #0]
 80075a4:	f002 020f 	and.w	r2, r2, #15
 80075a8:	428a      	cmp	r2, r1
 80075aa:	d328      	bcc.n	80075fe <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80075ac:	6822      	ldr	r2, [r4, #0]
 80075ae:	0797      	lsls	r7, r2, #30
 80075b0:	d42d      	bmi.n	800760e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80075b2:	07d0      	lsls	r0, r2, #31
 80075b4:	d441      	bmi.n	800763a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80075b6:	4b3f      	ldr	r3, [pc, #252]	; (80076b4 <HAL_RCC_ClockConfig+0x124>)
 80075b8:	681a      	ldr	r2, [r3, #0]
 80075ba:	f002 020f 	and.w	r2, r2, #15
 80075be:	42aa      	cmp	r2, r5
 80075c0:	d866      	bhi.n	8007690 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80075c2:	6822      	ldr	r2, [r4, #0]
 80075c4:	0751      	lsls	r1, r2, #29
 80075c6:	d46c      	bmi.n	80076a2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80075c8:	0713      	lsls	r3, r2, #28
 80075ca:	d507      	bpl.n	80075dc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80075cc:	4a3a      	ldr	r2, [pc, #232]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 80075ce:	6921      	ldr	r1, [r4, #16]
 80075d0:	6893      	ldr	r3, [r2, #8]
 80075d2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80075d6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80075da:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80075dc:	f7ff ffaa 	bl	8007534 <HAL_RCC_GetSysClockFreq>
 80075e0:	4b35      	ldr	r3, [pc, #212]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 80075e2:	4a36      	ldr	r2, [pc, #216]	; (80076bc <HAL_RCC_ClockConfig+0x12c>)
 80075e4:	689b      	ldr	r3, [r3, #8]
 80075e6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80075ea:	5cd3      	ldrb	r3, [r2, r3]
 80075ec:	40d8      	lsrs	r0, r3
 80075ee:	4b34      	ldr	r3, [pc, #208]	; (80076c0 <HAL_RCC_ClockConfig+0x130>)
 80075f0:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80075f2:	4b34      	ldr	r3, [pc, #208]	; (80076c4 <HAL_RCC_ClockConfig+0x134>)
 80075f4:	6818      	ldr	r0, [r3, #0]
 80075f6:	f7fa fd07 	bl	8002008 <HAL_InitTick>
  return HAL_OK;
 80075fa:	2000      	movs	r0, #0
 80075fc:	e7ce      	b.n	800759c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80075fe:	b2ca      	uxtb	r2, r1
 8007600:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007602:	681b      	ldr	r3, [r3, #0]
 8007604:	f003 030f 	and.w	r3, r3, #15
 8007608:	428b      	cmp	r3, r1
 800760a:	d1c6      	bne.n	800759a <HAL_RCC_ClockConfig+0xa>
 800760c:	e7ce      	b.n	80075ac <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800760e:	4b2a      	ldr	r3, [pc, #168]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 8007610:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007614:	bf1e      	ittt	ne
 8007616:	6899      	ldrne	r1, [r3, #8]
 8007618:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800761c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800761e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007620:	bf42      	ittt	mi
 8007622:	6899      	ldrmi	r1, [r3, #8]
 8007624:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007628:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800762a:	4923      	ldr	r1, [pc, #140]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 800762c:	68a0      	ldr	r0, [r4, #8]
 800762e:	688b      	ldr	r3, [r1, #8]
 8007630:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007634:	4303      	orrs	r3, r0
 8007636:	608b      	str	r3, [r1, #8]
 8007638:	e7bb      	b.n	80075b2 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800763a:	6862      	ldr	r2, [r4, #4]
 800763c:	4b1e      	ldr	r3, [pc, #120]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 800763e:	2a01      	cmp	r2, #1
 8007640:	d11c      	bne.n	800767c <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007648:	d0a7      	beq.n	800759a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800764a:	4e1b      	ldr	r6, [pc, #108]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 800764c:	68b3      	ldr	r3, [r6, #8]
 800764e:	f023 0303 	bic.w	r3, r3, #3
 8007652:	4313      	orrs	r3, r2
 8007654:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007656:	f7fe fb39 	bl	8005ccc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800765a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800765e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007660:	68b3      	ldr	r3, [r6, #8]
 8007662:	6862      	ldr	r2, [r4, #4]
 8007664:	f003 030c 	and.w	r3, r3, #12
 8007668:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800766c:	d0a3      	beq.n	80075b6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800766e:	f7fe fb2d 	bl	8005ccc <HAL_GetTick>
 8007672:	1bc0      	subs	r0, r0, r7
 8007674:	4540      	cmp	r0, r8
 8007676:	d9f3      	bls.n	8007660 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007678:	2003      	movs	r0, #3
 800767a:	e78f      	b.n	800759c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800767c:	1e91      	subs	r1, r2, #2
 800767e:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007680:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007682:	d802      	bhi.n	800768a <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007684:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007688:	e7de      	b.n	8007648 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800768a:	f013 0f02 	tst.w	r3, #2
 800768e:	e7db      	b.n	8007648 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007690:	b2ea      	uxtb	r2, r5
 8007692:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007694:	681b      	ldr	r3, [r3, #0]
 8007696:	f003 030f 	and.w	r3, r3, #15
 800769a:	42ab      	cmp	r3, r5
 800769c:	f47f af7d 	bne.w	800759a <HAL_RCC_ClockConfig+0xa>
 80076a0:	e78f      	b.n	80075c2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80076a2:	4905      	ldr	r1, [pc, #20]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 80076a4:	68e0      	ldr	r0, [r4, #12]
 80076a6:	688b      	ldr	r3, [r1, #8]
 80076a8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80076ac:	4303      	orrs	r3, r0
 80076ae:	608b      	str	r3, [r1, #8]
 80076b0:	e78a      	b.n	80075c8 <HAL_RCC_ClockConfig+0x38>
 80076b2:	bf00      	nop
 80076b4:	40023c00 	.word	0x40023c00
 80076b8:	40023800 	.word	0x40023800
 80076bc:	080234bc 	.word	0x080234bc
 80076c0:	2000007c 	.word	0x2000007c
 80076c4:	20000084 	.word	0x20000084

080076c8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80076c8:	4b04      	ldr	r3, [pc, #16]	; (80076dc <HAL_RCC_GetPCLK1Freq+0x14>)
 80076ca:	4a05      	ldr	r2, [pc, #20]	; (80076e0 <HAL_RCC_GetPCLK1Freq+0x18>)
 80076cc:	689b      	ldr	r3, [r3, #8]
 80076ce:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80076d2:	5cd3      	ldrb	r3, [r2, r3]
 80076d4:	4a03      	ldr	r2, [pc, #12]	; (80076e4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80076d6:	6810      	ldr	r0, [r2, #0]
}
 80076d8:	40d8      	lsrs	r0, r3
 80076da:	4770      	bx	lr
 80076dc:	40023800 	.word	0x40023800
 80076e0:	080234cc 	.word	0x080234cc
 80076e4:	2000007c 	.word	0x2000007c

080076e8 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80076e8:	4b04      	ldr	r3, [pc, #16]	; (80076fc <HAL_RCC_GetPCLK2Freq+0x14>)
 80076ea:	4a05      	ldr	r2, [pc, #20]	; (8007700 <HAL_RCC_GetPCLK2Freq+0x18>)
 80076ec:	689b      	ldr	r3, [r3, #8]
 80076ee:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80076f2:	5cd3      	ldrb	r3, [r2, r3]
 80076f4:	4a03      	ldr	r2, [pc, #12]	; (8007704 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80076f6:	6810      	ldr	r0, [r2, #0]
}
 80076f8:	40d8      	lsrs	r0, r3
 80076fa:	4770      	bx	lr
 80076fc:	40023800 	.word	0x40023800
 8007700:	080234cc 	.word	0x080234cc
 8007704:	2000007c 	.word	0x2000007c

08007708 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007708:	230f      	movs	r3, #15
 800770a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800770c:	4b0b      	ldr	r3, [pc, #44]	; (800773c <HAL_RCC_GetClockConfig+0x34>)
 800770e:	689a      	ldr	r2, [r3, #8]
 8007710:	f002 0203 	and.w	r2, r2, #3
 8007714:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007716:	689a      	ldr	r2, [r3, #8]
 8007718:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800771c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800771e:	689a      	ldr	r2, [r3, #8]
 8007720:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007724:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007726:	689b      	ldr	r3, [r3, #8]
 8007728:	08db      	lsrs	r3, r3, #3
 800772a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800772e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007730:	4b03      	ldr	r3, [pc, #12]	; (8007740 <HAL_RCC_GetClockConfig+0x38>)
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	f003 030f 	and.w	r3, r3, #15
 8007738:	600b      	str	r3, [r1, #0]
}
 800773a:	4770      	bx	lr
 800773c:	40023800 	.word	0x40023800
 8007740:	40023c00 	.word	0x40023c00

08007744 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007744:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007746:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800774a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800774c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800774e:	f040 808c 	bne.w	800786a <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8007752:	6823      	ldr	r3, [r4, #0]
 8007754:	f013 0f0c 	tst.w	r3, #12
 8007758:	d045      	beq.n	80077e6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800775a:	4b8b      	ldr	r3, [pc, #556]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800775c:	4d8b      	ldr	r5, [pc, #556]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 800775e:	2200      	movs	r2, #0
 8007760:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007762:	f7fe fab3 	bl	8005ccc <HAL_GetTick>
 8007766:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007768:	682b      	ldr	r3, [r5, #0]
 800776a:	009f      	lsls	r7, r3, #2
 800776c:	f100 80cf 	bmi.w	800790e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8007770:	6821      	ldr	r1, [r4, #0]
 8007772:	074e      	lsls	r6, r1, #29
 8007774:	d515      	bpl.n	80077a2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007776:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800777a:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800777e:	061b      	lsls	r3, r3, #24
 8007780:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007784:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007788:	4313      	orrs	r3, r2
 800778a:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800778e:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007792:	6a22      	ldr	r2, [r4, #32]
 8007794:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007798:	3a01      	subs	r2, #1
 800779a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800779e:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80077a2:	070d      	lsls	r5, r1, #28
 80077a4:	d514      	bpl.n	80077d0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077a6:	4a79      	ldr	r2, [pc, #484]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077a8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077aa:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077ae:	6920      	ldr	r0, [r4, #16]
 80077b0:	071b      	lsls	r3, r3, #28
 80077b2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80077b6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80077ba:	430b      	orrs	r3, r1
 80077bc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80077c0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80077c4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80077c6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80077ca:	430b      	orrs	r3, r1
 80077cc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80077d0:	4b6d      	ldr	r3, [pc, #436]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80077d2:	4e6e      	ldr	r6, [pc, #440]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 80077d4:	2201      	movs	r2, #1
 80077d6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80077d8:	f7fe fa78 	bl	8005ccc <HAL_GetTick>
 80077dc:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80077de:	6833      	ldr	r3, [r6, #0]
 80077e0:	0098      	lsls	r0, r3, #2
 80077e2:	f140 809b 	bpl.w	800791c <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80077e6:	6823      	ldr	r3, [r4, #0]
 80077e8:	069b      	lsls	r3, r3, #26
 80077ea:	d533      	bpl.n	8007854 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80077ec:	2300      	movs	r3, #0
 80077ee:	9301      	str	r3, [sp, #4]
 80077f0:	4b66      	ldr	r3, [pc, #408]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80077f2:	4d67      	ldr	r5, [pc, #412]	; (8007990 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80077f4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80077f6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80077fa:	641a      	str	r2, [r3, #64]	; 0x40
 80077fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80077fe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007802:	9301      	str	r3, [sp, #4]
 8007804:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007806:	682b      	ldr	r3, [r5, #0]
 8007808:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800780c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800780e:	f7fe fa5d 	bl	8005ccc <HAL_GetTick>
 8007812:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007814:	682b      	ldr	r3, [r5, #0]
 8007816:	05d9      	lsls	r1, r3, #23
 8007818:	f140 8087 	bpl.w	800792a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800781c:	4d5b      	ldr	r5, [pc, #364]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800781e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007820:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007824:	f040 8088 	bne.w	8007938 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007828:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800782a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800782e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007832:	4a56      	ldr	r2, [pc, #344]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007834:	f040 80a4 	bne.w	8007980 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007838:	6891      	ldr	r1, [r2, #8]
 800783a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800783e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007842:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007846:	4301      	orrs	r1, r0
 8007848:	6091      	str	r1, [r2, #8]
 800784a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800784c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007850:	430b      	orrs	r3, r1
 8007852:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007854:	6820      	ldr	r0, [r4, #0]
 8007856:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800785a:	bf1f      	itttt	ne
 800785c:	4b4d      	ldrne	r3, [pc, #308]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800785e:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8007862:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8007866:	2000      	movne	r0, #0
 8007868:	e04f      	b.n	800790a <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 800786a:	4b47      	ldr	r3, [pc, #284]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800786c:	4e47      	ldr	r6, [pc, #284]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 800786e:	2200      	movs	r2, #0
 8007870:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007872:	f7fe fa2b 	bl	8005ccc <HAL_GetTick>
 8007876:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007878:	6833      	ldr	r3, [r6, #0]
 800787a:	011f      	lsls	r7, r3, #4
 800787c:	d43f      	bmi.n	80078fe <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800787e:	6821      	ldr	r1, [r4, #0]
 8007880:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8007882:	bf41      	itttt	mi
 8007884:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007888:	071b      	lslmi	r3, r3, #28
 800788a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800788e:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8007892:	0788      	lsls	r0, r1, #30
 8007894:	d515      	bpl.n	80078c2 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007896:	4a3d      	ldr	r2, [pc, #244]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007898:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800789a:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800789e:	6865      	ldr	r5, [r4, #4]
 80078a0:	061b      	lsls	r3, r3, #24
 80078a2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80078a6:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80078aa:	4303      	orrs	r3, r0
 80078ac:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80078b0:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80078b4:	69e3      	ldr	r3, [r4, #28]
 80078b6:	f020 001f 	bic.w	r0, r0, #31
 80078ba:	3b01      	subs	r3, #1
 80078bc:	4303      	orrs	r3, r0
 80078be:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80078c2:	0649      	lsls	r1, r1, #25
 80078c4:	d50a      	bpl.n	80078dc <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80078c6:	68e3      	ldr	r3, [r4, #12]
 80078c8:	6862      	ldr	r2, [r4, #4]
 80078ca:	061b      	lsls	r3, r3, #24
 80078cc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80078d0:	68a2      	ldr	r2, [r4, #8]
 80078d2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80078d6:	4a2d      	ldr	r2, [pc, #180]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80078d8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80078dc:	4b2a      	ldr	r3, [pc, #168]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80078de:	4e2b      	ldr	r6, [pc, #172]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 80078e0:	2201      	movs	r2, #1
 80078e2:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80078e4:	f7fe f9f2 	bl	8005ccc <HAL_GetTick>
 80078e8:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80078ea:	6833      	ldr	r3, [r6, #0]
 80078ec:	011a      	lsls	r2, r3, #4
 80078ee:	f53f af30 	bmi.w	8007752 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80078f2:	f7fe f9eb 	bl	8005ccc <HAL_GetTick>
 80078f6:	1b40      	subs	r0, r0, r5
 80078f8:	2802      	cmp	r0, #2
 80078fa:	d9f6      	bls.n	80078ea <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80078fc:	e004      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80078fe:	f7fe f9e5 	bl	8005ccc <HAL_GetTick>
 8007902:	1b40      	subs	r0, r0, r5
 8007904:	2802      	cmp	r0, #2
 8007906:	d9b7      	bls.n	8007878 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007908:	2003      	movs	r0, #3
}
 800790a:	b003      	add	sp, #12
 800790c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800790e:	f7fe f9dd 	bl	8005ccc <HAL_GetTick>
 8007912:	1b80      	subs	r0, r0, r6
 8007914:	2802      	cmp	r0, #2
 8007916:	f67f af27 	bls.w	8007768 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800791a:	e7f5      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800791c:	f7fe f9d6 	bl	8005ccc <HAL_GetTick>
 8007920:	1b40      	subs	r0, r0, r5
 8007922:	2802      	cmp	r0, #2
 8007924:	f67f af5b 	bls.w	80077de <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007928:	e7ee      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800792a:	f7fe f9cf 	bl	8005ccc <HAL_GetTick>
 800792e:	1b80      	subs	r0, r0, r6
 8007930:	2802      	cmp	r0, #2
 8007932:	f67f af6f 	bls.w	8007814 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007936:	e7e7      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007938:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800793a:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800793e:	4293      	cmp	r3, r2
 8007940:	f43f af72 	beq.w	8007828 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007944:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007946:	4a10      	ldr	r2, [pc, #64]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007948:	2101      	movs	r1, #1
 800794a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800794e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007952:	2100      	movs	r1, #0
 8007954:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007958:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800795a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800795c:	07da      	lsls	r2, r3, #31
 800795e:	f57f af63 	bpl.w	8007828 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8007962:	f7fe f9b3 	bl	8005ccc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007966:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800796a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800796c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800796e:	079b      	lsls	r3, r3, #30
 8007970:	f53f af5a 	bmi.w	8007828 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007974:	f7fe f9aa 	bl	8005ccc <HAL_GetTick>
 8007978:	1b80      	subs	r0, r0, r6
 800797a:	42b8      	cmp	r0, r7
 800797c:	d9f6      	bls.n	800796c <HAL_RCCEx_PeriphCLKConfig+0x228>
 800797e:	e7c3      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007980:	6891      	ldr	r1, [r2, #8]
 8007982:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007986:	e75f      	b.n	8007848 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8007988:	42470000 	.word	0x42470000
 800798c:	40023800 	.word	0x40023800
 8007990:	40007000 	.word	0x40007000
 8007994:	42471000 	.word	0x42471000

08007998 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8007998:	b538      	push	{r3, r4, r5, lr}
 800799a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800799c:	4604      	mov	r4, r0
 800799e:	b1c8      	cbz	r0, 80079d4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80079a0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80079a4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80079a8:	b91b      	cbnz	r3, 80079b2 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80079aa:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80079ae:	f7fa fabf 	bl	8001f30 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80079b2:	2302      	movs	r3, #2
 80079b4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80079b8:	1d21      	adds	r1, r4, #4
 80079ba:	6820      	ldr	r0, [r4, #0]
 80079bc:	f000 fcba 	bl	8008334 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80079c0:	6862      	ldr	r2, [r4, #4]
 80079c2:	6820      	ldr	r0, [r4, #0]
 80079c4:	4629      	mov	r1, r5
 80079c6:	f000 fceb 	bl	80083a0 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80079ca:	2301      	movs	r3, #1
 80079cc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80079d0:	2000      	movs	r0, #0
}
 80079d2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80079d4:	2001      	movs	r0, #1
 80079d6:	e7fc      	b.n	80079d2 <HAL_SDRAM_Init+0x3a>

080079d8 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80079d8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80079da:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80079de:	2b02      	cmp	r3, #2
{
 80079e0:	4604      	mov	r4, r0
 80079e2:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80079e4:	b2d8      	uxtb	r0, r3
 80079e6:	d00d      	beq.n	8007a04 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80079e8:	2302      	movs	r3, #2
 80079ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80079ee:	6820      	ldr	r0, [r4, #0]
 80079f0:	f000 fd12 	bl	8008418 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80079f4:	682b      	ldr	r3, [r5, #0]
 80079f6:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80079f8:	bf0c      	ite	eq
 80079fa:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80079fc:	2301      	movne	r3, #1
 80079fe:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007a02:	2000      	movs	r0, #0
}
 8007a04:	bd38      	pop	{r3, r4, r5, pc}

08007a06 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007a06:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a08:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a0c:	2b02      	cmp	r3, #2
{
 8007a0e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a10:	b2d8      	uxtb	r0, r3
 8007a12:	d009      	beq.n	8007a28 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a14:	2302      	movs	r3, #2
 8007a16:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007a1a:	6820      	ldr	r0, [r4, #0]
 8007a1c:	f000 fd23 	bl	8008466 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007a20:	2301      	movs	r3, #1
 8007a22:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007a26:	2000      	movs	r0, #0
}
 8007a28:	bd10      	pop	{r4, pc}

08007a2a <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007a2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a2c:	4604      	mov	r4, r0
 8007a2e:	460e      	mov	r6, r1
 8007a30:	4615      	mov	r5, r2
 8007a32:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007a34:	6822      	ldr	r2, [r4, #0]
 8007a36:	6893      	ldr	r3, [r2, #8]
 8007a38:	ea36 0303 	bics.w	r3, r6, r3
 8007a3c:	d001      	beq.n	8007a42 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007a3e:	2000      	movs	r0, #0
 8007a40:	e02d      	b.n	8007a9e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007a42:	1c6b      	adds	r3, r5, #1
 8007a44:	d0f7      	beq.n	8007a36 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007a46:	f7fe f941 	bl	8005ccc <HAL_GetTick>
 8007a4a:	1bc0      	subs	r0, r0, r7
 8007a4c:	4285      	cmp	r5, r0
 8007a4e:	d8f1      	bhi.n	8007a34 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007a50:	6823      	ldr	r3, [r4, #0]
 8007a52:	685a      	ldr	r2, [r3, #4]
 8007a54:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007a58:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007a5a:	6862      	ldr	r2, [r4, #4]
 8007a5c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007a60:	d10a      	bne.n	8007a78 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007a62:	68a2      	ldr	r2, [r4, #8]
 8007a64:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007a68:	d002      	beq.n	8007a70 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007a6a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007a6e:	d103      	bne.n	8007a78 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007a70:	681a      	ldr	r2, [r3, #0]
 8007a72:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007a76:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007a78:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007a7a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007a7e:	d107      	bne.n	8007a90 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007a80:	681a      	ldr	r2, [r3, #0]
 8007a82:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007a86:	601a      	str	r2, [r3, #0]
 8007a88:	681a      	ldr	r2, [r3, #0]
 8007a8a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007a8e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007a90:	2301      	movs	r3, #1
 8007a92:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007a96:	2300      	movs	r3, #0
 8007a98:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007a9c:	2003      	movs	r0, #3
}
 8007a9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007aa0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007aa0:	b538      	push	{r3, r4, r5, lr}
 8007aa2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007aa4:	6842      	ldr	r2, [r0, #4]
 8007aa6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007aaa:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007aac:	d11f      	bne.n	8007aee <SPI_EndRxTransaction+0x4e>
 8007aae:	6882      	ldr	r2, [r0, #8]
 8007ab0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007ab4:	d002      	beq.n	8007abc <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007ab6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007aba:	d107      	bne.n	8007acc <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007abc:	6825      	ldr	r5, [r4, #0]
 8007abe:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007ac0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007ac4:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007ac8:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007aca:	d007      	beq.n	8007adc <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007acc:	460a      	mov	r2, r1
 8007ace:	2180      	movs	r1, #128	; 0x80
 8007ad0:	4620      	mov	r0, r4
 8007ad2:	f7ff ffaa 	bl	8007a2a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007ad6:	b920      	cbnz	r0, 8007ae2 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007ad8:	2000      	movs	r0, #0
}
 8007ada:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007adc:	460a      	mov	r2, r1
 8007ade:	2101      	movs	r1, #1
 8007ae0:	e7f6      	b.n	8007ad0 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007ae2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007ae4:	f043 0320 	orr.w	r3, r3, #32
 8007ae8:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007aea:	2003      	movs	r0, #3
 8007aec:	e7f5      	b.n	8007ada <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007aee:	460a      	mov	r2, r1
 8007af0:	2101      	movs	r1, #1
 8007af2:	e7ee      	b.n	8007ad2 <SPI_EndRxTransaction+0x32>

08007af4 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007af4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007af6:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007af8:	4a12      	ldr	r2, [pc, #72]	; (8007b44 <SPI_EndRxTxTransaction+0x50>)
 8007afa:	6815      	ldr	r5, [r2, #0]
 8007afc:	4a12      	ldr	r2, [pc, #72]	; (8007b48 <SPI_EndRxTxTransaction+0x54>)
 8007afe:	fbb5 f5f2 	udiv	r5, r5, r2
 8007b02:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007b06:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b08:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b0a:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b0c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007b10:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b12:	d10b      	bne.n	8007b2c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b14:	460a      	mov	r2, r1
 8007b16:	2180      	movs	r1, #128	; 0x80
 8007b18:	f7ff ff87 	bl	8007a2a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007b1c:	b178      	cbz	r0, 8007b3e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b1e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007b20:	f043 0320 	orr.w	r3, r3, #32
 8007b24:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007b26:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007b28:	b003      	add	sp, #12
 8007b2a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007b2c:	9b01      	ldr	r3, [sp, #4]
 8007b2e:	b133      	cbz	r3, 8007b3e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007b30:	9b01      	ldr	r3, [sp, #4]
 8007b32:	3b01      	subs	r3, #1
 8007b34:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007b36:	6823      	ldr	r3, [r4, #0]
 8007b38:	689b      	ldr	r3, [r3, #8]
 8007b3a:	061b      	lsls	r3, r3, #24
 8007b3c:	d4f6      	bmi.n	8007b2c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007b3e:	2000      	movs	r0, #0
 8007b40:	e7f2      	b.n	8007b28 <SPI_EndRxTxTransaction+0x34>
 8007b42:	bf00      	nop
 8007b44:	2000007c 	.word	0x2000007c
 8007b48:	016e3600 	.word	0x016e3600

08007b4c <HAL_SPI_Init>:
{
 8007b4c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007b4e:	4604      	mov	r4, r0
 8007b50:	2800      	cmp	r0, #0
 8007b52:	d036      	beq.n	8007bc2 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007b54:	2300      	movs	r3, #0
 8007b56:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007b58:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007b5c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007b60:	b91b      	cbnz	r3, 8007b6a <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007b62:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007b66:	f7fa f98b 	bl	8001e80 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007b6a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007b6c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007b6e:	2302      	movs	r3, #2
 8007b70:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007b74:	680b      	ldr	r3, [r1, #0]
 8007b76:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007b7a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007b7c:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007b80:	4303      	orrs	r3, r0
 8007b82:	68e0      	ldr	r0, [r4, #12]
 8007b84:	4303      	orrs	r3, r0
 8007b86:	6920      	ldr	r0, [r4, #16]
 8007b88:	4303      	orrs	r3, r0
 8007b8a:	6960      	ldr	r0, [r4, #20]
 8007b8c:	4303      	orrs	r3, r0
 8007b8e:	69e0      	ldr	r0, [r4, #28]
 8007b90:	4303      	orrs	r3, r0
 8007b92:	6a20      	ldr	r0, [r4, #32]
 8007b94:	4303      	orrs	r3, r0
 8007b96:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007b98:	4303      	orrs	r3, r0
 8007b9a:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007b9e:	4303      	orrs	r3, r0
 8007ba0:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007ba2:	0c12      	lsrs	r2, r2, #16
 8007ba4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007ba6:	f002 0204 	and.w	r2, r2, #4
 8007baa:	431a      	orrs	r2, r3
 8007bac:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007bae:	69cb      	ldr	r3, [r1, #28]
 8007bb0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007bb4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007bb6:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007bb8:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007bba:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007bbc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007bc0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007bc2:	2001      	movs	r0, #1
 8007bc4:	e7fc      	b.n	8007bc0 <HAL_SPI_Init+0x74>

08007bc6 <HAL_SPI_Transmit>:
{
 8007bc6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007bca:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007bcc:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007bd0:	2b01      	cmp	r3, #1
{
 8007bd2:	4604      	mov	r4, r0
 8007bd4:	460d      	mov	r5, r1
 8007bd6:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007bd8:	f000 809d 	beq.w	8007d16 <HAL_SPI_Transmit+0x150>
 8007bdc:	2301      	movs	r3, #1
 8007bde:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007be2:	f7fe f873 	bl	8005ccc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007be6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007bea:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007bec:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007bee:	b2d8      	uxtb	r0, r3
 8007bf0:	f040 808f 	bne.w	8007d12 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007bf4:	2d00      	cmp	r5, #0
 8007bf6:	d05a      	beq.n	8007cae <HAL_SPI_Transmit+0xe8>
 8007bf8:	2f00      	cmp	r7, #0
 8007bfa:	d058      	beq.n	8007cae <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007bfc:	2303      	movs	r3, #3
 8007bfe:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c02:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007c04:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007c06:	2300      	movs	r3, #0
 8007c08:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007c0a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007c0e:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007c10:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007c12:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007c14:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007c16:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007c18:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c1a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007c1e:	bf08      	it	eq
 8007c20:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c22:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007c24:	bf04      	itt	eq
 8007c26:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007c2a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c2c:	681a      	ldr	r2, [r3, #0]
 8007c2e:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007c30:	bf5e      	ittt	pl
 8007c32:	681a      	ldrpl	r2, [r3, #0]
 8007c34:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007c38:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c3a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c3e:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c40:	d141      	bne.n	8007cc6 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c42:	b10a      	cbz	r2, 8007c48 <HAL_SPI_Transmit+0x82>
 8007c44:	2f01      	cmp	r7, #1
 8007c46:	d107      	bne.n	8007c58 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007c48:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007c4c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007c4e:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007c50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007c52:	3b01      	subs	r3, #1
 8007c54:	b29b      	uxth	r3, r3
 8007c56:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007c58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007c5a:	b29b      	uxth	r3, r3
 8007c5c:	b9a3      	cbnz	r3, 8007c88 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007c5e:	4642      	mov	r2, r8
 8007c60:	4631      	mov	r1, r6
 8007c62:	4620      	mov	r0, r4
 8007c64:	f7ff ff46 	bl	8007af4 <SPI_EndRxTxTransaction>
 8007c68:	2800      	cmp	r0, #0
 8007c6a:	d14f      	bne.n	8007d0c <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007c6c:	68a3      	ldr	r3, [r4, #8]
 8007c6e:	b933      	cbnz	r3, 8007c7e <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007c70:	9301      	str	r3, [sp, #4]
 8007c72:	6823      	ldr	r3, [r4, #0]
 8007c74:	68da      	ldr	r2, [r3, #12]
 8007c76:	9201      	str	r2, [sp, #4]
 8007c78:	689b      	ldr	r3, [r3, #8]
 8007c7a:	9301      	str	r3, [sp, #4]
 8007c7c:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007c7e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007c80:	3800      	subs	r0, #0
 8007c82:	bf18      	it	ne
 8007c84:	2001      	movne	r0, #1
error:
 8007c86:	e012      	b.n	8007cae <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007c88:	6822      	ldr	r2, [r4, #0]
 8007c8a:	6893      	ldr	r3, [r2, #8]
 8007c8c:	0798      	lsls	r0, r3, #30
 8007c8e:	d505      	bpl.n	8007c9c <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007c90:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007c92:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007c96:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007c98:	6323      	str	r3, [r4, #48]	; 0x30
 8007c9a:	e7d9      	b.n	8007c50 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007c9c:	f7fe f816 	bl	8005ccc <HAL_GetTick>
 8007ca0:	eba0 0008 	sub.w	r0, r0, r8
 8007ca4:	42b0      	cmp	r0, r6
 8007ca6:	d30b      	bcc.n	8007cc0 <HAL_SPI_Transmit+0xfa>
 8007ca8:	1c71      	adds	r1, r6, #1
 8007caa:	d0d5      	beq.n	8007c58 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007cac:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007cae:	2301      	movs	r3, #1
 8007cb0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007cb4:	2300      	movs	r3, #0
 8007cb6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007cba:	b002      	add	sp, #8
 8007cbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007cc0:	2e00      	cmp	r6, #0
 8007cc2:	d1c9      	bne.n	8007c58 <HAL_SPI_Transmit+0x92>
 8007cc4:	e7f2      	b.n	8007cac <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007cc6:	b10a      	cbz	r2, 8007ccc <HAL_SPI_Transmit+0x106>
 8007cc8:	2f01      	cmp	r7, #1
 8007cca:	d108      	bne.n	8007cde <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007ccc:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007cce:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007cd0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007cd2:	3301      	adds	r3, #1
 8007cd4:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007cd6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007cd8:	3b01      	subs	r3, #1
 8007cda:	b29b      	uxth	r3, r3
 8007cdc:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007cde:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ce0:	b29b      	uxth	r3, r3
 8007ce2:	2b00      	cmp	r3, #0
 8007ce4:	d0bb      	beq.n	8007c5e <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007ce6:	6823      	ldr	r3, [r4, #0]
 8007ce8:	689a      	ldr	r2, [r3, #8]
 8007cea:	0792      	lsls	r2, r2, #30
 8007cec:	d502      	bpl.n	8007cf4 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007cee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007cf0:	7812      	ldrb	r2, [r2, #0]
 8007cf2:	e7ec      	b.n	8007cce <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007cf4:	f7fd ffea 	bl	8005ccc <HAL_GetTick>
 8007cf8:	eba0 0008 	sub.w	r0, r0, r8
 8007cfc:	42b0      	cmp	r0, r6
 8007cfe:	d302      	bcc.n	8007d06 <HAL_SPI_Transmit+0x140>
 8007d00:	1c73      	adds	r3, r6, #1
 8007d02:	d0ec      	beq.n	8007cde <HAL_SPI_Transmit+0x118>
 8007d04:	e7d2      	b.n	8007cac <HAL_SPI_Transmit+0xe6>
 8007d06:	2e00      	cmp	r6, #0
 8007d08:	d1e9      	bne.n	8007cde <HAL_SPI_Transmit+0x118>
 8007d0a:	e7cf      	b.n	8007cac <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007d0c:	2320      	movs	r3, #32
 8007d0e:	6563      	str	r3, [r4, #84]	; 0x54
 8007d10:	e7ac      	b.n	8007c6c <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007d12:	2002      	movs	r0, #2
 8007d14:	e7cb      	b.n	8007cae <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007d16:	2002      	movs	r0, #2
 8007d18:	e7cf      	b.n	8007cba <HAL_SPI_Transmit+0xf4>

08007d1a <HAL_SPI_TransmitReceive>:
{
 8007d1a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007d1e:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007d20:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007d24:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007d26:	2b01      	cmp	r3, #1
{
 8007d28:	4604      	mov	r4, r0
 8007d2a:	460d      	mov	r5, r1
 8007d2c:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007d2e:	f000 80e6 	beq.w	8007efe <HAL_SPI_TransmitReceive+0x1e4>
 8007d32:	2301      	movs	r3, #1
 8007d34:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007d38:	f7fd ffc8 	bl	8005ccc <HAL_GetTick>
  tmp_state           = hspi->State;
 8007d3c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007d40:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d42:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007d44:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007d46:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d48:	d00a      	beq.n	8007d60 <HAL_SPI_TransmitReceive+0x46>
 8007d4a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007d4e:	f040 80d4 	bne.w	8007efa <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007d52:	68a3      	ldr	r3, [r4, #8]
 8007d54:	2b00      	cmp	r3, #0
 8007d56:	f040 80d0 	bne.w	8007efa <HAL_SPI_TransmitReceive+0x1e0>
 8007d5a:	2904      	cmp	r1, #4
 8007d5c:	f040 80cd 	bne.w	8007efa <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007d60:	2d00      	cmp	r5, #0
 8007d62:	d040      	beq.n	8007de6 <HAL_SPI_TransmitReceive+0xcc>
 8007d64:	f1b9 0f00 	cmp.w	r9, #0
 8007d68:	d03d      	beq.n	8007de6 <HAL_SPI_TransmitReceive+0xcc>
 8007d6a:	2e00      	cmp	r6, #0
 8007d6c:	d03b      	beq.n	8007de6 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007d6e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007d72:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007d76:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007d78:	bf1c      	itt	ne
 8007d7a:	2305      	movne	r3, #5
 8007d7c:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007d80:	2300      	movs	r3, #0
 8007d82:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007d84:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d88:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007d8a:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007d8c:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d8e:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007d90:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d92:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007d94:	bf58      	it	pl
 8007d96:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007d98:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007d9a:	bf58      	it	pl
 8007d9c:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007da0:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007da2:	bf58      	it	pl
 8007da4:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007da6:	68e1      	ldr	r1, [r4, #12]
 8007da8:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007dac:	d152      	bne.n	8007e54 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007dae:	b10a      	cbz	r2, 8007db4 <HAL_SPI_TransmitReceive+0x9a>
 8007db0:	2e01      	cmp	r6, #1
 8007db2:	d107      	bne.n	8007dc4 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007db4:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007db8:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007dba:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007dbc:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007dbe:	3b01      	subs	r3, #1
 8007dc0:	b29b      	uxth	r3, r3
 8007dc2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007dc4:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007dc6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007dc8:	b29b      	uxth	r3, r3
 8007dca:	b973      	cbnz	r3, 8007dea <HAL_SPI_TransmitReceive+0xd0>
 8007dcc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007dce:	b29b      	uxth	r3, r3
 8007dd0:	b95b      	cbnz	r3, 8007dea <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007dd2:	4642      	mov	r2, r8
 8007dd4:	4639      	mov	r1, r7
 8007dd6:	4620      	mov	r0, r4
 8007dd8:	f7ff fe8c 	bl	8007af4 <SPI_EndRxTxTransaction>
 8007ddc:	2800      	cmp	r0, #0
 8007dde:	f000 8081 	beq.w	8007ee4 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007de2:	2320      	movs	r3, #32
 8007de4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007de6:	2001      	movs	r0, #1
 8007de8:	e02b      	b.n	8007e42 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007dea:	6821      	ldr	r1, [r4, #0]
 8007dec:	688b      	ldr	r3, [r1, #8]
 8007dee:	079e      	lsls	r6, r3, #30
 8007df0:	d50d      	bpl.n	8007e0e <HAL_SPI_TransmitReceive+0xf4>
 8007df2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007df4:	b29b      	uxth	r3, r3
 8007df6:	b153      	cbz	r3, 8007e0e <HAL_SPI_TransmitReceive+0xf4>
 8007df8:	b14d      	cbz	r5, 8007e0e <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007dfa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007dfc:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007e00:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007e02:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e06:	3b01      	subs	r3, #1
 8007e08:	b29b      	uxth	r3, r3
 8007e0a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007e0c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007e0e:	688a      	ldr	r2, [r1, #8]
 8007e10:	f012 0201 	ands.w	r2, r2, #1
 8007e14:	d00c      	beq.n	8007e30 <HAL_SPI_TransmitReceive+0x116>
 8007e16:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e18:	b29b      	uxth	r3, r3
 8007e1a:	b14b      	cbz	r3, 8007e30 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007e1c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007e1e:	68c9      	ldr	r1, [r1, #12]
 8007e20:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007e24:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007e26:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e28:	3b01      	subs	r3, #1
 8007e2a:	b29b      	uxth	r3, r3
 8007e2c:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007e2e:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007e30:	f7fd ff4c 	bl	8005ccc <HAL_GetTick>
 8007e34:	eba0 0008 	sub.w	r0, r0, r8
 8007e38:	42b8      	cmp	r0, r7
 8007e3a:	d3c4      	bcc.n	8007dc6 <HAL_SPI_TransmitReceive+0xac>
 8007e3c:	1c78      	adds	r0, r7, #1
 8007e3e:	d0c2      	beq.n	8007dc6 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007e40:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007e42:	2301      	movs	r3, #1
 8007e44:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007e48:	2300      	movs	r3, #0
 8007e4a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007e4e:	b003      	add	sp, #12
 8007e50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007e54:	b10a      	cbz	r2, 8007e5a <HAL_SPI_TransmitReceive+0x140>
 8007e56:	2e01      	cmp	r6, #1
 8007e58:	d108      	bne.n	8007e6c <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007e5a:	782a      	ldrb	r2, [r5, #0]
 8007e5c:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007e5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e60:	3301      	adds	r3, #1
 8007e62:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007e64:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e66:	3b01      	subs	r3, #1
 8007e68:	b29b      	uxth	r3, r3
 8007e6a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007e6c:	2501      	movs	r5, #1
 8007e6e:	e02d      	b.n	8007ecc <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007e70:	6822      	ldr	r2, [r4, #0]
 8007e72:	6893      	ldr	r3, [r2, #8]
 8007e74:	0799      	lsls	r1, r3, #30
 8007e76:	d50e      	bpl.n	8007e96 <HAL_SPI_TransmitReceive+0x17c>
 8007e78:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e7a:	b29b      	uxth	r3, r3
 8007e7c:	b15b      	cbz	r3, 8007e96 <HAL_SPI_TransmitReceive+0x17c>
 8007e7e:	b155      	cbz	r5, 8007e96 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007e80:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e82:	781b      	ldrb	r3, [r3, #0]
 8007e84:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007e86:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e88:	3301      	adds	r3, #1
 8007e8a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e8c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e8e:	3b01      	subs	r3, #1
 8007e90:	b29b      	uxth	r3, r3
 8007e92:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007e94:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007e96:	6822      	ldr	r2, [r4, #0]
 8007e98:	6891      	ldr	r1, [r2, #8]
 8007e9a:	f011 0101 	ands.w	r1, r1, #1
 8007e9e:	d00d      	beq.n	8007ebc <HAL_SPI_TransmitReceive+0x1a2>
 8007ea0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ea2:	b29b      	uxth	r3, r3
 8007ea4:	b153      	cbz	r3, 8007ebc <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007ea6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007ea8:	68d2      	ldr	r2, [r2, #12]
 8007eaa:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007eac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007eae:	3301      	adds	r3, #1
 8007eb0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007eb2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007eb4:	3b01      	subs	r3, #1
 8007eb6:	b29b      	uxth	r3, r3
 8007eb8:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007eba:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007ebc:	f7fd ff06 	bl	8005ccc <HAL_GetTick>
 8007ec0:	eba0 0008 	sub.w	r0, r0, r8
 8007ec4:	42b8      	cmp	r0, r7
 8007ec6:	d30a      	bcc.n	8007ede <HAL_SPI_TransmitReceive+0x1c4>
 8007ec8:	1c7b      	adds	r3, r7, #1
 8007eca:	d1b9      	bne.n	8007e40 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007ecc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ece:	b29b      	uxth	r3, r3
 8007ed0:	2b00      	cmp	r3, #0
 8007ed2:	d1cd      	bne.n	8007e70 <HAL_SPI_TransmitReceive+0x156>
 8007ed4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ed6:	b29b      	uxth	r3, r3
 8007ed8:	2b00      	cmp	r3, #0
 8007eda:	d1c9      	bne.n	8007e70 <HAL_SPI_TransmitReceive+0x156>
 8007edc:	e779      	b.n	8007dd2 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007ede:	2f00      	cmp	r7, #0
 8007ee0:	d1f4      	bne.n	8007ecc <HAL_SPI_TransmitReceive+0x1b2>
 8007ee2:	e7ad      	b.n	8007e40 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007ee4:	68a3      	ldr	r3, [r4, #8]
 8007ee6:	2b00      	cmp	r3, #0
 8007ee8:	d1ab      	bne.n	8007e42 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007eea:	6823      	ldr	r3, [r4, #0]
 8007eec:	9001      	str	r0, [sp, #4]
 8007eee:	68da      	ldr	r2, [r3, #12]
 8007ef0:	9201      	str	r2, [sp, #4]
 8007ef2:	689b      	ldr	r3, [r3, #8]
 8007ef4:	9301      	str	r3, [sp, #4]
 8007ef6:	9b01      	ldr	r3, [sp, #4]
 8007ef8:	e7a3      	b.n	8007e42 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007efa:	2002      	movs	r0, #2
 8007efc:	e7a1      	b.n	8007e42 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8007efe:	2002      	movs	r0, #2
 8007f00:	e7a5      	b.n	8007e4e <HAL_SPI_TransmitReceive+0x134>

08007f02 <HAL_SPI_Receive>:
{
 8007f02:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f06:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f08:	6843      	ldr	r3, [r0, #4]
 8007f0a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8007f0e:	4604      	mov	r4, r0
 8007f10:	4689      	mov	r9, r1
 8007f12:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f14:	d10c      	bne.n	8007f30 <HAL_SPI_Receive+0x2e>
 8007f16:	6883      	ldr	r3, [r0, #8]
 8007f18:	b953      	cbnz	r3, 8007f30 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007f1a:	2304      	movs	r3, #4
 8007f1c:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007f20:	4613      	mov	r3, r2
 8007f22:	9500      	str	r5, [sp, #0]
 8007f24:	460a      	mov	r2, r1
 8007f26:	f7ff fef8 	bl	8007d1a <HAL_SPI_TransmitReceive>
}
 8007f2a:	b003      	add	sp, #12
 8007f2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8007f30:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8007f34:	2b01      	cmp	r3, #1
 8007f36:	f000 8084 	beq.w	8008042 <HAL_SPI_Receive+0x140>
 8007f3a:	2301      	movs	r3, #1
 8007f3c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007f40:	f7fd fec4 	bl	8005ccc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f44:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007f48:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007f4a:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f4c:	b2d8      	uxtb	r0, r3
 8007f4e:	d176      	bne.n	800803e <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8007f50:	f1b9 0f00 	cmp.w	r9, #0
 8007f54:	d05a      	beq.n	800800c <HAL_SPI_Receive+0x10a>
 8007f56:	2f00      	cmp	r7, #0
 8007f58:	d058      	beq.n	800800c <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007f5a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007f5c:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8007f60:	2304      	movs	r3, #4
 8007f62:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007f66:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8007f68:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007f6a:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007f6c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8007f70:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007f72:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8007f74:	bf08      	it	eq
 8007f76:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007f78:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8007f7a:	bf08      	it	eq
 8007f7c:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8007f80:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8007f84:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8007f86:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8007f88:	bf08      	it	eq
 8007f8a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007f8c:	681a      	ldr	r2, [r3, #0]
 8007f8e:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007f90:	bf5e      	ittt	pl
 8007f92:	681a      	ldrpl	r2, [r3, #0]
 8007f94:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007f98:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007f9a:	68e3      	ldr	r3, [r4, #12]
 8007f9c:	b1f3      	cbz	r3, 8007fdc <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 8007f9e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fa0:	b29b      	uxth	r3, r3
 8007fa2:	b1fb      	cbz	r3, 8007fe4 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007fa4:	6823      	ldr	r3, [r4, #0]
 8007fa6:	689a      	ldr	r2, [r3, #8]
 8007fa8:	07d2      	lsls	r2, r2, #31
 8007faa:	d539      	bpl.n	8008020 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007fac:	68da      	ldr	r2, [r3, #12]
 8007fae:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fb0:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007fb4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007fb6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fb8:	3b01      	subs	r3, #1
 8007fba:	b29b      	uxth	r3, r3
 8007fbc:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007fbe:	e7ee      	b.n	8007f9e <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007fc0:	6823      	ldr	r3, [r4, #0]
 8007fc2:	689a      	ldr	r2, [r3, #8]
 8007fc4:	07d0      	lsls	r0, r2, #31
 8007fc6:	d518      	bpl.n	8007ffa <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007fc8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007fca:	7b1b      	ldrb	r3, [r3, #12]
 8007fcc:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007fce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fd0:	3301      	adds	r3, #1
 8007fd2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007fd4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fd6:	3b01      	subs	r3, #1
 8007fd8:	b29b      	uxth	r3, r3
 8007fda:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8007fdc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fde:	b29b      	uxth	r3, r3
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	d1ed      	bne.n	8007fc0 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007fe4:	4642      	mov	r2, r8
 8007fe6:	4629      	mov	r1, r5
 8007fe8:	4620      	mov	r0, r4
 8007fea:	f7ff fd59 	bl	8007aa0 <SPI_EndRxTransaction>
 8007fee:	bb18      	cbnz	r0, 8008038 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007ff0:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007ff2:	3800      	subs	r0, #0
 8007ff4:	bf18      	it	ne
 8007ff6:	2001      	movne	r0, #1
error :
 8007ff8:	e008      	b.n	800800c <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007ffa:	f7fd fe67 	bl	8005ccc <HAL_GetTick>
 8007ffe:	eba0 0008 	sub.w	r0, r0, r8
 8008002:	42a8      	cmp	r0, r5
 8008004:	d309      	bcc.n	800801a <HAL_SPI_Receive+0x118>
 8008006:	1c69      	adds	r1, r5, #1
 8008008:	d0e8      	beq.n	8007fdc <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 800800a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800800c:	2301      	movs	r3, #1
 800800e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008012:	2300      	movs	r3, #0
 8008014:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008018:	e787      	b.n	8007f2a <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800801a:	2d00      	cmp	r5, #0
 800801c:	d1de      	bne.n	8007fdc <HAL_SPI_Receive+0xda>
 800801e:	e7f4      	b.n	800800a <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008020:	f7fd fe54 	bl	8005ccc <HAL_GetTick>
 8008024:	eba0 0008 	sub.w	r0, r0, r8
 8008028:	42a8      	cmp	r0, r5
 800802a:	d302      	bcc.n	8008032 <HAL_SPI_Receive+0x130>
 800802c:	1c6b      	adds	r3, r5, #1
 800802e:	d0b6      	beq.n	8007f9e <HAL_SPI_Receive+0x9c>
 8008030:	e7eb      	b.n	800800a <HAL_SPI_Receive+0x108>
 8008032:	2d00      	cmp	r5, #0
 8008034:	d1b3      	bne.n	8007f9e <HAL_SPI_Receive+0x9c>
 8008036:	e7e8      	b.n	800800a <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008038:	2320      	movs	r3, #32
 800803a:	6563      	str	r3, [r4, #84]	; 0x54
 800803c:	e7d8      	b.n	8007ff0 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800803e:	2002      	movs	r0, #2
 8008040:	e7e4      	b.n	800800c <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 8008042:	2002      	movs	r0, #2
 8008044:	e771      	b.n	8007f2a <HAL_SPI_Receive+0x28>

08008046 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008046:	6803      	ldr	r3, [r0, #0]
 8008048:	68da      	ldr	r2, [r3, #12]
 800804a:	f042 0201 	orr.w	r2, r2, #1
 800804e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008050:	689a      	ldr	r2, [r3, #8]
 8008052:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008056:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8008058:	bf1e      	ittt	ne
 800805a:	681a      	ldrne	r2, [r3, #0]
 800805c:	f042 0201 	orrne.w	r2, r2, #1
 8008060:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8008062:	2000      	movs	r0, #0
 8008064:	4770      	bx	lr

08008066 <HAL_TIM_OC_DelayElapsedCallback>:
 8008066:	4770      	bx	lr

08008068 <HAL_TIM_IC_CaptureCallback>:
 8008068:	4770      	bx	lr

0800806a <HAL_TIM_PWM_PulseFinishedCallback>:
 800806a:	4770      	bx	lr

0800806c <HAL_TIM_TriggerCallback>:
 800806c:	4770      	bx	lr

0800806e <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800806e:	6803      	ldr	r3, [r0, #0]
 8008070:	691a      	ldr	r2, [r3, #16]
 8008072:	0791      	lsls	r1, r2, #30
{
 8008074:	b510      	push	{r4, lr}
 8008076:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008078:	d50e      	bpl.n	8008098 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800807a:	68da      	ldr	r2, [r3, #12]
 800807c:	0792      	lsls	r2, r2, #30
 800807e:	d50b      	bpl.n	8008098 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8008080:	f06f 0202 	mvn.w	r2, #2
 8008084:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8008086:	2201      	movs	r2, #1
 8008088:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800808a:	699b      	ldr	r3, [r3, #24]
 800808c:	079b      	lsls	r3, r3, #30
 800808e:	d077      	beq.n	8008180 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8008090:	f7ff ffea 	bl	8008068 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008094:	2300      	movs	r3, #0
 8008096:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8008098:	6823      	ldr	r3, [r4, #0]
 800809a:	691a      	ldr	r2, [r3, #16]
 800809c:	0750      	lsls	r0, r2, #29
 800809e:	d510      	bpl.n	80080c2 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80080a0:	68da      	ldr	r2, [r3, #12]
 80080a2:	0751      	lsls	r1, r2, #29
 80080a4:	d50d      	bpl.n	80080c2 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80080a6:	f06f 0204 	mvn.w	r2, #4
 80080aa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80080ac:	2202      	movs	r2, #2
 80080ae:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080b0:	699b      	ldr	r3, [r3, #24]
 80080b2:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80080b6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080b8:	d068      	beq.n	800818c <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80080ba:	f7ff ffd5 	bl	8008068 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080be:	2300      	movs	r3, #0
 80080c0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80080c2:	6823      	ldr	r3, [r4, #0]
 80080c4:	691a      	ldr	r2, [r3, #16]
 80080c6:	0712      	lsls	r2, r2, #28
 80080c8:	d50f      	bpl.n	80080ea <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80080ca:	68da      	ldr	r2, [r3, #12]
 80080cc:	0710      	lsls	r0, r2, #28
 80080ce:	d50c      	bpl.n	80080ea <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80080d0:	f06f 0208 	mvn.w	r2, #8
 80080d4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80080d6:	2204      	movs	r2, #4
 80080d8:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80080da:	69db      	ldr	r3, [r3, #28]
 80080dc:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80080de:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80080e0:	d05a      	beq.n	8008198 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80080e2:	f7ff ffc1 	bl	8008068 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080e6:	2300      	movs	r3, #0
 80080e8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80080ea:	6823      	ldr	r3, [r4, #0]
 80080ec:	691a      	ldr	r2, [r3, #16]
 80080ee:	06d2      	lsls	r2, r2, #27
 80080f0:	d510      	bpl.n	8008114 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80080f2:	68da      	ldr	r2, [r3, #12]
 80080f4:	06d0      	lsls	r0, r2, #27
 80080f6:	d50d      	bpl.n	8008114 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80080f8:	f06f 0210 	mvn.w	r2, #16
 80080fc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80080fe:	2208      	movs	r2, #8
 8008100:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008102:	69db      	ldr	r3, [r3, #28]
 8008104:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008108:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800810a:	d04b      	beq.n	80081a4 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800810c:	f7ff ffac 	bl	8008068 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008110:	2300      	movs	r3, #0
 8008112:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008114:	6823      	ldr	r3, [r4, #0]
 8008116:	691a      	ldr	r2, [r3, #16]
 8008118:	07d1      	lsls	r1, r2, #31
 800811a:	d508      	bpl.n	800812e <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800811c:	68da      	ldr	r2, [r3, #12]
 800811e:	07d2      	lsls	r2, r2, #31
 8008120:	d505      	bpl.n	800812e <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008122:	f06f 0201 	mvn.w	r2, #1
 8008126:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008128:	4620      	mov	r0, r4
 800812a:	f7f9 fc93 	bl	8001a54 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800812e:	6823      	ldr	r3, [r4, #0]
 8008130:	691a      	ldr	r2, [r3, #16]
 8008132:	0610      	lsls	r0, r2, #24
 8008134:	d508      	bpl.n	8008148 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008136:	68da      	ldr	r2, [r3, #12]
 8008138:	0611      	lsls	r1, r2, #24
 800813a:	d505      	bpl.n	8008148 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800813c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008140:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008142:	4620      	mov	r0, r4
 8008144:	f000 f8f5 	bl	8008332 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008148:	6823      	ldr	r3, [r4, #0]
 800814a:	691a      	ldr	r2, [r3, #16]
 800814c:	0652      	lsls	r2, r2, #25
 800814e:	d508      	bpl.n	8008162 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008150:	68da      	ldr	r2, [r3, #12]
 8008152:	0650      	lsls	r0, r2, #25
 8008154:	d505      	bpl.n	8008162 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008156:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800815a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800815c:	4620      	mov	r0, r4
 800815e:	f7ff ff85 	bl	800806c <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8008162:	6823      	ldr	r3, [r4, #0]
 8008164:	691a      	ldr	r2, [r3, #16]
 8008166:	0691      	lsls	r1, r2, #26
 8008168:	d522      	bpl.n	80081b0 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800816a:	68da      	ldr	r2, [r3, #12]
 800816c:	0692      	lsls	r2, r2, #26
 800816e:	d51f      	bpl.n	80081b0 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008170:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8008174:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008176:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800817c:	f000 b8d8 	b.w	8008330 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8008180:	f7ff ff71 	bl	8008066 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008184:	4620      	mov	r0, r4
 8008186:	f7ff ff70 	bl	800806a <HAL_TIM_PWM_PulseFinishedCallback>
 800818a:	e783      	b.n	8008094 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800818c:	f7ff ff6b 	bl	8008066 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008190:	4620      	mov	r0, r4
 8008192:	f7ff ff6a 	bl	800806a <HAL_TIM_PWM_PulseFinishedCallback>
 8008196:	e792      	b.n	80080be <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008198:	f7ff ff65 	bl	8008066 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800819c:	4620      	mov	r0, r4
 800819e:	f7ff ff64 	bl	800806a <HAL_TIM_PWM_PulseFinishedCallback>
 80081a2:	e7a0      	b.n	80080e6 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081a4:	f7ff ff5f 	bl	8008066 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081a8:	4620      	mov	r0, r4
 80081aa:	f7ff ff5e 	bl	800806a <HAL_TIM_PWM_PulseFinishedCallback>
 80081ae:	e7af      	b.n	8008110 <HAL_TIM_IRQHandler+0xa2>
}
 80081b0:	bd10      	pop	{r4, pc}
	...

080081b4 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081b4:	4a30      	ldr	r2, [pc, #192]	; (8008278 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80081b6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081b8:	4290      	cmp	r0, r2
 80081ba:	d012      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081bc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80081c0:	d00f      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081c2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80081c6:	4290      	cmp	r0, r2
 80081c8:	d00b      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081ca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80081ce:	4290      	cmp	r0, r2
 80081d0:	d007      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081d2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80081d6:	4290      	cmp	r0, r2
 80081d8:	d003      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081da:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80081de:	4290      	cmp	r0, r2
 80081e0:	d119      	bne.n	8008216 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80081e2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80081e4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80081e8:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80081ea:	4a23      	ldr	r2, [pc, #140]	; (8008278 <TIM_Base_SetConfig+0xc4>)
 80081ec:	4290      	cmp	r0, r2
 80081ee:	d029      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 80081f0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80081f4:	d026      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 80081f6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80081fa:	4290      	cmp	r0, r2
 80081fc:	d022      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 80081fe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008202:	4290      	cmp	r0, r2
 8008204:	d01e      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 8008206:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800820a:	4290      	cmp	r0, r2
 800820c:	d01a      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 800820e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008212:	4290      	cmp	r0, r2
 8008214:	d016      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 8008216:	4a19      	ldr	r2, [pc, #100]	; (800827c <TIM_Base_SetConfig+0xc8>)
 8008218:	4290      	cmp	r0, r2
 800821a:	d013      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 800821c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008220:	4290      	cmp	r0, r2
 8008222:	d00f      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 8008224:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008228:	4290      	cmp	r0, r2
 800822a:	d00b      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 800822c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008230:	4290      	cmp	r0, r2
 8008232:	d007      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 8008234:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008238:	4290      	cmp	r0, r2
 800823a:	d003      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 800823c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008240:	4290      	cmp	r0, r2
 8008242:	d103      	bne.n	800824c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008244:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008246:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800824a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800824c:	694a      	ldr	r2, [r1, #20]
 800824e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008252:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008254:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008256:	688b      	ldr	r3, [r1, #8]
 8008258:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800825a:	680b      	ldr	r3, [r1, #0]
 800825c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800825e:	4b06      	ldr	r3, [pc, #24]	; (8008278 <TIM_Base_SetConfig+0xc4>)
 8008260:	4298      	cmp	r0, r3
 8008262:	d003      	beq.n	800826c <TIM_Base_SetConfig+0xb8>
 8008264:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008268:	4298      	cmp	r0, r3
 800826a:	d101      	bne.n	8008270 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800826c:	690b      	ldr	r3, [r1, #16]
 800826e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008270:	2301      	movs	r3, #1
 8008272:	6143      	str	r3, [r0, #20]
}
 8008274:	4770      	bx	lr
 8008276:	bf00      	nop
 8008278:	40010000 	.word	0x40010000
 800827c:	40014000 	.word	0x40014000

08008280 <HAL_TIM_Base_Init>:
{
 8008280:	b510      	push	{r4, lr}
  if (htim == NULL)
 8008282:	4604      	mov	r4, r0
 8008284:	b1a0      	cbz	r0, 80082b0 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008286:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800828a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800828e:	b91b      	cbnz	r3, 8008298 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8008290:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008294:	f7f9 fe2a 	bl	8001eec <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008298:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800829a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800829c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082a0:	1d21      	adds	r1, r4, #4
 80082a2:	f7ff ff87 	bl	80081b4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80082a6:	2301      	movs	r3, #1
 80082a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80082ac:	2000      	movs	r0, #0
}
 80082ae:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80082b0:	2001      	movs	r0, #1
 80082b2:	e7fc      	b.n	80082ae <HAL_TIM_Base_Init+0x2e>

080082b4 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80082b4:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80082b6:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80082ba:	2b01      	cmp	r3, #1
 80082bc:	f04f 0302 	mov.w	r3, #2
 80082c0:	d032      	beq.n	8008328 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80082c2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80082c6:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80082c8:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80082ca:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80082cc:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80082ce:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80082d2:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80082d4:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80082d6:	4c15      	ldr	r4, [pc, #84]	; (800832c <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 80082d8:	42a3      	cmp	r3, r4
 80082da:	d01a      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082dc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80082e0:	d017      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082e2:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 80082e6:	42a3      	cmp	r3, r4
 80082e8:	d013      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082ea:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80082ee:	42a3      	cmp	r3, r4
 80082f0:	d00f      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082f2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80082f6:	42a3      	cmp	r3, r4
 80082f8:	d00b      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082fa:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 80082fe:	42a3      	cmp	r3, r4
 8008300:	d007      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008302:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008306:	42a3      	cmp	r3, r4
 8008308:	d003      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800830a:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800830e:	42a3      	cmp	r3, r4
 8008310:	d104      	bne.n	800831c <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008312:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008314:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008318:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800831a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800831c:	2301      	movs	r3, #1
 800831e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008322:	2300      	movs	r3, #0
 8008324:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008328:	4618      	mov	r0, r3

  return HAL_OK;
}
 800832a:	bd30      	pop	{r4, r5, pc}
 800832c:	40010000 	.word	0x40010000

08008330 <HAL_TIMEx_CommutCallback>:
 8008330:	4770      	bx	lr

08008332 <HAL_TIMEx_BreakCallback>:
 8008332:	4770      	bx	lr

08008334 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008338:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 800833a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800833e:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8008342:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8008346:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800834a:	6809      	ldr	r1, [r1, #0]
 800834c:	2901      	cmp	r1, #1
 800834e:	ea43 0304 	orr.w	r3, r3, r4
 8008352:	4912      	ldr	r1, [pc, #72]	; (800839c <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8008354:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008356:	d00f      	beq.n	8008378 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008358:	431a      	orrs	r2, r3
 800835a:	432a      	orrs	r2, r5
 800835c:	ea42 0308 	orr.w	r3, r2, r8
 8008360:	ea43 030e 	orr.w	r3, r3, lr
 8008364:	ea43 030c 	orr.w	r3, r3, ip
 8008368:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800836a:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800836c:	4333      	orrs	r3, r6
 800836e:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008370:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8008372:	2000      	movs	r0, #0
 8008374:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008378:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800837a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800837c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800837e:	ea45 0208 	orr.w	r2, r5, r8
 8008382:	ea42 020e 	orr.w	r2, r2, lr
 8008386:	ea42 020c 	orr.w	r2, r2, ip
 800838a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800838c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008390:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008392:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008394:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008396:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8008398:	6042      	str	r2, [r0, #4]
 800839a:	e7ea      	b.n	8008372 <FMC_SDRAM_Init+0x3e>
 800839c:	ffff8000 	.word	0xffff8000

080083a0 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083a0:	68cb      	ldr	r3, [r1, #12]
{
 80083a2:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083a4:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083a6:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083a8:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083aa:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80083ac:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083ae:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083b2:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80083b4:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80083b6:	3b01      	subs	r3, #1
 80083b8:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083ba:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083bc:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083be:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 80083c0:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80083c2:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083c4:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083c8:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083cc:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 80083d0:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80083d4:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 80083d8:	d00c      	beq.n	80083f4 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083da:	ea43 030c 	orr.w	r3, r3, ip
 80083de:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80083e0:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083e2:	4333      	orrs	r3, r6
 80083e4:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80083e6:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083ea:	430b      	orrs	r3, r1
 80083ec:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80083ee:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80083f0:	2000      	movs	r0, #0
 80083f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80083f4:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80083f6:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 80083fa:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80083fe:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008400:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008402:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008406:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008408:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800840a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800840c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008410:	430a      	orrs	r2, r1
 8008412:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008414:	60c2      	str	r2, [r0, #12]
 8008416:	e7eb      	b.n	80083f0 <FMC_SDRAM_Timing_Init+0x50>

08008418 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008418:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800841a:	2300      	movs	r3, #0
 800841c:	9301      	str	r3, [sp, #4]
{
 800841e:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008420:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008424:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008426:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008428:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800842c:	688a      	ldr	r2, [r1, #8]
 800842e:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008430:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008434:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008436:	9b01      	ldr	r3, [sp, #4]
 8008438:	6103      	str	r3, [r0, #16]
{
 800843a:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800843c:	f7fd fc46 	bl	8005ccc <HAL_GetTick>
 8008440:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008442:	69a3      	ldr	r3, [r4, #24]
 8008444:	f013 0320 	ands.w	r3, r3, #32
 8008448:	d101      	bne.n	800844e <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800844a:	4618      	mov	r0, r3
 800844c:	e003      	b.n	8008456 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800844e:	1c6b      	adds	r3, r5, #1
 8008450:	d0f7      	beq.n	8008442 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008452:	b915      	cbnz	r5, 800845a <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8008454:	2003      	movs	r0, #3
}
 8008456:	b002      	add	sp, #8
 8008458:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800845a:	f7fd fc37 	bl	8005ccc <HAL_GetTick>
 800845e:	1b80      	subs	r0, r0, r6
 8008460:	42a8      	cmp	r0, r5
 8008462:	d9ee      	bls.n	8008442 <FMC_SDRAM_SendCommand+0x2a>
 8008464:	e7f6      	b.n	8008454 <FMC_SDRAM_SendCommand+0x3c>

08008466 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8008466:	6943      	ldr	r3, [r0, #20]
 8008468:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800846c:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800846e:	2000      	movs	r0, #0
 8008470:	4770      	bx	lr
	...

08008474 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008474:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008478:	b113      	cbz	r3, 8008480 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800847a:	f06f 0005 	mvn.w	r0, #5
 800847e:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008480:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008484:	4b07      	ldr	r3, [pc, #28]	; (80084a4 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8008486:	b912      	cbnz	r2, 800848e <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008488:	f3ef 8211 	mrs	r2, BASEPRI
 800848c:	b112      	cbz	r2, 8008494 <osKernelInitialize+0x20>
 800848e:	681a      	ldr	r2, [r3, #0]
 8008490:	2a02      	cmp	r2, #2
 8008492:	d0f2      	beq.n	800847a <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8008494:	6818      	ldr	r0, [r3, #0]
 8008496:	b910      	cbnz	r0, 800849e <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008498:	2201      	movs	r2, #1
 800849a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800849c:	4770      	bx	lr
    } else {
      stat = osError;
 800849e:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80084a2:	4770      	bx	lr
 80084a4:	20004930 	.word	0x20004930

080084a8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80084a8:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084aa:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80084ae:	b113      	cbz	r3, 80084b6 <osKernelStart+0xe>
    stat = osErrorISR;
 80084b0:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80084b4:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084b6:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80084ba:	4b0a      	ldr	r3, [pc, #40]	; (80084e4 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80084bc:	b912      	cbnz	r2, 80084c4 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084be:	f3ef 8211 	mrs	r2, BASEPRI
 80084c2:	b112      	cbz	r2, 80084ca <osKernelStart+0x22>
 80084c4:	681a      	ldr	r2, [r3, #0]
 80084c6:	2a02      	cmp	r2, #2
 80084c8:	d0f2      	beq.n	80084b0 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80084ca:	681a      	ldr	r2, [r3, #0]
 80084cc:	2a01      	cmp	r2, #1
 80084ce:	d105      	bne.n	80084dc <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80084d0:	2202      	movs	r2, #2
 80084d2:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80084d4:	f001 fbd6 	bl	8009c84 <vTaskStartScheduler>
      stat = osOK;
 80084d8:	2000      	movs	r0, #0
 80084da:	e7eb      	b.n	80084b4 <osKernelStart+0xc>
      stat = osError;
 80084dc:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80084e0:	e7e8      	b.n	80084b4 <osKernelStart+0xc>
 80084e2:	bf00      	nop
 80084e4:	20004930 	.word	0x20004930

080084e8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80084e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80084ea:	b087      	sub	sp, #28
 80084ec:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80084ee:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80084f0:	460b      	mov	r3, r1
  hTask = NULL;
 80084f2:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084f4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80084f8:	bb22      	cbnz	r2, 8008544 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084fa:	f3ef 8210 	mrs	r2, PRIMASK
 80084fe:	b912      	cbnz	r2, 8008506 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008500:	f3ef 8211 	mrs	r2, BASEPRI
 8008504:	b11a      	cbz	r2, 800850e <osThreadNew+0x26>
 8008506:	4a22      	ldr	r2, [pc, #136]	; (8008590 <osThreadNew+0xa8>)
 8008508:	6812      	ldr	r2, [r2, #0]
 800850a:	2a02      	cmp	r2, #2
 800850c:	d01a      	beq.n	8008544 <osThreadNew+0x5c>
 800850e:	b1c8      	cbz	r0, 8008544 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008510:	2c00      	cmp	r4, #0
 8008512:	d02f      	beq.n	8008574 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008514:	69a5      	ldr	r5, [r4, #24]
 8008516:	2d00      	cmp	r5, #0
 8008518:	bf08      	it	eq
 800851a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800851c:	1e6a      	subs	r2, r5, #1
 800851e:	2a37      	cmp	r2, #55	; 0x37
 8008520:	46ac      	mov	ip, r5
 8008522:	d82b      	bhi.n	800857c <osThreadNew+0x94>
 8008524:	6862      	ldr	r2, [r4, #4]
 8008526:	07d2      	lsls	r2, r2, #31
 8008528:	d428      	bmi.n	800857c <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800852a:	6966      	ldr	r6, [r4, #20]
 800852c:	b16e      	cbz	r6, 800854a <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800852e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008530:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008534:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008536:	b157      	cbz	r7, 800854e <osThreadNew+0x66>
 8008538:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800853c:	d902      	bls.n	8008544 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800853e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008540:	b104      	cbz	r4, 8008544 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008542:	b9ee      	cbnz	r6, 8008580 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008544:	9805      	ldr	r0, [sp, #20]
}
 8008546:	b007      	add	sp, #28
 8008548:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800854a:	2280      	movs	r2, #128	; 0x80
 800854c:	e7f0      	b.n	8008530 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800854e:	f1be 0f00 	cmp.w	lr, #0
 8008552:	d1f7      	bne.n	8008544 <osThreadNew+0x5c>
      if (mem == 0) {
 8008554:	6924      	ldr	r4, [r4, #16]
 8008556:	2c00      	cmp	r4, #0
 8008558:	d1f4      	bne.n	8008544 <osThreadNew+0x5c>
 800855a:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800855c:	a905      	add	r1, sp, #20
 800855e:	e9cd c100 	strd	ip, r1, [sp]
 8008562:	b292      	uxth	r2, r2
 8008564:	4621      	mov	r1, r4
 8008566:	f001 fb5f 	bl	8009c28 <xTaskCreate>
 800856a:	2801      	cmp	r0, #1
          hTask = NULL;
 800856c:	bf1c      	itt	ne
 800856e:	2300      	movne	r3, #0
 8008570:	9305      	strne	r3, [sp, #20]
 8008572:	e7e7      	b.n	8008544 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8008574:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008578:	2280      	movs	r2, #128	; 0x80
 800857a:	e7ef      	b.n	800855c <osThreadNew+0x74>
        return (NULL);
 800857c:	2000      	movs	r0, #0
 800857e:	e7e2      	b.n	8008546 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008580:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008584:	9500      	str	r5, [sp, #0]
 8008586:	f001 fb17 	bl	8009bb8 <xTaskCreateStatic>
 800858a:	9005      	str	r0, [sp, #20]
 800858c:	e7da      	b.n	8008544 <osThreadNew+0x5c>
 800858e:	bf00      	nop
 8008590:	20004930 	.word	0x20004930

08008594 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8008594:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008596:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800859a:	b113      	cbz	r3, 80085a2 <osDelay+0xe>
    stat = osErrorISR;
 800859c:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 80085a0:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085a2:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80085a6:	b913      	cbnz	r3, 80085ae <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085a8:	f3ef 8311 	mrs	r3, BASEPRI
 80085ac:	b11b      	cbz	r3, 80085b6 <osDelay+0x22>
 80085ae:	4b05      	ldr	r3, [pc, #20]	; (80085c4 <osDelay+0x30>)
 80085b0:	681b      	ldr	r3, [r3, #0]
 80085b2:	2b02      	cmp	r3, #2
 80085b4:	d0f2      	beq.n	800859c <osDelay+0x8>
    if (ticks != 0U) {
 80085b6:	2800      	cmp	r0, #0
 80085b8:	d0f2      	beq.n	80085a0 <osDelay+0xc>
      vTaskDelay(ticks);
 80085ba:	f001 fccb 	bl	8009f54 <vTaskDelay>
    stat = osOK;
 80085be:	2000      	movs	r0, #0
 80085c0:	e7ee      	b.n	80085a0 <osDelay+0xc>
 80085c2:	bf00      	nop
 80085c4:	20004930 	.word	0x20004930

080085c8 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80085c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80085ca:	460e      	mov	r6, r1
 80085cc:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085ce:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80085d2:	b11b      	cbz	r3, 80085dc <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80085d4:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80085d6:	4620      	mov	r0, r4
 80085d8:	b002      	add	sp, #8
 80085da:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085dc:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80085e0:	b913      	cbnz	r3, 80085e8 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085e2:	f3ef 8311 	mrs	r3, BASEPRI
 80085e6:	b11b      	cbz	r3, 80085f0 <osSemaphoreNew+0x28>
 80085e8:	4b21      	ldr	r3, [pc, #132]	; (8008670 <osSemaphoreNew+0xa8>)
 80085ea:	681b      	ldr	r3, [r3, #0]
 80085ec:	2b02      	cmp	r3, #2
 80085ee:	d0f1      	beq.n	80085d4 <osSemaphoreNew+0xc>
 80085f0:	2800      	cmp	r0, #0
 80085f2:	d0ef      	beq.n	80085d4 <osSemaphoreNew+0xc>
 80085f4:	42b0      	cmp	r0, r6
 80085f6:	d3ed      	bcc.n	80085d4 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 80085f8:	b1ed      	cbz	r5, 8008636 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80085fa:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80085fe:	b1c3      	cbz	r3, 8008632 <osSemaphoreNew+0x6a>
 8008600:	2a4f      	cmp	r2, #79	; 0x4f
 8008602:	d9e7      	bls.n	80085d4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008604:	2801      	cmp	r0, #1
 8008606:	d129      	bne.n	800865c <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008608:	2203      	movs	r2, #3
 800860a:	9200      	str	r2, [sp, #0]
 800860c:	2200      	movs	r2, #0
 800860e:	4611      	mov	r1, r2
 8008610:	f000 fd29 	bl	8009066 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008614:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008616:	2800      	cmp	r0, #0
 8008618:	d0dc      	beq.n	80085d4 <osSemaphoreNew+0xc>
 800861a:	b1ce      	cbz	r6, 8008650 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800861c:	2300      	movs	r3, #0
 800861e:	461a      	mov	r2, r3
 8008620:	4619      	mov	r1, r3
 8008622:	f000 fdd5 	bl	80091d0 <xQueueGenericSend>
 8008626:	2801      	cmp	r0, #1
 8008628:	d012      	beq.n	8008650 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800862a:	4620      	mov	r0, r4
 800862c:	f001 f910 	bl	8009850 <vQueueDelete>
 8008630:	e7d0      	b.n	80085d4 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008632:	2a00      	cmp	r2, #0
 8008634:	d1ce      	bne.n	80085d4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008636:	2801      	cmp	r0, #1
 8008638:	d104      	bne.n	8008644 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 800863a:	2203      	movs	r2, #3
 800863c:	2100      	movs	r1, #0
 800863e:	f000 fd60 	bl	8009102 <xQueueGenericCreate>
 8008642:	e7e7      	b.n	8008614 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008644:	4631      	mov	r1, r6
 8008646:	f000 fda5 	bl	8009194 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800864a:	4604      	mov	r4, r0
 800864c:	2800      	cmp	r0, #0
 800864e:	d0c1      	beq.n	80085d4 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8008650:	b95d      	cbnz	r5, 800866a <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8008652:	4629      	mov	r1, r5
 8008654:	4620      	mov	r0, r4
 8008656:	f001 f8d5 	bl	8009804 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800865a:	e7bc      	b.n	80085d6 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800865c:	461a      	mov	r2, r3
 800865e:	4631      	mov	r1, r6
 8008660:	f000 fd76 	bl	8009150 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008664:	4604      	mov	r4, r0
 8008666:	2800      	cmp	r0, #0
 8008668:	d0b4      	beq.n	80085d4 <osSemaphoreNew+0xc>
          name = attr->name;
 800866a:	682d      	ldr	r5, [r5, #0]
 800866c:	e7f1      	b.n	8008652 <osSemaphoreNew+0x8a>
 800866e:	bf00      	nop
 8008670:	20004930 	.word	0x20004930

08008674 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008674:	b513      	push	{r0, r1, r4, lr}
 8008676:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008678:	b918      	cbnz	r0, 8008682 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800867a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800867e:	b002      	add	sp, #8
 8008680:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008682:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008686:	b163      	cbz	r3, 80086a2 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8008688:	2c00      	cmp	r4, #0
 800868a:	d1f6      	bne.n	800867a <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800868c:	aa01      	add	r2, sp, #4
 800868e:	4621      	mov	r1, r4
      yield = pdFALSE;
 8008690:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008692:	f001 f867 	bl	8009764 <xQueueReceiveFromISR>
 8008696:	2801      	cmp	r0, #1
 8008698:	d113      	bne.n	80086c2 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 800869a:	9b01      	ldr	r3, [sp, #4]
 800869c:	b9a3      	cbnz	r3, 80086c8 <osSemaphoreAcquire+0x54>
  stat = osOK;
 800869e:	2000      	movs	r0, #0
 80086a0:	e7ed      	b.n	800867e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086a2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80086a6:	b913      	cbnz	r3, 80086ae <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086a8:	f3ef 8311 	mrs	r3, BASEPRI
 80086ac:	b11b      	cbz	r3, 80086b6 <osSemaphoreAcquire+0x42>
 80086ae:	4b0d      	ldr	r3, [pc, #52]	; (80086e4 <osSemaphoreAcquire+0x70>)
 80086b0:	681b      	ldr	r3, [r3, #0]
 80086b2:	2b02      	cmp	r3, #2
 80086b4:	d0e8      	beq.n	8008688 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80086b6:	4621      	mov	r1, r4
 80086b8:	f000 ff91 	bl	80095de <xQueueSemaphoreTake>
 80086bc:	2801      	cmp	r0, #1
 80086be:	d0ee      	beq.n	800869e <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 80086c0:	b96c      	cbnz	r4, 80086de <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 80086c2:	f06f 0002 	mvn.w	r0, #2
 80086c6:	e7da      	b.n	800867e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80086c8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086cc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086d0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086d4:	f3bf 8f4f 	dsb	sy
 80086d8:	f3bf 8f6f 	isb	sy
 80086dc:	e7df      	b.n	800869e <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 80086de:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80086e2:	e7cc      	b.n	800867e <osSemaphoreAcquire+0xa>
 80086e4:	20004930 	.word	0x20004930

080086e8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80086e8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80086ea:	b370      	cbz	r0, 800874a <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086ec:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80086f0:	b14b      	cbz	r3, 8008706 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 80086f2:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80086f4:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80086f6:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80086f8:	f000 fe7e 	bl	80093f8 <xQueueGiveFromISR>
 80086fc:	2801      	cmp	r0, #1
 80086fe:	d014      	beq.n	800872a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008700:	f06f 0002 	mvn.w	r0, #2
 8008704:	e014      	b.n	8008730 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008706:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800870a:	b913      	cbnz	r3, 8008712 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800870c:	f3ef 8311 	mrs	r3, BASEPRI
 8008710:	b11b      	cbz	r3, 800871a <osSemaphoreRelease+0x32>
 8008712:	4b0f      	ldr	r3, [pc, #60]	; (8008750 <osSemaphoreRelease+0x68>)
 8008714:	681b      	ldr	r3, [r3, #0]
 8008716:	2b02      	cmp	r3, #2
 8008718:	d0eb      	beq.n	80086f2 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800871a:	2300      	movs	r3, #0
 800871c:	461a      	mov	r2, r3
 800871e:	4619      	mov	r1, r3
 8008720:	f000 fd56 	bl	80091d0 <xQueueGenericSend>
 8008724:	2801      	cmp	r0, #1
 8008726:	d002      	beq.n	800872e <osSemaphoreRelease+0x46>
 8008728:	e7ea      	b.n	8008700 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800872a:	9b01      	ldr	r3, [sp, #4]
 800872c:	b913      	cbnz	r3, 8008734 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800872e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008730:	b002      	add	sp, #8
 8008732:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008734:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008738:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800873c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008740:	f3bf 8f4f 	dsb	sy
 8008744:	f3bf 8f6f 	isb	sy
 8008748:	e7f1      	b.n	800872e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800874a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800874e:	e7ef      	b.n	8008730 <osSemaphoreRelease+0x48>
 8008750:	20004930 	.word	0x20004930

08008754 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008754:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008756:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008758:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800875c:	b11b      	cbz	r3, 8008766 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800875e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008760:	4628      	mov	r0, r5
 8008762:	b002      	add	sp, #8
 8008764:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008766:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800876a:	b913      	cbnz	r3, 8008772 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800876c:	f3ef 8311 	mrs	r3, BASEPRI
 8008770:	b11b      	cbz	r3, 800877a <osMessageQueueNew+0x26>
 8008772:	4b1a      	ldr	r3, [pc, #104]	; (80087dc <osMessageQueueNew+0x88>)
 8008774:	681b      	ldr	r3, [r3, #0]
 8008776:	2b02      	cmp	r3, #2
 8008778:	d0f1      	beq.n	800875e <osMessageQueueNew+0xa>
 800877a:	2800      	cmp	r0, #0
 800877c:	d0ef      	beq.n	800875e <osMessageQueueNew+0xa>
 800877e:	2900      	cmp	r1, #0
 8008780:	d0ed      	beq.n	800875e <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8008782:	b1ec      	cbz	r4, 80087c0 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008784:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008788:	b193      	cbz	r3, 80087b0 <osMessageQueueNew+0x5c>
 800878a:	2a4f      	cmp	r2, #79	; 0x4f
 800878c:	d9e7      	bls.n	800875e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800878e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008790:	2a00      	cmp	r2, #0
 8008792:	d0e4      	beq.n	800875e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008794:	6966      	ldr	r6, [r4, #20]
 8008796:	fb01 f500 	mul.w	r5, r1, r0
 800879a:	42ae      	cmp	r6, r5
 800879c:	d3df      	bcc.n	800875e <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800879e:	2500      	movs	r5, #0
 80087a0:	9500      	str	r5, [sp, #0]
 80087a2:	f000 fc60 	bl	8009066 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80087a6:	4605      	mov	r5, r0
 80087a8:	2800      	cmp	r0, #0
 80087aa:	d0d8      	beq.n	800875e <osMessageQueueNew+0xa>
        name = attr->name;
 80087ac:	6824      	ldr	r4, [r4, #0]
 80087ae:	e00f      	b.n	80087d0 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80087b0:	2a00      	cmp	r2, #0
 80087b2:	d1d4      	bne.n	800875e <osMessageQueueNew+0xa>
 80087b4:	6923      	ldr	r3, [r4, #16]
 80087b6:	2b00      	cmp	r3, #0
 80087b8:	d1d1      	bne.n	800875e <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80087ba:	6963      	ldr	r3, [r4, #20]
 80087bc:	2b00      	cmp	r3, #0
 80087be:	d1ce      	bne.n	800875e <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80087c0:	2200      	movs	r2, #0
 80087c2:	f000 fc9e 	bl	8009102 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80087c6:	4605      	mov	r5, r0
 80087c8:	2800      	cmp	r0, #0
 80087ca:	d0c8      	beq.n	800875e <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80087cc:	2c00      	cmp	r4, #0
 80087ce:	d1ed      	bne.n	80087ac <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80087d0:	4621      	mov	r1, r4
 80087d2:	4628      	mov	r0, r5
 80087d4:	f001 f816 	bl	8009804 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80087d8:	e7c2      	b.n	8008760 <osMessageQueueNew+0xc>
 80087da:	bf00      	nop
 80087dc:	20004930 	.word	0x20004930

080087e0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80087e0:	b513      	push	{r0, r1, r4, lr}
 80087e2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80087e4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80087e8:	b123      	cbz	r3, 80087f4 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80087ea:	b9d8      	cbnz	r0, 8008824 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80087ec:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80087f0:	b002      	add	sp, #8
 80087f2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80087f4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80087f8:	b913      	cbnz	r3, 8008800 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80087fa:	f3ef 8311 	mrs	r3, BASEPRI
 80087fe:	b11b      	cbz	r3, 8008808 <osMessageQueuePut+0x28>
 8008800:	4b17      	ldr	r3, [pc, #92]	; (8008860 <osMessageQueuePut+0x80>)
 8008802:	681b      	ldr	r3, [r3, #0]
 8008804:	2b02      	cmp	r3, #2
 8008806:	d0f0      	beq.n	80087ea <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008808:	2800      	cmp	r0, #0
 800880a:	d0ef      	beq.n	80087ec <osMessageQueuePut+0xc>
 800880c:	2900      	cmp	r1, #0
 800880e:	d0ed      	beq.n	80087ec <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008810:	2300      	movs	r3, #0
 8008812:	4622      	mov	r2, r4
 8008814:	f000 fcdc 	bl	80091d0 <xQueueGenericSend>
 8008818:	2801      	cmp	r0, #1
 800881a:	d010      	beq.n	800883e <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 800881c:	b9e4      	cbnz	r4, 8008858 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800881e:	f06f 0002 	mvn.w	r0, #2
 8008822:	e7e5      	b.n	80087f0 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008824:	2900      	cmp	r1, #0
 8008826:	d0e1      	beq.n	80087ec <osMessageQueuePut+0xc>
 8008828:	2c00      	cmp	r4, #0
 800882a:	d1df      	bne.n	80087ec <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800882c:	4623      	mov	r3, r4
 800882e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008830:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008832:	f000 fd80 	bl	8009336 <xQueueGenericSendFromISR>
 8008836:	2801      	cmp	r0, #1
 8008838:	d1f1      	bne.n	800881e <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 800883a:	9b01      	ldr	r3, [sp, #4]
 800883c:	b90b      	cbnz	r3, 8008842 <osMessageQueuePut+0x62>
  stat = osOK;
 800883e:	2000      	movs	r0, #0
 8008840:	e7d6      	b.n	80087f0 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008842:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008846:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800884a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800884e:	f3bf 8f4f 	dsb	sy
 8008852:	f3bf 8f6f 	isb	sy
 8008856:	e7f2      	b.n	800883e <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008858:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800885c:	e7c8      	b.n	80087f0 <osMessageQueuePut+0x10>
 800885e:	bf00      	nop
 8008860:	20004930 	.word	0x20004930

08008864 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008864:	b513      	push	{r0, r1, r4, lr}
 8008866:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008868:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800886c:	b123      	cbz	r3, 8008878 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800886e:	b9d0      	cbnz	r0, 80088a6 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8008870:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008874:	b002      	add	sp, #8
 8008876:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008878:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800887c:	b913      	cbnz	r3, 8008884 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800887e:	f3ef 8311 	mrs	r3, BASEPRI
 8008882:	b11b      	cbz	r3, 800888c <osMessageQueueGet+0x28>
 8008884:	4b16      	ldr	r3, [pc, #88]	; (80088e0 <osMessageQueueGet+0x7c>)
 8008886:	681b      	ldr	r3, [r3, #0]
 8008888:	2b02      	cmp	r3, #2
 800888a:	d0f0      	beq.n	800886e <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800888c:	2800      	cmp	r0, #0
 800888e:	d0ef      	beq.n	8008870 <osMessageQueueGet+0xc>
 8008890:	2900      	cmp	r1, #0
 8008892:	d0ed      	beq.n	8008870 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008894:	4622      	mov	r2, r4
 8008896:	f000 fe03 	bl	80094a0 <xQueueReceive>
 800889a:	2801      	cmp	r0, #1
 800889c:	d00f      	beq.n	80088be <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 800889e:	b9dc      	cbnz	r4, 80088d8 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 80088a0:	f06f 0002 	mvn.w	r0, #2
 80088a4:	e7e6      	b.n	8008874 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80088a6:	2900      	cmp	r1, #0
 80088a8:	d0e2      	beq.n	8008870 <osMessageQueueGet+0xc>
 80088aa:	2c00      	cmp	r4, #0
 80088ac:	d1e0      	bne.n	8008870 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088ae:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80088b0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088b2:	f000 ff57 	bl	8009764 <xQueueReceiveFromISR>
 80088b6:	2801      	cmp	r0, #1
 80088b8:	d1f2      	bne.n	80088a0 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80088ba:	9b01      	ldr	r3, [sp, #4]
 80088bc:	b90b      	cbnz	r3, 80088c2 <osMessageQueueGet+0x5e>
  stat = osOK;
 80088be:	2000      	movs	r0, #0
 80088c0:	e7d8      	b.n	8008874 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80088c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80088c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80088ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80088ce:	f3bf 8f4f 	dsb	sy
 80088d2:	f3bf 8f6f 	isb	sy
 80088d6:	e7f2      	b.n	80088be <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 80088d8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80088dc:	e7ca      	b.n	8008874 <osMessageQueueGet+0x10>
 80088de:	bf00      	nop
 80088e0:	20004930 	.word	0x20004930

080088e4 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80088e4:	4b03      	ldr	r3, [pc, #12]	; (80088f4 <vApplicationGetIdleTaskMemory+0x10>)
 80088e6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80088e8:	4b03      	ldr	r3, [pc, #12]	; (80088f8 <vApplicationGetIdleTaskMemory+0x14>)
 80088ea:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80088ec:	2380      	movs	r3, #128	; 0x80
 80088ee:	6013      	str	r3, [r2, #0]
}
 80088f0:	4770      	bx	lr
 80088f2:	bf00      	nop
 80088f4:	20004870 	.word	0x20004870
 80088f8:	20004670 	.word	0x20004670

080088fc <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80088fc:	4b03      	ldr	r3, [pc, #12]	; (800890c <vApplicationGetTimerTaskMemory+0x10>)
 80088fe:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008900:	4b03      	ldr	r3, [pc, #12]	; (8008910 <vApplicationGetTimerTaskMemory+0x14>)
 8008902:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008904:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008908:	6013      	str	r3, [r2, #0]
}
 800890a:	4770      	bx	lr
 800890c:	20004d34 	.word	0x20004d34
 8008910:	20004934 	.word	0x20004934

08008914 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008914:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008916:	4b0f      	ldr	r3, [pc, #60]	; (8008954 <prvInsertBlockIntoFreeList+0x40>)
 8008918:	461a      	mov	r2, r3
 800891a:	681b      	ldr	r3, [r3, #0]
 800891c:	4283      	cmp	r3, r0
 800891e:	d3fb      	bcc.n	8008918 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008920:	6854      	ldr	r4, [r2, #4]
 8008922:	1911      	adds	r1, r2, r4
 8008924:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008926:	bf01      	itttt	eq
 8008928:	6841      	ldreq	r1, [r0, #4]
 800892a:	4610      	moveq	r0, r2
 800892c:	1909      	addeq	r1, r1, r4
 800892e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008930:	6844      	ldr	r4, [r0, #4]
 8008932:	1901      	adds	r1, r0, r4
 8008934:	428b      	cmp	r3, r1
 8008936:	d107      	bne.n	8008948 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008938:	4907      	ldr	r1, [pc, #28]	; (8008958 <prvInsertBlockIntoFreeList+0x44>)
 800893a:	6809      	ldr	r1, [r1, #0]
 800893c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800893e:	bf1f      	itttt	ne
 8008940:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008942:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008944:	1909      	addne	r1, r1, r4
 8008946:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008948:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800894a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800894c:	bf18      	it	ne
 800894e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008950:	bd10      	pop	{r4, pc}
 8008952:	bf00      	nop
 8008954:	20014e04 	.word	0x20014e04
 8008958:	20004df4 	.word	0x20004df4

0800895c <pvPortMalloc>:
{
 800895c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008960:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008962:	f001 f9df 	bl	8009d24 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008966:	4840      	ldr	r0, [pc, #256]	; (8008a68 <pvPortMalloc+0x10c>)
 8008968:	4d40      	ldr	r5, [pc, #256]	; (8008a6c <pvPortMalloc+0x110>)
 800896a:	6803      	ldr	r3, [r0, #0]
 800896c:	bb0b      	cbnz	r3, 80089b2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800896e:	4940      	ldr	r1, [pc, #256]	; (8008a70 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008970:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008972:	bf1f      	itttt	ne
 8008974:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008976:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800897a:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 800897e:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008980:	bf14      	ite	ne
 8008982:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008984:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008988:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800898a:	4e3a      	ldr	r6, [pc, #232]	; (8008a74 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 800898c:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800898e:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008992:	2300      	movs	r3, #0
 8008994:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008996:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008998:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800899c:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800899e:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 80089a2:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089a4:	4a34      	ldr	r2, [pc, #208]	; (8008a78 <pvPortMalloc+0x11c>)
 80089a6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089a8:	4a34      	ldr	r2, [pc, #208]	; (8008a7c <pvPortMalloc+0x120>)
 80089aa:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80089ac:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80089b0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80089b2:	682f      	ldr	r7, [r5, #0]
 80089b4:	4227      	tst	r7, r4
 80089b6:	d151      	bne.n	8008a5c <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 80089b8:	2c00      	cmp	r4, #0
 80089ba:	d042      	beq.n	8008a42 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 80089bc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80089c0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80089c2:	bf1c      	itt	ne
 80089c4:	f023 0307 	bicne.w	r3, r3, #7
 80089c8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80089ca:	2b00      	cmp	r3, #0
 80089cc:	d046      	beq.n	8008a5c <pvPortMalloc+0x100>
 80089ce:	4c2b      	ldr	r4, [pc, #172]	; (8008a7c <pvPortMalloc+0x120>)
 80089d0:	6826      	ldr	r6, [r4, #0]
 80089d2:	429e      	cmp	r6, r3
 80089d4:	d342      	bcc.n	8008a5c <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 80089d6:	4a27      	ldr	r2, [pc, #156]	; (8008a74 <pvPortMalloc+0x118>)
 80089d8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80089da:	6869      	ldr	r1, [r5, #4]
 80089dc:	4299      	cmp	r1, r3
 80089de:	d204      	bcs.n	80089ea <pvPortMalloc+0x8e>
 80089e0:	f8d5 c000 	ldr.w	ip, [r5]
 80089e4:	f1bc 0f00 	cmp.w	ip, #0
 80089e8:	d115      	bne.n	8008a16 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80089ea:	6800      	ldr	r0, [r0, #0]
 80089ec:	42a8      	cmp	r0, r5
 80089ee:	d035      	beq.n	8008a5c <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80089f0:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80089f2:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80089f4:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80089f8:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80089fa:	2910      	cmp	r1, #16
 80089fc:	d912      	bls.n	8008a24 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80089fe:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a00:	0742      	lsls	r2, r0, #29
 8008a02:	d00b      	beq.n	8008a1c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008a04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a08:	f383 8811 	msr	BASEPRI, r3
 8008a0c:	f3bf 8f6f 	isb	sy
 8008a10:	f3bf 8f4f 	dsb	sy
 8008a14:	e7fe      	b.n	8008a14 <pvPortMalloc+0xb8>
 8008a16:	462a      	mov	r2, r5
 8008a18:	4665      	mov	r5, ip
 8008a1a:	e7de      	b.n	80089da <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008a1c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008a1e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008a20:	f7ff ff78 	bl	8008914 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a24:	4914      	ldr	r1, [pc, #80]	; (8008a78 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a26:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a28:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a2a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a2c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a2e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008a30:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a34:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008a36:	bf38      	it	cc
 8008a38:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a3a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a3e:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008a40:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008a42:	f001 fa13 	bl	8009e6c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a46:	0763      	lsls	r3, r4, #29
 8008a48:	d00a      	beq.n	8008a60 <pvPortMalloc+0x104>
 8008a4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a4e:	f383 8811 	msr	BASEPRI, r3
 8008a52:	f3bf 8f6f 	isb	sy
 8008a56:	f3bf 8f4f 	dsb	sy
 8008a5a:	e7fe      	b.n	8008a5a <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008a5c:	2400      	movs	r4, #0
 8008a5e:	e7f0      	b.n	8008a42 <pvPortMalloc+0xe6>
}
 8008a60:	4620      	mov	r0, r4
 8008a62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a66:	bf00      	nop
 8008a68:	20004df4 	.word	0x20004df4
 8008a6c:	20014df8 	.word	0x20014df8
 8008a70:	20004df8 	.word	0x20004df8
 8008a74:	20014e04 	.word	0x20014e04
 8008a78:	20014e00 	.word	0x20014e00
 8008a7c:	20014dfc 	.word	0x20014dfc

08008a80 <vPortFree>:
{
 8008a80:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008a82:	4604      	mov	r4, r0
 8008a84:	b370      	cbz	r0, 8008ae4 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008a86:	4a18      	ldr	r2, [pc, #96]	; (8008ae8 <vPortFree+0x68>)
 8008a88:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008a8c:	6812      	ldr	r2, [r2, #0]
 8008a8e:	4213      	tst	r3, r2
 8008a90:	d108      	bne.n	8008aa4 <vPortFree+0x24>
 8008a92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a96:	f383 8811 	msr	BASEPRI, r3
 8008a9a:	f3bf 8f6f 	isb	sy
 8008a9e:	f3bf 8f4f 	dsb	sy
 8008aa2:	e7fe      	b.n	8008aa2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008aa4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008aa8:	b141      	cbz	r1, 8008abc <vPortFree+0x3c>
 8008aaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008aae:	f383 8811 	msr	BASEPRI, r3
 8008ab2:	f3bf 8f6f 	isb	sy
 8008ab6:	f3bf 8f4f 	dsb	sy
 8008aba:	e7fe      	b.n	8008aba <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008abc:	ea23 0302 	bic.w	r3, r3, r2
 8008ac0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008ac4:	f001 f92e 	bl	8009d24 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008ac8:	4a08      	ldr	r2, [pc, #32]	; (8008aec <vPortFree+0x6c>)
 8008aca:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008ace:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008ad0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008ad4:	440b      	add	r3, r1
 8008ad6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008ad8:	f7ff ff1c 	bl	8008914 <prvInsertBlockIntoFreeList>
}
 8008adc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008ae0:	f001 b9c4 	b.w	8009e6c <xTaskResumeAll>
}
 8008ae4:	bd10      	pop	{r4, pc}
 8008ae6:	bf00      	nop
 8008ae8:	20014df8 	.word	0x20014df8
 8008aec:	20014dfc 	.word	0x20014dfc

08008af0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008af0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008af4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008af8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008afc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008afe:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008b00:	2300      	movs	r3, #0
 8008b02:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008b04:	4770      	bx	lr

08008b06 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008b06:	2300      	movs	r3, #0
 8008b08:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008b0a:	4770      	bx	lr

08008b0c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008b0c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008b0e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008b10:	689a      	ldr	r2, [r3, #8]
 8008b12:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008b14:	689a      	ldr	r2, [r3, #8]
 8008b16:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008b18:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b1a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b1c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b1e:	3301      	adds	r3, #1
 8008b20:	6003      	str	r3, [r0, #0]
}
 8008b22:	4770      	bx	lr

08008b24 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008b24:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008b26:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008b28:	1c63      	adds	r3, r4, #1
 8008b2a:	d10a      	bne.n	8008b42 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008b2c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008b2e:	685a      	ldr	r2, [r3, #4]
 8008b30:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008b32:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008b34:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008b36:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b38:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b3a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b3c:	3301      	adds	r3, #1
 8008b3e:	6003      	str	r3, [r0, #0]
}
 8008b40:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008b42:	f100 0208 	add.w	r2, r0, #8
 8008b46:	4613      	mov	r3, r2
 8008b48:	6852      	ldr	r2, [r2, #4]
 8008b4a:	6815      	ldr	r5, [r2, #0]
 8008b4c:	42a5      	cmp	r5, r4
 8008b4e:	d9fa      	bls.n	8008b46 <vListInsert+0x22>
 8008b50:	e7ed      	b.n	8008b2e <vListInsert+0xa>

08008b52 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b52:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008b56:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b58:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008b5a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008b5c:	6859      	ldr	r1, [r3, #4]
 8008b5e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008b60:	bf08      	it	eq
 8008b62:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008b64:	2200      	movs	r2, #0
 8008b66:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008b68:	681a      	ldr	r2, [r3, #0]
 8008b6a:	3a01      	subs	r2, #1
 8008b6c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008b6e:	6818      	ldr	r0, [r3, #0]
}
 8008b70:	4770      	bx	lr
	...

08008b74 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008b74:	4808      	ldr	r0, [pc, #32]	; (8008b98 <prvPortStartFirstTask+0x24>)
 8008b76:	6800      	ldr	r0, [r0, #0]
 8008b78:	6800      	ldr	r0, [r0, #0]
 8008b7a:	f380 8808 	msr	MSP, r0
 8008b7e:	f04f 0000 	mov.w	r0, #0
 8008b82:	f380 8814 	msr	CONTROL, r0
 8008b86:	b662      	cpsie	i
 8008b88:	b661      	cpsie	f
 8008b8a:	f3bf 8f4f 	dsb	sy
 8008b8e:	f3bf 8f6f 	isb	sy
 8008b92:	df00      	svc	0
 8008b94:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008b96:	0000      	.short	0x0000
 8008b98:	e000ed08 	.word	0xe000ed08

08008b9c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008b9c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008bac <vPortEnableVFP+0x10>
 8008ba0:	6801      	ldr	r1, [r0, #0]
 8008ba2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008ba6:	6001      	str	r1, [r0, #0]
 8008ba8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008baa:	0000      	.short	0x0000
 8008bac:	e000ed88 	.word	0xe000ed88

08008bb0 <prvTaskExitError>:
{
 8008bb0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008bb2:	2300      	movs	r3, #0
 8008bb4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008bb6:	4b0d      	ldr	r3, [pc, #52]	; (8008bec <prvTaskExitError+0x3c>)
 8008bb8:	681b      	ldr	r3, [r3, #0]
 8008bba:	3301      	adds	r3, #1
 8008bbc:	d008      	beq.n	8008bd0 <prvTaskExitError+0x20>
 8008bbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bc2:	f383 8811 	msr	BASEPRI, r3
 8008bc6:	f3bf 8f6f 	isb	sy
 8008bca:	f3bf 8f4f 	dsb	sy
 8008bce:	e7fe      	b.n	8008bce <prvTaskExitError+0x1e>
 8008bd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bd4:	f383 8811 	msr	BASEPRI, r3
 8008bd8:	f3bf 8f6f 	isb	sy
 8008bdc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008be0:	9b01      	ldr	r3, [sp, #4]
 8008be2:	2b00      	cmp	r3, #0
 8008be4:	d0fc      	beq.n	8008be0 <prvTaskExitError+0x30>
}
 8008be6:	b002      	add	sp, #8
 8008be8:	4770      	bx	lr
 8008bea:	bf00      	nop
 8008bec:	20000088 	.word	0x20000088

08008bf0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008bf0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008bf4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008bf8:	4b07      	ldr	r3, [pc, #28]	; (8008c18 <pxPortInitialiseStack+0x28>)
 8008bfa:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008bfe:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c02:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c06:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008c0a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c0e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008c12:	3844      	subs	r0, #68	; 0x44
 8008c14:	4770      	bx	lr
 8008c16:	bf00      	nop
 8008c18:	08008bb1 	.word	0x08008bb1
 8008c1c:	00000000 	.word	0x00000000

08008c20 <SVC_Handler>:
	__asm volatile (
 8008c20:	4b07      	ldr	r3, [pc, #28]	; (8008c40 <pxCurrentTCBConst2>)
 8008c22:	6819      	ldr	r1, [r3, #0]
 8008c24:	6808      	ldr	r0, [r1, #0]
 8008c26:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c2a:	f380 8809 	msr	PSP, r0
 8008c2e:	f3bf 8f6f 	isb	sy
 8008c32:	f04f 0000 	mov.w	r0, #0
 8008c36:	f380 8811 	msr	BASEPRI, r0
 8008c3a:	4770      	bx	lr
 8008c3c:	f3af 8000 	nop.w

08008c40 <pxCurrentTCBConst2>:
 8008c40:	20014e54 	.word	0x20014e54

08008c44 <vPortEnterCritical>:
 8008c44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c48:	f383 8811 	msr	BASEPRI, r3
 8008c4c:	f3bf 8f6f 	isb	sy
 8008c50:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008c54:	4a0a      	ldr	r2, [pc, #40]	; (8008c80 <vPortEnterCritical+0x3c>)
 8008c56:	6813      	ldr	r3, [r2, #0]
 8008c58:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008c5a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008c5c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008c5e:	d10e      	bne.n	8008c7e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008c60:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c64:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008c68:	b2db      	uxtb	r3, r3
 8008c6a:	b143      	cbz	r3, 8008c7e <vPortEnterCritical+0x3a>
 8008c6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c70:	f383 8811 	msr	BASEPRI, r3
 8008c74:	f3bf 8f6f 	isb	sy
 8008c78:	f3bf 8f4f 	dsb	sy
 8008c7c:	e7fe      	b.n	8008c7c <vPortEnterCritical+0x38>
}
 8008c7e:	4770      	bx	lr
 8008c80:	20000088 	.word	0x20000088

08008c84 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008c84:	4a08      	ldr	r2, [pc, #32]	; (8008ca8 <vPortExitCritical+0x24>)
 8008c86:	6813      	ldr	r3, [r2, #0]
 8008c88:	b943      	cbnz	r3, 8008c9c <vPortExitCritical+0x18>
 8008c8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c8e:	f383 8811 	msr	BASEPRI, r3
 8008c92:	f3bf 8f6f 	isb	sy
 8008c96:	f3bf 8f4f 	dsb	sy
 8008c9a:	e7fe      	b.n	8008c9a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008c9c:	3b01      	subs	r3, #1
 8008c9e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008ca0:	b90b      	cbnz	r3, 8008ca6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008ca2:	f383 8811 	msr	BASEPRI, r3
}
 8008ca6:	4770      	bx	lr
 8008ca8:	20000088 	.word	0x20000088
 8008cac:	00000000 	.word	0x00000000

08008cb0 <PendSV_Handler>:
	__asm volatile
 8008cb0:	f3ef 8009 	mrs	r0, PSP
 8008cb4:	f3bf 8f6f 	isb	sy
 8008cb8:	4b15      	ldr	r3, [pc, #84]	; (8008d10 <pxCurrentTCBConst>)
 8008cba:	681a      	ldr	r2, [r3, #0]
 8008cbc:	f01e 0f10 	tst.w	lr, #16
 8008cc0:	bf08      	it	eq
 8008cc2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008cc6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cca:	6010      	str	r0, [r2, #0]
 8008ccc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008cd0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008cd4:	f380 8811 	msr	BASEPRI, r0
 8008cd8:	f3bf 8f4f 	dsb	sy
 8008cdc:	f3bf 8f6f 	isb	sy
 8008ce0:	f001 f95c 	bl	8009f9c <vTaskSwitchContext>
 8008ce4:	f04f 0000 	mov.w	r0, #0
 8008ce8:	f380 8811 	msr	BASEPRI, r0
 8008cec:	bc09      	pop	{r0, r3}
 8008cee:	6819      	ldr	r1, [r3, #0]
 8008cf0:	6808      	ldr	r0, [r1, #0]
 8008cf2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cf6:	f01e 0f10 	tst.w	lr, #16
 8008cfa:	bf08      	it	eq
 8008cfc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008d00:	f380 8809 	msr	PSP, r0
 8008d04:	f3bf 8f6f 	isb	sy
 8008d08:	4770      	bx	lr
 8008d0a:	bf00      	nop
 8008d0c:	f3af 8000 	nop.w

08008d10 <pxCurrentTCBConst>:
 8008d10:	20014e54 	.word	0x20014e54

08008d14 <SysTick_Handler>:
{
 8008d14:	b508      	push	{r3, lr}
	__asm volatile
 8008d16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d1a:	f383 8811 	msr	BASEPRI, r3
 8008d1e:	f3bf 8f6f 	isb	sy
 8008d22:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008d26:	f001 f80b 	bl	8009d40 <xTaskIncrementTick>
 8008d2a:	b128      	cbz	r0, 8008d38 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008d2c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d30:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d34:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008d38:	2300      	movs	r3, #0
 8008d3a:	f383 8811 	msr	BASEPRI, r3
}
 8008d3e:	bd08      	pop	{r3, pc}

08008d40 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008d40:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008d44:	2300      	movs	r3, #0
 8008d46:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008d48:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008d4a:	4b05      	ldr	r3, [pc, #20]	; (8008d60 <vPortSetupTimerInterrupt+0x20>)
 8008d4c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008d50:	681b      	ldr	r3, [r3, #0]
 8008d52:	fbb3 f3f1 	udiv	r3, r3, r1
 8008d56:	3b01      	subs	r3, #1
 8008d58:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008d5a:	2307      	movs	r3, #7
 8008d5c:	6113      	str	r3, [r2, #16]
}
 8008d5e:	4770      	bx	lr
 8008d60:	2000007c 	.word	0x2000007c

08008d64 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008d68:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d6a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008d6e:	4a3a      	ldr	r2, [pc, #232]	; (8008e58 <xPortStartScheduler+0xf4>)
 8008d70:	4291      	cmp	r1, r2
 8008d72:	d108      	bne.n	8008d86 <xPortStartScheduler+0x22>
	__asm volatile
 8008d74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d78:	f383 8811 	msr	BASEPRI, r3
 8008d7c:	f3bf 8f6f 	isb	sy
 8008d80:	f3bf 8f4f 	dsb	sy
 8008d84:	e7fe      	b.n	8008d84 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008d86:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008d8a:	4b34      	ldr	r3, [pc, #208]	; (8008e5c <xPortStartScheduler+0xf8>)
 8008d8c:	429a      	cmp	r2, r3
 8008d8e:	d108      	bne.n	8008da2 <xPortStartScheduler+0x3e>
 8008d90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d94:	f383 8811 	msr	BASEPRI, r3
 8008d98:	f3bf 8f6f 	isb	sy
 8008d9c:	f3bf 8f4f 	dsb	sy
 8008da0:	e7fe      	b.n	8008da0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008da2:	4b2f      	ldr	r3, [pc, #188]	; (8008e60 <xPortStartScheduler+0xfc>)
 8008da4:	781a      	ldrb	r2, [r3, #0]
 8008da6:	b2d2      	uxtb	r2, r2
 8008da8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008daa:	22ff      	movs	r2, #255	; 0xff
 8008dac:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008dae:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008db0:	4a2c      	ldr	r2, [pc, #176]	; (8008e64 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008db2:	b2db      	uxtb	r3, r3
 8008db4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008db8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008dbc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008dc0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008dc2:	4a29      	ldr	r2, [pc, #164]	; (8008e68 <xPortStartScheduler+0x104>)
 8008dc4:	2307      	movs	r3, #7
 8008dc6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008dc8:	2100      	movs	r1, #0
 8008dca:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008dce:	0600      	lsls	r0, r0, #24
 8008dd0:	f103 34ff 	add.w	r4, r3, #4294967295
 8008dd4:	d40c      	bmi.n	8008df0 <xPortStartScheduler+0x8c>
 8008dd6:	b111      	cbz	r1, 8008dde <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008dd8:	2b03      	cmp	r3, #3
 8008dda:	6013      	str	r3, [r2, #0]
 8008ddc:	d011      	beq.n	8008e02 <xPortStartScheduler+0x9e>
 8008dde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008de2:	f383 8811 	msr	BASEPRI, r3
 8008de6:	f3bf 8f6f 	isb	sy
 8008dea:	f3bf 8f4f 	dsb	sy
 8008dee:	e7fe      	b.n	8008dee <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008df0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008df4:	005b      	lsls	r3, r3, #1
 8008df6:	b2db      	uxtb	r3, r3
 8008df8:	f88d 3003 	strb.w	r3, [sp, #3]
 8008dfc:	2101      	movs	r1, #1
 8008dfe:	4623      	mov	r3, r4
 8008e00:	e7e3      	b.n	8008dca <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008e02:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008e06:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e08:	9b01      	ldr	r3, [sp, #4]
 8008e0a:	4a15      	ldr	r2, [pc, #84]	; (8008e60 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e0c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e10:	b2db      	uxtb	r3, r3
 8008e12:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e14:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e18:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008e1c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008e20:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e24:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008e28:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008e2c:	f7ff ff88 	bl	8008d40 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008e30:	4b0e      	ldr	r3, [pc, #56]	; (8008e6c <xPortStartScheduler+0x108>)
 8008e32:	2500      	movs	r5, #0
 8008e34:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008e36:	f7ff feb1 	bl	8008b9c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008e3a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008e3e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008e42:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008e46:	f7ff fe95 	bl	8008b74 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008e4a:	f001 f8a7 	bl	8009f9c <vTaskSwitchContext>
	prvTaskExitError();
 8008e4e:	f7ff feaf 	bl	8008bb0 <prvTaskExitError>
}
 8008e52:	4628      	mov	r0, r5
 8008e54:	b003      	add	sp, #12
 8008e56:	bd30      	pop	{r4, r5, pc}
 8008e58:	410fc271 	.word	0x410fc271
 8008e5c:	410fc270 	.word	0x410fc270
 8008e60:	e000e400 	.word	0xe000e400
 8008e64:	20014e0c 	.word	0x20014e0c
 8008e68:	20014e10 	.word	0x20014e10
 8008e6c:	20000088 	.word	0x20000088

08008e70 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008e70:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008e74:	2b0f      	cmp	r3, #15
 8008e76:	d90e      	bls.n	8008e96 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008e78:	4a11      	ldr	r2, [pc, #68]	; (8008ec0 <vPortValidateInterruptPriority+0x50>)
 8008e7a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008e7c:	4a11      	ldr	r2, [pc, #68]	; (8008ec4 <vPortValidateInterruptPriority+0x54>)
 8008e7e:	7812      	ldrb	r2, [r2, #0]
 8008e80:	429a      	cmp	r2, r3
 8008e82:	d908      	bls.n	8008e96 <vPortValidateInterruptPriority+0x26>
 8008e84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e88:	f383 8811 	msr	BASEPRI, r3
 8008e8c:	f3bf 8f6f 	isb	sy
 8008e90:	f3bf 8f4f 	dsb	sy
 8008e94:	e7fe      	b.n	8008e94 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008e96:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e9a:	4a0b      	ldr	r2, [pc, #44]	; (8008ec8 <vPortValidateInterruptPriority+0x58>)
 8008e9c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008ea0:	6812      	ldr	r2, [r2, #0]
 8008ea2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008ea6:	4293      	cmp	r3, r2
 8008ea8:	d908      	bls.n	8008ebc <vPortValidateInterruptPriority+0x4c>
 8008eaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eae:	f383 8811 	msr	BASEPRI, r3
 8008eb2:	f3bf 8f6f 	isb	sy
 8008eb6:	f3bf 8f4f 	dsb	sy
 8008eba:	e7fe      	b.n	8008eba <vPortValidateInterruptPriority+0x4a>
	}
 8008ebc:	4770      	bx	lr
 8008ebe:	bf00      	nop
 8008ec0:	e000e3f0 	.word	0xe000e3f0
 8008ec4:	20014e0c 	.word	0x20014e0c
 8008ec8:	20014e10 	.word	0x20014e10

08008ecc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008ecc:	b510      	push	{r4, lr}
 8008ece:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008ed0:	f7ff feb8 	bl	8008c44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008ed4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008ed6:	f7ff fed5 	bl	8008c84 <vPortExitCritical>

	return xReturn;
}
 8008eda:	fab4 f084 	clz	r0, r4
 8008ede:	0940      	lsrs	r0, r0, #5
 8008ee0:	bd10      	pop	{r4, pc}

08008ee2 <prvCopyDataToQueue>:
{
 8008ee2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ee4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008ee6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ee8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8008eea:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008eec:	b952      	cbnz	r2, 8008f04 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008eee:	6807      	ldr	r7, [r0, #0]
 8008ef0:	bb47      	cbnz	r7, 8008f44 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008ef2:	6880      	ldr	r0, [r0, #8]
 8008ef4:	f001 f9ae 	bl	800a254 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008ef8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008efa:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008efc:	3601      	adds	r6, #1
 8008efe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008f00:	4628      	mov	r0, r5
 8008f02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008f04:	b965      	cbnz	r5, 8008f20 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f06:	6840      	ldr	r0, [r0, #4]
 8008f08:	f017 fce0 	bl	80208cc <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f0c:	6863      	ldr	r3, [r4, #4]
 8008f0e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f10:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f12:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f14:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f16:	4293      	cmp	r3, r2
 8008f18:	d3f0      	bcc.n	8008efc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008f1a:	6823      	ldr	r3, [r4, #0]
 8008f1c:	6063      	str	r3, [r4, #4]
 8008f1e:	e7ed      	b.n	8008efc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008f20:	68c0      	ldr	r0, [r0, #12]
 8008f22:	f017 fcd3 	bl	80208cc <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f26:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f28:	68e3      	ldr	r3, [r4, #12]
 8008f2a:	4251      	negs	r1, r2
 8008f2c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f2e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f30:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f32:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008f34:	bf3e      	ittt	cc
 8008f36:	68a3      	ldrcc	r3, [r4, #8]
 8008f38:	185b      	addcc	r3, r3, r1
 8008f3a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008f3c:	2d02      	cmp	r5, #2
 8008f3e:	d101      	bne.n	8008f44 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f40:	b116      	cbz	r6, 8008f48 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008f42:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008f44:	2500      	movs	r5, #0
 8008f46:	e7d9      	b.n	8008efc <prvCopyDataToQueue+0x1a>
 8008f48:	4635      	mov	r5, r6
 8008f4a:	e7d7      	b.n	8008efc <prvCopyDataToQueue+0x1a>

08008f4c <prvCopyDataFromQueue>:
{
 8008f4c:	4603      	mov	r3, r0
 8008f4e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f50:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008f52:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f54:	b16a      	cbz	r2, 8008f72 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f56:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f58:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f5a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f5c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f5e:	bf28      	it	cs
 8008f60:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f62:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f64:	bf28      	it	cs
 8008f66:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f68:	68d9      	ldr	r1, [r3, #12]
}
 8008f6a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f6e:	f017 bcad 	b.w	80208cc <memcpy>
}
 8008f72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008f76:	4770      	bx	lr

08008f78 <prvUnlockQueue>:
{
 8008f78:	b570      	push	{r4, r5, r6, lr}
 8008f7a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008f7c:	f7ff fe62 	bl	8008c44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008f80:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f84:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008f88:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008f8a:	2d00      	cmp	r5, #0
 8008f8c:	dc14      	bgt.n	8008fb8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008f8e:	23ff      	movs	r3, #255	; 0xff
 8008f90:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008f94:	f7ff fe76 	bl	8008c84 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008f98:	f7ff fe54 	bl	8008c44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008f9c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fa0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008fa4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008fa6:	2d00      	cmp	r5, #0
 8008fa8:	dc12      	bgt.n	8008fd0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008faa:	23ff      	movs	r3, #255	; 0xff
 8008fac:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008fb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008fb4:	f7ff be66 	b.w	8008c84 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008fb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008fba:	2b00      	cmp	r3, #0
 8008fbc:	d0e7      	beq.n	8008f8e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008fbe:	4630      	mov	r0, r6
 8008fc0:	f001 f864 	bl	800a08c <xTaskRemoveFromEventList>
 8008fc4:	b108      	cbz	r0, 8008fca <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008fc6:	f001 f8ed 	bl	800a1a4 <vTaskMissedYield>
			--cTxLock;
 8008fca:	3d01      	subs	r5, #1
 8008fcc:	b26d      	sxtb	r5, r5
 8008fce:	e7dc      	b.n	8008f8a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008fd0:	6923      	ldr	r3, [r4, #16]
 8008fd2:	2b00      	cmp	r3, #0
 8008fd4:	d0e9      	beq.n	8008faa <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fd6:	4630      	mov	r0, r6
 8008fd8:	f001 f858 	bl	800a08c <xTaskRemoveFromEventList>
 8008fdc:	b108      	cbz	r0, 8008fe2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008fde:	f001 f8e1 	bl	800a1a4 <vTaskMissedYield>
				--cRxLock;
 8008fe2:	3d01      	subs	r5, #1
 8008fe4:	b26d      	sxtb	r5, r5
 8008fe6:	e7de      	b.n	8008fa6 <prvUnlockQueue+0x2e>

08008fe8 <xQueueGenericReset>:
{
 8008fe8:	b538      	push	{r3, r4, r5, lr}
 8008fea:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008fec:	4604      	mov	r4, r0
 8008fee:	b940      	cbnz	r0, 8009002 <xQueueGenericReset+0x1a>
 8008ff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ff4:	f383 8811 	msr	BASEPRI, r3
 8008ff8:	f3bf 8f6f 	isb	sy
 8008ffc:	f3bf 8f4f 	dsb	sy
 8009000:	e7fe      	b.n	8009000 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009002:	f7ff fe1f 	bl	8008c44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009006:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800900a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800900c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800900e:	434b      	muls	r3, r1
 8009010:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009012:	1a5b      	subs	r3, r3, r1
 8009014:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009016:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009018:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800901a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800901c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800901e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009020:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009024:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009028:	b9a5      	cbnz	r5, 8009054 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800902a:	6923      	ldr	r3, [r4, #16]
 800902c:	b173      	cbz	r3, 800904c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800902e:	f104 0010 	add.w	r0, r4, #16
 8009032:	f001 f82b 	bl	800a08c <xTaskRemoveFromEventList>
 8009036:	b148      	cbz	r0, 800904c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009038:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800903c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009040:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009044:	f3bf 8f4f 	dsb	sy
 8009048:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800904c:	f7ff fe1a 	bl	8008c84 <vPortExitCritical>
}
 8009050:	2001      	movs	r0, #1
 8009052:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009054:	f104 0010 	add.w	r0, r4, #16
 8009058:	f7ff fd4a 	bl	8008af0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800905c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009060:	f7ff fd46 	bl	8008af0 <vListInitialise>
 8009064:	e7f2      	b.n	800904c <xQueueGenericReset+0x64>

08009066 <xQueueGenericCreateStatic>:
	{
 8009066:	b513      	push	{r0, r1, r4, lr}
 8009068:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800906a:	b940      	cbnz	r0, 800907e <xQueueGenericCreateStatic+0x18>
 800906c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009070:	f383 8811 	msr	BASEPRI, r3
 8009074:	f3bf 8f6f 	isb	sy
 8009078:	f3bf 8f4f 	dsb	sy
 800907c:	e7fe      	b.n	800907c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800907e:	b943      	cbnz	r3, 8009092 <xQueueGenericCreateStatic+0x2c>
 8009080:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009084:	f383 8811 	msr	BASEPRI, r3
 8009088:	f3bf 8f6f 	isb	sy
 800908c:	f3bf 8f4f 	dsb	sy
 8009090:	e7fe      	b.n	8009090 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8009092:	b14a      	cbz	r2, 80090a8 <xQueueGenericCreateStatic+0x42>
 8009094:	b991      	cbnz	r1, 80090bc <xQueueGenericCreateStatic+0x56>
 8009096:	f04f 0350 	mov.w	r3, #80	; 0x50
 800909a:	f383 8811 	msr	BASEPRI, r3
 800909e:	f3bf 8f6f 	isb	sy
 80090a2:	f3bf 8f4f 	dsb	sy
 80090a6:	e7fe      	b.n	80090a6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80090a8:	b141      	cbz	r1, 80090bc <xQueueGenericCreateStatic+0x56>
 80090aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ae:	f383 8811 	msr	BASEPRI, r3
 80090b2:	f3bf 8f6f 	isb	sy
 80090b6:	f3bf 8f4f 	dsb	sy
 80090ba:	e7fe      	b.n	80090ba <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80090bc:	2350      	movs	r3, #80	; 0x50
 80090be:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80090c0:	9b01      	ldr	r3, [sp, #4]
 80090c2:	2b50      	cmp	r3, #80	; 0x50
 80090c4:	d008      	beq.n	80090d8 <xQueueGenericCreateStatic+0x72>
 80090c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ca:	f383 8811 	msr	BASEPRI, r3
 80090ce:	f3bf 8f6f 	isb	sy
 80090d2:	f3bf 8f4f 	dsb	sy
 80090d6:	e7fe      	b.n	80090d6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80090d8:	2900      	cmp	r1, #0
 80090da:	bf08      	it	eq
 80090dc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80090de:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80090e0:	6022      	str	r2, [r4, #0]
 80090e2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80090e4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80090e8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80090ec:	4619      	mov	r1, r3
 80090ee:	4620      	mov	r0, r4
 80090f0:	f7ff ff7a 	bl	8008fe8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80090f4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80090f8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80090fc:	4620      	mov	r0, r4
 80090fe:	b002      	add	sp, #8
 8009100:	bd10      	pop	{r4, pc}

08009102 <xQueueGenericCreate>:
	{
 8009102:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009104:	460d      	mov	r5, r1
 8009106:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009108:	4606      	mov	r6, r0
 800910a:	b940      	cbnz	r0, 800911e <xQueueGenericCreate+0x1c>
 800910c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009110:	f383 8811 	msr	BASEPRI, r3
 8009114:	f3bf 8f6f 	isb	sy
 8009118:	f3bf 8f4f 	dsb	sy
 800911c:	e7fe      	b.n	800911c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800911e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009120:	3050      	adds	r0, #80	; 0x50
 8009122:	f7ff fc1b 	bl	800895c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009126:	4604      	mov	r4, r0
 8009128:	b170      	cbz	r0, 8009148 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800912a:	2300      	movs	r3, #0
 800912c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009130:	b165      	cbz	r5, 800914c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009132:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009136:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800913a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800913c:	2101      	movs	r1, #1
 800913e:	4620      	mov	r0, r4
 8009140:	f7ff ff52 	bl	8008fe8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009144:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009148:	4620      	mov	r0, r4
 800914a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800914c:	4603      	mov	r3, r0
 800914e:	e7f2      	b.n	8009136 <xQueueGenericCreate+0x34>

08009150 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009150:	b513      	push	{r0, r1, r4, lr}
 8009152:	4613      	mov	r3, r2
 8009154:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009156:	b940      	cbnz	r0, 800916a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009158:	f04f 0350 	mov.w	r3, #80	; 0x50
 800915c:	f383 8811 	msr	BASEPRI, r3
 8009160:	f3bf 8f6f 	isb	sy
 8009164:	f3bf 8f4f 	dsb	sy
 8009168:	e7fe      	b.n	8009168 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800916a:	4288      	cmp	r0, r1
 800916c:	d208      	bcs.n	8009180 <xQueueCreateCountingSemaphoreStatic+0x30>
 800916e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009172:	f383 8811 	msr	BASEPRI, r3
 8009176:	f3bf 8f6f 	isb	sy
 800917a:	f3bf 8f4f 	dsb	sy
 800917e:	e7fe      	b.n	800917e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009180:	2202      	movs	r2, #2
 8009182:	9200      	str	r2, [sp, #0]
 8009184:	2200      	movs	r2, #0
 8009186:	4611      	mov	r1, r2
 8009188:	f7ff ff6d 	bl	8009066 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800918c:	b100      	cbz	r0, 8009190 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800918e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8009190:	b002      	add	sp, #8
 8009192:	bd10      	pop	{r4, pc}

08009194 <xQueueCreateCountingSemaphore>:
	{
 8009194:	b510      	push	{r4, lr}
 8009196:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009198:	b940      	cbnz	r0, 80091ac <xQueueCreateCountingSemaphore+0x18>
 800919a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800919e:	f383 8811 	msr	BASEPRI, r3
 80091a2:	f3bf 8f6f 	isb	sy
 80091a6:	f3bf 8f4f 	dsb	sy
 80091aa:	e7fe      	b.n	80091aa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80091ac:	4288      	cmp	r0, r1
 80091ae:	d208      	bcs.n	80091c2 <xQueueCreateCountingSemaphore+0x2e>
 80091b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091b4:	f383 8811 	msr	BASEPRI, r3
 80091b8:	f3bf 8f6f 	isb	sy
 80091bc:	f3bf 8f4f 	dsb	sy
 80091c0:	e7fe      	b.n	80091c0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80091c2:	2202      	movs	r2, #2
 80091c4:	2100      	movs	r1, #0
 80091c6:	f7ff ff9c 	bl	8009102 <xQueueGenericCreate>
		if( xHandle != NULL )
 80091ca:	b100      	cbz	r0, 80091ce <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80091cc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80091ce:	bd10      	pop	{r4, pc}

080091d0 <xQueueGenericSend>:
{
 80091d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80091d4:	b085      	sub	sp, #20
 80091d6:	4688      	mov	r8, r1
 80091d8:	9201      	str	r2, [sp, #4]
 80091da:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80091dc:	4604      	mov	r4, r0
 80091de:	b940      	cbnz	r0, 80091f2 <xQueueGenericSend+0x22>
 80091e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091e4:	f383 8811 	msr	BASEPRI, r3
 80091e8:	f3bf 8f6f 	isb	sy
 80091ec:	f3bf 8f4f 	dsb	sy
 80091f0:	e7fe      	b.n	80091f0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80091f2:	b951      	cbnz	r1, 800920a <xQueueGenericSend+0x3a>
 80091f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80091f6:	b143      	cbz	r3, 800920a <xQueueGenericSend+0x3a>
 80091f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091fc:	f383 8811 	msr	BASEPRI, r3
 8009200:	f3bf 8f6f 	isb	sy
 8009204:	f3bf 8f4f 	dsb	sy
 8009208:	e7fe      	b.n	8009208 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800920a:	2f02      	cmp	r7, #2
 800920c:	d10b      	bne.n	8009226 <xQueueGenericSend+0x56>
 800920e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009210:	2b01      	cmp	r3, #1
 8009212:	d008      	beq.n	8009226 <xQueueGenericSend+0x56>
 8009214:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009218:	f383 8811 	msr	BASEPRI, r3
 800921c:	f3bf 8f6f 	isb	sy
 8009220:	f3bf 8f4f 	dsb	sy
 8009224:	e7fe      	b.n	8009224 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009226:	f000 ffc3 	bl	800a1b0 <xTaskGetSchedulerState>
 800922a:	4606      	mov	r6, r0
 800922c:	b950      	cbnz	r0, 8009244 <xQueueGenericSend+0x74>
 800922e:	9b01      	ldr	r3, [sp, #4]
 8009230:	b14b      	cbz	r3, 8009246 <xQueueGenericSend+0x76>
 8009232:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009236:	f383 8811 	msr	BASEPRI, r3
 800923a:	f3bf 8f6f 	isb	sy
 800923e:	f3bf 8f4f 	dsb	sy
 8009242:	e7fe      	b.n	8009242 <xQueueGenericSend+0x72>
 8009244:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009246:	f04f 0900 	mov.w	r9, #0
 800924a:	e037      	b.n	80092bc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800924c:	9d01      	ldr	r5, [sp, #4]
 800924e:	b91d      	cbnz	r5, 8009258 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009250:	f7ff fd18 	bl	8008c84 <vPortExitCritical>
			return errQUEUE_FULL;
 8009254:	2000      	movs	r0, #0
 8009256:	e052      	b.n	80092fe <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009258:	b916      	cbnz	r6, 8009260 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800925a:	a802      	add	r0, sp, #8
 800925c:	f000 ff5a 	bl	800a114 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009260:	f7ff fd10 	bl	8008c84 <vPortExitCritical>
		vTaskSuspendAll();
 8009264:	f000 fd5e 	bl	8009d24 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009268:	f7ff fcec 	bl	8008c44 <vPortEnterCritical>
 800926c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009270:	2bff      	cmp	r3, #255	; 0xff
 8009272:	bf08      	it	eq
 8009274:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009278:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800927c:	2bff      	cmp	r3, #255	; 0xff
 800927e:	bf08      	it	eq
 8009280:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8009284:	f7ff fcfe 	bl	8008c84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009288:	a901      	add	r1, sp, #4
 800928a:	a802      	add	r0, sp, #8
 800928c:	f000 ff4e 	bl	800a12c <xTaskCheckForTimeOut>
 8009290:	2800      	cmp	r0, #0
 8009292:	d14a      	bne.n	800932a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009294:	f7ff fcd6 	bl	8008c44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009298:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800929a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800929c:	429a      	cmp	r2, r3
 800929e:	d131      	bne.n	8009304 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80092a0:	f7ff fcf0 	bl	8008c84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80092a4:	9901      	ldr	r1, [sp, #4]
 80092a6:	f104 0010 	add.w	r0, r4, #16
 80092aa:	f000 feb7 	bl	800a01c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80092ae:	4620      	mov	r0, r4
 80092b0:	f7ff fe62 	bl	8008f78 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80092b4:	f000 fdda 	bl	8009e6c <xTaskResumeAll>
 80092b8:	b360      	cbz	r0, 8009314 <xQueueGenericSend+0x144>
 80092ba:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80092bc:	f7ff fcc2 	bl	8008c44 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80092c0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80092c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80092c4:	429a      	cmp	r2, r3
 80092c6:	d301      	bcc.n	80092cc <xQueueGenericSend+0xfc>
 80092c8:	2f02      	cmp	r7, #2
 80092ca:	d1bf      	bne.n	800924c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80092cc:	463a      	mov	r2, r7
 80092ce:	4641      	mov	r1, r8
 80092d0:	4620      	mov	r0, r4
 80092d2:	f7ff fe06 	bl	8008ee2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80092d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80092d8:	b11b      	cbz	r3, 80092e2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80092da:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80092de:	f000 fed5 	bl	800a08c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80092e2:	b148      	cbz	r0, 80092f8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 80092e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80092e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80092ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80092f0:	f3bf 8f4f 	dsb	sy
 80092f4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80092f8:	f7ff fcc4 	bl	8008c84 <vPortExitCritical>
				return pdPASS;
 80092fc:	2001      	movs	r0, #1
}
 80092fe:	b005      	add	sp, #20
 8009300:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009304:	f7ff fcbe 	bl	8008c84 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009308:	4620      	mov	r0, r4
 800930a:	f7ff fe35 	bl	8008f78 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800930e:	f000 fdad 	bl	8009e6c <xTaskResumeAll>
 8009312:	e7d2      	b.n	80092ba <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009314:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009318:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800931c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009320:	f3bf 8f4f 	dsb	sy
 8009324:	f3bf 8f6f 	isb	sy
 8009328:	e7c7      	b.n	80092ba <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800932a:	4620      	mov	r0, r4
 800932c:	f7ff fe24 	bl	8008f78 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009330:	f000 fd9c 	bl	8009e6c <xTaskResumeAll>
 8009334:	e78e      	b.n	8009254 <xQueueGenericSend+0x84>

08009336 <xQueueGenericSendFromISR>:
{
 8009336:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800933a:	4689      	mov	r9, r1
 800933c:	4690      	mov	r8, r2
 800933e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009340:	4604      	mov	r4, r0
 8009342:	b940      	cbnz	r0, 8009356 <xQueueGenericSendFromISR+0x20>
 8009344:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009348:	f383 8811 	msr	BASEPRI, r3
 800934c:	f3bf 8f6f 	isb	sy
 8009350:	f3bf 8f4f 	dsb	sy
 8009354:	e7fe      	b.n	8009354 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009356:	b951      	cbnz	r1, 800936e <xQueueGenericSendFromISR+0x38>
 8009358:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800935a:	b143      	cbz	r3, 800936e <xQueueGenericSendFromISR+0x38>
 800935c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009360:	f383 8811 	msr	BASEPRI, r3
 8009364:	f3bf 8f6f 	isb	sy
 8009368:	f3bf 8f4f 	dsb	sy
 800936c:	e7fe      	b.n	800936c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800936e:	2f02      	cmp	r7, #2
 8009370:	d10b      	bne.n	800938a <xQueueGenericSendFromISR+0x54>
 8009372:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009374:	2b01      	cmp	r3, #1
 8009376:	d008      	beq.n	800938a <xQueueGenericSendFromISR+0x54>
 8009378:	f04f 0350 	mov.w	r3, #80	; 0x50
 800937c:	f383 8811 	msr	BASEPRI, r3
 8009380:	f3bf 8f6f 	isb	sy
 8009384:	f3bf 8f4f 	dsb	sy
 8009388:	e7fe      	b.n	8009388 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800938a:	f7ff fd71 	bl	8008e70 <vPortValidateInterruptPriority>
	__asm volatile
 800938e:	f3ef 8611 	mrs	r6, BASEPRI
 8009392:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009396:	f383 8811 	msr	BASEPRI, r3
 800939a:	f3bf 8f6f 	isb	sy
 800939e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80093a2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80093a4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093a6:	429a      	cmp	r2, r3
 80093a8:	d301      	bcc.n	80093ae <xQueueGenericSendFromISR+0x78>
 80093aa:	2f02      	cmp	r7, #2
 80093ac:	d122      	bne.n	80093f4 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80093ae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093b2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80093b4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093b6:	4649      	mov	r1, r9
 80093b8:	4620      	mov	r0, r4
 80093ba:	f7ff fd92 	bl	8008ee2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80093be:	1c6b      	adds	r3, r5, #1
 80093c0:	d113      	bne.n	80093ea <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80093c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80093c4:	b90b      	cbnz	r3, 80093ca <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80093c6:	2001      	movs	r0, #1
 80093c8:	e00b      	b.n	80093e2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80093ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80093ce:	f000 fe5d 	bl	800a08c <xTaskRemoveFromEventList>
 80093d2:	2800      	cmp	r0, #0
 80093d4:	d0f7      	beq.n	80093c6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80093d6:	f1b8 0f00 	cmp.w	r8, #0
 80093da:	d0f4      	beq.n	80093c6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80093dc:	2001      	movs	r0, #1
 80093de:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80093e2:	f386 8811 	msr	BASEPRI, r6
}
 80093e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80093ea:	3501      	adds	r5, #1
 80093ec:	b26d      	sxtb	r5, r5
 80093ee:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80093f2:	e7e8      	b.n	80093c6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 80093f4:	2000      	movs	r0, #0
 80093f6:	e7f4      	b.n	80093e2 <xQueueGenericSendFromISR+0xac>

080093f8 <xQueueGiveFromISR>:
{
 80093f8:	b570      	push	{r4, r5, r6, lr}
 80093fa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80093fc:	4604      	mov	r4, r0
 80093fe:	b940      	cbnz	r0, 8009412 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009400:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009404:	f383 8811 	msr	BASEPRI, r3
 8009408:	f3bf 8f6f 	isb	sy
 800940c:	f3bf 8f4f 	dsb	sy
 8009410:	e7fe      	b.n	8009410 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009412:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009414:	b143      	cbz	r3, 8009428 <xQueueGiveFromISR+0x30>
 8009416:	f04f 0350 	mov.w	r3, #80	; 0x50
 800941a:	f383 8811 	msr	BASEPRI, r3
 800941e:	f3bf 8f6f 	isb	sy
 8009422:	f3bf 8f4f 	dsb	sy
 8009426:	e7fe      	b.n	8009426 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009428:	6803      	ldr	r3, [r0, #0]
 800942a:	b953      	cbnz	r3, 8009442 <xQueueGiveFromISR+0x4a>
 800942c:	6883      	ldr	r3, [r0, #8]
 800942e:	b143      	cbz	r3, 8009442 <xQueueGiveFromISR+0x4a>
 8009430:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009434:	f383 8811 	msr	BASEPRI, r3
 8009438:	f3bf 8f6f 	isb	sy
 800943c:	f3bf 8f4f 	dsb	sy
 8009440:	e7fe      	b.n	8009440 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009442:	f7ff fd15 	bl	8008e70 <vPortValidateInterruptPriority>
	__asm volatile
 8009446:	f3ef 8611 	mrs	r6, BASEPRI
 800944a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800944e:	f383 8811 	msr	BASEPRI, r3
 8009452:	f3bf 8f6f 	isb	sy
 8009456:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800945a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800945c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800945e:	4293      	cmp	r3, r2
 8009460:	d91c      	bls.n	800949c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009462:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009466:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009468:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800946a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800946c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800946e:	d110      	bne.n	8009492 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009470:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009472:	b90b      	cbnz	r3, 8009478 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009474:	2001      	movs	r0, #1
 8009476:	e009      	b.n	800948c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009478:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800947c:	f000 fe06 	bl	800a08c <xTaskRemoveFromEventList>
 8009480:	2800      	cmp	r0, #0
 8009482:	d0f7      	beq.n	8009474 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009484:	2d00      	cmp	r5, #0
 8009486:	d0f5      	beq.n	8009474 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009488:	2001      	movs	r0, #1
 800948a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800948c:	f386 8811 	msr	BASEPRI, r6
}
 8009490:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009492:	3301      	adds	r3, #1
 8009494:	b25b      	sxtb	r3, r3
 8009496:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800949a:	e7eb      	b.n	8009474 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800949c:	2000      	movs	r0, #0
 800949e:	e7f5      	b.n	800948c <xQueueGiveFromISR+0x94>

080094a0 <xQueueReceive>:
{
 80094a0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80094a4:	460f      	mov	r7, r1
 80094a6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80094a8:	4604      	mov	r4, r0
 80094aa:	b940      	cbnz	r0, 80094be <xQueueReceive+0x1e>
	__asm volatile
 80094ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094b0:	f383 8811 	msr	BASEPRI, r3
 80094b4:	f3bf 8f6f 	isb	sy
 80094b8:	f3bf 8f4f 	dsb	sy
 80094bc:	e7fe      	b.n	80094bc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80094be:	b951      	cbnz	r1, 80094d6 <xQueueReceive+0x36>
 80094c0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80094c2:	b143      	cbz	r3, 80094d6 <xQueueReceive+0x36>
 80094c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094c8:	f383 8811 	msr	BASEPRI, r3
 80094cc:	f3bf 8f6f 	isb	sy
 80094d0:	f3bf 8f4f 	dsb	sy
 80094d4:	e7fe      	b.n	80094d4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80094d6:	f000 fe6b 	bl	800a1b0 <xTaskGetSchedulerState>
 80094da:	4606      	mov	r6, r0
 80094dc:	b950      	cbnz	r0, 80094f4 <xQueueReceive+0x54>
 80094de:	9b01      	ldr	r3, [sp, #4]
 80094e0:	b14b      	cbz	r3, 80094f6 <xQueueReceive+0x56>
 80094e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094e6:	f383 8811 	msr	BASEPRI, r3
 80094ea:	f3bf 8f6f 	isb	sy
 80094ee:	f3bf 8f4f 	dsb	sy
 80094f2:	e7fe      	b.n	80094f2 <xQueueReceive+0x52>
 80094f4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80094f6:	f04f 0800 	mov.w	r8, #0
 80094fa:	e03d      	b.n	8009578 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80094fc:	9d01      	ldr	r5, [sp, #4]
 80094fe:	b91d      	cbnz	r5, 8009508 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009500:	f7ff fbc0 	bl	8008c84 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009504:	2000      	movs	r0, #0
 8009506:	e056      	b.n	80095b6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009508:	b916      	cbnz	r6, 8009510 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800950a:	a802      	add	r0, sp, #8
 800950c:	f000 fe02 	bl	800a114 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009510:	f7ff fbb8 	bl	8008c84 <vPortExitCritical>
		vTaskSuspendAll();
 8009514:	f000 fc06 	bl	8009d24 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009518:	f7ff fb94 	bl	8008c44 <vPortEnterCritical>
 800951c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009520:	2bff      	cmp	r3, #255	; 0xff
 8009522:	bf08      	it	eq
 8009524:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009528:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800952c:	2bff      	cmp	r3, #255	; 0xff
 800952e:	bf08      	it	eq
 8009530:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009534:	f7ff fba6 	bl	8008c84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009538:	a901      	add	r1, sp, #4
 800953a:	a802      	add	r0, sp, #8
 800953c:	f000 fdf6 	bl	800a12c <xTaskCheckForTimeOut>
 8009540:	2800      	cmp	r0, #0
 8009542:	d141      	bne.n	80095c8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009544:	4620      	mov	r0, r4
 8009546:	f7ff fcc1 	bl	8008ecc <prvIsQueueEmpty>
 800954a:	b3b8      	cbz	r0, 80095bc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800954c:	9901      	ldr	r1, [sp, #4]
 800954e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009552:	f000 fd63 	bl	800a01c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009556:	4620      	mov	r0, r4
 8009558:	f7ff fd0e 	bl	8008f78 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800955c:	f000 fc86 	bl	8009e6c <xTaskResumeAll>
 8009560:	b948      	cbnz	r0, 8009576 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009562:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009566:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800956a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800956e:	f3bf 8f4f 	dsb	sy
 8009572:	f3bf 8f6f 	isb	sy
 8009576:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009578:	f7ff fb64 	bl	8008c44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800957c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800957e:	2d00      	cmp	r5, #0
 8009580:	d0bc      	beq.n	80094fc <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009582:	4639      	mov	r1, r7
 8009584:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009586:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009588:	f7ff fce0 	bl	8008f4c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800958c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800958e:	6923      	ldr	r3, [r4, #16]
 8009590:	b173      	cbz	r3, 80095b0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009592:	f104 0010 	add.w	r0, r4, #16
 8009596:	f000 fd79 	bl	800a08c <xTaskRemoveFromEventList>
 800959a:	b148      	cbz	r0, 80095b0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800959c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095a4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095a8:	f3bf 8f4f 	dsb	sy
 80095ac:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80095b0:	f7ff fb68 	bl	8008c84 <vPortExitCritical>
				return pdPASS;
 80095b4:	2001      	movs	r0, #1
}
 80095b6:	b004      	add	sp, #16
 80095b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80095bc:	4620      	mov	r0, r4
 80095be:	f7ff fcdb 	bl	8008f78 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80095c2:	f000 fc53 	bl	8009e6c <xTaskResumeAll>
 80095c6:	e7d6      	b.n	8009576 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80095c8:	4620      	mov	r0, r4
 80095ca:	f7ff fcd5 	bl	8008f78 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80095ce:	f000 fc4d 	bl	8009e6c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80095d2:	4620      	mov	r0, r4
 80095d4:	f7ff fc7a 	bl	8008ecc <prvIsQueueEmpty>
 80095d8:	2800      	cmp	r0, #0
 80095da:	d0cc      	beq.n	8009576 <xQueueReceive+0xd6>
 80095dc:	e792      	b.n	8009504 <xQueueReceive+0x64>

080095de <xQueueSemaphoreTake>:
{
 80095de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095e0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80095e2:	4604      	mov	r4, r0
{
 80095e4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80095e6:	b940      	cbnz	r0, 80095fa <xQueueSemaphoreTake+0x1c>
 80095e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095ec:	f383 8811 	msr	BASEPRI, r3
 80095f0:	f3bf 8f6f 	isb	sy
 80095f4:	f3bf 8f4f 	dsb	sy
 80095f8:	e7fe      	b.n	80095f8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80095fa:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80095fc:	b145      	cbz	r5, 8009610 <xQueueSemaphoreTake+0x32>
 80095fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009602:	f383 8811 	msr	BASEPRI, r3
 8009606:	f3bf 8f6f 	isb	sy
 800960a:	f3bf 8f4f 	dsb	sy
 800960e:	e7fe      	b.n	800960e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009610:	f000 fdce 	bl	800a1b0 <xTaskGetSchedulerState>
 8009614:	4606      	mov	r6, r0
 8009616:	b950      	cbnz	r0, 800962e <xQueueSemaphoreTake+0x50>
 8009618:	9b01      	ldr	r3, [sp, #4]
 800961a:	b15b      	cbz	r3, 8009634 <xQueueSemaphoreTake+0x56>
 800961c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009620:	f383 8811 	msr	BASEPRI, r3
 8009624:	f3bf 8f6f 	isb	sy
 8009628:	f3bf 8f4f 	dsb	sy
 800962c:	e7fe      	b.n	800962c <xQueueSemaphoreTake+0x4e>
 800962e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009630:	2700      	movs	r7, #0
 8009632:	e053      	b.n	80096dc <xQueueSemaphoreTake+0xfe>
 8009634:	4605      	mov	r5, r0
 8009636:	e7fb      	b.n	8009630 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009638:	9b01      	ldr	r3, [sp, #4]
 800963a:	b963      	cbnz	r3, 8009656 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800963c:	b145      	cbz	r5, 8009650 <xQueueSemaphoreTake+0x72>
 800963e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009642:	f383 8811 	msr	BASEPRI, r3
 8009646:	f3bf 8f6f 	isb	sy
 800964a:	f3bf 8f4f 	dsb	sy
 800964e:	e7fe      	b.n	800964e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009650:	f7ff fb18 	bl	8008c84 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009654:	e062      	b.n	800971c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009656:	b916      	cbnz	r6, 800965e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009658:	a802      	add	r0, sp, #8
 800965a:	f000 fd5b 	bl	800a114 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800965e:	f7ff fb11 	bl	8008c84 <vPortExitCritical>
		vTaskSuspendAll();
 8009662:	f000 fb5f 	bl	8009d24 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009666:	f7ff faed 	bl	8008c44 <vPortEnterCritical>
 800966a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800966e:	2bff      	cmp	r3, #255	; 0xff
 8009670:	bf08      	it	eq
 8009672:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009676:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800967a:	2bff      	cmp	r3, #255	; 0xff
 800967c:	bf08      	it	eq
 800967e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009682:	f7ff faff 	bl	8008c84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009686:	a901      	add	r1, sp, #4
 8009688:	a802      	add	r0, sp, #8
 800968a:	f000 fd4f 	bl	800a12c <xTaskCheckForTimeOut>
 800968e:	2800      	cmp	r0, #0
 8009690:	d14d      	bne.n	800972e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009692:	4620      	mov	r0, r4
 8009694:	f7ff fc1a 	bl	8008ecc <prvIsQueueEmpty>
 8009698:	2800      	cmp	r0, #0
 800969a:	d042      	beq.n	8009722 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800969c:	6823      	ldr	r3, [r4, #0]
 800969e:	b93b      	cbnz	r3, 80096b0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80096a0:	f7ff fad0 	bl	8008c44 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80096a4:	68a0      	ldr	r0, [r4, #8]
 80096a6:	f000 fd93 	bl	800a1d0 <xTaskPriorityInherit>
 80096aa:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80096ac:	f7ff faea 	bl	8008c84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80096b0:	9901      	ldr	r1, [sp, #4]
 80096b2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80096b6:	f000 fcb1 	bl	800a01c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80096ba:	4620      	mov	r0, r4
 80096bc:	f7ff fc5c 	bl	8008f78 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80096c0:	f000 fbd4 	bl	8009e6c <xTaskResumeAll>
 80096c4:	b948      	cbnz	r0, 80096da <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80096c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80096d2:	f3bf 8f4f 	dsb	sy
 80096d6:	f3bf 8f6f 	isb	sy
 80096da:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80096dc:	f7ff fab2 	bl	8008c44 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80096e0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80096e2:	2b00      	cmp	r3, #0
 80096e4:	d0a8      	beq.n	8009638 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80096e6:	3b01      	subs	r3, #1
 80096e8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096ea:	6823      	ldr	r3, [r4, #0]
 80096ec:	b913      	cbnz	r3, 80096f4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80096ee:	f000 fe47 	bl	800a380 <pvTaskIncrementMutexHeldCount>
 80096f2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096f4:	6923      	ldr	r3, [r4, #16]
 80096f6:	b173      	cbz	r3, 8009716 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096f8:	f104 0010 	add.w	r0, r4, #16
 80096fc:	f000 fcc6 	bl	800a08c <xTaskRemoveFromEventList>
 8009700:	b148      	cbz	r0, 8009716 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009702:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009706:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800970a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800970e:	f3bf 8f4f 	dsb	sy
 8009712:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009716:	f7ff fab5 	bl	8008c84 <vPortExitCritical>
				return pdPASS;
 800971a:	2501      	movs	r5, #1
}
 800971c:	4628      	mov	r0, r5
 800971e:	b005      	add	sp, #20
 8009720:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009722:	4620      	mov	r0, r4
 8009724:	f7ff fc28 	bl	8008f78 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009728:	f000 fba0 	bl	8009e6c <xTaskResumeAll>
 800972c:	e7d5      	b.n	80096da <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800972e:	4620      	mov	r0, r4
 8009730:	f7ff fc22 	bl	8008f78 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009734:	f000 fb9a 	bl	8009e6c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009738:	4620      	mov	r0, r4
 800973a:	f7ff fbc7 	bl	8008ecc <prvIsQueueEmpty>
 800973e:	2800      	cmp	r0, #0
 8009740:	d0cb      	beq.n	80096da <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009742:	2d00      	cmp	r5, #0
 8009744:	d0ea      	beq.n	800971c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009746:	f7ff fa7d 	bl	8008c44 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800974a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800974c:	b119      	cbz	r1, 8009756 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800974e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009750:	6819      	ldr	r1, [r3, #0]
 8009752:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009756:	68a0      	ldr	r0, [r4, #8]
 8009758:	f000 fdc0 	bl	800a2dc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800975c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800975e:	f7ff fa91 	bl	8008c84 <vPortExitCritical>
 8009762:	e7db      	b.n	800971c <xQueueSemaphoreTake+0x13e>

08009764 <xQueueReceiveFromISR>:
{
 8009764:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009768:	4689      	mov	r9, r1
 800976a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800976c:	4605      	mov	r5, r0
 800976e:	b940      	cbnz	r0, 8009782 <xQueueReceiveFromISR+0x1e>
 8009770:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009774:	f383 8811 	msr	BASEPRI, r3
 8009778:	f3bf 8f6f 	isb	sy
 800977c:	f3bf 8f4f 	dsb	sy
 8009780:	e7fe      	b.n	8009780 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009782:	b951      	cbnz	r1, 800979a <xQueueReceiveFromISR+0x36>
 8009784:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009786:	b143      	cbz	r3, 800979a <xQueueReceiveFromISR+0x36>
 8009788:	f04f 0350 	mov.w	r3, #80	; 0x50
 800978c:	f383 8811 	msr	BASEPRI, r3
 8009790:	f3bf 8f6f 	isb	sy
 8009794:	f3bf 8f4f 	dsb	sy
 8009798:	e7fe      	b.n	8009798 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800979a:	f7ff fb69 	bl	8008e70 <vPortValidateInterruptPriority>
	__asm volatile
 800979e:	f3ef 8711 	mrs	r7, BASEPRI
 80097a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097a6:	f383 8811 	msr	BASEPRI, r3
 80097aa:	f3bf 8f6f 	isb	sy
 80097ae:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097b2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80097b4:	b31c      	cbz	r4, 80097fe <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80097b6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097ba:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80097bc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097be:	4628      	mov	r0, r5
 80097c0:	f7ff fbc4 	bl	8008f4c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097c4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80097c6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097c8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80097ca:	d113      	bne.n	80097f4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80097cc:	692b      	ldr	r3, [r5, #16]
 80097ce:	b90b      	cbnz	r3, 80097d4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80097d0:	2001      	movs	r0, #1
 80097d2:	e00b      	b.n	80097ec <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80097d4:	f105 0010 	add.w	r0, r5, #16
 80097d8:	f000 fc58 	bl	800a08c <xTaskRemoveFromEventList>
 80097dc:	2800      	cmp	r0, #0
 80097de:	d0f7      	beq.n	80097d0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80097e0:	f1b8 0f00 	cmp.w	r8, #0
 80097e4:	d0f4      	beq.n	80097d0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80097e6:	2001      	movs	r0, #1
 80097e8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80097ec:	f387 8811 	msr	BASEPRI, r7
}
 80097f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80097f4:	3601      	adds	r6, #1
 80097f6:	b276      	sxtb	r6, r6
 80097f8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80097fc:	e7e8      	b.n	80097d0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80097fe:	4620      	mov	r0, r4
 8009800:	e7f4      	b.n	80097ec <xQueueReceiveFromISR+0x88>
	...

08009804 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009804:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009806:	4a07      	ldr	r2, [pc, #28]	; (8009824 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009808:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800980a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800980e:	b92c      	cbnz	r4, 800981c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009810:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009814:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009818:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800981a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800981c:	3301      	adds	r3, #1
 800981e:	2b08      	cmp	r3, #8
 8009820:	d1f3      	bne.n	800980a <vQueueAddToRegistry+0x6>
 8009822:	e7fa      	b.n	800981a <vQueueAddToRegistry+0x16>
 8009824:	20014e14 	.word	0x20014e14

08009828 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009828:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800982a:	4a08      	ldr	r2, [pc, #32]	; (800984c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800982c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800982e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009832:	684c      	ldr	r4, [r1, #4]
 8009834:	4284      	cmp	r4, r0
 8009836:	d104      	bne.n	8009842 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009838:	2000      	movs	r0, #0
 800983a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800983e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009840:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009842:	3301      	adds	r3, #1
 8009844:	2b08      	cmp	r3, #8
 8009846:	d1f2      	bne.n	800982e <vQueueUnregisterQueue+0x6>
 8009848:	e7fa      	b.n	8009840 <vQueueUnregisterQueue+0x18>
 800984a:	bf00      	nop
 800984c:	20014e14 	.word	0x20014e14

08009850 <vQueueDelete>:
{
 8009850:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009852:	4604      	mov	r4, r0
 8009854:	b940      	cbnz	r0, 8009868 <vQueueDelete+0x18>
	__asm volatile
 8009856:	f04f 0350 	mov.w	r3, #80	; 0x50
 800985a:	f383 8811 	msr	BASEPRI, r3
 800985e:	f3bf 8f6f 	isb	sy
 8009862:	f3bf 8f4f 	dsb	sy
 8009866:	e7fe      	b.n	8009866 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009868:	f7ff ffde 	bl	8009828 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800986c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009870:	b923      	cbnz	r3, 800987c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009872:	4620      	mov	r0, r4
}
 8009874:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009878:	f7ff b902 	b.w	8008a80 <vPortFree>
}
 800987c:	bd10      	pop	{r4, pc}

0800987e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800987e:	b570      	push	{r4, r5, r6, lr}
 8009880:	4604      	mov	r4, r0
 8009882:	460d      	mov	r5, r1
 8009884:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009886:	f7ff f9dd 	bl	8008c44 <vPortEnterCritical>
 800988a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800988e:	2bff      	cmp	r3, #255	; 0xff
 8009890:	bf04      	itt	eq
 8009892:	2300      	moveq	r3, #0
 8009894:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009898:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800989c:	2bff      	cmp	r3, #255	; 0xff
 800989e:	bf04      	itt	eq
 80098a0:	2300      	moveq	r3, #0
 80098a2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80098a6:	f7ff f9ed 	bl	8008c84 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80098aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80098ac:	b92b      	cbnz	r3, 80098ba <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80098ae:	4632      	mov	r2, r6
 80098b0:	4629      	mov	r1, r5
 80098b2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80098b6:	f000 fbcb 	bl	800a050 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80098ba:	4620      	mov	r0, r4
	}
 80098bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80098c0:	f7ff bb5a 	b.w	8008f78 <prvUnlockQueue>

080098c4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80098c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098c8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80098ca:	f7ff f9bb 	bl	8008c44 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80098ce:	4b30      	ldr	r3, [pc, #192]	; (8009990 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80098d0:	4e30      	ldr	r6, [pc, #192]	; (8009994 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80098d2:	681a      	ldr	r2, [r3, #0]
 80098d4:	4f30      	ldr	r7, [pc, #192]	; (8009998 <prvAddNewTaskToReadyList+0xd4>)
 80098d6:	3201      	adds	r2, #1
 80098d8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80098da:	6835      	ldr	r5, [r6, #0]
 80098dc:	2d00      	cmp	r5, #0
 80098de:	d14b      	bne.n	8009978 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80098e0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80098e2:	681b      	ldr	r3, [r3, #0]
 80098e4:	2b01      	cmp	r3, #1
 80098e6:	d11f      	bne.n	8009928 <prvAddNewTaskToReadyList+0x64>
 80098e8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80098ea:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80098ec:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80098ee:	f7ff f8ff 	bl	8008af0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80098f2:	2d38      	cmp	r5, #56	; 0x38
 80098f4:	f108 0814 	add.w	r8, r8, #20
 80098f8:	d1f7      	bne.n	80098ea <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80098fa:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80099c0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80098fe:	4d27      	ldr	r5, [pc, #156]	; (800999c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009900:	4640      	mov	r0, r8
 8009902:	f7ff f8f5 	bl	8008af0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009906:	4628      	mov	r0, r5
 8009908:	f7ff f8f2 	bl	8008af0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800990c:	4824      	ldr	r0, [pc, #144]	; (80099a0 <prvAddNewTaskToReadyList+0xdc>)
 800990e:	f7ff f8ef 	bl	8008af0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009912:	4824      	ldr	r0, [pc, #144]	; (80099a4 <prvAddNewTaskToReadyList+0xe0>)
 8009914:	f7ff f8ec 	bl	8008af0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009918:	4823      	ldr	r0, [pc, #140]	; (80099a8 <prvAddNewTaskToReadyList+0xe4>)
 800991a:	f7ff f8e9 	bl	8008af0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800991e:	4b23      	ldr	r3, [pc, #140]	; (80099ac <prvAddNewTaskToReadyList+0xe8>)
 8009920:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009924:	4b22      	ldr	r3, [pc, #136]	; (80099b0 <prvAddNewTaskToReadyList+0xec>)
 8009926:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009928:	4a22      	ldr	r2, [pc, #136]	; (80099b4 <prvAddNewTaskToReadyList+0xf0>)
 800992a:	6813      	ldr	r3, [r2, #0]
 800992c:	3301      	adds	r3, #1
 800992e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009930:	4a21      	ldr	r2, [pc, #132]	; (80099b8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009932:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009934:	6811      	ldr	r1, [r2, #0]
 8009936:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009938:	2014      	movs	r0, #20
 800993a:	428b      	cmp	r3, r1
 800993c:	fb00 7003 	mla	r0, r0, r3, r7
 8009940:	f104 0104 	add.w	r1, r4, #4
 8009944:	bf88      	it	hi
 8009946:	6013      	strhi	r3, [r2, #0]
 8009948:	f7ff f8e0 	bl	8008b0c <vListInsertEnd>
	taskEXIT_CRITICAL();
 800994c:	f7ff f99a 	bl	8008c84 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009950:	4b1a      	ldr	r3, [pc, #104]	; (80099bc <prvAddNewTaskToReadyList+0xf8>)
 8009952:	681b      	ldr	r3, [r3, #0]
 8009954:	b173      	cbz	r3, 8009974 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009956:	6833      	ldr	r3, [r6, #0]
 8009958:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800995a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800995c:	429a      	cmp	r2, r3
 800995e:	d209      	bcs.n	8009974 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009960:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009964:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009968:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800996c:	f3bf 8f4f 	dsb	sy
 8009970:	f3bf 8f6f 	isb	sy
}
 8009974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009978:	4b10      	ldr	r3, [pc, #64]	; (80099bc <prvAddNewTaskToReadyList+0xf8>)
 800997a:	681b      	ldr	r3, [r3, #0]
 800997c:	2b00      	cmp	r3, #0
 800997e:	d1d3      	bne.n	8009928 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009980:	6833      	ldr	r3, [r6, #0]
 8009982:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009984:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009986:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009988:	bf98      	it	ls
 800998a:	6034      	strls	r4, [r6, #0]
 800998c:	e7cc      	b.n	8009928 <prvAddNewTaskToReadyList+0x64>
 800998e:	bf00      	nop
 8009990:	200152c0 	.word	0x200152c0
 8009994:	20014e54 	.word	0x20014e54
 8009998:	20014e60 	.word	0x20014e60
 800999c:	200152ec 	.word	0x200152ec
 80099a0:	20015308 	.word	0x20015308
 80099a4:	20015334 	.word	0x20015334
 80099a8:	20015320 	.word	0x20015320
 80099ac:	20014e58 	.word	0x20014e58
 80099b0:	20014e5c 	.word	0x20014e5c
 80099b4:	200152d0 	.word	0x200152d0
 80099b8:	200152d4 	.word	0x200152d4
 80099bc:	2001531c 	.word	0x2001531c
 80099c0:	200152d8 	.word	0x200152d8

080099c4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80099c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80099c6:	4b15      	ldr	r3, [pc, #84]	; (8009a1c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099c8:	4e15      	ldr	r6, [pc, #84]	; (8009a20 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80099ca:	681d      	ldr	r5, [r3, #0]
{
 80099cc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099ce:	6830      	ldr	r0, [r6, #0]
 80099d0:	3004      	adds	r0, #4
{
 80099d2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099d4:	f7ff f8bd 	bl	8008b52 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80099d8:	1c63      	adds	r3, r4, #1
 80099da:	d107      	bne.n	80099ec <prvAddCurrentTaskToDelayedList+0x28>
 80099dc:	b137      	cbz	r7, 80099ec <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099de:	6831      	ldr	r1, [r6, #0]
 80099e0:	4810      	ldr	r0, [pc, #64]	; (8009a24 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80099e2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099e6:	3104      	adds	r1, #4
 80099e8:	f7ff b890 	b.w	8008b0c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80099ec:	6833      	ldr	r3, [r6, #0]
 80099ee:	192c      	adds	r4, r5, r4
 80099f0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80099f2:	d307      	bcc.n	8009a04 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099f4:	4b0c      	ldr	r3, [pc, #48]	; (8009a28 <prvAddCurrentTaskToDelayedList+0x64>)
 80099f6:	6818      	ldr	r0, [r3, #0]
 80099f8:	6831      	ldr	r1, [r6, #0]
}
 80099fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099fe:	3104      	adds	r1, #4
 8009a00:	f7ff b890 	b.w	8008b24 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a04:	4b09      	ldr	r3, [pc, #36]	; (8009a2c <prvAddCurrentTaskToDelayedList+0x68>)
 8009a06:	6818      	ldr	r0, [r3, #0]
 8009a08:	6831      	ldr	r1, [r6, #0]
 8009a0a:	3104      	adds	r1, #4
 8009a0c:	f7ff f88a 	bl	8008b24 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009a10:	4b07      	ldr	r3, [pc, #28]	; (8009a30 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009a12:	681a      	ldr	r2, [r3, #0]
 8009a14:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009a16:	bf88      	it	hi
 8009a18:	601c      	strhi	r4, [r3, #0]
}
 8009a1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a1c:	20015348 	.word	0x20015348
 8009a20:	20014e54 	.word	0x20014e54
 8009a24:	20015320 	.word	0x20015320
 8009a28:	20014e5c 	.word	0x20014e5c
 8009a2c:	20014e58 	.word	0x20014e58
 8009a30:	20015300 	.word	0x20015300

08009a34 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a34:	4a06      	ldr	r2, [pc, #24]	; (8009a50 <prvResetNextTaskUnblockTime+0x1c>)
 8009a36:	6813      	ldr	r3, [r2, #0]
 8009a38:	6819      	ldr	r1, [r3, #0]
 8009a3a:	4b06      	ldr	r3, [pc, #24]	; (8009a54 <prvResetNextTaskUnblockTime+0x20>)
 8009a3c:	b919      	cbnz	r1, 8009a46 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a3e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a42:	601a      	str	r2, [r3, #0]
}
 8009a44:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a46:	6812      	ldr	r2, [r2, #0]
 8009a48:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a4a:	68d2      	ldr	r2, [r2, #12]
 8009a4c:	6852      	ldr	r2, [r2, #4]
 8009a4e:	e7f8      	b.n	8009a42 <prvResetNextTaskUnblockTime+0xe>
 8009a50:	20014e58 	.word	0x20014e58
 8009a54:	20015300 	.word	0x20015300

08009a58 <prvDeleteTCB>:
	{
 8009a58:	b510      	push	{r4, lr}
 8009a5a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009a5c:	3058      	adds	r0, #88	; 0x58
 8009a5e:	f017 fb27 	bl	80210b0 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a62:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009a66:	b93b      	cbnz	r3, 8009a78 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009a68:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009a6a:	f7ff f809 	bl	8008a80 <vPortFree>
				vPortFree( pxTCB );
 8009a6e:	4620      	mov	r0, r4
	}
 8009a70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009a74:	f7ff b804 	b.w	8008a80 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009a78:	2b01      	cmp	r3, #1
 8009a7a:	d0f8      	beq.n	8009a6e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009a7c:	2b02      	cmp	r3, #2
 8009a7e:	d008      	beq.n	8009a92 <prvDeleteTCB+0x3a>
 8009a80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a84:	f383 8811 	msr	BASEPRI, r3
 8009a88:	f3bf 8f6f 	isb	sy
 8009a8c:	f3bf 8f4f 	dsb	sy
 8009a90:	e7fe      	b.n	8009a90 <prvDeleteTCB+0x38>
	}
 8009a92:	bd10      	pop	{r4, pc}

08009a94 <prvIdleTask>:
{
 8009a94:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a96:	4c13      	ldr	r4, [pc, #76]	; (8009ae4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a98:	4f13      	ldr	r7, [pc, #76]	; (8009ae8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009a9a:	4d14      	ldr	r5, [pc, #80]	; (8009aec <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a9c:	6823      	ldr	r3, [r4, #0]
 8009a9e:	b973      	cbnz	r3, 8009abe <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009aa0:	4b13      	ldr	r3, [pc, #76]	; (8009af0 <prvIdleTask+0x5c>)
 8009aa2:	681b      	ldr	r3, [r3, #0]
 8009aa4:	2b01      	cmp	r3, #1
 8009aa6:	d9f8      	bls.n	8009a9a <prvIdleTask+0x6>
				taskYIELD();
 8009aa8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009aac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ab0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009ab4:	f3bf 8f4f 	dsb	sy
 8009ab8:	f3bf 8f6f 	isb	sy
 8009abc:	e7ed      	b.n	8009a9a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009abe:	f7ff f8c1 	bl	8008c44 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ac2:	68fb      	ldr	r3, [r7, #12]
 8009ac4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ac6:	1d30      	adds	r0, r6, #4
 8009ac8:	f7ff f843 	bl	8008b52 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009acc:	682b      	ldr	r3, [r5, #0]
 8009ace:	3b01      	subs	r3, #1
 8009ad0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009ad2:	6823      	ldr	r3, [r4, #0]
 8009ad4:	3b01      	subs	r3, #1
 8009ad6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009ad8:	f7ff f8d4 	bl	8008c84 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009adc:	4630      	mov	r0, r6
 8009ade:	f7ff ffbb 	bl	8009a58 <prvDeleteTCB>
 8009ae2:	e7db      	b.n	8009a9c <prvIdleTask+0x8>
 8009ae4:	200152c4 	.word	0x200152c4
 8009ae8:	20015334 	.word	0x20015334
 8009aec:	200152c0 	.word	0x200152c0
 8009af0:	20014e60 	.word	0x20014e60

08009af4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009af4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009af8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009afc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009b00:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b02:	4606      	mov	r6, r0
 8009b04:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b06:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009b08:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b0a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b0c:	f016 feec 	bl	80208e8 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b10:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009b12:	f1a9 0904 	sub.w	r9, r9, #4
 8009b16:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009b18:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009b1c:	2d00      	cmp	r5, #0
 8009b1e:	d042      	beq.n	8009ba6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009b20:	1e6b      	subs	r3, r5, #1
 8009b22:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009b26:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b28:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009b2c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009b30:	b108      	cbz	r0, 8009b36 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b32:	42ab      	cmp	r3, r5
 8009b34:	d1f8      	bne.n	8009b28 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b36:	2300      	movs	r3, #0
 8009b38:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009b3c:	9d08      	ldr	r5, [sp, #32]
 8009b3e:	2d37      	cmp	r5, #55	; 0x37
 8009b40:	bf28      	it	cs
 8009b42:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009b44:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009b48:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009b4a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b4c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009b4e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b52:	f7fe ffd8 	bl	8008b06 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b56:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009b5a:	f104 0018 	add.w	r0, r4, #24
 8009b5e:	f7fe ffd2 	bl	8008b06 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009b62:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009b66:	2260      	movs	r2, #96	; 0x60
 8009b68:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009b6a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b6c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009b6e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009b70:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009b74:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009b78:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009b7c:	f016 feb4 	bl	80208e8 <memset>
 8009b80:	4b0a      	ldr	r3, [pc, #40]	; (8009bac <prvInitialiseNewTask.constprop.0+0xb8>)
 8009b82:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009b84:	4b0a      	ldr	r3, [pc, #40]	; (8009bb0 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009b86:	6623      	str	r3, [r4, #96]	; 0x60
 8009b88:	4b0a      	ldr	r3, [pc, #40]	; (8009bb4 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009b8a:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009b8c:	463a      	mov	r2, r7
 8009b8e:	4631      	mov	r1, r6
 8009b90:	4648      	mov	r0, r9
 8009b92:	f7ff f82d 	bl	8008bf0 <pxPortInitialiseStack>
 8009b96:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009b98:	f1b8 0f00 	cmp.w	r8, #0
 8009b9c:	d001      	beq.n	8009ba2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009b9e:	f8c8 4000 	str.w	r4, [r8]
}
 8009ba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009ba6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009baa:	e7c7      	b.n	8009b3c <prvInitialiseNewTask.constprop.0+0x48>
 8009bac:	08024418 	.word	0x08024418
 8009bb0:	08024438 	.word	0x08024438
 8009bb4:	080243f8 	.word	0x080243f8

08009bb8 <xTaskCreateStatic>:
	{
 8009bb8:	b570      	push	{r4, r5, r6, lr}
 8009bba:	b086      	sub	sp, #24
 8009bbc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009bc0:	b945      	cbnz	r5, 8009bd4 <xTaskCreateStatic+0x1c>
 8009bc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bc6:	f383 8811 	msr	BASEPRI, r3
 8009bca:	f3bf 8f6f 	isb	sy
 8009bce:	f3bf 8f4f 	dsb	sy
 8009bd2:	e7fe      	b.n	8009bd2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009bd4:	b944      	cbnz	r4, 8009be8 <xTaskCreateStatic+0x30>
 8009bd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bda:	f383 8811 	msr	BASEPRI, r3
 8009bde:	f3bf 8f6f 	isb	sy
 8009be2:	f3bf 8f4f 	dsb	sy
 8009be6:	e7fe      	b.n	8009be6 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009be8:	26c0      	movs	r6, #192	; 0xc0
 8009bea:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009bec:	9e05      	ldr	r6, [sp, #20]
 8009bee:	2ec0      	cmp	r6, #192	; 0xc0
 8009bf0:	d008      	beq.n	8009c04 <xTaskCreateStatic+0x4c>
 8009bf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bf6:	f383 8811 	msr	BASEPRI, r3
 8009bfa:	f3bf 8f6f 	isb	sy
 8009bfe:	f3bf 8f4f 	dsb	sy
 8009c02:	e7fe      	b.n	8009c02 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009c04:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c06:	2502      	movs	r5, #2
 8009c08:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c0c:	ad04      	add	r5, sp, #16
 8009c0e:	9501      	str	r5, [sp, #4]
 8009c10:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009c12:	9402      	str	r4, [sp, #8]
 8009c14:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009c16:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c18:	f7ff ff6c 	bl	8009af4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c1c:	4620      	mov	r0, r4
 8009c1e:	f7ff fe51 	bl	80098c4 <prvAddNewTaskToReadyList>
	}
 8009c22:	9804      	ldr	r0, [sp, #16]
 8009c24:	b006      	add	sp, #24
 8009c26:	bd70      	pop	{r4, r5, r6, pc}

08009c28 <xTaskCreate>:
	{
 8009c28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c2c:	4607      	mov	r7, r0
 8009c2e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c30:	0090      	lsls	r0, r2, #2
	{
 8009c32:	4688      	mov	r8, r1
 8009c34:	4616      	mov	r6, r2
 8009c36:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c38:	f7fe fe90 	bl	800895c <pvPortMalloc>
			if( pxStack != NULL )
 8009c3c:	4605      	mov	r5, r0
 8009c3e:	b1e8      	cbz	r0, 8009c7c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009c40:	20c0      	movs	r0, #192	; 0xc0
 8009c42:	f7fe fe8b 	bl	800895c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009c46:	4604      	mov	r4, r0
 8009c48:	b1a8      	cbz	r0, 8009c76 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c4a:	2300      	movs	r3, #0
 8009c4c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009c52:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c54:	9301      	str	r3, [sp, #4]
 8009c56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009c58:	9002      	str	r0, [sp, #8]
 8009c5a:	9300      	str	r3, [sp, #0]
 8009c5c:	4632      	mov	r2, r6
 8009c5e:	464b      	mov	r3, r9
 8009c60:	4641      	mov	r1, r8
 8009c62:	4638      	mov	r0, r7
 8009c64:	f7ff ff46 	bl	8009af4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c68:	4620      	mov	r0, r4
 8009c6a:	f7ff fe2b 	bl	80098c4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009c6e:	2001      	movs	r0, #1
	}
 8009c70:	b005      	add	sp, #20
 8009c72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009c76:	4628      	mov	r0, r5
 8009c78:	f7fe ff02 	bl	8008a80 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009c7c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009c80:	e7f6      	b.n	8009c70 <xTaskCreate+0x48>
	...

08009c84 <vTaskStartScheduler>:
{
 8009c84:	b510      	push	{r4, lr}
 8009c86:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009c88:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009c8a:	aa07      	add	r2, sp, #28
 8009c8c:	a906      	add	r1, sp, #24
 8009c8e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009c90:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009c94:	f7fe fe26 	bl	80088e4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009c98:	9b05      	ldr	r3, [sp, #20]
 8009c9a:	9302      	str	r3, [sp, #8]
 8009c9c:	9b06      	ldr	r3, [sp, #24]
 8009c9e:	9a07      	ldr	r2, [sp, #28]
 8009ca0:	4919      	ldr	r1, [pc, #100]	; (8009d08 <vTaskStartScheduler+0x84>)
 8009ca2:	481a      	ldr	r0, [pc, #104]	; (8009d0c <vTaskStartScheduler+0x88>)
 8009ca4:	e9cd 4300 	strd	r4, r3, [sp]
 8009ca8:	4623      	mov	r3, r4
 8009caa:	f7ff ff85 	bl	8009bb8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009cae:	b340      	cbz	r0, 8009d02 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009cb0:	f000 fbc4 	bl	800a43c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009cb4:	2801      	cmp	r0, #1
 8009cb6:	d119      	bne.n	8009cec <vTaskStartScheduler+0x68>
 8009cb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cbc:	f383 8811 	msr	BASEPRI, r3
 8009cc0:	f3bf 8f6f 	isb	sy
 8009cc4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009cc8:	4b11      	ldr	r3, [pc, #68]	; (8009d10 <vTaskStartScheduler+0x8c>)
 8009cca:	4a12      	ldr	r2, [pc, #72]	; (8009d14 <vTaskStartScheduler+0x90>)
 8009ccc:	681b      	ldr	r3, [r3, #0]
 8009cce:	3358      	adds	r3, #88	; 0x58
 8009cd0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009cd2:	4b11      	ldr	r3, [pc, #68]	; (8009d18 <vTaskStartScheduler+0x94>)
 8009cd4:	f04f 32ff 	mov.w	r2, #4294967295
 8009cd8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009cda:	4b10      	ldr	r3, [pc, #64]	; (8009d1c <vTaskStartScheduler+0x98>)
 8009cdc:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009cde:	4b10      	ldr	r3, [pc, #64]	; (8009d20 <vTaskStartScheduler+0x9c>)
 8009ce0:	601c      	str	r4, [r3, #0]
}
 8009ce2:	b008      	add	sp, #32
 8009ce4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009ce8:	f7ff b83c 	b.w	8008d64 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009cec:	3001      	adds	r0, #1
 8009cee:	d108      	bne.n	8009d02 <vTaskStartScheduler+0x7e>
 8009cf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cf4:	f383 8811 	msr	BASEPRI, r3
 8009cf8:	f3bf 8f6f 	isb	sy
 8009cfc:	f3bf 8f4f 	dsb	sy
 8009d00:	e7fe      	b.n	8009d00 <vTaskStartScheduler+0x7c>
}
 8009d02:	b008      	add	sp, #32
 8009d04:	bd10      	pop	{r4, pc}
 8009d06:	bf00      	nop
 8009d08:	080234d4 	.word	0x080234d4
 8009d0c:	08009a95 	.word	0x08009a95
 8009d10:	20014e54 	.word	0x20014e54
 8009d14:	20000104 	.word	0x20000104
 8009d18:	20015300 	.word	0x20015300
 8009d1c:	2001531c 	.word	0x2001531c
 8009d20:	20015348 	.word	0x20015348

08009d24 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009d24:	4a02      	ldr	r2, [pc, #8]	; (8009d30 <vTaskSuspendAll+0xc>)
 8009d26:	6813      	ldr	r3, [r2, #0]
 8009d28:	3301      	adds	r3, #1
 8009d2a:	6013      	str	r3, [r2, #0]
}
 8009d2c:	4770      	bx	lr
 8009d2e:	bf00      	nop
 8009d30:	200152cc 	.word	0x200152cc

08009d34 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009d34:	4b01      	ldr	r3, [pc, #4]	; (8009d3c <xTaskGetTickCount+0x8>)
 8009d36:	6818      	ldr	r0, [r3, #0]
}
 8009d38:	4770      	bx	lr
 8009d3a:	bf00      	nop
 8009d3c:	20015348 	.word	0x20015348

08009d40 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d40:	4b3f      	ldr	r3, [pc, #252]	; (8009e40 <xTaskIncrementTick+0x100>)
 8009d42:	681b      	ldr	r3, [r3, #0]
{
 8009d44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d48:	2b00      	cmp	r3, #0
 8009d4a:	d173      	bne.n	8009e34 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009d4c:	4b3d      	ldr	r3, [pc, #244]	; (8009e44 <xTaskIncrementTick+0x104>)
 8009d4e:	681d      	ldr	r5, [r3, #0]
 8009d50:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009d52:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009d54:	b9bd      	cbnz	r5, 8009d86 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009d56:	4b3c      	ldr	r3, [pc, #240]	; (8009e48 <xTaskIncrementTick+0x108>)
 8009d58:	681a      	ldr	r2, [r3, #0]
 8009d5a:	6812      	ldr	r2, [r2, #0]
 8009d5c:	b142      	cbz	r2, 8009d70 <xTaskIncrementTick+0x30>
 8009d5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d62:	f383 8811 	msr	BASEPRI, r3
 8009d66:	f3bf 8f6f 	isb	sy
 8009d6a:	f3bf 8f4f 	dsb	sy
 8009d6e:	e7fe      	b.n	8009d6e <xTaskIncrementTick+0x2e>
 8009d70:	4a36      	ldr	r2, [pc, #216]	; (8009e4c <xTaskIncrementTick+0x10c>)
 8009d72:	6819      	ldr	r1, [r3, #0]
 8009d74:	6810      	ldr	r0, [r2, #0]
 8009d76:	6018      	str	r0, [r3, #0]
 8009d78:	6011      	str	r1, [r2, #0]
 8009d7a:	4a35      	ldr	r2, [pc, #212]	; (8009e50 <xTaskIncrementTick+0x110>)
 8009d7c:	6813      	ldr	r3, [r2, #0]
 8009d7e:	3301      	adds	r3, #1
 8009d80:	6013      	str	r3, [r2, #0]
 8009d82:	f7ff fe57 	bl	8009a34 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009d86:	4e33      	ldr	r6, [pc, #204]	; (8009e54 <xTaskIncrementTick+0x114>)
 8009d88:	4f33      	ldr	r7, [pc, #204]	; (8009e58 <xTaskIncrementTick+0x118>)
 8009d8a:	6833      	ldr	r3, [r6, #0]
 8009d8c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009e64 <xTaskIncrementTick+0x124>
 8009d90:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009d92:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009d96:	d911      	bls.n	8009dbc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009d98:	f8d8 3000 	ldr.w	r3, [r8]
 8009d9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d9e:	2214      	movs	r2, #20
 8009da0:	4353      	muls	r3, r2
 8009da2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009da4:	2b02      	cmp	r3, #2
 8009da6:	bf28      	it	cs
 8009da8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009daa:	4b2c      	ldr	r3, [pc, #176]	; (8009e5c <xTaskIncrementTick+0x11c>)
 8009dac:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009dae:	2b00      	cmp	r3, #0
}
 8009db0:	bf0c      	ite	eq
 8009db2:	4620      	moveq	r0, r4
 8009db4:	2001      	movne	r0, #1
 8009db6:	b003      	add	sp, #12
 8009db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009dbc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009e48 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009dc0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009e68 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009dc4:	f8d9 3000 	ldr.w	r3, [r9]
 8009dc8:	681b      	ldr	r3, [r3, #0]
 8009dca:	b91b      	cbnz	r3, 8009dd4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009dcc:	f04f 33ff 	mov.w	r3, #4294967295
 8009dd0:	6033      	str	r3, [r6, #0]
					break;
 8009dd2:	e7e1      	b.n	8009d98 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009dd4:	f8d9 3000 	ldr.w	r3, [r9]
 8009dd8:	68db      	ldr	r3, [r3, #12]
 8009dda:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009dde:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009de2:	4295      	cmp	r5, r2
 8009de4:	d201      	bcs.n	8009dea <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009de6:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009de8:	e7d6      	b.n	8009d98 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009dea:	f10b 0104 	add.w	r1, fp, #4
 8009dee:	4608      	mov	r0, r1
 8009df0:	9101      	str	r1, [sp, #4]
 8009df2:	f7fe feae 	bl	8008b52 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009df6:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009dfa:	9901      	ldr	r1, [sp, #4]
 8009dfc:	b122      	cbz	r2, 8009e08 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009dfe:	f10b 0018 	add.w	r0, fp, #24
 8009e02:	f7fe fea6 	bl	8008b52 <uxListRemove>
 8009e06:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009e08:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009e0c:	f8da 2000 	ldr.w	r2, [sl]
 8009e10:	2314      	movs	r3, #20
 8009e12:	4290      	cmp	r0, r2
 8009e14:	bf88      	it	hi
 8009e16:	f8ca 0000 	strhi.w	r0, [sl]
 8009e1a:	fb03 7000 	mla	r0, r3, r0, r7
 8009e1e:	f7fe fe75 	bl	8008b0c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e22:	f8d8 1000 	ldr.w	r1, [r8]
 8009e26:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009e2a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009e2c:	429a      	cmp	r2, r3
 8009e2e:	bf28      	it	cs
 8009e30:	2401      	movcs	r4, #1
 8009e32:	e7c7      	b.n	8009dc4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009e34:	4a0a      	ldr	r2, [pc, #40]	; (8009e60 <xTaskIncrementTick+0x120>)
 8009e36:	6813      	ldr	r3, [r2, #0]
 8009e38:	3301      	adds	r3, #1
 8009e3a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009e3c:	2400      	movs	r4, #0
 8009e3e:	e7b4      	b.n	8009daa <xTaskIncrementTick+0x6a>
 8009e40:	200152cc 	.word	0x200152cc
 8009e44:	20015348 	.word	0x20015348
 8009e48:	20014e58 	.word	0x20014e58
 8009e4c:	20014e5c 	.word	0x20014e5c
 8009e50:	20015304 	.word	0x20015304
 8009e54:	20015300 	.word	0x20015300
 8009e58:	20014e60 	.word	0x20014e60
 8009e5c:	2001534c 	.word	0x2001534c
 8009e60:	200152c8 	.word	0x200152c8
 8009e64:	20014e54 	.word	0x20014e54
 8009e68:	200152d4 	.word	0x200152d4

08009e6c <xTaskResumeAll>:
{
 8009e6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009e6e:	4c31      	ldr	r4, [pc, #196]	; (8009f34 <xTaskResumeAll+0xc8>)
 8009e70:	6823      	ldr	r3, [r4, #0]
 8009e72:	b943      	cbnz	r3, 8009e86 <xTaskResumeAll+0x1a>
 8009e74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e78:	f383 8811 	msr	BASEPRI, r3
 8009e7c:	f3bf 8f6f 	isb	sy
 8009e80:	f3bf 8f4f 	dsb	sy
 8009e84:	e7fe      	b.n	8009e84 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009e86:	f7fe fedd 	bl	8008c44 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009e8a:	6823      	ldr	r3, [r4, #0]
 8009e8c:	3b01      	subs	r3, #1
 8009e8e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e90:	6824      	ldr	r4, [r4, #0]
 8009e92:	b12c      	cbz	r4, 8009ea0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009e94:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009e96:	f7fe fef5 	bl	8008c84 <vPortExitCritical>
}
 8009e9a:	4620      	mov	r0, r4
 8009e9c:	b003      	add	sp, #12
 8009e9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009ea0:	4b25      	ldr	r3, [pc, #148]	; (8009f38 <xTaskResumeAll+0xcc>)
 8009ea2:	681b      	ldr	r3, [r3, #0]
 8009ea4:	2b00      	cmp	r3, #0
 8009ea6:	d0f5      	beq.n	8009e94 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009ea8:	4d24      	ldr	r5, [pc, #144]	; (8009f3c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009eaa:	4e25      	ldr	r6, [pc, #148]	; (8009f40 <xTaskResumeAll+0xd4>)
 8009eac:	4f25      	ldr	r7, [pc, #148]	; (8009f44 <xTaskResumeAll+0xd8>)
 8009eae:	e01e      	b.n	8009eee <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009eb0:	68eb      	ldr	r3, [r5, #12]
 8009eb2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009eb4:	f104 0018 	add.w	r0, r4, #24
 8009eb8:	f7fe fe4b 	bl	8008b52 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ebc:	1d21      	adds	r1, r4, #4
 8009ebe:	4608      	mov	r0, r1
 8009ec0:	9101      	str	r1, [sp, #4]
 8009ec2:	f7fe fe46 	bl	8008b52 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009ec6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009ec8:	6832      	ldr	r2, [r6, #0]
 8009eca:	9901      	ldr	r1, [sp, #4]
 8009ecc:	2014      	movs	r0, #20
 8009ece:	4293      	cmp	r3, r2
 8009ed0:	fb00 7003 	mla	r0, r0, r3, r7
 8009ed4:	bf88      	it	hi
 8009ed6:	6033      	strhi	r3, [r6, #0]
 8009ed8:	f7fe fe18 	bl	8008b0c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009edc:	4b1a      	ldr	r3, [pc, #104]	; (8009f48 <xTaskResumeAll+0xdc>)
 8009ede:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009ee0:	681b      	ldr	r3, [r3, #0]
 8009ee2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ee4:	429a      	cmp	r2, r3
 8009ee6:	d302      	bcc.n	8009eee <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009ee8:	4b18      	ldr	r3, [pc, #96]	; (8009f4c <xTaskResumeAll+0xe0>)
 8009eea:	2201      	movs	r2, #1
 8009eec:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009eee:	682b      	ldr	r3, [r5, #0]
 8009ef0:	2b00      	cmp	r3, #0
 8009ef2:	d1dd      	bne.n	8009eb0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009ef4:	b10c      	cbz	r4, 8009efa <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009ef6:	f7ff fd9d 	bl	8009a34 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009efa:	4d15      	ldr	r5, [pc, #84]	; (8009f50 <xTaskResumeAll+0xe4>)
 8009efc:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009efe:	b144      	cbz	r4, 8009f12 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009f00:	4e12      	ldr	r6, [pc, #72]	; (8009f4c <xTaskResumeAll+0xe0>)
 8009f02:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009f04:	f7ff ff1c 	bl	8009d40 <xTaskIncrementTick>
 8009f08:	b100      	cbz	r0, 8009f0c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009f0a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009f0c:	3c01      	subs	r4, #1
 8009f0e:	d1f9      	bne.n	8009f04 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009f10:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009f12:	4b0e      	ldr	r3, [pc, #56]	; (8009f4c <xTaskResumeAll+0xe0>)
 8009f14:	681b      	ldr	r3, [r3, #0]
 8009f16:	2b00      	cmp	r3, #0
 8009f18:	d0bc      	beq.n	8009e94 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009f1a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f22:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f26:	f3bf 8f4f 	dsb	sy
 8009f2a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009f2e:	2401      	movs	r4, #1
 8009f30:	e7b1      	b.n	8009e96 <xTaskResumeAll+0x2a>
 8009f32:	bf00      	nop
 8009f34:	200152cc 	.word	0x200152cc
 8009f38:	200152c0 	.word	0x200152c0
 8009f3c:	20015308 	.word	0x20015308
 8009f40:	200152d4 	.word	0x200152d4
 8009f44:	20014e60 	.word	0x20014e60
 8009f48:	20014e54 	.word	0x20014e54
 8009f4c:	2001534c 	.word	0x2001534c
 8009f50:	200152c8 	.word	0x200152c8

08009f54 <vTaskDelay>:
	{
 8009f54:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009f56:	b950      	cbnz	r0, 8009f6e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009f58:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f5c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f60:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f64:	f3bf 8f4f 	dsb	sy
 8009f68:	f3bf 8f6f 	isb	sy
	}
 8009f6c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009f6e:	4b0a      	ldr	r3, [pc, #40]	; (8009f98 <vTaskDelay+0x44>)
 8009f70:	6819      	ldr	r1, [r3, #0]
 8009f72:	b141      	cbz	r1, 8009f86 <vTaskDelay+0x32>
 8009f74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f78:	f383 8811 	msr	BASEPRI, r3
 8009f7c:	f3bf 8f6f 	isb	sy
 8009f80:	f3bf 8f4f 	dsb	sy
 8009f84:	e7fe      	b.n	8009f84 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009f86:	f7ff fecd 	bl	8009d24 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009f8a:	f7ff fd1b 	bl	80099c4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009f8e:	f7ff ff6d 	bl	8009e6c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009f92:	2800      	cmp	r0, #0
 8009f94:	d0e0      	beq.n	8009f58 <vTaskDelay+0x4>
 8009f96:	e7e9      	b.n	8009f6c <vTaskDelay+0x18>
 8009f98:	200152cc 	.word	0x200152cc

08009f9c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009f9c:	4b19      	ldr	r3, [pc, #100]	; (800a004 <vTaskSwitchContext+0x68>)
 8009f9e:	681a      	ldr	r2, [r3, #0]
 8009fa0:	4b19      	ldr	r3, [pc, #100]	; (800a008 <vTaskSwitchContext+0x6c>)
{
 8009fa2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fa4:	b112      	cbz	r2, 8009fac <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009fa6:	2201      	movs	r2, #1
 8009fa8:	601a      	str	r2, [r3, #0]
}
 8009faa:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fac:	4d17      	ldr	r5, [pc, #92]	; (800a00c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8009fae:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fb0:	682a      	ldr	r2, [r5, #0]
 8009fb2:	4917      	ldr	r1, [pc, #92]	; (800a010 <vTaskSwitchContext+0x74>)
 8009fb4:	2614      	movs	r6, #20
 8009fb6:	fb06 f302 	mul.w	r3, r6, r2
 8009fba:	18c8      	adds	r0, r1, r3
 8009fbc:	58cc      	ldr	r4, [r1, r3]
 8009fbe:	b1ac      	cbz	r4, 8009fec <vTaskSwitchContext+0x50>
 8009fc0:	6844      	ldr	r4, [r0, #4]
 8009fc2:	3308      	adds	r3, #8
 8009fc4:	6864      	ldr	r4, [r4, #4]
 8009fc6:	6044      	str	r4, [r0, #4]
 8009fc8:	440b      	add	r3, r1
 8009fca:	429c      	cmp	r4, r3
 8009fcc:	bf04      	itt	eq
 8009fce:	6863      	ldreq	r3, [r4, #4]
 8009fd0:	6043      	streq	r3, [r0, #4]
 8009fd2:	2314      	movs	r3, #20
 8009fd4:	fb03 1102 	mla	r1, r3, r2, r1
 8009fd8:	684b      	ldr	r3, [r1, #4]
 8009fda:	68d9      	ldr	r1, [r3, #12]
 8009fdc:	4b0d      	ldr	r3, [pc, #52]	; (800a014 <vTaskSwitchContext+0x78>)
 8009fde:	6019      	str	r1, [r3, #0]
 8009fe0:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009fe2:	681b      	ldr	r3, [r3, #0]
 8009fe4:	4a0c      	ldr	r2, [pc, #48]	; (800a018 <vTaskSwitchContext+0x7c>)
 8009fe6:	3358      	adds	r3, #88	; 0x58
 8009fe8:	6013      	str	r3, [r2, #0]
}
 8009fea:	e7de      	b.n	8009faa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fec:	b942      	cbnz	r2, 800a000 <vTaskSwitchContext+0x64>
 8009fee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ff2:	f383 8811 	msr	BASEPRI, r3
 8009ff6:	f3bf 8f6f 	isb	sy
 8009ffa:	f3bf 8f4f 	dsb	sy
 8009ffe:	e7fe      	b.n	8009ffe <vTaskSwitchContext+0x62>
 800a000:	3a01      	subs	r2, #1
 800a002:	e7d8      	b.n	8009fb6 <vTaskSwitchContext+0x1a>
 800a004:	200152cc 	.word	0x200152cc
 800a008:	2001534c 	.word	0x2001534c
 800a00c:	200152d4 	.word	0x200152d4
 800a010:	20014e60 	.word	0x20014e60
 800a014:	20014e54 	.word	0x20014e54
 800a018:	20000104 	.word	0x20000104

0800a01c <vTaskPlaceOnEventList>:
{
 800a01c:	b510      	push	{r4, lr}
 800a01e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a020:	b940      	cbnz	r0, 800a034 <vTaskPlaceOnEventList+0x18>
 800a022:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a026:	f383 8811 	msr	BASEPRI, r3
 800a02a:	f3bf 8f6f 	isb	sy
 800a02e:	f3bf 8f4f 	dsb	sy
 800a032:	e7fe      	b.n	800a032 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a034:	4b05      	ldr	r3, [pc, #20]	; (800a04c <vTaskPlaceOnEventList+0x30>)
 800a036:	6819      	ldr	r1, [r3, #0]
 800a038:	3118      	adds	r1, #24
 800a03a:	f7fe fd73 	bl	8008b24 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a03e:	4620      	mov	r0, r4
 800a040:	2101      	movs	r1, #1
}
 800a042:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a046:	f7ff bcbd 	b.w	80099c4 <prvAddCurrentTaskToDelayedList>
 800a04a:	bf00      	nop
 800a04c:	20014e54 	.word	0x20014e54

0800a050 <vTaskPlaceOnEventListRestricted>:
	{
 800a050:	b538      	push	{r3, r4, r5, lr}
 800a052:	460d      	mov	r5, r1
 800a054:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a056:	b940      	cbnz	r0, 800a06a <vTaskPlaceOnEventListRestricted+0x1a>
 800a058:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a05c:	f383 8811 	msr	BASEPRI, r3
 800a060:	f3bf 8f6f 	isb	sy
 800a064:	f3bf 8f4f 	dsb	sy
 800a068:	e7fe      	b.n	800a068 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a06a:	4b07      	ldr	r3, [pc, #28]	; (800a088 <vTaskPlaceOnEventListRestricted+0x38>)
 800a06c:	6819      	ldr	r1, [r3, #0]
 800a06e:	3118      	adds	r1, #24
 800a070:	f7fe fd4c 	bl	8008b0c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a074:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a076:	4621      	mov	r1, r4
 800a078:	bf0c      	ite	eq
 800a07a:	4628      	moveq	r0, r5
 800a07c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a080:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a084:	f7ff bc9e 	b.w	80099c4 <prvAddCurrentTaskToDelayedList>
 800a088:	20014e54 	.word	0x20014e54

0800a08c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a08c:	68c3      	ldr	r3, [r0, #12]
{
 800a08e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a090:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a092:	b944      	cbnz	r4, 800a0a6 <xTaskRemoveFromEventList+0x1a>
 800a094:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a098:	f383 8811 	msr	BASEPRI, r3
 800a09c:	f3bf 8f6f 	isb	sy
 800a0a0:	f3bf 8f4f 	dsb	sy
 800a0a4:	e7fe      	b.n	800a0a4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a0a6:	f104 0118 	add.w	r1, r4, #24
 800a0aa:	4608      	mov	r0, r1
 800a0ac:	9101      	str	r1, [sp, #4]
 800a0ae:	f7fe fd50 	bl	8008b52 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a0b2:	4b12      	ldr	r3, [pc, #72]	; (800a0fc <xTaskRemoveFromEventList+0x70>)
 800a0b4:	9901      	ldr	r1, [sp, #4]
 800a0b6:	681b      	ldr	r3, [r3, #0]
 800a0b8:	b9eb      	cbnz	r3, 800a0f6 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a0ba:	1d21      	adds	r1, r4, #4
 800a0bc:	4608      	mov	r0, r1
 800a0be:	9101      	str	r1, [sp, #4]
 800a0c0:	f7fe fd47 	bl	8008b52 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a0c4:	4a0e      	ldr	r2, [pc, #56]	; (800a100 <xTaskRemoveFromEventList+0x74>)
 800a0c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a0c8:	6810      	ldr	r0, [r2, #0]
 800a0ca:	9901      	ldr	r1, [sp, #4]
 800a0cc:	4283      	cmp	r3, r0
 800a0ce:	bf88      	it	hi
 800a0d0:	6013      	strhi	r3, [r2, #0]
 800a0d2:	4a0c      	ldr	r2, [pc, #48]	; (800a104 <xTaskRemoveFromEventList+0x78>)
 800a0d4:	2014      	movs	r0, #20
 800a0d6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a0da:	f7fe fd17 	bl	8008b0c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a0de:	4b0a      	ldr	r3, [pc, #40]	; (800a108 <xTaskRemoveFromEventList+0x7c>)
 800a0e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a0e2:	681b      	ldr	r3, [r3, #0]
 800a0e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0e6:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a0e8:	bf85      	ittet	hi
 800a0ea:	4b08      	ldrhi	r3, [pc, #32]	; (800a10c <xTaskRemoveFromEventList+0x80>)
 800a0ec:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a0ee:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a0f0:	6018      	strhi	r0, [r3, #0]
}
 800a0f2:	b002      	add	sp, #8
 800a0f4:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a0f6:	4806      	ldr	r0, [pc, #24]	; (800a110 <xTaskRemoveFromEventList+0x84>)
 800a0f8:	e7ef      	b.n	800a0da <xTaskRemoveFromEventList+0x4e>
 800a0fa:	bf00      	nop
 800a0fc:	200152cc 	.word	0x200152cc
 800a100:	200152d4 	.word	0x200152d4
 800a104:	20014e60 	.word	0x20014e60
 800a108:	20014e54 	.word	0x20014e54
 800a10c:	2001534c 	.word	0x2001534c
 800a110:	20015308 	.word	0x20015308

0800a114 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a114:	4b03      	ldr	r3, [pc, #12]	; (800a124 <vTaskInternalSetTimeOutState+0x10>)
 800a116:	681b      	ldr	r3, [r3, #0]
 800a118:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a11a:	4b03      	ldr	r3, [pc, #12]	; (800a128 <vTaskInternalSetTimeOutState+0x14>)
 800a11c:	681b      	ldr	r3, [r3, #0]
 800a11e:	6043      	str	r3, [r0, #4]
}
 800a120:	4770      	bx	lr
 800a122:	bf00      	nop
 800a124:	20015304 	.word	0x20015304
 800a128:	20015348 	.word	0x20015348

0800a12c <xTaskCheckForTimeOut>:
{
 800a12c:	b570      	push	{r4, r5, r6, lr}
 800a12e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a130:	4605      	mov	r5, r0
 800a132:	b940      	cbnz	r0, 800a146 <xTaskCheckForTimeOut+0x1a>
 800a134:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a138:	f383 8811 	msr	BASEPRI, r3
 800a13c:	f3bf 8f6f 	isb	sy
 800a140:	f3bf 8f4f 	dsb	sy
 800a144:	e7fe      	b.n	800a144 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a146:	b941      	cbnz	r1, 800a15a <xTaskCheckForTimeOut+0x2e>
 800a148:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a14c:	f383 8811 	msr	BASEPRI, r3
 800a150:	f3bf 8f6f 	isb	sy
 800a154:	f3bf 8f4f 	dsb	sy
 800a158:	e7fe      	b.n	800a158 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a15a:	f7fe fd73 	bl	8008c44 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a15e:	4b0f      	ldr	r3, [pc, #60]	; (800a19c <xTaskCheckForTimeOut+0x70>)
 800a160:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a162:	6823      	ldr	r3, [r4, #0]
 800a164:	1c5a      	adds	r2, r3, #1
 800a166:	d010      	beq.n	800a18a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a168:	480d      	ldr	r0, [pc, #52]	; (800a1a0 <xTaskCheckForTimeOut+0x74>)
 800a16a:	682e      	ldr	r6, [r5, #0]
 800a16c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a16e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a170:	4286      	cmp	r6, r0
 800a172:	d001      	beq.n	800a178 <xTaskCheckForTimeOut+0x4c>
 800a174:	428a      	cmp	r2, r1
 800a176:	d90f      	bls.n	800a198 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a178:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a17a:	4283      	cmp	r3, r0
 800a17c:	d90a      	bls.n	800a194 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a17e:	1a5b      	subs	r3, r3, r1
 800a180:	4413      	add	r3, r2
 800a182:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a184:	4628      	mov	r0, r5
 800a186:	f7ff ffc5 	bl	800a114 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a18a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a18c:	f7fe fd7a 	bl	8008c84 <vPortExitCritical>
}
 800a190:	4620      	mov	r0, r4
 800a192:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a194:	2300      	movs	r3, #0
 800a196:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a198:	2401      	movs	r4, #1
 800a19a:	e7f7      	b.n	800a18c <xTaskCheckForTimeOut+0x60>
 800a19c:	20015348 	.word	0x20015348
 800a1a0:	20015304 	.word	0x20015304

0800a1a4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a1a4:	4b01      	ldr	r3, [pc, #4]	; (800a1ac <vTaskMissedYield+0x8>)
 800a1a6:	2201      	movs	r2, #1
 800a1a8:	601a      	str	r2, [r3, #0]
}
 800a1aa:	4770      	bx	lr
 800a1ac:	2001534c 	.word	0x2001534c

0800a1b0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a1b0:	4b05      	ldr	r3, [pc, #20]	; (800a1c8 <xTaskGetSchedulerState+0x18>)
 800a1b2:	681b      	ldr	r3, [r3, #0]
 800a1b4:	b133      	cbz	r3, 800a1c4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a1b6:	4b05      	ldr	r3, [pc, #20]	; (800a1cc <xTaskGetSchedulerState+0x1c>)
 800a1b8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a1ba:	2b00      	cmp	r3, #0
 800a1bc:	bf0c      	ite	eq
 800a1be:	2002      	moveq	r0, #2
 800a1c0:	2000      	movne	r0, #0
 800a1c2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a1c4:	2001      	movs	r0, #1
	}
 800a1c6:	4770      	bx	lr
 800a1c8:	2001531c 	.word	0x2001531c
 800a1cc:	200152cc 	.word	0x200152cc

0800a1d0 <xTaskPriorityInherit>:
	{
 800a1d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a1d2:	4604      	mov	r4, r0
 800a1d4:	b348      	cbz	r0, 800a22a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a1d6:	4d1c      	ldr	r5, [pc, #112]	; (800a248 <xTaskPriorityInherit+0x78>)
 800a1d8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a1da:	682a      	ldr	r2, [r5, #0]
 800a1dc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a1de:	4293      	cmp	r3, r2
 800a1e0:	d229      	bcs.n	800a236 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a1e2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a1e4:	4e19      	ldr	r6, [pc, #100]	; (800a24c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a1e6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a1e8:	bfa1      	itttt	ge
 800a1ea:	682a      	ldrge	r2, [r5, #0]
 800a1ec:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a1ee:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a1f2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a1f4:	2214      	movs	r2, #20
 800a1f6:	fb02 6303 	mla	r3, r2, r3, r6
 800a1fa:	6942      	ldr	r2, [r0, #20]
 800a1fc:	429a      	cmp	r2, r3
 800a1fe:	d116      	bne.n	800a22e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a200:	1d01      	adds	r1, r0, #4
 800a202:	4608      	mov	r0, r1
 800a204:	9101      	str	r1, [sp, #4]
 800a206:	f7fe fca4 	bl	8008b52 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a20a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a20c:	4a10      	ldr	r2, [pc, #64]	; (800a250 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a20e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a210:	6810      	ldr	r0, [r2, #0]
 800a212:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a214:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a216:	4283      	cmp	r3, r0
 800a218:	f04f 0014 	mov.w	r0, #20
 800a21c:	fb00 6003 	mla	r0, r0, r3, r6
 800a220:	bf88      	it	hi
 800a222:	6013      	strhi	r3, [r2, #0]
 800a224:	f7fe fc72 	bl	8008b0c <vListInsertEnd>
				xReturn = pdTRUE;
 800a228:	2001      	movs	r0, #1
	}
 800a22a:	b002      	add	sp, #8
 800a22c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a22e:	682b      	ldr	r3, [r5, #0]
 800a230:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a232:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a234:	e7f8      	b.n	800a228 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a236:	682b      	ldr	r3, [r5, #0]
 800a238:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a23a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a23c:	42a0      	cmp	r0, r4
 800a23e:	bf2c      	ite	cs
 800a240:	2000      	movcs	r0, #0
 800a242:	2001      	movcc	r0, #1
 800a244:	e7f1      	b.n	800a22a <xTaskPriorityInherit+0x5a>
 800a246:	bf00      	nop
 800a248:	20014e54 	.word	0x20014e54
 800a24c:	20014e60 	.word	0x20014e60
 800a250:	200152d4 	.word	0x200152d4

0800a254 <xTaskPriorityDisinherit>:
	{
 800a254:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a256:	b910      	cbnz	r0, 800a25e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a258:	2000      	movs	r0, #0
	}
 800a25a:	b002      	add	sp, #8
 800a25c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a25e:	4b1c      	ldr	r3, [pc, #112]	; (800a2d0 <xTaskPriorityDisinherit+0x7c>)
 800a260:	681c      	ldr	r4, [r3, #0]
 800a262:	4284      	cmp	r4, r0
 800a264:	d008      	beq.n	800a278 <xTaskPriorityDisinherit+0x24>
 800a266:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a26a:	f383 8811 	msr	BASEPRI, r3
 800a26e:	f3bf 8f6f 	isb	sy
 800a272:	f3bf 8f4f 	dsb	sy
 800a276:	e7fe      	b.n	800a276 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a278:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a27a:	b943      	cbnz	r3, 800a28e <xTaskPriorityDisinherit+0x3a>
 800a27c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a280:	f383 8811 	msr	BASEPRI, r3
 800a284:	f3bf 8f6f 	isb	sy
 800a288:	f3bf 8f4f 	dsb	sy
 800a28c:	e7fe      	b.n	800a28c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a28e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a290:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a292:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a294:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a296:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a298:	d0de      	beq.n	800a258 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a29a:	2b00      	cmp	r3, #0
 800a29c:	d1dc      	bne.n	800a258 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a29e:	1d21      	adds	r1, r4, #4
 800a2a0:	4608      	mov	r0, r1
 800a2a2:	9101      	str	r1, [sp, #4]
 800a2a4:	f7fe fc55 	bl	8008b52 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2a8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a2aa:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2ac:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2ae:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a2b2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a2b4:	4a07      	ldr	r2, [pc, #28]	; (800a2d4 <xTaskPriorityDisinherit+0x80>)
 800a2b6:	6810      	ldr	r0, [r2, #0]
 800a2b8:	4283      	cmp	r3, r0
 800a2ba:	bf88      	it	hi
 800a2bc:	6013      	strhi	r3, [r2, #0]
 800a2be:	4a06      	ldr	r2, [pc, #24]	; (800a2d8 <xTaskPriorityDisinherit+0x84>)
 800a2c0:	2014      	movs	r0, #20
 800a2c2:	fb00 2003 	mla	r0, r0, r3, r2
 800a2c6:	f7fe fc21 	bl	8008b0c <vListInsertEnd>
					xReturn = pdTRUE;
 800a2ca:	2001      	movs	r0, #1
		return xReturn;
 800a2cc:	e7c5      	b.n	800a25a <xTaskPriorityDisinherit+0x6>
 800a2ce:	bf00      	nop
 800a2d0:	20014e54 	.word	0x20014e54
 800a2d4:	200152d4 	.word	0x200152d4
 800a2d8:	20014e60 	.word	0x20014e60

0800a2dc <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a2dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a2de:	4604      	mov	r4, r0
 800a2e0:	2800      	cmp	r0, #0
 800a2e2:	d044      	beq.n	800a36e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a2e4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a2e6:	b942      	cbnz	r2, 800a2fa <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a2e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ec:	f383 8811 	msr	BASEPRI, r3
 800a2f0:	f3bf 8f6f 	isb	sy
 800a2f4:	f3bf 8f4f 	dsb	sy
 800a2f8:	e7fe      	b.n	800a2f8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a2fa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a2fc:	4299      	cmp	r1, r3
 800a2fe:	bf38      	it	cc
 800a300:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a302:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a304:	428b      	cmp	r3, r1
 800a306:	d032      	beq.n	800a36e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a308:	2a01      	cmp	r2, #1
 800a30a:	d130      	bne.n	800a36e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a30c:	4a19      	ldr	r2, [pc, #100]	; (800a374 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a30e:	6812      	ldr	r2, [r2, #0]
 800a310:	4282      	cmp	r2, r0
 800a312:	d108      	bne.n	800a326 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a314:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a318:	f383 8811 	msr	BASEPRI, r3
 800a31c:	f3bf 8f6f 	isb	sy
 800a320:	f3bf 8f4f 	dsb	sy
 800a324:	e7fe      	b.n	800a324 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a326:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a328:	4d13      	ldr	r5, [pc, #76]	; (800a378 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a32a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a32c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a32e:	f04f 0214 	mov.w	r2, #20
 800a332:	fb02 5303 	mla	r3, r2, r3, r5
 800a336:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a338:	bfa4      	itt	ge
 800a33a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a33e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a340:	429a      	cmp	r2, r3
 800a342:	d114      	bne.n	800a36e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a344:	1d01      	adds	r1, r0, #4
 800a346:	4608      	mov	r0, r1
 800a348:	9101      	str	r1, [sp, #4]
 800a34a:	f7fe fc02 	bl	8008b52 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a34e:	4a0b      	ldr	r2, [pc, #44]	; (800a37c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a350:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a352:	6810      	ldr	r0, [r2, #0]
 800a354:	9901      	ldr	r1, [sp, #4]
 800a356:	4283      	cmp	r3, r0
 800a358:	f04f 0014 	mov.w	r0, #20
 800a35c:	fb00 5003 	mla	r0, r0, r3, r5
 800a360:	bf88      	it	hi
 800a362:	6013      	strhi	r3, [r2, #0]
	}
 800a364:	b003      	add	sp, #12
 800a366:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a36a:	f7fe bbcf 	b.w	8008b0c <vListInsertEnd>
	}
 800a36e:	b003      	add	sp, #12
 800a370:	bd30      	pop	{r4, r5, pc}
 800a372:	bf00      	nop
 800a374:	20014e54 	.word	0x20014e54
 800a378:	20014e60 	.word	0x20014e60
 800a37c:	200152d4 	.word	0x200152d4

0800a380 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a380:	4b04      	ldr	r3, [pc, #16]	; (800a394 <pvTaskIncrementMutexHeldCount+0x14>)
 800a382:	681a      	ldr	r2, [r3, #0]
 800a384:	b11a      	cbz	r2, 800a38e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a386:	6819      	ldr	r1, [r3, #0]
 800a388:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a38a:	3201      	adds	r2, #1
 800a38c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a38e:	6818      	ldr	r0, [r3, #0]
	}
 800a390:	4770      	bx	lr
 800a392:	bf00      	nop
 800a394:	20014e54 	.word	0x20014e54

0800a398 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a398:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a39a:	4c11      	ldr	r4, [pc, #68]	; (800a3e0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a39c:	f7fe fc52 	bl	8008c44 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a3a0:	6825      	ldr	r5, [r4, #0]
 800a3a2:	b9bd      	cbnz	r5, 800a3d4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a3a4:	4f0f      	ldr	r7, [pc, #60]	; (800a3e4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a3a6:	4e10      	ldr	r6, [pc, #64]	; (800a3e8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a3a8:	4638      	mov	r0, r7
 800a3aa:	f7fe fba1 	bl	8008af0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a3ae:	4630      	mov	r0, r6
 800a3b0:	f7fe fb9e 	bl	8008af0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a3b4:	4b0d      	ldr	r3, [pc, #52]	; (800a3ec <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3b6:	4a0e      	ldr	r2, [pc, #56]	; (800a3f0 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a3b8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a3ba:	4b0e      	ldr	r3, [pc, #56]	; (800a3f4 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3bc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a3be:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3c0:	200a      	movs	r0, #10
 800a3c2:	4b0d      	ldr	r3, [pc, #52]	; (800a3f8 <prvCheckForValidListAndQueue+0x60>)
 800a3c4:	9500      	str	r5, [sp, #0]
 800a3c6:	f7fe fe4e 	bl	8009066 <xQueueGenericCreateStatic>
 800a3ca:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a3cc:	b110      	cbz	r0, 800a3d4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a3ce:	490b      	ldr	r1, [pc, #44]	; (800a3fc <prvCheckForValidListAndQueue+0x64>)
 800a3d0:	f7ff fa18 	bl	8009804 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a3d4:	b003      	add	sp, #12
 800a3d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a3da:	f7fe bc53 	b.w	8008c84 <vPortExitCritical>
 800a3de:	bf00      	nop
 800a3e0:	20015474 	.word	0x20015474
 800a3e4:	200153f8 	.word	0x200153f8
 800a3e8:	2001540c 	.word	0x2001540c
 800a3ec:	20015350 	.word	0x20015350
 800a3f0:	20015358 	.word	0x20015358
 800a3f4:	20015354 	.word	0x20015354
 800a3f8:	20015424 	.word	0x20015424
 800a3fc:	080234d9 	.word	0x080234d9

0800a400 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a400:	4291      	cmp	r1, r2
{
 800a402:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a404:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a406:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a408:	d80a      	bhi.n	800a420 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a40a:	1ad2      	subs	r2, r2, r3
 800a40c:	6983      	ldr	r3, [r0, #24]
 800a40e:	429a      	cmp	r2, r3
 800a410:	d20d      	bcs.n	800a42e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a412:	4b08      	ldr	r3, [pc, #32]	; (800a434 <prvInsertTimerInActiveList+0x34>)
 800a414:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a416:	6818      	ldr	r0, [r3, #0]
 800a418:	f7fe fb84 	bl	8008b24 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a41c:	2000      	movs	r0, #0
}
 800a41e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a420:	429a      	cmp	r2, r3
 800a422:	d201      	bcs.n	800a428 <prvInsertTimerInActiveList+0x28>
 800a424:	4299      	cmp	r1, r3
 800a426:	d202      	bcs.n	800a42e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a428:	4b03      	ldr	r3, [pc, #12]	; (800a438 <prvInsertTimerInActiveList+0x38>)
 800a42a:	1d01      	adds	r1, r0, #4
 800a42c:	e7f3      	b.n	800a416 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a42e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a430:	e7f5      	b.n	800a41e <prvInsertTimerInActiveList+0x1e>
 800a432:	bf00      	nop
 800a434:	20015354 	.word	0x20015354
 800a438:	20015350 	.word	0x20015350

0800a43c <xTimerCreateTimerTask>:
{
 800a43c:	b510      	push	{r4, lr}
 800a43e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a440:	f7ff ffaa 	bl	800a398 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a444:	4b12      	ldr	r3, [pc, #72]	; (800a490 <xTimerCreateTimerTask+0x54>)
 800a446:	681b      	ldr	r3, [r3, #0]
 800a448:	b1b3      	cbz	r3, 800a478 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a44a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a44c:	aa07      	add	r2, sp, #28
 800a44e:	a906      	add	r1, sp, #24
 800a450:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a452:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a456:	f7fe fa51 	bl	80088fc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a45a:	9b05      	ldr	r3, [sp, #20]
 800a45c:	9302      	str	r3, [sp, #8]
 800a45e:	9b06      	ldr	r3, [sp, #24]
 800a460:	9301      	str	r3, [sp, #4]
 800a462:	2302      	movs	r3, #2
 800a464:	9300      	str	r3, [sp, #0]
 800a466:	9a07      	ldr	r2, [sp, #28]
 800a468:	490a      	ldr	r1, [pc, #40]	; (800a494 <xTimerCreateTimerTask+0x58>)
 800a46a:	480b      	ldr	r0, [pc, #44]	; (800a498 <xTimerCreateTimerTask+0x5c>)
 800a46c:	4623      	mov	r3, r4
 800a46e:	f7ff fba3 	bl	8009bb8 <xTaskCreateStatic>
 800a472:	4b0a      	ldr	r3, [pc, #40]	; (800a49c <xTimerCreateTimerTask+0x60>)
 800a474:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a476:	b940      	cbnz	r0, 800a48a <xTimerCreateTimerTask+0x4e>
 800a478:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a47c:	f383 8811 	msr	BASEPRI, r3
 800a480:	f3bf 8f6f 	isb	sy
 800a484:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a488:	e7fe      	b.n	800a488 <xTimerCreateTimerTask+0x4c>
}
 800a48a:	2001      	movs	r0, #1
 800a48c:	b008      	add	sp, #32
 800a48e:	bd10      	pop	{r4, pc}
 800a490:	20015474 	.word	0x20015474
 800a494:	080234de 	.word	0x080234de
 800a498:	0800a5a5 	.word	0x0800a5a5
 800a49c:	20015478 	.word	0x20015478

0800a4a0 <xTimerGenericCommand>:
{
 800a4a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a4a2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a4a4:	4604      	mov	r4, r0
{
 800a4a6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a4a8:	b940      	cbnz	r0, 800a4bc <xTimerGenericCommand+0x1c>
 800a4aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4ae:	f383 8811 	msr	BASEPRI, r3
 800a4b2:	f3bf 8f6f 	isb	sy
 800a4b6:	f3bf 8f4f 	dsb	sy
 800a4ba:	e7fe      	b.n	800a4ba <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a4bc:	4d0d      	ldr	r5, [pc, #52]	; (800a4f4 <xTimerGenericCommand+0x54>)
 800a4be:	6828      	ldr	r0, [r5, #0]
 800a4c0:	b180      	cbz	r0, 800a4e4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a4c2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a4c4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a4c8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a4ca:	dc0d      	bgt.n	800a4e8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a4cc:	f7ff fe70 	bl	800a1b0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a4d0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a4d2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a4d4:	bf08      	it	eq
 800a4d6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a4d8:	6828      	ldr	r0, [r5, #0]
 800a4da:	bf18      	it	ne
 800a4dc:	461a      	movne	r2, r3
 800a4de:	4669      	mov	r1, sp
 800a4e0:	f7fe fe76 	bl	80091d0 <xQueueGenericSend>
}
 800a4e4:	b004      	add	sp, #16
 800a4e6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a4e8:	2300      	movs	r3, #0
 800a4ea:	4669      	mov	r1, sp
 800a4ec:	f7fe ff23 	bl	8009336 <xQueueGenericSendFromISR>
 800a4f0:	e7f8      	b.n	800a4e4 <xTimerGenericCommand+0x44>
 800a4f2:	bf00      	nop
 800a4f4:	20015474 	.word	0x20015474

0800a4f8 <prvSampleTimeNow>:
{
 800a4f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a4fc:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a5a0 <prvSampleTimeNow+0xa8>
{
 800a500:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a502:	f7ff fc17 	bl	8009d34 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a506:	f8d8 3000 	ldr.w	r3, [r8]
 800a50a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a50c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a50e:	d940      	bls.n	800a592 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a510:	4f21      	ldr	r7, [pc, #132]	; (800a598 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a512:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a516:	683b      	ldr	r3, [r7, #0]
 800a518:	681a      	ldr	r2, [r3, #0]
 800a51a:	b95a      	cbnz	r2, 800a534 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a51c:	4a1f      	ldr	r2, [pc, #124]	; (800a59c <prvSampleTimeNow+0xa4>)
 800a51e:	6811      	ldr	r1, [r2, #0]
 800a520:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a522:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a524:	2301      	movs	r3, #1
}
 800a526:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a528:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a52a:	f8c8 5000 	str.w	r5, [r8]
}
 800a52e:	b004      	add	sp, #16
 800a530:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a534:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a536:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a538:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a53c:	1d21      	adds	r1, r4, #4
 800a53e:	4608      	mov	r0, r1
 800a540:	9103      	str	r1, [sp, #12]
 800a542:	f7fe fb06 	bl	8008b52 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a546:	6a23      	ldr	r3, [r4, #32]
 800a548:	4620      	mov	r0, r4
 800a54a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a54c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a550:	9903      	ldr	r1, [sp, #12]
 800a552:	f013 0f04 	tst.w	r3, #4
 800a556:	d0de      	beq.n	800a516 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a558:	69a3      	ldr	r3, [r4, #24]
 800a55a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a55c:	459a      	cmp	sl, r3
 800a55e:	d205      	bcs.n	800a56c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a560:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a562:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a564:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a566:	f7fe fadd 	bl	8008b24 <vListInsert>
 800a56a:	e7d4      	b.n	800a516 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a56c:	2300      	movs	r3, #0
 800a56e:	f8cd 9000 	str.w	r9, [sp]
 800a572:	4652      	mov	r2, sl
 800a574:	4619      	mov	r1, r3
 800a576:	4620      	mov	r0, r4
 800a578:	f7ff ff92 	bl	800a4a0 <xTimerGenericCommand>
				configASSERT( xResult );
 800a57c:	2800      	cmp	r0, #0
 800a57e:	d1ca      	bne.n	800a516 <prvSampleTimeNow+0x1e>
 800a580:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a584:	f383 8811 	msr	BASEPRI, r3
 800a588:	f3bf 8f6f 	isb	sy
 800a58c:	f3bf 8f4f 	dsb	sy
 800a590:	e7fe      	b.n	800a590 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a592:	2300      	movs	r3, #0
 800a594:	e7c7      	b.n	800a526 <prvSampleTimeNow+0x2e>
 800a596:	bf00      	nop
 800a598:	20015350 	.word	0x20015350
 800a59c:	20015354 	.word	0x20015354
 800a5a0:	20015420 	.word	0x20015420

0800a5a4 <prvTimerTask>:
{
 800a5a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5a8:	4d6e      	ldr	r5, [pc, #440]	; (800a764 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a5aa:	4e6f      	ldr	r6, [pc, #444]	; (800a768 <prvTimerTask+0x1c4>)
{
 800a5ac:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5ae:	682b      	ldr	r3, [r5, #0]
 800a5b0:	f8d3 8000 	ldr.w	r8, [r3]
 800a5b4:	f1b8 0f00 	cmp.w	r8, #0
 800a5b8:	d035      	beq.n	800a626 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a5ba:	68db      	ldr	r3, [r3, #12]
 800a5bc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5c0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a5c2:	f7ff fbaf 	bl	8009d24 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a5c6:	a804      	add	r0, sp, #16
 800a5c8:	f7ff ff96 	bl	800a4f8 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a5cc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a5ce:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a5d0:	2b00      	cmp	r3, #0
 800a5d2:	d169      	bne.n	800a6a8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a5d4:	2c00      	cmp	r4, #0
 800a5d6:	d14c      	bne.n	800a672 <prvTimerTask+0xce>
 800a5d8:	4540      	cmp	r0, r8
 800a5da:	d350      	bcc.n	800a67e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a5dc:	f7ff fc46 	bl	8009e6c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5e0:	682b      	ldr	r3, [r5, #0]
 800a5e2:	68db      	ldr	r3, [r3, #12]
 800a5e4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a5e6:	1d38      	adds	r0, r7, #4
 800a5e8:	f7fe fab3 	bl	8008b52 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a5ec:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a5f0:	0758      	lsls	r0, r3, #29
 800a5f2:	d51a      	bpl.n	800a62a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a5f4:	69b9      	ldr	r1, [r7, #24]
 800a5f6:	4643      	mov	r3, r8
 800a5f8:	464a      	mov	r2, r9
 800a5fa:	4441      	add	r1, r8
 800a5fc:	4638      	mov	r0, r7
 800a5fe:	f7ff feff 	bl	800a400 <prvInsertTimerInActiveList>
 800a602:	b1b0      	cbz	r0, 800a632 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a604:	9400      	str	r4, [sp, #0]
 800a606:	4623      	mov	r3, r4
 800a608:	4642      	mov	r2, r8
 800a60a:	4621      	mov	r1, r4
 800a60c:	4638      	mov	r0, r7
 800a60e:	f7ff ff47 	bl	800a4a0 <xTimerGenericCommand>
			configASSERT( xResult );
 800a612:	b970      	cbnz	r0, 800a632 <prvTimerTask+0x8e>
 800a614:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a618:	f383 8811 	msr	BASEPRI, r3
 800a61c:	f3bf 8f6f 	isb	sy
 800a620:	f3bf 8f4f 	dsb	sy
 800a624:	e7fe      	b.n	800a624 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a626:	2401      	movs	r4, #1
 800a628:	e7cb      	b.n	800a5c2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a62a:	f023 0301 	bic.w	r3, r3, #1
 800a62e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a632:	6a3b      	ldr	r3, [r7, #32]
 800a634:	4638      	mov	r0, r7
 800a636:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a638:	6830      	ldr	r0, [r6, #0]
 800a63a:	2200      	movs	r2, #0
 800a63c:	a904      	add	r1, sp, #16
 800a63e:	f7fe ff2f 	bl	80094a0 <xQueueReceive>
 800a642:	2800      	cmp	r0, #0
 800a644:	d0b3      	beq.n	800a5ae <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a646:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a648:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a64a:	2b00      	cmp	r3, #0
 800a64c:	db2f      	blt.n	800a6ae <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a64e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a650:	6963      	ldr	r3, [r4, #20]
 800a652:	2b00      	cmp	r3, #0
 800a654:	d132      	bne.n	800a6bc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a656:	a803      	add	r0, sp, #12
 800a658:	f7ff ff4e 	bl	800a4f8 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a65c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a65e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a660:	2b09      	cmp	r3, #9
 800a662:	d8e9      	bhi.n	800a638 <prvTimerTask+0x94>
 800a664:	e8df f003 	tbb	[pc, r3]
 800a668:	572e2e2e 	.word	0x572e2e2e
 800a66c:	2e2e765e 	.word	0x2e2e765e
 800a670:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a672:	4b3e      	ldr	r3, [pc, #248]	; (800a76c <prvTimerTask+0x1c8>)
 800a674:	681b      	ldr	r3, [r3, #0]
 800a676:	681c      	ldr	r4, [r3, #0]
 800a678:	fab4 f484 	clz	r4, r4
 800a67c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a67e:	6830      	ldr	r0, [r6, #0]
 800a680:	4622      	mov	r2, r4
 800a682:	eba8 0109 	sub.w	r1, r8, r9
 800a686:	f7ff f8fa 	bl	800987e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a68a:	f7ff fbef 	bl	8009e6c <xTaskResumeAll>
 800a68e:	2800      	cmp	r0, #0
 800a690:	d1d2      	bne.n	800a638 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a692:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a696:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a69a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a69e:	f3bf 8f4f 	dsb	sy
 800a6a2:	f3bf 8f6f 	isb	sy
 800a6a6:	e7c7      	b.n	800a638 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a6a8:	f7ff fbe0 	bl	8009e6c <xTaskResumeAll>
}
 800a6ac:	e7c4      	b.n	800a638 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a6ae:	9b05      	ldr	r3, [sp, #20]
 800a6b0:	9907      	ldr	r1, [sp, #28]
 800a6b2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a6b4:	9b04      	ldr	r3, [sp, #16]
 800a6b6:	2b00      	cmp	r3, #0
 800a6b8:	dbbe      	blt.n	800a638 <prvTimerTask+0x94>
 800a6ba:	e7c8      	b.n	800a64e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a6bc:	1d20      	adds	r0, r4, #4
 800a6be:	f7fe fa48 	bl	8008b52 <uxListRemove>
 800a6c2:	e7c8      	b.n	800a656 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a6c4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a6c8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a6ca:	f043 0301 	orr.w	r3, r3, #1
 800a6ce:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a6d2:	9b05      	ldr	r3, [sp, #20]
 800a6d4:	4620      	mov	r0, r4
 800a6d6:	4419      	add	r1, r3
 800a6d8:	f7ff fe92 	bl	800a400 <prvInsertTimerInActiveList>
 800a6dc:	2800      	cmp	r0, #0
 800a6de:	d0ab      	beq.n	800a638 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a6e0:	6a23      	ldr	r3, [r4, #32]
 800a6e2:	4620      	mov	r0, r4
 800a6e4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a6e6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a6ea:	0759      	lsls	r1, r3, #29
 800a6ec:	d5a4      	bpl.n	800a638 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a6ee:	69a2      	ldr	r2, [r4, #24]
 800a6f0:	9905      	ldr	r1, [sp, #20]
 800a6f2:	2300      	movs	r3, #0
 800a6f4:	440a      	add	r2, r1
 800a6f6:	9300      	str	r3, [sp, #0]
 800a6f8:	4619      	mov	r1, r3
 800a6fa:	4620      	mov	r0, r4
 800a6fc:	f7ff fed0 	bl	800a4a0 <xTimerGenericCommand>
							configASSERT( xResult );
 800a700:	2800      	cmp	r0, #0
 800a702:	d199      	bne.n	800a638 <prvTimerTask+0x94>
 800a704:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a708:	f383 8811 	msr	BASEPRI, r3
 800a70c:	f3bf 8f6f 	isb	sy
 800a710:	f3bf 8f4f 	dsb	sy
 800a714:	e7fe      	b.n	800a714 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a716:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a71a:	f023 0301 	bic.w	r3, r3, #1
 800a71e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a722:	e789      	b.n	800a638 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a724:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a728:	f043 0301 	orr.w	r3, r3, #1
 800a72c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a730:	9905      	ldr	r1, [sp, #20]
 800a732:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a734:	b941      	cbnz	r1, 800a748 <prvTimerTask+0x1a4>
 800a736:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a73a:	f383 8811 	msr	BASEPRI, r3
 800a73e:	f3bf 8f6f 	isb	sy
 800a742:	f3bf 8f4f 	dsb	sy
 800a746:	e7fe      	b.n	800a746 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a748:	4603      	mov	r3, r0
 800a74a:	4401      	add	r1, r0
 800a74c:	4620      	mov	r0, r4
 800a74e:	f7ff fe57 	bl	800a400 <prvInsertTimerInActiveList>
					break;
 800a752:	e771      	b.n	800a638 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a754:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a758:	079a      	lsls	r2, r3, #30
 800a75a:	d4de      	bmi.n	800a71a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a75c:	4620      	mov	r0, r4
 800a75e:	f7fe f98f 	bl	8008a80 <vPortFree>
 800a762:	e769      	b.n	800a638 <prvTimerTask+0x94>
 800a764:	20015350 	.word	0x20015350
 800a768:	20015474 	.word	0x20015474
 800a76c:	20015354 	.word	0x20015354

0800a770 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a770:	8880      	ldrh	r0, [r0, #4]
 800a772:	4770      	bx	lr

0800a774 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a774:	b570      	push	{r4, r5, r6, lr}
 800a776:	6803      	ldr	r3, [r0, #0]
 800a778:	4605      	mov	r5, r0
 800a77a:	460c      	mov	r4, r1
 800a77c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a77e:	2100      	movs	r1, #0
 800a780:	4798      	blx	r3
 800a782:	682b      	ldr	r3, [r5, #0]
 800a784:	4606      	mov	r6, r0
 800a786:	6a1b      	ldr	r3, [r3, #32]
 800a788:	4628      	mov	r0, r5
 800a78a:	4798      	blx	r3
 800a78c:	1ba4      	subs	r4, r4, r6
 800a78e:	b2a4      	uxth	r4, r4
 800a790:	fbb4 f0f0 	udiv	r0, r4, r0
 800a794:	bd70      	pop	{r4, r5, r6, pc}

0800a796 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a796:	2300      	movs	r3, #0
 800a798:	8083      	strh	r3, [r0, #4]
 800a79a:	4770      	bx	lr

0800a79c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a79c:	b510      	push	{r4, lr}
 800a79e:	6803      	ldr	r3, [r0, #0]
 800a7a0:	8881      	ldrh	r1, [r0, #4]
 800a7a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7a4:	4604      	mov	r4, r0
 800a7a6:	4798      	blx	r3
 800a7a8:	88a3      	ldrh	r3, [r4, #4]
 800a7aa:	3301      	adds	r3, #1
 800a7ac:	80a3      	strh	r3, [r4, #4]
 800a7ae:	bd10      	pop	{r4, pc}

0800a7b0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a7b0:	6803      	ldr	r3, [r0, #0]
 800a7b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7b4:	4718      	bx	r3

0800a7b6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a7b6:	4770      	bx	lr

0800a7b8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a7b8:	4a02      	ldr	r2, [pc, #8]	; (800a7c4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a7ba:	6002      	str	r2, [r0, #0]
 800a7bc:	2200      	movs	r2, #0
 800a7be:	8082      	strh	r2, [r0, #4]
 800a7c0:	4770      	bx	lr
 800a7c2:	bf00      	nop
 800a7c4:	080234f0 	.word	0x080234f0

0800a7c8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a7c8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a7ca:	2000      	movs	r0, #0
 800a7cc:	b12b      	cbz	r3, 800a7da <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a7ce:	b920      	cbnz	r0, 800a7da <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a7d0:	1a5a      	subs	r2, r3, r1
 800a7d2:	4250      	negs	r0, r2
 800a7d4:	4150      	adcs	r0, r2
 800a7d6:	699b      	ldr	r3, [r3, #24]
 800a7d8:	e7f8      	b.n	800a7cc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a7da:	4770      	bx	lr

0800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a7dc:	2300      	movs	r3, #0
 800a7de:	6148      	str	r0, [r1, #20]
 800a7e0:	618b      	str	r3, [r1, #24]
 800a7e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a7e4:	b913      	cbnz	r3, 800a7ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a7e6:	6281      	str	r1, [r0, #40]	; 0x28
 800a7e8:	4770      	bx	lr
 800a7ea:	4613      	mov	r3, r2
 800a7ec:	699a      	ldr	r2, [r3, #24]
 800a7ee:	2a00      	cmp	r2, #0
 800a7f0:	d1fb      	bne.n	800a7ea <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a7f2:	6199      	str	r1, [r3, #24]
 800a7f4:	4770      	bx	lr

0800a7f6 <_ZN8touchgfx9Container9removeAllEv>:
 800a7f6:	2200      	movs	r2, #0
 800a7f8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a7fa:	b123      	cbz	r3, 800a806 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a7fc:	6999      	ldr	r1, [r3, #24]
 800a7fe:	6281      	str	r1, [r0, #40]	; 0x28
 800a800:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a804:	e7f8      	b.n	800a7f8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a806:	4770      	bx	lr

0800a808 <_ZN8touchgfx9Container6unlinkEv>:
 800a808:	2300      	movs	r3, #0
 800a80a:	6283      	str	r3, [r0, #40]	; 0x28
 800a80c:	4770      	bx	lr

0800a80e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a80e:	2200      	movs	r2, #0
 800a810:	8002      	strh	r2, [r0, #0]
 800a812:	8042      	strh	r2, [r0, #2]
 800a814:	8082      	strh	r2, [r0, #4]
 800a816:	80c2      	strh	r2, [r0, #6]
 800a818:	4770      	bx	lr

0800a81a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a81a:	b570      	push	{r4, r5, r6, lr}
 800a81c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a81e:	460d      	mov	r5, r1
 800a820:	4616      	mov	r6, r2
 800a822:	b13c      	cbz	r4, 800a834 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a824:	6823      	ldr	r3, [r4, #0]
 800a826:	4620      	mov	r0, r4
 800a828:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a82a:	4632      	mov	r2, r6
 800a82c:	4629      	mov	r1, r5
 800a82e:	4798      	blx	r3
 800a830:	69a4      	ldr	r4, [r4, #24]
 800a832:	e7f6      	b.n	800a822 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a834:	bd70      	pop	{r4, r5, r6, pc}

0800a836 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a836:	b538      	push	{r3, r4, r5, lr}
 800a838:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a83a:	460d      	mov	r5, r1
 800a83c:	b134      	cbz	r4, 800a84c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a83e:	682b      	ldr	r3, [r5, #0]
 800a840:	4621      	mov	r1, r4
 800a842:	689b      	ldr	r3, [r3, #8]
 800a844:	4628      	mov	r0, r5
 800a846:	4798      	blx	r3
 800a848:	69a4      	ldr	r4, [r4, #24]
 800a84a:	e7f7      	b.n	800a83c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a84c:	bd38      	pop	{r3, r4, r5, pc}

0800a84e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800a84e:	b510      	push	{r4, lr}
 800a850:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a852:	b12c      	cbz	r4, 800a860 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800a854:	6823      	ldr	r3, [r4, #0]
 800a856:	4620      	mov	r0, r4
 800a858:	699b      	ldr	r3, [r3, #24]
 800a85a:	4798      	blx	r3
 800a85c:	69a4      	ldr	r4, [r4, #24]
 800a85e:	e7f8      	b.n	800a852 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800a860:	bd10      	pop	{r4, pc}

0800a862 <_ZN8touchgfx9ContainerD1Ev>:
 800a862:	4770      	bx	lr

0800a864 <_ZN8touchgfx9ContainerD0Ev>:
 800a864:	b510      	push	{r4, lr}
 800a866:	212c      	movs	r1, #44	; 0x2c
 800a868:	4604      	mov	r4, r0
 800a86a:	f015 fe03 	bl	8020474 <_ZdlPvj>
 800a86e:	4620      	mov	r0, r4
 800a870:	bd10      	pop	{r4, pc}

0800a872 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a872:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a874:	b19b      	cbz	r3, 800a89e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a876:	428b      	cmp	r3, r1
 800a878:	d109      	bne.n	800a88e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a87a:	699a      	ldr	r2, [r3, #24]
 800a87c:	2100      	movs	r1, #0
 800a87e:	6159      	str	r1, [r3, #20]
 800a880:	6282      	str	r2, [r0, #40]	; 0x28
 800a882:	b902      	cbnz	r2, 800a886 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a884:	4770      	bx	lr
 800a886:	6199      	str	r1, [r3, #24]
 800a888:	4770      	bx	lr
 800a88a:	4613      	mov	r3, r2
 800a88c:	b13a      	cbz	r2, 800a89e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a88e:	699a      	ldr	r2, [r3, #24]
 800a890:	428a      	cmp	r2, r1
 800a892:	d1fa      	bne.n	800a88a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a894:	698a      	ldr	r2, [r1, #24]
 800a896:	619a      	str	r2, [r3, #24]
 800a898:	2300      	movs	r3, #0
 800a89a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a89e:	4770      	bx	lr

0800a8a0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a8a0:	b410      	push	{r4}
 800a8a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a8a4:	4604      	mov	r4, r0
 800a8a6:	b92b      	cbnz	r3, 800a8b4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a8a8:	6803      	ldr	r3, [r0, #0]
 800a8aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a8ae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a8b0:	4611      	mov	r1, r2
 800a8b2:	4718      	bx	r3
 800a8b4:	b941      	cbnz	r1, 800a8c8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a8b6:	6193      	str	r3, [r2, #24]
 800a8b8:	6282      	str	r2, [r0, #40]	; 0x28
 800a8ba:	6154      	str	r4, [r2, #20]
 800a8bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a8c0:	4770      	bx	lr
 800a8c2:	4603      	mov	r3, r0
 800a8c4:	2800      	cmp	r0, #0
 800a8c6:	d0f9      	beq.n	800a8bc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a8c8:	4299      	cmp	r1, r3
 800a8ca:	6998      	ldr	r0, [r3, #24]
 800a8cc:	d1f9      	bne.n	800a8c2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a8ce:	6190      	str	r0, [r2, #24]
 800a8d0:	618a      	str	r2, [r1, #24]
 800a8d2:	e7f2      	b.n	800a8ba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a8d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a8d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8d8:	461f      	mov	r7, r3
 800a8da:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a8de:	460d      	mov	r5, r1
 800a8e0:	4616      	mov	r6, r2
 800a8e2:	b103      	cbz	r3, 800a8e6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a8e4:	6038      	str	r0, [r7, #0]
 800a8e6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a8e8:	b314      	cbz	r4, 800a930 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a8ea:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a8ee:	b1eb      	cbz	r3, 800a92c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a8f0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a8f4:	428d      	cmp	r5, r1
 800a8f6:	db19      	blt.n	800a92c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a8f8:	8923      	ldrh	r3, [r4, #8]
 800a8fa:	b289      	uxth	r1, r1
 800a8fc:	440b      	add	r3, r1
 800a8fe:	b21b      	sxth	r3, r3
 800a900:	429d      	cmp	r5, r3
 800a902:	da13      	bge.n	800a92c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a904:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a908:	4296      	cmp	r6, r2
 800a90a:	db0f      	blt.n	800a92c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a90c:	8963      	ldrh	r3, [r4, #10]
 800a90e:	b292      	uxth	r2, r2
 800a910:	4413      	add	r3, r2
 800a912:	b21b      	sxth	r3, r3
 800a914:	429e      	cmp	r6, r3
 800a916:	da09      	bge.n	800a92c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a918:	6823      	ldr	r3, [r4, #0]
 800a91a:	1ab2      	subs	r2, r6, r2
 800a91c:	1a69      	subs	r1, r5, r1
 800a91e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800a922:	b212      	sxth	r2, r2
 800a924:	463b      	mov	r3, r7
 800a926:	b209      	sxth	r1, r1
 800a928:	4620      	mov	r0, r4
 800a92a:	47c0      	blx	r8
 800a92c:	69a4      	ldr	r4, [r4, #24]
 800a92e:	e7db      	b.n	800a8e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a934 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a938:	4c6e      	ldr	r4, [pc, #440]	; (800aaf4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a93a:	b0a1      	sub	sp, #132	; 0x84
 800a93c:	6824      	ldr	r4, [r4, #0]
 800a93e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800a940:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800a944:	9303      	str	r3, [sp, #12]
 800a946:	2400      	movs	r4, #0
 800a948:	802c      	strh	r4, [r5, #0]
 800a94a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800a94c:	802c      	strh	r4, [r5, #0]
 800a94e:	601c      	str	r4, [r3, #0]
 800a950:	4606      	mov	r6, r0
 800a952:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a956:	f7ff ffbd 	bl	800a8d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a95a:	f1b9 0f03 	cmp.w	r9, #3
 800a95e:	f340 80c2 	ble.w	800aae6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a962:	4631      	mov	r1, r6
 800a964:	a80c      	add	r0, sp, #48	; 0x30
 800a966:	f007 fa9b 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a96a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800a96e:	9306      	str	r3, [sp, #24]
 800a970:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800a974:	9307      	str	r3, [sp, #28]
 800a976:	9b03      	ldr	r3, [sp, #12]
 800a978:	f8d3 a000 	ldr.w	sl, [r3]
 800a97c:	f1ba 0f00 	cmp.w	sl, #0
 800a980:	f000 80b4 	beq.w	800aaec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a984:	4651      	mov	r1, sl
 800a986:	a810      	add	r0, sp, #64	; 0x40
 800a988:	f007 fa8a 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a98c:	9b01      	ldr	r3, [sp, #4]
 800a98e:	9a06      	ldr	r2, [sp, #24]
 800a990:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800a994:	189d      	adds	r5, r3, r2
 800a996:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800a99a:	9a07      	ldr	r2, [sp, #28]
 800a99c:	2002      	movs	r0, #2
 800a99e:	fb91 f1f0 	sdiv	r1, r1, r0
 800a9a2:	4419      	add	r1, r3
 800a9a4:	1a6d      	subs	r5, r5, r1
 800a9a6:	9b02      	ldr	r3, [sp, #8]
 800a9a8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800a9ac:	4413      	add	r3, r2
 800a9ae:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800a9b2:	fb92 f2f0 	sdiv	r2, r2, r0
 800a9b6:	440a      	add	r2, r1
 800a9b8:	1a9b      	subs	r3, r3, r2
 800a9ba:	435b      	muls	r3, r3
 800a9bc:	fb05 3505 	mla	r5, r5, r5, r3
 800a9c0:	4f4d      	ldr	r7, [pc, #308]	; (800aaf8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800a9c2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a9c4:	ac10      	add	r4, sp, #64	; 0x40
 800a9c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a9c8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a9ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a9cc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a9ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a9d0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a9d4:	f1b9 0f0c 	cmp.w	r9, #12
 800a9d8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a9dc:	f04f 0303 	mov.w	r3, #3
 800a9e0:	bfc8      	it	gt
 800a9e2:	4698      	movgt	r8, r3
 800a9e4:	f8cd 9000 	str.w	r9, [sp]
 800a9e8:	f04f 0400 	mov.w	r4, #0
 800a9ec:	bfdc      	itt	le
 800a9ee:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a9f2:	fb92 f8f3 	sdivle	r8, r2, r3
 800a9f6:	1c63      	adds	r3, r4, #1
 800a9f8:	aa10      	add	r2, sp, #64	; 0x40
 800a9fa:	f004 0401 	and.w	r4, r4, #1
 800a9fe:	9308      	str	r3, [sp, #32]
 800aa00:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800aa04:	9b00      	ldr	r3, [sp, #0]
 800aa06:	fb93 f3f8 	sdiv	r3, r3, r8
 800aa0a:	b29b      	uxth	r3, r3
 800aa0c:	3404      	adds	r4, #4
 800aa0e:	f04f 0b00 	mov.w	fp, #0
 800aa12:	9304      	str	r3, [sp, #16]
 800aa14:	9a04      	ldr	r2, [sp, #16]
 800aa16:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800aa1a:	fb13 f302 	smulbb	r3, r3, r2
 800aa1e:	9a01      	ldr	r2, [sp, #4]
 800aa20:	b29b      	uxth	r3, r3
 800aa22:	1899      	adds	r1, r3, r2
 800aa24:	9305      	str	r3, [sp, #20]
 800aa26:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800aa2a:	b209      	sxth	r1, r1
 800aa2c:	4299      	cmp	r1, r3
 800aa2e:	db4d      	blt.n	800aacc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa30:	8932      	ldrh	r2, [r6, #8]
 800aa32:	4413      	add	r3, r2
 800aa34:	b21b      	sxth	r3, r3
 800aa36:	4299      	cmp	r1, r3
 800aa38:	da48      	bge.n	800aacc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa3a:	9b04      	ldr	r3, [sp, #16]
 800aa3c:	6827      	ldr	r7, [r4, #0]
 800aa3e:	fb17 f703 	smulbb	r7, r7, r3
 800aa42:	9b02      	ldr	r3, [sp, #8]
 800aa44:	b2bf      	uxth	r7, r7
 800aa46:	18fa      	adds	r2, r7, r3
 800aa48:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800aa4c:	b212      	sxth	r2, r2
 800aa4e:	429a      	cmp	r2, r3
 800aa50:	db3c      	blt.n	800aacc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa52:	8970      	ldrh	r0, [r6, #10]
 800aa54:	4403      	add	r3, r0
 800aa56:	b21b      	sxth	r3, r3
 800aa58:	429a      	cmp	r2, r3
 800aa5a:	da37      	bge.n	800aacc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa5c:	2300      	movs	r3, #0
 800aa5e:	930b      	str	r3, [sp, #44]	; 0x2c
 800aa60:	4630      	mov	r0, r6
 800aa62:	ab0b      	add	r3, sp, #44	; 0x2c
 800aa64:	f7ff ff36 	bl	800a8d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aa68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aa6a:	b37a      	cbz	r2, 800aacc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa6c:	4552      	cmp	r2, sl
 800aa6e:	d02d      	beq.n	800aacc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa70:	4611      	mov	r1, r2
 800aa72:	a80e      	add	r0, sp, #56	; 0x38
 800aa74:	9209      	str	r2, [sp, #36]	; 0x24
 800aa76:	f007 fa13 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aa7a:	9a06      	ldr	r2, [sp, #24]
 800aa7c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800aa80:	9b01      	ldr	r3, [sp, #4]
 800aa82:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800aa86:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800aa8a:	4413      	add	r3, r2
 800aa8c:	f04f 0e02 	mov.w	lr, #2
 800aa90:	fb91 f1fe 	sdiv	r1, r1, lr
 800aa94:	4401      	add	r1, r0
 800aa96:	1a58      	subs	r0, r3, r1
 800aa98:	9a07      	ldr	r2, [sp, #28]
 800aa9a:	9b02      	ldr	r3, [sp, #8]
 800aa9c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800aaa0:	fb9c fcfe 	sdiv	ip, ip, lr
 800aaa4:	4413      	add	r3, r2
 800aaa6:	448c      	add	ip, r1
 800aaa8:	eba3 030c 	sub.w	r3, r3, ip
 800aaac:	435b      	muls	r3, r3
 800aaae:	fb00 3300 	mla	r3, r0, r0, r3
 800aab2:	42ab      	cmp	r3, r5
 800aab4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800aab6:	d208      	bcs.n	800aaca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800aab8:	9803      	ldr	r0, [sp, #12]
 800aaba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aabc:	6001      	str	r1, [r0, #0]
 800aabe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800aac0:	9805      	ldr	r0, [sp, #20]
 800aac2:	8008      	strh	r0, [r1, #0]
 800aac4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800aac6:	461d      	mov	r5, r3
 800aac8:	800f      	strh	r7, [r1, #0]
 800aaca:	4692      	mov	sl, r2
 800aacc:	f10b 0b01 	add.w	fp, fp, #1
 800aad0:	f1bb 0f04 	cmp.w	fp, #4
 800aad4:	f104 0408 	add.w	r4, r4, #8
 800aad8:	d19c      	bne.n	800aa14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800aada:	9b00      	ldr	r3, [sp, #0]
 800aadc:	9c08      	ldr	r4, [sp, #32]
 800aade:	444b      	add	r3, r9
 800aae0:	4544      	cmp	r4, r8
 800aae2:	9300      	str	r3, [sp, #0]
 800aae4:	d187      	bne.n	800a9f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800aae6:	b021      	add	sp, #132	; 0x84
 800aae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aaec:	f04f 35ff 	mov.w	r5, #4294967295
 800aaf0:	e766      	b.n	800a9c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800aaf2:	bf00      	nop
 800aaf4:	20015488 	.word	0x20015488
 800aaf8:	0802182c 	.word	0x0802182c

0800aafc <_ZN8touchgfx4RectaNERKS0_>:
 800aafc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ab00:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ab04:	888c      	ldrh	r4, [r1, #4]
 800ab06:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ab0a:	443c      	add	r4, r7
 800ab0c:	b2a4      	uxth	r4, r4
 800ab0e:	fa0f f884 	sxth.w	r8, r4
 800ab12:	45c1      	cmp	r9, r8
 800ab14:	da2f      	bge.n	800ab76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab16:	8882      	ldrh	r2, [r0, #4]
 800ab18:	444a      	add	r2, r9
 800ab1a:	b292      	uxth	r2, r2
 800ab1c:	fa0f fe82 	sxth.w	lr, r2
 800ab20:	4577      	cmp	r7, lr
 800ab22:	da28      	bge.n	800ab76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab24:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ab28:	88cb      	ldrh	r3, [r1, #6]
 800ab2a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ab2e:	442b      	add	r3, r5
 800ab30:	b21b      	sxth	r3, r3
 800ab32:	429e      	cmp	r6, r3
 800ab34:	da1f      	bge.n	800ab76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab36:	88c3      	ldrh	r3, [r0, #6]
 800ab38:	4433      	add	r3, r6
 800ab3a:	b29b      	uxth	r3, r3
 800ab3c:	fa0f fc83 	sxth.w	ip, r3
 800ab40:	4565      	cmp	r5, ip
 800ab42:	da18      	bge.n	800ab76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab44:	454f      	cmp	r7, r9
 800ab46:	bfb8      	it	lt
 800ab48:	464f      	movlt	r7, r9
 800ab4a:	42b5      	cmp	r5, r6
 800ab4c:	bfb8      	it	lt
 800ab4e:	4635      	movlt	r5, r6
 800ab50:	45f0      	cmp	r8, lr
 800ab52:	bfd8      	it	le
 800ab54:	4622      	movle	r2, r4
 800ab56:	1bd2      	subs	r2, r2, r7
 800ab58:	8082      	strh	r2, [r0, #4]
 800ab5a:	884a      	ldrh	r2, [r1, #2]
 800ab5c:	88c9      	ldrh	r1, [r1, #6]
 800ab5e:	8007      	strh	r7, [r0, #0]
 800ab60:	440a      	add	r2, r1
 800ab62:	b292      	uxth	r2, r2
 800ab64:	b211      	sxth	r1, r2
 800ab66:	458c      	cmp	ip, r1
 800ab68:	bfa8      	it	ge
 800ab6a:	4613      	movge	r3, r2
 800ab6c:	1b5b      	subs	r3, r3, r5
 800ab6e:	80c3      	strh	r3, [r0, #6]
 800ab70:	8045      	strh	r5, [r0, #2]
 800ab72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab76:	2300      	movs	r3, #0
 800ab78:	8003      	strh	r3, [r0, #0]
 800ab7a:	8043      	strh	r3, [r0, #2]
 800ab7c:	8083      	strh	r3, [r0, #4]
 800ab7e:	80c3      	strh	r3, [r0, #6]
 800ab80:	e7f7      	b.n	800ab72 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ab82:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ab86:	2b00      	cmp	r3, #0
 800ab88:	dd06      	ble.n	800ab98 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ab8a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ab8e:	2800      	cmp	r0, #0
 800ab90:	bfcc      	ite	gt
 800ab92:	2000      	movgt	r0, #0
 800ab94:	2001      	movle	r0, #1
 800ab96:	4770      	bx	lr
 800ab98:	2001      	movs	r0, #1
 800ab9a:	4770      	bx	lr

0800ab9c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ab9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aba0:	2300      	movs	r3, #0
 800aba2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800aba4:	8003      	strh	r3, [r0, #0]
 800aba6:	4604      	mov	r4, r0
 800aba8:	8043      	strh	r3, [r0, #2]
 800abaa:	8083      	strh	r3, [r0, #4]
 800abac:	80c3      	strh	r3, [r0, #6]
 800abae:	2d00      	cmp	r5, #0
 800abb0:	d040      	beq.n	800ac34 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800abb2:	1d28      	adds	r0, r5, #4
 800abb4:	f7ff ffe5 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800abb8:	b988      	cbnz	r0, 800abde <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800abba:	4620      	mov	r0, r4
 800abbc:	f7ff ffe1 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800abc0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800abc4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800abc8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800abcc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800abd0:	b138      	cbz	r0, 800abe2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800abd2:	8022      	strh	r2, [r4, #0]
 800abd4:	8063      	strh	r3, [r4, #2]
 800abd6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800abda:	f8a4 c006 	strh.w	ip, [r4, #6]
 800abde:	69ad      	ldr	r5, [r5, #24]
 800abe0:	e7e5      	b.n	800abae <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800abe2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800abe6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800abea:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800abee:	4290      	cmp	r0, r2
 800abf0:	4607      	mov	r7, r0
 800abf2:	bfa8      	it	ge
 800abf4:	4617      	movge	r7, r2
 800abf6:	4472      	add	r2, lr
 800abf8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800abfc:	8027      	strh	r7, [r4, #0]
 800abfe:	4299      	cmp	r1, r3
 800ac00:	460e      	mov	r6, r1
 800ac02:	4440      	add	r0, r8
 800ac04:	bfa8      	it	ge
 800ac06:	461e      	movge	r6, r3
 800ac08:	4471      	add	r1, lr
 800ac0a:	4463      	add	r3, ip
 800ac0c:	b200      	sxth	r0, r0
 800ac0e:	b212      	sxth	r2, r2
 800ac10:	b209      	sxth	r1, r1
 800ac12:	b21b      	sxth	r3, r3
 800ac14:	4290      	cmp	r0, r2
 800ac16:	bfac      	ite	ge
 800ac18:	ebc7 0200 	rsbge	r2, r7, r0
 800ac1c:	ebc7 0202 	rsblt	r2, r7, r2
 800ac20:	4299      	cmp	r1, r3
 800ac22:	bfac      	ite	ge
 800ac24:	ebc6 0301 	rsbge	r3, r6, r1
 800ac28:	ebc6 0303 	rsblt	r3, r6, r3
 800ac2c:	8066      	strh	r6, [r4, #2]
 800ac2e:	80a2      	strh	r2, [r4, #4]
 800ac30:	80e3      	strh	r3, [r4, #6]
 800ac32:	e7d4      	b.n	800abde <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ac34:	4620      	mov	r0, r4
 800ac36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ac3a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ac3e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ac42:	b383      	cbz	r3, 800aca6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ac44:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac46:	b374      	cbz	r4, 800aca6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ac48:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ac4c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ac50:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ac54:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ac58:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ac5c:	b303      	cbz	r3, 800aca0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ac5e:	4668      	mov	r0, sp
 800ac60:	1d21      	adds	r1, r4, #4
 800ac62:	f8ad 5000 	strh.w	r5, [sp]
 800ac66:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ac6a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ac6e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ac72:	f7ff ff43 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800ac76:	4668      	mov	r0, sp
 800ac78:	f7ff ff83 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac7c:	b980      	cbnz	r0, 800aca0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ac7e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ac82:	88a2      	ldrh	r2, [r4, #4]
 800ac84:	1a9b      	subs	r3, r3, r2
 800ac86:	f8ad 3000 	strh.w	r3, [sp]
 800ac8a:	88e2      	ldrh	r2, [r4, #6]
 800ac8c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ac90:	1a9b      	subs	r3, r3, r2
 800ac92:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ac96:	6823      	ldr	r3, [r4, #0]
 800ac98:	4669      	mov	r1, sp
 800ac9a:	689b      	ldr	r3, [r3, #8]
 800ac9c:	4620      	mov	r0, r4
 800ac9e:	4798      	blx	r3
 800aca0:	69a4      	ldr	r4, [r4, #24]
 800aca2:	2c00      	cmp	r4, #0
 800aca4:	d1d8      	bne.n	800ac58 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800aca6:	b002      	add	sp, #8
 800aca8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800acac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800acac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800acae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800acb2:	460d      	mov	r5, r1
 800acb4:	4616      	mov	r6, r2
 800acb6:	b323      	cbz	r3, 800ad02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800acb8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800acba:	b314      	cbz	r4, 800ad02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800acbc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800acc0:	b1eb      	cbz	r3, 800acfe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800acc2:	6828      	ldr	r0, [r5, #0]
 800acc4:	6869      	ldr	r1, [r5, #4]
 800acc6:	466b      	mov	r3, sp
 800acc8:	c303      	stmia	r3!, {r0, r1}
 800acca:	4668      	mov	r0, sp
 800accc:	1d21      	adds	r1, r4, #4
 800acce:	f7ff ff15 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800acd2:	4668      	mov	r0, sp
 800acd4:	f7ff ff55 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800acd8:	b988      	cbnz	r0, 800acfe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800acda:	f8bd 3000 	ldrh.w	r3, [sp]
 800acde:	88a2      	ldrh	r2, [r4, #4]
 800ace0:	1a9b      	subs	r3, r3, r2
 800ace2:	f8ad 3000 	strh.w	r3, [sp]
 800ace6:	88e2      	ldrh	r2, [r4, #6]
 800ace8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800acec:	1a9b      	subs	r3, r3, r2
 800acee:	f8ad 3002 	strh.w	r3, [sp, #2]
 800acf2:	6823      	ldr	r3, [r4, #0]
 800acf4:	4632      	mov	r2, r6
 800acf6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800acf8:	4669      	mov	r1, sp
 800acfa:	4620      	mov	r0, r4
 800acfc:	4798      	blx	r3
 800acfe:	69a4      	ldr	r4, [r4, #24]
 800ad00:	e7db      	b.n	800acba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ad02:	b002      	add	sp, #8
 800ad04:	bd70      	pop	{r4, r5, r6, pc}

0800ad06 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ad06:	b513      	push	{r0, r1, r4, lr}
 800ad08:	6803      	ldr	r3, [r0, #0]
 800ad0a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800ad0e:	2300      	movs	r3, #0
 800ad10:	e9cd 3300 	strd	r3, r3, [sp]
 800ad14:	466b      	mov	r3, sp
 800ad16:	47a0      	blx	r4
 800ad18:	b002      	add	sp, #8
 800ad1a:	bd10      	pop	{r4, pc}

0800ad1c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ad1c:	2301      	movs	r3, #1
 800ad1e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ad22:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800ad26:	4770      	bx	lr

0800ad28 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ad28:	2301      	movs	r3, #1
 800ad2a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ad2e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800ad32:	4770      	bx	lr

0800ad34 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ad34:	6843      	ldr	r3, [r0, #4]
 800ad36:	2201      	movs	r2, #1
 800ad38:	725a      	strb	r2, [r3, #9]
 800ad3a:	6840      	ldr	r0, [r0, #4]
 800ad3c:	6803      	ldr	r3, [r0, #0]
 800ad3e:	691b      	ldr	r3, [r3, #16]
 800ad40:	4718      	bx	r3

0800ad42 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ad42:	6840      	ldr	r0, [r0, #4]
 800ad44:	6803      	ldr	r3, [r0, #0]
 800ad46:	689b      	ldr	r3, [r3, #8]
 800ad48:	4718      	bx	r3

0800ad4a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ad4a:	b530      	push	{r4, r5, lr}
 800ad4c:	b08b      	sub	sp, #44	; 0x2c
 800ad4e:	6804      	ldr	r4, [r0, #0]
 800ad50:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ad54:	9509      	str	r5, [sp, #36]	; 0x24
 800ad56:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ad5a:	9508      	str	r5, [sp, #32]
 800ad5c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ad60:	9507      	str	r5, [sp, #28]
 800ad62:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ad66:	9506      	str	r5, [sp, #24]
 800ad68:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ad6c:	9505      	str	r5, [sp, #20]
 800ad6e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ad72:	9504      	str	r5, [sp, #16]
 800ad74:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ad78:	9503      	str	r5, [sp, #12]
 800ad7a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ad7e:	9502      	str	r5, [sp, #8]
 800ad80:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ad84:	e9cd 3500 	strd	r3, r5, [sp]
 800ad88:	4613      	mov	r3, r2
 800ad8a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800ad8c:	2200      	movs	r2, #0
 800ad8e:	47a0      	blx	r4
 800ad90:	b00b      	add	sp, #44	; 0x2c
 800ad92:	bd30      	pop	{r4, r5, pc}

0800ad94 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ad94:	4b04      	ldr	r3, [pc, #16]	; (800ada8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ad96:	781b      	ldrb	r3, [r3, #0]
 800ad98:	b123      	cbz	r3, 800ada4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ad9a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800ad9e:	f080 0001 	eor.w	r0, r0, #1
 800ada2:	4770      	bx	lr
 800ada4:	2001      	movs	r0, #1
 800ada6:	4770      	bx	lr
 800ada8:	20015486 	.word	0x20015486

0800adac <_ZN8touchgfx3HAL8endFrameEv>:
 800adac:	b510      	push	{r4, lr}
 800adae:	4604      	mov	r4, r0
 800adb0:	6840      	ldr	r0, [r0, #4]
 800adb2:	6803      	ldr	r3, [r0, #0]
 800adb4:	689b      	ldr	r3, [r3, #8]
 800adb6:	4798      	blx	r3
 800adb8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800adbc:	b113      	cbz	r3, 800adc4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800adbe:	2301      	movs	r3, #1
 800adc0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800adc4:	bd10      	pop	{r4, pc}

0800adc6 <_ZN8touchgfx3HAL10initializeEv>:
 800adc6:	b510      	push	{r4, lr}
 800adc8:	4604      	mov	r4, r0
 800adca:	f7f5 fd8d 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800adce:	6860      	ldr	r0, [r4, #4]
 800add0:	6803      	ldr	r3, [r0, #0]
 800add2:	68db      	ldr	r3, [r3, #12]
 800add4:	4798      	blx	r3
 800add6:	68e0      	ldr	r0, [r4, #12]
 800add8:	6803      	ldr	r3, [r0, #0]
 800adda:	689b      	ldr	r3, [r3, #8]
 800addc:	4798      	blx	r3
 800adde:	6823      	ldr	r3, [r4, #0]
 800ade0:	4620      	mov	r0, r4
 800ade2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ade4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ade8:	4718      	bx	r3
	...

0800adec <_ZN8touchgfx3HAL4tickEv>:
 800adec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800adee:	6803      	ldr	r3, [r0, #0]
 800adf0:	4d5b      	ldr	r5, [pc, #364]	; (800af60 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800adf2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800adf6:	4604      	mov	r4, r0
 800adf8:	4798      	blx	r3
 800adfa:	2800      	cmp	r0, #0
 800adfc:	f000 8095 	beq.w	800af2a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ae00:	2001      	movs	r0, #1
 800ae02:	f7f5 fc9d 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ae06:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800ae0a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800ae0e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800ae12:	2600      	movs	r6, #0
 800ae14:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800ae18:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ae1c:	b133      	cbz	r3, 800ae2c <_ZN8touchgfx3HAL4tickEv+0x40>
 800ae1e:	6823      	ldr	r3, [r4, #0]
 800ae20:	4620      	mov	r0, r4
 800ae22:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ae26:	4798      	blx	r3
 800ae28:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800ae2c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ae30:	6862      	ldr	r2, [r4, #4]
 800ae32:	f083 0301 	eor.w	r3, r3, #1
 800ae36:	7253      	strb	r3, [r2, #9]
 800ae38:	2601      	movs	r6, #1
 800ae3a:	702e      	strb	r6, [r5, #0]
 800ae3c:	f005 fffe 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
 800ae40:	6803      	ldr	r3, [r0, #0]
 800ae42:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ae44:	4798      	blx	r3
 800ae46:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ae4a:	b90b      	cbnz	r3, 800ae50 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ae4c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800ae50:	f005 fff4 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
 800ae54:	6803      	ldr	r3, [r0, #0]
 800ae56:	695b      	ldr	r3, [r3, #20]
 800ae58:	4798      	blx	r3
 800ae5a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ae5c:	6803      	ldr	r3, [r0, #0]
 800ae5e:	691b      	ldr	r3, [r3, #16]
 800ae60:	4798      	blx	r3
 800ae62:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ae66:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800ae6a:	3b01      	subs	r3, #1
 800ae6c:	b2db      	uxtb	r3, r3
 800ae6e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800ae72:	b10a      	cbz	r2, 800ae78 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ae74:	2b00      	cmp	r3, #0
 800ae76:	d1eb      	bne.n	800ae50 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ae78:	4a3a      	ldr	r2, [pc, #232]	; (800af64 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ae7a:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800ae7e:	7813      	ldrb	r3, [r2, #0]
 800ae80:	3301      	adds	r3, #1
 800ae82:	b25b      	sxtb	r3, r3
 800ae84:	4299      	cmp	r1, r3
 800ae86:	7013      	strb	r3, [r2, #0]
 800ae88:	dc10      	bgt.n	800aeac <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ae8a:	68e0      	ldr	r0, [r4, #12]
 800ae8c:	2300      	movs	r3, #0
 800ae8e:	7013      	strb	r3, [r2, #0]
 800ae90:	6803      	ldr	r3, [r0, #0]
 800ae92:	aa03      	add	r2, sp, #12
 800ae94:	68db      	ldr	r3, [r3, #12]
 800ae96:	a902      	add	r1, sp, #8
 800ae98:	4798      	blx	r3
 800ae9a:	6823      	ldr	r3, [r4, #0]
 800ae9c:	2800      	cmp	r0, #0
 800ae9e:	d050      	beq.n	800af42 <_ZN8touchgfx3HAL4tickEv+0x156>
 800aea0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800aea4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800aea8:	4620      	mov	r0, r4
 800aeaa:	4798      	blx	r3
 800aeac:	6960      	ldr	r0, [r4, #20]
 800aeae:	2300      	movs	r3, #0
 800aeb0:	f88d 3007 	strb.w	r3, [sp, #7]
 800aeb4:	b158      	cbz	r0, 800aece <_ZN8touchgfx3HAL4tickEv+0xe2>
 800aeb6:	6803      	ldr	r3, [r0, #0]
 800aeb8:	f10d 0107 	add.w	r1, sp, #7
 800aebc:	68db      	ldr	r3, [r3, #12]
 800aebe:	4798      	blx	r3
 800aec0:	b128      	cbz	r0, 800aece <_ZN8touchgfx3HAL4tickEv+0xe2>
 800aec2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800aec4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800aec8:	6803      	ldr	r3, [r0, #0]
 800aeca:	68db      	ldr	r3, [r3, #12]
 800aecc:	4798      	blx	r3
 800aece:	f104 001c 	add.w	r0, r4, #28
 800aed2:	f014 ff07 	bl	801fce4 <_ZN8touchgfx8Gestures4tickEv>
 800aed6:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800aeda:	b30b      	cbz	r3, 800af20 <_ZN8touchgfx3HAL4tickEv+0x134>
 800aedc:	6920      	ldr	r0, [r4, #16]
 800aede:	6803      	ldr	r3, [r0, #0]
 800aee0:	691b      	ldr	r3, [r3, #16]
 800aee2:	4798      	blx	r3
 800aee4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800aee6:	4606      	mov	r6, r0
 800aee8:	b903      	cbnz	r3, 800aeec <_ZN8touchgfx3HAL4tickEv+0x100>
 800aeea:	6720      	str	r0, [r4, #112]	; 0x70
 800aeec:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800aeee:	4a1e      	ldr	r2, [pc, #120]	; (800af68 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800aef0:	1af3      	subs	r3, r6, r3
 800aef2:	4293      	cmp	r3, r2
 800aef4:	d914      	bls.n	800af20 <_ZN8touchgfx3HAL4tickEv+0x134>
 800aef6:	6920      	ldr	r0, [r4, #16]
 800aef8:	6803      	ldr	r3, [r0, #0]
 800aefa:	699b      	ldr	r3, [r3, #24]
 800aefc:	4798      	blx	r3
 800aefe:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800af00:	2264      	movs	r2, #100	; 0x64
 800af02:	1af3      	subs	r3, r6, r3
 800af04:	fbb3 f3f2 	udiv	r3, r3, r2
 800af08:	fbb0 f0f3 	udiv	r0, r0, r3
 800af0c:	2800      	cmp	r0, #0
 800af0e:	dc1d      	bgt.n	800af4c <_ZN8touchgfx3HAL4tickEv+0x160>
 800af10:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800af14:	6920      	ldr	r0, [r4, #16]
 800af16:	6803      	ldr	r3, [r0, #0]
 800af18:	2100      	movs	r1, #0
 800af1a:	69db      	ldr	r3, [r3, #28]
 800af1c:	4798      	blx	r3
 800af1e:	6726      	str	r6, [r4, #112]	; 0x70
 800af20:	f005 ff8c 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
 800af24:	6803      	ldr	r3, [r0, #0]
 800af26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af28:	4798      	blx	r3
 800af2a:	6823      	ldr	r3, [r4, #0]
 800af2c:	4620      	mov	r0, r4
 800af2e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800af32:	4798      	blx	r3
 800af34:	2001      	movs	r0, #1
 800af36:	f7f5 fc04 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800af3a:	2300      	movs	r3, #0
 800af3c:	702b      	strb	r3, [r5, #0]
 800af3e:	b004      	add	sp, #16
 800af40:	bd70      	pop	{r4, r5, r6, pc}
 800af42:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800af46:	4620      	mov	r0, r4
 800af48:	4798      	blx	r3
 800af4a:	e7af      	b.n	800aeac <_ZN8touchgfx3HAL4tickEv+0xc0>
 800af4c:	2863      	cmp	r0, #99	; 0x63
 800af4e:	bfcb      	itete	gt
 800af50:	2300      	movgt	r3, #0
 800af52:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800af56:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800af5a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800af5e:	e7d9      	b.n	800af14 <_ZN8touchgfx3HAL4tickEv+0x128>
 800af60:	2001548c 	.word	0x2001548c
 800af64:	2001548d 	.word	0x2001548d
 800af68:	05f5e100 	.word	0x05f5e100

0800af6c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800af6c:	f7f5 bcec 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800af70 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800af70:	6581      	str	r1, [r0, #88]	; 0x58
 800af72:	301c      	adds	r0, #28
 800af74:	f014 beb4 	b.w	801fce0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800af78 <_ZN8touchgfx3HAL5touchEll>:
 800af78:	b530      	push	{r4, r5, lr}
 800af7a:	b087      	sub	sp, #28
 800af7c:	4604      	mov	r4, r0
 800af7e:	a804      	add	r0, sp, #16
 800af80:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800af84:	f005 fd1c 	bl	80109c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800af88:	9b04      	ldr	r3, [sp, #16]
 800af8a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800af8e:	a906      	add	r1, sp, #24
 800af90:	9b05      	ldr	r3, [sp, #20]
 800af92:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800af96:	a803      	add	r0, sp, #12
 800af98:	f005 fd64 	bl	8010a64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800af9c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800afa0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800afa4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800afa8:	f104 001c 	add.w	r0, r4, #28
 800afac:	b189      	cbz	r1, 800afd2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800afae:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800afb2:	9300      	str	r3, [sp, #0]
 800afb4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800afb8:	4613      	mov	r3, r2
 800afba:	462a      	mov	r2, r5
 800afbc:	f014 fea0 	bl	801fd00 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800afc0:	b128      	cbz	r0, 800afce <_ZN8touchgfx3HAL5touchEll+0x56>
 800afc2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800afc6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800afc8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800afcc:	6623      	str	r3, [r4, #96]	; 0x60
 800afce:	b007      	add	sp, #28
 800afd0:	bd30      	pop	{r4, r5, pc}
 800afd2:	f014 fed5 	bl	801fd80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800afd6:	2301      	movs	r3, #1
 800afd8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800afdc:	e7f1      	b.n	800afc2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800afde <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800afde:	b510      	push	{r4, lr}
 800afe0:	2b00      	cmp	r3, #0
 800afe2:	d046      	beq.n	800b072 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800afe4:	ea81 0002 	eor.w	r0, r1, r2
 800afe8:	07c4      	lsls	r4, r0, #31
 800afea:	d508      	bpl.n	800affe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800afec:	440b      	add	r3, r1
 800afee:	3a01      	subs	r2, #1
 800aff0:	428b      	cmp	r3, r1
 800aff2:	d93e      	bls.n	800b072 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800aff4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800aff8:	f801 0b01 	strb.w	r0, [r1], #1
 800affc:	e7f8      	b.n	800aff0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800affe:	07d0      	lsls	r0, r2, #31
 800b000:	bf42      	ittt	mi
 800b002:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b006:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b00a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b00e:	2b01      	cmp	r3, #1
 800b010:	d911      	bls.n	800b036 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b012:	ea81 0402 	eor.w	r4, r1, r2
 800b016:	07a4      	lsls	r4, r4, #30
 800b018:	4610      	mov	r0, r2
 800b01a:	d022      	beq.n	800b062 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b01c:	f023 0401 	bic.w	r4, r3, #1
 800b020:	440c      	add	r4, r1
 800b022:	428c      	cmp	r4, r1
 800b024:	4602      	mov	r2, r0
 800b026:	d904      	bls.n	800b032 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b028:	8812      	ldrh	r2, [r2, #0]
 800b02a:	f821 2b02 	strh.w	r2, [r1], #2
 800b02e:	3002      	adds	r0, #2
 800b030:	e7f7      	b.n	800b022 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b032:	f003 0301 	and.w	r3, r3, #1
 800b036:	f023 0003 	bic.w	r0, r3, #3
 800b03a:	4408      	add	r0, r1
 800b03c:	4288      	cmp	r0, r1
 800b03e:	4614      	mov	r4, r2
 800b040:	d904      	bls.n	800b04c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b042:	6824      	ldr	r4, [r4, #0]
 800b044:	f841 4b04 	str.w	r4, [r1], #4
 800b048:	3204      	adds	r2, #4
 800b04a:	e7f7      	b.n	800b03c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b04c:	f003 0303 	and.w	r3, r3, #3
 800b050:	440b      	add	r3, r1
 800b052:	3a01      	subs	r2, #1
 800b054:	428b      	cmp	r3, r1
 800b056:	d90c      	bls.n	800b072 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b058:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b05c:	f801 0b01 	strb.w	r0, [r1], #1
 800b060:	e7f8      	b.n	800b054 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b062:	0790      	lsls	r0, r2, #30
 800b064:	d0e7      	beq.n	800b036 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b066:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b06a:	f821 0b02 	strh.w	r0, [r1], #2
 800b06e:	3b02      	subs	r3, #2
 800b070:	e7e1      	b.n	800b036 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b072:	2001      	movs	r0, #1
 800b074:	bd10      	pop	{r4, pc}

0800b076 <_ZN8touchgfx3HAL7noTouchEv>:
 800b076:	b510      	push	{r4, lr}
 800b078:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b07c:	4604      	mov	r4, r0
 800b07e:	b153      	cbz	r3, 800b096 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b080:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b084:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b088:	2101      	movs	r1, #1
 800b08a:	301c      	adds	r0, #28
 800b08c:	f014 fe78 	bl	801fd80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b090:	2300      	movs	r3, #0
 800b092:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b096:	bd10      	pop	{r4, pc}

0800b098 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b098:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b09c:	b085      	sub	sp, #20
 800b09e:	ad04      	add	r5, sp, #16
 800b0a0:	4604      	mov	r4, r0
 800b0a2:	2000      	movs	r0, #0
 800b0a4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b0a8:	69a0      	ldr	r0, [r4, #24]
 800b0aa:	6806      	ldr	r6, [r0, #0]
 800b0ac:	9501      	str	r5, [sp, #4]
 800b0ae:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b0b2:	9500      	str	r5, [sp, #0]
 800b0b4:	6835      	ldr	r5, [r6, #0]
 800b0b6:	4699      	mov	r9, r3
 800b0b8:	460f      	mov	r7, r1
 800b0ba:	4690      	mov	r8, r2
 800b0bc:	47a8      	blx	r5
 800b0be:	4d10      	ldr	r5, [pc, #64]	; (800b100 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b0c0:	4606      	mov	r6, r0
 800b0c2:	f8a5 9000 	strh.w	r9, [r5]
 800b0c6:	f7f7 fa0b 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800b0ca:	6803      	ldr	r3, [r0, #0]
 800b0cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0ce:	4798      	blx	r3
 800b0d0:	b128      	cbz	r0, 800b0de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b0d2:	2801      	cmp	r0, #1
 800b0d4:	d00b      	beq.n	800b0ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b0d6:	4630      	mov	r0, r6
 800b0d8:	b005      	add	sp, #20
 800b0da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b0de:	882b      	ldrh	r3, [r5, #0]
 800b0e0:	fb08 7203 	mla	r2, r8, r3, r7
 800b0e4:	9b03      	ldr	r3, [sp, #12]
 800b0e6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b0ea:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b0ec:	e7f3      	b.n	800b0d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b0ee:	882a      	ldrh	r2, [r5, #0]
 800b0f0:	9b03      	ldr	r3, [sp, #12]
 800b0f2:	fb08 7202 	mla	r2, r8, r2, r7
 800b0f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b0fa:	1a9a      	subs	r2, r3, r2
 800b0fc:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b0fe:	e7ea      	b.n	800b0d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b100:	20015482 	.word	0x20015482

0800b104 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b104:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b106:	b08b      	sub	sp, #44	; 0x2c
 800b108:	4617      	mov	r7, r2
 800b10a:	4604      	mov	r4, r0
 800b10c:	460e      	mov	r6, r1
 800b10e:	461d      	mov	r5, r3
 800b110:	f7f7 f9e6 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800b114:	6803      	ldr	r3, [r0, #0]
 800b116:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b118:	4798      	blx	r3
 800b11a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b11e:	9007      	str	r0, [sp, #28]
 800b120:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b124:	4b0d      	ldr	r3, [pc, #52]	; (800b15c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b126:	6822      	ldr	r2, [r4, #0]
 800b128:	881b      	ldrh	r3, [r3, #0]
 800b12a:	9306      	str	r3, [sp, #24]
 800b12c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b130:	9305      	str	r3, [sp, #20]
 800b132:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b136:	9304      	str	r3, [sp, #16]
 800b138:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b13c:	9303      	str	r3, [sp, #12]
 800b13e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b142:	9302      	str	r3, [sp, #8]
 800b144:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b148:	e9cd 5300 	strd	r5, r3, [sp]
 800b14c:	4631      	mov	r1, r6
 800b14e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b150:	463b      	mov	r3, r7
 800b152:	2200      	movs	r2, #0
 800b154:	4620      	mov	r0, r4
 800b156:	47a8      	blx	r5
 800b158:	b00b      	add	sp, #44	; 0x2c
 800b15a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b15c:	20015482 	.word	0x20015482

0800b160 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b160:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b164:	4698      	mov	r8, r3
 800b166:	6803      	ldr	r3, [r0, #0]
 800b168:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b16a:	4b15      	ldr	r3, [pc, #84]	; (800b1c0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b16c:	b08b      	sub	sp, #44	; 0x2c
 800b16e:	4617      	mov	r7, r2
 800b170:	f8b3 9000 	ldrh.w	r9, [r3]
 800b174:	460e      	mov	r6, r1
 800b176:	4604      	mov	r4, r0
 800b178:	f7f7 f9b2 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800b17c:	6803      	ldr	r3, [r0, #0]
 800b17e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b180:	4798      	blx	r3
 800b182:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b186:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b18a:	2302      	movs	r3, #2
 800b18c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b190:	2301      	movs	r3, #1
 800b192:	9305      	str	r3, [sp, #20]
 800b194:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b198:	9304      	str	r3, [sp, #16]
 800b19a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b19e:	9303      	str	r3, [sp, #12]
 800b1a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b1a4:	9302      	str	r3, [sp, #8]
 800b1a6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b1aa:	2200      	movs	r2, #0
 800b1ac:	e9cd 8300 	strd	r8, r3, [sp]
 800b1b0:	4631      	mov	r1, r6
 800b1b2:	463b      	mov	r3, r7
 800b1b4:	4620      	mov	r0, r4
 800b1b6:	47a8      	blx	r5
 800b1b8:	b00b      	add	sp, #44	; 0x2c
 800b1ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b1be:	bf00      	nop
 800b1c0:	20015482 	.word	0x20015482

0800b1c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b1c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b1c8:	4698      	mov	r8, r3
 800b1ca:	6803      	ldr	r3, [r0, #0]
 800b1cc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b1ce:	4b11      	ldr	r3, [pc, #68]	; (800b214 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b1d0:	b087      	sub	sp, #28
 800b1d2:	f8b3 9000 	ldrh.w	r9, [r3]
 800b1d6:	460e      	mov	r6, r1
 800b1d8:	4617      	mov	r7, r2
 800b1da:	4604      	mov	r4, r0
 800b1dc:	f7f7 f980 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800b1e0:	6803      	ldr	r3, [r0, #0]
 800b1e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1e4:	4798      	blx	r3
 800b1e6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b1ea:	f8cd 900c 	str.w	r9, [sp, #12]
 800b1ee:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b1f2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b1f6:	9302      	str	r3, [sp, #8]
 800b1f8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b1fc:	9301      	str	r3, [sp, #4]
 800b1fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b202:	9300      	str	r3, [sp, #0]
 800b204:	463a      	mov	r2, r7
 800b206:	4643      	mov	r3, r8
 800b208:	4631      	mov	r1, r6
 800b20a:	4620      	mov	r0, r4
 800b20c:	47a8      	blx	r5
 800b20e:	b007      	add	sp, #28
 800b210:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b214:	20015482 	.word	0x20015482

0800b218 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b21c:	4604      	mov	r4, r0
 800b21e:	b08f      	sub	sp, #60	; 0x3c
 800b220:	4610      	mov	r0, r2
 800b222:	460d      	mov	r5, r1
 800b224:	4691      	mov	r9, r2
 800b226:	461e      	mov	r6, r3
 800b228:	f008 ffa4 	bl	8014174 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b22c:	2800      	cmp	r0, #0
 800b22e:	f000 809d 	beq.w	800b36c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b232:	6823      	ldr	r3, [r4, #0]
 800b234:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b3d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b238:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b23a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b3d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b23e:	4f61      	ldr	r7, [pc, #388]	; (800b3c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b240:	4620      	mov	r0, r4
 800b242:	4798      	blx	r3
 800b244:	6823      	ldr	r3, [r4, #0]
 800b246:	4620      	mov	r0, r4
 800b248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b24a:	4798      	blx	r3
 800b24c:	f8bb 3000 	ldrh.w	r3, [fp]
 800b250:	9301      	str	r3, [sp, #4]
 800b252:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b256:	f8ba 3000 	ldrh.w	r3, [sl]
 800b25a:	9302      	str	r3, [sp, #8]
 800b25c:	883b      	ldrh	r3, [r7, #0]
 800b25e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b262:	9303      	str	r3, [sp, #12]
 800b264:	4b58      	ldr	r3, [pc, #352]	; (800b3c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b266:	9305      	str	r3, [sp, #20]
 800b268:	881a      	ldrh	r2, [r3, #0]
 800b26a:	9204      	str	r2, [sp, #16]
 800b26c:	4640      	mov	r0, r8
 800b26e:	f009 f815 	bl	801429c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b272:	8038      	strh	r0, [r7, #0]
 800b274:	4640      	mov	r0, r8
 800b276:	f009 f845 	bl	8014304 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b27a:	9b05      	ldr	r3, [sp, #20]
 800b27c:	b280      	uxth	r0, r0
 800b27e:	8018      	strh	r0, [r3, #0]
 800b280:	4b52      	ldr	r3, [pc, #328]	; (800b3cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b282:	781b      	ldrb	r3, [r3, #0]
 800b284:	2b00      	cmp	r3, #0
 800b286:	d174      	bne.n	800b372 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b288:	883b      	ldrh	r3, [r7, #0]
 800b28a:	f8ab 3000 	strh.w	r3, [fp]
 800b28e:	f8aa 0000 	strh.w	r0, [sl]
 800b292:	4648      	mov	r0, r9
 800b294:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b298:	f008 ff6c 	bl	8014174 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b29c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b2a0:	2200      	movs	r2, #0
 800b2a2:	4611      	mov	r1, r2
 800b2a4:	4628      	mov	r0, r5
 800b2a6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b2aa:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b2ae:	f7f7 fd3b 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 800b2b2:	2301      	movs	r3, #1
 800b2b4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b2b8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b2bc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b2c0:	2b00      	cmp	r3, #0
 800b2c2:	dd5c      	ble.n	800b37e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b2c4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b2c8:	2b00      	cmp	r3, #0
 800b2ca:	dd58      	ble.n	800b37e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b2cc:	462a      	mov	r2, r5
 800b2ce:	ab0a      	add	r3, sp, #40	; 0x28
 800b2d0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b2d4:	6851      	ldr	r1, [r2, #4]
 800b2d6:	c303      	stmia	r3!, {r0, r1}
 800b2d8:	4631      	mov	r1, r6
 800b2da:	a80a      	add	r0, sp, #40	; 0x28
 800b2dc:	f7ff fc0e 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800b2e0:	4b38      	ldr	r3, [pc, #224]	; (800b3c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b2e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b2e6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b2ea:	2100      	movs	r1, #0
 800b2ec:	aa0a      	add	r2, sp, #40	; 0x28
 800b2ee:	4b36      	ldr	r3, [pc, #216]	; (800b3c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b2f0:	910c      	str	r1, [sp, #48]	; 0x30
 800b2f2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b2f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b2fa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b2fe:	ab08      	add	r3, sp, #32
 800b300:	e883 0003 	stmia.w	r3, {r0, r1}
 800b304:	4618      	mov	r0, r3
 800b306:	a90c      	add	r1, sp, #48	; 0x30
 800b308:	f7ff fbf8 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800b30c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b30e:	2b00      	cmp	r3, #0
 800b310:	d13c      	bne.n	800b38c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b312:	2000      	movs	r0, #0
 800b314:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b318:	2600      	movs	r6, #0
 800b31a:	682a      	ldr	r2, [r5, #0]
 800b31c:	696b      	ldr	r3, [r5, #20]
 800b31e:	616e      	str	r6, [r5, #20]
 800b320:	9305      	str	r3, [sp, #20]
 800b322:	6892      	ldr	r2, [r2, #8]
 800b324:	a908      	add	r1, sp, #32
 800b326:	4628      	mov	r0, r5
 800b328:	4790      	blx	r2
 800b32a:	9b05      	ldr	r3, [sp, #20]
 800b32c:	616b      	str	r3, [r5, #20]
 800b32e:	4652      	mov	r2, sl
 800b330:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b334:	4649      	mov	r1, r9
 800b336:	4628      	mov	r0, r5
 800b338:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b33c:	f7f7 fcf4 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 800b340:	4b23      	ldr	r3, [pc, #140]	; (800b3d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b342:	9a01      	ldr	r2, [sp, #4]
 800b344:	801a      	strh	r2, [r3, #0]
 800b346:	4b23      	ldr	r3, [pc, #140]	; (800b3d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b348:	9a02      	ldr	r2, [sp, #8]
 800b34a:	801a      	strh	r2, [r3, #0]
 800b34c:	4b1d      	ldr	r3, [pc, #116]	; (800b3c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b34e:	9a03      	ldr	r2, [sp, #12]
 800b350:	801a      	strh	r2, [r3, #0]
 800b352:	4b1d      	ldr	r3, [pc, #116]	; (800b3c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b354:	9a04      	ldr	r2, [sp, #16]
 800b356:	801a      	strh	r2, [r3, #0]
 800b358:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b35c:	6823      	ldr	r3, [r4, #0]
 800b35e:	4620      	mov	r0, r4
 800b360:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b362:	4798      	blx	r3
 800b364:	6823      	ldr	r3, [r4, #0]
 800b366:	4620      	mov	r0, r4
 800b368:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b36a:	4798      	blx	r3
 800b36c:	b00f      	add	sp, #60	; 0x3c
 800b36e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b372:	883b      	ldrh	r3, [r7, #0]
 800b374:	f8ab 0000 	strh.w	r0, [fp]
 800b378:	f8aa 3000 	strh.w	r3, [sl]
 800b37c:	e789      	b.n	800b292 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b37e:	462a      	mov	r2, r5
 800b380:	ab0a      	add	r3, sp, #40	; 0x28
 800b382:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b386:	6851      	ldr	r1, [r2, #4]
 800b388:	c303      	stmia	r3!, {r0, r1}
 800b38a:	e7a9      	b.n	800b2e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b38c:	a807      	add	r0, sp, #28
 800b38e:	f009 f8f5 	bl	801457c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b392:	4606      	mov	r6, r0
 800b394:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b396:	6803      	ldr	r3, [r0, #0]
 800b398:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b39a:	4798      	blx	r3
 800b39c:	4286      	cmp	r6, r0
 800b39e:	d1b8      	bne.n	800b312 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b3a0:	f7f7 f89e 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800b3a4:	6803      	ldr	r3, [r0, #0]
 800b3a6:	4606      	mov	r6, r0
 800b3a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b3aa:	9305      	str	r3, [sp, #20]
 800b3ac:	a807      	add	r0, sp, #28
 800b3ae:	f009 f8e5 	bl	801457c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b3b2:	9b05      	ldr	r3, [sp, #20]
 800b3b4:	4601      	mov	r1, r0
 800b3b6:	4630      	mov	r0, r6
 800b3b8:	4798      	blx	r3
 800b3ba:	f080 0001 	eor.w	r0, r0, #1
 800b3be:	b2c0      	uxtb	r0, r0
 800b3c0:	e7a8      	b.n	800b314 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b3c2:	bf00      	nop
 800b3c4:	2001547c 	.word	0x2001547c
 800b3c8:	2001547e 	.word	0x2001547e
 800b3cc:	20015480 	.word	0x20015480
 800b3d0:	20015482 	.word	0x20015482
 800b3d4:	20015484 	.word	0x20015484

0800b3d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b3d8:	b510      	push	{r4, lr}
 800b3da:	4b07      	ldr	r3, [pc, #28]	; (800b3f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b3dc:	781b      	ldrb	r3, [r3, #0]
 800b3de:	4604      	mov	r4, r0
 800b3e0:	b13b      	cbz	r3, 800b3f2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b3e2:	6803      	ldr	r3, [r0, #0]
 800b3e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b3e6:	4798      	blx	r3
 800b3e8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b3ea:	4283      	cmp	r3, r0
 800b3ec:	d101      	bne.n	800b3f2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b3ee:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b3f0:	bd10      	pop	{r4, pc}
 800b3f2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b3f4:	e7fc      	b.n	800b3f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b3f6:	bf00      	nop
 800b3f8:	20015486 	.word	0x20015486

0800b3fc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b3fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b400:	b08a      	sub	sp, #40	; 0x28
 800b402:	461d      	mov	r5, r3
 800b404:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b408:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b40c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b410:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b414:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b418:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b41c:	2400      	movs	r4, #0
 800b41e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b422:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b426:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b42a:	4690      	mov	r8, r2
 800b42c:	4607      	mov	r7, r0
 800b42e:	9404      	str	r4, [sp, #16]
 800b430:	f88d 4020 	strb.w	r4, [sp, #32]
 800b434:	f7ff ffd0 	bl	800b3d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b438:	fb06 8505 	mla	r5, r6, r5, r8
 800b43c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b440:	6878      	ldr	r0, [r7, #4]
 800b442:	9505      	str	r5, [sp, #20]
 800b444:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b448:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b44c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b450:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b454:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b458:	6803      	ldr	r3, [r0, #0]
 800b45a:	a901      	add	r1, sp, #4
 800b45c:	685b      	ldr	r3, [r3, #4]
 800b45e:	4798      	blx	r3
 800b460:	b00a      	add	sp, #40	; 0x28
 800b462:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b466 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b466:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b46a:	b08b      	sub	sp, #44	; 0x2c
 800b46c:	2400      	movs	r4, #0
 800b46e:	461d      	mov	r5, r3
 800b470:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b474:	4688      	mov	r8, r1
 800b476:	4691      	mov	r9, r2
 800b478:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b47c:	9404      	str	r4, [sp, #16]
 800b47e:	4607      	mov	r7, r0
 800b480:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b484:	f7ff ffa8 	bl	800b3d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b488:	fb06 9505 	mla	r5, r6, r5, r9
 800b48c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b490:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b494:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b498:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b49c:	6878      	ldr	r0, [r7, #4]
 800b49e:	9505      	str	r5, [sp, #20]
 800b4a0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b4a4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b4a8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b4ac:	f8cd 8010 	str.w	r8, [sp, #16]
 800b4b0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b4b4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b4b8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b4bc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b4c0:	6803      	ldr	r3, [r0, #0]
 800b4c2:	a901      	add	r1, sp, #4
 800b4c4:	685b      	ldr	r3, [r3, #4]
 800b4c6:	4798      	blx	r3
 800b4c8:	b00b      	add	sp, #44	; 0x2c
 800b4ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b4d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b4d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4d4:	b08a      	sub	sp, #40	; 0x28
 800b4d6:	4698      	mov	r8, r3
 800b4d8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b4dc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b4e0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b4e4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b4e8:	2300      	movs	r3, #0
 800b4ea:	2d0b      	cmp	r5, #11
 800b4ec:	4606      	mov	r6, r0
 800b4ee:	9304      	str	r3, [sp, #16]
 800b4f0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b4f4:	d138      	bne.n	800b568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b4f6:	2380      	movs	r3, #128	; 0x80
 800b4f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b4fc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b500:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b504:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b508:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b50c:	f88d 0020 	strb.w	r0, [sp, #32]
 800b510:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b514:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b518:	4630      	mov	r0, r6
 800b51a:	9203      	str	r2, [sp, #12]
 800b51c:	f7ff ff5c 	bl	800b3d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b520:	2c0b      	cmp	r4, #11
 800b522:	bf98      	it	ls
 800b524:	4b1b      	ldrls	r3, [pc, #108]	; (800b594 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b526:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b52a:	bf98      	it	ls
 800b52c:	5d19      	ldrbls	r1, [r3, r4]
 800b52e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b532:	bf88      	it	hi
 800b534:	2100      	movhi	r1, #0
 800b536:	fb02 8307 	mla	r3, r2, r7, r8
 800b53a:	10c9      	asrs	r1, r1, #3
 800b53c:	fb01 0003 	mla	r0, r1, r3, r0
 800b540:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b544:	9005      	str	r0, [sp, #20]
 800b546:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b54a:	6870      	ldr	r0, [r6, #4]
 800b54c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b550:	2300      	movs	r3, #0
 800b552:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b556:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b55a:	6803      	ldr	r3, [r0, #0]
 800b55c:	a901      	add	r1, sp, #4
 800b55e:	685b      	ldr	r3, [r3, #4]
 800b560:	4798      	blx	r3
 800b562:	b00a      	add	sp, #40	; 0x28
 800b564:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b568:	2d02      	cmp	r5, #2
 800b56a:	d109      	bne.n	800b580 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b56c:	28ff      	cmp	r0, #255	; 0xff
 800b56e:	d105      	bne.n	800b57c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b570:	f1bc 0f00 	cmp.w	ip, #0
 800b574:	bf14      	ite	ne
 800b576:	2340      	movne	r3, #64	; 0x40
 800b578:	2320      	moveq	r3, #32
 800b57a:	e7bd      	b.n	800b4f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b57c:	2340      	movs	r3, #64	; 0x40
 800b57e:	e7bb      	b.n	800b4f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b580:	28ff      	cmp	r0, #255	; 0xff
 800b582:	d105      	bne.n	800b590 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b584:	f1bc 0f00 	cmp.w	ip, #0
 800b588:	bf14      	ite	ne
 800b58a:	2304      	movne	r3, #4
 800b58c:	2301      	moveq	r3, #1
 800b58e:	e7b3      	b.n	800b4f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b590:	2304      	movs	r3, #4
 800b592:	e7b1      	b.n	800b4f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b594:	080235ac 	.word	0x080235ac

0800b598 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b59c:	b08b      	sub	sp, #44	; 0x2c
 800b59e:	461d      	mov	r5, r3
 800b5a0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b5a4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b5a8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b5ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b5b0:	bf14      	ite	ne
 800b5b2:	2308      	movne	r3, #8
 800b5b4:	2302      	moveq	r3, #2
 800b5b6:	2400      	movs	r4, #0
 800b5b8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b5bc:	4688      	mov	r8, r1
 800b5be:	4693      	mov	fp, r2
 800b5c0:	9404      	str	r4, [sp, #16]
 800b5c2:	4607      	mov	r7, r0
 800b5c4:	f7ff ff08 	bl	800b3d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b5c8:	2e0b      	cmp	r6, #11
 800b5ca:	bf98      	it	ls
 800b5cc:	4b15      	ldrls	r3, [pc, #84]	; (800b624 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b5ce:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b5d2:	bf98      	it	ls
 800b5d4:	5d9c      	ldrbls	r4, [r3, r6]
 800b5d6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b5da:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b5de:	fb05 b50a 	mla	r5, r5, sl, fp
 800b5e2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b5e6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b5ea:	10e4      	asrs	r4, r4, #3
 800b5ec:	fb04 0405 	mla	r4, r4, r5, r0
 800b5f0:	2300      	movs	r3, #0
 800b5f2:	6878      	ldr	r0, [r7, #4]
 800b5f4:	9405      	str	r4, [sp, #20]
 800b5f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b5fa:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b5fe:	f8cd 8010 	str.w	r8, [sp, #16]
 800b602:	f88d 9020 	strb.w	r9, [sp, #32]
 800b606:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b60a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b60e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b612:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b616:	6803      	ldr	r3, [r0, #0]
 800b618:	a901      	add	r1, sp, #4
 800b61a:	685b      	ldr	r3, [r3, #4]
 800b61c:	4798      	blx	r3
 800b61e:	b00b      	add	sp, #44	; 0x2c
 800b620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b624:	080235ac 	.word	0x080235ac

0800b628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b62c:	461e      	mov	r6, r3
 800b62e:	4b0a      	ldr	r3, [pc, #40]	; (800b658 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b630:	460f      	mov	r7, r1
 800b632:	881d      	ldrh	r5, [r3, #0]
 800b634:	4690      	mov	r8, r2
 800b636:	f7f6 ff53 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800b63a:	6803      	ldr	r3, [r0, #0]
 800b63c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b63e:	4798      	blx	r3
 800b640:	280b      	cmp	r0, #11
 800b642:	bf9a      	itte	ls
 800b644:	4b05      	ldrls	r3, [pc, #20]	; (800b65c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b646:	5c1c      	ldrbls	r4, [r3, r0]
 800b648:	2400      	movhi	r4, #0
 800b64a:	fb08 7005 	mla	r0, r8, r5, r7
 800b64e:	10e4      	asrs	r4, r4, #3
 800b650:	fb04 6000 	mla	r0, r4, r0, r6
 800b654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b658:	20015482 	.word	0x20015482
 800b65c:	080235ac 	.word	0x080235ac

0800b660 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b660:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b662:	b08b      	sub	sp, #44	; 0x2c
 800b664:	461f      	mov	r7, r3
 800b666:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b66a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b66e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b672:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b676:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b67a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b67e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b682:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b686:	2500      	movs	r5, #0
 800b688:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b68c:	f88d 3020 	strb.w	r3, [sp, #32]
 800b690:	4604      	mov	r4, r0
 800b692:	4616      	mov	r6, r2
 800b694:	9504      	str	r5, [sp, #16]
 800b696:	f7ff fe9f 	bl	800b3d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b69a:	463a      	mov	r2, r7
 800b69c:	4631      	mov	r1, r6
 800b69e:	4603      	mov	r3, r0
 800b6a0:	4620      	mov	r0, r4
 800b6a2:	f7ff ffc1 	bl	800b628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b6a6:	4b0e      	ldr	r3, [pc, #56]	; (800b6e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b6a8:	9005      	str	r0, [sp, #20]
 800b6aa:	881b      	ldrh	r3, [r3, #0]
 800b6ac:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b6b0:	f7f6 ff16 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800b6b4:	6803      	ldr	r3, [r0, #0]
 800b6b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6b8:	4798      	blx	r3
 800b6ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b6bc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b6c0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b6c4:	9304      	str	r3, [sp, #16]
 800b6c6:	6860      	ldr	r0, [r4, #4]
 800b6c8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b6cc:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b6d0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b6d4:	6803      	ldr	r3, [r0, #0]
 800b6d6:	a901      	add	r1, sp, #4
 800b6d8:	685b      	ldr	r3, [r3, #4]
 800b6da:	4798      	blx	r3
 800b6dc:	b00b      	add	sp, #44	; 0x2c
 800b6de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b6e0:	20015482 	.word	0x20015482

0800b6e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b6e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b6e6:	b08d      	sub	sp, #52	; 0x34
 800b6e8:	466b      	mov	r3, sp
 800b6ea:	e883 0006 	stmia.w	r3, {r1, r2}
 800b6ee:	2300      	movs	r3, #0
 800b6f0:	9306      	str	r3, [sp, #24]
 800b6f2:	6803      	ldr	r3, [r0, #0]
 800b6f4:	f8bd 6000 	ldrh.w	r6, [sp]
 800b6f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b6fa:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b6fe:	2501      	movs	r5, #1
 800b700:	9503      	str	r5, [sp, #12]
 800b702:	4604      	mov	r4, r0
 800b704:	4798      	blx	r3
 800b706:	463a      	mov	r2, r7
 800b708:	4631      	mov	r1, r6
 800b70a:	4603      	mov	r3, r0
 800b70c:	4620      	mov	r0, r4
 800b70e:	f7ff ff8b 	bl	800b628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b712:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b714:	9307      	str	r3, [sp, #28]
 800b716:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b71a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b71e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b722:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b726:	4b0f      	ldr	r3, [pc, #60]	; (800b764 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b728:	9004      	str	r0, [sp, #16]
 800b72a:	881b      	ldrh	r3, [r3, #0]
 800b72c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b730:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b734:	f7f6 fed4 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800b738:	6803      	ldr	r3, [r0, #0]
 800b73a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b73c:	4798      	blx	r3
 800b73e:	23ff      	movs	r3, #255	; 0xff
 800b740:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b744:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b748:	6860      	ldr	r0, [r4, #4]
 800b74a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b74e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b752:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b756:	6803      	ldr	r3, [r0, #0]
 800b758:	a903      	add	r1, sp, #12
 800b75a:	685b      	ldr	r3, [r3, #4]
 800b75c:	4798      	blx	r3
 800b75e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b760:	b00d      	add	sp, #52	; 0x34
 800b762:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b764:	20015482 	.word	0x20015482

0800b768 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b76c:	b08c      	sub	sp, #48	; 0x30
 800b76e:	461e      	mov	r6, r3
 800b770:	466d      	mov	r5, sp
 800b772:	2300      	movs	r3, #0
 800b774:	e885 0006 	stmia.w	r5, {r1, r2}
 800b778:	9306      	str	r3, [sp, #24]
 800b77a:	6803      	ldr	r3, [r0, #0]
 800b77c:	f8bd 7000 	ldrh.w	r7, [sp]
 800b780:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b782:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b786:	2501      	movs	r5, #1
 800b788:	9503      	str	r5, [sp, #12]
 800b78a:	4604      	mov	r4, r0
 800b78c:	4798      	blx	r3
 800b78e:	4642      	mov	r2, r8
 800b790:	4639      	mov	r1, r7
 800b792:	4603      	mov	r3, r0
 800b794:	4620      	mov	r0, r4
 800b796:	f7ff ff47 	bl	800b628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b79a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b79e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b7a2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b7a6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b7aa:	4b11      	ldr	r3, [pc, #68]	; (800b7f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b7ac:	9004      	str	r0, [sp, #16]
 800b7ae:	881b      	ldrh	r3, [r3, #0]
 800b7b0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b7b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b7b6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b7ba:	9607      	str	r6, [sp, #28]
 800b7bc:	f7f6 fe90 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800b7c0:	6803      	ldr	r3, [r0, #0]
 800b7c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b7c4:	4798      	blx	r3
 800b7c6:	23ff      	movs	r3, #255	; 0xff
 800b7c8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b7cc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b7d0:	6860      	ldr	r0, [r4, #4]
 800b7d2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b7d6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b7da:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b7de:	6803      	ldr	r3, [r0, #0]
 800b7e0:	a903      	add	r1, sp, #12
 800b7e2:	685b      	ldr	r3, [r3, #4]
 800b7e4:	4798      	blx	r3
 800b7e6:	4630      	mov	r0, r6
 800b7e8:	b00c      	add	sp, #48	; 0x30
 800b7ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b7ee:	bf00      	nop
 800b7f0:	20015482 	.word	0x20015482

0800b7f4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b7f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b7f6:	b085      	sub	sp, #20
 800b7f8:	ac02      	add	r4, sp, #8
 800b7fa:	e884 0006 	stmia.w	r4, {r1, r2}
 800b7fe:	4605      	mov	r5, r0
 800b800:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b804:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b808:	f7ff fde6 	bl	800b3d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b80c:	463a      	mov	r2, r7
 800b80e:	4603      	mov	r3, r0
 800b810:	4631      	mov	r1, r6
 800b812:	4628      	mov	r0, r5
 800b814:	f7ff ff08 	bl	800b628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b818:	4a05      	ldr	r2, [pc, #20]	; (800b830 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b81a:	682b      	ldr	r3, [r5, #0]
 800b81c:	8812      	ldrh	r2, [r2, #0]
 800b81e:	9200      	str	r2, [sp, #0]
 800b820:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800b822:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b826:	4603      	mov	r3, r0
 800b828:	4628      	mov	r0, r5
 800b82a:	47b0      	blx	r6
 800b82c:	b005      	add	sp, #20
 800b82e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b830:	20015482 	.word	0x20015482

0800b834 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b834:	b570      	push	{r4, r5, r6, lr}
 800b836:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b83a:	4604      	mov	r4, r0
 800b83c:	b19b      	cbz	r3, 800b866 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b83e:	2002      	movs	r0, #2
 800b840:	f7f4 ff80 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b844:	2300      	movs	r3, #0
 800b846:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b84a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b84e:	6823      	ldr	r3, [r4, #0]
 800b850:	4620      	mov	r0, r4
 800b852:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800b856:	f7ff fdbf 	bl	800b3d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b85a:	462b      	mov	r3, r5
 800b85c:	4601      	mov	r1, r0
 800b85e:	4620      	mov	r0, r4
 800b860:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b864:	4718      	bx	r3
 800b866:	bd70      	pop	{r4, r5, r6, pc}

0800b868 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b868:	b538      	push	{r3, r4, r5, lr}
 800b86a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800b86e:	428b      	cmp	r3, r1
 800b870:	4604      	mov	r4, r0
 800b872:	460d      	mov	r5, r1
 800b874:	d006      	beq.n	800b884 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b876:	6803      	ldr	r3, [r0, #0]
 800b878:	b929      	cbnz	r1, 800b886 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b87a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b87e:	4798      	blx	r3
 800b880:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800b884:	bd38      	pop	{r3, r4, r5, pc}
 800b886:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800b88a:	e7f8      	b.n	800b87e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b88c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b88c:	b510      	push	{r4, lr}
 800b88e:	4b0d      	ldr	r3, [pc, #52]	; (800b8c4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b890:	781b      	ldrb	r3, [r3, #0]
 800b892:	4604      	mov	r4, r0
 800b894:	b95b      	cbnz	r3, 800b8ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b896:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b89a:	2b02      	cmp	r3, #2
 800b89c:	d007      	beq.n	800b8ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b89e:	6840      	ldr	r0, [r0, #4]
 800b8a0:	f000 f92a 	bl	800baf8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b8a4:	b118      	cbz	r0, 800b8ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b8a6:	6862      	ldr	r2, [r4, #4]
 800b8a8:	7a53      	ldrb	r3, [r2, #9]
 800b8aa:	2b00      	cmp	r3, #0
 800b8ac:	d0fc      	beq.n	800b8a8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b8ae:	f7f5 f843 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b8b2:	4620      	mov	r0, r4
 800b8b4:	2100      	movs	r1, #0
 800b8b6:	f7ff ffd7 	bl	800b868 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b8ba:	4620      	mov	r0, r4
 800b8bc:	f7ff fd8c 	bl	800b3d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b8c0:	bd10      	pop	{r4, pc}
 800b8c2:	bf00      	nop
 800b8c4:	20015486 	.word	0x20015486

0800b8c8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b8c8:	b570      	push	{r4, r5, r6, lr}
 800b8ca:	4604      	mov	r4, r0
 800b8cc:	6803      	ldr	r3, [r0, #0]
 800b8ce:	b919      	cbnz	r1, 800b8d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b8d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b8d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b8d6:	4718      	bx	r3
 800b8d8:	2200      	movs	r2, #0
 800b8da:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800b8de:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800b8e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b8e4:	4798      	blx	r3
 800b8e6:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800b8ea:	4605      	mov	r5, r0
 800b8ec:	2101      	movs	r1, #1
 800b8ee:	4620      	mov	r0, r4
 800b8f0:	f7ff ffba 	bl	800b868 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b8f4:	4628      	mov	r0, r5
 800b8f6:	bd70      	pop	{r4, r5, r6, pc}

0800b8f8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b8f8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b8fc:	1a13      	subs	r3, r2, r0
 800b8fe:	4258      	negs	r0, r3
 800b900:	4158      	adcs	r0, r3
 800b902:	4770      	bx	lr

0800b904 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b904:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b908:	1a9b      	subs	r3, r3, r2
 800b90a:	2b00      	cmp	r3, #0
 800b90c:	bfdc      	itt	le
 800b90e:	6882      	ldrle	r2, [r0, #8]
 800b910:	189b      	addle	r3, r3, r2
 800b912:	2b01      	cmp	r3, #1
 800b914:	bfcc      	ite	gt
 800b916:	2000      	movgt	r0, #0
 800b918:	2001      	movle	r0, #1
 800b91a:	4770      	bx	lr

0800b91c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b91c:	6902      	ldr	r2, [r0, #16]
 800b91e:	6843      	ldr	r3, [r0, #4]
 800b920:	2024      	movs	r0, #36	; 0x24
 800b922:	fb00 3002 	mla	r0, r0, r2, r3
 800b926:	4770      	bx	lr

0800b928 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b928:	6803      	ldr	r3, [r0, #0]
 800b92a:	691b      	ldr	r3, [r3, #16]
 800b92c:	4718      	bx	r3

0800b92e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b92e:	b570      	push	{r4, r5, r6, lr}
 800b930:	2301      	movs	r3, #1
 800b932:	7203      	strb	r3, [r0, #8]
 800b934:	4604      	mov	r4, r0
 800b936:	6840      	ldr	r0, [r0, #4]
 800b938:	6803      	ldr	r3, [r0, #0]
 800b93a:	699b      	ldr	r3, [r3, #24]
 800b93c:	4798      	blx	r3
 800b93e:	6803      	ldr	r3, [r0, #0]
 800b940:	2b40      	cmp	r3, #64	; 0x40
 800b942:	4605      	mov	r5, r0
 800b944:	d00c      	beq.n	800b960 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b946:	d810      	bhi.n	800b96a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b948:	2b04      	cmp	r3, #4
 800b94a:	d01d      	beq.n	800b988 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b94c:	d804      	bhi.n	800b958 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b94e:	2b01      	cmp	r3, #1
 800b950:	d006      	beq.n	800b960 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b952:	2b02      	cmp	r3, #2
 800b954:	d02c      	beq.n	800b9b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b956:	bd70      	pop	{r4, r5, r6, pc}
 800b958:	2b08      	cmp	r3, #8
 800b95a:	d01d      	beq.n	800b998 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b95c:	2b20      	cmp	r3, #32
 800b95e:	d1fa      	bne.n	800b956 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b960:	6823      	ldr	r3, [r4, #0]
 800b962:	4620      	mov	r0, r4
 800b964:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b966:	4798      	blx	r3
 800b968:	e013      	b.n	800b992 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b96a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b96e:	d0f7      	beq.n	800b960 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b970:	d804      	bhi.n	800b97c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b972:	2b80      	cmp	r3, #128	; 0x80
 800b974:	d0f4      	beq.n	800b960 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b976:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b97a:	e7f0      	b.n	800b95e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b97c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b980:	d0ee      	beq.n	800b960 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b982:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b986:	e7e5      	b.n	800b954 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b988:	6823      	ldr	r3, [r4, #0]
 800b98a:	7f01      	ldrb	r1, [r0, #28]
 800b98c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b98e:	4620      	mov	r0, r4
 800b990:	4798      	blx	r3
 800b992:	6823      	ldr	r3, [r4, #0]
 800b994:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b996:	e006      	b.n	800b9a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b998:	6823      	ldr	r3, [r4, #0]
 800b99a:	7f01      	ldrb	r1, [r0, #28]
 800b99c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b99e:	4620      	mov	r0, r4
 800b9a0:	4798      	blx	r3
 800b9a2:	6823      	ldr	r3, [r4, #0]
 800b9a4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b9a6:	4629      	mov	r1, r5
 800b9a8:	4620      	mov	r0, r4
 800b9aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9ae:	4718      	bx	r3
 800b9b0:	6823      	ldr	r3, [r4, #0]
 800b9b2:	4620      	mov	r0, r4
 800b9b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b9b6:	4798      	blx	r3
 800b9b8:	e7f3      	b.n	800b9a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b9ba <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b9ba:	4770      	bx	lr

0800b9bc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b9bc:	4770      	bx	lr

0800b9be <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b9be:	4770      	bx	lr

0800b9c0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b9c0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b9c4:	1ad2      	subs	r2, r2, r3
 800b9c6:	2a00      	cmp	r2, #0
 800b9c8:	b510      	push	{r4, lr}
 800b9ca:	bfdc      	itt	le
 800b9cc:	6884      	ldrle	r4, [r0, #8]
 800b9ce:	1912      	addle	r2, r2, r4
 800b9d0:	2a01      	cmp	r2, #1
 800b9d2:	dd16      	ble.n	800ba02 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b9d4:	6842      	ldr	r2, [r0, #4]
 800b9d6:	2424      	movs	r4, #36	; 0x24
 800b9d8:	fb04 2303 	mla	r3, r4, r3, r2
 800b9dc:	f101 0220 	add.w	r2, r1, #32
 800b9e0:	f851 4b04 	ldr.w	r4, [r1], #4
 800b9e4:	f843 4b04 	str.w	r4, [r3], #4
 800b9e8:	4291      	cmp	r1, r2
 800b9ea:	d1f9      	bne.n	800b9e0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b9ec:	780a      	ldrb	r2, [r1, #0]
 800b9ee:	701a      	strb	r2, [r3, #0]
 800b9f0:	68c3      	ldr	r3, [r0, #12]
 800b9f2:	6882      	ldr	r2, [r0, #8]
 800b9f4:	f3bf 8f5b 	dmb	ish
 800b9f8:	3301      	adds	r3, #1
 800b9fa:	429a      	cmp	r2, r3
 800b9fc:	bfd8      	it	le
 800b9fe:	1a9b      	suble	r3, r3, r2
 800ba00:	60c3      	str	r3, [r0, #12]
 800ba02:	bd10      	pop	{r4, pc}

0800ba04 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800ba04:	6903      	ldr	r3, [r0, #16]
 800ba06:	6882      	ldr	r2, [r0, #8]
 800ba08:	f3bf 8f5b 	dmb	ish
 800ba0c:	3301      	adds	r3, #1
 800ba0e:	429a      	cmp	r2, r3
 800ba10:	bfd8      	it	le
 800ba12:	1a9b      	suble	r3, r3, r2
 800ba14:	6103      	str	r3, [r0, #16]
 800ba16:	4770      	bx	lr

0800ba18 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ba18:	b570      	push	{r4, r5, r6, lr}
 800ba1a:	4604      	mov	r4, r0
 800ba1c:	460e      	mov	r6, r1
 800ba1e:	6860      	ldr	r0, [r4, #4]
 800ba20:	6803      	ldr	r3, [r0, #0]
 800ba22:	685b      	ldr	r3, [r3, #4]
 800ba24:	4798      	blx	r3
 800ba26:	2800      	cmp	r0, #0
 800ba28:	d1f9      	bne.n	800ba1e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ba2a:	4d0d      	ldr	r5, [pc, #52]	; (800ba60 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800ba2c:	6828      	ldr	r0, [r5, #0]
 800ba2e:	6803      	ldr	r3, [r0, #0]
 800ba30:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ba32:	4798      	blx	r3
 800ba34:	f7f4 ff8e 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ba38:	6828      	ldr	r0, [r5, #0]
 800ba3a:	2101      	movs	r1, #1
 800ba3c:	f7ff ff14 	bl	800b868 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ba40:	6860      	ldr	r0, [r4, #4]
 800ba42:	6803      	ldr	r3, [r0, #0]
 800ba44:	4631      	mov	r1, r6
 800ba46:	689b      	ldr	r3, [r3, #8]
 800ba48:	4798      	blx	r3
 800ba4a:	6823      	ldr	r3, [r4, #0]
 800ba4c:	4620      	mov	r0, r4
 800ba4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba50:	4798      	blx	r3
 800ba52:	6828      	ldr	r0, [r5, #0]
 800ba54:	6803      	ldr	r3, [r0, #0]
 800ba56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba5a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ba5c:	4718      	bx	r3
 800ba5e:	bf00      	nop
 800ba60:	20015488 	.word	0x20015488

0800ba64 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800ba64:	b508      	push	{r3, lr}
 800ba66:	f7f4 ff67 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ba6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ba6e:	f7f4 bf6b 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ba72 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ba72:	b510      	push	{r4, lr}
 800ba74:	2114      	movs	r1, #20
 800ba76:	4604      	mov	r4, r0
 800ba78:	f014 fcfc 	bl	8020474 <_ZdlPvj>
 800ba7c:	4620      	mov	r0, r4
 800ba7e:	bd10      	pop	{r4, pc}

0800ba80 <_ZN8touchgfx13DMA_Interface5startEv>:
 800ba80:	b510      	push	{r4, lr}
 800ba82:	4604      	mov	r4, r0
 800ba84:	6840      	ldr	r0, [r0, #4]
 800ba86:	6803      	ldr	r3, [r0, #0]
 800ba88:	681b      	ldr	r3, [r3, #0]
 800ba8a:	4798      	blx	r3
 800ba8c:	b948      	cbnz	r0, 800baa2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ba8e:	7a63      	ldrb	r3, [r4, #9]
 800ba90:	b13b      	cbz	r3, 800baa2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ba92:	7a23      	ldrb	r3, [r4, #8]
 800ba94:	b92b      	cbnz	r3, 800baa2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ba96:	6823      	ldr	r3, [r4, #0]
 800ba98:	4620      	mov	r0, r4
 800ba9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800baa0:	4718      	bx	r3
 800baa2:	bd10      	pop	{r4, pc}

0800baa4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800baa4:	b570      	push	{r4, r5, r6, lr}
 800baa6:	4604      	mov	r4, r0
 800baa8:	6840      	ldr	r0, [r0, #4]
 800baaa:	6803      	ldr	r3, [r0, #0]
 800baac:	681b      	ldr	r3, [r3, #0]
 800baae:	4798      	blx	r3
 800bab0:	4605      	mov	r5, r0
 800bab2:	b930      	cbnz	r0, 800bac2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bab4:	7a23      	ldrb	r3, [r4, #8]
 800bab6:	b123      	cbz	r3, 800bac2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bab8:	6860      	ldr	r0, [r4, #4]
 800baba:	6803      	ldr	r3, [r0, #0]
 800babc:	695b      	ldr	r3, [r3, #20]
 800babe:	4798      	blx	r3
 800bac0:	7225      	strb	r5, [r4, #8]
 800bac2:	6860      	ldr	r0, [r4, #4]
 800bac4:	6803      	ldr	r3, [r0, #0]
 800bac6:	681b      	ldr	r3, [r3, #0]
 800bac8:	4798      	blx	r3
 800baca:	b928      	cbnz	r0, 800bad8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bacc:	6823      	ldr	r3, [r4, #0]
 800bace:	4620      	mov	r0, r4
 800bad0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bad2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bad6:	4718      	bx	r3
 800bad8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800badc:	f7f4 bf42 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bae0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bae0:	b510      	push	{r4, lr}
 800bae2:	4c04      	ldr	r4, [pc, #16]	; (800baf4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bae4:	6082      	str	r2, [r0, #8]
 800bae6:	2200      	movs	r2, #0
 800bae8:	e9c0 4100 	strd	r4, r1, [r0]
 800baec:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800baf0:	bd10      	pop	{r4, pc}
 800baf2:	bf00      	nop
 800baf4:	080235c0 	.word	0x080235c0

0800baf8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800baf8:	6840      	ldr	r0, [r0, #4]
 800bafa:	6803      	ldr	r3, [r0, #0]
 800bafc:	681b      	ldr	r3, [r3, #0]
 800bafe:	4718      	bx	r3

0800bb00 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bb00:	4b06      	ldr	r3, [pc, #24]	; (800bb1c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800bb02:	60c1      	str	r1, [r0, #12]
 800bb04:	094a      	lsrs	r2, r1, #5
 800bb06:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800bb0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bb0e:	4313      	orrs	r3, r2
 800bb10:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800bb14:	4319      	orrs	r1, r3
 800bb16:	8201      	strh	r1, [r0, #16]
 800bb18:	4770      	bx	lr
 800bb1a:	bf00      	nop
 800bb1c:	fffff800 	.word	0xfffff800

0800bb20 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bb20:	f1a0 0008 	sub.w	r0, r0, #8
 800bb24:	e7ec      	b.n	800bb00 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800bb26:	bf00      	nop

0800bb28 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bb28:	b508      	push	{r3, lr}
 800bb2a:	4b05      	ldr	r3, [pc, #20]	; (800bb40 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800bb2c:	6818      	ldr	r0, [r3, #0]
 800bb2e:	6803      	ldr	r3, [r0, #0]
 800bb30:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bb34:	4798      	blx	r3
 800bb36:	1e43      	subs	r3, r0, #1
 800bb38:	4258      	negs	r0, r3
 800bb3a:	4158      	adcs	r0, r3
 800bb3c:	bd08      	pop	{r3, pc}
 800bb3e:	bf00      	nop
 800bb40:	20015488 	.word	0x20015488

0800bb44 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bb44:	4770      	bx	lr

0800bb46 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bb46:	3808      	subs	r0, #8
 800bb48:	4770      	bx	lr

0800bb4a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bb4a:	b430      	push	{r4, r5}
 800bb4c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bb50:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bb54:	8a02      	ldrh	r2, [r0, #16]
 800bb56:	9202      	str	r2, [sp, #8]
 800bb58:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800bb5c:	68c2      	ldr	r2, [r0, #12]
 800bb5e:	4629      	mov	r1, r5
 800bb60:	4620      	mov	r0, r4
 800bb62:	bc30      	pop	{r4, r5}
 800bb64:	f7f5 b8bc 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bb68 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bb68:	f7f5 b8b0 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800bb6c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bb6c:	b510      	push	{r4, lr}
 800bb6e:	2114      	movs	r1, #20
 800bb70:	4604      	mov	r4, r0
 800bb72:	f014 fc7f 	bl	8020474 <_ZdlPvj>
 800bb76:	4620      	mov	r0, r4
 800bb78:	bd10      	pop	{r4, pc}

0800bb7a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800bb7a:	f1a0 0008 	sub.w	r0, r0, #8
 800bb7e:	e7f5      	b.n	800bb6c <_ZN8touchgfx13PainterRGB565D0Ev>

0800bb80 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800bb80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bb82:	6803      	ldr	r3, [r0, #0]
 800bb84:	460d      	mov	r5, r1
 800bb86:	4604      	mov	r4, r0
 800bb88:	4601      	mov	r1, r0
 800bb8a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bb8c:	a802      	add	r0, sp, #8
 800bb8e:	4798      	blx	r3
 800bb90:	6828      	ldr	r0, [r5, #0]
 800bb92:	6869      	ldr	r1, [r5, #4]
 800bb94:	466b      	mov	r3, sp
 800bb96:	c303      	stmia	r3!, {r0, r1}
 800bb98:	4668      	mov	r0, sp
 800bb9a:	4619      	mov	r1, r3
 800bb9c:	f7fe ffae 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800bba0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bba2:	b1a8      	cbz	r0, 800bbd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bba4:	6803      	ldr	r3, [r0, #0]
 800bba6:	1d21      	adds	r1, r4, #4
 800bba8:	68db      	ldr	r3, [r3, #12]
 800bbaa:	4798      	blx	r3
 800bbac:	b180      	cbz	r0, 800bbd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bbae:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bbb2:	2b00      	cmp	r3, #0
 800bbb4:	dd0c      	ble.n	800bbd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bbb6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800bbba:	2d00      	cmp	r5, #0
 800bbbc:	dd08      	ble.n	800bbd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bbbe:	4a2d      	ldr	r2, [pc, #180]	; (800bc74 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800bbc0:	7812      	ldrb	r2, [r2, #0]
 800bbc2:	b13a      	cbz	r2, 800bbd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800bbc4:	2a01      	cmp	r2, #1
 800bbc6:	d02d      	beq.n	800bc24 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800bbc8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bbca:	6803      	ldr	r3, [r0, #0]
 800bbcc:	691b      	ldr	r3, [r3, #16]
 800bbce:	4798      	blx	r3
 800bbd0:	b004      	add	sp, #16
 800bbd2:	bd70      	pop	{r4, r5, r6, pc}
 800bbd4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bbd8:	441d      	add	r5, r3
 800bbda:	b2ad      	uxth	r5, r5
 800bbdc:	b22e      	sxth	r6, r5
 800bbde:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800bbe2:	42b3      	cmp	r3, r6
 800bbe4:	daf0      	bge.n	800bbc8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bbe6:	6823      	ldr	r3, [r4, #0]
 800bbe8:	4669      	mov	r1, sp
 800bbea:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bbec:	4620      	mov	r0, r4
 800bbee:	4798      	blx	r3
 800bbf0:	b940      	cbnz	r0, 800bc04 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800bbf2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bbf6:	2b01      	cmp	r3, #1
 800bbf8:	d004      	beq.n	800bc04 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800bbfa:	3301      	adds	r3, #1
 800bbfc:	105b      	asrs	r3, r3, #1
 800bbfe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bc02:	e7f0      	b.n	800bbe6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800bc04:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800bc08:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bc0c:	4413      	add	r3, r2
 800bc0e:	b29b      	uxth	r3, r3
 800bc10:	441a      	add	r2, r3
 800bc12:	b212      	sxth	r2, r2
 800bc14:	4296      	cmp	r6, r2
 800bc16:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bc1a:	dae0      	bge.n	800bbde <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bc1c:	1aeb      	subs	r3, r5, r3
 800bc1e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bc22:	e7dc      	b.n	800bbde <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bc24:	f8bd 5000 	ldrh.w	r5, [sp]
 800bc28:	441d      	add	r5, r3
 800bc2a:	b2ad      	uxth	r5, r5
 800bc2c:	b22e      	sxth	r6, r5
 800bc2e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bc32:	42b3      	cmp	r3, r6
 800bc34:	dac8      	bge.n	800bbc8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bc36:	6823      	ldr	r3, [r4, #0]
 800bc38:	4669      	mov	r1, sp
 800bc3a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bc3c:	4620      	mov	r0, r4
 800bc3e:	4798      	blx	r3
 800bc40:	b940      	cbnz	r0, 800bc54 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bc42:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bc46:	2b01      	cmp	r3, #1
 800bc48:	d004      	beq.n	800bc54 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bc4a:	3301      	adds	r3, #1
 800bc4c:	105b      	asrs	r3, r3, #1
 800bc4e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bc52:	e7f0      	b.n	800bc36 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800bc54:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800bc58:	f8bd 3000 	ldrh.w	r3, [sp]
 800bc5c:	4413      	add	r3, r2
 800bc5e:	b29b      	uxth	r3, r3
 800bc60:	441a      	add	r2, r3
 800bc62:	b212      	sxth	r2, r2
 800bc64:	4296      	cmp	r6, r2
 800bc66:	f8ad 3000 	strh.w	r3, [sp]
 800bc6a:	dae0      	bge.n	800bc2e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bc6c:	1aeb      	subs	r3, r5, r3
 800bc6e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bc72:	e7dc      	b.n	800bc2e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bc74:	20015480 	.word	0x20015480

0800bc78 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800bc78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bc7a:	6803      	ldr	r3, [r0, #0]
 800bc7c:	4604      	mov	r4, r0
 800bc7e:	4601      	mov	r1, r0
 800bc80:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bc82:	4668      	mov	r0, sp
 800bc84:	4798      	blx	r3
 800bc86:	2100      	movs	r1, #0
 800bc88:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bc8c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bc90:	9102      	str	r1, [sp, #8]
 800bc92:	4668      	mov	r0, sp
 800bc94:	a902      	add	r1, sp, #8
 800bc96:	f8ad 200c 	strh.w	r2, [sp, #12]
 800bc9a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800bc9e:	f7fe ff2d 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800bca2:	6823      	ldr	r3, [r4, #0]
 800bca4:	4669      	mov	r1, sp
 800bca6:	691b      	ldr	r3, [r3, #16]
 800bca8:	4620      	mov	r0, r4
 800bcaa:	4798      	blx	r3
 800bcac:	b004      	add	sp, #16
 800bcae:	bd10      	pop	{r4, pc}

0800bcb0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800bcb0:	2101      	movs	r1, #1
 800bcb2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800bcb6:	490b      	ldr	r1, [pc, #44]	; (800bce4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800bcb8:	6001      	str	r1, [r0, #0]
 800bcba:	2200      	movs	r2, #0
 800bcbc:	21ff      	movs	r1, #255	; 0xff
 800bcbe:	8082      	strh	r2, [r0, #4]
 800bcc0:	80c2      	strh	r2, [r0, #6]
 800bcc2:	8102      	strh	r2, [r0, #8]
 800bcc4:	8142      	strh	r2, [r0, #10]
 800bcc6:	8182      	strh	r2, [r0, #12]
 800bcc8:	81c2      	strh	r2, [r0, #14]
 800bcca:	8202      	strh	r2, [r0, #16]
 800bccc:	8242      	strh	r2, [r0, #18]
 800bcce:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bcd2:	61c2      	str	r2, [r0, #28]
 800bcd4:	8402      	strh	r2, [r0, #32]
 800bcd6:	8442      	strh	r2, [r0, #34]	; 0x22
 800bcd8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bcdc:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800bce0:	6282      	str	r2, [r0, #40]	; 0x28
 800bce2:	4770      	bx	lr
 800bce4:	0802361c 	.word	0x0802361c

0800bce8 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800bce8:	6301      	str	r1, [r0, #48]	; 0x30
 800bcea:	4770      	bx	lr

0800bcec <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800bcec:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bcee:	4770      	bx	lr

0800bcf0 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800bcf0:	6341      	str	r1, [r0, #52]	; 0x34
 800bcf2:	4770      	bx	lr

0800bcf4 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800bcf4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800bcf6:	4770      	bx	lr

0800bcf8 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800bcf8:	4770      	bx	lr

0800bcfa <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800bcfa:	4608      	mov	r0, r1
 800bcfc:	4770      	bx	lr

0800bcfe <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800bcfe:	4608      	mov	r0, r1
 800bd00:	4770      	bx	lr

0800bd02 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800bd02:	b530      	push	{r4, r5, lr}
 800bd04:	460d      	mov	r5, r1
 800bd06:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bd08:	8949      	ldrh	r1, [r1, #10]
 800bd0a:	1ac9      	subs	r1, r1, r3
 800bd0c:	6803      	ldr	r3, [r0, #0]
 800bd0e:	b085      	sub	sp, #20
 800bd10:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800bd14:	f10d 0206 	add.w	r2, sp, #6
 800bd18:	b209      	sxth	r1, r1
 800bd1a:	4604      	mov	r4, r0
 800bd1c:	4798      	blx	r3
 800bd1e:	b1a0      	cbz	r0, 800bd4a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bd20:	792b      	ldrb	r3, [r5, #4]
 800bd22:	b993      	cbnz	r3, 800bd4a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bd24:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bd28:	b178      	cbz	r0, 800bd4a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bd2a:	6803      	ldr	r3, [r0, #0]
 800bd2c:	68db      	ldr	r3, [r3, #12]
 800bd2e:	4798      	blx	r3
 800bd30:	b158      	cbz	r0, 800bd4a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bd32:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bd36:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bd3a:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bd3e:	9503      	str	r5, [sp, #12]
 800bd40:	6803      	ldr	r3, [r0, #0]
 800bd42:	aa02      	add	r2, sp, #8
 800bd44:	689b      	ldr	r3, [r3, #8]
 800bd46:	4621      	mov	r1, r4
 800bd48:	4798      	blx	r3
 800bd4a:	b005      	add	sp, #20
 800bd4c:	bd30      	pop	{r4, r5, pc}

0800bd4e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800bd4e:	b510      	push	{r4, lr}
 800bd50:	428a      	cmp	r2, r1
 800bd52:	bfbe      	ittt	lt
 800bd54:	460b      	movlt	r3, r1
 800bd56:	4611      	movlt	r1, r2
 800bd58:	461a      	movlt	r2, r3
 800bd5a:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800bd5e:	428b      	cmp	r3, r1
 800bd60:	4604      	mov	r4, r0
 800bd62:	d103      	bne.n	800bd6c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800bd64:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800bd68:	4293      	cmp	r3, r2
 800bd6a:	d011      	beq.n	800bd90 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800bd6c:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800bd70:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800bd74:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800bd78:	f005 fff7 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bd7c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bd80:	f005 fff3 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bd84:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800bd88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd8c:	f005 bfed 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bd90:	bd10      	pop	{r4, pc}

0800bd92 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800bd92:	b510      	push	{r4, lr}
 800bd94:	428a      	cmp	r2, r1
 800bd96:	bfbe      	ittt	lt
 800bd98:	460b      	movlt	r3, r1
 800bd9a:	4611      	movlt	r1, r2
 800bd9c:	461a      	movlt	r2, r3
 800bd9e:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800bda2:	428b      	cmp	r3, r1
 800bda4:	4604      	mov	r4, r0
 800bda6:	d103      	bne.n	800bdb0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800bda8:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800bdac:	4293      	cmp	r3, r2
 800bdae:	d011      	beq.n	800bdd4 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800bdb0:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800bdb4:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800bdb8:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800bdbc:	f005 ffd5 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bdc0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bdc4:	f005 ffd1 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bdc8:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800bdcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdd0:	f005 bfcb 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 800bdd4:	bd10      	pop	{r4, pc}

0800bdd6 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800bdd6:	2300      	movs	r3, #0
 800bdd8:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800bddc:	3038      	adds	r0, #56	; 0x38
 800bdde:	f005 bfc4 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>

0800bde2 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800bde2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bde6:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800bdea:	4605      	mov	r5, r0
 800bdec:	4688      	mov	r8, r1
 800bdee:	4617      	mov	r7, r2
 800bdf0:	2b00      	cmp	r3, #0
 800bdf2:	d03f      	beq.n	800be74 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800bdf4:	6803      	ldr	r3, [r0, #0]
 800bdf6:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800bdfa:	4798      	blx	r3
 800bdfc:	682b      	ldr	r3, [r5, #0]
 800bdfe:	4604      	mov	r4, r0
 800be00:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800be04:	4628      	mov	r0, r5
 800be06:	4798      	blx	r3
 800be08:	4284      	cmp	r4, r0
 800be0a:	bfc8      	it	gt
 800be0c:	4623      	movgt	r3, r4
 800be0e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800be12:	bfc4      	itt	gt
 800be14:	4604      	movgt	r4, r0
 800be16:	4618      	movgt	r0, r3
 800be18:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800be1c:	42b3      	cmp	r3, r6
 800be1e:	da29      	bge.n	800be74 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800be20:	42b0      	cmp	r0, r6
 800be22:	bfa8      	it	ge
 800be24:	4630      	movge	r0, r6
 800be26:	2800      	cmp	r0, #0
 800be28:	db24      	blt.n	800be74 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800be2a:	f1b8 0f00 	cmp.w	r8, #0
 800be2e:	d11e      	bne.n	800be6e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800be30:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800be34:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800be38:	460c      	mov	r4, r1
 800be3a:	009a      	lsls	r2, r3, #2
 800be3c:	4298      	cmp	r0, r3
 800be3e:	dd0b      	ble.n	800be58 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800be40:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800be44:	58b6      	ldr	r6, [r6, r2]
 800be46:	42b1      	cmp	r1, r6
 800be48:	bfa8      	it	ge
 800be4a:	4631      	movge	r1, r6
 800be4c:	42b4      	cmp	r4, r6
 800be4e:	bfb8      	it	lt
 800be50:	4634      	movlt	r4, r6
 800be52:	3301      	adds	r3, #1
 800be54:	3204      	adds	r2, #4
 800be56:	e7f1      	b.n	800be3c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800be58:	1bc9      	subs	r1, r1, r7
 800be5a:	193a      	adds	r2, r7, r4
 800be5c:	4291      	cmp	r1, r2
 800be5e:	d009      	beq.n	800be74 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800be60:	682b      	ldr	r3, [r5, #0]
 800be62:	4628      	mov	r0, r5
 800be64:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800be68:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800be6c:	4718      	bx	r3
 800be6e:	427c      	negs	r4, r7
 800be70:	4639      	mov	r1, r7
 800be72:	e7e2      	b.n	800be3a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800be74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800be78 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800be78:	b530      	push	{r4, r5, lr}
 800be7a:	790b      	ldrb	r3, [r1, #4]
 800be7c:	2b02      	cmp	r3, #2
 800be7e:	b085      	sub	sp, #20
 800be80:	4604      	mov	r4, r0
 800be82:	460d      	mov	r5, r1
 800be84:	d020      	beq.n	800bec8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800be86:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800be88:	88c9      	ldrh	r1, [r1, #6]
 800be8a:	1ac9      	subs	r1, r1, r3
 800be8c:	6803      	ldr	r3, [r0, #0]
 800be8e:	f10d 0206 	add.w	r2, sp, #6
 800be92:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800be96:	b209      	sxth	r1, r1
 800be98:	4798      	blx	r3
 800be9a:	b1a8      	cbz	r0, 800bec8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800be9c:	792b      	ldrb	r3, [r5, #4]
 800be9e:	2b01      	cmp	r3, #1
 800bea0:	d812      	bhi.n	800bec8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bea2:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800bea6:	b178      	cbz	r0, 800bec8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bea8:	6803      	ldr	r3, [r0, #0]
 800beaa:	68db      	ldr	r3, [r3, #12]
 800beac:	4798      	blx	r3
 800beae:	b158      	cbz	r0, 800bec8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800beb0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800beb4:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800beb8:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bebc:	9503      	str	r5, [sp, #12]
 800bebe:	6803      	ldr	r3, [r0, #0]
 800bec0:	aa02      	add	r2, sp, #8
 800bec2:	689b      	ldr	r3, [r3, #8]
 800bec4:	4621      	mov	r1, r4
 800bec6:	4798      	blx	r3
 800bec8:	b005      	add	sp, #20
 800beca:	bd30      	pop	{r4, r5, pc}

0800becc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800becc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bed0:	4604      	mov	r4, r0
 800bed2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800bed6:	9e06      	ldr	r6, [sp, #24]
 800bed8:	4690      	mov	r8, r2
 800beda:	461f      	mov	r7, r3
 800bedc:	b928      	cbnz	r0, 800beea <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800bede:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bee2:	8033      	strh	r3, [r6, #0]
 800bee4:	803b      	strh	r3, [r7, #0]
 800bee6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800beea:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800beee:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800bef2:	1883      	adds	r3, r0, r2
 800bef4:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800bef8:	1ad2      	subs	r2, r2, r3
 800befa:	b212      	sxth	r2, r2
 800befc:	2a01      	cmp	r2, #1
 800befe:	dc07      	bgt.n	800bf10 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800bf00:	2300      	movs	r3, #0
 800bf02:	803b      	strh	r3, [r7, #0]
 800bf04:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800bf08:	3b01      	subs	r3, #1
 800bf0a:	8033      	strh	r3, [r6, #0]
 800bf0c:	2001      	movs	r0, #1
 800bf0e:	e7ea      	b.n	800bee6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800bf10:	1a08      	subs	r0, r1, r0
 800bf12:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800bf16:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800bf1a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800bf1c:	1a5b      	subs	r3, r3, r1
 800bf1e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800bf22:	d45b      	bmi.n	800bfdc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800bf24:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800bf28:	fb93 f1f5 	sdiv	r1, r3, r5
 800bf2c:	2302      	movs	r3, #2
 800bf2e:	fb91 f1f3 	sdiv	r1, r1, r3
 800bf32:	3a01      	subs	r2, #1
 800bf34:	f006 f8da 	bl	80120ec <_ZN8touchgfx6muldivElll>
 800bf38:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800bf3c:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800bf40:	2900      	cmp	r1, #0
 800bf42:	db57      	blt.n	800bff4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800bf44:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800bf48:	2502      	movs	r5, #2
 800bf4a:	fb93 f3fc 	sdiv	r3, r3, ip
 800bf4e:	fb93 f3f5 	sdiv	r3, r3, r5
 800bf52:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800bf56:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800bf5a:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800bf5e:	1a52      	subs	r2, r2, r1
 800bf60:	eba8 0003 	sub.w	r0, r8, r3
 800bf64:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800bf68:	d450      	bmi.n	800c00c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800bf6a:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800bf6e:	fb92 f1fc 	sdiv	r1, r2, ip
 800bf72:	2202      	movs	r2, #2
 800bf74:	fb91 f1f2 	sdiv	r1, r1, r2
 800bf78:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800bf7c:	4413      	add	r3, r2
 800bf7e:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800bf82:	1ad2      	subs	r2, r2, r3
 800bf84:	b212      	sxth	r2, r2
 800bf86:	3a01      	subs	r2, #1
 800bf88:	f006 f8b0 	bl	80120ec <_ZN8touchgfx6muldivElll>
 800bf8c:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800bf90:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bf92:	2b00      	cmp	r3, #0
 800bf94:	db46      	blt.n	800c024 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800bf96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800bf9a:	fb93 f3f2 	sdiv	r3, r3, r2
 800bf9e:	2202      	movs	r2, #2
 800bfa0:	fb93 f3f2 	sdiv	r3, r3, r2
 800bfa4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800bfa8:	429d      	cmp	r5, r3
 800bfaa:	bfde      	ittt	le
 800bfac:	461a      	movle	r2, r3
 800bfae:	462b      	movle	r3, r5
 800bfb0:	4615      	movle	r5, r2
 800bfb2:	2d00      	cmp	r5, #0
 800bfb4:	bfa4      	itt	ge
 800bfb6:	351f      	addge	r5, #31
 800bfb8:	116d      	asrge	r5, r5, #5
 800bfba:	f04f 0020 	mov.w	r0, #32
 800bfbe:	bfb8      	it	lt
 800bfc0:	fb95 f5f0 	sdivlt	r5, r5, r0
 800bfc4:	b22d      	sxth	r5, r5
 800bfc6:	2d00      	cmp	r5, #0
 800bfc8:	b21b      	sxth	r3, r3
 800bfca:	fb93 f3f0 	sdiv	r3, r3, r0
 800bfce:	803b      	strh	r3, [r7, #0]
 800bfd0:	8035      	strh	r5, [r6, #0]
 800bfd2:	da33      	bge.n	800c03c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800bfd4:	2000      	movs	r0, #0
 800bfd6:	8030      	strh	r0, [r6, #0]
 800bfd8:	8038      	strh	r0, [r7, #0]
 800bfda:	e784      	b.n	800bee6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800bfdc:	f06f 0101 	mvn.w	r1, #1
 800bfe0:	fb01 5303 	mla	r3, r1, r3, r5
 800bfe4:	1e59      	subs	r1, r3, #1
 800bfe6:	2302      	movs	r3, #2
 800bfe8:	fb91 f1f5 	sdiv	r1, r1, r5
 800bfec:	fb91 f1f3 	sdiv	r1, r1, r3
 800bff0:	4249      	negs	r1, r1
 800bff2:	e79e      	b.n	800bf32 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800bff4:	f06f 0301 	mvn.w	r3, #1
 800bff8:	fb03 c301 	mla	r3, r3, r1, ip
 800bffc:	3b01      	subs	r3, #1
 800bffe:	2502      	movs	r5, #2
 800c000:	fb93 f3fc 	sdiv	r3, r3, ip
 800c004:	fb93 f3f5 	sdiv	r3, r3, r5
 800c008:	425b      	negs	r3, r3
 800c00a:	e7a2      	b.n	800bf52 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c00c:	f06f 0101 	mvn.w	r1, #1
 800c010:	fb01 c202 	mla	r2, r1, r2, ip
 800c014:	1e51      	subs	r1, r2, #1
 800c016:	2202      	movs	r2, #2
 800c018:	fb91 f1fc 	sdiv	r1, r1, ip
 800c01c:	fb91 f1f2 	sdiv	r1, r1, r2
 800c020:	4249      	negs	r1, r1
 800c022:	e7a9      	b.n	800bf78 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c024:	f06f 0101 	mvn.w	r1, #1
 800c028:	fb01 2303 	mla	r3, r1, r3, r2
 800c02c:	3b01      	subs	r3, #1
 800c02e:	fb93 f3f2 	sdiv	r3, r3, r2
 800c032:	2202      	movs	r2, #2
 800c034:	fb93 f3f2 	sdiv	r3, r3, r2
 800c038:	425b      	negs	r3, r3
 800c03a:	e7b3      	b.n	800bfa4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c03c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c040:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c044:	4293      	cmp	r3, r2
 800c046:	dc05      	bgt.n	800c054 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c048:	3b01      	subs	r3, #1
 800c04a:	b21b      	sxth	r3, r3
 800c04c:	8033      	strh	r3, [r6, #0]
 800c04e:	2000      	movs	r0, #0
 800c050:	803b      	strh	r3, [r7, #0]
 800c052:	e748      	b.n	800bee6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c054:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c058:	803a      	strh	r2, [r7, #0]
 800c05a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c05e:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c062:	4293      	cmp	r3, r2
 800c064:	bfdc      	itt	le
 800c066:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c06a:	b21a      	sxthle	r2, r3
 800c06c:	8032      	strh	r2, [r6, #0]
 800c06e:	e74d      	b.n	800bf0c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c070 <_ZN8touchgfx9ContainerC1Ev>:
 800c070:	2101      	movs	r1, #1
 800c072:	2200      	movs	r2, #0
 800c074:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c078:	4909      	ldr	r1, [pc, #36]	; (800c0a0 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c07a:	8082      	strh	r2, [r0, #4]
 800c07c:	80c2      	strh	r2, [r0, #6]
 800c07e:	8102      	strh	r2, [r0, #8]
 800c080:	8142      	strh	r2, [r0, #10]
 800c082:	8182      	strh	r2, [r0, #12]
 800c084:	81c2      	strh	r2, [r0, #14]
 800c086:	8202      	strh	r2, [r0, #16]
 800c088:	8242      	strh	r2, [r0, #18]
 800c08a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c08e:	61c2      	str	r2, [r0, #28]
 800c090:	8402      	strh	r2, [r0, #32]
 800c092:	8442      	strh	r2, [r0, #34]	; 0x22
 800c094:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c098:	6001      	str	r1, [r0, #0]
 800c09a:	6282      	str	r2, [r0, #40]	; 0x28
 800c09c:	4770      	bx	lr
 800c09e:	bf00      	nop
 800c0a0:	08023524 	.word	0x08023524

0800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c0a4:	6800      	ldr	r0, [r0, #0]
 800c0a6:	2800      	cmp	r0, #0
 800c0a8:	bfbd      	ittte	lt
 800c0aa:	380f      	sublt	r0, #15
 800c0ac:	2320      	movlt	r3, #32
 800c0ae:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c0b2:	3010      	addge	r0, #16
 800c0b4:	bfa8      	it	ge
 800c0b6:	1140      	asrge	r0, r0, #5
 800c0b8:	4770      	bx	lr

0800c0ba <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c0ba:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0be:	4605      	mov	r5, r0
 800c0c0:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c0c4:	4688      	mov	r8, r1
 800c0c6:	4691      	mov	r9, r2
 800c0c8:	469a      	mov	sl, r3
 800c0ca:	b360      	cbz	r0, 800c126 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c0cc:	2700      	movs	r7, #0
 800c0ce:	f04f 3bff 	mov.w	fp, #4294967295
 800c0d2:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c0d6:	b23e      	sxth	r6, r7
 800c0d8:	42b3      	cmp	r3, r6
 800c0da:	dd23      	ble.n	800c124 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c0dc:	682b      	ldr	r3, [r5, #0]
 800c0de:	4631      	mov	r1, r6
 800c0e0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c0e4:	4628      	mov	r0, r5
 800c0e6:	4798      	blx	r3
 800c0e8:	9001      	str	r0, [sp, #4]
 800c0ea:	a801      	add	r0, sp, #4
 800c0ec:	f7ff ffda 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c0f0:	682b      	ldr	r3, [r5, #0]
 800c0f2:	eba0 0008 	sub.w	r0, r0, r8
 800c0f6:	b204      	sxth	r4, r0
 800c0f8:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c0fc:	4631      	mov	r1, r6
 800c0fe:	4628      	mov	r0, r5
 800c100:	4798      	blx	r3
 800c102:	9001      	str	r0, [sp, #4]
 800c104:	a801      	add	r0, sp, #4
 800c106:	f7ff ffcd 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c10a:	eba0 0009 	sub.w	r0, r0, r9
 800c10e:	fb10 f000 	smulbb	r0, r0, r0
 800c112:	fb04 0404 	mla	r4, r4, r4, r0
 800c116:	455c      	cmp	r4, fp
 800c118:	bf3c      	itt	cc
 800c11a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c11e:	46a3      	movcc	fp, r4
 800c120:	3701      	adds	r7, #1
 800c122:	e7d6      	b.n	800c0d2 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c124:	2001      	movs	r0, #1
 800c126:	b003      	add	sp, #12
 800c128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c12c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c12c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c130:	4604      	mov	r4, r0
 800c132:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c136:	4688      	mov	r8, r1
 800c138:	4691      	mov	r9, r2
 800c13a:	b1f8      	cbz	r0, 800c17c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c13c:	2500      	movs	r5, #0
 800c13e:	f04f 37ff 	mov.w	r7, #4294967295
 800c142:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c146:	b22e      	sxth	r6, r5
 800c148:	42b3      	cmp	r3, r6
 800c14a:	dd16      	ble.n	800c17a <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c14c:	6823      	ldr	r3, [r4, #0]
 800c14e:	4631      	mov	r1, r6
 800c150:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c154:	4620      	mov	r0, r4
 800c156:	4798      	blx	r3
 800c158:	9001      	str	r0, [sp, #4]
 800c15a:	a801      	add	r0, sp, #4
 800c15c:	f7ff ffa2 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c160:	b200      	sxth	r0, r0
 800c162:	eba0 0008 	sub.w	r0, r0, r8
 800c166:	2800      	cmp	r0, #0
 800c168:	bfb8      	it	lt
 800c16a:	4240      	neglt	r0, r0
 800c16c:	42b8      	cmp	r0, r7
 800c16e:	bf3c      	itt	cc
 800c170:	f8a9 6000 	strhcc.w	r6, [r9]
 800c174:	4607      	movcc	r7, r0
 800c176:	3501      	adds	r5, #1
 800c178:	e7e3      	b.n	800c142 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c17a:	2001      	movs	r0, #1
 800c17c:	b003      	add	sp, #12
 800c17e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c182 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c182:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c186:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c18a:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c18e:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c192:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c196:	4770      	bx	lr

0800c198 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c198:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c19a:	4604      	mov	r4, r0
 800c19c:	3038      	adds	r0, #56	; 0x38
 800c19e:	460d      	mov	r5, r1
 800c1a0:	f7fe fb1c 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1a4:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c1a8:	9200      	str	r2, [sp, #0]
 800c1aa:	2200      	movs	r2, #0
 800c1ac:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c1b0:	4611      	mov	r1, r2
 800c1b2:	4628      	mov	r0, r5
 800c1b4:	f7f6 fdf7 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c1b8:	b003      	add	sp, #12
 800c1ba:	bd30      	pop	{r4, r5, pc}

0800c1bc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c1bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1be:	4604      	mov	r4, r0
 800c1c0:	3064      	adds	r0, #100	; 0x64
 800c1c2:	460d      	mov	r5, r1
 800c1c4:	f7fe fb0a 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1c8:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c1cc:	9200      	str	r2, [sp, #0]
 800c1ce:	2200      	movs	r2, #0
 800c1d0:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c1d4:	4611      	mov	r1, r2
 800c1d6:	4628      	mov	r0, r5
 800c1d8:	f7f6 fde5 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c1dc:	b003      	add	sp, #12
 800c1de:	bd30      	pop	{r4, r5, pc}

0800c1e0 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c1e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1e2:	4604      	mov	r4, r0
 800c1e4:	30e8      	adds	r0, #232	; 0xe8
 800c1e6:	460d      	mov	r5, r1
 800c1e8:	f7fe faf8 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1ec:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c1f0:	9200      	str	r2, [sp, #0]
 800c1f2:	2200      	movs	r2, #0
 800c1f4:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c1f8:	4611      	mov	r1, r2
 800c1fa:	4628      	mov	r0, r5
 800c1fc:	f7f6 fdd3 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c200:	b003      	add	sp, #12
 800c202:	bd30      	pop	{r4, r5, pc}

0800c204 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c204:	b538      	push	{r3, r4, r5, lr}
 800c206:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c20a:	428b      	cmp	r3, r1
 800c20c:	460d      	mov	r5, r1
 800c20e:	dd08      	ble.n	800c222 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c210:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c212:	b134      	cbz	r4, 800c222 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c214:	6823      	ldr	r3, [r4, #0]
 800c216:	4620      	mov	r0, r4
 800c218:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c21a:	4629      	mov	r1, r5
 800c21c:	4798      	blx	r3
 800c21e:	69a4      	ldr	r4, [r4, #24]
 800c220:	e7f7      	b.n	800c212 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c222:	bd38      	pop	{r3, r4, r5, pc}

0800c224 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c224:	b570      	push	{r4, r5, r6, lr}
 800c226:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c22a:	4606      	mov	r6, r0
 800c22c:	460d      	mov	r5, r1
 800c22e:	b134      	cbz	r4, 800c23e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c230:	6823      	ldr	r3, [r4, #0]
 800c232:	4620      	mov	r0, r4
 800c234:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c236:	4629      	mov	r1, r5
 800c238:	4798      	blx	r3
 800c23a:	69a4      	ldr	r4, [r4, #24]
 800c23c:	e7f7      	b.n	800c22e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c23e:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c242:	b134      	cbz	r4, 800c252 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c244:	6823      	ldr	r3, [r4, #0]
 800c246:	4620      	mov	r0, r4
 800c248:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c24a:	4629      	mov	r1, r5
 800c24c:	4798      	blx	r3
 800c24e:	69a4      	ldr	r4, [r4, #24]
 800c250:	e7f7      	b.n	800c242 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c252:	bd70      	pop	{r4, r5, r6, pc}

0800c254 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c254:	b538      	push	{r3, r4, r5, lr}
 800c256:	4604      	mov	r4, r0
 800c258:	2500      	movs	r5, #0
 800c25a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c25e:	42ab      	cmp	r3, r5
 800c260:	db05      	blt.n	800c26e <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c262:	b229      	sxth	r1, r5
 800c264:	4620      	mov	r0, r4
 800c266:	f7ff ffdd 	bl	800c224 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c26a:	3501      	adds	r5, #1
 800c26c:	e7f5      	b.n	800c25a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c26e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c272:	f005 fd7a 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 800c276:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c27a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c27e:	f005 bd74 	b.w	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>

0800c282 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c282:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c284:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c286:	4604      	mov	r4, r0
 800c288:	b15d      	cbz	r5, 800c2a2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c28a:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c28e:	9200      	str	r2, [sp, #0]
 800c290:	2200      	movs	r2, #0
 800c292:	4628      	mov	r0, r5
 800c294:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c298:	4611      	mov	r1, r2
 800c29a:	f7f6 fd84 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c29e:	69ad      	ldr	r5, [r5, #24]
 800c2a0:	e7f2      	b.n	800c288 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c2a2:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c2a6:	b15d      	cbz	r5, 800c2c0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c2a8:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c2ac:	9200      	str	r2, [sp, #0]
 800c2ae:	2200      	movs	r2, #0
 800c2b0:	4628      	mov	r0, r5
 800c2b2:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c2b6:	4611      	mov	r1, r2
 800c2b8:	f7f6 fd75 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2bc:	69ad      	ldr	r5, [r5, #24]
 800c2be:	e7f2      	b.n	800c2a6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c2c0:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c2c4:	b15d      	cbz	r5, 800c2de <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c2c6:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c2ca:	9200      	str	r2, [sp, #0]
 800c2cc:	2200      	movs	r2, #0
 800c2ce:	4628      	mov	r0, r5
 800c2d0:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c2d4:	4611      	mov	r1, r2
 800c2d6:	f7f6 fd66 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2da:	69ad      	ldr	r5, [r5, #24]
 800c2dc:	e7f2      	b.n	800c2c4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c2de:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c2e2:	b15d      	cbz	r5, 800c2fc <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c2e4:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c2e8:	9200      	str	r2, [sp, #0]
 800c2ea:	2200      	movs	r2, #0
 800c2ec:	4628      	mov	r0, r5
 800c2ee:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c2f2:	4611      	mov	r1, r2
 800c2f4:	f7f6 fd57 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2f8:	69ad      	ldr	r5, [r5, #24]
 800c2fa:	e7f2      	b.n	800c2e2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c2fc:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c300:	b15d      	cbz	r5, 800c31a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c302:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c306:	9200      	str	r2, [sp, #0]
 800c308:	2200      	movs	r2, #0
 800c30a:	4628      	mov	r0, r5
 800c30c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c310:	4611      	mov	r1, r2
 800c312:	f7f6 fd48 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c316:	69ad      	ldr	r5, [r5, #24]
 800c318:	e7f2      	b.n	800c300 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c31a:	6823      	ldr	r3, [r4, #0]
 800c31c:	695b      	ldr	r3, [r3, #20]
 800c31e:	4620      	mov	r0, r4
 800c320:	b003      	add	sp, #12
 800c322:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c326:	4718      	bx	r3

0800c328 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c328:	b430      	push	{r4, r5}
 800c32a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c32e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c332:	b28a      	uxth	r2, r1
 800c334:	1b15      	subs	r5, r2, r4
 800c336:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c33a:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c33e:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c342:	442c      	add	r4, r5
 800c344:	1b12      	subs	r2, r2, r4
 800c346:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c34a:	8101      	strh	r1, [r0, #8]
 800c34c:	bc30      	pop	{r4, r5}
 800c34e:	f7ff bf98 	b.w	800c282 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c352 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c352:	b430      	push	{r4, r5}
 800c354:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c358:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c35c:	b28a      	uxth	r2, r1
 800c35e:	1b15      	subs	r5, r2, r4
 800c360:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c364:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c368:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c36c:	442c      	add	r4, r5
 800c36e:	1b12      	subs	r2, r2, r4
 800c370:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c374:	8141      	strh	r1, [r0, #10]
 800c376:	bc30      	pop	{r4, r5}
 800c378:	f7ff bf83 	b.w	800c282 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c37c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c37c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c380:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c384:	fa1f fa83 	uxth.w	sl, r3
 800c388:	4699      	mov	r9, r3
 800c38a:	8903      	ldrh	r3, [r0, #8]
 800c38c:	4604      	mov	r4, r0
 800c38e:	4615      	mov	r5, r2
 800c390:	fa1f f887 	uxth.w	r8, r7
 800c394:	4452      	add	r2, sl
 800c396:	8940      	ldrh	r0, [r0, #10]
 800c398:	1a9b      	subs	r3, r3, r2
 800c39a:	eb08 0201 	add.w	r2, r8, r1
 800c39e:	1a80      	subs	r0, r0, r2
 800c3a0:	b200      	sxth	r0, r0
 800c3a2:	460e      	mov	r6, r1
 800c3a4:	9000      	str	r0, [sp, #0]
 800c3a6:	460a      	mov	r2, r1
 800c3a8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c3ac:	4629      	mov	r1, r5
 800c3ae:	b21b      	sxth	r3, r3
 800c3b0:	f7f6 fcf9 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c3b4:	2200      	movs	r2, #0
 800c3b6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c3ba:	9600      	str	r6, [sp, #0]
 800c3bc:	4611      	mov	r1, r2
 800c3be:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c3c2:	f7f6 fcf0 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c3c6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c3ca:	9300      	str	r3, [sp, #0]
 800c3cc:	2200      	movs	r2, #0
 800c3ce:	462b      	mov	r3, r5
 800c3d0:	4611      	mov	r1, r2
 800c3d2:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c3d6:	f7f6 fce6 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c3da:	8921      	ldrh	r1, [r4, #8]
 800c3dc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c3e0:	9300      	str	r3, [sp, #0]
 800c3e2:	eba1 010a 	sub.w	r1, r1, sl
 800c3e6:	464b      	mov	r3, r9
 800c3e8:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c3ec:	2200      	movs	r2, #0
 800c3ee:	b209      	sxth	r1, r1
 800c3f0:	f7f6 fcd9 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c3f4:	8962      	ldrh	r2, [r4, #10]
 800c3f6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c3fa:	9700      	str	r7, [sp, #0]
 800c3fc:	eba2 0208 	sub.w	r2, r2, r8
 800c400:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c404:	b212      	sxth	r2, r2
 800c406:	2100      	movs	r1, #0
 800c408:	f7f6 fccd 	bl	8002da6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c40c:	4620      	mov	r0, r4
 800c40e:	b002      	add	sp, #8
 800c410:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c414:	f7ff bf35 	b.w	800c282 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c418 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c41c:	b085      	sub	sp, #20
 800c41e:	4604      	mov	r4, r0
 800c420:	9103      	str	r1, [sp, #12]
 800c422:	f7ff fe25 	bl	800c070 <_ZN8touchgfx9ContainerC1Ev>
 800c426:	4b2d      	ldr	r3, [pc, #180]	; (800c4dc <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c428:	6023      	str	r3, [r4, #0]
 800c42a:	2601      	movs	r6, #1
 800c42c:	23ff      	movs	r3, #255	; 0xff
 800c42e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c432:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c436:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c43a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c43e:	4658      	mov	r0, fp
 800c440:	f7ff fe16 	bl	800c070 <_ZN8touchgfx9ContainerC1Ev>
 800c444:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c448:	4648      	mov	r0, r9
 800c44a:	f7ff fe11 	bl	800c070 <_ZN8touchgfx9ContainerC1Ev>
 800c44e:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c452:	4640      	mov	r0, r8
 800c454:	f7ff fe0c 	bl	800c070 <_ZN8touchgfx9ContainerC1Ev>
 800c458:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c45c:	4650      	mov	r0, sl
 800c45e:	f7ff fe07 	bl	800c070 <_ZN8touchgfx9ContainerC1Ev>
 800c462:	4638      	mov	r0, r7
 800c464:	f7ff fe04 	bl	800c070 <_ZN8touchgfx9ContainerC1Ev>
 800c468:	2500      	movs	r5, #0
 800c46a:	9903      	ldr	r1, [sp, #12]
 800c46c:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c470:	4620      	mov	r0, r4
 800c472:	4659      	mov	r1, fp
 800c474:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c478:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c47c:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c480:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c484:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c488:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c48c:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c490:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c494:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c498:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c49c:	f7fe f99e 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4a0:	4651      	mov	r1, sl
 800c4a2:	4620      	mov	r0, r4
 800c4a4:	f7fe f99a 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4a8:	4649      	mov	r1, r9
 800c4aa:	4620      	mov	r0, r4
 800c4ac:	f7fe f996 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4b0:	4641      	mov	r1, r8
 800c4b2:	4620      	mov	r0, r4
 800c4b4:	f7fe f992 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4b8:	4639      	mov	r1, r7
 800c4ba:	4620      	mov	r0, r4
 800c4bc:	f7fe f98e 	bl	800a7dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4c0:	4620      	mov	r0, r4
 800c4c2:	9500      	str	r5, [sp, #0]
 800c4c4:	462b      	mov	r3, r5
 800c4c6:	462a      	mov	r2, r5
 800c4c8:	4629      	mov	r1, r5
 800c4ca:	f7ff ff57 	bl	800c37c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c4ce:	4620      	mov	r0, r4
 800c4d0:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c4d4:	b005      	add	sp, #20
 800c4d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4da:	bf00      	nop
 800c4dc:	0802382c 	.word	0x0802382c

0800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c4e0:	4291      	cmp	r1, r2
 800c4e2:	4613      	mov	r3, r2
 800c4e4:	d003      	beq.n	800c4ee <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c4e6:	460a      	mov	r2, r1
 800c4e8:	4619      	mov	r1, r3
 800c4ea:	f005 bdff 	b.w	80120ec <_ZN8touchgfx6muldivElll>
 800c4ee:	4770      	bx	lr

0800c4f0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c4f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c4f4:	6803      	ldr	r3, [r0, #0]
 800c4f6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c4fa:	460d      	mov	r5, r1
 800c4fc:	4604      	mov	r4, r0
 800c4fe:	4798      	blx	r3
 800c500:	42a8      	cmp	r0, r5
 800c502:	4606      	mov	r6, r0
 800c504:	d024      	beq.n	800c550 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c506:	6823      	ldr	r3, [r4, #0]
 800c508:	4601      	mov	r1, r0
 800c50a:	462a      	mov	r2, r5
 800c50c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c510:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c514:	f7ff ffe4 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c518:	462a      	mov	r2, r5
 800c51a:	4680      	mov	r8, r0
 800c51c:	4631      	mov	r1, r6
 800c51e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c522:	f7ff ffdd 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c526:	4641      	mov	r1, r8
 800c528:	4602      	mov	r2, r0
 800c52a:	4620      	mov	r0, r4
 800c52c:	47b8      	blx	r7
 800c52e:	462a      	mov	r2, r5
 800c530:	4631      	mov	r1, r6
 800c532:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c536:	f7ff ffd3 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c53a:	462a      	mov	r2, r5
 800c53c:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c540:	4631      	mov	r1, r6
 800c542:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c546:	f7ff ffcb 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c54a:	6325      	str	r5, [r4, #48]	; 0x30
 800c54c:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c554 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c554:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c558:	4604      	mov	r4, r0
 800c55a:	460f      	mov	r7, r1
 800c55c:	b1ba      	cbz	r2, 800c58e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c55e:	6803      	ldr	r3, [r0, #0]
 800c560:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c564:	4798      	blx	r3
 800c566:	2600      	movs	r6, #0
 800c568:	4681      	mov	r9, r0
 800c56a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c56e:	b235      	sxth	r5, r6
 800c570:	42ab      	cmp	r3, r5
 800c572:	f106 0601 	add.w	r6, r6, #1
 800c576:	dd0a      	ble.n	800c58e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c578:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c57c:	463a      	mov	r2, r7
 800c57e:	4649      	mov	r1, r9
 800c580:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c584:	f7ff ffac 	bl	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c588:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c58c:	e7ed      	b.n	800c56a <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c58e:	6367      	str	r7, [r4, #52]	; 0x34
 800c590:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c594 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c594:	b570      	push	{r4, r5, r6, lr}
 800c596:	6803      	ldr	r3, [r0, #0]
 800c598:	4604      	mov	r4, r0
 800c59a:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800c59e:	460d      	mov	r5, r1
 800c5a0:	4798      	blx	r3
 800c5a2:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c5a6:	3301      	adds	r3, #1
 800c5a8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800c5ac:	6823      	ldr	r3, [r4, #0]
 800c5ae:	4629      	mov	r1, r5
 800c5b0:	4620      	mov	r0, r4
 800c5b2:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800c5b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c5ba:	4718      	bx	r3

0800c5bc <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c5bc:	4770      	bx	lr

0800c5be <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c5be:	b510      	push	{r4, lr}
 800c5c0:	2130      	movs	r1, #48	; 0x30
 800c5c2:	4604      	mov	r4, r0
 800c5c4:	f013 ff56 	bl	8020474 <_ZdlPvj>
 800c5c8:	4620      	mov	r0, r4
 800c5ca:	bd10      	pop	{r4, pc}

0800c5cc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c5cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c5ce:	4604      	mov	r4, r0
 800c5d0:	4608      	mov	r0, r1
 800c5d2:	460d      	mov	r5, r1
 800c5d4:	f7fe fad5 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c5d8:	b978      	cbnz	r0, 800c5fa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c5da:	4620      	mov	r0, r4
 800c5dc:	f7fe fad1 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c5e0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c5e4:	b150      	cbz	r0, 800c5fc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c5e6:	8026      	strh	r6, [r4, #0]
 800c5e8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c5ec:	8063      	strh	r3, [r4, #2]
 800c5ee:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c5f2:	80a3      	strh	r3, [r4, #4]
 800c5f4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c5f8:	80e3      	strh	r3, [r4, #6]
 800c5fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c5fc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c600:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c604:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c608:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c60c:	88ed      	ldrh	r5, [r5, #6]
 800c60e:	42b1      	cmp	r1, r6
 800c610:	460f      	mov	r7, r1
 800c612:	bfa8      	it	ge
 800c614:	4637      	movge	r7, r6
 800c616:	4293      	cmp	r3, r2
 800c618:	4618      	mov	r0, r3
 800c61a:	4466      	add	r6, ip
 800c61c:	bfa8      	it	ge
 800c61e:	4610      	movge	r0, r2
 800c620:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c624:	8027      	strh	r7, [r4, #0]
 800c626:	442a      	add	r2, r5
 800c628:	88e5      	ldrh	r5, [r4, #6]
 800c62a:	8060      	strh	r0, [r4, #2]
 800c62c:	4461      	add	r1, ip
 800c62e:	442b      	add	r3, r5
 800c630:	b236      	sxth	r6, r6
 800c632:	b209      	sxth	r1, r1
 800c634:	b212      	sxth	r2, r2
 800c636:	b21b      	sxth	r3, r3
 800c638:	428e      	cmp	r6, r1
 800c63a:	bfac      	ite	ge
 800c63c:	ebc7 0106 	rsbge	r1, r7, r6
 800c640:	ebc7 0101 	rsblt	r1, r7, r1
 800c644:	429a      	cmp	r2, r3
 800c646:	bfac      	ite	ge
 800c648:	ebc0 0202 	rsbge	r2, r0, r2
 800c64c:	ebc0 0203 	rsblt	r2, r0, r3
 800c650:	80a1      	strh	r1, [r4, #4]
 800c652:	80e2      	strh	r2, [r4, #6]
 800c654:	e7d1      	b.n	800c5fa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c656 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c656:	6800      	ldr	r0, [r0, #0]
 800c658:	2800      	cmp	r0, #0
 800c65a:	bfb9      	ittee	lt
 800c65c:	2320      	movlt	r3, #32
 800c65e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c662:	301f      	addge	r0, #31
 800c664:	1140      	asrge	r0, r0, #5
 800c666:	4770      	bx	lr

0800c668 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c66c:	6803      	ldr	r3, [r0, #0]
 800c66e:	6945      	ldr	r5, [r0, #20]
 800c670:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c672:	b093      	sub	sp, #76	; 0x4c
 800c674:	4604      	mov	r4, r0
 800c676:	460f      	mov	r7, r1
 800c678:	2d00      	cmp	r5, #0
 800c67a:	f000 81ad 	beq.w	800c9d8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c67e:	696d      	ldr	r5, [r5, #20]
 800c680:	4798      	blx	r3
 800c682:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c686:	2b00      	cmp	r3, #0
 800c688:	d077      	beq.n	800c77a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c68a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c68e:	fb13 f000 	smulbb	r0, r3, r0
 800c692:	b283      	uxth	r3, r0
 800c694:	1c58      	adds	r0, r3, #1
 800c696:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800c69a:	1200      	asrs	r0, r0, #8
 800c69c:	d06d      	beq.n	800c77a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c69e:	b2c3      	uxtb	r3, r0
 800c6a0:	9308      	str	r3, [sp, #32]
 800c6a2:	6823      	ldr	r3, [r4, #0]
 800c6a4:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800c6a8:	462a      	mov	r2, r5
 800c6aa:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c6ae:	4621      	mov	r1, r4
 800c6b0:	4640      	mov	r0, r8
 800c6b2:	4798      	blx	r3
 800c6b4:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c6b8:	ae0e      	add	r6, sp, #56	; 0x38
 800c6ba:	e886 0003 	stmia.w	r6, {r0, r1}
 800c6be:	4639      	mov	r1, r7
 800c6c0:	4630      	mov	r0, r6
 800c6c2:	f7fe fa1b 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800c6c6:	6823      	ldr	r3, [r4, #0]
 800c6c8:	4629      	mov	r1, r5
 800c6ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c6ce:	4620      	mov	r0, r4
 800c6d0:	4798      	blx	r3
 800c6d2:	6823      	ldr	r3, [r4, #0]
 800c6d4:	4607      	mov	r7, r0
 800c6d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c6da:	4629      	mov	r1, r5
 800c6dc:	4620      	mov	r0, r4
 800c6de:	4798      	blx	r3
 800c6e0:	4681      	mov	r9, r0
 800c6e2:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800c6e6:	0103      	lsls	r3, r0, #4
 800c6e8:	9309      	str	r3, [sp, #36]	; 0x24
 800c6ea:	6823      	ldr	r3, [r4, #0]
 800c6ec:	4629      	mov	r1, r5
 800c6ee:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800c6f2:	4620      	mov	r0, r4
 800c6f4:	4798      	blx	r3
 800c6f6:	b203      	sxth	r3, r0
 800c6f8:	9306      	str	r3, [sp, #24]
 800c6fa:	6823      	ldr	r3, [r4, #0]
 800c6fc:	4629      	mov	r1, r5
 800c6fe:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c702:	4620      	mov	r0, r4
 800c704:	4798      	blx	r3
 800c706:	2f00      	cmp	r7, #0
 800c708:	b203      	sxth	r3, r0
 800c70a:	9307      	str	r3, [sp, #28]
 800c70c:	d138      	bne.n	800c780 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800c70e:	f1b9 0f00 	cmp.w	r9, #0
 800c712:	d132      	bne.n	800c77a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c714:	6823      	ldr	r3, [r4, #0]
 800c716:	464a      	mov	r2, r9
 800c718:	4629      	mov	r1, r5
 800c71a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c71e:	4620      	mov	r0, r4
 800c720:	4798      	blx	r3
 800c722:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c724:	1ac0      	subs	r0, r0, r3
 800c726:	9010      	str	r0, [sp, #64]	; 0x40
 800c728:	4640      	mov	r0, r8
 800c72a:	f7ff fcbb 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c72e:	6823      	ldr	r3, [r4, #0]
 800c730:	4607      	mov	r7, r0
 800c732:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c736:	4629      	mov	r1, r5
 800c738:	4620      	mov	r0, r4
 800c73a:	4798      	blx	r3
 800c73c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c740:	1a38      	subs	r0, r7, r0
 800c742:	fa0f f880 	sxth.w	r8, r0
 800c746:	eb13 0f08 	cmn.w	r3, r8
 800c74a:	d416      	bmi.n	800c77a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c74c:	6823      	ldr	r3, [r4, #0]
 800c74e:	4629      	mov	r1, r5
 800c750:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c754:	4620      	mov	r0, r4
 800c756:	4798      	blx	r3
 800c758:	4580      	cmp	r8, r0
 800c75a:	da0e      	bge.n	800c77a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c75c:	9a08      	ldr	r2, [sp, #32]
 800c75e:	6823      	ldr	r3, [r4, #0]
 800c760:	9202      	str	r2, [sp, #8]
 800c762:	b23f      	sxth	r7, r7
 800c764:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c768:	9201      	str	r2, [sp, #4]
 800c76a:	9700      	str	r7, [sp, #0]
 800c76c:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800c770:	4631      	mov	r1, r6
 800c772:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c776:	4620      	mov	r0, r4
 800c778:	47a8      	blx	r5
 800c77a:	b013      	add	sp, #76	; 0x4c
 800c77c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c780:	ddfb      	ble.n	800c77a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c782:	6823      	ldr	r3, [r4, #0]
 800c784:	4629      	mov	r1, r5
 800c786:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c78a:	4620      	mov	r0, r4
 800c78c:	4798      	blx	r3
 800c78e:	6823      	ldr	r3, [r4, #0]
 800c790:	4683      	mov	fp, r0
 800c792:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800c796:	4629      	mov	r1, r5
 800c798:	4620      	mov	r0, r4
 800c79a:	4798      	blx	r3
 800c79c:	eba0 030b 	sub.w	r3, r0, fp
 800c7a0:	2b00      	cmp	r3, #0
 800c7a2:	bfb8      	it	lt
 800c7a4:	425b      	neglt	r3, r3
 800c7a6:	fb93 f3f7 	sdiv	r3, r3, r7
 800c7aa:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c7ae:	4680      	mov	r8, r0
 800c7b0:	dce3      	bgt.n	800c77a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c7b2:	6823      	ldr	r3, [r4, #0]
 800c7b4:	465a      	mov	r2, fp
 800c7b6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c7ba:	4629      	mov	r1, r5
 800c7bc:	4620      	mov	r0, r4
 800c7be:	4798      	blx	r3
 800c7c0:	6823      	ldr	r3, [r4, #0]
 800c7c2:	4606      	mov	r6, r0
 800c7c4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c7c8:	4642      	mov	r2, r8
 800c7ca:	4629      	mov	r1, r5
 800c7cc:	4620      	mov	r0, r4
 800c7ce:	4798      	blx	r3
 800c7d0:	42b0      	cmp	r0, r6
 800c7d2:	bfa2      	ittt	ge
 800c7d4:	4643      	movge	r3, r8
 800c7d6:	46d8      	movge	r8, fp
 800c7d8:	469b      	movge	fp, r3
 800c7da:	45d8      	cmp	r8, fp
 800c7dc:	bfac      	ite	ge
 800c7de:	f04f 33ff 	movge.w	r3, #4294967295
 800c7e2:	2301      	movlt	r3, #1
 800c7e4:	fb98 f6f7 	sdiv	r6, r8, r7
 800c7e8:	fb9b f2f7 	sdiv	r2, fp, r7
 800c7ec:	1af6      	subs	r6, r6, r3
 800c7ee:	441a      	add	r2, r3
 800c7f0:	4296      	cmp	r6, r2
 800c7f2:	bfac      	ite	ge
 800c7f4:	f04f 3aff 	movge.w	sl, #4294967295
 800c7f8:	f04f 0a01 	movlt.w	sl, #1
 800c7fc:	f1b9 0f00 	cmp.w	r9, #0
 800c800:	d13e      	bne.n	800c880 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800c802:	fb07 fb0a 	mul.w	fp, r7, sl
 800c806:	eb0a 0802 	add.w	r8, sl, r2
 800c80a:	4377      	muls	r7, r6
 800c80c:	45b0      	cmp	r8, r6
 800c80e:	d0b4      	beq.n	800c77a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c810:	6823      	ldr	r3, [r4, #0]
 800c812:	463a      	mov	r2, r7
 800c814:	4629      	mov	r1, r5
 800c816:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c81a:	4620      	mov	r0, r4
 800c81c:	4798      	blx	r3
 800c81e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c820:	1ac0      	subs	r0, r0, r3
 800c822:	9010      	str	r0, [sp, #64]	; 0x40
 800c824:	a810      	add	r0, sp, #64	; 0x40
 800c826:	f7ff fc3d 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c82a:	6823      	ldr	r3, [r4, #0]
 800c82c:	4681      	mov	r9, r0
 800c82e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c832:	4629      	mov	r1, r5
 800c834:	4620      	mov	r0, r4
 800c836:	4798      	blx	r3
 800c838:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c83c:	eba9 0000 	sub.w	r0, r9, r0
 800c840:	b203      	sxth	r3, r0
 800c842:	42da      	cmn	r2, r3
 800c844:	9304      	str	r3, [sp, #16]
 800c846:	d418      	bmi.n	800c87a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c848:	6822      	ldr	r2, [r4, #0]
 800c84a:	4629      	mov	r1, r5
 800c84c:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800c850:	4620      	mov	r0, r4
 800c852:	4790      	blx	r2
 800c854:	9b04      	ldr	r3, [sp, #16]
 800c856:	4283      	cmp	r3, r0
 800c858:	da0f      	bge.n	800c87a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c85a:	9b08      	ldr	r3, [sp, #32]
 800c85c:	9302      	str	r3, [sp, #8]
 800c85e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c862:	6822      	ldr	r2, [r4, #0]
 800c864:	9301      	str	r3, [sp, #4]
 800c866:	fa0f f389 	sxth.w	r3, r9
 800c86a:	9300      	str	r3, [sp, #0]
 800c86c:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800c870:	a90e      	add	r1, sp, #56	; 0x38
 800c872:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c876:	4620      	mov	r0, r4
 800c878:	47c8      	blx	r9
 800c87a:	4456      	add	r6, sl
 800c87c:	445f      	add	r7, fp
 800c87e:	e7c5      	b.n	800c80c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800c880:	fb98 f8f9 	sdiv	r8, r8, r9
 800c884:	eba8 0203 	sub.w	r2, r8, r3
 800c888:	fb9b f8f9 	sdiv	r8, fp, r9
 800c88c:	4498      	add	r8, r3
 800c88e:	4542      	cmp	r2, r8
 800c890:	bfac      	ite	ge
 800c892:	f04f 33ff 	movge.w	r3, #4294967295
 800c896:	2301      	movlt	r3, #1
 800c898:	930a      	str	r3, [sp, #40]	; 0x28
 800c89a:	6823      	ldr	r3, [r4, #0]
 800c89c:	9204      	str	r2, [sp, #16]
 800c89e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c8a2:	fb02 f209 	mul.w	r2, r2, r9
 800c8a6:	4629      	mov	r1, r5
 800c8a8:	4620      	mov	r0, r4
 800c8aa:	4798      	blx	r3
 800c8ac:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800c8b0:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800c8b4:	4658      	mov	r0, fp
 800c8b6:	f7ff fbf5 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c8ba:	b203      	sxth	r3, r0
 800c8bc:	9305      	str	r3, [sp, #20]
 800c8be:	6823      	ldr	r3, [r4, #0]
 800c8c0:	fb06 f207 	mul.w	r2, r6, r7
 800c8c4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c8c8:	4629      	mov	r1, r5
 800c8ca:	4620      	mov	r0, r4
 800c8cc:	4798      	blx	r3
 800c8ce:	9010      	str	r0, [sp, #64]	; 0x40
 800c8d0:	4658      	mov	r0, fp
 800c8d2:	f7ff fbe7 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c8d6:	fb07 f20a 	mul.w	r2, r7, sl
 800c8da:	920b      	str	r2, [sp, #44]	; 0x2c
 800c8dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c8de:	4442      	add	r2, r8
 800c8e0:	b203      	sxth	r3, r0
 800c8e2:	920c      	str	r2, [sp, #48]	; 0x30
 800c8e4:	9a05      	ldr	r2, [sp, #20]
 800c8e6:	429a      	cmp	r2, r3
 800c8e8:	dc16      	bgt.n	800c918 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800c8ea:	eb06 080a 	add.w	r8, r6, sl
 800c8ee:	fb07 f808 	mul.w	r8, r7, r8
 800c8f2:	9a05      	ldr	r2, [sp, #20]
 800c8f4:	429a      	cmp	r2, r3
 800c8f6:	db54      	blt.n	800c9a2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800c8f8:	6823      	ldr	r3, [r4, #0]
 800c8fa:	4642      	mov	r2, r8
 800c8fc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c900:	4629      	mov	r1, r5
 800c902:	4620      	mov	r0, r4
 800c904:	4798      	blx	r3
 800c906:	9010      	str	r0, [sp, #64]	; 0x40
 800c908:	4658      	mov	r0, fp
 800c90a:	f7ff fbcb 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c90e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c910:	4456      	add	r6, sl
 800c912:	b203      	sxth	r3, r0
 800c914:	4490      	add	r8, r2
 800c916:	e7ec      	b.n	800c8f2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800c918:	6823      	ldr	r3, [r4, #0]
 800c91a:	fb07 f206 	mul.w	r2, r7, r6
 800c91e:	4629      	mov	r1, r5
 800c920:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c924:	4620      	mov	r0, r4
 800c926:	4798      	blx	r3
 800c928:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c92a:	1ac0      	subs	r0, r0, r3
 800c92c:	9010      	str	r0, [sp, #64]	; 0x40
 800c92e:	4658      	mov	r0, fp
 800c930:	f7ff fbb8 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c934:	6823      	ldr	r3, [r4, #0]
 800c936:	4680      	mov	r8, r0
 800c938:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c93c:	4629      	mov	r1, r5
 800c93e:	4620      	mov	r0, r4
 800c940:	4798      	blx	r3
 800c942:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c946:	eba8 0000 	sub.w	r0, r8, r0
 800c94a:	b203      	sxth	r3, r0
 800c94c:	42da      	cmn	r2, r3
 800c94e:	930d      	str	r3, [sp, #52]	; 0x34
 800c950:	d418      	bmi.n	800c984 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c952:	6822      	ldr	r2, [r4, #0]
 800c954:	4629      	mov	r1, r5
 800c956:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800c95a:	4620      	mov	r0, r4
 800c95c:	4790      	blx	r2
 800c95e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c960:	4283      	cmp	r3, r0
 800c962:	da0f      	bge.n	800c984 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c964:	9b08      	ldr	r3, [sp, #32]
 800c966:	9302      	str	r3, [sp, #8]
 800c968:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c96c:	6822      	ldr	r2, [r4, #0]
 800c96e:	9301      	str	r3, [sp, #4]
 800c970:	fa0f f388 	sxth.w	r3, r8
 800c974:	9300      	str	r3, [sp, #0]
 800c976:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800c97a:	a90e      	add	r1, sp, #56	; 0x38
 800c97c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c980:	4620      	mov	r0, r4
 800c982:	47c0      	blx	r8
 800c984:	6823      	ldr	r3, [r4, #0]
 800c986:	4456      	add	r6, sl
 800c988:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c98c:	fb06 f207 	mul.w	r2, r6, r7
 800c990:	4629      	mov	r1, r5
 800c992:	4620      	mov	r0, r4
 800c994:	4798      	blx	r3
 800c996:	9010      	str	r0, [sp, #64]	; 0x40
 800c998:	4658      	mov	r0, fp
 800c99a:	f7ff fb83 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c99e:	b203      	sxth	r3, r0
 800c9a0:	e7a0      	b.n	800c8e4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c9a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c9a4:	930d      	str	r3, [sp, #52]	; 0x34
 800c9a6:	9b04      	ldr	r3, [sp, #16]
 800c9a8:	4413      	add	r3, r2
 800c9aa:	9304      	str	r3, [sp, #16]
 800c9ac:	9a04      	ldr	r2, [sp, #16]
 800c9ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c9b0:	4293      	cmp	r3, r2
 800c9b2:	f43f aee2 	beq.w	800c77a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9b6:	9b04      	ldr	r3, [sp, #16]
 800c9b8:	6822      	ldr	r2, [r4, #0]
 800c9ba:	4629      	mov	r1, r5
 800c9bc:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800c9c0:	4620      	mov	r0, r4
 800c9c2:	fb03 f209 	mul.w	r2, r3, r9
 800c9c6:	47c0      	blx	r8
 800c9c8:	9010      	str	r0, [sp, #64]	; 0x40
 800c9ca:	4658      	mov	r0, fp
 800c9cc:	f7ff fb6a 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c9d0:	b203      	sxth	r3, r0
 800c9d2:	9305      	str	r3, [sp, #20]
 800c9d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c9d6:	e785      	b.n	800c8e4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c9d8:	4798      	blx	r3
 800c9da:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c9de:	deff      	udf	#255	; 0xff

0800c9e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800c9e0:	b510      	push	{r4, lr}
 800c9e2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800c9e6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800c9ea:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800c9ee:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800c9f2:	13a4      	asrs	r4, r4, #14
 800c9f4:	139b      	asrs	r3, r3, #14
 800c9f6:	429c      	cmp	r4, r3
 800c9f8:	bfb8      	it	lt
 800c9fa:	461c      	movlt	r4, r3
 800c9fc:	2c01      	cmp	r4, #1
 800c9fe:	dd07      	ble.n	800ca10 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800ca00:	fb91 f1f4 	sdiv	r1, r1, r4
 800ca04:	fb90 f0f4 	sdiv	r0, r0, r4
 800ca08:	f7ff ffea 	bl	800c9e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800ca0c:	4360      	muls	r0, r4
 800ca0e:	bd10      	pop	{r4, pc}
 800ca10:	4340      	muls	r0, r0
 800ca12:	fb01 0101 	mla	r1, r1, r1, r0
 800ca16:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800ca1a:	bfb4      	ite	lt
 800ca1c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800ca20:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800ca24:	2000      	movs	r0, #0
 800ca26:	18c2      	adds	r2, r0, r3
 800ca28:	428a      	cmp	r2, r1
 800ca2a:	bf9c      	itt	ls
 800ca2c:	1898      	addls	r0, r3, r2
 800ca2e:	1a89      	subls	r1, r1, r2
 800ca30:	089b      	lsrs	r3, r3, #2
 800ca32:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800ca36:	d1f6      	bne.n	800ca26 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800ca38:	e7e9      	b.n	800ca0e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800ca3a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800ca3a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca3c:	9906      	ldr	r1, [sp, #24]
 800ca3e:	4291      	cmp	r1, r2
 800ca40:	bfbc      	itt	lt
 800ca42:	9206      	strlt	r2, [sp, #24]
 800ca44:	460a      	movlt	r2, r1
 800ca46:	9907      	ldr	r1, [sp, #28]
 800ca48:	428b      	cmp	r3, r1
 800ca4a:	4606      	mov	r6, r0
 800ca4c:	461c      	mov	r4, r3
 800ca4e:	f04f 0020 	mov.w	r0, #32
 800ca52:	bfc8      	it	gt
 800ca54:	460c      	movgt	r4, r1
 800ca56:	fb92 f5f0 	sdiv	r5, r2, r0
 800ca5a:	fb94 f4f0 	sdiv	r4, r4, r0
 800ca5e:	a806      	add	r0, sp, #24
 800ca60:	bfc8      	it	gt
 800ca62:	9307      	strgt	r3, [sp, #28]
 800ca64:	f7ff fdf7 	bl	800c656 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ca68:	4607      	mov	r7, r0
 800ca6a:	a807      	add	r0, sp, #28
 800ca6c:	f7ff fdf3 	bl	800c656 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ca70:	1b7a      	subs	r2, r7, r5
 800ca72:	1b00      	subs	r0, r0, r4
 800ca74:	80f0      	strh	r0, [r6, #6]
 800ca76:	8035      	strh	r5, [r6, #0]
 800ca78:	8074      	strh	r4, [r6, #2]
 800ca7a:	80b2      	strh	r2, [r6, #4]
 800ca7c:	4630      	mov	r0, r6
 800ca7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ca80 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800ca80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ca82:	9c08      	ldr	r4, [sp, #32]
 800ca84:	2602      	movs	r6, #2
 800ca86:	3401      	adds	r4, #1
 800ca88:	fb94 f4f6 	sdiv	r4, r4, r6
 800ca8c:	18a6      	adds	r6, r4, r2
 800ca8e:	191f      	adds	r7, r3, r4
 800ca90:	e9cd 6700 	strd	r6, r7, [sp]
 800ca94:	1b1b      	subs	r3, r3, r4
 800ca96:	1b12      	subs	r2, r2, r4
 800ca98:	4605      	mov	r5, r0
 800ca9a:	f7ff ffce 	bl	800ca3a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800ca9e:	4628      	mov	r0, r5
 800caa0:	b003      	add	sp, #12
 800caa2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800caa4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800caa4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800caa8:	6943      	ldr	r3, [r0, #20]
 800caaa:	b087      	sub	sp, #28
 800caac:	4606      	mov	r6, r0
 800caae:	460d      	mov	r5, r1
 800cab0:	2b00      	cmp	r3, #0
 800cab2:	d072      	beq.n	800cb9a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800cab4:	695c      	ldr	r4, [r3, #20]
 800cab6:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800caba:	6823      	ldr	r3, [r4, #0]
 800cabc:	4620      	mov	r0, r4
 800cabe:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cac2:	4798      	blx	r3
 800cac4:	6823      	ldr	r3, [r4, #0]
 800cac6:	4680      	mov	r8, r0
 800cac8:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cacc:	4629      	mov	r1, r5
 800cace:	4620      	mov	r0, r4
 800cad0:	4798      	blx	r3
 800cad2:	017f      	lsls	r7, r7, #5
 800cad4:	4603      	mov	r3, r0
 800cad6:	9700      	str	r7, [sp, #0]
 800cad8:	4642      	mov	r2, r8
 800cada:	4631      	mov	r1, r6
 800cadc:	a802      	add	r0, sp, #8
 800cade:	f7ff ffcf 	bl	800ca80 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cae2:	2d00      	cmp	r5, #0
 800cae4:	dd1b      	ble.n	800cb1e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800cae6:	6823      	ldr	r3, [r4, #0]
 800cae8:	f105 38ff 	add.w	r8, r5, #4294967295
 800caec:	fa0f f888 	sxth.w	r8, r8
 800caf0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800caf4:	4641      	mov	r1, r8
 800caf6:	4620      	mov	r0, r4
 800caf8:	4798      	blx	r3
 800cafa:	6823      	ldr	r3, [r4, #0]
 800cafc:	4681      	mov	r9, r0
 800cafe:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cb02:	4641      	mov	r1, r8
 800cb04:	4620      	mov	r0, r4
 800cb06:	4798      	blx	r3
 800cb08:	4631      	mov	r1, r6
 800cb0a:	4603      	mov	r3, r0
 800cb0c:	9700      	str	r7, [sp, #0]
 800cb0e:	a804      	add	r0, sp, #16
 800cb10:	464a      	mov	r2, r9
 800cb12:	f7ff ffb5 	bl	800ca80 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cb16:	a904      	add	r1, sp, #16
 800cb18:	a802      	add	r0, sp, #8
 800cb1a:	f7ff fd57 	bl	800c5cc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cb1e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cb22:	3b01      	subs	r3, #1
 800cb24:	429d      	cmp	r5, r3
 800cb26:	da19      	bge.n	800cb5c <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800cb28:	6823      	ldr	r3, [r4, #0]
 800cb2a:	3501      	adds	r5, #1
 800cb2c:	b22d      	sxth	r5, r5
 800cb2e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cb32:	4629      	mov	r1, r5
 800cb34:	4620      	mov	r0, r4
 800cb36:	4798      	blx	r3
 800cb38:	6823      	ldr	r3, [r4, #0]
 800cb3a:	4680      	mov	r8, r0
 800cb3c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cb40:	4629      	mov	r1, r5
 800cb42:	4620      	mov	r0, r4
 800cb44:	4798      	blx	r3
 800cb46:	4631      	mov	r1, r6
 800cb48:	4603      	mov	r3, r0
 800cb4a:	9700      	str	r7, [sp, #0]
 800cb4c:	a804      	add	r0, sp, #16
 800cb4e:	4642      	mov	r2, r8
 800cb50:	f7ff ff96 	bl	800ca80 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cb54:	a904      	add	r1, sp, #16
 800cb56:	a802      	add	r0, sp, #8
 800cb58:	f7ff fd38 	bl	800c5cc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cb5c:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cb60:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cb64:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800cb68:	18ca      	adds	r2, r1, r3
 800cb6a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cb6e:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cb72:	1a9b      	subs	r3, r3, r2
 800cb74:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cb78:	2200      	movs	r2, #0
 800cb7a:	a904      	add	r1, sp, #16
 800cb7c:	a802      	add	r0, sp, #8
 800cb7e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800cb82:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cb86:	f7fd ffb9 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800cb8a:	6833      	ldr	r3, [r6, #0]
 800cb8c:	a902      	add	r1, sp, #8
 800cb8e:	691b      	ldr	r3, [r3, #16]
 800cb90:	4630      	mov	r0, r6
 800cb92:	4798      	blx	r3
 800cb94:	b007      	add	sp, #28
 800cb96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb9a:	681b      	ldr	r3, [r3, #0]
 800cb9c:	deff      	udf	#255	; 0xff

0800cb9e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800cb9e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cba2:	2b00      	cmp	r3, #0
 800cba4:	da05      	bge.n	800cbb2 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800cba6:	880a      	ldrh	r2, [r1, #0]
 800cba8:	b29b      	uxth	r3, r3
 800cbaa:	441a      	add	r2, r3
 800cbac:	425b      	negs	r3, r3
 800cbae:	800a      	strh	r2, [r1, #0]
 800cbb0:	808b      	strh	r3, [r1, #4]
 800cbb2:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cbb6:	2b00      	cmp	r3, #0
 800cbb8:	da05      	bge.n	800cbc6 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800cbba:	884a      	ldrh	r2, [r1, #2]
 800cbbc:	b29b      	uxth	r3, r3
 800cbbe:	441a      	add	r2, r3
 800cbc0:	425b      	negs	r3, r3
 800cbc2:	804a      	strh	r2, [r1, #2]
 800cbc4:	80cb      	strh	r3, [r1, #6]
 800cbc6:	4770      	bx	lr

0800cbc8 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800cbc8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800cbca:	4604      	mov	r4, r0
 800cbcc:	460d      	mov	r5, r1
 800cbce:	6801      	ldr	r1, [r0, #0]
 800cbd0:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800cbd4:	9001      	str	r0, [sp, #4]
 800cbd6:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800cbda:	9000      	str	r0, [sp, #0]
 800cbdc:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800cbe0:	a802      	add	r0, sp, #8
 800cbe2:	4621      	mov	r1, r4
 800cbe4:	47b0      	blx	r6
 800cbe6:	a902      	add	r1, sp, #8
 800cbe8:	4620      	mov	r0, r4
 800cbea:	f7ff ffd8 	bl	800cb9e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800cbee:	a802      	add	r0, sp, #8
 800cbf0:	4629      	mov	r1, r5
 800cbf2:	f7fd ff83 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800cbf6:	a802      	add	r0, sp, #8
 800cbf8:	f7fd ffc3 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cbfc:	b968      	cbnz	r0, 800cc1a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800cbfe:	6823      	ldr	r3, [r4, #0]
 800cc00:	a902      	add	r1, sp, #8
 800cc02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cc04:	4620      	mov	r0, r4
 800cc06:	4798      	blx	r3
 800cc08:	f7f5 fc6a 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800cc0c:	6803      	ldr	r3, [r0, #0]
 800cc0e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cc10:	6a1d      	ldr	r5, [r3, #32]
 800cc12:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800cc16:	a902      	add	r1, sp, #8
 800cc18:	47a8      	blx	r5
 800cc1a:	b004      	add	sp, #16
 800cc1c:	bd70      	pop	{r4, r5, r6, pc}

0800cc1e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800cc1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc22:	b08b      	sub	sp, #44	; 0x2c
 800cc24:	461e      	mov	r6, r3
 800cc26:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800cc2a:	9304      	str	r3, [sp, #16]
 800cc2c:	429e      	cmp	r6, r3
 800cc2e:	4689      	mov	r9, r1
 800cc30:	4615      	mov	r5, r2
 800cc32:	d072      	beq.n	800cd1a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800cc34:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cc38:	015b      	lsls	r3, r3, #5
 800cc3a:	9303      	str	r3, [sp, #12]
 800cc3c:	6813      	ldr	r3, [r2, #0]
 800cc3e:	4610      	mov	r0, r2
 800cc40:	4631      	mov	r1, r6
 800cc42:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cc46:	4798      	blx	r3
 800cc48:	ab0a      	add	r3, sp, #40	; 0x28
 800cc4a:	4634      	mov	r4, r6
 800cc4c:	f843 0d10 	str.w	r0, [r3, #-16]!
 800cc50:	4618      	mov	r0, r3
 800cc52:	f7ff fa27 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc56:	682b      	ldr	r3, [r5, #0]
 800cc58:	4631      	mov	r1, r6
 800cc5a:	0147      	lsls	r7, r0, #5
 800cc5c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cc60:	4628      	mov	r0, r5
 800cc62:	4798      	blx	r3
 800cc64:	ab0a      	add	r3, sp, #40	; 0x28
 800cc66:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800cc6a:	4618      	mov	r0, r3
 800cc6c:	f7ff fa1a 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc70:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800cc74:	4642      	mov	r2, r8
 800cc76:	4639      	mov	r1, r7
 800cc78:	4648      	mov	r0, r9
 800cc7a:	f013 fba9 	bl	80203d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cc7e:	2301      	movs	r3, #1
 800cc80:	9300      	str	r3, [sp, #0]
 800cc82:	9b00      	ldr	r3, [sp, #0]
 800cc84:	441c      	add	r4, r3
 800cc86:	682b      	ldr	r3, [r5, #0]
 800cc88:	b224      	sxth	r4, r4
 800cc8a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cc8e:	4621      	mov	r1, r4
 800cc90:	4628      	mov	r0, r5
 800cc92:	4798      	blx	r3
 800cc94:	9008      	str	r0, [sp, #32]
 800cc96:	a808      	add	r0, sp, #32
 800cc98:	f7ff fa04 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc9c:	0143      	lsls	r3, r0, #5
 800cc9e:	9301      	str	r3, [sp, #4]
 800cca0:	682b      	ldr	r3, [r5, #0]
 800cca2:	4621      	mov	r1, r4
 800cca4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cca8:	4628      	mov	r0, r5
 800ccaa:	4798      	blx	r3
 800ccac:	9009      	str	r0, [sp, #36]	; 0x24
 800ccae:	a809      	add	r0, sp, #36	; 0x24
 800ccb0:	f7ff f9f8 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ccb4:	0143      	lsls	r3, r0, #5
 800ccb6:	9302      	str	r3, [sp, #8]
 800ccb8:	9b01      	ldr	r3, [sp, #4]
 800ccba:	eba3 0b07 	sub.w	fp, r3, r7
 800ccbe:	9b02      	ldr	r3, [sp, #8]
 800ccc0:	eba3 0a08 	sub.w	sl, r3, r8
 800ccc4:	4651      	mov	r1, sl
 800ccc6:	4658      	mov	r0, fp
 800ccc8:	f7ff fe8a 	bl	800c9e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cccc:	b318      	cbz	r0, 800cd16 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800ccce:	4602      	mov	r2, r0
 800ccd0:	4651      	mov	r1, sl
 800ccd2:	9005      	str	r0, [sp, #20]
 800ccd4:	9803      	ldr	r0, [sp, #12]
 800ccd6:	f005 fa09 	bl	80120ec <_ZN8touchgfx6muldivElll>
 800ccda:	2302      	movs	r3, #2
 800ccdc:	fb90 faf3 	sdiv	sl, r0, r3
 800cce0:	9b05      	ldr	r3, [sp, #20]
 800cce2:	9803      	ldr	r0, [sp, #12]
 800cce4:	461a      	mov	r2, r3
 800cce6:	4659      	mov	r1, fp
 800cce8:	f005 fa00 	bl	80120ec <_ZN8touchgfx6muldivElll>
 800ccec:	2302      	movs	r3, #2
 800ccee:	eba7 010a 	sub.w	r1, r7, sl
 800ccf2:	fb90 fbf3 	sdiv	fp, r0, r3
 800ccf6:	4648      	mov	r0, r9
 800ccf8:	eb0b 0208 	add.w	r2, fp, r8
 800ccfc:	f013 fa3e 	bl	802017c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd00:	9b02      	ldr	r3, [sp, #8]
 800cd02:	eb03 020b 	add.w	r2, r3, fp
 800cd06:	9b01      	ldr	r3, [sp, #4]
 800cd08:	4648      	mov	r0, r9
 800cd0a:	eba3 010a 	sub.w	r1, r3, sl
 800cd0e:	f013 fa35 	bl	802017c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd12:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800cd16:	42a6      	cmp	r6, r4
 800cd18:	db02      	blt.n	800cd20 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800cd1a:	b00b      	add	sp, #44	; 0x2c
 800cd1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd20:	9b00      	ldr	r3, [sp, #0]
 800cd22:	9a04      	ldr	r2, [sp, #16]
 800cd24:	42a2      	cmp	r2, r4
 800cd26:	bf08      	it	eq
 800cd28:	f04f 33ff 	moveq.w	r3, #4294967295
 800cd2c:	e7a8      	b.n	800cc80 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800cd30 <_ZN8touchgfx6CanvasD1Ev>:
 800cd30:	b510      	push	{r4, lr}
 800cd32:	4b04      	ldr	r3, [pc, #16]	; (800cd44 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800cd34:	4604      	mov	r4, r0
 800cd36:	f840 3b20 	str.w	r3, [r0], #32
 800cd3a:	f001 fd31 	bl	800e7a0 <_ZN8touchgfx7OutlineD1Ev>
 800cd3e:	4620      	mov	r0, r4
 800cd40:	bd10      	pop	{r4, pc}
 800cd42:	bf00      	nop
 800cd44:	0802395c 	.word	0x0802395c

0800cd48 <_ZN8touchgfx6CanvasD0Ev>:
 800cd48:	b510      	push	{r4, lr}
 800cd4a:	4604      	mov	r4, r0
 800cd4c:	f7ff fff0 	bl	800cd30 <_ZN8touchgfx6CanvasD1Ev>
 800cd50:	4620      	mov	r0, r4
 800cd52:	2170      	movs	r1, #112	; 0x70
 800cd54:	f013 fb8e 	bl	8020474 <_ZdlPvj>
 800cd58:	4620      	mov	r0, r4
 800cd5a:	bd10      	pop	{r4, pc}

0800cd5c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800cd5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd60:	6943      	ldr	r3, [r0, #20]
 800cd62:	b0a2      	sub	sp, #136	; 0x88
 800cd64:	4606      	mov	r6, r0
 800cd66:	460f      	mov	r7, r1
 800cd68:	2b00      	cmp	r3, #0
 800cd6a:	d06a      	beq.n	800ce42 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800cd6c:	695c      	ldr	r4, [r3, #20]
 800cd6e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cd72:	2b01      	cmp	r3, #1
 800cd74:	dc04      	bgt.n	800cd80 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800cd76:	2401      	movs	r4, #1
 800cd78:	4620      	mov	r0, r4
 800cd7a:	b022      	add	sp, #136	; 0x88
 800cd7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd80:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cd84:	ad22      	add	r5, sp, #136	; 0x88
 800cd86:	011b      	lsls	r3, r3, #4
 800cd88:	f845 3d70 	str.w	r3, [r5, #-112]!
 800cd8c:	4628      	mov	r0, r5
 800cd8e:	f7ff fc62 	bl	800c656 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cd92:	8839      	ldrh	r1, [r7, #0]
 800cd94:	88ba      	ldrh	r2, [r7, #4]
 800cd96:	6823      	ldr	r3, [r4, #0]
 800cd98:	b280      	uxth	r0, r0
 800cd9a:	440a      	add	r2, r1
 800cd9c:	4402      	add	r2, r0
 800cd9e:	1a09      	subs	r1, r1, r0
 800cda0:	f10d 000e 	add.w	r0, sp, #14
 800cda4:	9000      	str	r0, [sp, #0]
 800cda6:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800cdaa:	b212      	sxth	r2, r2
 800cdac:	ab03      	add	r3, sp, #12
 800cdae:	b209      	sxth	r1, r1
 800cdb0:	4620      	mov	r0, r4
 800cdb2:	47c0      	blx	r8
 800cdb4:	2800      	cmp	r0, #0
 800cdb6:	d0de      	beq.n	800cd76 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800cdb8:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cdbc:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cdc0:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800cdc4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cdc8:	18ca      	adds	r2, r1, r3
 800cdca:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cdce:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cdd2:	1a9b      	subs	r3, r3, r2
 800cdd4:	4639      	mov	r1, r7
 800cdd6:	2200      	movs	r2, #0
 800cdd8:	a804      	add	r0, sp, #16
 800cdda:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cdde:	f8ad 2010 	strh.w	r2, [sp, #16]
 800cde2:	f7fd fe8b 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800cde6:	aa04      	add	r2, sp, #16
 800cde8:	4631      	mov	r1, r6
 800cdea:	4628      	mov	r0, r5
 800cdec:	f013 f918 	bl	8020020 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800cdf0:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800cdf4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cdf8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800cdfc:	2f00      	cmp	r7, #0
 800cdfe:	dd03      	ble.n	800ce08 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800ce00:	42bb      	cmp	r3, r7
 800ce02:	da01      	bge.n	800ce08 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800ce04:	42ba      	cmp	r2, r7
 800ce06:	da0f      	bge.n	800ce28 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800ce08:	9200      	str	r2, [sp, #0]
 800ce0a:	4622      	mov	r2, r4
 800ce0c:	4629      	mov	r1, r5
 800ce0e:	4630      	mov	r0, r6
 800ce10:	f7ff ff05 	bl	800cc1e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800ce14:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800ce18:	4628      	mov	r0, r5
 800ce1a:	f013 fa2b 	bl	8020274 <_ZN8touchgfx6Canvas6renderEh>
 800ce1e:	4604      	mov	r4, r0
 800ce20:	4628      	mov	r0, r5
 800ce22:	f7ff ff85 	bl	800cd30 <_ZN8touchgfx6CanvasD1Ev>
 800ce26:	e7a7      	b.n	800cd78 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800ce28:	1e7a      	subs	r2, r7, #1
 800ce2a:	b212      	sxth	r2, r2
 800ce2c:	9200      	str	r2, [sp, #0]
 800ce2e:	4629      	mov	r1, r5
 800ce30:	4622      	mov	r2, r4
 800ce32:	4630      	mov	r0, r6
 800ce34:	f7ff fef3 	bl	800cc1e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800ce38:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ce3c:	9300      	str	r3, [sp, #0]
 800ce3e:	463b      	mov	r3, r7
 800ce40:	e7e3      	b.n	800ce0a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800ce42:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800ce46:	deff      	udf	#255	; 0xff

0800ce48 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800ce48:	4770      	bx	lr

0800ce4a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800ce4a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800ce4c:	b118      	cbz	r0, 800ce56 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800ce4e:	6803      	ldr	r3, [r0, #0]
 800ce50:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ce54:	4718      	bx	r3
 800ce56:	4770      	bx	lr

0800ce58 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800ce58:	680b      	ldr	r3, [r1, #0]
 800ce5a:	4608      	mov	r0, r1
 800ce5c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800ce60:	4718      	bx	r3

0800ce62 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800ce62:	680b      	ldr	r3, [r1, #0]
 800ce64:	4608      	mov	r0, r1
 800ce66:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800ce6a:	4718      	bx	r3

0800ce6c <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800ce6c:	680b      	ldr	r3, [r1, #0]
 800ce6e:	4608      	mov	r0, r1
 800ce70:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800ce74:	4718      	bx	r3

0800ce76 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800ce76:	680b      	ldr	r3, [r1, #0]
 800ce78:	4608      	mov	r0, r1
 800ce7a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800ce7e:	4718      	bx	r3

0800ce80 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800ce80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce84:	4a37      	ldr	r2, [pc, #220]	; (800cf64 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800ce86:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800ce88:	8812      	ldrh	r2, [r2, #0]
 800ce8a:	429a      	cmp	r2, r3
 800ce8c:	b087      	sub	sp, #28
 800ce8e:	4604      	mov	r4, r0
 800ce90:	4689      	mov	r9, r1
 800ce92:	d937      	bls.n	800cf04 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ce94:	4a34      	ldr	r2, [pc, #208]	; (800cf68 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800ce96:	6812      	ldr	r2, [r2, #0]
 800ce98:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ce9c:	4b33      	ldr	r3, [pc, #204]	; (800cf6c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800ce9e:	681b      	ldr	r3, [r3, #0]
 800cea0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800cea4:	f1b8 0f00 	cmp.w	r8, #0
 800cea8:	d02c      	beq.n	800cf04 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ceaa:	6803      	ldr	r3, [r0, #0]
 800ceac:	6945      	ldr	r5, [r0, #20]
 800ceae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ceb0:	2d00      	cmp	r5, #0
 800ceb2:	d052      	beq.n	800cf5a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800ceb4:	696f      	ldr	r7, [r5, #20]
 800ceb6:	4798      	blx	r3
 800ceb8:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800cebc:	fb15 f000 	smulbb	r0, r5, r0
 800cec0:	b280      	uxth	r0, r0
 800cec2:	1c45      	adds	r5, r0, #1
 800cec4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800cec8:	122d      	asrs	r5, r5, #8
 800ceca:	d01b      	beq.n	800cf04 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cecc:	6823      	ldr	r3, [r4, #0]
 800cece:	4639      	mov	r1, r7
 800ced0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ced4:	4620      	mov	r0, r4
 800ced6:	4798      	blx	r3
 800ced8:	6823      	ldr	r3, [r4, #0]
 800ceda:	4606      	mov	r6, r0
 800cedc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800cee0:	4639      	mov	r1, r7
 800cee2:	4620      	mov	r0, r4
 800cee4:	4798      	blx	r3
 800cee6:	b2ed      	uxtb	r5, r5
 800cee8:	4683      	mov	fp, r0
 800ceea:	b970      	cbnz	r0, 800cf0a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800ceec:	b96e      	cbnz	r6, 800cf0a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800ceee:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800cef2:	6823      	ldr	r3, [r4, #0]
 800cef4:	9600      	str	r6, [sp, #0]
 800cef6:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800cefa:	4642      	mov	r2, r8
 800cefc:	463b      	mov	r3, r7
 800cefe:	4649      	mov	r1, r9
 800cf00:	4620      	mov	r0, r4
 800cf02:	47a8      	blx	r5
 800cf04:	b007      	add	sp, #28
 800cf06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf0a:	2e00      	cmp	r6, #0
 800cf0c:	ddfa      	ble.n	800cf04 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cf0e:	6823      	ldr	r3, [r4, #0]
 800cf10:	4639      	mov	r1, r7
 800cf12:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800cf16:	4620      	mov	r0, r4
 800cf18:	4798      	blx	r3
 800cf1a:	6823      	ldr	r3, [r4, #0]
 800cf1c:	4682      	mov	sl, r0
 800cf1e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800cf22:	4639      	mov	r1, r7
 800cf24:	4620      	mov	r0, r4
 800cf26:	4798      	blx	r3
 800cf28:	4582      	cmp	sl, r0
 800cf2a:	bfde      	ittt	le
 800cf2c:	4603      	movle	r3, r0
 800cf2e:	4650      	movle	r0, sl
 800cf30:	469a      	movle	sl, r3
 800cf32:	ebaa 0300 	sub.w	r3, sl, r0
 800cf36:	fb93 f3f6 	sdiv	r3, r3, r6
 800cf3a:	2b64      	cmp	r3, #100	; 0x64
 800cf3c:	dce2      	bgt.n	800cf04 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cf3e:	e9cd b503 	strd	fp, r5, [sp, #12]
 800cf42:	e9cd a601 	strd	sl, r6, [sp, #4]
 800cf46:	6823      	ldr	r3, [r4, #0]
 800cf48:	9000      	str	r0, [sp, #0]
 800cf4a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800cf4e:	4642      	mov	r2, r8
 800cf50:	463b      	mov	r3, r7
 800cf52:	4649      	mov	r1, r9
 800cf54:	4620      	mov	r0, r4
 800cf56:	47a8      	blx	r5
 800cf58:	e7d4      	b.n	800cf04 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cf5a:	4798      	blx	r3
 800cf5c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cf60:	deff      	udf	#255	; 0xff
 800cf62:	bf00      	nop
 800cf64:	200154e4 	.word	0x200154e4
 800cf68:	200154e0 	.word	0x200154e0
 800cf6c:	200154e8 	.word	0x200154e8

0800cf70 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800cf70:	4770      	bx	lr

0800cf72 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800cf72:	4770      	bx	lr

0800cf74 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800cf74:	b538      	push	{r3, r4, r5, lr}
 800cf76:	680a      	ldr	r2, [r1, #0]
 800cf78:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800cf7c:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800cf80:	4608      	mov	r0, r1
 800cf82:	4790      	blx	r2
 800cf84:	4629      	mov	r1, r5
 800cf86:	4602      	mov	r2, r0
 800cf88:	4620      	mov	r0, r4
 800cf8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cf8e:	f7ff baa7 	b.w	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800cf92 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800cf92:	b538      	push	{r3, r4, r5, lr}
 800cf94:	680a      	ldr	r2, [r1, #0]
 800cf96:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800cf9a:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800cf9e:	4608      	mov	r0, r1
 800cfa0:	4790      	blx	r2
 800cfa2:	4629      	mov	r1, r5
 800cfa4:	4602      	mov	r2, r0
 800cfa6:	4620      	mov	r0, r4
 800cfa8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cfac:	f7ff ba98 	b.w	800c4e0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800cfb0 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800cfb0:	b510      	push	{r4, lr}
 800cfb2:	214c      	movs	r1, #76	; 0x4c
 800cfb4:	4604      	mov	r4, r0
 800cfb6:	f013 fa5d 	bl	8020474 <_ZdlPvj>
 800cfba:	4620      	mov	r0, r4
 800cfbc:	bd10      	pop	{r4, pc}

0800cfbe <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800cfbe:	b510      	push	{r4, lr}
 800cfc0:	214c      	movs	r1, #76	; 0x4c
 800cfc2:	4604      	mov	r4, r0
 800cfc4:	f013 fa56 	bl	8020474 <_ZdlPvj>
 800cfc8:	4620      	mov	r0, r4
 800cfca:	bd10      	pop	{r4, pc}

0800cfcc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800cfcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfd0:	b08d      	sub	sp, #52	; 0x34
 800cfd2:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800cfd6:	9309      	str	r3, [sp, #36]	; 0x24
 800cfd8:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800cfdc:	930a      	str	r3, [sp, #40]	; 0x28
 800cfde:	4606      	mov	r6, r0
 800cfe0:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800cfe4:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800cfe8:	f1b9 0f00 	cmp.w	r9, #0
 800cfec:	d117      	bne.n	800d01e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800cfee:	2f00      	cmp	r7, #0
 800cff0:	dc7c      	bgt.n	800d0ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800cff2:	f1b8 0f00 	cmp.w	r8, #0
 800cff6:	da01      	bge.n	800cffc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800cff8:	2f00      	cmp	r7, #0
 800cffa:	d17a      	bne.n	800d0f2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800cffc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cffe:	9318      	str	r3, [sp, #96]	; 0x60
 800d000:	2300      	movs	r3, #0
 800d002:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d006:	6832      	ldr	r2, [r6, #0]
 800d008:	9907      	ldr	r1, [sp, #28]
 800d00a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d00e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d012:	4630      	mov	r0, r6
 800d014:	46a4      	mov	ip, r4
 800d016:	b00d      	add	sp, #52	; 0x34
 800d018:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d01c:	4760      	bx	ip
 800d01e:	fb97 f4f9 	sdiv	r4, r7, r9
 800d022:	1e63      	subs	r3, r4, #1
 800d024:	9305      	str	r3, [sp, #20]
 800d026:	f1ba 0f00 	cmp.w	sl, #0
 800d02a:	d122      	bne.n	800d072 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d02c:	fb98 faf9 	sdiv	sl, r8, r9
 800d030:	fb03 f509 	mul.w	r5, r3, r9
 800d034:	f10a 0a02 	add.w	sl, sl, #2
 800d038:	9b05      	ldr	r3, [sp, #20]
 800d03a:	459a      	cmp	sl, r3
 800d03c:	d059      	beq.n	800d0f2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d03e:	42af      	cmp	r7, r5
 800d040:	dc5a      	bgt.n	800d0f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d042:	45a8      	cmp	r8, r5
 800d044:	da01      	bge.n	800d04a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d046:	42af      	cmp	r7, r5
 800d048:	db0e      	blt.n	800d068 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d04a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d04c:	9302      	str	r3, [sp, #8]
 800d04e:	9905      	ldr	r1, [sp, #20]
 800d050:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d052:	6832      	ldr	r2, [r6, #0]
 800d054:	434b      	muls	r3, r1
 800d056:	e9cd 5300 	strd	r5, r3, [sp]
 800d05a:	9907      	ldr	r1, [sp, #28]
 800d05c:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d060:	4630      	mov	r0, r6
 800d062:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d066:	47d8      	blx	fp
 800d068:	9b05      	ldr	r3, [sp, #20]
 800d06a:	3301      	adds	r3, #1
 800d06c:	9305      	str	r3, [sp, #20]
 800d06e:	444d      	add	r5, r9
 800d070:	e7e2      	b.n	800d038 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d072:	fb97 f3fa 	sdiv	r3, r7, sl
 800d076:	3b01      	subs	r3, #1
 800d078:	9306      	str	r3, [sp, #24]
 800d07a:	9a06      	ldr	r2, [sp, #24]
 800d07c:	fb98 f3fa 	sdiv	r3, r8, sl
 800d080:	fb02 fb0a 	mul.w	fp, r2, sl
 800d084:	9a05      	ldr	r2, [sp, #20]
 800d086:	3302      	adds	r3, #2
 800d088:	fb02 f509 	mul.w	r5, r2, r9
 800d08c:	930b      	str	r3, [sp, #44]	; 0x2c
 800d08e:	45ab      	cmp	fp, r5
 800d090:	dd1d      	ble.n	800d0ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d092:	42af      	cmp	r7, r5
 800d094:	dc08      	bgt.n	800d0a8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d096:	45a8      	cmp	r8, r5
 800d098:	da08      	bge.n	800d0ac <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d09a:	42af      	cmp	r7, r5
 800d09c:	da06      	bge.n	800d0ac <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d09e:	9b05      	ldr	r3, [sp, #20]
 800d0a0:	3301      	adds	r3, #1
 800d0a2:	9305      	str	r3, [sp, #20]
 800d0a4:	444d      	add	r5, r9
 800d0a6:	e7f2      	b.n	800d08e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d0a8:	45a8      	cmp	r8, r5
 800d0aa:	dcf8      	bgt.n	800d09e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d0ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d0ae:	9302      	str	r3, [sp, #8]
 800d0b0:	9905      	ldr	r1, [sp, #20]
 800d0b2:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d0b4:	6832      	ldr	r2, [r6, #0]
 800d0b6:	434b      	muls	r3, r1
 800d0b8:	e9cd 5300 	strd	r5, r3, [sp]
 800d0bc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d0c0:	9907      	ldr	r1, [sp, #28]
 800d0c2:	461c      	mov	r4, r3
 800d0c4:	4630      	mov	r0, r6
 800d0c6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d0ca:	47a0      	blx	r4
 800d0cc:	e7e7      	b.n	800d09e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d0ce:	45ab      	cmp	fp, r5
 800d0d0:	db04      	blt.n	800d0dc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d0d2:	9b05      	ldr	r3, [sp, #20]
 800d0d4:	3301      	adds	r3, #1
 800d0d6:	9305      	str	r3, [sp, #20]
 800d0d8:	444d      	add	r5, r9
 800d0da:	e7f8      	b.n	800d0ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d0dc:	9b06      	ldr	r3, [sp, #24]
 800d0de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d0e0:	3301      	adds	r3, #1
 800d0e2:	4293      	cmp	r3, r2
 800d0e4:	9306      	str	r3, [sp, #24]
 800d0e6:	d004      	beq.n	800d0f2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d0e8:	44d3      	add	fp, sl
 800d0ea:	e7d0      	b.n	800d08e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d0ec:	f1b8 0f00 	cmp.w	r8, #0
 800d0f0:	dd84      	ble.n	800cffc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d0f2:	b00d      	add	sp, #52	; 0x34
 800d0f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d0f8:	45a8      	cmp	r8, r5
 800d0fa:	dcb5      	bgt.n	800d068 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d0fc:	e7a5      	b.n	800d04a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d0fe <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d0fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d102:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d106:	b089      	sub	sp, #36	; 0x24
 800d108:	2c00      	cmp	r4, #0
 800d10a:	9007      	str	r0, [sp, #28]
 800d10c:	468a      	mov	sl, r1
 800d10e:	4693      	mov	fp, r2
 800d110:	461d      	mov	r5, r3
 800d112:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d116:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d11a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d11e:	dd03      	ble.n	800d128 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d120:	4564      	cmp	r4, ip
 800d122:	dd01      	ble.n	800d128 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d124:	42b4      	cmp	r4, r6
 800d126:	dd0e      	ble.n	800d146 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d128:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d12c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d130:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d134:	9807      	ldr	r0, [sp, #28]
 800d136:	462b      	mov	r3, r5
 800d138:	465a      	mov	r2, fp
 800d13a:	4651      	mov	r1, sl
 800d13c:	b009      	add	sp, #36	; 0x24
 800d13e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d142:	f7ff bf43 	b.w	800cfcc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d146:	f104 3eff 	add.w	lr, r4, #4294967295
 800d14a:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d14e:	9702      	str	r7, [sp, #8]
 800d150:	e9cd ce00 	strd	ip, lr, [sp]
 800d154:	f7ff ff3a 	bl	800cfcc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d158:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d15c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d160:	9412      	str	r4, [sp, #72]	; 0x48
 800d162:	e7e7      	b.n	800d134 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d164 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d164:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d168:	f1b3 0900 	subs.w	r9, r3, #0
 800d16c:	460d      	mov	r5, r1
 800d16e:	4690      	mov	r8, r2
 800d170:	9f08      	ldr	r7, [sp, #32]
 800d172:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d176:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d178:	da18      	bge.n	800d1ac <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d17a:	2a01      	cmp	r2, #1
 800d17c:	dd16      	ble.n	800d1ac <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d17e:	232d      	movs	r3, #45	; 0x2d
 800d180:	800b      	strh	r3, [r1, #0]
 800d182:	f1c9 0900 	rsb	r9, r9, #0
 800d186:	2001      	movs	r0, #1
 800d188:	2f00      	cmp	r7, #0
 800d18a:	d111      	bne.n	800d1b0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d18c:	eba8 0100 	sub.w	r1, r8, r0
 800d190:	2302      	movs	r3, #2
 800d192:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d196:	fb96 f3f3 	sdiv	r3, r6, r3
 800d19a:	4a24      	ldr	r2, [pc, #144]	; (800d22c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d19c:	444b      	add	r3, r9
 800d19e:	b289      	uxth	r1, r1
 800d1a0:	fb93 f3f6 	sdiv	r3, r3, r6
 800d1a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d1a8:	f006 be06 	b.w	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d1ac:	2000      	movs	r0, #0
 800d1ae:	e7eb      	b.n	800d188 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d1b0:	dd39      	ble.n	800d226 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d1b2:	fb99 f4f6 	sdiv	r4, r9, r6
 800d1b6:	eba8 0100 	sub.w	r1, r8, r0
 800d1ba:	4623      	mov	r3, r4
 800d1bc:	4a1b      	ldr	r2, [pc, #108]	; (800d22c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d1be:	b289      	uxth	r1, r1
 800d1c0:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d1c4:	f006 fdf8 	bl	8013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d1c8:	4628      	mov	r0, r5
 800d1ca:	f006 fa81 	bl	80136d0 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d1ce:	f108 38ff 	add.w	r8, r8, #4294967295
 800d1d2:	4580      	cmp	r8, r0
 800d1d4:	dd27      	ble.n	800d226 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d1d6:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d1da:	fb06 9314 	mls	r3, r6, r4, r9
 800d1de:	3001      	adds	r0, #1
 800d1e0:	2200      	movs	r2, #0
 800d1e2:	f04f 090a 	mov.w	r9, #10
 800d1e6:	f107 3aff 	add.w	sl, r7, #4294967295
 800d1ea:	f04f 0e02 	mov.w	lr, #2
 800d1ee:	fb96 fefe 	sdiv	lr, r6, lr
 800d1f2:	4580      	cmp	r8, r0
 800d1f4:	4684      	mov	ip, r0
 800d1f6:	dd13      	ble.n	800d220 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d1f8:	fb09 f303 	mul.w	r3, r9, r3
 800d1fc:	4592      	cmp	sl, r2
 800d1fe:	f102 0201 	add.w	r2, r2, #1
 800d202:	bf08      	it	eq
 800d204:	4473      	addeq	r3, lr
 800d206:	f100 0c01 	add.w	ip, r0, #1
 800d20a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d20e:	4297      	cmp	r7, r2
 800d210:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d214:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d218:	fb06 3314 	mls	r3, r6, r4, r3
 800d21c:	4660      	mov	r0, ip
 800d21e:	d1e8      	bne.n	800d1f2 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d220:	2300      	movs	r3, #0
 800d222:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d226:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d22a:	bf00      	nop
 800d22c:	080233ac 	.word	0x080233ac

0800d230 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d230:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d234:	4a6b      	ldr	r2, [pc, #428]	; (800d3e4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d236:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d238:	8812      	ldrh	r2, [r2, #0]
 800d23a:	429a      	cmp	r2, r3
 800d23c:	b092      	sub	sp, #72	; 0x48
 800d23e:	4604      	mov	r4, r0
 800d240:	460e      	mov	r6, r1
 800d242:	d93a      	bls.n	800d2ba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d244:	4a68      	ldr	r2, [pc, #416]	; (800d3e8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d246:	6812      	ldr	r2, [r2, #0]
 800d248:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d24c:	4b67      	ldr	r3, [pc, #412]	; (800d3ec <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d24e:	681b      	ldr	r3, [r3, #0]
 800d250:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d254:	f1b8 0f00 	cmp.w	r8, #0
 800d258:	d02f      	beq.n	800d2ba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d25a:	6803      	ldr	r3, [r0, #0]
 800d25c:	6945      	ldr	r5, [r0, #20]
 800d25e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d260:	2d00      	cmp	r5, #0
 800d262:	f000 80ba 	beq.w	800d3da <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d266:	696f      	ldr	r7, [r5, #20]
 800d268:	4798      	blx	r3
 800d26a:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d26e:	fb13 f000 	smulbb	r0, r3, r0
 800d272:	b280      	uxth	r0, r0
 800d274:	1c43      	adds	r3, r0, #1
 800d276:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d27a:	0a03      	lsrs	r3, r0, #8
 800d27c:	d01d      	beq.n	800d2ba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d27e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d280:	6823      	ldr	r3, [r4, #0]
 800d282:	434e      	muls	r6, r1
 800d284:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d288:	4639      	mov	r1, r7
 800d28a:	4620      	mov	r0, r4
 800d28c:	4798      	blx	r3
 800d28e:	6823      	ldr	r3, [r4, #0]
 800d290:	4605      	mov	r5, r0
 800d292:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d296:	4639      	mov	r1, r7
 800d298:	4620      	mov	r0, r4
 800d29a:	4798      	blx	r3
 800d29c:	2d00      	cmp	r5, #0
 800d29e:	dd0f      	ble.n	800d2c0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d2a0:	fb96 f3f5 	sdiv	r3, r6, r5
 800d2a4:	436b      	muls	r3, r5
 800d2a6:	1b9a      	subs	r2, r3, r6
 800d2a8:	4253      	negs	r3, r2
 800d2aa:	4153      	adcs	r3, r2
 800d2ac:	2800      	cmp	r0, #0
 800d2ae:	dd09      	ble.n	800d2c4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d2b0:	fb96 f2f0 	sdiv	r2, r6, r0
 800d2b4:	4350      	muls	r0, r2
 800d2b6:	42b0      	cmp	r0, r6
 800d2b8:	d10e      	bne.n	800d2d8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d2ba:	b012      	add	sp, #72	; 0x48
 800d2bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d2c0:	2300      	movs	r3, #0
 800d2c2:	e7f3      	b.n	800d2ac <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d2c4:	d108      	bne.n	800d2d8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d2c6:	2d00      	cmp	r5, #0
 800d2c8:	f040 8084 	bne.w	800d3d4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d2cc:	2e00      	cmp	r6, #0
 800d2ce:	d055      	beq.n	800d37c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d2d0:	2b00      	cmp	r3, #0
 800d2d2:	d0f2      	beq.n	800d2ba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d2d4:	462a      	mov	r2, r5
 800d2d6:	e007      	b.n	800d2e8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d2d8:	2b00      	cmp	r3, #0
 800d2da:	d0ee      	beq.n	800d2ba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d2dc:	2d00      	cmp	r5, #0
 800d2de:	d0f9      	beq.n	800d2d4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d2e0:	fb96 f2f5 	sdiv	r2, r6, r5
 800d2e4:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d2e6:	436a      	muls	r2, r5
 800d2e8:	683b      	ldr	r3, [r7, #0]
 800d2ea:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d3f0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d2ee:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d2f2:	4631      	mov	r1, r6
 800d2f4:	4638      	mov	r0, r7
 800d2f6:	4798      	blx	r3
 800d2f8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d2fa:	9302      	str	r3, [sp, #8]
 800d2fc:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d300:	9301      	str	r3, [sp, #4]
 800d302:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d306:	9300      	str	r3, [sp, #0]
 800d308:	a908      	add	r1, sp, #32
 800d30a:	4603      	mov	r3, r0
 800d30c:	2214      	movs	r2, #20
 800d30e:	4620      	mov	r0, r4
 800d310:	f7ff ff28 	bl	800d164 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d314:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d318:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d31a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d31e:	f8d8 3000 	ldr.w	r3, [r8]
 800d322:	d12d      	bne.n	800d380 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d324:	f8d9 0000 	ldr.w	r0, [r9]
 800d328:	699d      	ldr	r5, [r3, #24]
 800d32a:	f7f7 fd5b 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d32e:	aa08      	add	r2, sp, #32
 800d330:	4601      	mov	r1, r0
 800d332:	4640      	mov	r0, r8
 800d334:	47a8      	blx	r5
 800d336:	4605      	mov	r5, r0
 800d338:	683b      	ldr	r3, [r7, #0]
 800d33a:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d33e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d342:	4631      	mov	r1, r6
 800d344:	4638      	mov	r0, r7
 800d346:	4798      	blx	r3
 800d348:	ab12      	add	r3, sp, #72	; 0x48
 800d34a:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d34e:	4618      	mov	r0, r3
 800d350:	f7fe fea8 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d354:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d358:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d35c:	4440      	add	r0, r8
 800d35e:	6823      	ldr	r3, [r4, #0]
 800d360:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d364:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d368:	2200      	movs	r2, #0
 800d36a:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d36e:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d372:	691b      	ldr	r3, [r3, #16]
 800d374:	a906      	add	r1, sp, #24
 800d376:	4620      	mov	r0, r4
 800d378:	4798      	blx	r3
 800d37a:	e79e      	b.n	800d2ba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d37c:	4632      	mov	r2, r6
 800d37e:	e7b3      	b.n	800d2e8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d380:	f8d9 0000 	ldr.w	r0, [r9]
 800d384:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d386:	f7f7 fd2d 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d38a:	aa08      	add	r2, sp, #32
 800d38c:	4601      	mov	r1, r0
 800d38e:	4640      	mov	r0, r8
 800d390:	47a8      	blx	r5
 800d392:	f8d8 3000 	ldr.w	r3, [r8]
 800d396:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d398:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d39c:	4605      	mov	r5, r0
 800d39e:	f8d9 0000 	ldr.w	r0, [r9]
 800d3a2:	f7f7 fd1f 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d3a6:	aa08      	add	r2, sp, #32
 800d3a8:	4601      	mov	r1, r0
 800d3aa:	4640      	mov	r0, r8
 800d3ac:	47d0      	blx	sl
 800d3ae:	f8d8 3000 	ldr.w	r3, [r8]
 800d3b2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d3b4:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d3b8:	fb15 f500 	smulbb	r5, r5, r0
 800d3bc:	f8d9 0000 	ldr.w	r0, [r9]
 800d3c0:	f7f7 fd10 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d3c4:	aa08      	add	r2, sp, #32
 800d3c6:	4601      	mov	r1, r0
 800d3c8:	4640      	mov	r0, r8
 800d3ca:	47d0      	blx	sl
 800d3cc:	b2ad      	uxth	r5, r5
 800d3ce:	4405      	add	r5, r0
 800d3d0:	b2ad      	uxth	r5, r5
 800d3d2:	e7b1      	b.n	800d338 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d3d4:	2b00      	cmp	r3, #0
 800d3d6:	d183      	bne.n	800d2e0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d3d8:	e76f      	b.n	800d2ba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d3da:	4798      	blx	r3
 800d3dc:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d3e0:	deff      	udf	#255	; 0xff
 800d3e2:	bf00      	nop
 800d3e4:	200154e4 	.word	0x200154e4
 800d3e8:	200154e0 	.word	0x200154e0
 800d3ec:	200154e8 	.word	0x200154e8
 800d3f0:	200154ec 	.word	0x200154ec

0800d3f4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d3f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3f8:	461d      	mov	r5, r3
 800d3fa:	b099      	sub	sp, #100	; 0x64
 800d3fc:	681b      	ldr	r3, [r3, #0]
 800d3fe:	4604      	mov	r4, r0
 800d400:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d404:	4689      	mov	r9, r1
 800d406:	4628      	mov	r0, r5
 800d408:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d40a:	4690      	mov	r8, r2
 800d40c:	4798      	blx	r3
 800d40e:	af18      	add	r7, sp, #96	; 0x60
 800d410:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d414:	4638      	mov	r0, r7
 800d416:	f7fe fe45 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d41a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d41e:	1ac0      	subs	r0, r0, r3
 800d420:	b200      	sxth	r0, r0
 800d422:	2800      	cmp	r0, #0
 800d424:	f2c0 80b0 	blt.w	800d588 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d428:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d42c:	441a      	add	r2, r3
 800d42e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d432:	1a9b      	subs	r3, r3, r2
 800d434:	b21b      	sxth	r3, r3
 800d436:	4298      	cmp	r0, r3
 800d438:	f280 80a6 	bge.w	800d588 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d43c:	682b      	ldr	r3, [r5, #0]
 800d43e:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d442:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d446:	4628      	mov	r0, r5
 800d448:	4798      	blx	r3
 800d44a:	682b      	ldr	r3, [r5, #0]
 800d44c:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d450:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d454:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d458:	4606      	mov	r6, r0
 800d45a:	4628      	mov	r0, r5
 800d45c:	4798      	blx	r3
 800d45e:	f8cd a000 	str.w	sl, [sp]
 800d462:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d466:	4633      	mov	r3, r6
 800d468:	4639      	mov	r1, r7
 800d46a:	2214      	movs	r2, #20
 800d46c:	4620      	mov	r0, r4
 800d46e:	f7ff fe79 	bl	800d164 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d472:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d476:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d478:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800d5e8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d47c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d480:	f8d8 3000 	ldr.w	r3, [r8]
 800d484:	f040 8083 	bne.w	800d58e <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d488:	f8da 0000 	ldr.w	r0, [sl]
 800d48c:	699e      	ldr	r6, [r3, #24]
 800d48e:	f7f7 fca9 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d492:	463a      	mov	r2, r7
 800d494:	4601      	mov	r1, r0
 800d496:	4640      	mov	r0, r8
 800d498:	47b0      	blx	r6
 800d49a:	4606      	mov	r6, r0
 800d49c:	682b      	ldr	r3, [r5, #0]
 800d49e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d4a0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d4a4:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d4a8:	4628      	mov	r0, r5
 800d4aa:	4798      	blx	r3
 800d4ac:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d4b0:	ad05      	add	r5, sp, #20
 800d4b2:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d4b6:	4658      	mov	r0, fp
 800d4b8:	f7fe fdf4 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d4bc:	4450      	add	r0, sl
 800d4be:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d4c2:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d4c6:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d4ca:	f04f 0a00 	mov.w	sl, #0
 800d4ce:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d4d2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d4d6:	f8ad a016 	strh.w	sl, [sp, #22]
 800d4da:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d4de:	ae07      	add	r6, sp, #28
 800d4e0:	e886 0003 	stmia.w	r6, {r0, r1}
 800d4e4:	4649      	mov	r1, r9
 800d4e6:	4630      	mov	r0, r6
 800d4e8:	f7fd fb08 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800d4ec:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d4f0:	4553      	cmp	r3, sl
 800d4f2:	dd49      	ble.n	800d588 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d4f4:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d4f8:	4553      	cmp	r3, sl
 800d4fa:	dd45      	ble.n	800d588 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d4fc:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d500:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d504:	1a9b      	subs	r3, r3, r2
 800d506:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d50a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d50e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d512:	1a9b      	subs	r3, r3, r2
 800d514:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d518:	6823      	ldr	r3, [r4, #0]
 800d51a:	4620      	mov	r0, r4
 800d51c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d51e:	4629      	mov	r1, r5
 800d520:	4798      	blx	r3
 800d522:	4b30      	ldr	r3, [pc, #192]	; (800d5e4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d524:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d528:	681b      	ldr	r3, [r3, #0]
 800d52a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d52e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d530:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d534:	785b      	ldrb	r3, [r3, #1]
 800d536:	920b      	str	r2, [sp, #44]	; 0x2c
 800d538:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d53c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d540:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d544:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d548:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d54c:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d550:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d554:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d558:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d55c:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d560:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d564:	f7f4 ffbc 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800d568:	4b1f      	ldr	r3, [pc, #124]	; (800d5e8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d56a:	4604      	mov	r4, r0
 800d56c:	4649      	mov	r1, r9
 800d56e:	6818      	ldr	r0, [r3, #0]
 800d570:	f7f7 fc38 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d574:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d578:	e9cd b000 	strd	fp, r0, [sp]
 800d57c:	4633      	mov	r3, r6
 800d57e:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d582:	4620      	mov	r0, r4
 800d584:	f7f7 fbe0 	bl	8004d48 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d588:	b019      	add	sp, #100	; 0x64
 800d58a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d58e:	f8da 0000 	ldr.w	r0, [sl]
 800d592:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d594:	f7f7 fc26 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d598:	463a      	mov	r2, r7
 800d59a:	4601      	mov	r1, r0
 800d59c:	4640      	mov	r0, r8
 800d59e:	47b0      	blx	r6
 800d5a0:	f8d8 3000 	ldr.w	r3, [r8]
 800d5a4:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d5a6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d5aa:	4606      	mov	r6, r0
 800d5ac:	f8da 0000 	ldr.w	r0, [sl]
 800d5b0:	f7f7 fc18 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d5b4:	463a      	mov	r2, r7
 800d5b6:	4601      	mov	r1, r0
 800d5b8:	4640      	mov	r0, r8
 800d5ba:	47d8      	blx	fp
 800d5bc:	f8d8 3000 	ldr.w	r3, [r8]
 800d5c0:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d5c2:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d5c6:	fb16 f600 	smulbb	r6, r6, r0
 800d5ca:	f8da 0000 	ldr.w	r0, [sl]
 800d5ce:	f7f7 fc09 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d5d2:	463a      	mov	r2, r7
 800d5d4:	4601      	mov	r1, r0
 800d5d6:	4640      	mov	r0, r8
 800d5d8:	47d8      	blx	fp
 800d5da:	b2b6      	uxth	r6, r6
 800d5dc:	4406      	add	r6, r0
 800d5de:	b2b6      	uxth	r6, r6
 800d5e0:	e75c      	b.n	800d49c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d5e2:	bf00      	nop
 800d5e4:	200154e0 	.word	0x200154e0
 800d5e8:	200154ec 	.word	0x200154ec

0800d5ec <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d5ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5f0:	4698      	mov	r8, r3
 800d5f2:	b099      	sub	sp, #100	; 0x64
 800d5f4:	681b      	ldr	r3, [r3, #0]
 800d5f6:	4604      	mov	r4, r0
 800d5f8:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d5fc:	4689      	mov	r9, r1
 800d5fe:	4640      	mov	r0, r8
 800d600:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d602:	4617      	mov	r7, r2
 800d604:	4798      	blx	r3
 800d606:	ae18      	add	r6, sp, #96	; 0x60
 800d608:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d60c:	4630      	mov	r0, r6
 800d60e:	f7fe fd49 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d612:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800d616:	1ac0      	subs	r0, r0, r3
 800d618:	b200      	sxth	r0, r0
 800d61a:	2800      	cmp	r0, #0
 800d61c:	f2c0 80c0 	blt.w	800d7a0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d620:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800d624:	441a      	add	r2, r3
 800d626:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800d62a:	1a9b      	subs	r3, r3, r2
 800d62c:	b21b      	sxth	r3, r3
 800d62e:	4298      	cmp	r0, r3
 800d630:	f280 80b6 	bge.w	800d7a0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d634:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d636:	9302      	str	r3, [sp, #8]
 800d638:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d63c:	9301      	str	r3, [sp, #4]
 800d63e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d642:	9300      	str	r3, [sp, #0]
 800d644:	4631      	mov	r1, r6
 800d646:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d648:	f8df a174 	ldr.w	sl, [pc, #372]	; 800d7c0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800d64c:	2214      	movs	r2, #20
 800d64e:	4620      	mov	r0, r4
 800d650:	f7ff fd88 	bl	800d164 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d654:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d658:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d65a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d65e:	683b      	ldr	r3, [r7, #0]
 800d660:	f040 80a1 	bne.w	800d7a6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800d664:	f8da 0000 	ldr.w	r0, [sl]
 800d668:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d66a:	f7f7 fbbb 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d66e:	4632      	mov	r2, r6
 800d670:	4601      	mov	r1, r0
 800d672:	4638      	mov	r0, r7
 800d674:	47a8      	blx	r5
 800d676:	683b      	ldr	r3, [r7, #0]
 800d678:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d67a:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d67e:	4605      	mov	r5, r0
 800d680:	f8da 0000 	ldr.w	r0, [sl]
 800d684:	f7f7 fbae 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d688:	4632      	mov	r2, r6
 800d68a:	4601      	mov	r1, r0
 800d68c:	4638      	mov	r0, r7
 800d68e:	47d8      	blx	fp
 800d690:	683b      	ldr	r3, [r7, #0]
 800d692:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d694:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d698:	fb15 f500 	smulbb	r5, r5, r0
 800d69c:	f8da 0000 	ldr.w	r0, [sl]
 800d6a0:	f7f7 fba0 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d6a4:	4632      	mov	r2, r6
 800d6a6:	4601      	mov	r1, r0
 800d6a8:	4638      	mov	r0, r7
 800d6aa:	47d8      	blx	fp
 800d6ac:	b2ad      	uxth	r5, r5
 800d6ae:	4405      	add	r5, r0
 800d6b0:	b2ad      	uxth	r5, r5
 800d6b2:	f8d8 3000 	ldr.w	r3, [r8]
 800d6b6:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d6b8:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d6bc:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800d6c0:	4640      	mov	r0, r8
 800d6c2:	4798      	blx	r3
 800d6c4:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d6c8:	f04f 0800 	mov.w	r8, #0
 800d6cc:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d6d0:	4658      	mov	r0, fp
 800d6d2:	f7fe fce7 	bl	800c0a4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d6d6:	4450      	add	r0, sl
 800d6d8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d6dc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d6e0:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d6e4:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d6e8:	f8ad 8014 	strh.w	r8, [sp, #20]
 800d6ec:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d6f0:	ad05      	add	r5, sp, #20
 800d6f2:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d6f6:	f10d 0a1c 	add.w	sl, sp, #28
 800d6fa:	e88a 0003 	stmia.w	sl, {r0, r1}
 800d6fe:	4649      	mov	r1, r9
 800d700:	4650      	mov	r0, sl
 800d702:	f7fd f9fb 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800d706:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d70a:	4543      	cmp	r3, r8
 800d70c:	dd48      	ble.n	800d7a0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d70e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d712:	4543      	cmp	r3, r8
 800d714:	dd44      	ble.n	800d7a0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d716:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d71a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d71e:	1a9b      	subs	r3, r3, r2
 800d720:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d724:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d728:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d72c:	1a9b      	subs	r3, r3, r2
 800d72e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d732:	6823      	ldr	r3, [r4, #0]
 800d734:	4620      	mov	r0, r4
 800d736:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d738:	4629      	mov	r1, r5
 800d73a:	4798      	blx	r3
 800d73c:	4b1f      	ldr	r3, [pc, #124]	; (800d7bc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800d73e:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d742:	681b      	ldr	r3, [r3, #0]
 800d744:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d748:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d74a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d74e:	785b      	ldrb	r3, [r3, #1]
 800d750:	920b      	str	r2, [sp, #44]	; 0x2c
 800d752:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d756:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d75a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d75e:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d762:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d766:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d76a:	9709      	str	r7, [sp, #36]	; 0x24
 800d76c:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d770:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800d774:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800d778:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800d77c:	f7f4 feb0 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800d780:	4b0f      	ldr	r3, [pc, #60]	; (800d7c0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800d782:	4604      	mov	r4, r0
 800d784:	4649      	mov	r1, r9
 800d786:	6818      	ldr	r0, [r3, #0]
 800d788:	f7f7 fb2c 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d78c:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800d790:	e9cd b000 	strd	fp, r0, [sp]
 800d794:	4653      	mov	r3, sl
 800d796:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d79a:	4620      	mov	r0, r4
 800d79c:	f7f7 fad4 	bl	8004d48 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d7a0:	b019      	add	sp, #100	; 0x64
 800d7a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7a6:	f8da 0000 	ldr.w	r0, [sl]
 800d7aa:	699d      	ldr	r5, [r3, #24]
 800d7ac:	f7f7 fb1a 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d7b0:	4632      	mov	r2, r6
 800d7b2:	4601      	mov	r1, r0
 800d7b4:	4638      	mov	r0, r7
 800d7b6:	47a8      	blx	r5
 800d7b8:	4605      	mov	r5, r0
 800d7ba:	e77a      	b.n	800d6b2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800d7bc:	200154e0 	.word	0x200154e0
 800d7c0:	200154ec 	.word	0x200154ec

0800d7c4 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800d7c4:	b510      	push	{r4, lr}
 800d7c6:	4604      	mov	r4, r0
 800d7c8:	f7fe fb05 	bl	800bdd6 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800d7cc:	2300      	movs	r3, #0
 800d7ce:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800d7d2:	bd10      	pop	{r4, pc}

0800d7d4 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800d7d4:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800d7d8:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800d7dc:	429a      	cmp	r2, r3
 800d7de:	d101      	bne.n	800d7e4 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800d7e0:	f7fe bd38 	b.w	800c254 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d7e4:	4770      	bx	lr

0800d7e6 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800d7e6:	b538      	push	{r3, r4, r5, lr}
 800d7e8:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800d7ec:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800d7f0:	42a5      	cmp	r5, r4
 800d7f2:	da04      	bge.n	800d7fe <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800d7f4:	6803      	ldr	r3, [r0, #0]
 800d7f6:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800d7fa:	4798      	blx	r3
 800d7fc:	bd38      	pop	{r3, r4, r5, pc}
 800d7fe:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800d802:	4408      	add	r0, r1
 800d804:	1b00      	subs	r0, r0, r4
 800d806:	e7f9      	b.n	800d7fc <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800d808 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800d808:	b570      	push	{r4, r5, r6, lr}
 800d80a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800d80e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800d812:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800d816:	4604      	mov	r4, r0
 800d818:	1c6b      	adds	r3, r5, #1
 800d81a:	b21b      	sxth	r3, r3
 800d81c:	42ae      	cmp	r6, r5
 800d81e:	bf08      	it	eq
 800d820:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800d824:	fb93 f0f2 	sdiv	r0, r3, r2
 800d828:	fb02 3010 	mls	r0, r2, r0, r3
 800d82c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800d830:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800d834:	4296      	cmp	r6, r2
 800d836:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800d83a:	d108      	bne.n	800d84e <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800d83c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800d840:	f004 fa93 	bl	8011d6a <_ZNK8touchgfx8Drawable10invalidateEv>
 800d844:	4620      	mov	r0, r4
 800d846:	f7fe fd05 	bl	800c254 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d84a:	4628      	mov	r0, r5
 800d84c:	bd70      	pop	{r4, r5, r6, pc}
 800d84e:	4629      	mov	r1, r5
 800d850:	4620      	mov	r0, r4
 800d852:	f7fe fcd7 	bl	800c204 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800d856:	e7f8      	b.n	800d84a <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800d858 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800d858:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800d85c:	4770      	bx	lr

0800d85e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800d85e:	b510      	push	{r4, lr}
 800d860:	4604      	mov	r4, r0
 800d862:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d864:	b150      	cbz	r0, 800d87c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d866:	6803      	ldr	r3, [r0, #0]
 800d868:	68db      	ldr	r3, [r3, #12]
 800d86a:	4798      	blx	r3
 800d86c:	b130      	cbz	r0, 800d87c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d86e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d870:	6803      	ldr	r3, [r0, #0]
 800d872:	4621      	mov	r1, r4
 800d874:	689b      	ldr	r3, [r3, #8]
 800d876:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d87a:	4718      	bx	r3
 800d87c:	bd10      	pop	{r4, pc}

0800d87e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800d87e:	b570      	push	{r4, r5, r6, lr}
 800d880:	790b      	ldrb	r3, [r1, #4]
 800d882:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800d886:	2b00      	cmp	r3, #0
 800d888:	bf0c      	ite	eq
 800d88a:	2301      	moveq	r3, #1
 800d88c:	2300      	movne	r3, #0
 800d88e:	4604      	mov	r4, r0
 800d890:	460e      	mov	r6, r1
 800d892:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800d896:	d109      	bne.n	800d8ac <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800d898:	b14d      	cbz	r5, 800d8ae <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800d89a:	7933      	ldrb	r3, [r6, #4]
 800d89c:	2b01      	cmp	r3, #1
 800d89e:	d10c      	bne.n	800d8ba <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d8a0:	6823      	ldr	r3, [r4, #0]
 800d8a2:	4620      	mov	r0, r4
 800d8a4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800d8a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d8aa:	4718      	bx	r3
 800d8ac:	b12d      	cbz	r5, 800d8ba <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d8ae:	6823      	ldr	r3, [r4, #0]
 800d8b0:	4620      	mov	r0, r4
 800d8b2:	695b      	ldr	r3, [r3, #20]
 800d8b4:	4798      	blx	r3
 800d8b6:	2d00      	cmp	r5, #0
 800d8b8:	d1ef      	bne.n	800d89a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800d8ba:	bd70      	pop	{r4, r5, r6, pc}

0800d8bc <_ZN8touchgfx12ToggleButtonD1Ev>:
 800d8bc:	4770      	bx	lr

0800d8be <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800d8be:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d8c2:	b133      	cbz	r3, 800d8d2 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800d8c4:	790b      	ldrb	r3, [r1, #4]
 800d8c6:	2b01      	cmp	r3, #1
 800d8c8:	bf01      	itttt	eq
 800d8ca:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800d8cc:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800d8ce:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800d8d0:	8603      	strheq	r3, [r0, #48]	; 0x30
 800d8d2:	f7ff bfd4 	b.w	800d87e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800d8d6 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800d8d6:	8813      	ldrh	r3, [r2, #0]
 800d8d8:	8683      	strh	r3, [r0, #52]	; 0x34
 800d8da:	f000 bbde 	b.w	800e09a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800d8de <_ZN8touchgfx12ToggleButtonD0Ev>:
 800d8de:	b510      	push	{r4, lr}
 800d8e0:	2138      	movs	r1, #56	; 0x38
 800d8e2:	4604      	mov	r4, r0
 800d8e4:	f012 fdc6 	bl	8020474 <_ZdlPvj>
 800d8e8:	4620      	mov	r0, r4
 800d8ea:	bd10      	pop	{r4, pc}

0800d8ec <_ZNK8touchgfx6Button17invalidateContentEv>:
 800d8ec:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800d8f0:	b12a      	cbz	r2, 800d8fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d8f2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d8f6:	b112      	cbz	r2, 800d8fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d8f8:	6803      	ldr	r3, [r0, #0]
 800d8fa:	695b      	ldr	r3, [r3, #20]
 800d8fc:	4718      	bx	r3
 800d8fe:	4770      	bx	lr

0800d900 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d900:	2000      	movs	r0, #0
 800d902:	4770      	bx	lr

0800d904 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d904:	4b07      	ldr	r3, [pc, #28]	; (800d924 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d906:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d908:	881b      	ldrh	r3, [r3, #0]
 800d90a:	4293      	cmp	r3, r2
 800d90c:	bf81      	itttt	hi
 800d90e:	4b06      	ldrhi	r3, [pc, #24]	; (800d928 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d910:	681b      	ldrhi	r3, [r3, #0]
 800d912:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d916:	7858      	ldrbhi	r0, [r3, #1]
 800d918:	bf8c      	ite	hi
 800d91a:	f000 0003 	andhi.w	r0, r0, #3
 800d91e:	2000      	movls	r0, #0
 800d920:	4770      	bx	lr
 800d922:	bf00      	nop
 800d924:	200154e4 	.word	0x200154e4
 800d928:	200154e0 	.word	0x200154e0

0800d92c <_ZN8touchgfx8TextAreaD1Ev>:
 800d92c:	4770      	bx	lr
	...

0800d930 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d934:	4b10      	ldr	r3, [pc, #64]	; (800d978 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d936:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d938:	881b      	ldrh	r3, [r3, #0]
 800d93a:	428b      	cmp	r3, r1
 800d93c:	4604      	mov	r4, r0
 800d93e:	d918      	bls.n	800d972 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d940:	6803      	ldr	r3, [r0, #0]
 800d942:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800d944:	4b0d      	ldr	r3, [pc, #52]	; (800d97c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d946:	6818      	ldr	r0, [r3, #0]
 800d948:	f7f7 fa4c 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d94c:	6823      	ldr	r3, [r4, #0]
 800d94e:	4606      	mov	r6, r0
 800d950:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d952:	4620      	mov	r0, r4
 800d954:	4798      	blx	r3
 800d956:	6823      	ldr	r3, [r4, #0]
 800d958:	4607      	mov	r7, r0
 800d95a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d95e:	4620      	mov	r0, r4
 800d960:	4798      	blx	r3
 800d962:	463a      	mov	r2, r7
 800d964:	4603      	mov	r3, r0
 800d966:	4631      	mov	r1, r6
 800d968:	4620      	mov	r0, r4
 800d96a:	46ac      	mov	ip, r5
 800d96c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d970:	4760      	bx	ip
 800d972:	2000      	movs	r0, #0
 800d974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d978:	200154e4 	.word	0x200154e4
 800d97c:	200154ec 	.word	0x200154ec

0800d980 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d980:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d984:	4b17      	ldr	r3, [pc, #92]	; (800d9e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d986:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d988:	881b      	ldrh	r3, [r3, #0]
 800d98a:	428b      	cmp	r3, r1
 800d98c:	4604      	mov	r4, r0
 800d98e:	d926      	bls.n	800d9de <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d990:	4b15      	ldr	r3, [pc, #84]	; (800d9e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d992:	681b      	ldr	r3, [r3, #0]
 800d994:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d998:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d99c:	4b13      	ldr	r3, [pc, #76]	; (800d9ec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d99e:	7855      	ldrb	r5, [r2, #1]
 800d9a0:	681b      	ldr	r3, [r3, #0]
 800d9a2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d9a6:	6833      	ldr	r3, [r6, #0]
 800d9a8:	69df      	ldr	r7, [r3, #28]
 800d9aa:	4b11      	ldr	r3, [pc, #68]	; (800d9f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d9ac:	6818      	ldr	r0, [r3, #0]
 800d9ae:	f7f7 fa19 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800d9b2:	6823      	ldr	r3, [r4, #0]
 800d9b4:	4680      	mov	r8, r0
 800d9b6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d9b8:	4620      	mov	r0, r4
 800d9ba:	4798      	blx	r3
 800d9bc:	6823      	ldr	r3, [r4, #0]
 800d9be:	4681      	mov	r9, r0
 800d9c0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d9c4:	4620      	mov	r0, r4
 800d9c6:	4798      	blx	r3
 800d9c8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d9cc:	9000      	str	r0, [sp, #0]
 800d9ce:	464b      	mov	r3, r9
 800d9d0:	4642      	mov	r2, r8
 800d9d2:	4629      	mov	r1, r5
 800d9d4:	4630      	mov	r0, r6
 800d9d6:	47b8      	blx	r7
 800d9d8:	b003      	add	sp, #12
 800d9da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d9de:	2000      	movs	r0, #0
 800d9e0:	e7fa      	b.n	800d9d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d9e2:	bf00      	nop
 800d9e4:	200154e4 	.word	0x200154e4
 800d9e8:	200154e0 	.word	0x200154e0
 800d9ec:	200154e8 	.word	0x200154e8
 800d9f0:	200154ec 	.word	0x200154ec

0800d9f4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d9f4:	b40e      	push	{r1, r2, r3}
 800d9f6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d9fa:	4b2f      	ldr	r3, [pc, #188]	; (800dab8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d9fc:	881a      	ldrh	r2, [r3, #0]
 800d9fe:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800da00:	429a      	cmp	r2, r3
 800da02:	b09d      	sub	sp, #116	; 0x74
 800da04:	4604      	mov	r4, r0
 800da06:	d954      	bls.n	800dab2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800da08:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800dabc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800da0c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800dac0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800da10:	aa26      	add	r2, sp, #152	; 0x98
 800da12:	9202      	str	r2, [sp, #8]
 800da14:	f8d9 2000 	ldr.w	r2, [r9]
 800da18:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800da1c:	f8d8 3000 	ldr.w	r3, [r8]
 800da20:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800da24:	682b      	ldr	r3, [r5, #0]
 800da26:	4628      	mov	r0, r5
 800da28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800da2a:	4798      	blx	r3
 800da2c:	b207      	sxth	r7, r0
 800da2e:	4606      	mov	r6, r0
 800da30:	a803      	add	r0, sp, #12
 800da32:	f004 feea 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 800da36:	682b      	ldr	r3, [r5, #0]
 800da38:	4628      	mov	r0, r5
 800da3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800da3c:	4798      	blx	r3
 800da3e:	682b      	ldr	r3, [r5, #0]
 800da40:	4682      	mov	sl, r0
 800da42:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800da44:	4628      	mov	r0, r5
 800da46:	4798      	blx	r3
 800da48:	4653      	mov	r3, sl
 800da4a:	9000      	str	r0, [sp, #0]
 800da4c:	9a02      	ldr	r2, [sp, #8]
 800da4e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800da50:	a803      	add	r0, sp, #12
 800da52:	f004 ff35 	bl	80128c0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800da56:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800da58:	f8d9 3000 	ldr.w	r3, [r9]
 800da5c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800da60:	8925      	ldrh	r5, [r4, #8]
 800da62:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800da66:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800da6a:	eba5 050c 	sub.w	r5, r5, ip
 800da6e:	784a      	ldrb	r2, [r1, #1]
 800da70:	f8d8 3000 	ldr.w	r3, [r8]
 800da74:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800da78:	b22d      	sxth	r5, r5
 800da7a:	9500      	str	r5, [sp, #0]
 800da7c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800da80:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800da84:	a803      	add	r0, sp, #12
 800da86:	f002 fd2f 	bl	80104e8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800da8a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800da8e:	18b9      	adds	r1, r7, r2
 800da90:	2900      	cmp	r1, #0
 800da92:	b203      	sxth	r3, r0
 800da94:	dd0b      	ble.n	800daae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800da96:	3b01      	subs	r3, #1
 800da98:	fb13 f302 	smulbb	r3, r3, r2
 800da9c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800daa0:	b21f      	sxth	r7, r3
 800daa2:	4638      	mov	r0, r7
 800daa4:	b01d      	add	sp, #116	; 0x74
 800daa6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800daaa:	b003      	add	sp, #12
 800daac:	4770      	bx	lr
 800daae:	2b00      	cmp	r3, #0
 800dab0:	dcf7      	bgt.n	800daa2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dab2:	2700      	movs	r7, #0
 800dab4:	e7f5      	b.n	800daa2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dab6:	bf00      	nop
 800dab8:	200154e4 	.word	0x200154e4
 800dabc:	200154e0 	.word	0x200154e0
 800dac0:	200154e8 	.word	0x200154e8

0800dac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800dac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dac8:	4bbb      	ldr	r3, [pc, #748]	; (800ddb8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800daca:	460c      	mov	r4, r1
 800dacc:	881b      	ldrh	r3, [r3, #0]
 800dace:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800dad0:	428b      	cmp	r3, r1
 800dad2:	b0a9      	sub	sp, #164	; 0xa4
 800dad4:	4681      	mov	r9, r0
 800dad6:	d809      	bhi.n	800daec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800dad8:	2300      	movs	r3, #0
 800dada:	f04f 32ff 	mov.w	r2, #4294967295
 800dade:	e9c0 3200 	strd	r3, r2, [r0]
 800dae2:	6083      	str	r3, [r0, #8]
 800dae4:	4648      	mov	r0, r9
 800dae6:	b029      	add	sp, #164	; 0xa4
 800dae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800daec:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800ddc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800daf0:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800ddc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800daf4:	f8db 3000 	ldr.w	r3, [fp]
 800daf8:	f8d8 0000 	ldr.w	r0, [r8]
 800dafc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800db00:	4bae      	ldr	r3, [pc, #696]	; (800ddbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800db02:	681b      	ldr	r3, [r3, #0]
 800db04:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800db08:	f7f7 f96c 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800db0c:	682b      	ldr	r3, [r5, #0]
 800db0e:	4607      	mov	r7, r0
 800db10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800db12:	4628      	mov	r0, r5
 800db14:	4798      	blx	r3
 800db16:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800db18:	f8cd 800c 	str.w	r8, [sp, #12]
 800db1c:	4430      	add	r0, r6
 800db1e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800db22:	b283      	uxth	r3, r0
 800db24:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800db28:	9302      	str	r3, [sp, #8]
 800db2a:	4650      	mov	r0, sl
 800db2c:	2e00      	cmp	r6, #0
 800db2e:	f040 8091 	bne.w	800dc54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800db32:	f004 fe6a 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 800db36:	682b      	ldr	r3, [r5, #0]
 800db38:	4628      	mov	r0, r5
 800db3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800db3c:	4798      	blx	r3
 800db3e:	682b      	ldr	r3, [r5, #0]
 800db40:	9005      	str	r0, [sp, #20]
 800db42:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800db44:	4628      	mov	r0, r5
 800db46:	4798      	blx	r3
 800db48:	6823      	ldr	r3, [r4, #0]
 800db4a:	4680      	mov	r8, r0
 800db4c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800db4e:	4620      	mov	r0, r4
 800db50:	4798      	blx	r3
 800db52:	6822      	ldr	r2, [r4, #0]
 800db54:	9004      	str	r0, [sp, #16]
 800db56:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800db5a:	4620      	mov	r0, r4
 800db5c:	4790      	blx	r2
 800db5e:	9905      	ldr	r1, [sp, #20]
 800db60:	9b04      	ldr	r3, [sp, #16]
 800db62:	9001      	str	r0, [sp, #4]
 800db64:	9300      	str	r3, [sp, #0]
 800db66:	460a      	mov	r2, r1
 800db68:	4643      	mov	r3, r8
 800db6a:	4639      	mov	r1, r7
 800db6c:	4650      	mov	r0, sl
 800db6e:	f004 febc 	bl	80128ea <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800db72:	4637      	mov	r7, r6
 800db74:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800db76:	f8db 3000 	ldr.w	r3, [fp]
 800db7a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800db7e:	4629      	mov	r1, r5
 800db80:	785b      	ldrb	r3, [r3, #1]
 800db82:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800db86:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800db8a:	4650      	mov	r0, sl
 800db8c:	f002 f9fe 	bl	800ff8c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800db90:	4287      	cmp	r7, r0
 800db92:	bfb8      	it	lt
 800db94:	b207      	sxthlt	r7, r0
 800db96:	3601      	adds	r6, #1
 800db98:	4650      	mov	r0, sl
 800db9a:	b2b6      	uxth	r6, r6
 800db9c:	f004 fe5c 	bl	8012858 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800dba0:	2800      	cmp	r0, #0
 800dba2:	d0e7      	beq.n	800db74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800dba4:	9b02      	ldr	r3, [sp, #8]
 800dba6:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800dbaa:	fb13 f606 	smulbb	r6, r3, r6
 800dbae:	eba6 0608 	sub.w	r6, r6, r8
 800dbb2:	b2b6      	uxth	r6, r6
 800dbb4:	fa0f f886 	sxth.w	r8, r6
 800dbb8:	f1b8 0f00 	cmp.w	r8, #0
 800dbbc:	dd06      	ble.n	800dbcc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800dbbe:	682b      	ldr	r3, [r5, #0]
 800dbc0:	4628      	mov	r0, r5
 800dbc2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dbc4:	4798      	blx	r3
 800dbc6:	4430      	add	r0, r6
 800dbc8:	fa0f f880 	sxth.w	r8, r0
 800dbcc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800dbd0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dbd4:	6823      	ldr	r3, [r4, #0]
 800dbd6:	bf08      	it	eq
 800dbd8:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800dbdc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800dbde:	bf18      	it	ne
 800dbe0:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800dbe4:	4620      	mov	r0, r4
 800dbe6:	4798      	blx	r3
 800dbe8:	2801      	cmp	r0, #1
 800dbea:	b2ba      	uxth	r2, r7
 800dbec:	f000 80d1 	beq.w	800dd92 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800dbf0:	2802      	cmp	r0, #2
 800dbf2:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800dbf6:	f000 80d2 	beq.w	800dd9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800dbfa:	b21e      	sxth	r6, r3
 800dbfc:	7a29      	ldrb	r1, [r5, #8]
 800dbfe:	7a6d      	ldrb	r5, [r5, #9]
 800dc00:	1a76      	subs	r6, r6, r1
 800dc02:	4429      	add	r1, r5
 800dc04:	440a      	add	r2, r1
 800dc06:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800dc0a:	b2b3      	uxth	r3, r6
 800dc0c:	b292      	uxth	r2, r2
 800dc0e:	2902      	cmp	r1, #2
 800dc10:	b21f      	sxth	r7, r3
 800dc12:	b216      	sxth	r6, r2
 800dc14:	f000 80c6 	beq.w	800dda4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800dc18:	2903      	cmp	r1, #3
 800dc1a:	f000 80d5 	beq.w	800ddc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800dc1e:	2901      	cmp	r1, #1
 800dc20:	f040 80db 	bne.w	800ddda <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800dc24:	8923      	ldrh	r3, [r4, #8]
 800dc26:	4632      	mov	r2, r6
 800dc28:	eba3 0308 	sub.w	r3, r3, r8
 800dc2c:	4646      	mov	r6, r8
 800dc2e:	463d      	mov	r5, r7
 800dc30:	4690      	mov	r8, r2
 800dc32:	b21f      	sxth	r7, r3
 800dc34:	9b03      	ldr	r3, [sp, #12]
 800dc36:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dc38:	6818      	ldr	r0, [r3, #0]
 800dc3a:	f7f7 f8d3 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800dc3e:	f8a9 7000 	strh.w	r7, [r9]
 800dc42:	f8a9 5002 	strh.w	r5, [r9, #2]
 800dc46:	f8a9 6004 	strh.w	r6, [r9, #4]
 800dc4a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800dc4e:	f8c9 0008 	str.w	r0, [r9, #8]
 800dc52:	e747      	b.n	800dae4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800dc54:	f004 fdd9 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 800dc58:	682b      	ldr	r3, [r5, #0]
 800dc5a:	4628      	mov	r0, r5
 800dc5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dc5e:	4798      	blx	r3
 800dc60:	682b      	ldr	r3, [r5, #0]
 800dc62:	4606      	mov	r6, r0
 800dc64:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dc66:	4628      	mov	r0, r5
 800dc68:	4798      	blx	r3
 800dc6a:	6823      	ldr	r3, [r4, #0]
 800dc6c:	4680      	mov	r8, r0
 800dc6e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dc70:	4620      	mov	r0, r4
 800dc72:	4798      	blx	r3
 800dc74:	6822      	ldr	r2, [r4, #0]
 800dc76:	9004      	str	r0, [sp, #16]
 800dc78:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800dc7c:	4620      	mov	r0, r4
 800dc7e:	4790      	blx	r2
 800dc80:	9b04      	ldr	r3, [sp, #16]
 800dc82:	9001      	str	r0, [sp, #4]
 800dc84:	4632      	mov	r2, r6
 800dc86:	9300      	str	r3, [sp, #0]
 800dc88:	4639      	mov	r1, r7
 800dc8a:	4643      	mov	r3, r8
 800dc8c:	4650      	mov	r0, sl
 800dc8e:	f004 fe2c 	bl	80128ea <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dc92:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800dc96:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800dc9a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dc9c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800dca0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dca4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dca8:	bf0a      	itet	eq
 800dcaa:	4642      	moveq	r2, r8
 800dcac:	461a      	movne	r2, r3
 800dcae:	4698      	moveq	r8, r3
 800dcb0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800dcb4:	1ad2      	subs	r2, r2, r3
 800dcb6:	f8db 3000 	ldr.w	r3, [fp]
 800dcba:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800dcbe:	7859      	ldrb	r1, [r3, #1]
 800dcc0:	f8cd a020 	str.w	sl, [sp, #32]
 800dcc4:	2300      	movs	r3, #0
 800dcc6:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800dcca:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dcce:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800dcd2:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800dcd6:	950a      	str	r5, [sp, #40]	; 0x28
 800dcd8:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800dcdc:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800dce0:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800dce4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800dce8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800dcec:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800dcf0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800dcf4:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800dcf8:	b350      	cbz	r0, 800dd50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dcfa:	682b      	ldr	r3, [r5, #0]
 800dcfc:	4628      	mov	r0, r5
 800dcfe:	695b      	ldr	r3, [r3, #20]
 800dd00:	4798      	blx	r3
 800dd02:	4607      	mov	r7, r0
 800dd04:	b320      	cbz	r0, 800dd50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dd06:	980a      	ldr	r0, [sp, #40]	; 0x28
 800dd08:	6803      	ldr	r3, [r0, #0]
 800dd0a:	4639      	mov	r1, r7
 800dd0c:	68db      	ldr	r3, [r3, #12]
 800dd0e:	4798      	blx	r3
 800dd10:	4606      	mov	r6, r0
 800dd12:	b1e8      	cbz	r0, 800dd50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dd14:	7b43      	ldrb	r3, [r0, #13]
 800dd16:	7a82      	ldrb	r2, [r0, #10]
 800dd18:	005b      	lsls	r3, r3, #1
 800dd1a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dd1e:	4313      	orrs	r3, r2
 800dd20:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800dd24:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800dd28:	2b04      	cmp	r3, #4
 800dd2a:	d111      	bne.n	800dd50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dd2c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800dd2e:	6803      	ldr	r3, [r0, #0]
 800dd30:	4632      	mov	r2, r6
 800dd32:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd34:	4639      	mov	r1, r7
 800dd36:	4798      	blx	r3
 800dd38:	7b73      	ldrb	r3, [r6, #13]
 800dd3a:	005b      	lsls	r3, r3, #1
 800dd3c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800dd40:	7ab3      	ldrb	r3, [r6, #10]
 800dd42:	4313      	orrs	r3, r2
 800dd44:	4418      	add	r0, r3
 800dd46:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800dd4a:	4418      	add	r0, r3
 800dd4c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800dd50:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800dd54:	2600      	movs	r6, #0
 800dd56:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800dd5a:	4637      	mov	r7, r6
 800dd5c:	45c3      	cmp	fp, r8
 800dd5e:	bfd4      	ite	le
 800dd60:	2100      	movle	r1, #0
 800dd62:	2101      	movgt	r1, #1
 800dd64:	a807      	add	r0, sp, #28
 800dd66:	f002 faf0 	bl	801034a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800dd6a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800dd6e:	429f      	cmp	r7, r3
 800dd70:	bfb8      	it	lt
 800dd72:	b21f      	sxthlt	r7, r3
 800dd74:	9b02      	ldr	r3, [sp, #8]
 800dd76:	eba8 0803 	sub.w	r8, r8, r3
 800dd7a:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800dd7e:	3601      	adds	r6, #1
 800dd80:	b2b6      	uxth	r6, r6
 800dd82:	fa0f f888 	sxth.w	r8, r8
 800dd86:	2b00      	cmp	r3, #0
 800dd88:	f43f af0c 	beq.w	800dba4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800dd8c:	45c2      	cmp	sl, r8
 800dd8e:	dbe5      	blt.n	800dd5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800dd90:	e708      	b.n	800dba4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800dd92:	1bf6      	subs	r6, r6, r7
 800dd94:	2702      	movs	r7, #2
 800dd96:	fb96 f6f7 	sdiv	r6, r6, r7
 800dd9a:	b236      	sxth	r6, r6
 800dd9c:	e72e      	b.n	800dbfc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800dd9e:	4413      	add	r3, r2
 800dda0:	1af6      	subs	r6, r6, r3
 800dda2:	e7fa      	b.n	800dd9a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800dda4:	8925      	ldrh	r5, [r4, #8]
 800dda6:	1aad      	subs	r5, r5, r2
 800dda8:	1aed      	subs	r5, r5, r3
 800ddaa:	b22f      	sxth	r7, r5
 800ddac:	8965      	ldrh	r5, [r4, #10]
 800ddae:	eba5 0508 	sub.w	r5, r5, r8
 800ddb2:	b22d      	sxth	r5, r5
 800ddb4:	e73e      	b.n	800dc34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800ddb6:	bf00      	nop
 800ddb8:	200154e4 	.word	0x200154e4
 800ddbc:	200154e8 	.word	0x200154e8
 800ddc0:	200154e0 	.word	0x200154e0
 800ddc4:	200154ec 	.word	0x200154ec
 800ddc8:	8965      	ldrh	r5, [r4, #10]
 800ddca:	1aad      	subs	r5, r5, r2
 800ddcc:	1aed      	subs	r5, r5, r3
 800ddce:	4633      	mov	r3, r6
 800ddd0:	b22d      	sxth	r5, r5
 800ddd2:	4646      	mov	r6, r8
 800ddd4:	2700      	movs	r7, #0
 800ddd6:	4698      	mov	r8, r3
 800ddd8:	e72c      	b.n	800dc34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800ddda:	2500      	movs	r5, #0
 800dddc:	e72a      	b.n	800dc34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800ddde:	bf00      	nop

0800dde0 <_ZN8touchgfx8TextAreaD0Ev>:
 800dde0:	b510      	push	{r4, lr}
 800dde2:	2148      	movs	r1, #72	; 0x48
 800dde4:	4604      	mov	r4, r0
 800dde6:	f012 fb45 	bl	8020474 <_ZdlPvj>
 800ddea:	4620      	mov	r0, r4
 800ddec:	bd10      	pop	{r4, pc}
	...

0800ddf0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800ddf0:	b513      	push	{r0, r1, r4, lr}
 800ddf2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800ddf6:	4604      	mov	r4, r0
 800ddf8:	b1fb      	cbz	r3, 800de3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ddfa:	4b16      	ldr	r3, [pc, #88]	; (800de54 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800ddfc:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ddfe:	881b      	ldrh	r3, [r3, #0]
 800de00:	428b      	cmp	r3, r1
 800de02:	d91a      	bls.n	800de3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800de04:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800de08:	2b00      	cmp	r3, #0
 800de0a:	dd16      	ble.n	800de3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800de0c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800de10:	2b00      	cmp	r3, #0
 800de12:	dd12      	ble.n	800de3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800de14:	4b10      	ldr	r3, [pc, #64]	; (800de58 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800de16:	6818      	ldr	r0, [r3, #0]
 800de18:	f7f6 ffe4 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800de1c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800de20:	6822      	ldr	r2, [r4, #0]
 800de22:	2b00      	cmp	r3, #0
 800de24:	db06      	blt.n	800de34 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800de26:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800de2a:	2b00      	cmp	r3, #0
 800de2c:	db02      	blt.n	800de34 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800de2e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800de30:	4298      	cmp	r0, r3
 800de32:	d004      	beq.n	800de3e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800de34:	6953      	ldr	r3, [r2, #20]
 800de36:	4620      	mov	r0, r4
 800de38:	4798      	blx	r3
 800de3a:	b002      	add	sp, #8
 800de3c:	bd10      	pop	{r4, pc}
 800de3e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800de42:	c903      	ldmia	r1, {r0, r1}
 800de44:	466b      	mov	r3, sp
 800de46:	e883 0003 	stmia.w	r3, {r0, r1}
 800de4a:	6912      	ldr	r2, [r2, #16]
 800de4c:	4619      	mov	r1, r3
 800de4e:	4620      	mov	r0, r4
 800de50:	4790      	blx	r2
 800de52:	e7f2      	b.n	800de3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800de54:	200154e4 	.word	0x200154e4
 800de58:	200154ec 	.word	0x200154ec

0800de5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800de5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de60:	4b44      	ldr	r3, [pc, #272]	; (800df74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800de62:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800de64:	881b      	ldrh	r3, [r3, #0]
 800de66:	4293      	cmp	r3, r2
 800de68:	b08e      	sub	sp, #56	; 0x38
 800de6a:	4604      	mov	r4, r0
 800de6c:	d97e      	bls.n	800df6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800de6e:	6808      	ldr	r0, [r1, #0]
 800de70:	4d41      	ldr	r5, [pc, #260]	; (800df78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800de72:	6849      	ldr	r1, [r1, #4]
 800de74:	ab05      	add	r3, sp, #20
 800de76:	c303      	stmia	r3!, {r0, r1}
 800de78:	4611      	mov	r1, r2
 800de7a:	6828      	ldr	r0, [r5, #0]
 800de7c:	f7f6 ffb2 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800de80:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800de84:	2b00      	cmp	r3, #0
 800de86:	db11      	blt.n	800deac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800de88:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800de8c:	2b00      	cmp	r3, #0
 800de8e:	db0d      	blt.n	800deac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800de90:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800de92:	4298      	cmp	r0, r3
 800de94:	d10a      	bne.n	800deac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800de96:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800de9a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800de9e:	ab09      	add	r3, sp, #36	; 0x24
 800dea0:	e883 0003 	stmia.w	r3, {r0, r1}
 800dea4:	4619      	mov	r1, r3
 800dea6:	a805      	add	r0, sp, #20
 800dea8:	f7fc fe28 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800deac:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800deb0:	2b00      	cmp	r3, #0
 800deb2:	dd5b      	ble.n	800df6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800deb4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800deb8:	2b00      	cmp	r3, #0
 800deba:	dd57      	ble.n	800df6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800debc:	4f2f      	ldr	r7, [pc, #188]	; (800df7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800debe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dec0:	683b      	ldr	r3, [r7, #0]
 800dec2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800dec6:	4b2e      	ldr	r3, [pc, #184]	; (800df80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800dec8:	681b      	ldr	r3, [r3, #0]
 800deca:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800dece:	2e00      	cmp	r6, #0
 800ded0:	d04c      	beq.n	800df6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ded2:	6823      	ldr	r3, [r4, #0]
 800ded4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800ded8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800deda:	4620      	mov	r0, r4
 800dedc:	4798      	blx	r3
 800dede:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dee0:	683b      	ldr	r3, [r7, #0]
 800dee2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800dee6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800deea:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800deee:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800def0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800def4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800def8:	785b      	ldrb	r3, [r3, #1]
 800defa:	9609      	str	r6, [sp, #36]	; 0x24
 800defc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800df00:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800df04:	4b1f      	ldr	r3, [pc, #124]	; (800df84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800df06:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800df0a:	681b      	ldr	r3, [r3, #0]
 800df0c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800df10:	910b      	str	r1, [sp, #44]	; 0x2c
 800df12:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800df16:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800df1a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800df1e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800df22:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800df26:	b10a      	cbz	r2, 800df2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800df28:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800df2a:	b906      	cbnz	r6, 800df2e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800df2c:	689e      	ldr	r6, [r3, #8]
 800df2e:	af07      	add	r7, sp, #28
 800df30:	4621      	mov	r1, r4
 800df32:	4638      	mov	r0, r7
 800df34:	f003 ffb4 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800df38:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800df3a:	6828      	ldr	r0, [r5, #0]
 800df3c:	f7f6 ff52 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800df40:	6823      	ldr	r3, [r4, #0]
 800df42:	4605      	mov	r5, r0
 800df44:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800df46:	4620      	mov	r0, r4
 800df48:	4798      	blx	r3
 800df4a:	6823      	ldr	r3, [r4, #0]
 800df4c:	4680      	mov	r8, r0
 800df4e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800df52:	4620      	mov	r0, r4
 800df54:	4798      	blx	r3
 800df56:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800df5a:	ab09      	add	r3, sp, #36	; 0x24
 800df5c:	9300      	str	r3, [sp, #0]
 800df5e:	9501      	str	r5, [sp, #4]
 800df60:	ab05      	add	r3, sp, #20
 800df62:	e897 0006 	ldmia.w	r7, {r1, r2}
 800df66:	4630      	mov	r0, r6
 800df68:	f7f6 feee 	bl	8004d48 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800df6c:	b00e      	add	sp, #56	; 0x38
 800df6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800df72:	bf00      	nop
 800df74:	200154e4 	.word	0x200154e4
 800df78:	200154ec 	.word	0x200154ec
 800df7c:	200154e0 	.word	0x200154e0
 800df80:	200154e8 	.word	0x200154e8
 800df84:	20015488 	.word	0x20015488

0800df88 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800df88:	b570      	push	{r4, r5, r6, lr}
 800df8a:	6803      	ldr	r3, [r0, #0]
 800df8c:	4604      	mov	r4, r0
 800df8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800df90:	4615      	mov	r5, r2
 800df92:	4798      	blx	r3
 800df94:	6823      	ldr	r3, [r4, #0]
 800df96:	4629      	mov	r1, r5
 800df98:	4620      	mov	r0, r4
 800df9a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800df9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dfa0:	4718      	bx	r3
	...

0800dfa4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800dfa4:	b538      	push	{r3, r4, r5, lr}
 800dfa6:	4b0e      	ldr	r3, [pc, #56]	; (800dfe0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800dfa8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800dfaa:	881b      	ldrh	r3, [r3, #0]
 800dfac:	429a      	cmp	r2, r3
 800dfae:	4604      	mov	r4, r0
 800dfb0:	d214      	bcs.n	800dfdc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800dfb2:	6803      	ldr	r3, [r0, #0]
 800dfb4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800dfb6:	4798      	blx	r3
 800dfb8:	6823      	ldr	r3, [r4, #0]
 800dfba:	4605      	mov	r5, r0
 800dfbc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800dfbe:	4620      	mov	r0, r4
 800dfc0:	4798      	blx	r3
 800dfc2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800dfc6:	b22d      	sxth	r5, r5
 800dfc8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dfcc:	4601      	mov	r1, r0
 800dfce:	bf06      	itte	eq
 800dfd0:	4602      	moveq	r2, r0
 800dfd2:	4629      	moveq	r1, r5
 800dfd4:	462a      	movne	r2, r5
 800dfd6:	4620      	mov	r0, r4
 800dfd8:	f7ff ffd6 	bl	800df88 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800dfdc:	bd38      	pop	{r3, r4, r5, pc}
 800dfde:	bf00      	nop
 800dfe0:	200154e4 	.word	0x200154e4

0800dfe4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800dfe4:	b530      	push	{r4, r5, lr}
 800dfe6:	888b      	ldrh	r3, [r1, #4]
 800dfe8:	8583      	strh	r3, [r0, #44]	; 0x2c
 800dfea:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800dfee:	b085      	sub	sp, #20
 800dff0:	4604      	mov	r4, r0
 800dff2:	b923      	cbnz	r3, 800dffe <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800dff4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800dff8:	b90b      	cbnz	r3, 800dffe <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800dffa:	f7ff ffd3 	bl	800dfa4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800dffe:	6823      	ldr	r3, [r4, #0]
 800e000:	466d      	mov	r5, sp
 800e002:	4621      	mov	r1, r4
 800e004:	4628      	mov	r0, r5
 800e006:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e00a:	4798      	blx	r3
 800e00c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e010:	343c      	adds	r4, #60	; 0x3c
 800e012:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e016:	b005      	add	sp, #20
 800e018:	bd30      	pop	{r4, r5, pc}

0800e01a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e01a:	2300      	movs	r3, #0
 800e01c:	8083      	strh	r3, [r0, #4]
 800e01e:	80c3      	strh	r3, [r0, #6]
 800e020:	8003      	strh	r3, [r0, #0]
 800e022:	8043      	strh	r3, [r0, #2]
 800e024:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e028:	2bff      	cmp	r3, #255	; 0xff
 800e02a:	bf01      	itttt	eq
 800e02c:	890b      	ldrheq	r3, [r1, #8]
 800e02e:	8083      	strheq	r3, [r0, #4]
 800e030:	894b      	ldrheq	r3, [r1, #10]
 800e032:	80c3      	strheq	r3, [r0, #6]
 800e034:	4770      	bx	lr
	...

0800e038 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e038:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e03a:	4604      	mov	r4, r0
 800e03c:	6808      	ldr	r0, [r1, #0]
 800e03e:	6849      	ldr	r1, [r1, #4]
 800e040:	466b      	mov	r3, sp
 800e042:	c303      	stmia	r3!, {r0, r1}
 800e044:	6823      	ldr	r3, [r4, #0]
 800e046:	4669      	mov	r1, sp
 800e048:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e04a:	4620      	mov	r0, r4
 800e04c:	4798      	blx	r3
 800e04e:	4b08      	ldr	r3, [pc, #32]	; (800e070 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e050:	681b      	ldr	r3, [r3, #0]
 800e052:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e056:	b10a      	cbz	r2, 800e05c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e058:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e05a:	b900      	cbnz	r0, 800e05e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e05c:	6898      	ldr	r0, [r3, #8]
 800e05e:	6803      	ldr	r3, [r0, #0]
 800e060:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e062:	6a1d      	ldr	r5, [r3, #32]
 800e064:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e068:	4669      	mov	r1, sp
 800e06a:	47a8      	blx	r5
 800e06c:	b003      	add	sp, #12
 800e06e:	bd30      	pop	{r4, r5, pc}
 800e070:	20015488 	.word	0x20015488

0800e074 <_ZN8touchgfx3BoxD1Ev>:
 800e074:	4770      	bx	lr

0800e076 <_ZN8touchgfx3BoxD0Ev>:
 800e076:	b510      	push	{r4, lr}
 800e078:	212c      	movs	r1, #44	; 0x2c
 800e07a:	4604      	mov	r4, r0
 800e07c:	f012 f9fa 	bl	8020474 <_ZdlPvj>
 800e080:	4620      	mov	r0, r4
 800e082:	bd10      	pop	{r4, pc}

0800e084 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e084:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e088:	b12a      	cbz	r2, 800e096 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e08a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e08e:	b112      	cbz	r2, 800e096 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e090:	6803      	ldr	r3, [r0, #0]
 800e092:	695b      	ldr	r3, [r3, #20]
 800e094:	4718      	bx	r3
 800e096:	4770      	bx	lr

0800e098 <_ZN8touchgfx6ButtonD1Ev>:
 800e098:	4770      	bx	lr

0800e09a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e09a:	b570      	push	{r4, r5, r6, lr}
 800e09c:	880b      	ldrh	r3, [r1, #0]
 800e09e:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e0a0:	4605      	mov	r5, r0
 800e0a2:	8813      	ldrh	r3, [r2, #0]
 800e0a4:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e0a8:	4604      	mov	r4, r0
 800e0aa:	4628      	mov	r0, r5
 800e0ac:	f006 f8f6 	bl	801429c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e0b0:	4606      	mov	r6, r0
 800e0b2:	4628      	mov	r0, r5
 800e0b4:	f006 f926 	bl	8014304 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e0b8:	6823      	ldr	r3, [r4, #0]
 800e0ba:	4605      	mov	r5, r0
 800e0bc:	4631      	mov	r1, r6
 800e0be:	4620      	mov	r0, r4
 800e0c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e0c2:	4798      	blx	r3
 800e0c4:	6823      	ldr	r3, [r4, #0]
 800e0c6:	4629      	mov	r1, r5
 800e0c8:	4620      	mov	r0, r4
 800e0ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e0cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0d0:	4718      	bx	r3

0800e0d2 <_ZN8touchgfx6ButtonD0Ev>:
 800e0d2:	b510      	push	{r4, lr}
 800e0d4:	2134      	movs	r1, #52	; 0x34
 800e0d6:	4604      	mov	r4, r0
 800e0d8:	f012 f9cc 	bl	8020474 <_ZdlPvj>
 800e0dc:	4620      	mov	r0, r4
 800e0de:	bd10      	pop	{r4, pc}

0800e0e0 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e0e0:	b510      	push	{r4, lr}
 800e0e2:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e0e6:	2bff      	cmp	r3, #255	; 0xff
 800e0e8:	4604      	mov	r4, r0
 800e0ea:	d006      	beq.n	800e0fa <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e0ec:	2300      	movs	r3, #0
 800e0ee:	8003      	strh	r3, [r0, #0]
 800e0f0:	8043      	strh	r3, [r0, #2]
 800e0f2:	8083      	strh	r3, [r0, #4]
 800e0f4:	80c3      	strh	r3, [r0, #6]
 800e0f6:	4620      	mov	r0, r4
 800e0f8:	bd10      	pop	{r4, pc}
 800e0fa:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e0fe:	b11b      	cbz	r3, 800e108 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e100:	3130      	adds	r1, #48	; 0x30
 800e102:	f006 f933 	bl	801436c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e106:	e7f6      	b.n	800e0f6 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e108:	312e      	adds	r1, #46	; 0x2e
 800e10a:	e7fa      	b.n	800e102 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e10c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e10c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e110:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e114:	b08a      	sub	sp, #40	; 0x28
 800e116:	4604      	mov	r4, r0
 800e118:	4688      	mov	r8, r1
 800e11a:	2b00      	cmp	r3, #0
 800e11c:	d066      	beq.n	800e1ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e11e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e120:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e124:	a805      	add	r0, sp, #20
 800e126:	f006 f8b9 	bl	801429c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e12a:	4607      	mov	r7, r0
 800e12c:	a805      	add	r0, sp, #20
 800e12e:	f006 f8e9 	bl	8014304 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e132:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e136:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e13a:	4432      	add	r2, r6
 800e13c:	b292      	uxth	r2, r2
 800e13e:	2300      	movs	r3, #0
 800e140:	fa0f fc82 	sxth.w	ip, r2
 800e144:	459c      	cmp	ip, r3
 800e146:	9306      	str	r3, [sp, #24]
 800e148:	dd52      	ble.n	800e1f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e14a:	42b7      	cmp	r7, r6
 800e14c:	dd50      	ble.n	800e1f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e14e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e152:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e156:	442b      	add	r3, r5
 800e158:	b29b      	uxth	r3, r3
 800e15a:	b219      	sxth	r1, r3
 800e15c:	2900      	cmp	r1, #0
 800e15e:	dd47      	ble.n	800e1f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e160:	42a8      	cmp	r0, r5
 800e162:	dd45      	ble.n	800e1f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e164:	4567      	cmp	r7, ip
 800e166:	bfb8      	it	lt
 800e168:	b2ba      	uxthlt	r2, r7
 800e16a:	4288      	cmp	r0, r1
 800e16c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e170:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e174:	bfb8      	it	lt
 800e176:	b283      	uxthlt	r3, r0
 800e178:	1b92      	subs	r2, r2, r6
 800e17a:	1b5b      	subs	r3, r3, r5
 800e17c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e180:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e184:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e188:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e18c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e190:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e194:	429a      	cmp	r2, r3
 800e196:	d026      	beq.n	800e1e6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e198:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e19c:	2b00      	cmp	r3, #0
 800e19e:	dd22      	ble.n	800e1e6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e1a0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e1a4:	2b00      	cmp	r3, #0
 800e1a6:	dd1e      	ble.n	800e1e6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e1a8:	2300      	movs	r3, #0
 800e1aa:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e1ae:	6823      	ldr	r3, [r4, #0]
 800e1b0:	a908      	add	r1, sp, #32
 800e1b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e1b4:	4620      	mov	r0, r4
 800e1b6:	4798      	blx	r3
 800e1b8:	4b0f      	ldr	r3, [pc, #60]	; (800e1f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e1ba:	681b      	ldr	r3, [r3, #0]
 800e1bc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e1c0:	b10a      	cbz	r2, 800e1c6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e1c2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e1c4:	b900      	cbnz	r0, 800e1c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e1c6:	6898      	ldr	r0, [r3, #8]
 800e1c8:	6801      	ldr	r1, [r0, #0]
 800e1ca:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e1ce:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e1d2:	2501      	movs	r5, #1
 800e1d4:	9502      	str	r5, [sp, #8]
 800e1d6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e1da:	9401      	str	r4, [sp, #4]
 800e1dc:	ac06      	add	r4, sp, #24
 800e1de:	9400      	str	r4, [sp, #0]
 800e1e0:	688c      	ldr	r4, [r1, #8]
 800e1e2:	a905      	add	r1, sp, #20
 800e1e4:	47a0      	blx	r4
 800e1e6:	b00a      	add	sp, #40	; 0x28
 800e1e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1ec:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e1ee:	e797      	b.n	800e120 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e1f0:	2300      	movs	r3, #0
 800e1f2:	9307      	str	r3, [sp, #28]
 800e1f4:	e7ca      	b.n	800e18c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e1f6:	bf00      	nop
 800e1f8:	20015488 	.word	0x20015488

0800e1fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e1fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e200:	4b2f      	ldr	r3, [pc, #188]	; (800e2c0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e202:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e204:	881b      	ldrh	r3, [r3, #0]
 800e206:	4293      	cmp	r3, r2
 800e208:	b08d      	sub	sp, #52	; 0x34
 800e20a:	4604      	mov	r4, r0
 800e20c:	460f      	mov	r7, r1
 800e20e:	d954      	bls.n	800e2ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e210:	4b2c      	ldr	r3, [pc, #176]	; (800e2c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e212:	6819      	ldr	r1, [r3, #0]
 800e214:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e218:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e21c:	4a2a      	ldr	r2, [pc, #168]	; (800e2c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e21e:	6812      	ldr	r2, [r2, #0]
 800e220:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e224:	2900      	cmp	r1, #0
 800e226:	d048      	beq.n	800e2ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e228:	785a      	ldrb	r2, [r3, #1]
 800e22a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e22e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e232:	4b26      	ldr	r3, [pc, #152]	; (800e2cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e234:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e238:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e23c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e240:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e242:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e246:	9107      	str	r1, [sp, #28]
 800e248:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e24c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e250:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e254:	681a      	ldr	r2, [r3, #0]
 800e256:	f88d 8020 	strb.w	r8, [sp, #32]
 800e25a:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e25e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e262:	9609      	str	r6, [sp, #36]	; 0x24
 800e264:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e268:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e26c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e270:	b10b      	cbz	r3, 800e276 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e272:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e274:	b905      	cbnz	r5, 800e278 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e276:	6895      	ldr	r5, [r2, #8]
 800e278:	ae05      	add	r6, sp, #20
 800e27a:	4621      	mov	r1, r4
 800e27c:	4630      	mov	r0, r6
 800e27e:	f003 fe0f 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e282:	4b13      	ldr	r3, [pc, #76]	; (800e2d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e284:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e286:	6818      	ldr	r0, [r3, #0]
 800e288:	f7f6 fdac 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800e28c:	6823      	ldr	r3, [r4, #0]
 800e28e:	4680      	mov	r8, r0
 800e290:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e292:	4620      	mov	r0, r4
 800e294:	4798      	blx	r3
 800e296:	6823      	ldr	r3, [r4, #0]
 800e298:	4681      	mov	r9, r0
 800e29a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e29e:	4620      	mov	r0, r4
 800e2a0:	4798      	blx	r3
 800e2a2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e2a6:	ab07      	add	r3, sp, #28
 800e2a8:	9300      	str	r3, [sp, #0]
 800e2aa:	f8cd 8004 	str.w	r8, [sp, #4]
 800e2ae:	463b      	mov	r3, r7
 800e2b0:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e2b4:	4628      	mov	r0, r5
 800e2b6:	f7f6 fd47 	bl	8004d48 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e2ba:	b00d      	add	sp, #52	; 0x34
 800e2bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e2c0:	200154e4 	.word	0x200154e4
 800e2c4:	200154e0 	.word	0x200154e0
 800e2c8:	200154e8 	.word	0x200154e8
 800e2cc:	20015488 	.word	0x20015488
 800e2d0:	200154ec 	.word	0x200154ec

0800e2d4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e2d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2d8:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e2dc:	b0a0      	sub	sp, #128	; 0x80
 800e2de:	4604      	mov	r4, r0
 800e2e0:	b193      	cbz	r3, 800e308 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e2e2:	4b30      	ldr	r3, [pc, #192]	; (800e3a4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e2e4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e2e6:	881b      	ldrh	r3, [r3, #0]
 800e2e8:	428b      	cmp	r3, r1
 800e2ea:	d90d      	bls.n	800e308 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e2ec:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e2f0:	2b00      	cmp	r3, #0
 800e2f2:	dd09      	ble.n	800e308 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e2f4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e2f8:	2b00      	cmp	r3, #0
 800e2fa:	dd05      	ble.n	800e308 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e2fc:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e300:	b12b      	cbz	r3, 800e30e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e302:	6803      	ldr	r3, [r0, #0]
 800e304:	695b      	ldr	r3, [r3, #20]
 800e306:	4798      	blx	r3
 800e308:	b020      	add	sp, #128	; 0x80
 800e30a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e30e:	4b26      	ldr	r3, [pc, #152]	; (800e3a8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e310:	681b      	ldr	r3, [r3, #0]
 800e312:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e316:	4b25      	ldr	r3, [pc, #148]	; (800e3ac <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e318:	681b      	ldr	r3, [r3, #0]
 800e31a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e31e:	4b24      	ldr	r3, [pc, #144]	; (800e3b0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e320:	6818      	ldr	r0, [r3, #0]
 800e322:	f7f6 fd5f 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800e326:	4606      	mov	r6, r0
 800e328:	a807      	add	r0, sp, #28
 800e32a:	f004 fa6e 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 800e32e:	682b      	ldr	r3, [r5, #0]
 800e330:	4628      	mov	r0, r5
 800e332:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e334:	4798      	blx	r3
 800e336:	682b      	ldr	r3, [r5, #0]
 800e338:	4607      	mov	r7, r0
 800e33a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e33c:	4628      	mov	r0, r5
 800e33e:	4798      	blx	r3
 800e340:	6823      	ldr	r3, [r4, #0]
 800e342:	4605      	mov	r5, r0
 800e344:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e346:	4620      	mov	r0, r4
 800e348:	4798      	blx	r3
 800e34a:	6823      	ldr	r3, [r4, #0]
 800e34c:	4680      	mov	r8, r0
 800e34e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e352:	4620      	mov	r0, r4
 800e354:	4798      	blx	r3
 800e356:	462b      	mov	r3, r5
 800e358:	e9cd 8000 	strd	r8, r0, [sp]
 800e35c:	463a      	mov	r2, r7
 800e35e:	a807      	add	r0, sp, #28
 800e360:	4631      	mov	r1, r6
 800e362:	f004 fac2 	bl	80128ea <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e366:	a807      	add	r0, sp, #28
 800e368:	f004 fe7a 	bl	8013060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e36c:	280a      	cmp	r0, #10
 800e36e:	d103      	bne.n	800e378 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e370:	6823      	ldr	r3, [r4, #0]
 800e372:	4620      	mov	r0, r4
 800e374:	695b      	ldr	r3, [r3, #20]
 800e376:	e7c6      	b.n	800e306 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e378:	a807      	add	r0, sp, #28
 800e37a:	f004 fe71 	bl	8013060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e37e:	2800      	cmp	r0, #0
 800e380:	d1f4      	bne.n	800e36c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e382:	ad04      	add	r5, sp, #16
 800e384:	4621      	mov	r1, r4
 800e386:	4628      	mov	r0, r5
 800e388:	f7ff fb9c 	bl	800dac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e38c:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e390:	6822      	ldr	r2, [r4, #0]
 800e392:	ab02      	add	r3, sp, #8
 800e394:	e883 0003 	stmia.w	r3, {r0, r1}
 800e398:	6912      	ldr	r2, [r2, #16]
 800e39a:	4619      	mov	r1, r3
 800e39c:	4620      	mov	r0, r4
 800e39e:	4790      	blx	r2
 800e3a0:	e7b2      	b.n	800e308 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e3a2:	bf00      	nop
 800e3a4:	200154e4 	.word	0x200154e4
 800e3a8:	200154e0 	.word	0x200154e0
 800e3ac:	200154e8 	.word	0x200154e8
 800e3b0:	200154ec 	.word	0x200154ec

0800e3b4 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e3b4:	4770      	bx	lr

0800e3b6 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e3b6:	b510      	push	{r4, lr}
 800e3b8:	2134      	movs	r1, #52	; 0x34
 800e3ba:	4604      	mov	r4, r0
 800e3bc:	f012 f85a 	bl	8020474 <_ZdlPvj>
 800e3c0:	4620      	mov	r0, r4
 800e3c2:	bd10      	pop	{r4, pc}

0800e3c4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e3c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3c8:	4604      	mov	r4, r0
 800e3ca:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e3cc:	8962      	ldrh	r2, [r4, #10]
 800e3ce:	b218      	sxth	r0, r3
 800e3d0:	460e      	mov	r6, r1
 800e3d2:	005b      	lsls	r3, r3, #1
 800e3d4:	8921      	ldrh	r1, [r4, #8]
 800e3d6:	b29b      	uxth	r3, r3
 800e3d8:	1ac9      	subs	r1, r1, r3
 800e3da:	b08e      	sub	sp, #56	; 0x38
 800e3dc:	b209      	sxth	r1, r1
 800e3de:	1ad3      	subs	r3, r2, r3
 800e3e0:	b21b      	sxth	r3, r3
 800e3e2:	2900      	cmp	r1, #0
 800e3e4:	f8ad 0000 	strh.w	r0, [sp]
 800e3e8:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e3ec:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e3f0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e3f4:	dd5e      	ble.n	800e4b4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e3f6:	2b00      	cmp	r3, #0
 800e3f8:	dd5c      	ble.n	800e4b4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e3fa:	6830      	ldr	r0, [r6, #0]
 800e3fc:	6871      	ldr	r1, [r6, #4]
 800e3fe:	ab02      	add	r3, sp, #8
 800e400:	c303      	stmia	r3!, {r0, r1}
 800e402:	4669      	mov	r1, sp
 800e404:	a802      	add	r0, sp, #8
 800e406:	f7fc fb79 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800e40a:	4620      	mov	r0, r4
 800e40c:	a902      	add	r1, sp, #8
 800e40e:	f7ff fe13 	bl	800e038 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e412:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e414:	2800      	cmp	r0, #0
 800e416:	d05f      	beq.n	800e4d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e418:	8963      	ldrh	r3, [r4, #10]
 800e41a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e41e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e422:	1a1f      	subs	r7, r3, r0
 800e424:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e428:	b202      	sxth	r2, r0
 800e42a:	2500      	movs	r5, #0
 800e42c:	b21b      	sxth	r3, r3
 800e42e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e432:	1a09      	subs	r1, r1, r0
 800e434:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e438:	9506      	str	r5, [sp, #24]
 800e43a:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e43e:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e442:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e446:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e44a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e44e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e452:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e456:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e45a:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e45e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e462:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e466:	af04      	add	r7, sp, #16
 800e468:	ab06      	add	r3, sp, #24
 800e46a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e46e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e472:	e887 0003 	stmia.w	r7, {r0, r1}
 800e476:	4631      	mov	r1, r6
 800e478:	4638      	mov	r0, r7
 800e47a:	f7fc fb3f 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800e47e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e482:	2b00      	cmp	r3, #0
 800e484:	dd12      	ble.n	800e4ac <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e486:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e48a:	2b00      	cmp	r3, #0
 800e48c:	dd0e      	ble.n	800e4ac <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e48e:	6823      	ldr	r3, [r4, #0]
 800e490:	4639      	mov	r1, r7
 800e492:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e494:	4620      	mov	r0, r4
 800e496:	4798      	blx	r3
 800e498:	f7f4 f822 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800e49c:	6803      	ldr	r3, [r0, #0]
 800e49e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e4a0:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e4a4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e4a8:	4639      	mov	r1, r7
 800e4aa:	47c0      	blx	r8
 800e4ac:	3501      	adds	r5, #1
 800e4ae:	2d04      	cmp	r5, #4
 800e4b0:	d1da      	bne.n	800e468 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e4b2:	e011      	b.n	800e4d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e4b4:	6830      	ldr	r0, [r6, #0]
 800e4b6:	6871      	ldr	r1, [r6, #4]
 800e4b8:	ab06      	add	r3, sp, #24
 800e4ba:	c303      	stmia	r3!, {r0, r1}
 800e4bc:	6823      	ldr	r3, [r4, #0]
 800e4be:	a906      	add	r1, sp, #24
 800e4c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4c2:	4620      	mov	r0, r4
 800e4c4:	4798      	blx	r3
 800e4c6:	f7f4 f80b 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 800e4ca:	6803      	ldr	r3, [r0, #0]
 800e4cc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e4ce:	6a1d      	ldr	r5, [r3, #32]
 800e4d0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e4d4:	a906      	add	r1, sp, #24
 800e4d6:	47a8      	blx	r5
 800e4d8:	b00e      	add	sp, #56	; 0x38
 800e4da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e4de <_ZN8touchgfx5ImageD1Ev>:
 800e4de:	4770      	bx	lr

0800e4e0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e4e0:	b570      	push	{r4, r5, r6, lr}
 800e4e2:	880b      	ldrh	r3, [r1, #0]
 800e4e4:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e4e6:	4604      	mov	r4, r0
 800e4e8:	4608      	mov	r0, r1
 800e4ea:	460d      	mov	r5, r1
 800e4ec:	f005 fed6 	bl	801429c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e4f0:	4606      	mov	r6, r0
 800e4f2:	4628      	mov	r0, r5
 800e4f4:	f005 ff06 	bl	8014304 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e4f8:	6823      	ldr	r3, [r4, #0]
 800e4fa:	4605      	mov	r5, r0
 800e4fc:	4631      	mov	r1, r6
 800e4fe:	4620      	mov	r0, r4
 800e500:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e502:	4798      	blx	r3
 800e504:	6823      	ldr	r3, [r4, #0]
 800e506:	4629      	mov	r1, r5
 800e508:	4620      	mov	r0, r4
 800e50a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e50c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e510:	4718      	bx	r3

0800e512 <_ZN8touchgfx5ImageD0Ev>:
 800e512:	b510      	push	{r4, lr}
 800e514:	212c      	movs	r1, #44	; 0x2c
 800e516:	4604      	mov	r4, r0
 800e518:	f011 ffac 	bl	8020474 <_ZdlPvj>
 800e51c:	4620      	mov	r0, r4
 800e51e:	bd10      	pop	{r4, pc}

0800e520 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e520:	b510      	push	{r4, lr}
 800e522:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e526:	2bff      	cmp	r3, #255	; 0xff
 800e528:	4604      	mov	r4, r0
 800e52a:	d006      	beq.n	800e53a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e52c:	2300      	movs	r3, #0
 800e52e:	8003      	strh	r3, [r0, #0]
 800e530:	8043      	strh	r3, [r0, #2]
 800e532:	8083      	strh	r3, [r0, #4]
 800e534:	80c3      	strh	r3, [r0, #6]
 800e536:	4620      	mov	r0, r4
 800e538:	bd10      	pop	{r4, pc}
 800e53a:	3126      	adds	r1, #38	; 0x26
 800e53c:	f005 ff16 	bl	801436c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e540:	e7f9      	b.n	800e536 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e542 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e542:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e546:	b12a      	cbz	r2, 800e554 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e548:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e54c:	b112      	cbz	r2, 800e554 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e54e:	6803      	ldr	r3, [r0, #0]
 800e550:	695b      	ldr	r3, [r3, #20]
 800e552:	4718      	bx	r3
 800e554:	4770      	bx	lr
	...

0800e558 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e558:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e55c:	4604      	mov	r4, r0
 800e55e:	b088      	sub	sp, #32
 800e560:	f854 3b26 	ldr.w	r3, [r4], #38
 800e564:	2500      	movs	r5, #0
 800e566:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e568:	460f      	mov	r7, r1
 800e56a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e56e:	a904      	add	r1, sp, #16
 800e570:	4606      	mov	r6, r0
 800e572:	4798      	blx	r3
 800e574:	4620      	mov	r0, r4
 800e576:	f005 fe91 	bl	801429c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e57a:	4680      	mov	r8, r0
 800e57c:	4620      	mov	r0, r4
 800e57e:	f005 fec1 	bl	8014304 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e582:	9506      	str	r5, [sp, #24]
 800e584:	ad06      	add	r5, sp, #24
 800e586:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e58a:	4639      	mov	r1, r7
 800e58c:	4628      	mov	r0, r5
 800e58e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e592:	f7fc fab3 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800e596:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e59a:	2b00      	cmp	r3, #0
 800e59c:	dd19      	ble.n	800e5d2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e59e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e5a2:	2b00      	cmp	r3, #0
 800e5a4:	dd15      	ble.n	800e5d2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e5a6:	4b0c      	ldr	r3, [pc, #48]	; (800e5d8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e5a8:	681b      	ldr	r3, [r3, #0]
 800e5aa:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e5ae:	b10a      	cbz	r2, 800e5b4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e5b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e5b2:	b900      	cbnz	r0, 800e5b6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e5b4:	6898      	ldr	r0, [r3, #8]
 800e5b6:	6801      	ldr	r1, [r0, #0]
 800e5b8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e5bc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e5c0:	2701      	movs	r7, #1
 800e5c2:	9702      	str	r7, [sp, #8]
 800e5c4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e5c8:	e9cd 5600 	strd	r5, r6, [sp]
 800e5cc:	688d      	ldr	r5, [r1, #8]
 800e5ce:	4621      	mov	r1, r4
 800e5d0:	47a8      	blx	r5
 800e5d2:	b008      	add	sp, #32
 800e5d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5d8:	20015488 	.word	0x20015488

0800e5dc <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800e5dc:	4770      	bx	lr

0800e5de <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e5de:	b510      	push	{r4, lr}
 800e5e0:	2148      	movs	r1, #72	; 0x48
 800e5e2:	4604      	mov	r4, r0
 800e5e4:	f011 ff46 	bl	8020474 <_ZdlPvj>
 800e5e8:	4620      	mov	r0, r4
 800e5ea:	bd10      	pop	{r4, pc}

0800e5ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800e5ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5f0:	b08d      	sub	sp, #52	; 0x34
 800e5f2:	4604      	mov	r4, r0
 800e5f4:	4688      	mov	r8, r1
 800e5f6:	f7ff fd89 	bl	800e10c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800e5fa:	4a4d      	ldr	r2, [pc, #308]	; (800e730 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800e5fc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e5fe:	8812      	ldrh	r2, [r2, #0]
 800e600:	429a      	cmp	r2, r3
 800e602:	f240 8081 	bls.w	800e708 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e606:	4e4b      	ldr	r6, [pc, #300]	; (800e734 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800e608:	6832      	ldr	r2, [r6, #0]
 800e60a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e60e:	4b4a      	ldr	r3, [pc, #296]	; (800e738 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800e610:	681b      	ldr	r3, [r3, #0]
 800e612:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800e616:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e61a:	2300      	movs	r3, #0
 800e61c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800e620:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e624:	2b03      	cmp	r3, #3
 800e626:	d811      	bhi.n	800e64c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e628:	e8df f003 	tbb	[pc, r3]
 800e62c:	71027102 	.word	0x71027102
 800e630:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e634:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e638:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e63c:	1a9b      	subs	r3, r3, r2
 800e63e:	2002      	movs	r0, #2
 800e640:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e644:	fb93 f3f0 	sdiv	r3, r3, r0
 800e648:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e64c:	ad03      	add	r5, sp, #12
 800e64e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e652:	f10d 0914 	add.w	r9, sp, #20
 800e656:	e889 0003 	stmia.w	r9, {r0, r1}
 800e65a:	4641      	mov	r1, r8
 800e65c:	4648      	mov	r0, r9
 800e65e:	f7fc fa4d 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 800e662:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e666:	2b00      	cmp	r3, #0
 800e668:	dd4e      	ble.n	800e708 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e66a:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e66e:	2b00      	cmp	r3, #0
 800e670:	dd4a      	ble.n	800e708 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e672:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e676:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e67a:	1a9b      	subs	r3, r3, r2
 800e67c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e680:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e684:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e688:	1a9b      	subs	r3, r3, r2
 800e68a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e68e:	6823      	ldr	r3, [r4, #0]
 800e690:	4629      	mov	r1, r5
 800e692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e694:	4620      	mov	r0, r4
 800e696:	4798      	blx	r3
 800e698:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e69c:	2b00      	cmp	r3, #0
 800e69e:	d045      	beq.n	800e72c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800e6a0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e6a2:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e6a4:	6833      	ldr	r3, [r6, #0]
 800e6a6:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800e6aa:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800e6ae:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e6b2:	785b      	ldrb	r3, [r3, #1]
 800e6b4:	9209      	str	r2, [sp, #36]	; 0x24
 800e6b6:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800e6ba:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e6be:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e6c2:	2300      	movs	r3, #0
 800e6c4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800e6c8:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800e6cc:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e6d0:	4b1a      	ldr	r3, [pc, #104]	; (800e73c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800e6d2:	9707      	str	r7, [sp, #28]
 800e6d4:	681b      	ldr	r3, [r3, #0]
 800e6d6:	f88d 6020 	strb.w	r6, [sp, #32]
 800e6da:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e6de:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800e6e2:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800e6e6:	b10a      	cbz	r2, 800e6ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800e6e8:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800e6ea:	b904      	cbnz	r4, 800e6ee <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800e6ec:	689c      	ldr	r4, [r3, #8]
 800e6ee:	4b14      	ldr	r3, [pc, #80]	; (800e740 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800e6f0:	6818      	ldr	r0, [r3, #0]
 800e6f2:	f7f6 fb77 	bl	8004de4 <_ZNK8touchgfx5Texts7getTextEt>
 800e6f6:	ab07      	add	r3, sp, #28
 800e6f8:	9001      	str	r0, [sp, #4]
 800e6fa:	9300      	str	r3, [sp, #0]
 800e6fc:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e700:	464b      	mov	r3, r9
 800e702:	4620      	mov	r0, r4
 800e704:	f7f6 fb20 	bl	8004d48 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e708:	b00d      	add	sp, #52	; 0x34
 800e70a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e70e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e712:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800e716:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e71a:	1a9b      	subs	r3, r3, r2
 800e71c:	2002      	movs	r0, #2
 800e71e:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e722:	fb93 f3f0 	sdiv	r3, r3, r0
 800e726:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e72a:	e78f      	b.n	800e64c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e72c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e72e:	e7b8      	b.n	800e6a2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800e730:	200154e4 	.word	0x200154e4
 800e734:	200154e0 	.word	0x200154e0
 800e738:	200154e8 	.word	0x200154e8
 800e73c:	20015488 	.word	0x20015488
 800e740:	200154ec 	.word	0x200154ec

0800e744 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800e744:	b510      	push	{r4, lr}
 800e746:	2101      	movs	r1, #1
 800e748:	4c13      	ldr	r4, [pc, #76]	; (800e798 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800e74a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800e74e:	2200      	movs	r2, #0
 800e750:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800e754:	6004      	str	r4, [r0, #0]
 800e756:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e75a:	4c10      	ldr	r4, [pc, #64]	; (800e79c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800e75c:	8082      	strh	r2, [r0, #4]
 800e75e:	80c2      	strh	r2, [r0, #6]
 800e760:	8102      	strh	r2, [r0, #8]
 800e762:	8142      	strh	r2, [r0, #10]
 800e764:	8182      	strh	r2, [r0, #12]
 800e766:	81c2      	strh	r2, [r0, #14]
 800e768:	8202      	strh	r2, [r0, #16]
 800e76a:	8242      	strh	r2, [r0, #18]
 800e76c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e770:	61c2      	str	r2, [r0, #28]
 800e772:	8402      	strh	r2, [r0, #32]
 800e774:	8442      	strh	r2, [r0, #34]	; 0x22
 800e776:	6282      	str	r2, [r0, #40]	; 0x28
 800e778:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800e77c:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e77e:	8601      	strh	r1, [r0, #48]	; 0x30
 800e780:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800e784:	6344      	str	r4, [r0, #52]	; 0x34
 800e786:	8701      	strh	r1, [r0, #56]	; 0x38
 800e788:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800e78c:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800e790:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800e794:	bd10      	pop	{r4, pc}
 800e796:	bf00      	nop
 800e798:	08023fa4 	.word	0x08023fa4
 800e79c:	08021f58 	.word	0x08021f58

0800e7a0 <_ZN8touchgfx7OutlineD1Ev>:
 800e7a0:	4770      	bx	lr

0800e7a2 <_ZN8touchgfx7OutlineD0Ev>:
 800e7a2:	b510      	push	{r4, lr}
 800e7a4:	2130      	movs	r1, #48	; 0x30
 800e7a6:	4604      	mov	r4, r0
 800e7a8:	f011 fe64 	bl	8020474 <_ZdlPvj>
 800e7ac:	4620      	mov	r0, r4
 800e7ae:	bd10      	pop	{r4, pc}

0800e7b0 <_ZN8touchgfx7Outline5resetEv>:
 800e7b0:	b510      	push	{r4, lr}
 800e7b2:	4604      	mov	r4, r0
 800e7b4:	f000 fe8c 	bl	800f4d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e7b8:	60e0      	str	r0, [r4, #12]
 800e7ba:	f000 fe8f 	bl	800f4dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e7be:	68e3      	ldr	r3, [r4, #12]
 800e7c0:	6123      	str	r3, [r4, #16]
 800e7c2:	08c0      	lsrs	r0, r0, #3
 800e7c4:	2200      	movs	r2, #0
 800e7c6:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e7ca:	3801      	subs	r0, #1
 800e7cc:	6060      	str	r0, [r4, #4]
 800e7ce:	60a2      	str	r2, [r4, #8]
 800e7d0:	8019      	strh	r1, [r3, #0]
 800e7d2:	8059      	strh	r1, [r3, #2]
 800e7d4:	809a      	strh	r2, [r3, #4]
 800e7d6:	80da      	strh	r2, [r3, #6]
 800e7d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e7da:	f023 0301 	bic.w	r3, r3, #1
 800e7de:	f043 0302 	orr.w	r3, r3, #2
 800e7e2:	6263      	str	r3, [r4, #36]	; 0x24
 800e7e4:	bd10      	pop	{r4, pc}
	...

0800e7e8 <_ZN8touchgfx7OutlineC1Ev>:
 800e7e8:	b510      	push	{r4, lr}
 800e7ea:	4b0a      	ldr	r3, [pc, #40]	; (800e814 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800e7ec:	6003      	str	r3, [r0, #0]
 800e7ee:	2300      	movs	r3, #0
 800e7f0:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800e7f4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e7f8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e7fc:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800e800:	6243      	str	r3, [r0, #36]	; 0x24
 800e802:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800e806:	4604      	mov	r4, r0
 800e808:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800e80c:	f7ff ffd0 	bl	800e7b0 <_ZN8touchgfx7Outline5resetEv>
 800e810:	4620      	mov	r0, r4
 800e812:	bd10      	pop	{r4, pc}
 800e814:	08024018 	.word	0x08024018

0800e818 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800e818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e81c:	b093      	sub	sp, #76	; 0x4c
 800e81e:	1156      	asrs	r6, r2, #5
 800e820:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800e822:	9305      	str	r3, [sp, #20]
 800e824:	f004 051f 	and.w	r5, r4, #31
 800e828:	1153      	asrs	r3, r2, #5
 800e82a:	9504      	str	r5, [sp, #16]
 800e82c:	1165      	asrs	r5, r4, #5
 800e82e:	9303      	str	r3, [sp, #12]
 800e830:	42ae      	cmp	r6, r5
 800e832:	ea4f 1364 	mov.w	r3, r4, asr #5
 800e836:	9306      	str	r3, [sp, #24]
 800e838:	f002 031f 	and.w	r3, r2, #31
 800e83c:	f040 80f8 	bne.w	800ea30 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800e840:	9c04      	ldr	r4, [sp, #16]
 800e842:	9a05      	ldr	r2, [sp, #20]
 800e844:	42a3      	cmp	r3, r4
 800e846:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800e84a:	6902      	ldr	r2, [r0, #16]
 800e84c:	d125      	bne.n	800e89a <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800e84e:	f9b2 3000 	ldrsh.w	r3, [r2]
 800e852:	459e      	cmp	lr, r3
 800e854:	d103      	bne.n	800e85e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800e856:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e85a:	429e      	cmp	r6, r3
 800e85c:	d035      	beq.n	800e8ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e85e:	88d1      	ldrh	r1, [r2, #6]
 800e860:	8893      	ldrh	r3, [r2, #4]
 800e862:	430b      	orrs	r3, r1
 800e864:	d010      	beq.n	800e888 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e866:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e86a:	2b00      	cmp	r3, #0
 800e86c:	db0c      	blt.n	800e888 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e86e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800e870:	428b      	cmp	r3, r1
 800e872:	da09      	bge.n	800e888 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e874:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e878:	428b      	cmp	r3, r1
 800e87a:	bf38      	it	cc
 800e87c:	3208      	addcc	r2, #8
 800e87e:	f103 0301 	add.w	r3, r3, #1
 800e882:	bf38      	it	cc
 800e884:	6102      	strcc	r2, [r0, #16]
 800e886:	6083      	str	r3, [r0, #8]
 800e888:	6903      	ldr	r3, [r0, #16]
 800e88a:	9a03      	ldr	r2, [sp, #12]
 800e88c:	f8a3 e000 	strh.w	lr, [r3]
 800e890:	805a      	strh	r2, [r3, #2]
 800e892:	2200      	movs	r2, #0
 800e894:	809a      	strh	r2, [r3, #4]
 800e896:	80da      	strh	r2, [r3, #6]
 800e898:	e017      	b.n	800e8ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e89a:	9c05      	ldr	r4, [sp, #20]
 800e89c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800e8a0:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800e8a4:	f004 041f 	and.w	r4, r4, #31
 800e8a8:	114e      	asrs	r6, r1, #5
 800e8aa:	9402      	str	r4, [sp, #8]
 800e8ac:	9c04      	ldr	r4, [sp, #16]
 800e8ae:	4576      	cmp	r6, lr
 800e8b0:	f001 0c1f 	and.w	ip, r1, #31
 800e8b4:	eba4 0403 	sub.w	r4, r4, r3
 800e8b8:	d10a      	bne.n	800e8d0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800e8ba:	9b02      	ldr	r3, [sp, #8]
 800e8bc:	449c      	add	ip, r3
 800e8be:	44a0      	add	r8, r4
 800e8c0:	fb04 a40c 	mla	r4, r4, ip, sl
 800e8c4:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e8c8:	80d4      	strh	r4, [r2, #6]
 800e8ca:	b013      	add	sp, #76	; 0x4c
 800e8cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e8d0:	9d05      	ldr	r5, [sp, #20]
 800e8d2:	1a69      	subs	r1, r5, r1
 800e8d4:	bf5b      	ittet	pl
 800e8d6:	f1cc 0520 	rsbpl	r5, ip, #32
 800e8da:	436c      	mulpl	r4, r5
 800e8dc:	2500      	movmi	r5, #0
 800e8de:	2520      	movpl	r5, #32
 800e8e0:	bf44      	itt	mi
 800e8e2:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e8e6:	4249      	negmi	r1, r1
 800e8e8:	9501      	str	r5, [sp, #4]
 800e8ea:	9f01      	ldr	r7, [sp, #4]
 800e8ec:	fb94 f5f1 	sdiv	r5, r4, r1
 800e8f0:	fb01 4415 	mls	r4, r1, r5, r4
 800e8f4:	bf54      	ite	pl
 800e8f6:	f04f 0901 	movpl.w	r9, #1
 800e8fa:	f04f 39ff 	movmi.w	r9, #4294967295
 800e8fe:	2c00      	cmp	r4, #0
 800e900:	bfb8      	it	lt
 800e902:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e906:	44bc      	add	ip, r7
 800e908:	44a8      	add	r8, r5
 800e90a:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e90e:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e912:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e916:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e91a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e91e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800e922:	bfb8      	it	lt
 800e924:	1864      	addlt	r4, r4, r1
 800e926:	ea58 0202 	orrs.w	r2, r8, r2
 800e92a:	444e      	add	r6, r9
 800e92c:	d011      	beq.n	800e952 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e92e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e932:	f1b8 0f00 	cmp.w	r8, #0
 800e936:	db0c      	blt.n	800e952 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e938:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800e93a:	4590      	cmp	r8, r2
 800e93c:	da09      	bge.n	800e952 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e93e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800e942:	4590      	cmp	r8, r2
 800e944:	bf3c      	itt	cc
 800e946:	f10c 0208 	addcc.w	r2, ip, #8
 800e94a:	6102      	strcc	r2, [r0, #16]
 800e94c:	f108 0201 	add.w	r2, r8, #1
 800e950:	6082      	str	r2, [r0, #8]
 800e952:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e956:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e95a:	f8ac 6000 	strh.w	r6, [ip]
 800e95e:	2700      	movs	r7, #0
 800e960:	45b6      	cmp	lr, r6
 800e962:	f8ac 2002 	strh.w	r2, [ip, #2]
 800e966:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e96a:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e96e:	442b      	add	r3, r5
 800e970:	d04d      	beq.n	800ea0e <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800e972:	9f04      	ldr	r7, [sp, #16]
 800e974:	1aff      	subs	r7, r7, r3
 800e976:	443d      	add	r5, r7
 800e978:	016d      	lsls	r5, r5, #5
 800e97a:	fb95 f8f1 	sdiv	r8, r5, r1
 800e97e:	fb01 5518 	mls	r5, r1, r8, r5
 800e982:	2d00      	cmp	r5, #0
 800e984:	bfb8      	it	lt
 800e986:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e98a:	f108 0701 	add.w	r7, r8, #1
 800e98e:	bfb8      	it	lt
 800e990:	186d      	addlt	r5, r5, r1
 800e992:	1a64      	subs	r4, r4, r1
 800e994:	9703      	str	r7, [sp, #12]
 800e996:	f04f 0a00 	mov.w	sl, #0
 800e99a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e99e:	1964      	adds	r4, r4, r5
 800e9a0:	bf58      	it	pl
 800e9a2:	9f03      	ldrpl	r7, [sp, #12]
 800e9a4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e9a8:	bf48      	it	mi
 800e9aa:	4647      	movmi	r7, r8
 800e9ac:	44bb      	add	fp, r7
 800e9ae:	f8ac b004 	strh.w	fp, [ip, #4]
 800e9b2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e9b6:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e9ba:	f8ac b006 	strh.w	fp, [ip, #6]
 800e9be:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e9c2:	443b      	add	r3, r7
 800e9c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e9c8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e9cc:	bf58      	it	pl
 800e9ce:	1a64      	subpl	r4, r4, r1
 800e9d0:	ea5b 0707 	orrs.w	r7, fp, r7
 800e9d4:	444e      	add	r6, r9
 800e9d6:	d011      	beq.n	800e9fc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e9d8:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e9dc:	f1bb 0f00 	cmp.w	fp, #0
 800e9e0:	db0c      	blt.n	800e9fc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e9e2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e9e4:	45bb      	cmp	fp, r7
 800e9e6:	da09      	bge.n	800e9fc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e9e8:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e9ec:	45bb      	cmp	fp, r7
 800e9ee:	bf3c      	itt	cc
 800e9f0:	f10c 0708 	addcc.w	r7, ip, #8
 800e9f4:	6107      	strcc	r7, [r0, #16]
 800e9f6:	f10b 0701 	add.w	r7, fp, #1
 800e9fa:	6087      	str	r7, [r0, #8]
 800e9fc:	6907      	ldr	r7, [r0, #16]
 800e9fe:	45b6      	cmp	lr, r6
 800ea00:	803e      	strh	r6, [r7, #0]
 800ea02:	807a      	strh	r2, [r7, #2]
 800ea04:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ea08:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ea0c:	d1c5      	bne.n	800e99a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ea0e:	9a04      	ldr	r2, [sp, #16]
 800ea10:	1ad3      	subs	r3, r2, r3
 800ea12:	6902      	ldr	r2, [r0, #16]
 800ea14:	8891      	ldrh	r1, [r2, #4]
 800ea16:	88d6      	ldrh	r6, [r2, #6]
 800ea18:	4419      	add	r1, r3
 800ea1a:	8091      	strh	r1, [r2, #4]
 800ea1c:	9902      	ldr	r1, [sp, #8]
 800ea1e:	f101 0c20 	add.w	ip, r1, #32
 800ea22:	9901      	ldr	r1, [sp, #4]
 800ea24:	ebac 0c01 	sub.w	ip, ip, r1
 800ea28:	fb03 630c 	mla	r3, r3, ip, r6
 800ea2c:	80d3      	strh	r3, [r2, #6]
 800ea2e:	e74c      	b.n	800e8ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ea30:	9d05      	ldr	r5, [sp, #20]
 800ea32:	1aa2      	subs	r2, r4, r2
 800ea34:	eba5 0501 	sub.w	r5, r5, r1
 800ea38:	9508      	str	r5, [sp, #32]
 800ea3a:	9202      	str	r2, [sp, #8]
 800ea3c:	f140 8128 	bpl.w	800ec90 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800ea40:	9a03      	ldr	r2, [sp, #12]
 800ea42:	2a00      	cmp	r2, #0
 800ea44:	f6ff af41 	blt.w	800e8ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ea48:	9a02      	ldr	r2, [sp, #8]
 800ea4a:	4252      	negs	r2, r2
 800ea4c:	9202      	str	r2, [sp, #8]
 800ea4e:	9a06      	ldr	r2, [sp, #24]
 800ea50:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800ea54:	f04f 34ff 	mov.w	r4, #4294967295
 800ea58:	9206      	str	r2, [sp, #24]
 800ea5a:	462a      	mov	r2, r5
 800ea5c:	940b      	str	r4, [sp, #44]	; 0x2c
 800ea5e:	435a      	muls	r2, r3
 800ea60:	2400      	movs	r4, #0
 800ea62:	9d02      	ldr	r5, [sp, #8]
 800ea64:	9401      	str	r4, [sp, #4]
 800ea66:	9c02      	ldr	r4, [sp, #8]
 800ea68:	fb92 f4f4 	sdiv	r4, r2, r4
 800ea6c:	fb05 2214 	mls	r2, r5, r4, r2
 800ea70:	2a00      	cmp	r2, #0
 800ea72:	9207      	str	r2, [sp, #28]
 800ea74:	bfbc      	itt	lt
 800ea76:	1952      	addlt	r2, r2, r5
 800ea78:	9207      	strlt	r2, [sp, #28]
 800ea7a:	9a01      	ldr	r2, [sp, #4]
 800ea7c:	6905      	ldr	r5, [r0, #16]
 800ea7e:	bfb8      	it	lt
 800ea80:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800ea84:	eb04 0901 	add.w	r9, r4, r1
 800ea88:	429a      	cmp	r2, r3
 800ea8a:	ea4f 1669 	mov.w	r6, r9, asr #5
 800ea8e:	f040 8112 	bne.w	800ecb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800ea92:	f9b5 3000 	ldrsh.w	r3, [r5]
 800ea96:	429e      	cmp	r6, r3
 800ea98:	d104      	bne.n	800eaa4 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800ea9a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ea9e:	9a03      	ldr	r2, [sp, #12]
 800eaa0:	429a      	cmp	r2, r3
 800eaa2:	d01b      	beq.n	800eadc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800eaa4:	88ea      	ldrh	r2, [r5, #6]
 800eaa6:	88ab      	ldrh	r3, [r5, #4]
 800eaa8:	4313      	orrs	r3, r2
 800eaaa:	d010      	beq.n	800eace <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800eaac:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800eab0:	2a00      	cmp	r2, #0
 800eab2:	db0c      	blt.n	800eace <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800eab4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800eab6:	429a      	cmp	r2, r3
 800eab8:	da09      	bge.n	800eace <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800eaba:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800eabe:	429a      	cmp	r2, r3
 800eac0:	bf38      	it	cc
 800eac2:	3508      	addcc	r5, #8
 800eac4:	f102 0201 	add.w	r2, r2, #1
 800eac8:	bf38      	it	cc
 800eaca:	6105      	strcc	r5, [r0, #16]
 800eacc:	6082      	str	r2, [r0, #8]
 800eace:	6903      	ldr	r3, [r0, #16]
 800ead0:	9a03      	ldr	r2, [sp, #12]
 800ead2:	805a      	strh	r2, [r3, #2]
 800ead4:	2200      	movs	r2, #0
 800ead6:	801e      	strh	r6, [r3, #0]
 800ead8:	809a      	strh	r2, [r3, #4]
 800eada:	80da      	strh	r2, [r3, #6]
 800eadc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800eade:	9a03      	ldr	r2, [sp, #12]
 800eae0:	6901      	ldr	r1, [r0, #16]
 800eae2:	441a      	add	r2, r3
 800eae4:	f9b1 3000 	ldrsh.w	r3, [r1]
 800eae8:	42b3      	cmp	r3, r6
 800eaea:	d103      	bne.n	800eaf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800eaec:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800eaf0:	429a      	cmp	r2, r3
 800eaf2:	d01a      	beq.n	800eb2a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800eaf4:	88cc      	ldrh	r4, [r1, #6]
 800eaf6:	888b      	ldrh	r3, [r1, #4]
 800eaf8:	4323      	orrs	r3, r4
 800eafa:	d010      	beq.n	800eb1e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800eafc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800eb00:	2c00      	cmp	r4, #0
 800eb02:	db0c      	blt.n	800eb1e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800eb04:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800eb06:	429c      	cmp	r4, r3
 800eb08:	da09      	bge.n	800eb1e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800eb0a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800eb0e:	429c      	cmp	r4, r3
 800eb10:	bf38      	it	cc
 800eb12:	3108      	addcc	r1, #8
 800eb14:	f104 0401 	add.w	r4, r4, #1
 800eb18:	bf38      	it	cc
 800eb1a:	6101      	strcc	r1, [r0, #16]
 800eb1c:	6084      	str	r4, [r0, #8]
 800eb1e:	6903      	ldr	r3, [r0, #16]
 800eb20:	2100      	movs	r1, #0
 800eb22:	801e      	strh	r6, [r3, #0]
 800eb24:	805a      	strh	r2, [r3, #2]
 800eb26:	8099      	strh	r1, [r3, #4]
 800eb28:	80d9      	strh	r1, [r3, #6]
 800eb2a:	9b06      	ldr	r3, [sp, #24]
 800eb2c:	4293      	cmp	r3, r2
 800eb2e:	f000 8082 	beq.w	800ec36 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800eb32:	9b08      	ldr	r3, [sp, #32]
 800eb34:	9c02      	ldr	r4, [sp, #8]
 800eb36:	9902      	ldr	r1, [sp, #8]
 800eb38:	015b      	lsls	r3, r3, #5
 800eb3a:	fb93 f1f1 	sdiv	r1, r3, r1
 800eb3e:	fb04 3311 	mls	r3, r4, r1, r3
 800eb42:	2b00      	cmp	r3, #0
 800eb44:	9103      	str	r1, [sp, #12]
 800eb46:	9308      	str	r3, [sp, #32]
 800eb48:	da04      	bge.n	800eb54 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800eb4a:	1e4b      	subs	r3, r1, #1
 800eb4c:	9303      	str	r3, [sp, #12]
 800eb4e:	9b08      	ldr	r3, [sp, #32]
 800eb50:	4423      	add	r3, r4
 800eb52:	9308      	str	r3, [sp, #32]
 800eb54:	9b07      	ldr	r3, [sp, #28]
 800eb56:	9902      	ldr	r1, [sp, #8]
 800eb58:	1a5b      	subs	r3, r3, r1
 800eb5a:	9307      	str	r3, [sp, #28]
 800eb5c:	9b01      	ldr	r3, [sp, #4]
 800eb5e:	f1c3 0320 	rsb	r3, r3, #32
 800eb62:	930e      	str	r3, [sp, #56]	; 0x38
 800eb64:	990e      	ldr	r1, [sp, #56]	; 0x38
 800eb66:	9b01      	ldr	r3, [sp, #4]
 800eb68:	1a5b      	subs	r3, r3, r1
 800eb6a:	464f      	mov	r7, r9
 800eb6c:	930a      	str	r3, [sp, #40]	; 0x28
 800eb6e:	2600      	movs	r6, #0
 800eb70:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800eb74:	185b      	adds	r3, r3, r1
 800eb76:	bf58      	it	pl
 800eb78:	9902      	ldrpl	r1, [sp, #8]
 800eb7a:	9307      	str	r3, [sp, #28]
 800eb7c:	bf5d      	ittte	pl
 800eb7e:	1a5b      	subpl	r3, r3, r1
 800eb80:	9307      	strpl	r3, [sp, #28]
 800eb82:	9b03      	ldrpl	r3, [sp, #12]
 800eb84:	9903      	ldrmi	r1, [sp, #12]
 800eb86:	bf58      	it	pl
 800eb88:	1c59      	addpl	r1, r3, #1
 800eb8a:	4489      	add	r9, r1
 800eb8c:	2a00      	cmp	r2, #0
 800eb8e:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800eb92:	db2e      	blt.n	800ebf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eb94:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800eb96:	4293      	cmp	r3, r2
 800eb98:	dd2b      	ble.n	800ebf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eb9a:	9c01      	ldr	r4, [sp, #4]
 800eb9c:	6905      	ldr	r5, [r0, #16]
 800eb9e:	46a0      	mov	r8, r4
 800eba0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800eba2:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800eba6:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800ebaa:	45a0      	cmp	r8, r4
 800ebac:	f040 814f 	bne.w	800ee4e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800ebb0:	f9b5 1000 	ldrsh.w	r1, [r5]
 800ebb4:	4551      	cmp	r1, sl
 800ebb6:	d103      	bne.n	800ebc0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800ebb8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ebbc:	4291      	cmp	r1, r2
 800ebbe:	d018      	beq.n	800ebf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ebc0:	ea5c 010e 	orrs.w	r1, ip, lr
 800ebc4:	d00f      	beq.n	800ebe6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ebc6:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ebca:	2900      	cmp	r1, #0
 800ebcc:	db0b      	blt.n	800ebe6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ebce:	428b      	cmp	r3, r1
 800ebd0:	dd09      	ble.n	800ebe6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ebd2:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800ebd6:	4299      	cmp	r1, r3
 800ebd8:	bf38      	it	cc
 800ebda:	3508      	addcc	r5, #8
 800ebdc:	f101 0101 	add.w	r1, r1, #1
 800ebe0:	bf38      	it	cc
 800ebe2:	6105      	strcc	r5, [r0, #16]
 800ebe4:	6081      	str	r1, [r0, #8]
 800ebe6:	6903      	ldr	r3, [r0, #16]
 800ebe8:	f8a3 a000 	strh.w	sl, [r3]
 800ebec:	805a      	strh	r2, [r3, #2]
 800ebee:	809e      	strh	r6, [r3, #4]
 800ebf0:	80de      	strh	r6, [r3, #6]
 800ebf2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ebf4:	6901      	ldr	r1, [r0, #16]
 800ebf6:	441a      	add	r2, r3
 800ebf8:	88cc      	ldrh	r4, [r1, #6]
 800ebfa:	888b      	ldrh	r3, [r1, #4]
 800ebfc:	4323      	orrs	r3, r4
 800ebfe:	d010      	beq.n	800ec22 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ec00:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ec04:	2c00      	cmp	r4, #0
 800ec06:	db0c      	blt.n	800ec22 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ec08:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ec0a:	429c      	cmp	r4, r3
 800ec0c:	da09      	bge.n	800ec22 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ec0e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ec12:	429c      	cmp	r4, r3
 800ec14:	bf38      	it	cc
 800ec16:	3108      	addcc	r1, #8
 800ec18:	f104 0401 	add.w	r4, r4, #1
 800ec1c:	bf38      	it	cc
 800ec1e:	6101      	strcc	r1, [r0, #16]
 800ec20:	6084      	str	r4, [r0, #8]
 800ec22:	6903      	ldr	r3, [r0, #16]
 800ec24:	f8a3 a000 	strh.w	sl, [r3]
 800ec28:	805a      	strh	r2, [r3, #2]
 800ec2a:	809e      	strh	r6, [r3, #4]
 800ec2c:	80de      	strh	r6, [r3, #6]
 800ec2e:	9b06      	ldr	r3, [sp, #24]
 800ec30:	4293      	cmp	r3, r2
 800ec32:	464f      	mov	r7, r9
 800ec34:	d19c      	bne.n	800eb70 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800ec36:	9b01      	ldr	r3, [sp, #4]
 800ec38:	6907      	ldr	r7, [r0, #16]
 800ec3a:	f1c3 0620 	rsb	r6, r3, #32
 800ec3e:	9b05      	ldr	r3, [sp, #20]
 800ec40:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800ec44:	9b04      	ldr	r3, [sp, #16]
 800ec46:	429e      	cmp	r6, r3
 800ec48:	f040 81cc 	bne.w	800efe4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800ec4c:	f9b7 3000 	ldrsh.w	r3, [r7]
 800ec50:	459e      	cmp	lr, r3
 800ec52:	d104      	bne.n	800ec5e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800ec54:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ec58:	429a      	cmp	r2, r3
 800ec5a:	f43f ae36 	beq.w	800e8ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ec5e:	88f9      	ldrh	r1, [r7, #6]
 800ec60:	88bb      	ldrh	r3, [r7, #4]
 800ec62:	430b      	orrs	r3, r1
 800ec64:	d010      	beq.n	800ec88 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ec66:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ec6a:	2b00      	cmp	r3, #0
 800ec6c:	db0c      	blt.n	800ec88 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ec6e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ec70:	428b      	cmp	r3, r1
 800ec72:	da09      	bge.n	800ec88 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ec74:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ec78:	428b      	cmp	r3, r1
 800ec7a:	bf38      	it	cc
 800ec7c:	3708      	addcc	r7, #8
 800ec7e:	f103 0301 	add.w	r3, r3, #1
 800ec82:	bf38      	it	cc
 800ec84:	6107      	strcc	r7, [r0, #16]
 800ec86:	6083      	str	r3, [r0, #8]
 800ec88:	6903      	ldr	r3, [r0, #16]
 800ec8a:	f8a3 e000 	strh.w	lr, [r3]
 800ec8e:	e5ff      	b.n	800e890 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800ec90:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800ec92:	9c03      	ldr	r4, [sp, #12]
 800ec94:	42a2      	cmp	r2, r4
 800ec96:	f6ff ae18 	blt.w	800e8ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ec9a:	9c06      	ldr	r4, [sp, #24]
 800ec9c:	42a2      	cmp	r2, r4
 800ec9e:	bfb8      	it	lt
 800eca0:	3201      	addlt	r2, #1
 800eca2:	9c08      	ldr	r4, [sp, #32]
 800eca4:	bfb8      	it	lt
 800eca6:	9206      	strlt	r2, [sp, #24]
 800eca8:	f1c3 0220 	rsb	r2, r3, #32
 800ecac:	4362      	muls	r2, r4
 800ecae:	2401      	movs	r4, #1
 800ecb0:	940b      	str	r4, [sp, #44]	; 0x2c
 800ecb2:	2420      	movs	r4, #32
 800ecb4:	e6d5      	b.n	800ea62 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800ecb6:	f009 021f 	and.w	r2, r9, #31
 800ecba:	ea4f 1861 	mov.w	r8, r1, asr #5
 800ecbe:	920c      	str	r2, [sp, #48]	; 0x30
 800ecc0:	9a01      	ldr	r2, [sp, #4]
 800ecc2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800ecc6:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800ecca:	45b0      	cmp	r8, r6
 800eccc:	f001 011f 	and.w	r1, r1, #31
 800ecd0:	eba2 0203 	sub.w	r2, r2, r3
 800ecd4:	d108      	bne.n	800ece8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800ecd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ecd8:	4419      	add	r1, r3
 800ecda:	4496      	add	lr, r2
 800ecdc:	fb02 a101 	mla	r1, r2, r1, sl
 800ece0:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ece4:	80e9      	strh	r1, [r5, #6]
 800ece6:	e6f9      	b.n	800eadc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ece8:	2c00      	cmp	r4, #0
 800ecea:	f2c0 80a9 	blt.w	800ee40 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800ecee:	2701      	movs	r7, #1
 800ecf0:	f1c1 0c20 	rsb	ip, r1, #32
 800ecf4:	970a      	str	r7, [sp, #40]	; 0x28
 800ecf6:	fb02 f20c 	mul.w	r2, r2, ip
 800ecfa:	2720      	movs	r7, #32
 800ecfc:	9709      	str	r7, [sp, #36]	; 0x24
 800ecfe:	fb92 fcf4 	sdiv	ip, r2, r4
 800ed02:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ed04:	fb04 221c 	mls	r2, r4, ip, r2
 800ed08:	2a00      	cmp	r2, #0
 800ed0a:	bfb8      	it	lt
 800ed0c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800ed10:	4439      	add	r1, r7
 800ed12:	fb0c a101 	mla	r1, ip, r1, sl
 800ed16:	80e9      	strh	r1, [r5, #6]
 800ed18:	44e6      	add	lr, ip
 800ed1a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ed1c:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ed20:	eb08 0501 	add.w	r5, r8, r1
 800ed24:	6901      	ldr	r1, [r0, #16]
 800ed26:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800ed2a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800ed2e:	bfb8      	it	lt
 800ed30:	1912      	addlt	r2, r2, r4
 800ed32:	ea58 070e 	orrs.w	r7, r8, lr
 800ed36:	d010      	beq.n	800ed5a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ed38:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800ed3c:	f1be 0f00 	cmp.w	lr, #0
 800ed40:	db0b      	blt.n	800ed5a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ed42:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ed44:	45be      	cmp	lr, r7
 800ed46:	da08      	bge.n	800ed5a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ed48:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800ed4c:	45be      	cmp	lr, r7
 800ed4e:	bf3c      	itt	cc
 800ed50:	3108      	addcc	r1, #8
 800ed52:	6101      	strcc	r1, [r0, #16]
 800ed54:	f10e 0101 	add.w	r1, lr, #1
 800ed58:	6081      	str	r1, [r0, #8]
 800ed5a:	6901      	ldr	r1, [r0, #16]
 800ed5c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800ed60:	800d      	strh	r5, [r1, #0]
 800ed62:	f04f 0e00 	mov.w	lr, #0
 800ed66:	42ae      	cmp	r6, r5
 800ed68:	f8a1 8002 	strh.w	r8, [r1, #2]
 800ed6c:	f8a1 e004 	strh.w	lr, [r1, #4]
 800ed70:	f8a1 e006 	strh.w	lr, [r1, #6]
 800ed74:	4463      	add	r3, ip
 800ed76:	d054      	beq.n	800ee22 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800ed78:	9901      	ldr	r1, [sp, #4]
 800ed7a:	1ac9      	subs	r1, r1, r3
 800ed7c:	4461      	add	r1, ip
 800ed7e:	0149      	lsls	r1, r1, #5
 800ed80:	fb91 fef4 	sdiv	lr, r1, r4
 800ed84:	fb04 111e 	mls	r1, r4, lr, r1
 800ed88:	2900      	cmp	r1, #0
 800ed8a:	bfb8      	it	lt
 800ed8c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800ed90:	f10e 0701 	add.w	r7, lr, #1
 800ed94:	bfb8      	it	lt
 800ed96:	1909      	addlt	r1, r1, r4
 800ed98:	1b12      	subs	r2, r2, r4
 800ed9a:	970d      	str	r7, [sp, #52]	; 0x34
 800ed9c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800eda0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800eda2:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800eda6:	1852      	adds	r2, r2, r1
 800eda8:	bf54      	ite	pl
 800edaa:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800edae:	46f4      	movmi	ip, lr
 800edb0:	44e3      	add	fp, ip
 800edb2:	f8aa b004 	strh.w	fp, [sl, #4]
 800edb6:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800edba:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800edbe:	f8aa b006 	strh.w	fp, [sl, #6]
 800edc2:	4463      	add	r3, ip
 800edc4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800edc8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800edcc:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800edd0:	bf58      	it	pl
 800edd2:	1b12      	subpl	r2, r2, r4
 800edd4:	443d      	add	r5, r7
 800edd6:	ea5b 070a 	orrs.w	r7, fp, sl
 800edda:	d014      	beq.n	800ee06 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800eddc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800ede0:	f1ba 0f00 	cmp.w	sl, #0
 800ede4:	db0f      	blt.n	800ee06 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ede6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ede8:	45ba      	cmp	sl, r7
 800edea:	da0c      	bge.n	800ee06 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800edec:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800edf0:	45ba      	cmp	sl, r7
 800edf2:	bf38      	it	cc
 800edf4:	f10c 0c08 	addcc.w	ip, ip, #8
 800edf8:	f10a 0a01 	add.w	sl, sl, #1
 800edfc:	bf38      	it	cc
 800edfe:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800ee02:	f8c0 a008 	str.w	sl, [r0, #8]
 800ee06:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ee0a:	f04f 0700 	mov.w	r7, #0
 800ee0e:	42ae      	cmp	r6, r5
 800ee10:	f8ac 5000 	strh.w	r5, [ip]
 800ee14:	f8ac 8002 	strh.w	r8, [ip, #2]
 800ee18:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ee1c:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ee20:	d1bc      	bne.n	800ed9c <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800ee22:	6904      	ldr	r4, [r0, #16]
 800ee24:	9a01      	ldr	r2, [sp, #4]
 800ee26:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ee28:	1ad3      	subs	r3, r2, r3
 800ee2a:	88a2      	ldrh	r2, [r4, #4]
 800ee2c:	441a      	add	r2, r3
 800ee2e:	80a2      	strh	r2, [r4, #4]
 800ee30:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ee32:	3120      	adds	r1, #32
 800ee34:	1a89      	subs	r1, r1, r2
 800ee36:	88e2      	ldrh	r2, [r4, #6]
 800ee38:	fb03 2301 	mla	r3, r3, r1, r2
 800ee3c:	80e3      	strh	r3, [r4, #6]
 800ee3e:	e64d      	b.n	800eadc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ee40:	f04f 37ff 	mov.w	r7, #4294967295
 800ee44:	970a      	str	r7, [sp, #40]	; 0x28
 800ee46:	434a      	muls	r2, r1
 800ee48:	4264      	negs	r4, r4
 800ee4a:	2700      	movs	r7, #0
 800ee4c:	e756      	b.n	800ecfc <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800ee4e:	ea4f 1867 	mov.w	r8, r7, asr #5
 800ee52:	f009 031f 	and.w	r3, r9, #31
 800ee56:	45d0      	cmp	r8, sl
 800ee58:	f007 071f 	and.w	r7, r7, #31
 800ee5c:	930f      	str	r3, [sp, #60]	; 0x3c
 800ee5e:	fa1f fc8c 	uxth.w	ip, ip
 800ee62:	fa1f fe8e 	uxth.w	lr, lr
 800ee66:	d10a      	bne.n	800ee7e <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800ee68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ee6a:	449c      	add	ip, r3
 800ee6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ee6e:	f8a5 c004 	strh.w	ip, [r5, #4]
 800ee72:	441f      	add	r7, r3
 800ee74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ee76:	fb03 e707 	mla	r7, r3, r7, lr
 800ee7a:	80ef      	strh	r7, [r5, #6]
 800ee7c:	e6b9      	b.n	800ebf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ee7e:	2900      	cmp	r1, #0
 800ee80:	f2c0 80a8 	blt.w	800efd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800ee84:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ee86:	f1c7 0320 	rsb	r3, r7, #32
 800ee8a:	4363      	muls	r3, r4
 800ee8c:	2401      	movs	r4, #1
 800ee8e:	940d      	str	r4, [sp, #52]	; 0x34
 800ee90:	2420      	movs	r4, #32
 800ee92:	940c      	str	r4, [sp, #48]	; 0x30
 800ee94:	fb93 f4f1 	sdiv	r4, r3, r1
 800ee98:	fb01 3b14 	mls	fp, r1, r4, r3
 800ee9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ee9e:	f1bb 0f00 	cmp.w	fp, #0
 800eea2:	bfb8      	it	lt
 800eea4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800eea8:	441f      	add	r7, r3
 800eeaa:	fb04 e707 	mla	r7, r4, r7, lr
 800eeae:	44a4      	add	ip, r4
 800eeb0:	f8a5 c004 	strh.w	ip, [r5, #4]
 800eeb4:	80ef      	strh	r7, [r5, #6]
 800eeb6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eeba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800eebc:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800eec0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800eec4:	bfb8      	it	lt
 800eec6:	448b      	addlt	fp, r1
 800eec8:	eb08 0503 	add.w	r5, r8, r3
 800eecc:	ea5e 0307 	orrs.w	r3, lr, r7
 800eed0:	d011      	beq.n	800eef6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800eed2:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800eed6:	f1be 0f00 	cmp.w	lr, #0
 800eeda:	db0c      	blt.n	800eef6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800eedc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800eede:	45be      	cmp	lr, r7
 800eee0:	da09      	bge.n	800eef6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800eee2:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800eee6:	45be      	cmp	lr, r7
 800eee8:	bf3c      	itt	cc
 800eeea:	f10c 0708 	addcc.w	r7, ip, #8
 800eeee:	6107      	strcc	r7, [r0, #16]
 800eef0:	f10e 0701 	add.w	r7, lr, #1
 800eef4:	6087      	str	r7, [r0, #8]
 800eef6:	6907      	ldr	r7, [r0, #16]
 800eef8:	b213      	sxth	r3, r2
 800eefa:	9310      	str	r3, [sp, #64]	; 0x40
 800eefc:	807b      	strh	r3, [r7, #2]
 800eefe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ef00:	803d      	strh	r5, [r7, #0]
 800ef02:	4555      	cmp	r5, sl
 800ef04:	80be      	strh	r6, [r7, #4]
 800ef06:	80fe      	strh	r6, [r7, #6]
 800ef08:	eb04 0c03 	add.w	ip, r4, r3
 800ef0c:	d051      	beq.n	800efb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800ef0e:	9b01      	ldr	r3, [sp, #4]
 800ef10:	eba3 070c 	sub.w	r7, r3, ip
 800ef14:	443c      	add	r4, r7
 800ef16:	0164      	lsls	r4, r4, #5
 800ef18:	fb94 f8f1 	sdiv	r8, r4, r1
 800ef1c:	fb01 4418 	mls	r4, r1, r8, r4
 800ef20:	2c00      	cmp	r4, #0
 800ef22:	bfb8      	it	lt
 800ef24:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ef28:	ebab 0301 	sub.w	r3, fp, r1
 800ef2c:	f108 0701 	add.w	r7, r8, #1
 800ef30:	bfb8      	it	lt
 800ef32:	1864      	addlt	r4, r4, r1
 800ef34:	9309      	str	r3, [sp, #36]	; 0x24
 800ef36:	9711      	str	r7, [sp, #68]	; 0x44
 800ef38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ef3a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800ef3e:	191b      	adds	r3, r3, r4
 800ef40:	bf58      	it	pl
 800ef42:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800ef44:	f8be b004 	ldrh.w	fp, [lr, #4]
 800ef48:	9309      	str	r3, [sp, #36]	; 0x24
 800ef4a:	bf48      	it	mi
 800ef4c:	4647      	movmi	r7, r8
 800ef4e:	44bb      	add	fp, r7
 800ef50:	f8ae b004 	strh.w	fp, [lr, #4]
 800ef54:	f8be b006 	ldrh.w	fp, [lr, #6]
 800ef58:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ef5c:	f8ae b006 	strh.w	fp, [lr, #6]
 800ef60:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800ef64:	44bc      	add	ip, r7
 800ef66:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800ef68:	f8be b006 	ldrh.w	fp, [lr, #6]
 800ef6c:	443d      	add	r5, r7
 800ef6e:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800ef72:	bf5c      	itt	pl
 800ef74:	1a5b      	subpl	r3, r3, r1
 800ef76:	9309      	strpl	r3, [sp, #36]	; 0x24
 800ef78:	ea5b 0307 	orrs.w	r3, fp, r7
 800ef7c:	d011      	beq.n	800efa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800ef7e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800ef82:	f1bb 0f00 	cmp.w	fp, #0
 800ef86:	db0c      	blt.n	800efa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800ef88:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ef8a:	45bb      	cmp	fp, r7
 800ef8c:	da09      	bge.n	800efa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800ef8e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ef92:	45bb      	cmp	fp, r7
 800ef94:	bf3c      	itt	cc
 800ef96:	f10e 0708 	addcc.w	r7, lr, #8
 800ef9a:	6107      	strcc	r7, [r0, #16]
 800ef9c:	f10b 0701 	add.w	r7, fp, #1
 800efa0:	6087      	str	r7, [r0, #8]
 800efa2:	6907      	ldr	r7, [r0, #16]
 800efa4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800efa6:	803d      	strh	r5, [r7, #0]
 800efa8:	4555      	cmp	r5, sl
 800efaa:	807b      	strh	r3, [r7, #2]
 800efac:	80be      	strh	r6, [r7, #4]
 800efae:	80fe      	strh	r6, [r7, #6]
 800efb0:	d1c2      	bne.n	800ef38 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800efb2:	9b01      	ldr	r3, [sp, #4]
 800efb4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800efb6:	eba3 0c0c 	sub.w	ip, r3, ip
 800efba:	6903      	ldr	r3, [r0, #16]
 800efbc:	8899      	ldrh	r1, [r3, #4]
 800efbe:	4461      	add	r1, ip
 800efc0:	8099      	strh	r1, [r3, #4]
 800efc2:	990c      	ldr	r1, [sp, #48]	; 0x30
 800efc4:	3720      	adds	r7, #32
 800efc6:	1a7f      	subs	r7, r7, r1
 800efc8:	88d9      	ldrh	r1, [r3, #6]
 800efca:	fb0c 1c07 	mla	ip, ip, r7, r1
 800efce:	f8a3 c006 	strh.w	ip, [r3, #6]
 800efd2:	e60e      	b.n	800ebf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800efd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800efd6:	f04f 34ff 	mov.w	r4, #4294967295
 800efda:	940d      	str	r4, [sp, #52]	; 0x34
 800efdc:	437b      	muls	r3, r7
 800efde:	4249      	negs	r1, r1
 800efe0:	2400      	movs	r4, #0
 800efe2:	e756      	b.n	800ee92 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800efe4:	9905      	ldr	r1, [sp, #20]
 800efe6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800efea:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800efee:	f001 011f 	and.w	r1, r1, #31
 800eff2:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800eff6:	9102      	str	r1, [sp, #8]
 800eff8:	9904      	ldr	r1, [sp, #16]
 800effa:	45f3      	cmp	fp, lr
 800effc:	f009 0c1f 	and.w	ip, r9, #31
 800f000:	eba1 0406 	sub.w	r4, r1, r6
 800f004:	d108      	bne.n	800f018 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f006:	9b02      	ldr	r3, [sp, #8]
 800f008:	449c      	add	ip, r3
 800f00a:	44a0      	add	r8, r4
 800f00c:	fb04 a40c 	mla	r4, r4, ip, sl
 800f010:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f014:	80fc      	strh	r4, [r7, #6]
 800f016:	e458      	b.n	800e8ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f018:	9905      	ldr	r1, [sp, #20]
 800f01a:	ebb1 0109 	subs.w	r1, r1, r9
 800f01e:	bf5b      	ittet	pl
 800f020:	f1cc 0520 	rsbpl	r5, ip, #32
 800f024:	436c      	mulpl	r4, r5
 800f026:	2500      	movmi	r5, #0
 800f028:	2520      	movpl	r5, #32
 800f02a:	bf44      	itt	mi
 800f02c:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f030:	4249      	negmi	r1, r1
 800f032:	9501      	str	r5, [sp, #4]
 800f034:	9b01      	ldr	r3, [sp, #4]
 800f036:	fb94 f5f1 	sdiv	r5, r4, r1
 800f03a:	fb01 4415 	mls	r4, r1, r5, r4
 800f03e:	bf54      	ite	pl
 800f040:	f04f 0901 	movpl.w	r9, #1
 800f044:	f04f 39ff 	movmi.w	r9, #4294967295
 800f048:	2c00      	cmp	r4, #0
 800f04a:	bfb8      	it	lt
 800f04c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f050:	449c      	add	ip, r3
 800f052:	44a8      	add	r8, r5
 800f054:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f058:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f05c:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f060:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f064:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f068:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f06c:	bfb8      	it	lt
 800f06e:	1864      	addlt	r4, r4, r1
 800f070:	ea58 0707 	orrs.w	r7, r8, r7
 800f074:	eb0b 0309 	add.w	r3, fp, r9
 800f078:	d011      	beq.n	800f09e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f07a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f07e:	f1b8 0f00 	cmp.w	r8, #0
 800f082:	db0c      	blt.n	800f09e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f084:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f086:	45b8      	cmp	r8, r7
 800f088:	da09      	bge.n	800f09e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f08a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f08e:	45b8      	cmp	r8, r7
 800f090:	bf3c      	itt	cc
 800f092:	f10c 0708 	addcc.w	r7, ip, #8
 800f096:	6107      	strcc	r7, [r0, #16]
 800f098:	f108 0701 	add.w	r7, r8, #1
 800f09c:	6087      	str	r7, [r0, #8]
 800f09e:	6907      	ldr	r7, [r0, #16]
 800f0a0:	f04f 0c00 	mov.w	ip, #0
 800f0a4:	b212      	sxth	r2, r2
 800f0a6:	459e      	cmp	lr, r3
 800f0a8:	803b      	strh	r3, [r7, #0]
 800f0aa:	807a      	strh	r2, [r7, #2]
 800f0ac:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f0b0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f0b4:	442e      	add	r6, r5
 800f0b6:	d04d      	beq.n	800f154 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f0b8:	9f04      	ldr	r7, [sp, #16]
 800f0ba:	1bbf      	subs	r7, r7, r6
 800f0bc:	443d      	add	r5, r7
 800f0be:	016d      	lsls	r5, r5, #5
 800f0c0:	fb95 f8f1 	sdiv	r8, r5, r1
 800f0c4:	fb01 5518 	mls	r5, r1, r8, r5
 800f0c8:	4565      	cmp	r5, ip
 800f0ca:	bfb8      	it	lt
 800f0cc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f0d0:	f108 0701 	add.w	r7, r8, #1
 800f0d4:	bfb8      	it	lt
 800f0d6:	186d      	addlt	r5, r5, r1
 800f0d8:	1a64      	subs	r4, r4, r1
 800f0da:	9703      	str	r7, [sp, #12]
 800f0dc:	f04f 0a00 	mov.w	sl, #0
 800f0e0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f0e4:	1964      	adds	r4, r4, r5
 800f0e6:	bf58      	it	pl
 800f0e8:	9f03      	ldrpl	r7, [sp, #12]
 800f0ea:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f0ee:	bf48      	it	mi
 800f0f0:	4647      	movmi	r7, r8
 800f0f2:	44bb      	add	fp, r7
 800f0f4:	f8ac b004 	strh.w	fp, [ip, #4]
 800f0f8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f0fc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f100:	f8ac b006 	strh.w	fp, [ip, #6]
 800f104:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f108:	443e      	add	r6, r7
 800f10a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f10e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f112:	bf58      	it	pl
 800f114:	1a64      	subpl	r4, r4, r1
 800f116:	ea5b 0707 	orrs.w	r7, fp, r7
 800f11a:	444b      	add	r3, r9
 800f11c:	d011      	beq.n	800f142 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f11e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f122:	f1bb 0f00 	cmp.w	fp, #0
 800f126:	db0c      	blt.n	800f142 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f128:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f12a:	45bb      	cmp	fp, r7
 800f12c:	da09      	bge.n	800f142 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f12e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f132:	45bb      	cmp	fp, r7
 800f134:	bf3c      	itt	cc
 800f136:	f10c 0708 	addcc.w	r7, ip, #8
 800f13a:	6107      	strcc	r7, [r0, #16]
 800f13c:	f10b 0701 	add.w	r7, fp, #1
 800f140:	6087      	str	r7, [r0, #8]
 800f142:	6907      	ldr	r7, [r0, #16]
 800f144:	459e      	cmp	lr, r3
 800f146:	803b      	strh	r3, [r7, #0]
 800f148:	807a      	strh	r2, [r7, #2]
 800f14a:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f14e:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f152:	d1c5      	bne.n	800f0e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f154:	9b04      	ldr	r3, [sp, #16]
 800f156:	1b9e      	subs	r6, r3, r6
 800f158:	6903      	ldr	r3, [r0, #16]
 800f15a:	889a      	ldrh	r2, [r3, #4]
 800f15c:	4432      	add	r2, r6
 800f15e:	809a      	strh	r2, [r3, #4]
 800f160:	9a02      	ldr	r2, [sp, #8]
 800f162:	f102 0c20 	add.w	ip, r2, #32
 800f166:	9a01      	ldr	r2, [sp, #4]
 800f168:	ebac 0c02 	sub.w	ip, ip, r2
 800f16c:	88da      	ldrh	r2, [r3, #6]
 800f16e:	fb06 260c 	mla	r6, r6, ip, r2
 800f172:	80de      	strh	r6, [r3, #6]
 800f174:	f7ff bba9 	b.w	800e8ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f178 <_ZN8touchgfx7Outline6lineToEii>:
 800f178:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f17a:	079b      	lsls	r3, r3, #30
 800f17c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f17e:	460e      	mov	r6, r1
 800f180:	4615      	mov	r5, r2
 800f182:	d511      	bpl.n	800f1a8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f184:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f188:	ea86 0701 	eor.w	r7, r6, r1
 800f18c:	ea85 0302 	eor.w	r3, r5, r2
 800f190:	433b      	orrs	r3, r7
 800f192:	d009      	beq.n	800f1a8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f194:	4633      	mov	r3, r6
 800f196:	9500      	str	r5, [sp, #0]
 800f198:	f7ff fb3e 	bl	800e818 <_ZN8touchgfx7Outline10renderLineEiiii>
 800f19c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f19e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f1a2:	f043 0301 	orr.w	r3, r3, #1
 800f1a6:	6243      	str	r3, [r0, #36]	; 0x24
 800f1a8:	b003      	add	sp, #12
 800f1aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f1ac <_ZN8touchgfx7Outline6moveToEii>:
 800f1ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f1ae:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f1b0:	4615      	mov	r5, r2
 800f1b2:	079a      	lsls	r2, r3, #30
 800f1b4:	4604      	mov	r4, r0
 800f1b6:	460e      	mov	r6, r1
 800f1b8:	d401      	bmi.n	800f1be <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f1ba:	f7ff faf9 	bl	800e7b0 <_ZN8touchgfx7Outline5resetEv>
 800f1be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f1c0:	07db      	lsls	r3, r3, #31
 800f1c2:	d504      	bpl.n	800f1ce <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f1c4:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f1c8:	4620      	mov	r0, r4
 800f1ca:	f7ff ffd5 	bl	800f178 <_ZN8touchgfx7Outline6lineToEii>
 800f1ce:	6923      	ldr	r3, [r4, #16]
 800f1d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f1d4:	1170      	asrs	r0, r6, #5
 800f1d6:	4290      	cmp	r0, r2
 800f1d8:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f1dc:	d103      	bne.n	800f1e6 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f1de:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f1e2:	4291      	cmp	r1, r2
 800f1e4:	d01a      	beq.n	800f21c <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f1e6:	88df      	ldrh	r7, [r3, #6]
 800f1e8:	889a      	ldrh	r2, [r3, #4]
 800f1ea:	433a      	orrs	r2, r7
 800f1ec:	d010      	beq.n	800f210 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f1ee:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f1f2:	2a00      	cmp	r2, #0
 800f1f4:	db0c      	blt.n	800f210 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f1f6:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f1f8:	42ba      	cmp	r2, r7
 800f1fa:	da09      	bge.n	800f210 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f1fc:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f200:	42ba      	cmp	r2, r7
 800f202:	bf38      	it	cc
 800f204:	3308      	addcc	r3, #8
 800f206:	f102 0201 	add.w	r2, r2, #1
 800f20a:	bf38      	it	cc
 800f20c:	6123      	strcc	r3, [r4, #16]
 800f20e:	60a2      	str	r2, [r4, #8]
 800f210:	6923      	ldr	r3, [r4, #16]
 800f212:	2200      	movs	r2, #0
 800f214:	8018      	strh	r0, [r3, #0]
 800f216:	8059      	strh	r1, [r3, #2]
 800f218:	809a      	strh	r2, [r3, #4]
 800f21a:	80da      	strh	r2, [r3, #6]
 800f21c:	6166      	str	r6, [r4, #20]
 800f21e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f222:	6225      	str	r5, [r4, #32]
 800f224:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f226 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f226:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f22a:	b0d0      	sub	sp, #320	; 0x140
 800f22c:	466c      	mov	r4, sp
 800f22e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f232:	4627      	mov	r7, r4
 800f234:	1a0d      	subs	r5, r1, r0
 800f236:	2d48      	cmp	r5, #72	; 0x48
 800f238:	f100 0308 	add.w	r3, r0, #8
 800f23c:	f340 80d5 	ble.w	800f3ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f240:	112d      	asrs	r5, r5, #4
 800f242:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f246:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f24a:	6816      	ldr	r6, [r2, #0]
 800f24c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f250:	6006      	str	r6, [r0, #0]
 800f252:	6856      	ldr	r6, [r2, #4]
 800f254:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f258:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f25c:	6046      	str	r6, [r0, #4]
 800f25e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f262:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f266:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f26a:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f26e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f272:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f276:	4565      	cmp	r5, ip
 800f278:	f1a1 0208 	sub.w	r2, r1, #8
 800f27c:	db06      	blt.n	800f28c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f27e:	d119      	bne.n	800f2b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f280:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f284:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f288:	42ae      	cmp	r6, r5
 800f28a:	dd13      	ble.n	800f2b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f28c:	460e      	mov	r6, r1
 800f28e:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f292:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f296:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f29a:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f29e:	601d      	str	r5, [r3, #0]
 800f2a0:	6875      	ldr	r5, [r6, #4]
 800f2a2:	605d      	str	r5, [r3, #4]
 800f2a4:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f2a8:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f2ac:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f2b0:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f2b4:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f2b8:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f2bc:	42ae      	cmp	r6, r5
 800f2be:	db06      	blt.n	800f2ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f2c0:	d116      	bne.n	800f2f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f2c2:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f2c6:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f2ca:	45ac      	cmp	ip, r5
 800f2cc:	da10      	bge.n	800f2f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f2ce:	681d      	ldr	r5, [r3, #0]
 800f2d0:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f2d4:	6005      	str	r5, [r0, #0]
 800f2d6:	685d      	ldr	r5, [r3, #4]
 800f2d8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f2dc:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f2e0:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f2e4:	6045      	str	r5, [r0, #4]
 800f2e6:	8146      	strh	r6, [r0, #10]
 800f2e8:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f2ec:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f2f0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f2f4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f2f8:	4565      	cmp	r5, ip
 800f2fa:	db06      	blt.n	800f30a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f2fc:	d119      	bne.n	800f332 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f2fe:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f302:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f306:	42ae      	cmp	r6, r5
 800f308:	da13      	bge.n	800f332 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f30a:	460e      	mov	r6, r1
 800f30c:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f310:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f314:	6005      	str	r5, [r0, #0]
 800f316:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f31a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f31e:	6875      	ldr	r5, [r6, #4]
 800f320:	6045      	str	r5, [r0, #4]
 800f322:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f326:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f32a:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f32e:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f332:	3308      	adds	r3, #8
 800f334:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f338:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f33c:	45e6      	cmp	lr, ip
 800f33e:	dbf8      	blt.n	800f332 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f340:	d105      	bne.n	800f34e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f342:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f346:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f34a:	42ae      	cmp	r6, r5
 800f34c:	dbf1      	blt.n	800f332 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f34e:	4615      	mov	r5, r2
 800f350:	3a08      	subs	r2, #8
 800f352:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f356:	45b4      	cmp	ip, r6
 800f358:	dbf9      	blt.n	800f34e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f35a:	d105      	bne.n	800f368 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f35c:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f360:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f364:	45b0      	cmp	r8, r6
 800f366:	dbf2      	blt.n	800f34e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f368:	4293      	cmp	r3, r2
 800f36a:	f1a5 0608 	sub.w	r6, r5, #8
 800f36e:	d816      	bhi.n	800f39e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f370:	f8d6 c000 	ldr.w	ip, [r6]
 800f374:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f378:	f8c3 c000 	str.w	ip, [r3]
 800f37c:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f380:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f384:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f388:	f8c3 c004 	str.w	ip, [r3, #4]
 800f38c:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f390:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f394:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f398:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f39c:	e7c9      	b.n	800f332 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f39e:	f8d6 e000 	ldr.w	lr, [r6]
 800f3a2:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f3a6:	f8c0 e000 	str.w	lr, [r0]
 800f3aa:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f3ae:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f3b2:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f3b6:	f8c0 e004 	str.w	lr, [r0, #4]
 800f3ba:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f3be:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f3c2:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f3c6:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f3ca:	1acd      	subs	r5, r1, r3
 800f3cc:	1a16      	subs	r6, r2, r0
 800f3ce:	10ed      	asrs	r5, r5, #3
 800f3d0:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f3d4:	bfb5      	itete	lt
 800f3d6:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f3da:	e9c4 3100 	strdge	r3, r1, [r4]
 800f3de:	460a      	movlt	r2, r1
 800f3e0:	4603      	movge	r3, r0
 800f3e2:	3408      	adds	r4, #8
 800f3e4:	4618      	mov	r0, r3
 800f3e6:	4611      	mov	r1, r2
 800f3e8:	e724      	b.n	800f234 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f3ea:	4299      	cmp	r1, r3
 800f3ec:	d928      	bls.n	800f440 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f3ee:	f1a3 0210 	sub.w	r2, r3, #16
 800f3f2:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f3f6:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f3fa:	45ac      	cmp	ip, r5
 800f3fc:	db06      	blt.n	800f40c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f3fe:	d11d      	bne.n	800f43c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f400:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f404:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f408:	42ae      	cmp	r6, r5
 800f40a:	da17      	bge.n	800f43c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f40c:	4615      	mov	r5, r2
 800f40e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f412:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f416:	6116      	str	r6, [r2, #16]
 800f418:	686e      	ldr	r6, [r5, #4]
 800f41a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f41e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f422:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f426:	42a8      	cmp	r0, r5
 800f428:	6156      	str	r6, [r2, #20]
 800f42a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f42e:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f432:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f436:	f1a2 0208 	sub.w	r2, r2, #8
 800f43a:	d1da      	bne.n	800f3f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f43c:	3308      	adds	r3, #8
 800f43e:	e7d4      	b.n	800f3ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f440:	42bc      	cmp	r4, r7
 800f442:	d903      	bls.n	800f44c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f444:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f448:	3c08      	subs	r4, #8
 800f44a:	e6f3      	b.n	800f234 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f44c:	b050      	add	sp, #320	; 0x140
 800f44e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f452 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f452:	b510      	push	{r4, lr}
 800f454:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f456:	07da      	lsls	r2, r3, #31
 800f458:	4604      	mov	r4, r0
 800f45a:	d507      	bpl.n	800f46c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f45c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f460:	f7ff fe8a 	bl	800f178 <_ZN8touchgfx7Outline6lineToEii>
 800f464:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f466:	f023 0301 	bic.w	r3, r3, #1
 800f46a:	6243      	str	r3, [r0, #36]	; 0x24
 800f46c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f46e:	079b      	lsls	r3, r3, #30
 800f470:	d521      	bpl.n	800f4b6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f472:	6923      	ldr	r3, [r4, #16]
 800f474:	88d9      	ldrh	r1, [r3, #6]
 800f476:	889a      	ldrh	r2, [r3, #4]
 800f478:	430a      	orrs	r2, r1
 800f47a:	d010      	beq.n	800f49e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f47c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f480:	2a00      	cmp	r2, #0
 800f482:	db0c      	blt.n	800f49e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f484:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f486:	428a      	cmp	r2, r1
 800f488:	da09      	bge.n	800f49e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f48a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f48e:	4291      	cmp	r1, r2
 800f490:	bf88      	it	hi
 800f492:	3308      	addhi	r3, #8
 800f494:	f102 0201 	add.w	r2, r2, #1
 800f498:	bf88      	it	hi
 800f49a:	6123      	strhi	r3, [r4, #16]
 800f49c:	60a2      	str	r2, [r4, #8]
 800f49e:	68a1      	ldr	r1, [r4, #8]
 800f4a0:	b129      	cbz	r1, 800f4ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f4a2:	6863      	ldr	r3, [r4, #4]
 800f4a4:	4299      	cmp	r1, r3
 800f4a6:	d802      	bhi.n	800f4ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f4a8:	68e0      	ldr	r0, [r4, #12]
 800f4aa:	f7ff febc 	bl	800f226 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f4ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f4b0:	f023 0302 	bic.w	r3, r3, #2
 800f4b4:	6263      	str	r3, [r4, #36]	; 0x24
 800f4b6:	68e0      	ldr	r0, [r4, #12]
 800f4b8:	bd10      	pop	{r4, pc}
	...

0800f4bc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f4bc:	4b02      	ldr	r3, [pc, #8]	; (800f4c8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f4be:	6018      	str	r0, [r3, #0]
 800f4c0:	4b02      	ldr	r3, [pc, #8]	; (800f4cc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f4c2:	6019      	str	r1, [r3, #0]
 800f4c4:	4770      	bx	lr
 800f4c6:	bf00      	nop
 800f4c8:	20015490 	.word	0x20015490
 800f4cc:	20015494 	.word	0x20015494

0800f4d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f4d0:	4b01      	ldr	r3, [pc, #4]	; (800f4d8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f4d2:	6818      	ldr	r0, [r3, #0]
 800f4d4:	4770      	bx	lr
 800f4d6:	bf00      	nop
 800f4d8:	20015490 	.word	0x20015490

0800f4dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f4dc:	4b01      	ldr	r3, [pc, #4]	; (800f4e4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f4de:	6818      	ldr	r0, [r3, #0]
 800f4e0:	4770      	bx	lr
 800f4e2:	bf00      	nop
 800f4e4:	20015494 	.word	0x20015494

0800f4e8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f4e8:	b510      	push	{r4, lr}
 800f4ea:	6803      	ldr	r3, [r0, #0]
 800f4ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f4ee:	460c      	mov	r4, r1
 800f4f0:	4798      	blx	r3
 800f4f2:	1b03      	subs	r3, r0, r4
 800f4f4:	4258      	negs	r0, r3
 800f4f6:	4158      	adcs	r0, r3
 800f4f8:	bd10      	pop	{r4, pc}
	...

0800f4fc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f4fc:	4b01      	ldr	r3, [pc, #4]	; (800f504 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f4fe:	6019      	str	r1, [r3, #0]
 800f500:	4770      	bx	lr
 800f502:	bf00      	nop
 800f504:	20015498 	.word	0x20015498

0800f508 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f50c:	4696      	mov	lr, r2
 800f50e:	4605      	mov	r5, r0
 800f510:	4614      	mov	r4, r2
 800f512:	460e      	mov	r6, r1
 800f514:	461f      	mov	r7, r3
 800f516:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f51a:	b097      	sub	sp, #92	; 0x5c
 800f51c:	f10d 0c1c 	add.w	ip, sp, #28
 800f520:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f524:	f8de 3000 	ldr.w	r3, [lr]
 800f528:	f8cc 3000 	str.w	r3, [ip]
 800f52c:	f104 0e14 	add.w	lr, r4, #20
 800f530:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f534:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f538:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f53c:	f8de 3000 	ldr.w	r3, [lr]
 800f540:	f8cc 3000 	str.w	r3, [ip]
 800f544:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f548:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f54c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f550:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f554:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f558:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f55c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f560:	f8de 3000 	ldr.w	r3, [lr]
 800f564:	f8cc 3000 	str.w	r3, [ip]
 800f568:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f56a:	682b      	ldr	r3, [r5, #0]
 800f56c:	9201      	str	r2, [sp, #4]
 800f56e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f572:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f574:	9200      	str	r2, [sp, #0]
 800f576:	f8cd 8008 	str.w	r8, [sp, #8]
 800f57a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f57e:	aa07      	add	r2, sp, #28
 800f580:	463b      	mov	r3, r7
 800f582:	4631      	mov	r1, r6
 800f584:	4628      	mov	r0, r5
 800f586:	47d8      	blx	fp
 800f588:	46a6      	mov	lr, r4
 800f58a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f58e:	f10d 0c1c 	add.w	ip, sp, #28
 800f592:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f596:	f8de 3000 	ldr.w	r3, [lr]
 800f59a:	f8cc 3000 	str.w	r3, [ip]
 800f59e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f5a2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f5a6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f5aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f5ae:	343c      	adds	r4, #60	; 0x3c
 800f5b0:	f8de 3000 	ldr.w	r3, [lr]
 800f5b4:	f8cc 3000 	str.w	r3, [ip]
 800f5b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f5ba:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f5be:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f5c2:	6823      	ldr	r3, [r4, #0]
 800f5c4:	f8cc 3000 	str.w	r3, [ip]
 800f5c8:	682b      	ldr	r3, [r5, #0]
 800f5ca:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f5ce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f5d0:	9201      	str	r2, [sp, #4]
 800f5d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f5d4:	9200      	str	r2, [sp, #0]
 800f5d6:	f8cd 8008 	str.w	r8, [sp, #8]
 800f5da:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f5dc:	aa07      	add	r2, sp, #28
 800f5de:	463b      	mov	r3, r7
 800f5e0:	4631      	mov	r1, r6
 800f5e2:	4628      	mov	r0, r5
 800f5e4:	47a0      	blx	r4
 800f5e6:	b017      	add	sp, #92	; 0x5c
 800f5e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f5ec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f5ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5f0:	b08d      	sub	sp, #52	; 0x34
 800f5f2:	4688      	mov	r8, r1
 800f5f4:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f5f6:	f8d3 c000 	ldr.w	ip, [r3]
 800f5fa:	680f      	ldr	r7, [r1, #0]
 800f5fc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f600:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f604:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f608:	edd3 6a07 	vldr	s13, [r3, #28]
 800f60c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f60e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f612:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f616:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f61a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f61e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f622:	eba7 070c 	sub.w	r7, r7, ip
 800f626:	42bc      	cmp	r4, r7
 800f628:	bfa8      	it	ge
 800f62a:	463c      	movge	r4, r7
 800f62c:	ee07 4a90 	vmov	s15, r4
 800f630:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f634:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f638:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f63c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f640:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f644:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f648:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f64c:	eb09 0e0c 	add.w	lr, r9, ip
 800f650:	4571      	cmp	r1, lr
 800f652:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f656:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f65a:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f65e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f662:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f666:	f340 808d 	ble.w	800f784 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f66a:	eba1 060e 	sub.w	r6, r1, lr
 800f66e:	fb96 f5f4 	sdiv	r5, r6, r4
 800f672:	ee07 5a10 	vmov	s14, r5
 800f676:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f67a:	2d00      	cmp	r5, #0
 800f67c:	fb04 6615 	mls	r6, r4, r5, r6
 800f680:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f684:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f688:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f68c:	dd13      	ble.n	800f6b6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f68e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f692:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f696:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f69a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f69e:	bf18      	it	ne
 800f6a0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f6a4:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f6a8:	bf08      	it	eq
 800f6aa:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f6ae:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f6b2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f6b6:	fb05 f204 	mul.w	r2, r5, r4
 800f6ba:	1abf      	subs	r7, r7, r2
 800f6bc:	4494      	add	ip, r2
 800f6be:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f6c2:	4411      	add	r1, r2
 800f6c4:	eb09 020c 	add.w	r2, r9, ip
 800f6c8:	443a      	add	r2, r7
 800f6ca:	b209      	sxth	r1, r1
 800f6cc:	428a      	cmp	r2, r1
 800f6ce:	bfc4      	itt	gt
 800f6d0:	eba1 0209 	subgt.w	r2, r1, r9
 800f6d4:	eba2 070c 	subgt.w	r7, r2, ip
 800f6d8:	2f00      	cmp	r7, #0
 800f6da:	dd50      	ble.n	800f77e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f6dc:	fb97 f1f4 	sdiv	r1, r7, r4
 800f6e0:	fb04 7211 	mls	r2, r4, r1, r7
 800f6e4:	b90a      	cbnz	r2, 800f6ea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f6e6:	3901      	subs	r1, #1
 800f6e8:	4622      	mov	r2, r4
 800f6ea:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f6ee:	6840      	ldr	r0, [r0, #4]
 800f6f0:	900b      	str	r0, [sp, #44]	; 0x2c
 800f6f2:	f8d0 a000 	ldr.w	sl, [r0]
 800f6f6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800f6f8:	9008      	str	r0, [sp, #32]
 800f6fa:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800f6fe:	9818      	ldr	r0, [sp, #96]	; 0x60
 800f700:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800f704:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f708:	695b      	ldr	r3, [r3, #20]
 800f70a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f70c:	445b      	add	r3, fp
 800f70e:	eef0 6a42 	vmov.f32	s13, s4
 800f712:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f716:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f71a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f71e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f722:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f726:	9307      	str	r3, [sp, #28]
 800f728:	ee17 7a90 	vmov	r7, s15
 800f72c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f730:	eeb0 7a61 	vmov.f32	s14, s3
 800f734:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f738:	ee16 3a90 	vmov	r3, s13
 800f73c:	fb97 f7f4 	sdiv	r7, r7, r4
 800f740:	ee17 ca90 	vmov	ip, s15
 800f744:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f748:	fb9c fcf4 	sdiv	ip, ip, r4
 800f74c:	fb0c 3306 	mla	r3, ip, r6, r3
 800f750:	9302      	str	r3, [sp, #8]
 800f752:	ee17 3a10 	vmov	r3, s14
 800f756:	44b6      	add	lr, r6
 800f758:	fb04 e505 	mla	r5, r4, r5, lr
 800f75c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f760:	fb07 3706 	mla	r7, r7, r6, r3
 800f764:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f768:	e9cd 4700 	strd	r4, r7, [sp]
 800f76c:	2900      	cmp	r1, #0
 800f76e:	bfcc      	ite	gt
 800f770:	46a1      	movgt	r9, r4
 800f772:	4691      	movle	r9, r2
 800f774:	eba9 0306 	sub.w	r3, r9, r6
 800f778:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f77c:	47a0      	blx	r4
 800f77e:	b00d      	add	sp, #52	; 0x34
 800f780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f784:	2500      	movs	r5, #0
 800f786:	462e      	mov	r6, r5
 800f788:	e799      	b.n	800f6be <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f790:	b0db      	sub	sp, #364	; 0x16c
 800f792:	461d      	mov	r5, r3
 800f794:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800f798:	930a      	str	r3, [sp, #40]	; 0x28
 800f79a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800f79e:	930b      	str	r3, [sp, #44]	; 0x2c
 800f7a0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800f7a4:	9310      	str	r3, [sp, #64]	; 0x40
 800f7a6:	6803      	ldr	r3, [r0, #0]
 800f7a8:	910f      	str	r1, [sp, #60]	; 0x3c
 800f7aa:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800f7ac:	9009      	str	r0, [sp, #36]	; 0x24
 800f7ae:	4614      	mov	r4, r2
 800f7b0:	4629      	mov	r1, r5
 800f7b2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800f7b6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800f7ba:	47b8      	blx	r7
 800f7bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f7be:	6058      	str	r0, [r3, #4]
 800f7c0:	2800      	cmp	r0, #0
 800f7c2:	f000 83a1 	beq.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f7c6:	682b      	ldr	r3, [r5, #0]
 800f7c8:	9314      	str	r3, [sp, #80]	; 0x50
 800f7ca:	686b      	ldr	r3, [r5, #4]
 800f7cc:	9315      	str	r3, [sp, #84]	; 0x54
 800f7ce:	4bc4      	ldr	r3, [pc, #784]	; (800fae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f7d0:	ed94 7a02 	vldr	s14, [r4, #8]
 800f7d4:	7819      	ldrb	r1, [r3, #0]
 800f7d6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f7da:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800f7de:	2900      	cmp	r1, #0
 800f7e0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f7e4:	bf16      	itet	ne
 800f7e6:	4619      	movne	r1, r3
 800f7e8:	4611      	moveq	r1, r2
 800f7ea:	4613      	movne	r3, r2
 800f7ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f7f0:	9116      	str	r1, [sp, #88]	; 0x58
 800f7f2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800f7f6:	f240 8387 	bls.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f7fa:	ed94 7a07 	vldr	s14, [r4, #28]
 800f7fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f802:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f806:	f240 837f 	bls.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f80a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800f80e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f816:	f240 8377 	bls.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f81a:	6822      	ldr	r2, [r4, #0]
 800f81c:	4bb1      	ldr	r3, [pc, #708]	; (800fae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f81e:	429a      	cmp	r2, r3
 800f820:	f2c0 8372 	blt.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f824:	49b0      	ldr	r1, [pc, #704]	; (800fae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f826:	6963      	ldr	r3, [r4, #20]
 800f828:	428a      	cmp	r2, r1
 800f82a:	f300 836d 	bgt.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f82e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f832:	48ae      	ldr	r0, [pc, #696]	; (800faec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f834:	33ff      	adds	r3, #255	; 0xff
 800f836:	4283      	cmp	r3, r0
 800f838:	f200 8366 	bhi.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f83c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f83e:	4dac      	ldr	r5, [pc, #688]	; (800faf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f840:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f844:	33ff      	adds	r3, #255	; 0xff
 800f846:	42ab      	cmp	r3, r5
 800f848:	f200 835e 	bhi.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f84c:	6862      	ldr	r2, [r4, #4]
 800f84e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800f852:	33ff      	adds	r3, #255	; 0xff
 800f854:	4283      	cmp	r3, r0
 800f856:	f200 8357 	bhi.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f85a:	69a1      	ldr	r1, [r4, #24]
 800f85c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800f860:	33ff      	adds	r3, #255	; 0xff
 800f862:	4283      	cmp	r3, r0
 800f864:	f200 8350 	bhi.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f868:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f86a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800f86e:	30ff      	adds	r0, #255	; 0xff
 800f870:	42a8      	cmp	r0, r5
 800f872:	f200 8349 	bhi.w	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f876:	428a      	cmp	r2, r1
 800f878:	f280 8110 	bge.w	800fa9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f87c:	429a      	cmp	r2, r3
 800f87e:	f300 8119 	bgt.w	800fab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f882:	4299      	cmp	r1, r3
 800f884:	f280 811d 	bge.w	800fac2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f888:	2502      	movs	r5, #2
 800f88a:	2701      	movs	r7, #1
 800f88c:	46a9      	mov	r9, r5
 800f88e:	46b8      	mov	r8, r7
 800f890:	f04f 0a00 	mov.w	sl, #0
 800f894:	4621      	mov	r1, r4
 800f896:	a849      	add	r0, sp, #292	; 0x124
 800f898:	f003 fcfe 	bl	8013298 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f89c:	4622      	mov	r2, r4
 800f89e:	4653      	mov	r3, sl
 800f8a0:	a949      	add	r1, sp, #292	; 0x124
 800f8a2:	f8cd 9000 	str.w	r9, [sp]
 800f8a6:	a819      	add	r0, sp, #100	; 0x64
 800f8a8:	f003 fe26 	bl	80134f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f8ac:	4622      	mov	r2, r4
 800f8ae:	4653      	mov	r3, sl
 800f8b0:	a949      	add	r1, sp, #292	; 0x124
 800f8b2:	f8cd 8000 	str.w	r8, [sp]
 800f8b6:	a829      	add	r0, sp, #164	; 0xa4
 800f8b8:	f003 fe1e 	bl	80134f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f8bc:	4643      	mov	r3, r8
 800f8be:	4622      	mov	r2, r4
 800f8c0:	a949      	add	r1, sp, #292	; 0x124
 800f8c2:	f8cd 9000 	str.w	r9, [sp]
 800f8c6:	a839      	add	r0, sp, #228	; 0xe4
 800f8c8:	f003 fe16 	bl	80134f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f8cc:	42af      	cmp	r7, r5
 800f8ce:	bfb5      	itete	lt
 800f8d0:	2300      	movlt	r3, #0
 800f8d2:	2301      	movge	r3, #1
 800f8d4:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f8d6:	930e      	strge	r3, [sp, #56]	; 0x38
 800f8d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f8da:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f8de:	af12      	add	r7, sp, #72	; 0x48
 800f8e0:	bfb9      	ittee	lt
 800f8e2:	ad29      	addlt	r5, sp, #164	; 0xa4
 800f8e4:	ac19      	addlt	r4, sp, #100	; 0x64
 800f8e6:	ad19      	addge	r5, sp, #100	; 0x64
 800f8e8:	ac29      	addge	r4, sp, #164	; 0xa4
 800f8ea:	e887 0003 	stmia.w	r7, {r0, r1}
 800f8ee:	b928      	cbnz	r0, 800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f8f0:	4b80      	ldr	r3, [pc, #512]	; (800faf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f8f2:	6818      	ldr	r0, [r3, #0]
 800f8f4:	6803      	ldr	r3, [r0, #0]
 800f8f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f8f8:	4798      	blx	r3
 800f8fa:	6038      	str	r0, [r7, #0]
 800f8fc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f8fe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f902:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f906:	930c      	str	r3, [sp, #48]	; 0x30
 800f908:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f90a:	6963      	ldr	r3, [r4, #20]
 800f90c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800f90e:	440b      	add	r3, r1
 800f910:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f914:	4408      	add	r0, r1
 800f916:	b200      	sxth	r0, r0
 800f918:	4283      	cmp	r3, r0
 800f91a:	900d      	str	r0, [sp, #52]	; 0x34
 800f91c:	f280 80dd 	bge.w	800fada <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f920:	428b      	cmp	r3, r1
 800f922:	da08      	bge.n	800f936 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f924:	2a00      	cmp	r2, #0
 800f926:	dd06      	ble.n	800f936 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f928:	1acb      	subs	r3, r1, r3
 800f92a:	429a      	cmp	r2, r3
 800f92c:	f2c0 80e4 	blt.w	800faf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f930:	2b00      	cmp	r3, #0
 800f932:	f300 80e2 	bgt.w	800fafa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f936:	6967      	ldr	r7, [r4, #20]
 800f938:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f93a:	443b      	add	r3, r7
 800f93c:	461f      	mov	r7, r3
 800f93e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f940:	1bdf      	subs	r7, r3, r7
 800f942:	4297      	cmp	r7, r2
 800f944:	bfa8      	it	ge
 800f946:	4617      	movge	r7, r2
 800f948:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f94c:	2f00      	cmp	r7, #0
 800f94e:	f340 8166 	ble.w	800fc1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f952:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f954:	6829      	ldr	r1, [r5, #0]
 800f956:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f95a:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f95e:	6820      	ldr	r0, [r4, #0]
 800f960:	4411      	add	r1, r2
 800f962:	4299      	cmp	r1, r3
 800f964:	dd1a      	ble.n	800f99c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f966:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f96a:	440b      	add	r3, r1
 800f96c:	4402      	add	r2, r0
 800f96e:	b21b      	sxth	r3, r3
 800f970:	429a      	cmp	r2, r3
 800f972:	dc13      	bgt.n	800f99c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f974:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f976:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f978:	681b      	ldr	r3, [r3, #0]
 800f97a:	9206      	str	r2, [sp, #24]
 800f97c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f97e:	9205      	str	r2, [sp, #20]
 800f980:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f982:	9500      	str	r5, [sp, #0]
 800f984:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f988:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f98a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f98c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f990:	a912      	add	r1, sp, #72	; 0x48
 800f992:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800f996:	aa49      	add	r2, sp, #292	; 0x124
 800f998:	4623      	mov	r3, r4
 800f99a:	47c8      	blx	r9
 800f99c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f9a0:	441a      	add	r2, r3
 800f9a2:	6963      	ldr	r3, [r4, #20]
 800f9a4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f9a8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f9ac:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f9b0:	68a1      	ldr	r1, [r4, #8]
 800f9b2:	ed94 6a08 	vldr	s12, [r4, #32]
 800f9b6:	6022      	str	r2, [r4, #0]
 800f9b8:	3301      	adds	r3, #1
 800f9ba:	6163      	str	r3, [r4, #20]
 800f9bc:	69a3      	ldr	r3, [r4, #24]
 800f9be:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f9c2:	3b01      	subs	r3, #1
 800f9c4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f9c8:	61a3      	str	r3, [r4, #24]
 800f9ca:	6923      	ldr	r3, [r4, #16]
 800f9cc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f9d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f9d4:	edd4 6a07 	vldr	s13, [r4, #28]
 800f9d8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f9dc:	440b      	add	r3, r1
 800f9de:	68e1      	ldr	r1, [r4, #12]
 800f9e0:	6123      	str	r3, [r4, #16]
 800f9e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f9e6:	428b      	cmp	r3, r1
 800f9e8:	edc4 6a07 	vstr	s13, [r4, #28]
 800f9ec:	db15      	blt.n	800fa1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f9ee:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f9f2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f9f6:	3201      	adds	r2, #1
 800f9f8:	edc4 6a07 	vstr	s13, [r4, #28]
 800f9fc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fa00:	6022      	str	r2, [r4, #0]
 800fa02:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fa06:	1a5b      	subs	r3, r3, r1
 800fa08:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fa0c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fa10:	6123      	str	r3, [r4, #16]
 800fa12:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fa16:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fa1a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fa1e:	441a      	add	r2, r3
 800fa20:	696b      	ldr	r3, [r5, #20]
 800fa22:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fa26:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fa2a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fa2e:	68a9      	ldr	r1, [r5, #8]
 800fa30:	ed95 6a08 	vldr	s12, [r5, #32]
 800fa34:	602a      	str	r2, [r5, #0]
 800fa36:	3301      	adds	r3, #1
 800fa38:	616b      	str	r3, [r5, #20]
 800fa3a:	69ab      	ldr	r3, [r5, #24]
 800fa3c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fa40:	3b01      	subs	r3, #1
 800fa42:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fa46:	61ab      	str	r3, [r5, #24]
 800fa48:	692b      	ldr	r3, [r5, #16]
 800fa4a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fa4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fa52:	edd5 6a07 	vldr	s13, [r5, #28]
 800fa56:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fa5a:	440b      	add	r3, r1
 800fa5c:	68e9      	ldr	r1, [r5, #12]
 800fa5e:	612b      	str	r3, [r5, #16]
 800fa60:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fa64:	428b      	cmp	r3, r1
 800fa66:	edc5 6a07 	vstr	s13, [r5, #28]
 800fa6a:	db15      	blt.n	800fa98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800fa6c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fa70:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fa74:	3201      	adds	r2, #1
 800fa76:	edc5 6a07 	vstr	s13, [r5, #28]
 800fa7a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fa7e:	602a      	str	r2, [r5, #0]
 800fa80:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fa84:	1a5b      	subs	r3, r3, r1
 800fa86:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fa8a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fa8e:	612b      	str	r3, [r5, #16]
 800fa90:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fa94:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fa98:	3f01      	subs	r7, #1
 800fa9a:	e757      	b.n	800f94c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800fa9c:	4299      	cmp	r1, r3
 800fa9e:	dc13      	bgt.n	800fac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800faa0:	429a      	cmp	r2, r3
 800faa2:	da14      	bge.n	800face <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800faa4:	2502      	movs	r5, #2
 800faa6:	2703      	movs	r7, #3
 800faa8:	46a9      	mov	r9, r5
 800faaa:	f04f 0800 	mov.w	r8, #0
 800faae:	f04f 0a01 	mov.w	sl, #1
 800fab2:	e6ef      	b.n	800f894 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fab4:	2501      	movs	r5, #1
 800fab6:	2700      	movs	r7, #0
 800fab8:	46a9      	mov	r9, r5
 800faba:	46b8      	mov	r8, r7
 800fabc:	f04f 0a02 	mov.w	sl, #2
 800fac0:	e6e8      	b.n	800f894 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fac2:	2501      	movs	r5, #1
 800fac4:	2702      	movs	r7, #2
 800fac6:	e6e1      	b.n	800f88c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800fac8:	2500      	movs	r5, #0
 800faca:	2701      	movs	r7, #1
 800facc:	e7f4      	b.n	800fab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800face:	2702      	movs	r7, #2
 800fad0:	2503      	movs	r5, #3
 800fad2:	f04f 0900 	mov.w	r9, #0
 800fad6:	46b8      	mov	r8, r7
 800fad8:	e7e9      	b.n	800faae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800fada:	4613      	mov	r3, r2
 800fadc:	e728      	b.n	800f930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800fade:	bf00      	nop
 800fae0:	20015480 	.word	0x20015480
 800fae4:	fffd8f01 	.word	0xfffd8f01
 800fae8:	00027100 	.word	0x00027100
 800faec:	0004e1ff 	.word	0x0004e1ff
 800faf0:	0004e1fe 	.word	0x0004e1fe
 800faf4:	20015488 	.word	0x20015488
 800faf8:	4613      	mov	r3, r2
 800fafa:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fafc:	9111      	str	r1, [sp, #68]	; 0x44
 800fafe:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800fb02:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800fb06:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800fb08:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800fb0c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800fb10:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800fb14:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800fb18:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800fb1c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800fb20:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800fb24:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800fb28:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800fb2c:	469e      	mov	lr, r3
 800fb2e:	469c      	mov	ip, r3
 800fb30:	f04f 0900 	mov.w	r9, #0
 800fb34:	f1bc 0f00 	cmp.w	ip, #0
 800fb38:	d147      	bne.n	800fbca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fb3a:	eb03 0c07 	add.w	ip, r3, r7
 800fb3e:	1ad7      	subs	r7, r2, r3
 800fb40:	f1b9 0f00 	cmp.w	r9, #0
 800fb44:	d009      	beq.n	800fb5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fb46:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800fb4a:	9029      	str	r0, [sp, #164]	; 0xa4
 800fb4c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800fb50:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800fb54:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800fb58:	912d      	str	r1, [sp, #180]	; 0xb4
 800fb5a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fb5c:	9111      	str	r1, [sp, #68]	; 0x44
 800fb5e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fb62:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fb66:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fb6a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fb6e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fb72:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fb76:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fb7a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fb7e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fb82:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fb86:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fb8a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fb8e:	f04f 0800 	mov.w	r8, #0
 800fb92:	f1be 0f00 	cmp.w	lr, #0
 800fb96:	d031      	beq.n	800fbfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fb98:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fb9a:	4431      	add	r1, r6
 800fb9c:	4549      	cmp	r1, r9
 800fb9e:	4450      	add	r0, sl
 800fba0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fba4:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fba8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fbac:	db08      	blt.n	800fbc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800fbae:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fbb2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fbb6:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fbba:	3001      	adds	r0, #1
 800fbbc:	eba1 0109 	sub.w	r1, r1, r9
 800fbc0:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fbc4:	f04f 0801 	mov.w	r8, #1
 800fbc8:	e7e3      	b.n	800fb92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800fbca:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fbcc:	4431      	add	r1, r6
 800fbce:	4541      	cmp	r1, r8
 800fbd0:	4450      	add	r0, sl
 800fbd2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fbd6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fbda:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fbde:	db08      	blt.n	800fbf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800fbe0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fbe4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fbe8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fbec:	3001      	adds	r0, #1
 800fbee:	eba1 0108 	sub.w	r1, r1, r8
 800fbf2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800fbf6:	f04f 0901 	mov.w	r9, #1
 800fbfa:	e79b      	b.n	800fb34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800fbfc:	449c      	add	ip, r3
 800fbfe:	1aff      	subs	r7, r7, r3
 800fc00:	f1b8 0f00 	cmp.w	r8, #0
 800fc04:	d009      	beq.n	800fc1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800fc06:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fc0a:	9019      	str	r0, [sp, #100]	; 0x64
 800fc0c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800fc10:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800fc14:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fc18:	911d      	str	r1, [sp, #116]	; 0x74
 800fc1a:	1ad2      	subs	r2, r2, r3
 800fc1c:	e68b      	b.n	800f936 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fc1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc20:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800fc22:	2b00      	cmp	r3, #0
 800fc24:	f000 80d1 	beq.w	800fdca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800fc28:	ad19      	add	r5, sp, #100	; 0x64
 800fc2a:	ac39      	add	r4, sp, #228	; 0xe4
 800fc2c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fc2e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fc32:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fc36:	930c      	str	r3, [sp, #48]	; 0x30
 800fc38:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fc3a:	6963      	ldr	r3, [r4, #20]
 800fc3c:	440b      	add	r3, r1
 800fc3e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fc42:	4408      	add	r0, r1
 800fc44:	b200      	sxth	r0, r0
 800fc46:	4283      	cmp	r3, r0
 800fc48:	900d      	str	r0, [sp, #52]	; 0x34
 800fc4a:	f280 80c1 	bge.w	800fdd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800fc4e:	428b      	cmp	r3, r1
 800fc50:	da08      	bge.n	800fc64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fc52:	2a00      	cmp	r2, #0
 800fc54:	dd06      	ble.n	800fc64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fc56:	1acb      	subs	r3, r1, r3
 800fc58:	429a      	cmp	r2, r3
 800fc5a:	f2c0 80bb 	blt.w	800fdd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800fc5e:	2b00      	cmp	r3, #0
 800fc60:	f300 80b9 	bgt.w	800fdd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800fc64:	6967      	ldr	r7, [r4, #20]
 800fc66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fc68:	443b      	add	r3, r7
 800fc6a:	461f      	mov	r7, r3
 800fc6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fc6e:	1bdf      	subs	r7, r3, r7
 800fc70:	4297      	cmp	r7, r2
 800fc72:	bfa8      	it	ge
 800fc74:	4617      	movge	r7, r2
 800fc76:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fc7a:	2f00      	cmp	r7, #0
 800fc7c:	f340 813c 	ble.w	800fef8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800fc80:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fc82:	6829      	ldr	r1, [r5, #0]
 800fc84:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc88:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fc8c:	6820      	ldr	r0, [r4, #0]
 800fc8e:	4411      	add	r1, r2
 800fc90:	4299      	cmp	r1, r3
 800fc92:	dd1a      	ble.n	800fcca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fc94:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fc98:	440b      	add	r3, r1
 800fc9a:	4402      	add	r2, r0
 800fc9c:	b21b      	sxth	r3, r3
 800fc9e:	429a      	cmp	r2, r3
 800fca0:	dc13      	bgt.n	800fcca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fca2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fca4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fca6:	681b      	ldr	r3, [r3, #0]
 800fca8:	9206      	str	r2, [sp, #24]
 800fcaa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fcac:	9205      	str	r2, [sp, #20]
 800fcae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fcb0:	9500      	str	r5, [sp, #0]
 800fcb2:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fcb6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fcb8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fcba:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fcbe:	a912      	add	r1, sp, #72	; 0x48
 800fcc0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fcc4:	aa49      	add	r2, sp, #292	; 0x124
 800fcc6:	4623      	mov	r3, r4
 800fcc8:	47c8      	blx	r9
 800fcca:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fcce:	441a      	add	r2, r3
 800fcd0:	6963      	ldr	r3, [r4, #20]
 800fcd2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fcd6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fcda:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fcde:	68a1      	ldr	r1, [r4, #8]
 800fce0:	ed94 6a08 	vldr	s12, [r4, #32]
 800fce4:	6022      	str	r2, [r4, #0]
 800fce6:	3301      	adds	r3, #1
 800fce8:	6163      	str	r3, [r4, #20]
 800fcea:	69a3      	ldr	r3, [r4, #24]
 800fcec:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fcf0:	3b01      	subs	r3, #1
 800fcf2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fcf6:	61a3      	str	r3, [r4, #24]
 800fcf8:	6923      	ldr	r3, [r4, #16]
 800fcfa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fcfe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd02:	edd4 6a07 	vldr	s13, [r4, #28]
 800fd06:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fd0a:	440b      	add	r3, r1
 800fd0c:	68e1      	ldr	r1, [r4, #12]
 800fd0e:	6123      	str	r3, [r4, #16]
 800fd10:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fd14:	428b      	cmp	r3, r1
 800fd16:	edc4 6a07 	vstr	s13, [r4, #28]
 800fd1a:	db15      	blt.n	800fd48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800fd1c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fd20:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fd24:	3201      	adds	r2, #1
 800fd26:	edc4 6a07 	vstr	s13, [r4, #28]
 800fd2a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fd2e:	6022      	str	r2, [r4, #0]
 800fd30:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fd34:	1a5b      	subs	r3, r3, r1
 800fd36:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fd3a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fd3e:	6123      	str	r3, [r4, #16]
 800fd40:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fd44:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fd48:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fd4c:	441a      	add	r2, r3
 800fd4e:	696b      	ldr	r3, [r5, #20]
 800fd50:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fd54:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fd58:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fd5c:	68a9      	ldr	r1, [r5, #8]
 800fd5e:	ed95 6a08 	vldr	s12, [r5, #32]
 800fd62:	602a      	str	r2, [r5, #0]
 800fd64:	3301      	adds	r3, #1
 800fd66:	616b      	str	r3, [r5, #20]
 800fd68:	69ab      	ldr	r3, [r5, #24]
 800fd6a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fd6e:	3b01      	subs	r3, #1
 800fd70:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fd74:	61ab      	str	r3, [r5, #24]
 800fd76:	692b      	ldr	r3, [r5, #16]
 800fd78:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fd7c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd80:	edd5 6a07 	vldr	s13, [r5, #28]
 800fd84:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fd88:	440b      	add	r3, r1
 800fd8a:	68e9      	ldr	r1, [r5, #12]
 800fd8c:	612b      	str	r3, [r5, #16]
 800fd8e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fd92:	428b      	cmp	r3, r1
 800fd94:	edc5 6a07 	vstr	s13, [r5, #28]
 800fd98:	db15      	blt.n	800fdc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800fd9a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fd9e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fda2:	3201      	adds	r2, #1
 800fda4:	edc5 6a07 	vstr	s13, [r5, #28]
 800fda8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fdac:	602a      	str	r2, [r5, #0]
 800fdae:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fdb2:	1a5b      	subs	r3, r3, r1
 800fdb4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fdb8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fdbc:	612b      	str	r3, [r5, #16]
 800fdbe:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fdc2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fdc6:	3f01      	subs	r7, #1
 800fdc8:	e757      	b.n	800fc7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800fdca:	ad39      	add	r5, sp, #228	; 0xe4
 800fdcc:	ac19      	add	r4, sp, #100	; 0x64
 800fdce:	e72d      	b.n	800fc2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800fdd0:	4613      	mov	r3, r2
 800fdd2:	e744      	b.n	800fc5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800fdd4:	4613      	mov	r3, r2
 800fdd6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800fdda:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800fddc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800fde0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800fde4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800fde8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800fdec:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800fdf0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800fdf4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800fdf8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800fdfa:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800fdfe:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800fe02:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800fe06:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800fe0a:	960e      	str	r6, [sp, #56]	; 0x38
 800fe0c:	469e      	mov	lr, r3
 800fe0e:	461f      	mov	r7, r3
 800fe10:	f04f 0900 	mov.w	r9, #0
 800fe14:	2f00      	cmp	r7, #0
 800fe16:	d146      	bne.n	800fea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800fe18:	449c      	add	ip, r3
 800fe1a:	1ad7      	subs	r7, r2, r3
 800fe1c:	f1b9 0f00 	cmp.w	r9, #0
 800fe20:	d009      	beq.n	800fe36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800fe22:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800fe26:	9039      	str	r0, [sp, #228]	; 0xe4
 800fe28:	913d      	str	r1, [sp, #244]	; 0xf4
 800fe2a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800fe2e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800fe32:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800fe36:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fe38:	910e      	str	r1, [sp, #56]	; 0x38
 800fe3a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fe3e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fe42:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fe46:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fe4a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fe4e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fe52:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fe56:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fe5a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fe5e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fe62:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fe66:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fe6a:	f04f 0800 	mov.w	r8, #0
 800fe6e:	f1be 0f00 	cmp.w	lr, #0
 800fe72:	d030      	beq.n	800fed6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800fe74:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800fe76:	4431      	add	r1, r6
 800fe78:	4549      	cmp	r1, r9
 800fe7a:	4450      	add	r0, sl
 800fe7c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fe80:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fe84:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fe88:	db08      	blt.n	800fe9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800fe8a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fe8e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fe92:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fe96:	3001      	adds	r0, #1
 800fe98:	eba1 0109 	sub.w	r1, r1, r9
 800fe9c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fea0:	f04f 0801 	mov.w	r8, #1
 800fea4:	e7e3      	b.n	800fe6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800fea6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800fea8:	4431      	add	r1, r6
 800feaa:	4541      	cmp	r1, r8
 800feac:	4450      	add	r0, sl
 800feae:	ee37 7a24 	vadd.f32	s14, s14, s9
 800feb2:	ee77 7a84 	vadd.f32	s15, s15, s8
 800feb6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800feba:	db08      	blt.n	800fece <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800febc:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fec0:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fec4:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fec8:	3001      	adds	r0, #1
 800feca:	eba1 0108 	sub.w	r1, r1, r8
 800fece:	3f01      	subs	r7, #1
 800fed0:	f04f 0901 	mov.w	r9, #1
 800fed4:	e79e      	b.n	800fe14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800fed6:	449c      	add	ip, r3
 800fed8:	1aff      	subs	r7, r7, r3
 800feda:	f1b8 0f00 	cmp.w	r8, #0
 800fede:	d009      	beq.n	800fef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800fee0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fee4:	9019      	str	r0, [sp, #100]	; 0x64
 800fee6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800feea:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800feee:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fef2:	911d      	str	r1, [sp, #116]	; 0x74
 800fef4:	1ad2      	subs	r2, r2, r3
 800fef6:	e6b5      	b.n	800fc64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fef8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fefa:	681b      	ldr	r3, [r3, #0]
 800fefc:	b923      	cbnz	r3, 800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fefe:	4b04      	ldr	r3, [pc, #16]	; (800ff10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ff00:	6818      	ldr	r0, [r3, #0]
 800ff02:	6803      	ldr	r3, [r0, #0]
 800ff04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff06:	4798      	blx	r3
 800ff08:	b05b      	add	sp, #364	; 0x16c
 800ff0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff0e:	bf00      	nop
 800ff10:	20015488 	.word	0x20015488

0800ff14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800ff14:	b570      	push	{r4, r5, r6, lr}
 800ff16:	4604      	mov	r4, r0
 800ff18:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800ff1c:	9804      	ldr	r0, [sp, #16]
 800ff1e:	6061      	str	r1, [r4, #4]
 800ff20:	2500      	movs	r5, #0
 800ff22:	8025      	strh	r5, [r4, #0]
 800ff24:	7223      	strb	r3, [r4, #8]
 800ff26:	7266      	strb	r6, [r4, #9]
 800ff28:	60e0      	str	r0, [r4, #12]
 800ff2a:	8222      	strh	r2, [r4, #16]
 800ff2c:	8265      	strh	r5, [r4, #18]
 800ff2e:	82a5      	strh	r5, [r4, #20]
 800ff30:	82e5      	strh	r5, [r4, #22]
 800ff32:	8325      	strh	r5, [r4, #24]
 800ff34:	8365      	strh	r5, [r4, #26]
 800ff36:	83a5      	strh	r5, [r4, #28]
 800ff38:	77a5      	strb	r5, [r4, #30]
 800ff3a:	b32e      	cbz	r6, 800ff88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ff3c:	6803      	ldr	r3, [r0, #0]
 800ff3e:	695b      	ldr	r3, [r3, #20]
 800ff40:	4798      	blx	r3
 800ff42:	4606      	mov	r6, r0
 800ff44:	b300      	cbz	r0, 800ff88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ff46:	68e0      	ldr	r0, [r4, #12]
 800ff48:	6803      	ldr	r3, [r0, #0]
 800ff4a:	4631      	mov	r1, r6
 800ff4c:	68db      	ldr	r3, [r3, #12]
 800ff4e:	4798      	blx	r3
 800ff50:	4605      	mov	r5, r0
 800ff52:	b1c8      	cbz	r0, 800ff88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ff54:	7b43      	ldrb	r3, [r0, #13]
 800ff56:	7a82      	ldrb	r2, [r0, #10]
 800ff58:	005b      	lsls	r3, r3, #1
 800ff5a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ff5e:	4313      	orrs	r3, r2
 800ff60:	83a3      	strh	r3, [r4, #28]
 800ff62:	7a63      	ldrb	r3, [r4, #9]
 800ff64:	2b04      	cmp	r3, #4
 800ff66:	d10f      	bne.n	800ff88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ff68:	68e0      	ldr	r0, [r4, #12]
 800ff6a:	6803      	ldr	r3, [r0, #0]
 800ff6c:	462a      	mov	r2, r5
 800ff6e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ff70:	4631      	mov	r1, r6
 800ff72:	4798      	blx	r3
 800ff74:	7b6b      	ldrb	r3, [r5, #13]
 800ff76:	005b      	lsls	r3, r3, #1
 800ff78:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ff7c:	7aab      	ldrb	r3, [r5, #10]
 800ff7e:	4313      	orrs	r3, r2
 800ff80:	4418      	add	r0, r3
 800ff82:	8ba3      	ldrh	r3, [r4, #28]
 800ff84:	4418      	add	r0, r3
 800ff86:	83a0      	strh	r0, [r4, #28]
 800ff88:	4620      	mov	r0, r4
 800ff8a:	bd70      	pop	{r4, r5, r6, pc}

0800ff8c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800ff8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff90:	2400      	movs	r4, #0
 800ff92:	b085      	sub	sp, #20
 800ff94:	4681      	mov	r9, r0
 800ff96:	4688      	mov	r8, r1
 800ff98:	4692      	mov	sl, r2
 800ff9a:	469b      	mov	fp, r3
 800ff9c:	4627      	mov	r7, r4
 800ff9e:	4625      	mov	r5, r4
 800ffa0:	4626      	mov	r6, r4
 800ffa2:	4554      	cmp	r4, sl
 800ffa4:	da2a      	bge.n	800fffc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ffa6:	2300      	movs	r3, #0
 800ffa8:	9303      	str	r3, [sp, #12]
 800ffaa:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ffae:	429d      	cmp	r5, r3
 800ffb0:	d004      	beq.n	800ffbc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800ffb2:	f242 030b 	movw	r3, #8203	; 0x200b
 800ffb6:	429d      	cmp	r5, r3
 800ffb8:	bf18      	it	ne
 800ffba:	462f      	movne	r7, r5
 800ffbc:	ab03      	add	r3, sp, #12
 800ffbe:	4642      	mov	r2, r8
 800ffc0:	4659      	mov	r1, fp
 800ffc2:	4648      	mov	r0, r9
 800ffc4:	f002 ff7e 	bl	8012ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ffc8:	4605      	mov	r5, r0
 800ffca:	b1b8      	cbz	r0, 800fffc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ffcc:	280a      	cmp	r0, #10
 800ffce:	d015      	beq.n	800fffc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ffd0:	9a03      	ldr	r2, [sp, #12]
 800ffd2:	b18a      	cbz	r2, 800fff8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800ffd4:	7b50      	ldrb	r0, [r2, #13]
 800ffd6:	7a93      	ldrb	r3, [r2, #10]
 800ffd8:	8895      	ldrh	r5, [r2, #4]
 800ffda:	0040      	lsls	r0, r0, #1
 800ffdc:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800ffe0:	4303      	orrs	r3, r0
 800ffe2:	9301      	str	r3, [sp, #4]
 800ffe4:	f8d8 3000 	ldr.w	r3, [r8]
 800ffe8:	4639      	mov	r1, r7
 800ffea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ffec:	4640      	mov	r0, r8
 800ffee:	4798      	blx	r3
 800fff0:	9b01      	ldr	r3, [sp, #4]
 800fff2:	4418      	add	r0, r3
 800fff4:	4406      	add	r6, r0
 800fff6:	b2b6      	uxth	r6, r6
 800fff8:	3401      	adds	r4, #1
 800fffa:	e7d2      	b.n	800ffa2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800fffc:	4630      	mov	r0, r6
 800fffe:	b005      	add	sp, #20
 8010000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010004 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010004:	2a02      	cmp	r2, #2
 8010006:	b530      	push	{r4, r5, lr}
 8010008:	d011      	beq.n	801002e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801000a:	2a03      	cmp	r2, #3
 801000c:	d01c      	beq.n	8010048 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801000e:	2a01      	cmp	r2, #1
 8010010:	d10c      	bne.n	801002c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010012:	888b      	ldrh	r3, [r1, #4]
 8010014:	8801      	ldrh	r1, [r0, #0]
 8010016:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801001a:	8844      	ldrh	r4, [r0, #2]
 801001c:	8004      	strh	r4, [r0, #0]
 801001e:	1a5b      	subs	r3, r3, r1
 8010020:	1a9b      	subs	r3, r3, r2
 8010022:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010026:	8043      	strh	r3, [r0, #2]
 8010028:	8081      	strh	r1, [r0, #4]
 801002a:	80c2      	strh	r2, [r0, #6]
 801002c:	bd30      	pop	{r4, r5, pc}
 801002e:	88cb      	ldrh	r3, [r1, #6]
 8010030:	8842      	ldrh	r2, [r0, #2]
 8010032:	1a9b      	subs	r3, r3, r2
 8010034:	88c2      	ldrh	r2, [r0, #6]
 8010036:	1a9b      	subs	r3, r3, r2
 8010038:	888a      	ldrh	r2, [r1, #4]
 801003a:	8801      	ldrh	r1, [r0, #0]
 801003c:	8043      	strh	r3, [r0, #2]
 801003e:	1a52      	subs	r2, r2, r1
 8010040:	8881      	ldrh	r1, [r0, #4]
 8010042:	1a52      	subs	r2, r2, r1
 8010044:	8002      	strh	r2, [r0, #0]
 8010046:	e7f1      	b.n	801002c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010048:	88cb      	ldrh	r3, [r1, #6]
 801004a:	8841      	ldrh	r1, [r0, #2]
 801004c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010050:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010054:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8010058:	8045      	strh	r5, [r0, #2]
 801005a:	1a5b      	subs	r3, r3, r1
 801005c:	1a9b      	subs	r3, r3, r2
 801005e:	8003      	strh	r3, [r0, #0]
 8010060:	8082      	strh	r2, [r0, #4]
 8010062:	80c4      	strh	r4, [r0, #6]
 8010064:	e7e2      	b.n	801002c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08010066 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8010066:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801006a:	b09f      	sub	sp, #124	; 0x7c
 801006c:	9116      	str	r1, [sp, #88]	; 0x58
 801006e:	9317      	str	r3, [sp, #92]	; 0x5c
 8010070:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010072:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010074:	8809      	ldrh	r1, [r1, #0]
 8010076:	889b      	ldrh	r3, [r3, #4]
 8010078:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801007c:	9212      	str	r2, [sp, #72]	; 0x48
 801007e:	440b      	add	r3, r1
 8010080:	b21b      	sxth	r3, r3
 8010082:	9310      	str	r3, [sp, #64]	; 0x40
 8010084:	f8d8 3000 	ldr.w	r3, [r8]
 8010088:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801008c:	7a59      	ldrb	r1, [r3, #9]
 801008e:	7a1b      	ldrb	r3, [r3, #8]
 8010090:	9011      	str	r0, [sp, #68]	; 0x44
 8010092:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8010096:	9114      	str	r1, [sp, #80]	; 0x50
 8010098:	9315      	str	r3, [sp, #84]	; 0x54
 801009a:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 801009e:	2a00      	cmp	r2, #0
 80100a0:	d06a      	beq.n	8010178 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80100a2:	f898 3010 	ldrb.w	r3, [r8, #16]
 80100a6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80100a8:	2b04      	cmp	r3, #4
 80100aa:	bf14      	ite	ne
 80100ac:	2301      	movne	r3, #1
 80100ae:	2302      	moveq	r3, #2
 80100b0:	4413      	add	r3, r2
 80100b2:	f04f 0900 	mov.w	r9, #0
 80100b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80100b8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80100bc:	464c      	mov	r4, r9
 80100be:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80100c2:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80100c6:	4293      	cmp	r3, r2
 80100c8:	f280 808f 	bge.w	80101ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80100cc:	2300      	movs	r3, #0
 80100ce:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80100d2:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80100d6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80100da:	429c      	cmp	r4, r3
 80100dc:	d006      	beq.n	80100ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80100de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80100e0:	f242 020b 	movw	r2, #8203	; 0x200b
 80100e4:	4294      	cmp	r4, r2
 80100e6:	bf18      	it	ne
 80100e8:	4623      	movne	r3, r4
 80100ea:	930d      	str	r3, [sp, #52]	; 0x34
 80100ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80100ee:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80100f0:	f8d8 2000 	ldr.w	r2, [r8]
 80100f4:	428b      	cmp	r3, r1
 80100f6:	db41      	blt.n	801017c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80100f8:	6813      	ldr	r3, [r2, #0]
 80100fa:	4610      	mov	r0, r2
 80100fc:	695b      	ldr	r3, [r3, #20]
 80100fe:	4798      	blx	r3
 8010100:	4604      	mov	r4, r0
 8010102:	f8d8 0000 	ldr.w	r0, [r8]
 8010106:	6803      	ldr	r3, [r0, #0]
 8010108:	aa1d      	add	r2, sp, #116	; 0x74
 801010a:	689e      	ldr	r6, [r3, #8]
 801010c:	4621      	mov	r1, r4
 801010e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010112:	47b0      	blx	r6
 8010114:	901c      	str	r0, [sp, #112]	; 0x70
 8010116:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801011a:	429c      	cmp	r4, r3
 801011c:	f000 80e9 	beq.w	80102f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010120:	f242 030b 	movw	r3, #8203	; 0x200b
 8010124:	429c      	cmp	r4, r3
 8010126:	f000 80e4 	beq.w	80102f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801012a:	2c00      	cmp	r4, #0
 801012c:	f000 80f6 	beq.w	801031c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010130:	2c0a      	cmp	r4, #10
 8010132:	d060      	beq.n	80101f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010134:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010136:	b36a      	cbz	r2, 8010194 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8010138:	8894      	ldrh	r4, [r2, #4]
 801013a:	f1bb 0f00 	cmp.w	fp, #0
 801013e:	d03b      	beq.n	80101b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010140:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010144:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8010148:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801014c:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010150:	f1bb 0f01 	cmp.w	fp, #1
 8010154:	ea49 0903 	orr.w	r9, r9, r3
 8010158:	d134      	bne.n	80101c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801015a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801015c:	eba5 0509 	sub.w	r5, r5, r9
 8010160:	2b00      	cmp	r3, #0
 8010162:	d14f      	bne.n	8010204 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010164:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010166:	eb09 0305 	add.w	r3, r9, r5
 801016a:	4413      	add	r3, r2
 801016c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801016e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010172:	4293      	cmp	r3, r2
 8010174:	da51      	bge.n	801021a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8010176:	e038      	b.n	80101ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010178:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801017a:	e79a      	b.n	80100b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801017c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010180:	9301      	str	r3, [sp, #4]
 8010182:	ab1d      	add	r3, sp, #116	; 0x74
 8010184:	9300      	str	r3, [sp, #0]
 8010186:	4659      	mov	r1, fp
 8010188:	ab1c      	add	r3, sp, #112	; 0x70
 801018a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801018c:	f002 fee3 	bl	8012f56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010190:	4604      	mov	r4, r0
 8010192:	e7c0      	b.n	8010116 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8010194:	f8d8 0000 	ldr.w	r0, [r8]
 8010198:	6803      	ldr	r3, [r0, #0]
 801019a:	691b      	ldr	r3, [r3, #16]
 801019c:	4798      	blx	r3
 801019e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80101a2:	4298      	cmp	r0, r3
 80101a4:	f000 80a5 	beq.w	80102f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80101a8:	f242 030b 	movw	r3, #8203	; 0x200b
 80101ac:	4298      	cmp	r0, r3
 80101ae:	f000 80a0 	beq.w	80102f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80101b2:	f1bb 0f00 	cmp.w	fp, #0
 80101b6:	d100      	bne.n	80101ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80101b8:	444d      	add	r5, r9
 80101ba:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80101bc:	2a00      	cmp	r2, #0
 80101be:	d1bf      	bne.n	8010140 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80101c0:	4691      	mov	r9, r2
 80101c2:	e096      	b.n	80102f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80101c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80101c6:	2b00      	cmp	r3, #0
 80101c8:	f000 80aa 	beq.w	8010320 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80101cc:	f1bb 0f00 	cmp.w	fp, #0
 80101d0:	d118      	bne.n	8010204 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80101d2:	f8d8 0000 	ldr.w	r0, [r8]
 80101d6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80101d8:	6803      	ldr	r3, [r0, #0]
 80101da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80101dc:	4798      	blx	r3
 80101de:	4405      	add	r5, r0
 80101e0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80101e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80101e4:	1aeb      	subs	r3, r5, r3
 80101e6:	4293      	cmp	r3, r2
 80101e8:	dd17      	ble.n	801021a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80101ea:	2c00      	cmp	r4, #0
 80101ec:	f000 8096 	beq.w	801031c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 80101f0:	2c0a      	cmp	r4, #10
 80101f2:	f040 8084 	bne.w	80102fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80101f6:	240a      	movs	r4, #10
 80101f8:	fab4 f084 	clz	r0, r4
 80101fc:	0940      	lsrs	r0, r0, #5
 80101fe:	b01f      	add	sp, #124	; 0x7c
 8010200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010204:	f8d8 0000 	ldr.w	r0, [r8]
 8010208:	990d      	ldr	r1, [sp, #52]	; 0x34
 801020a:	6803      	ldr	r3, [r0, #0]
 801020c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801020e:	4798      	blx	r3
 8010210:	f1bb 0f01 	cmp.w	fp, #1
 8010214:	eba5 0500 	sub.w	r5, r5, r0
 8010218:	d0a4      	beq.n	8010164 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801021a:	981c      	ldr	r0, [sp, #112]	; 0x70
 801021c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801021e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010222:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010226:	7b43      	ldrb	r3, [r0, #13]
 8010228:	015b      	lsls	r3, r3, #5
 801022a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801022e:	7983      	ldrb	r3, [r0, #6]
 8010230:	4429      	add	r1, r5
 8010232:	4313      	orrs	r3, r2
 8010234:	440b      	add	r3, r1
 8010236:	42b3      	cmp	r3, r6
 8010238:	db5b      	blt.n	80102f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801023a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801023c:	4299      	cmp	r1, r3
 801023e:	da58      	bge.n	80102f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010240:	f8d8 0000 	ldr.w	r0, [r8]
 8010244:	6803      	ldr	r3, [r0, #0]
 8010246:	42ae      	cmp	r6, r5
 8010248:	bfc8      	it	gt
 801024a:	1b76      	subgt	r6, r6, r5
 801024c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801024e:	bfcc      	ite	gt
 8010250:	b2b6      	uxthgt	r6, r6
 8010252:	2600      	movle	r6, #0
 8010254:	4798      	blx	r3
 8010256:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8010258:	7b5a      	ldrb	r2, [r3, #13]
 801025a:	00d1      	lsls	r1, r2, #3
 801025c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8010260:	7a19      	ldrb	r1, [r3, #8]
 8010262:	4339      	orrs	r1, r7
 8010264:	0657      	lsls	r7, r2, #25
 8010266:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8010268:	bf44      	itt	mi
 801026a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801026e:	b209      	sxthmi	r1, r1
 8010270:	19c7      	adds	r7, r0, r7
 8010272:	1a7f      	subs	r7, r7, r1
 8010274:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010276:	b2bf      	uxth	r7, r7
 8010278:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801027c:	fa0f fa87 	sxth.w	sl, r7
 8010280:	4551      	cmp	r1, sl
 8010282:	dd3a      	ble.n	80102fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8010284:	0112      	lsls	r2, r2, #4
 8010286:	79d8      	ldrb	r0, [r3, #7]
 8010288:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801028c:	4302      	orrs	r2, r0
 801028e:	4492      	add	sl, r2
 8010290:	4551      	cmp	r1, sl
 8010292:	dc2e      	bgt.n	80102f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010294:	1bcf      	subs	r7, r1, r7
 8010296:	b2bf      	uxth	r7, r7
 8010298:	468a      	mov	sl, r1
 801029a:	9319      	str	r3, [sp, #100]	; 0x64
 801029c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801029e:	f8d8 0000 	ldr.w	r0, [r8]
 80102a2:	681a      	ldr	r2, [r3, #0]
 80102a4:	6801      	ldr	r1, [r0, #0]
 80102a6:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80102a8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80102aa:	9313      	str	r3, [sp, #76]	; 0x4c
 80102ac:	9218      	str	r2, [sp, #96]	; 0x60
 80102ae:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80102b0:	4788      	blx	r1
 80102b2:	f898 1006 	ldrb.w	r1, [r8, #6]
 80102b6:	910b      	str	r1, [sp, #44]	; 0x2c
 80102b8:	f898 100e 	ldrb.w	r1, [r8, #14]
 80102bc:	910a      	str	r1, [sp, #40]	; 0x28
 80102be:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80102c2:	9109      	str	r1, [sp, #36]	; 0x24
 80102c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80102c6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80102ca:	9305      	str	r3, [sp, #20]
 80102cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80102ce:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80102d0:	9206      	str	r2, [sp, #24]
 80102d2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80102d6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80102da:	e9cd a601 	strd	sl, r6, [sp, #4]
 80102de:	442e      	add	r6, r5
 80102e0:	b236      	sxth	r6, r6
 80102e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80102e4:	9600      	str	r6, [sp, #0]
 80102e6:	681a      	ldr	r2, [r3, #0]
 80102e8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80102ea:	685b      	ldr	r3, [r3, #4]
 80102ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80102ee:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80102f0:	47b0      	blx	r6
 80102f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80102f4:	3301      	adds	r3, #1
 80102f6:	930e      	str	r3, [sp, #56]	; 0x38
 80102f8:	e6e3      	b.n	80100c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80102fa:	2700      	movs	r7, #0
 80102fc:	e7cd      	b.n	801029a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80102fe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010300:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010302:	3501      	adds	r5, #1
 8010304:	429d      	cmp	r5, r3
 8010306:	f6bf af77 	bge.w	80101f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801030a:	4659      	mov	r1, fp
 801030c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801030e:	f7f4 fcd7 	bl	8004cc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010312:	4604      	mov	r4, r0
 8010314:	b110      	cbz	r0, 801031c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010316:	280a      	cmp	r0, #10
 8010318:	d1f2      	bne.n	8010300 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801031a:	e76c      	b.n	80101f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801031c:	2400      	movs	r4, #0
 801031e:	e76b      	b.n	80101f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010320:	f1bb 0f00 	cmp.w	fp, #0
 8010324:	f43f af5c 	beq.w	80101e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8010328:	e777      	b.n	801021a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801032a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801032a:	b530      	push	{r4, r5, lr}
 801032c:	8a44      	ldrh	r4, [r0, #18]
 801032e:	8ac5      	ldrh	r5, [r0, #22]
 8010330:	82c3      	strh	r3, [r0, #22]
 8010332:	442c      	add	r4, r5
 8010334:	1ae4      	subs	r4, r4, r3
 8010336:	8244      	strh	r4, [r0, #18]
 8010338:	8b03      	ldrh	r3, [r0, #24]
 801033a:	8a84      	ldrh	r4, [r0, #20]
 801033c:	4422      	add	r2, r4
 801033e:	440c      	add	r4, r1
 8010340:	1a59      	subs	r1, r3, r1
 8010342:	8342      	strh	r2, [r0, #26]
 8010344:	8284      	strh	r4, [r0, #20]
 8010346:	8301      	strh	r1, [r0, #24]
 8010348:	bd30      	pop	{r4, r5, pc}

0801034a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801034a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801034e:	7a43      	ldrb	r3, [r0, #9]
 8010350:	1eda      	subs	r2, r3, #3
 8010352:	b087      	sub	sp, #28
 8010354:	4604      	mov	r4, r0
 8010356:	b2d2      	uxtb	r2, r2
 8010358:	460f      	mov	r7, r1
 801035a:	2900      	cmp	r1, #0
 801035c:	d036      	beq.n	80103cc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 801035e:	2a01      	cmp	r2, #1
 8010360:	d932      	bls.n	80103c8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8010362:	1e58      	subs	r0, r3, #1
 8010364:	f1d0 0b00 	rsbs	fp, r0, #0
 8010368:	eb4b 0b00 	adc.w	fp, fp, r0
 801036c:	1e99      	subs	r1, r3, #2
 801036e:	424b      	negs	r3, r1
 8010370:	414b      	adcs	r3, r1
 8010372:	9303      	str	r3, [sp, #12]
 8010374:	2300      	movs	r3, #0
 8010376:	e9cd 3301 	strd	r3, r3, [sp, #4]
 801037a:	2500      	movs	r5, #0
 801037c:	8265      	strh	r5, [r4, #18]
 801037e:	82a5      	strh	r5, [r4, #20]
 8010380:	46a9      	mov	r9, r5
 8010382:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8010386:	2300      	movs	r3, #0
 8010388:	9305      	str	r3, [sp, #20]
 801038a:	8823      	ldrh	r3, [r4, #0]
 801038c:	2b20      	cmp	r3, #32
 801038e:	d02b      	beq.n	80103e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8010390:	eba3 020a 	sub.w	r2, r3, sl
 8010394:	4256      	negs	r6, r2
 8010396:	4156      	adcs	r6, r2
 8010398:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801039c:	4293      	cmp	r3, r2
 801039e:	d004      	beq.n	80103aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80103a0:	4553      	cmp	r3, sl
 80103a2:	bf16      	itet	ne
 80103a4:	4699      	movne	r9, r3
 80103a6:	2601      	moveq	r6, #1
 80103a8:	2600      	movne	r6, #0
 80103aa:	ab05      	add	r3, sp, #20
 80103ac:	68e2      	ldr	r2, [r4, #12]
 80103ae:	7a21      	ldrb	r1, [r4, #8]
 80103b0:	6860      	ldr	r0, [r4, #4]
 80103b2:	f002 fd87 	bl	8012ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80103b6:	8020      	strh	r0, [r4, #0]
 80103b8:	b9c8      	cbnz	r0, 80103ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 80103ba:	8b22      	ldrh	r2, [r4, #24]
 80103bc:	2300      	movs	r3, #0
 80103be:	4611      	mov	r1, r2
 80103c0:	4620      	mov	r0, r4
 80103c2:	f7ff ffb2 	bl	801032a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80103c6:	e066      	b.n	8010496 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80103c8:	468b      	mov	fp, r1
 80103ca:	e7cf      	b.n	801036c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 80103cc:	3b01      	subs	r3, #1
 80103ce:	2a01      	cmp	r2, #1
 80103d0:	bf8c      	ite	hi
 80103d2:	2200      	movhi	r2, #0
 80103d4:	2201      	movls	r2, #1
 80103d6:	2b01      	cmp	r3, #1
 80103d8:	bf8c      	ite	hi
 80103da:	2300      	movhi	r3, #0
 80103dc:	2301      	movls	r3, #1
 80103de:	9202      	str	r2, [sp, #8]
 80103e0:	9301      	str	r3, [sp, #4]
 80103e2:	9103      	str	r1, [sp, #12]
 80103e4:	468b      	mov	fp, r1
 80103e6:	e7c8      	b.n	801037a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 80103e8:	4699      	mov	r9, r3
 80103ea:	2601      	movs	r6, #1
 80103ec:	e7dd      	b.n	80103aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80103ee:	8ae3      	ldrh	r3, [r4, #22]
 80103f0:	280a      	cmp	r0, #10
 80103f2:	f103 0301 	add.w	r3, r3, #1
 80103f6:	82e3      	strh	r3, [r4, #22]
 80103f8:	d0df      	beq.n	80103ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 80103fa:	9a05      	ldr	r2, [sp, #20]
 80103fc:	bb42      	cbnz	r2, 8010450 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 80103fe:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010402:	4298      	cmp	r0, r3
 8010404:	d001      	beq.n	801040a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010406:	4550      	cmp	r0, sl
 8010408:	d1bd      	bne.n	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801040a:	8823      	ldrh	r3, [r4, #0]
 801040c:	8b21      	ldrh	r1, [r4, #24]
 801040e:	2b20      	cmp	r3, #32
 8010410:	d001      	beq.n	8010416 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010412:	4553      	cmp	r3, sl
 8010414:	d131      	bne.n	801047a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8010416:	2e00      	cmp	r6, #0
 8010418:	bf0a      	itet	eq
 801041a:	460d      	moveq	r5, r1
 801041c:	4630      	movne	r0, r6
 801041e:	2001      	moveq	r0, #1
 8010420:	440a      	add	r2, r1
 8010422:	8aa3      	ldrh	r3, [r4, #20]
 8010424:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010428:	b292      	uxth	r2, r2
 801042a:	8322      	strh	r2, [r4, #24]
 801042c:	4413      	add	r3, r2
 801042e:	2f00      	cmp	r7, #0
 8010430:	d03a      	beq.n	80104a8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010432:	f1bb 0f00 	cmp.w	fp, #0
 8010436:	d102      	bne.n	801043e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8010438:	9903      	ldr	r1, [sp, #12]
 801043a:	b301      	cbz	r1, 801047e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801043c:	b1f8      	cbz	r0, 801047e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801043e:	8ba1      	ldrh	r1, [r4, #28]
 8010440:	4419      	add	r1, r3
 8010442:	458c      	cmp	ip, r1
 8010444:	da2a      	bge.n	801049c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010446:	8a61      	ldrh	r1, [r4, #18]
 8010448:	b341      	cbz	r1, 801049c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801044a:	4563      	cmp	r3, ip
 801044c:	dd9b      	ble.n	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801044e:	e01c      	b.n	801048a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010450:	8893      	ldrh	r3, [r2, #4]
 8010452:	8023      	strh	r3, [r4, #0]
 8010454:	f892 800d 	ldrb.w	r8, [r2, #13]
 8010458:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801045c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8010460:	f892 800a 	ldrb.w	r8, [r2, #10]
 8010464:	ea48 0800 	orr.w	r8, r8, r0
 8010468:	68e0      	ldr	r0, [r4, #12]
 801046a:	6803      	ldr	r3, [r0, #0]
 801046c:	4649      	mov	r1, r9
 801046e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010470:	4798      	blx	r3
 8010472:	eb08 0200 	add.w	r2, r8, r0
 8010476:	b292      	uxth	r2, r2
 8010478:	e7c7      	b.n	801040a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801047a:	2000      	movs	r0, #0
 801047c:	e7d0      	b.n	8010420 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 801047e:	4563      	cmp	r3, ip
 8010480:	dd81      	ble.n	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010482:	8a63      	ldrh	r3, [r4, #18]
 8010484:	2b00      	cmp	r3, #0
 8010486:	f43f af7e 	beq.w	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801048a:	2301      	movs	r3, #1
 801048c:	77a3      	strb	r3, [r4, #30]
 801048e:	8ba2      	ldrh	r2, [r4, #28]
 8010490:	8b63      	ldrh	r3, [r4, #26]
 8010492:	4413      	add	r3, r2
 8010494:	8363      	strh	r3, [r4, #26]
 8010496:	b007      	add	sp, #28
 8010498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801049c:	2300      	movs	r3, #0
 801049e:	4611      	mov	r1, r2
 80104a0:	4620      	mov	r0, r4
 80104a2:	f7ff ff42 	bl	801032a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80104a6:	e76e      	b.n	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104a8:	4563      	cmp	r3, ip
 80104aa:	dd14      	ble.n	80104d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 80104ac:	9b02      	ldr	r3, [sp, #8]
 80104ae:	b113      	cbz	r3, 80104b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 80104b0:	2301      	movs	r3, #1
 80104b2:	460a      	mov	r2, r1
 80104b4:	e783      	b.n	80103be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 80104b6:	9b01      	ldr	r3, [sp, #4]
 80104b8:	2b00      	cmp	r3, #0
 80104ba:	f43f af64 	beq.w	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104be:	2800      	cmp	r0, #0
 80104c0:	f47f af61 	bne.w	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104c4:	b116      	cbz	r6, 80104cc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 80104c6:	2301      	movs	r3, #1
 80104c8:	462a      	mov	r2, r5
 80104ca:	e779      	b.n	80103c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 80104cc:	8a63      	ldrh	r3, [r4, #18]
 80104ce:	2b00      	cmp	r3, #0
 80104d0:	f43f af59 	beq.w	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104d4:	e7df      	b.n	8010496 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80104d6:	2800      	cmp	r0, #0
 80104d8:	f47f af55 	bne.w	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104dc:	2e00      	cmp	r6, #0
 80104de:	f43f af52 	beq.w	8010386 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104e2:	2301      	movs	r3, #1
 80104e4:	462a      	mov	r2, r5
 80104e6:	e7db      	b.n	80104a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

080104e8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80104e8:	b530      	push	{r4, r5, lr}
 80104ea:	4605      	mov	r5, r0
 80104ec:	b08b      	sub	sp, #44	; 0x2c
 80104ee:	b191      	cbz	r1, 8010516 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 80104f0:	e9cd 3100 	strd	r3, r1, [sp]
 80104f4:	4613      	mov	r3, r2
 80104f6:	4601      	mov	r1, r0
 80104f8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 80104fc:	a802      	add	r0, sp, #8
 80104fe:	f7ff fd09 	bl	800ff14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010502:	2401      	movs	r4, #1
 8010504:	2100      	movs	r1, #0
 8010506:	a802      	add	r0, sp, #8
 8010508:	f7ff ff1f 	bl	801034a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801050c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010510:	b163      	cbz	r3, 801052c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010512:	3401      	adds	r4, #1
 8010514:	e7f6      	b.n	8010504 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8010516:	f002 fda3 	bl	8013060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801051a:	2401      	movs	r4, #1
 801051c:	280a      	cmp	r0, #10
 801051e:	4628      	mov	r0, r5
 8010520:	bf08      	it	eq
 8010522:	3401      	addeq	r4, #1
 8010524:	f002 fd9c 	bl	8013060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010528:	2800      	cmp	r0, #0
 801052a:	d1f7      	bne.n	801051c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801052c:	b2a0      	uxth	r0, r4
 801052e:	b00b      	add	sp, #44	; 0x2c
 8010530:	bd30      	pop	{r4, r5, pc}

08010532 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010532:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010536:	b0e5      	sub	sp, #404	; 0x194
 8010538:	4689      	mov	r9, r1
 801053a:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 801053e:	900a      	str	r0, [sp, #40]	; 0x28
 8010540:	461c      	mov	r4, r3
 8010542:	f1ba 0f00 	cmp.w	sl, #0
 8010546:	f000 80b4 	beq.w	80106b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801054a:	681b      	ldr	r3, [r3, #0]
 801054c:	2b00      	cmp	r3, #0
 801054e:	f000 80b0 	beq.w	80106b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010552:	7ba3      	ldrb	r3, [r4, #14]
 8010554:	2b00      	cmp	r3, #0
 8010556:	f000 80ac 	beq.w	80106b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801055a:	6810      	ldr	r0, [r2, #0]
 801055c:	6851      	ldr	r1, [r2, #4]
 801055e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8010562:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8010566:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 801056a:	4643      	mov	r3, r8
 801056c:	c303      	stmia	r3!, {r0, r1}
 801056e:	2500      	movs	r5, #0
 8010570:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8010574:	79a2      	ldrb	r2, [r4, #6]
 8010576:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801057a:	a90f      	add	r1, sp, #60	; 0x3c
 801057c:	4640      	mov	r0, r8
 801057e:	950f      	str	r5, [sp, #60]	; 0x3c
 8010580:	f7ff fd40 	bl	8010004 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010584:	a90f      	add	r1, sp, #60	; 0x3c
 8010586:	4608      	mov	r0, r1
 8010588:	79a2      	ldrb	r2, [r4, #6]
 801058a:	af19      	add	r7, sp, #100	; 0x64
 801058c:	f7ff fd3a 	bl	8010004 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010590:	4638      	mov	r0, r7
 8010592:	f002 f93a 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 8010596:	6820      	ldr	r0, [r4, #0]
 8010598:	6803      	ldr	r3, [r0, #0]
 801059a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801059c:	4798      	blx	r3
 801059e:	4606      	mov	r6, r0
 80105a0:	6820      	ldr	r0, [r4, #0]
 80105a2:	6803      	ldr	r3, [r0, #0]
 80105a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80105a6:	4798      	blx	r3
 80105a8:	4633      	mov	r3, r6
 80105aa:	9000      	str	r0, [sp, #0]
 80105ac:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 80105ae:	4651      	mov	r1, sl
 80105b0:	4638      	mov	r0, r7
 80105b2:	f002 f985 	bl	80128c0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80105b6:	6820      	ldr	r0, [r4, #0]
 80105b8:	7923      	ldrb	r3, [r4, #4]
 80105ba:	9308      	str	r3, [sp, #32]
 80105bc:	6803      	ldr	r3, [r0, #0]
 80105be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80105c0:	4798      	blx	r3
 80105c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80105c6:	181e      	adds	r6, r3, r0
 80105c8:	42ae      	cmp	r6, r5
 80105ca:	dd06      	ble.n	80105da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 80105cc:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 80105d0:	4282      	cmp	r2, r0
 80105d2:	bfa4      	itt	ge
 80105d4:	189d      	addge	r5, r3, r2
 80105d6:	fb95 f5f6 	sdivge	r5, r5, r6
 80105da:	a832      	add	r0, sp, #200	; 0xc8
 80105dc:	f002 f915 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 80105e0:	7c23      	ldrb	r3, [r4, #16]
 80105e2:	b17b      	cbz	r3, 8010604 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 80105e4:	6820      	ldr	r0, [r4, #0]
 80105e6:	6803      	ldr	r3, [r0, #0]
 80105e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80105ea:	4798      	blx	r3
 80105ec:	4683      	mov	fp, r0
 80105ee:	6820      	ldr	r0, [r4, #0]
 80105f0:	6803      	ldr	r3, [r0, #0]
 80105f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80105f4:	4798      	blx	r3
 80105f6:	465b      	mov	r3, fp
 80105f8:	9000      	str	r0, [sp, #0]
 80105fa:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 80105fc:	4651      	mov	r1, sl
 80105fe:	a832      	add	r0, sp, #200	; 0xc8
 8010600:	f002 f95e 	bl	80128c0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010604:	7be1      	ldrb	r1, [r4, #15]
 8010606:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801060a:	7963      	ldrb	r3, [r4, #5]
 801060c:	1a52      	subs	r2, r2, r1
 801060e:	7c21      	ldrb	r1, [r4, #16]
 8010610:	9101      	str	r1, [sp, #4]
 8010612:	6821      	ldr	r1, [r4, #0]
 8010614:	9100      	str	r1, [sp, #0]
 8010616:	b292      	uxth	r2, r2
 8010618:	a932      	add	r1, sp, #200	; 0xc8
 801061a:	a811      	add	r0, sp, #68	; 0x44
 801061c:	f7ff fc7a 	bl	800ff14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010620:	7c23      	ldrb	r3, [r4, #16]
 8010622:	b9bb      	cbnz	r3, 8010654 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010624:	fa1f fa86 	uxth.w	sl, r6
 8010628:	2d00      	cmp	r5, #0
 801062a:	dd45      	ble.n	80106b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 801062c:	4638      	mov	r0, r7
 801062e:	f002 fd17 	bl	8013060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010632:	2800      	cmp	r0, #0
 8010634:	d03d      	beq.n	80106b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010636:	280a      	cmp	r0, #10
 8010638:	d1f6      	bne.n	8010628 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801063a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801063e:	4453      	add	r3, sl
 8010640:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010644:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010648:	eba3 030a 	sub.w	r3, r3, sl
 801064c:	3d01      	subs	r5, #1
 801064e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010652:	e7e9      	b.n	8010628 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010654:	0073      	lsls	r3, r6, #1
 8010656:	9309      	str	r3, [sp, #36]	; 0x24
 8010658:	f64f 7bff 	movw	fp, #65535	; 0xffff
 801065c:	fa1f fa86 	uxth.w	sl, r6
 8010660:	2d00      	cmp	r5, #0
 8010662:	dd29      	ble.n	80106b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010664:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010668:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801066a:	428b      	cmp	r3, r1
 801066c:	bfd4      	ite	le
 801066e:	2100      	movle	r1, #0
 8010670:	2101      	movgt	r1, #1
 8010672:	a811      	add	r0, sp, #68	; 0x44
 8010674:	f7ff fe69 	bl	801034a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010678:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 801067c:	3b01      	subs	r3, #1
 801067e:	b29b      	uxth	r3, r3
 8010680:	455b      	cmp	r3, fp
 8010682:	930b      	str	r3, [sp, #44]	; 0x2c
 8010684:	d005      	beq.n	8010692 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8010686:	7961      	ldrb	r1, [r4, #5]
 8010688:	4638      	mov	r0, r7
 801068a:	f7f4 fb19 	bl	8004cc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801068e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010690:	e7f4      	b.n	801067c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8010692:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010696:	4453      	add	r3, sl
 8010698:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801069c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80106a0:	eba3 030a 	sub.w	r3, r3, sl
 80106a4:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80106a8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80106ac:	3d01      	subs	r5, #1
 80106ae:	2b00      	cmp	r3, #0
 80106b0:	d1d6      	bne.n	8010660 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 80106b2:	b065      	add	sp, #404	; 0x194
 80106b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106b8:	0075      	lsls	r5, r6, #1
 80106ba:	f04f 0a00 	mov.w	sl, #0
 80106be:	7c23      	ldrb	r3, [r4, #16]
 80106c0:	2b00      	cmp	r3, #0
 80106c2:	d066      	beq.n	8010792 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 80106c4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80106c8:	428d      	cmp	r5, r1
 80106ca:	bfd4      	ite	le
 80106cc:	2100      	movle	r1, #0
 80106ce:	2101      	movgt	r1, #1
 80106d0:	a811      	add	r0, sp, #68	; 0x44
 80106d2:	f7ff fe3a 	bl	801034a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80106d6:	9b08      	ldr	r3, [sp, #32]
 80106d8:	2b00      	cmp	r3, #0
 80106da:	d055      	beq.n	8010788 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80106dc:	f894 b010 	ldrb.w	fp, [r4, #16]
 80106e0:	2264      	movs	r2, #100	; 0x64
 80106e2:	4639      	mov	r1, r7
 80106e4:	a84b      	add	r0, sp, #300	; 0x12c
 80106e6:	f010 f8f1 	bl	80208cc <memcpy>
 80106ea:	f1bb 0f00 	cmp.w	fp, #0
 80106ee:	d058      	beq.n	80107a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 80106f0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80106f4:	7922      	ldrb	r2, [r4, #4]
 80106f6:	2a01      	cmp	r2, #1
 80106f8:	d13c      	bne.n	8010774 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 80106fa:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 80106fe:	1ac0      	subs	r0, r0, r3
 8010700:	2302      	movs	r3, #2
 8010702:	fb90 f0f3 	sdiv	r0, r0, r3
 8010706:	b200      	sxth	r0, r0
 8010708:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801070c:	4418      	add	r0, r3
 801070e:	7c23      	ldrb	r3, [r4, #16]
 8010710:	b200      	sxth	r0, r0
 8010712:	2b00      	cmp	r3, #0
 8010714:	d03a      	beq.n	801078c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8010716:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 801071a:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 801071e:	9000      	str	r0, [sp, #0]
 8010720:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010724:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8010728:	980a      	ldr	r0, [sp, #40]	; 0x28
 801072a:	e9cd a703 	strd	sl, r7, [sp, #12]
 801072e:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010732:	464a      	mov	r2, r9
 8010734:	2100      	movs	r1, #0
 8010736:	f7ff fc96 	bl	8010066 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801073a:	2800      	cmp	r0, #0
 801073c:	d1b9      	bne.n	80106b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801073e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010742:	b2b2      	uxth	r2, r6
 8010744:	4611      	mov	r1, r2
 8010746:	4413      	add	r3, r2
 8010748:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801074c:	1a52      	subs	r2, r2, r1
 801074e:	7c21      	ldrb	r1, [r4, #16]
 8010750:	b21b      	sxth	r3, r3
 8010752:	b212      	sxth	r2, r2
 8010754:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010758:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801075c:	b109      	cbz	r1, 8010762 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 801075e:	42b2      	cmp	r2, r6
 8010760:	dba7      	blt.n	80106b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010762:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8010766:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 801076a:	440a      	add	r2, r1
 801076c:	b212      	sxth	r2, r2
 801076e:	4293      	cmp	r3, r2
 8010770:	dda5      	ble.n	80106be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010772:	e79e      	b.n	80106b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010774:	2a02      	cmp	r2, #2
 8010776:	d105      	bne.n	8010784 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010778:	7be2      	ldrb	r2, [r4, #15]
 801077a:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801077e:	1a80      	subs	r0, r0, r2
 8010780:	1ac0      	subs	r0, r0, r3
 8010782:	e7c0      	b.n	8010706 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010784:	2000      	movs	r0, #0
 8010786:	e7bf      	b.n	8010708 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010788:	7be0      	ldrb	r0, [r4, #15]
 801078a:	e7bd      	b.n	8010708 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 801078c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010790:	e7c3      	b.n	801071a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010792:	9b08      	ldr	r3, [sp, #32]
 8010794:	2b00      	cmp	r3, #0
 8010796:	d0f7      	beq.n	8010788 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010798:	2264      	movs	r2, #100	; 0x64
 801079a:	4639      	mov	r1, r7
 801079c:	a84b      	add	r0, sp, #300	; 0x12c
 801079e:	f010 f895 	bl	80208cc <memcpy>
 80107a2:	2300      	movs	r3, #0
 80107a4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80107a8:	6821      	ldr	r1, [r4, #0]
 80107aa:	a84b      	add	r0, sp, #300	; 0x12c
 80107ac:	f7ff fbee 	bl	800ff8c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80107b0:	b203      	sxth	r3, r0
 80107b2:	e79f      	b.n	80106f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

080107b4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80107b4:	2b03      	cmp	r3, #3
 80107b6:	d818      	bhi.n	80107ea <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80107b8:	e8df f003 	tbb	[pc, r3]
 80107bc:	130d0602 	.word	0x130d0602
 80107c0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80107c4:	1850      	adds	r0, r2, r1
 80107c6:	4770      	bx	lr
 80107c8:	8803      	ldrh	r3, [r0, #0]
 80107ca:	8880      	ldrh	r0, [r0, #4]
 80107cc:	4418      	add	r0, r3
 80107ce:	b200      	sxth	r0, r0
 80107d0:	1a80      	subs	r0, r0, r2
 80107d2:	3801      	subs	r0, #1
 80107d4:	4770      	bx	lr
 80107d6:	8803      	ldrh	r3, [r0, #0]
 80107d8:	8880      	ldrh	r0, [r0, #4]
 80107da:	4418      	add	r0, r3
 80107dc:	b200      	sxth	r0, r0
 80107de:	1a40      	subs	r0, r0, r1
 80107e0:	e7f7      	b.n	80107d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80107e2:	f9b0 0000 	ldrsh.w	r0, [r0]
 80107e6:	4410      	add	r0, r2
 80107e8:	4770      	bx	lr
 80107ea:	2000      	movs	r0, #0
 80107ec:	4770      	bx	lr

080107ee <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80107ee:	2b03      	cmp	r3, #3
 80107f0:	d817      	bhi.n	8010822 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80107f2:	e8df f003 	tbb	[pc, r3]
 80107f6:	0602      	.short	0x0602
 80107f8:	1009      	.short	0x1009
 80107fa:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80107fe:	1850      	adds	r0, r2, r1
 8010800:	4770      	bx	lr
 8010802:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010806:	e7fa      	b.n	80107fe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010808:	8843      	ldrh	r3, [r0, #2]
 801080a:	88c0      	ldrh	r0, [r0, #6]
 801080c:	4418      	add	r0, r3
 801080e:	b200      	sxth	r0, r0
 8010810:	1a80      	subs	r0, r0, r2
 8010812:	3801      	subs	r0, #1
 8010814:	4770      	bx	lr
 8010816:	8843      	ldrh	r3, [r0, #2]
 8010818:	88c0      	ldrh	r0, [r0, #6]
 801081a:	4418      	add	r0, r3
 801081c:	b200      	sxth	r0, r0
 801081e:	1a40      	subs	r0, r0, r1
 8010820:	e7f7      	b.n	8010812 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010822:	2000      	movs	r0, #0
 8010824:	4770      	bx	lr
	...

08010828 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010828:	4b01      	ldr	r3, [pc, #4]	; (8010830 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801082a:	2200      	movs	r2, #0
 801082c:	601a      	str	r2, [r3, #0]
 801082e:	4770      	bx	lr
 8010830:	20015498 	.word	0x20015498

08010834 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010834:	4603      	mov	r3, r0
 8010836:	b1c8      	cbz	r0, 801086c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010838:	0c02      	lsrs	r2, r0, #16
 801083a:	0412      	lsls	r2, r2, #16
 801083c:	b9a2      	cbnz	r2, 8010868 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801083e:	0403      	lsls	r3, r0, #16
 8010840:	2010      	movs	r0, #16
 8010842:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010846:	bf04      	itt	eq
 8010848:	021b      	lsleq	r3, r3, #8
 801084a:	3008      	addeq	r0, #8
 801084c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010850:	bf04      	itt	eq
 8010852:	011b      	lsleq	r3, r3, #4
 8010854:	3004      	addeq	r0, #4
 8010856:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801085a:	bf04      	itt	eq
 801085c:	009b      	lsleq	r3, r3, #2
 801085e:	3002      	addeq	r0, #2
 8010860:	2b00      	cmp	r3, #0
 8010862:	db04      	blt.n	801086e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010864:	3001      	adds	r0, #1
 8010866:	4770      	bx	lr
 8010868:	2000      	movs	r0, #0
 801086a:	e7ea      	b.n	8010842 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801086c:	2020      	movs	r0, #32
 801086e:	4770      	bx	lr

08010870 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010874:	b087      	sub	sp, #28
 8010876:	4681      	mov	r9, r0
 8010878:	4698      	mov	r8, r3
 801087a:	4610      	mov	r0, r2
 801087c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010880:	460d      	mov	r5, r1
 8010882:	b981      	cbnz	r1, 80108a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010884:	b14b      	cbz	r3, 801089a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010886:	460b      	mov	r3, r1
 8010888:	e9cd 4700 	strd	r4, r7, [sp]
 801088c:	464a      	mov	r2, r9
 801088e:	4641      	mov	r1, r8
 8010890:	f7ff ffee 	bl	8010870 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010894:	b007      	add	sp, #28
 8010896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801089a:	f04f 33ff 	mov.w	r3, #4294967295
 801089e:	603b      	str	r3, [r7, #0]
 80108a0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80108a4:	e7f6      	b.n	8010894 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80108a6:	fa32 fa01 	lsrs.w	sl, r2, r1
 80108aa:	d107      	bne.n	80108bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 80108ac:	fb09 f602 	mul.w	r6, r9, r2
 80108b0:	fbb6 f0f4 	udiv	r0, r6, r4
 80108b4:	fb04 6610 	mls	r6, r4, r0, r6
 80108b8:	603e      	str	r6, [r7, #0]
 80108ba:	e7eb      	b.n	8010894 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80108bc:	2601      	movs	r6, #1
 80108be:	408e      	lsls	r6, r1
 80108c0:	3e01      	subs	r6, #1
 80108c2:	4016      	ands	r6, r2
 80108c4:	fa09 fb01 	lsl.w	fp, r9, r1
 80108c8:	4630      	mov	r0, r6
 80108ca:	fbbb f3f4 	udiv	r3, fp, r4
 80108ce:	9302      	str	r3, [sp, #8]
 80108d0:	fb0a f303 	mul.w	r3, sl, r3
 80108d4:	9303      	str	r3, [sp, #12]
 80108d6:	f7ff ffad 	bl	8010834 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80108da:	464a      	mov	r2, r9
 80108dc:	460b      	mov	r3, r1
 80108de:	e9cd 4700 	strd	r4, r7, [sp]
 80108e2:	4601      	mov	r1, r0
 80108e4:	4630      	mov	r0, r6
 80108e6:	f7ff ffc3 	bl	8010870 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80108ea:	9b02      	ldr	r3, [sp, #8]
 80108ec:	fb04 bb13 	mls	fp, r4, r3, fp
 80108f0:	4606      	mov	r6, r0
 80108f2:	4658      	mov	r0, fp
 80108f4:	eb05 0108 	add.w	r1, r5, r8
 80108f8:	f7ff ff9c 	bl	8010834 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80108fc:	ab05      	add	r3, sp, #20
 80108fe:	e9cd 4300 	strd	r4, r3, [sp]
 8010902:	465a      	mov	r2, fp
 8010904:	4603      	mov	r3, r0
 8010906:	4650      	mov	r0, sl
 8010908:	f7ff ffb2 	bl	8010870 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801090c:	6839      	ldr	r1, [r7, #0]
 801090e:	9a05      	ldr	r2, [sp, #20]
 8010910:	9b03      	ldr	r3, [sp, #12]
 8010912:	4411      	add	r1, r2
 8010914:	fbb1 f2f4 	udiv	r2, r1, r4
 8010918:	18d3      	adds	r3, r2, r3
 801091a:	441e      	add	r6, r3
 801091c:	fb04 1412 	mls	r4, r4, r2, r1
 8010920:	4430      	add	r0, r6
 8010922:	603c      	str	r4, [r7, #0]
 8010924:	e7b6      	b.n	8010894 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010926 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010926:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801092a:	b085      	sub	sp, #20
 801092c:	f1b0 0900 	subs.w	r9, r0, #0
 8010930:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010932:	461d      	mov	r5, r3
 8010934:	bfbf      	itttt	lt
 8010936:	6823      	ldrlt	r3, [r4, #0]
 8010938:	425b      	neglt	r3, r3
 801093a:	f1c9 0900 	rsblt	r9, r9, #0
 801093e:	6023      	strlt	r3, [r4, #0]
 8010940:	bfb4      	ite	lt
 8010942:	f04f 36ff 	movlt.w	r6, #4294967295
 8010946:	2601      	movge	r6, #1
 8010948:	2a00      	cmp	r2, #0
 801094a:	4617      	mov	r7, r2
 801094c:	da04      	bge.n	8010958 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801094e:	6823      	ldr	r3, [r4, #0]
 8010950:	425b      	negs	r3, r3
 8010952:	4257      	negs	r7, r2
 8010954:	4276      	negs	r6, r6
 8010956:	6023      	str	r3, [r4, #0]
 8010958:	2d00      	cmp	r5, #0
 801095a:	4638      	mov	r0, r7
 801095c:	bfba      	itte	lt
 801095e:	426d      	neglt	r5, r5
 8010960:	f04f 38ff 	movlt.w	r8, #4294967295
 8010964:	f04f 0801 	movge.w	r8, #1
 8010968:	f7ff ff64 	bl	8010834 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801096c:	ab03      	add	r3, sp, #12
 801096e:	e9cd 5300 	strd	r5, r3, [sp]
 8010972:	463a      	mov	r2, r7
 8010974:	4603      	mov	r3, r0
 8010976:	4648      	mov	r0, r9
 8010978:	f7ff ff7a 	bl	8010870 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801097c:	6823      	ldr	r3, [r4, #0]
 801097e:	9a03      	ldr	r2, [sp, #12]
 8010980:	4546      	cmp	r6, r8
 8010982:	441a      	add	r2, r3
 8010984:	fb92 f3f5 	sdiv	r3, r2, r5
 8010988:	4418      	add	r0, r3
 801098a:	bf18      	it	ne
 801098c:	4240      	negne	r0, r0
 801098e:	fb05 2313 	mls	r3, r5, r3, r2
 8010992:	1c72      	adds	r2, r6, #1
 8010994:	6023      	str	r3, [r4, #0]
 8010996:	d105      	bne.n	80109a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010998:	2b00      	cmp	r3, #0
 801099a:	f1c3 0200 	rsb	r2, r3, #0
 801099e:	db0b      	blt.n	80109b8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80109a0:	6022      	str	r2, [r4, #0]
 80109a2:	e006      	b.n	80109b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80109a4:	2e01      	cmp	r6, #1
 80109a6:	d104      	bne.n	80109b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80109a8:	2b00      	cmp	r3, #0
 80109aa:	da02      	bge.n	80109b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80109ac:	442b      	add	r3, r5
 80109ae:	3801      	subs	r0, #1
 80109b0:	6023      	str	r3, [r4, #0]
 80109b2:	b005      	add	sp, #20
 80109b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80109b8:	3801      	subs	r0, #1
 80109ba:	1b52      	subs	r2, r2, r5
 80109bc:	e7f0      	b.n	80109a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

080109c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80109c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80109c4:	4c1c      	ldr	r4, [pc, #112]	; (8010a38 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80109c6:	6807      	ldr	r7, [r0, #0]
 80109c8:	69a3      	ldr	r3, [r4, #24]
 80109ca:	4605      	mov	r5, r0
 80109cc:	b92b      	cbnz	r3, 80109da <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80109ce:	6840      	ldr	r0, [r0, #4]
 80109d0:	e9c5 7000 	strd	r7, r0, [r5]
 80109d4:	b004      	add	sp, #16
 80109d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80109da:	68a2      	ldr	r2, [r4, #8]
 80109dc:	6820      	ldr	r0, [r4, #0]
 80109de:	ae04      	add	r6, sp, #16
 80109e0:	f04f 0802 	mov.w	r8, #2
 80109e4:	fb93 f1f8 	sdiv	r1, r3, r8
 80109e8:	440a      	add	r2, r1
 80109ea:	f846 2d04 	str.w	r2, [r6, #-4]!
 80109ee:	69e1      	ldr	r1, [r4, #28]
 80109f0:	9600      	str	r6, [sp, #0]
 80109f2:	463a      	mov	r2, r7
 80109f4:	f7ff ff97 	bl	8010926 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80109f8:	69a3      	ldr	r3, [r4, #24]
 80109fa:	686a      	ldr	r2, [r5, #4]
 80109fc:	6a21      	ldr	r1, [r4, #32]
 80109fe:	9600      	str	r6, [sp, #0]
 8010a00:	4607      	mov	r7, r0
 8010a02:	6860      	ldr	r0, [r4, #4]
 8010a04:	f7ff ff8f 	bl	8010926 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010a08:	6962      	ldr	r2, [r4, #20]
 8010a0a:	69a3      	ldr	r3, [r4, #24]
 8010a0c:	fb93 f8f8 	sdiv	r8, r3, r8
 8010a10:	4442      	add	r2, r8
 8010a12:	9203      	str	r2, [sp, #12]
 8010a14:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010a16:	682a      	ldr	r2, [r5, #0]
 8010a18:	9600      	str	r6, [sp, #0]
 8010a1a:	4407      	add	r7, r0
 8010a1c:	68e0      	ldr	r0, [r4, #12]
 8010a1e:	f7ff ff82 	bl	8010926 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010a22:	9600      	str	r6, [sp, #0]
 8010a24:	4680      	mov	r8, r0
 8010a26:	69a3      	ldr	r3, [r4, #24]
 8010a28:	686a      	ldr	r2, [r5, #4]
 8010a2a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010a2c:	6920      	ldr	r0, [r4, #16]
 8010a2e:	f7ff ff7a 	bl	8010926 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010a32:	4440      	add	r0, r8
 8010a34:	e7cc      	b.n	80109d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010a36:	bf00      	nop
 8010a38:	2001549c 	.word	0x2001549c

08010a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010a3c:	4b07      	ldr	r3, [pc, #28]	; (8010a5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010a3e:	781b      	ldrb	r3, [r3, #0]
 8010a40:	2b01      	cmp	r3, #1
 8010a42:	d109      	bne.n	8010a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010a44:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010a48:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010a4c:	8003      	strh	r3, [r0, #0]
 8010a4e:	4b04      	ldr	r3, [pc, #16]	; (8010a60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010a50:	881b      	ldrh	r3, [r3, #0]
 8010a52:	3b01      	subs	r3, #1
 8010a54:	1a9b      	subs	r3, r3, r2
 8010a56:	800b      	strh	r3, [r1, #0]
 8010a58:	4770      	bx	lr
 8010a5a:	bf00      	nop
 8010a5c:	20015480 	.word	0x20015480
 8010a60:	2001547c 	.word	0x2001547c

08010a64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010a64:	b510      	push	{r4, lr}
 8010a66:	4b07      	ldr	r3, [pc, #28]	; (8010a84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010a68:	781b      	ldrb	r3, [r3, #0]
 8010a6a:	2b01      	cmp	r3, #1
 8010a6c:	d108      	bne.n	8010a80 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010a6e:	4b06      	ldr	r3, [pc, #24]	; (8010a88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010a70:	880c      	ldrh	r4, [r1, #0]
 8010a72:	881b      	ldrh	r3, [r3, #0]
 8010a74:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010a78:	3b01      	subs	r3, #1
 8010a7a:	1b1b      	subs	r3, r3, r4
 8010a7c:	8003      	strh	r3, [r0, #0]
 8010a7e:	800a      	strh	r2, [r1, #0]
 8010a80:	bd10      	pop	{r4, pc}
 8010a82:	bf00      	nop
 8010a84:	20015480 	.word	0x20015480
 8010a88:	2001547c 	.word	0x2001547c

08010a8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010a8c:	b510      	push	{r4, lr}
 8010a8e:	4b0a      	ldr	r3, [pc, #40]	; (8010ab8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010a90:	781b      	ldrb	r3, [r3, #0]
 8010a92:	2b01      	cmp	r3, #1
 8010a94:	d10e      	bne.n	8010ab4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010a96:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010a9a:	8843      	ldrh	r3, [r0, #2]
 8010a9c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010aa0:	8044      	strh	r4, [r0, #2]
 8010aa2:	18ca      	adds	r2, r1, r3
 8010aa4:	4b05      	ldr	r3, [pc, #20]	; (8010abc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010aa6:	881b      	ldrh	r3, [r3, #0]
 8010aa8:	1a9b      	subs	r3, r3, r2
 8010aaa:	8003      	strh	r3, [r0, #0]
 8010aac:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010ab0:	80c3      	strh	r3, [r0, #6]
 8010ab2:	8081      	strh	r1, [r0, #4]
 8010ab4:	bd10      	pop	{r4, pc}
 8010ab6:	bf00      	nop
 8010ab8:	20015480 	.word	0x20015480
 8010abc:	2001547c 	.word	0x2001547c

08010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010ac0:	4b08      	ldr	r3, [pc, #32]	; (8010ae4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010ac2:	781b      	ldrb	r3, [r3, #0]
 8010ac4:	2b01      	cmp	r3, #1
 8010ac6:	d10c      	bne.n	8010ae2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010ac8:	8803      	ldrh	r3, [r0, #0]
 8010aca:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010ace:	8842      	ldrh	r2, [r0, #2]
 8010ad0:	8002      	strh	r2, [r0, #0]
 8010ad2:	185a      	adds	r2, r3, r1
 8010ad4:	4b04      	ldr	r3, [pc, #16]	; (8010ae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010ad6:	881b      	ldrh	r3, [r3, #0]
 8010ad8:	1a9b      	subs	r3, r3, r2
 8010ada:	8043      	strh	r3, [r0, #2]
 8010adc:	88c3      	ldrh	r3, [r0, #6]
 8010ade:	8083      	strh	r3, [r0, #4]
 8010ae0:	80c1      	strh	r1, [r0, #6]
 8010ae2:	4770      	bx	lr
 8010ae4:	20015480 	.word	0x20015480
 8010ae8:	2001547c 	.word	0x2001547c

08010aec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010aec:	b510      	push	{r4, lr}
 8010aee:	4b07      	ldr	r3, [pc, #28]	; (8010b0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010af0:	781b      	ldrb	r3, [r3, #0]
 8010af2:	2b01      	cmp	r3, #1
 8010af4:	d108      	bne.n	8010b08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010af6:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010afa:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010afe:	8003      	strh	r3, [r0, #0]
 8010b00:	8893      	ldrh	r3, [r2, #4]
 8010b02:	3b01      	subs	r3, #1
 8010b04:	1b1b      	subs	r3, r3, r4
 8010b06:	800b      	strh	r3, [r1, #0]
 8010b08:	bd10      	pop	{r4, pc}
 8010b0a:	bf00      	nop
 8010b0c:	20015480 	.word	0x20015480

08010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010b10:	b510      	push	{r4, lr}
 8010b12:	4b0a      	ldr	r3, [pc, #40]	; (8010b3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010b14:	781b      	ldrb	r3, [r3, #0]
 8010b16:	2b01      	cmp	r3, #1
 8010b18:	460a      	mov	r2, r1
 8010b1a:	d10d      	bne.n	8010b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010b1c:	8881      	ldrh	r1, [r0, #4]
 8010b1e:	8803      	ldrh	r3, [r0, #0]
 8010b20:	440b      	add	r3, r1
 8010b22:	4601      	mov	r1, r0
 8010b24:	3b01      	subs	r3, #1
 8010b26:	f821 3b02 	strh.w	r3, [r1], #2
 8010b2a:	f7ff ffdf 	bl	8010aec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010b2e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010b32:	88c2      	ldrh	r2, [r0, #6]
 8010b34:	8082      	strh	r2, [r0, #4]
 8010b36:	80c3      	strh	r3, [r0, #6]
 8010b38:	bd10      	pop	{r4, pc}
 8010b3a:	bf00      	nop
 8010b3c:	20015480 	.word	0x20015480

08010b40 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010b40:	b570      	push	{r4, r5, r6, lr}
 8010b42:	4c0b      	ldr	r4, [pc, #44]	; (8010b70 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010b44:	2300      	movs	r3, #0
 8010b46:	4605      	mov	r5, r0
 8010b48:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010b4c:	6820      	ldr	r0, [r4, #0]
 8010b4e:	460e      	mov	r6, r1
 8010b50:	b110      	cbz	r0, 8010b58 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010b52:	6803      	ldr	r3, [r0, #0]
 8010b54:	695b      	ldr	r3, [r3, #20]
 8010b56:	4798      	blx	r3
 8010b58:	6026      	str	r6, [r4, #0]
 8010b5a:	6833      	ldr	r3, [r6, #0]
 8010b5c:	4630      	mov	r0, r6
 8010b5e:	68db      	ldr	r3, [r3, #12]
 8010b60:	4798      	blx	r3
 8010b62:	682b      	ldr	r3, [r5, #0]
 8010b64:	4628      	mov	r0, r5
 8010b66:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010b68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b6c:	4718      	bx	r3
 8010b6e:	bf00      	nop
 8010b70:	200154cc 	.word	0x200154cc

08010b74 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010b74:	4b06      	ldr	r3, [pc, #24]	; (8010b90 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010b76:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010b7a:	4b06      	ldr	r3, [pc, #24]	; (8010b94 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010b7c:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010b80:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010b84:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010b88:	2100      	movs	r1, #0
 8010b8a:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010b8e:	4770      	bx	lr
 8010b90:	2001547c 	.word	0x2001547c
 8010b94:	2001547e 	.word	0x2001547e

08010b98 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010b98:	4b03      	ldr	r3, [pc, #12]	; (8010ba8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010b9a:	6818      	ldr	r0, [r3, #0]
 8010b9c:	b110      	cbz	r0, 8010ba4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010b9e:	6803      	ldr	r3, [r0, #0]
 8010ba0:	699b      	ldr	r3, [r3, #24]
 8010ba2:	4718      	bx	r3
 8010ba4:	4770      	bx	lr
 8010ba6:	bf00      	nop
 8010ba8:	200154cc 	.word	0x200154cc

08010bac <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010bac:	4770      	bx	lr
	...

08010bb0 <_ZN8touchgfx11Application4drawEv>:
 8010bb0:	b507      	push	{r0, r1, r2, lr}
 8010bb2:	4b09      	ldr	r3, [pc, #36]	; (8010bd8 <_ZN8touchgfx11Application4drawEv+0x28>)
 8010bb4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010bb8:	4b08      	ldr	r3, [pc, #32]	; (8010bdc <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010bba:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010bbe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010bc2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010bc6:	6803      	ldr	r3, [r0, #0]
 8010bc8:	2100      	movs	r1, #0
 8010bca:	9100      	str	r1, [sp, #0]
 8010bcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010bce:	4669      	mov	r1, sp
 8010bd0:	4798      	blx	r3
 8010bd2:	b003      	add	sp, #12
 8010bd4:	f85d fb04 	ldr.w	pc, [sp], #4
 8010bd8:	2001547c 	.word	0x2001547c
 8010bdc:	2001547e 	.word	0x2001547e

08010be0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010be0:	4b03      	ldr	r3, [pc, #12]	; (8010bf0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010be2:	6818      	ldr	r0, [r3, #0]
 8010be4:	b110      	cbz	r0, 8010bec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010be6:	6803      	ldr	r3, [r0, #0]
 8010be8:	69db      	ldr	r3, [r3, #28]
 8010bea:	4718      	bx	r3
 8010bec:	4770      	bx	lr
 8010bee:	bf00      	nop
 8010bf0:	200154cc 	.word	0x200154cc

08010bf4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010bf4:	4b03      	ldr	r3, [pc, #12]	; (8010c04 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010bf6:	6818      	ldr	r0, [r3, #0]
 8010bf8:	b110      	cbz	r0, 8010c00 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010bfa:	6803      	ldr	r3, [r0, #0]
 8010bfc:	6a1b      	ldr	r3, [r3, #32]
 8010bfe:	4718      	bx	r3
 8010c00:	4770      	bx	lr
 8010c02:	bf00      	nop
 8010c04:	200154cc 	.word	0x200154cc

08010c08 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010c08:	2300      	movs	r3, #0
 8010c0a:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010c0e:	4770      	bx	lr

08010c10 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010c10:	4b03      	ldr	r3, [pc, #12]	; (8010c20 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010c12:	6818      	ldr	r0, [r3, #0]
 8010c14:	b110      	cbz	r0, 8010c1c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010c16:	6803      	ldr	r3, [r0, #0]
 8010c18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010c1a:	4718      	bx	r3
 8010c1c:	4770      	bx	lr
 8010c1e:	bf00      	nop
 8010c20:	200154cc 	.word	0x200154cc

08010c24 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010c24:	b570      	push	{r4, r5, r6, lr}
 8010c26:	4d32      	ldr	r5, [pc, #200]	; (8010cf0 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010c28:	4604      	mov	r4, r0
 8010c2a:	6828      	ldr	r0, [r5, #0]
 8010c2c:	b140      	cbz	r0, 8010c40 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010c2e:	7a03      	ldrb	r3, [r0, #8]
 8010c30:	b933      	cbnz	r3, 8010c40 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010c32:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010c36:	6803      	ldr	r3, [r0, #0]
 8010c38:	689b      	ldr	r3, [r3, #8]
 8010c3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c3e:	4718      	bx	r3
 8010c40:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010c44:	b97b      	cbnz	r3, 8010c66 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010c46:	b170      	cbz	r0, 8010c66 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010c48:	7a03      	ldrb	r3, [r0, #8]
 8010c4a:	b163      	cbz	r3, 8010c66 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010c4c:	4b29      	ldr	r3, [pc, #164]	; (8010cf4 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010c4e:	6818      	ldr	r0, [r3, #0]
 8010c50:	b110      	cbz	r0, 8010c58 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010c52:	6803      	ldr	r3, [r0, #0]
 8010c54:	691b      	ldr	r3, [r3, #16]
 8010c56:	4798      	blx	r3
 8010c58:	6828      	ldr	r0, [r5, #0]
 8010c5a:	6803      	ldr	r3, [r0, #0]
 8010c5c:	68db      	ldr	r3, [r3, #12]
 8010c5e:	4798      	blx	r3
 8010c60:	2301      	movs	r3, #1
 8010c62:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010c66:	2500      	movs	r5, #0
 8010c68:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010c6c:	42a8      	cmp	r0, r5
 8010c6e:	dd0c      	ble.n	8010c8a <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8010c70:	1963      	adds	r3, r4, r5
 8010c72:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8010c76:	b132      	cbz	r2, 8010c86 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8010c78:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8010c7c:	4413      	add	r3, r2
 8010c7e:	6858      	ldr	r0, [r3, #4]
 8010c80:	6803      	ldr	r3, [r0, #0]
 8010c82:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010c84:	4798      	blx	r3
 8010c86:	3501      	adds	r5, #1
 8010c88:	e7ee      	b.n	8010c68 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8010c8a:	2300      	movs	r3, #0
 8010c8c:	461a      	mov	r2, r3
 8010c8e:	4298      	cmp	r0, r3
 8010c90:	d015      	beq.n	8010cbe <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8010c92:	18e1      	adds	r1, r4, r3
 8010c94:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8010c98:	b16d      	cbz	r5, 8010cb6 <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8010c9a:	429a      	cmp	r2, r3
 8010c9c:	d00a      	beq.n	8010cb4 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8010c9e:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010ca2:	4431      	add	r1, r6
 8010ca4:	684e      	ldr	r6, [r1, #4]
 8010ca6:	b291      	uxth	r1, r2
 8010ca8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010cac:	604e      	str	r6, [r1, #4]
 8010cae:	18a1      	adds	r1, r4, r2
 8010cb0:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8010cb4:	3201      	adds	r2, #1
 8010cb6:	3301      	adds	r3, #1
 8010cb8:	e7e9      	b.n	8010c8e <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010cba:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8010cbe:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8010cc2:	4295      	cmp	r5, r2
 8010cc4:	dd0d      	ble.n	8010ce2 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8010cc6:	1e6b      	subs	r3, r5, #1
 8010cc8:	b29b      	uxth	r3, r3
 8010cca:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8010cce:	4618      	mov	r0, r3
 8010cd0:	3104      	adds	r1, #4
 8010cd2:	4285      	cmp	r5, r0
 8010cd4:	ddf1      	ble.n	8010cba <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8010cd6:	f851 6f04 	ldr.w	r6, [r1, #4]!
 8010cda:	f841 6c04 	str.w	r6, [r1, #-4]
 8010cde:	3001      	adds	r0, #1
 8010ce0:	e7f7      	b.n	8010cd2 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8010ce2:	4b04      	ldr	r3, [pc, #16]	; (8010cf4 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010ce4:	6818      	ldr	r0, [r3, #0]
 8010ce6:	b110      	cbz	r0, 8010cee <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8010ce8:	6803      	ldr	r3, [r0, #0]
 8010cea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010cec:	e7a5      	b.n	8010c3a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010cee:	bd70      	pop	{r4, r5, r6, pc}
 8010cf0:	200154d0 	.word	0x200154d0
 8010cf4:	200154cc 	.word	0x200154cc

08010cf8 <_ZN8touchgfx11ApplicationD1Ev>:
 8010cf8:	4770      	bx	lr

08010cfa <_ZN8touchgfx11ApplicationD0Ev>:
 8010cfa:	b510      	push	{r4, lr}
 8010cfc:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010d00:	4604      	mov	r4, r0
 8010d02:	f00f fbb7 	bl	8020474 <_ZdlPvj>
 8010d06:	4620      	mov	r0, r4
 8010d08:	bd10      	pop	{r4, pc}

08010d0a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010d0a:	b510      	push	{r4, lr}
 8010d0c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010d10:	888a      	ldrh	r2, [r1, #4]
 8010d12:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010d16:	4422      	add	r2, r4
 8010d18:	b212      	sxth	r2, r2
 8010d1a:	4293      	cmp	r3, r2
 8010d1c:	da15      	bge.n	8010d4a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010d1e:	8882      	ldrh	r2, [r0, #4]
 8010d20:	4413      	add	r3, r2
 8010d22:	b21b      	sxth	r3, r3
 8010d24:	429c      	cmp	r4, r3
 8010d26:	da10      	bge.n	8010d4a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010d28:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010d2c:	88c9      	ldrh	r1, [r1, #6]
 8010d2e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010d32:	4419      	add	r1, r3
 8010d34:	b209      	sxth	r1, r1
 8010d36:	428a      	cmp	r2, r1
 8010d38:	da07      	bge.n	8010d4a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010d3a:	88c0      	ldrh	r0, [r0, #6]
 8010d3c:	4410      	add	r0, r2
 8010d3e:	b200      	sxth	r0, r0
 8010d40:	4283      	cmp	r3, r0
 8010d42:	bfac      	ite	ge
 8010d44:	2000      	movge	r0, #0
 8010d46:	2001      	movlt	r0, #1
 8010d48:	bd10      	pop	{r4, pc}
 8010d4a:	2000      	movs	r0, #0
 8010d4c:	e7fc      	b.n	8010d48 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08010d4e <_ZN8touchgfx4Rect10restrictToEss>:
 8010d4e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010d52:	2b00      	cmp	r3, #0
 8010d54:	b510      	push	{r4, lr}
 8010d56:	da04      	bge.n	8010d62 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010d58:	8884      	ldrh	r4, [r0, #4]
 8010d5a:	4423      	add	r3, r4
 8010d5c:	8083      	strh	r3, [r0, #4]
 8010d5e:	2300      	movs	r3, #0
 8010d60:	8003      	strh	r3, [r0, #0]
 8010d62:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010d66:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010d6a:	1b09      	subs	r1, r1, r4
 8010d6c:	428b      	cmp	r3, r1
 8010d6e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8010d72:	bfc8      	it	gt
 8010d74:	8081      	strhgt	r1, [r0, #4]
 8010d76:	2b00      	cmp	r3, #0
 8010d78:	da04      	bge.n	8010d84 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010d7a:	88c1      	ldrh	r1, [r0, #6]
 8010d7c:	440b      	add	r3, r1
 8010d7e:	80c3      	strh	r3, [r0, #6]
 8010d80:	2300      	movs	r3, #0
 8010d82:	8043      	strh	r3, [r0, #2]
 8010d84:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010d88:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010d8c:	1a52      	subs	r2, r2, r1
 8010d8e:	4293      	cmp	r3, r2
 8010d90:	bfc8      	it	gt
 8010d92:	80c2      	strhgt	r2, [r0, #6]
 8010d94:	bd10      	pop	{r4, pc}
	...

08010d98 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010d98:	b510      	push	{r4, lr}
 8010d9a:	4b10      	ldr	r3, [pc, #64]	; (8010ddc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010d9c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010da0:	4b0f      	ldr	r3, [pc, #60]	; (8010de0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8010da2:	460c      	mov	r4, r1
 8010da4:	4620      	mov	r0, r4
 8010da6:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010daa:	f7ff ffd0 	bl	8010d4e <_ZN8touchgfx4Rect10restrictToEss>
 8010dae:	4b0d      	ldr	r3, [pc, #52]	; (8010de4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8010db0:	6818      	ldr	r0, [r3, #0]
 8010db2:	b190      	cbz	r0, 8010dda <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010db4:	6803      	ldr	r3, [r0, #0]
 8010db6:	4621      	mov	r1, r4
 8010db8:	689b      	ldr	r3, [r3, #8]
 8010dba:	4798      	blx	r3
 8010dbc:	4b0a      	ldr	r3, [pc, #40]	; (8010de8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8010dbe:	6818      	ldr	r0, [r3, #0]
 8010dc0:	b118      	cbz	r0, 8010dca <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8010dc2:	6803      	ldr	r3, [r0, #0]
 8010dc4:	4621      	mov	r1, r4
 8010dc6:	689b      	ldr	r3, [r3, #8]
 8010dc8:	4798      	blx	r3
 8010dca:	4b08      	ldr	r3, [pc, #32]	; (8010dec <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010dcc:	6818      	ldr	r0, [r3, #0]
 8010dce:	6803      	ldr	r3, [r0, #0]
 8010dd0:	4621      	mov	r1, r4
 8010dd2:	69db      	ldr	r3, [r3, #28]
 8010dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010dd8:	4718      	bx	r3
 8010dda:	bd10      	pop	{r4, pc}
 8010ddc:	2001547e 	.word	0x2001547e
 8010de0:	2001547c 	.word	0x2001547c
 8010de4:	200154cc 	.word	0x200154cc
 8010de8:	200154c8 	.word	0x200154c8
 8010dec:	20015488 	.word	0x20015488

08010df0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8010df0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010df2:	4606      	mov	r6, r0
 8010df4:	4608      	mov	r0, r1
 8010df6:	460f      	mov	r7, r1
 8010df8:	f7f9 fec3 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010dfc:	b9e8      	cbnz	r0, 8010e3a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010dfe:	f9b7 5000 	ldrsh.w	r5, [r7]
 8010e02:	f9b6 4000 	ldrsh.w	r4, [r6]
 8010e06:	42a5      	cmp	r5, r4
 8010e08:	db17      	blt.n	8010e3a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010e0a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8010e0e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8010e12:	429a      	cmp	r2, r3
 8010e14:	db11      	blt.n	8010e3a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010e16:	88b9      	ldrh	r1, [r7, #4]
 8010e18:	440d      	add	r5, r1
 8010e1a:	88b1      	ldrh	r1, [r6, #4]
 8010e1c:	440c      	add	r4, r1
 8010e1e:	b22d      	sxth	r5, r5
 8010e20:	b224      	sxth	r4, r4
 8010e22:	42a5      	cmp	r5, r4
 8010e24:	dc09      	bgt.n	8010e3a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010e26:	88f8      	ldrh	r0, [r7, #6]
 8010e28:	4410      	add	r0, r2
 8010e2a:	88f2      	ldrh	r2, [r6, #6]
 8010e2c:	4413      	add	r3, r2
 8010e2e:	b200      	sxth	r0, r0
 8010e30:	b21b      	sxth	r3, r3
 8010e32:	4298      	cmp	r0, r3
 8010e34:	bfcc      	ite	gt
 8010e36:	2000      	movgt	r0, #0
 8010e38:	2001      	movle	r0, #1
 8010e3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010e3c <_ZN8touchgfx11Application11getInstanceEv>:
 8010e3c:	4b01      	ldr	r3, [pc, #4]	; (8010e44 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010e3e:	6818      	ldr	r0, [r3, #0]
 8010e40:	4770      	bx	lr
 8010e42:	bf00      	nop
 8010e44:	200154dc 	.word	0x200154dc

08010e48 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8010e48:	2300      	movs	r3, #0
 8010e4a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010e4e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8010e52:	30a8      	adds	r0, #168	; 0xa8
 8010e54:	f802 3b01 	strb.w	r3, [r2], #1
 8010e58:	4282      	cmp	r2, r0
 8010e5a:	d1fb      	bne.n	8010e54 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8010e5c:	4770      	bx	lr

08010e5e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8010e5e:	4603      	mov	r3, r0
 8010e60:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8010e64:	2200      	movs	r2, #0
 8010e66:	801a      	strh	r2, [r3, #0]
 8010e68:	805a      	strh	r2, [r3, #2]
 8010e6a:	809a      	strh	r2, [r3, #4]
 8010e6c:	80da      	strh	r2, [r3, #6]
 8010e6e:	3308      	adds	r3, #8
 8010e70:	428b      	cmp	r3, r1
 8010e72:	d1f8      	bne.n	8010e66 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010e74:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8010e78:	4770      	bx	lr
	...

08010e7c <_ZN8touchgfx11ApplicationC1Ev>:
 8010e7c:	b570      	push	{r4, r5, r6, lr}
 8010e7e:	4b19      	ldr	r3, [pc, #100]	; (8010ee4 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 8010e80:	6003      	str	r3, [r0, #0]
 8010e82:	2500      	movs	r5, #0
 8010e84:	4604      	mov	r4, r0
 8010e86:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 8010e8a:	30a8      	adds	r0, #168	; 0xa8
 8010e8c:	f7ff ffe7 	bl	8010e5e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010e90:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8010e94:	f7ff ffe3 	bl	8010e5e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010e98:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8010e9c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8010ea0:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8010ea4:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8010ea8:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8010eac:	490e      	ldr	r1, [pc, #56]	; (8010ee8 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8010eae:	480f      	ldr	r0, [pc, #60]	; (8010eec <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8010eb0:	4e0f      	ldr	r6, [pc, #60]	; (8010ef0 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8010eb2:	f00e fec3 	bl	801fc3c <CRC_Lock>
 8010eb6:	4b0f      	ldr	r3, [pc, #60]	; (8010ef4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010eb8:	b158      	cbz	r0, 8010ed2 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 8010eba:	801d      	strh	r5, [r3, #0]
 8010ebc:	4a0e      	ldr	r2, [pc, #56]	; (8010ef8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010ebe:	2300      	movs	r3, #0
 8010ec0:	6013      	str	r3, [r2, #0]
 8010ec2:	4a0e      	ldr	r2, [pc, #56]	; (8010efc <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010ec4:	6033      	str	r3, [r6, #0]
 8010ec6:	4620      	mov	r0, r4
 8010ec8:	6013      	str	r3, [r2, #0]
 8010eca:	f7ff ffbd 	bl	8010e48 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8010ece:	4620      	mov	r0, r4
 8010ed0:	bd70      	pop	{r4, r5, r6, pc}
 8010ed2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010ed6:	2002      	movs	r0, #2
 8010ed8:	801a      	strh	r2, [r3, #0]
 8010eda:	6030      	str	r0, [r6, #0]
 8010edc:	f001 fae8 	bl	80124b0 <_ZN8touchgfx6Screen4drawEv>
 8010ee0:	e7ec      	b.n	8010ebc <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8010ee2:	bf00      	nop
 8010ee4:	08024028 	.word	0x08024028
 8010ee8:	b5e8b5cd 	.word	0xb5e8b5cd
 8010eec:	f407a5c2 	.word	0xf407a5c2
 8010ef0:	200154cc 	.word	0x200154cc
 8010ef4:	2000008c 	.word	0x2000008c
 8010ef8:	200154dc 	.word	0x200154dc
 8010efc:	200154d0 	.word	0x200154d0

08010f00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010f00:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8010f04:	3b01      	subs	r3, #1
 8010f06:	b29b      	uxth	r3, r3
 8010f08:	428b      	cmp	r3, r1
 8010f0a:	b510      	push	{r4, lr}
 8010f0c:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8010f10:	d908      	bls.n	8010f24 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010f12:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8010f16:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010f1a:	681a      	ldr	r2, [r3, #0]
 8010f1c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010f20:	685a      	ldr	r2, [r3, #4]
 8010f22:	6062      	str	r2, [r4, #4]
 8010f24:	bd10      	pop	{r4, pc}
	...

08010f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f2c:	4b94      	ldr	r3, [pc, #592]	; (8011180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8010f2e:	b08f      	sub	sp, #60	; 0x3c
 8010f30:	ac0a      	add	r4, sp, #40	; 0x28
 8010f32:	e884 0006 	stmia.w	r4, {r1, r2}
 8010f36:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010f3a:	4b92      	ldr	r3, [pc, #584]	; (8011184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8010f3c:	4683      	mov	fp, r0
 8010f3e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010f42:	4620      	mov	r0, r4
 8010f44:	f7ff ff03 	bl	8010d4e <_ZN8touchgfx4Rect10restrictToEss>
 8010f48:	4620      	mov	r0, r4
 8010f4a:	f7f9 fe1a 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f4e:	2800      	cmp	r0, #0
 8010f50:	d16a      	bne.n	8011028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010f52:	9403      	str	r4, [sp, #12]
 8010f54:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8010f58:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8010f5c:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8010f60:	2400      	movs	r4, #0
 8010f62:	9301      	str	r3, [sp, #4]
 8010f64:	36a0      	adds	r6, #160	; 0xa0
 8010f66:	42a5      	cmp	r5, r4
 8010f68:	d00d      	beq.n	8010f86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8010f6a:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8010f6e:	9803      	ldr	r0, [sp, #12]
 8010f70:	f7ff ff3e 	bl	8010df0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8010f74:	b128      	cbz	r0, 8010f82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8010f76:	1e69      	subs	r1, r5, #1
 8010f78:	1b09      	subs	r1, r1, r4
 8010f7a:	b289      	uxth	r1, r1
 8010f7c:	9801      	ldr	r0, [sp, #4]
 8010f7e:	f7ff ffbf 	bl	8010f00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010f82:	3401      	adds	r4, #1
 8010f84:	e7ef      	b.n	8010f66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 8010f86:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8010f8a:	9704      	str	r7, [sp, #16]
 8010f8c:	1e7b      	subs	r3, r7, #1
 8010f8e:	9302      	str	r3, [sp, #8]
 8010f90:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8010f94:	2400      	movs	r4, #0
 8010f96:	4655      	mov	r5, sl
 8010f98:	9705      	str	r7, [sp, #20]
 8010f9a:	4626      	mov	r6, r4
 8010f9c:	9b05      	ldr	r3, [sp, #20]
 8010f9e:	2b00      	cmp	r3, #0
 8010fa0:	d078      	beq.n	8011094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 8010fa2:	9903      	ldr	r1, [sp, #12]
 8010fa4:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8010fa8:	f7ff feaf 	bl	8010d0a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010fac:	b360      	cbz	r0, 8011008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010fae:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8010fb2:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8010fb6:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 8010fba:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8010fbe:	45e6      	cmp	lr, ip
 8010fc0:	db35      	blt.n	801102e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010fc2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8010fc6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8010fca:	4472      	add	r2, lr
 8010fcc:	4463      	add	r3, ip
 8010fce:	b212      	sxth	r2, r2
 8010fd0:	b21b      	sxth	r3, r3
 8010fd2:	429a      	cmp	r2, r3
 8010fd4:	dc2b      	bgt.n	801102e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010fd6:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8010fda:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010fde:	fa1f f288 	uxth.w	r2, r8
 8010fe2:	4413      	add	r3, r2
 8010fe4:	b29b      	uxth	r3, r3
 8010fe6:	45c1      	cmp	r9, r8
 8010fe8:	fa0f fe83 	sxth.w	lr, r3
 8010fec:	fa1f fc89 	uxth.w	ip, r9
 8010ff0:	db0f      	blt.n	8011012 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010ff2:	eba3 030c 	sub.w	r3, r3, ip
 8010ff6:	1ac9      	subs	r1, r1, r3
 8010ff8:	b209      	sxth	r1, r1
 8010ffa:	2900      	cmp	r1, #0
 8010ffc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011000:	dd12      	ble.n	8011028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011002:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8011006:	4604      	mov	r4, r0
 8011008:	9b05      	ldr	r3, [sp, #20]
 801100a:	3b01      	subs	r3, #1
 801100c:	9305      	str	r3, [sp, #20]
 801100e:	3d08      	subs	r5, #8
 8011010:	e7c4      	b.n	8010f9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011012:	4461      	add	r1, ip
 8011014:	b209      	sxth	r1, r1
 8011016:	4571      	cmp	r1, lr
 8011018:	dc3a      	bgt.n	8011090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801101a:	eba2 020c 	sub.w	r2, r2, ip
 801101e:	b212      	sxth	r2, r2
 8011020:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011024:	2a00      	cmp	r2, #0
 8011026:	dcee      	bgt.n	8011006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011028:	b00f      	add	sp, #60	; 0x3c
 801102a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801102e:	45c1      	cmp	r9, r8
 8011030:	db2e      	blt.n	8011090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011032:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8011036:	4499      	add	r9, r3
 8011038:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801103c:	4498      	add	r8, r3
 801103e:	fa0f f989 	sxth.w	r9, r9
 8011042:	fa0f f888 	sxth.w	r8, r8
 8011046:	45c1      	cmp	r9, r8
 8011048:	dc22      	bgt.n	8011090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801104a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801104e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011052:	fa1f f28c 	uxth.w	r2, ip
 8011056:	4413      	add	r3, r2
 8011058:	b29b      	uxth	r3, r3
 801105a:	45e6      	cmp	lr, ip
 801105c:	fa1f f88e 	uxth.w	r8, lr
 8011060:	fa0f f983 	sxth.w	r9, r3
 8011064:	db0a      	blt.n	801107c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 8011066:	eba3 0308 	sub.w	r3, r3, r8
 801106a:	1ac9      	subs	r1, r1, r3
 801106c:	b209      	sxth	r1, r1
 801106e:	2900      	cmp	r1, #0
 8011070:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8011074:	ddd8      	ble.n	8011028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011076:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801107a:	e7c4      	b.n	8011006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801107c:	4441      	add	r1, r8
 801107e:	b209      	sxth	r1, r1
 8011080:	4549      	cmp	r1, r9
 8011082:	dc05      	bgt.n	8011090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011084:	eba2 0208 	sub.w	r2, r2, r8
 8011088:	b212      	sxth	r2, r2
 801108a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801108e:	e7c9      	b.n	8011024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8011090:	4606      	mov	r6, r0
 8011092:	e7b9      	b.n	8011008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011094:	2c00      	cmp	r4, #0
 8011096:	f47f af7d 	bne.w	8010f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 801109a:	2e00      	cmp	r6, #0
 801109c:	f000 81e1 	beq.w	8011462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80110a0:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80110a4:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80110a8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80110ac:	b2b9      	uxth	r1, r7
 80110ae:	9105      	str	r1, [sp, #20]
 80110b0:	9805      	ldr	r0, [sp, #20]
 80110b2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80110b6:	4401      	add	r1, r0
 80110b8:	b2b3      	uxth	r3, r6
 80110ba:	b289      	uxth	r1, r1
 80110bc:	441a      	add	r2, r3
 80110be:	9106      	str	r1, [sp, #24]
 80110c0:	b292      	uxth	r2, r2
 80110c2:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 80110c6:	fa0f f882 	sxth.w	r8, r2
 80110ca:	4655      	mov	r5, sl
 80110cc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80110d0:	9b04      	ldr	r3, [sp, #16]
 80110d2:	2b00      	cmp	r3, #0
 80110d4:	d058      	beq.n	8011188 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 80110d6:	9903      	ldr	r1, [sp, #12]
 80110d8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80110dc:	f7ff fe15 	bl	8010d0a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80110e0:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80110e4:	b1d8      	cbz	r0, 801111e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80110e6:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 80110ea:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 80110ee:	4576      	cmp	r6, lr
 80110f0:	dc26      	bgt.n	8011140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 80110f2:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 80110f6:	44f4      	add	ip, lr
 80110f8:	fa0f fc8c 	sxth.w	ip, ip
 80110fc:	45e0      	cmp	r8, ip
 80110fe:	db1f      	blt.n	8011140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011100:	428f      	cmp	r7, r1
 8011102:	fa1f fc81 	uxth.w	ip, r1
 8011106:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801110a:	dc0f      	bgt.n	801112c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 801110c:	9806      	ldr	r0, [sp, #24]
 801110e:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011112:	eba0 0c0c 	sub.w	ip, r0, ip
 8011116:	eba1 010c 	sub.w	r1, r1, ip
 801111a:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801111e:	4620      	mov	r0, r4
 8011120:	9904      	ldr	r1, [sp, #16]
 8011122:	3901      	subs	r1, #1
 8011124:	9104      	str	r1, [sp, #16]
 8011126:	3d08      	subs	r5, #8
 8011128:	4604      	mov	r4, r0
 801112a:	e7cf      	b.n	80110cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 801112c:	4461      	add	r1, ip
 801112e:	b209      	sxth	r1, r1
 8011130:	4549      	cmp	r1, r9
 8011132:	dcf5      	bgt.n	8011120 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011134:	9905      	ldr	r1, [sp, #20]
 8011136:	eba1 0c0c 	sub.w	ip, r1, ip
 801113a:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 801113e:	e7ee      	b.n	801111e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011140:	428f      	cmp	r7, r1
 8011142:	dced      	bgt.n	8011120 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011144:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8011148:	4461      	add	r1, ip
 801114a:	b209      	sxth	r1, r1
 801114c:	4589      	cmp	r9, r1
 801114e:	dbe7      	blt.n	8011120 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011150:	4576      	cmp	r6, lr
 8011152:	fa1f fc8e 	uxth.w	ip, lr
 8011156:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801115a:	dc08      	bgt.n	801116e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 801115c:	eba2 0c0c 	sub.w	ip, r2, ip
 8011160:	eba1 010c 	sub.w	r1, r1, ip
 8011164:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8011168:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 801116c:	e7d7      	b.n	801111e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801116e:	4461      	add	r1, ip
 8011170:	b209      	sxth	r1, r1
 8011172:	4588      	cmp	r8, r1
 8011174:	dbd4      	blt.n	8011120 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011176:	eba3 0c0c 	sub.w	ip, r3, ip
 801117a:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 801117e:	e7ce      	b.n	801111e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011180:	2001547e 	.word	0x2001547e
 8011184:	2001547c 	.word	0x2001547c
 8011188:	2c00      	cmp	r4, #0
 801118a:	f000 816a 	beq.w	8011462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801118e:	9b02      	ldr	r3, [sp, #8]
 8011190:	3301      	adds	r3, #1
 8011192:	f000 8166 	beq.w	8011462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8011196:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 801119a:	4621      	mov	r1, r4
 801119c:	9803      	ldr	r0, [sp, #12]
 801119e:	f7ff fe27 	bl	8010df0 <_ZNK8touchgfx4Rect8includesERKS0_>
 80111a2:	b120      	cbz	r0, 80111ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80111a4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80111a8:	9801      	ldr	r0, [sp, #4]
 80111aa:	f7ff fea9 	bl	8010f00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80111ae:	9903      	ldr	r1, [sp, #12]
 80111b0:	4620      	mov	r0, r4
 80111b2:	f7ff fdaa 	bl	8010d0a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80111b6:	2800      	cmp	r0, #0
 80111b8:	f000 809b 	beq.w	80112f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80111bc:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 80111c0:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 80111c4:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80111c8:	9309      	str	r3, [sp, #36]	; 0x24
 80111ca:	b281      	uxth	r1, r0
 80111cc:	eb01 0c03 	add.w	ip, r1, r3
 80111d0:	fa1f f98c 	uxth.w	r9, ip
 80111d4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80111d8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80111dc:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 80111e0:	b2ab      	uxth	r3, r5
 80111e2:	eb03 040c 	add.w	r4, r3, ip
 80111e6:	b2a4      	uxth	r4, r4
 80111e8:	9405      	str	r4, [sp, #20]
 80111ea:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 80111ee:	9404      	str	r4, [sp, #16]
 80111f0:	4285      	cmp	r5, r0
 80111f2:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 80111f6:	f340 809a 	ble.w	801132e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 80111fa:	1a5b      	subs	r3, r3, r1
 80111fc:	b29b      	uxth	r3, r3
 80111fe:	4596      	cmp	lr, r2
 8011200:	fa0f f589 	sxth.w	r5, r9
 8011204:	b21e      	sxth	r6, r3
 8011206:	dd2e      	ble.n	8011266 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 8011208:	9f02      	ldr	r7, [sp, #8]
 801120a:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 801120e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011212:	9f04      	ldr	r7, [sp, #16]
 8011214:	1b7f      	subs	r7, r7, r5
 8011216:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801121a:	fa1f fe8e 	uxth.w	lr, lr
 801121e:	b292      	uxth	r2, r2
 8011220:	ebae 0102 	sub.w	r1, lr, r2
 8011224:	4486      	add	lr, r0
 8011226:	442a      	add	r2, r5
 8011228:	b289      	uxth	r1, r1
 801122a:	fa0f fe8e 	sxth.w	lr, lr
 801122e:	b212      	sxth	r2, r2
 8011230:	b20c      	sxth	r4, r1
 8011232:	ebae 0202 	sub.w	r2, lr, r2
 8011236:	4367      	muls	r7, r4
 8011238:	4372      	muls	r2, r6
 801123a:	4297      	cmp	r7, r2
 801123c:	db09      	blt.n	8011252 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 801123e:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8011242:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8011246:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801124a:	449c      	add	ip, r3
 801124c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011250:	e680      	b.n	8010f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011252:	4401      	add	r1, r0
 8011254:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8011258:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 801125c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011260:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011264:	e676      	b.n	8010f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011266:	9f04      	ldr	r7, [sp, #16]
 8011268:	42bd      	cmp	r5, r7
 801126a:	da27      	bge.n	80112bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 801126c:	9902      	ldr	r1, [sp, #8]
 801126e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8011272:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 8011276:	eb04 010e 	add.w	r1, r4, lr
 801127a:	fa1f f881 	uxth.w	r8, r1
 801127e:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 8011282:	4411      	add	r1, r2
 8011284:	eba1 0108 	sub.w	r1, r1, r8
 8011288:	b289      	uxth	r1, r1
 801128a:	fa0f f988 	sxth.w	r9, r8
 801128e:	eba2 020e 	sub.w	r2, r2, lr
 8011292:	fa0f f881 	sxth.w	r8, r1
 8011296:	1b7f      	subs	r7, r7, r5
 8011298:	4372      	muls	r2, r6
 801129a:	fb08 f707 	mul.w	r7, r8, r7
 801129e:	42ba      	cmp	r2, r7
 80112a0:	dc06      	bgt.n	80112b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80112a2:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 80112a6:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 80112aa:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 80112ae:	e7ca      	b.n	8011246 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80112b0:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 80112b4:	4421      	add	r1, r4
 80112b6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80112ba:	e64b      	b.n	8010f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80112bc:	9d05      	ldr	r5, [sp, #20]
 80112be:	eba9 0505 	sub.w	r5, r9, r5
 80112c2:	b2ad      	uxth	r5, r5
 80112c4:	2c06      	cmp	r4, #6
 80112c6:	fa0f fe85 	sxth.w	lr, r5
 80112ca:	d818      	bhi.n	80112fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 80112cc:	9b04      	ldr	r3, [sp, #16]
 80112ce:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 80112d2:	1c63      	adds	r3, r4, #1
 80112d4:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 80112d8:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 80112dc:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 80112e0:	9b01      	ldr	r3, [sp, #4]
 80112e2:	9d01      	ldr	r5, [sp, #4]
 80112e4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80112e8:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 80112ec:	805a      	strh	r2, [r3, #2]
 80112ee:	809e      	strh	r6, [r3, #4]
 80112f0:	80d9      	strh	r1, [r3, #6]
 80112f2:	9b02      	ldr	r3, [sp, #8]
 80112f4:	3b01      	subs	r3, #1
 80112f6:	9302      	str	r3, [sp, #8]
 80112f8:	f1aa 0a08 	sub.w	sl, sl, #8
 80112fc:	e747      	b.n	801118e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 80112fe:	9a02      	ldr	r2, [sp, #8]
 8011300:	45b6      	cmp	lr, r6
 8011302:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011306:	db0d      	blt.n	8011324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 8011308:	449c      	add	ip, r3
 801130a:	fa1f fc8c 	uxth.w	ip, ip
 801130e:	445a      	add	r2, fp
 8011310:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011314:	448c      	add	ip, r1
 8011316:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801131a:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 801131e:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011322:	e617      	b.n	8010f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011324:	445a      	add	r2, fp
 8011326:	44ac      	add	ip, r5
 8011328:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 801132c:	e78e      	b.n	801124c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801132e:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011332:	fa1f f18e 	uxth.w	r1, lr
 8011336:	eb01 0806 	add.w	r8, r1, r6
 801133a:	b293      	uxth	r3, r2
 801133c:	fa1f f888 	uxth.w	r8, r8
 8011340:	9306      	str	r3, [sp, #24]
 8011342:	fa0f f388 	sxth.w	r3, r8
 8011346:	9307      	str	r3, [sp, #28]
 8011348:	9f06      	ldr	r7, [sp, #24]
 801134a:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 801134e:	443b      	add	r3, r7
 8011350:	b29b      	uxth	r3, r3
 8011352:	4596      	cmp	lr, r2
 8011354:	9308      	str	r3, [sp, #32]
 8011356:	da25      	bge.n	80113a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8011358:	9905      	ldr	r1, [sp, #20]
 801135a:	eba3 0308 	sub.w	r3, r3, r8
 801135e:	eba9 0401 	sub.w	r4, r9, r1
 8011362:	b2a4      	uxth	r4, r4
 8011364:	b29b      	uxth	r3, r3
 8011366:	fa0f f984 	sxth.w	r9, r4
 801136a:	b219      	sxth	r1, r3
 801136c:	eba2 020e 	sub.w	r2, r2, lr
 8011370:	1b40      	subs	r0, r0, r5
 8011372:	fb09 f202 	mul.w	r2, r9, r2
 8011376:	4348      	muls	r0, r1
 8011378:	4282      	cmp	r2, r0
 801137a:	9a02      	ldr	r2, [sp, #8]
 801137c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011380:	445a      	add	r2, fp
 8011382:	dc06      	bgt.n	8011392 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8011384:	9b07      	ldr	r3, [sp, #28]
 8011386:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 801138a:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 801138e:	44a4      	add	ip, r4
 8011390:	e75c      	b.n	801124c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011392:	9904      	ldr	r1, [sp, #16]
 8011394:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 8011398:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 801139c:	4433      	add	r3, r6
 801139e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80113a2:	e5d7      	b.n	8010f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80113a4:	9f06      	ldr	r7, [sp, #24]
 80113a6:	9b04      	ldr	r3, [sp, #16]
 80113a8:	1bc9      	subs	r1, r1, r7
 80113aa:	fa0f f789 	sxth.w	r7, r9
 80113ae:	b289      	uxth	r1, r1
 80113b0:	429f      	cmp	r7, r3
 80113b2:	fa0f fe81 	sxth.w	lr, r1
 80113b6:	dd22      	ble.n	80113fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 80113b8:	9a05      	ldr	r2, [sp, #20]
 80113ba:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80113be:	1b40      	subs	r0, r0, r5
 80113c0:	eba9 0202 	sub.w	r2, r9, r2
 80113c4:	9d07      	ldr	r5, [sp, #28]
 80113c6:	b292      	uxth	r2, r2
 80113c8:	eba5 0a03 	sub.w	sl, r5, r3
 80113cc:	b214      	sxth	r4, r2
 80113ce:	9b02      	ldr	r3, [sp, #8]
 80113d0:	fb0e f000 	mul.w	r0, lr, r0
 80113d4:	fb04 fa0a 	mul.w	sl, r4, sl
 80113d8:	00db      	lsls	r3, r3, #3
 80113da:	4550      	cmp	r0, sl
 80113dc:	445b      	add	r3, fp
 80113de:	db03      	blt.n	80113e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 80113e0:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 80113e4:	4494      	add	ip, r2
 80113e6:	e731      	b.n	801124c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80113e8:	9a04      	ldr	r2, [sp, #16]
 80113ea:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 80113ee:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 80113f2:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 80113f6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80113fa:	4431      	add	r1, r6
 80113fc:	e75b      	b.n	80112b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 80113fe:	9b08      	ldr	r3, [sp, #32]
 8011400:	eba3 0308 	sub.w	r3, r3, r8
 8011404:	b29b      	uxth	r3, r3
 8011406:	2c06      	cmp	r4, #6
 8011408:	b21d      	sxth	r5, r3
 801140a:	d813      	bhi.n	8011434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 801140c:	9b07      	ldr	r3, [sp, #28]
 801140e:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011412:	1c63      	adds	r3, r4, #1
 8011414:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 8011418:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 801141c:	9b01      	ldr	r3, [sp, #4]
 801141e:	9901      	ldr	r1, [sp, #4]
 8011420:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011424:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 8011428:	805a      	strh	r2, [r3, #2]
 801142a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801142c:	809a      	strh	r2, [r3, #4]
 801142e:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011432:	e75e      	b.n	80112f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011434:	9802      	ldr	r0, [sp, #8]
 8011436:	4575      	cmp	r5, lr
 8011438:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 801143c:	db0d      	blt.n	801145a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 801143e:	4431      	add	r1, r6
 8011440:	9b06      	ldr	r3, [sp, #24]
 8011442:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8011446:	b289      	uxth	r1, r1
 8011448:	4458      	add	r0, fp
 801144a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801144e:	4419      	add	r1, r3
 8011450:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8011454:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 8011458:	e57c      	b.n	8010f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801145a:	4458      	add	r0, fp
 801145c:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8011460:	e79c      	b.n	801139c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8011462:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 8011466:	2e07      	cmp	r6, #7
 8011468:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 801146c:	d812      	bhi.n	8011494 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 801146e:	1c75      	adds	r5, r6, #1
 8011470:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8011474:	9d01      	ldr	r5, [sp, #4]
 8011476:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801147a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801147e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8011482:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8011486:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801148a:	442c      	add	r4, r5
 801148c:	8061      	strh	r1, [r4, #2]
 801148e:	80a2      	strh	r2, [r4, #4]
 8011490:	80e3      	strh	r3, [r4, #6]
 8011492:	e5c9      	b.n	8011028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011494:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011498:	3e01      	subs	r6, #1
 801149a:	445c      	add	r4, fp
 801149c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80114a0:	f04f 37ff 	mov.w	r7, #4294967295
 80114a4:	2500      	movs	r5, #0
 80114a6:	9305      	str	r3, [sp, #20]
 80114a8:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 80114ac:	9302      	str	r3, [sp, #8]
 80114ae:	1e72      	subs	r2, r6, #1
 80114b0:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 80114b4:	9304      	str	r3, [sp, #16]
 80114b6:	4691      	mov	r9, r2
 80114b8:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 80114bc:	f1b9 3fff 	cmp.w	r9, #4294967295
 80114c0:	bf14      	ite	ne
 80114c2:	9905      	ldrne	r1, [sp, #20]
 80114c4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80114c8:	6818      	ldr	r0, [r3, #0]
 80114ca:	9207      	str	r2, [sp, #28]
 80114cc:	bf18      	it	ne
 80114ce:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80114d2:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80114d6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80114da:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80114de:	9306      	str	r3, [sp, #24]
 80114e0:	fb18 f801 	smulbb	r8, r8, r1
 80114e4:	6859      	ldr	r1, [r3, #4]
 80114e6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80114ea:	4671      	mov	r1, lr
 80114ec:	a80c      	add	r0, sp, #48	; 0x30
 80114ee:	f7fb f86d 	bl	800c5cc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80114f2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80114f6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80114fa:	9b04      	ldr	r3, [sp, #16]
 80114fc:	9a02      	ldr	r2, [sp, #8]
 80114fe:	fb10 f001 	smulbb	r0, r0, r1
 8011502:	fb02 8803 	mla	r8, r2, r3, r8
 8011506:	eba0 0108 	sub.w	r1, r0, r8
 801150a:	f04f 0c08 	mov.w	ip, #8
 801150e:	fb90 f0fc 	sdiv	r0, r0, ip
 8011512:	4288      	cmp	r0, r1
 8011514:	dc20      	bgt.n	8011558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011516:	4551      	cmp	r1, sl
 8011518:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801151c:	da03      	bge.n	8011526 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 801151e:	b1d9      	cbz	r1, 8011558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011520:	468a      	mov	sl, r1
 8011522:	464f      	mov	r7, r9
 8011524:	4635      	mov	r5, r6
 8011526:	f109 39ff 	add.w	r9, r9, #4294967295
 801152a:	f119 0f02 	cmn.w	r9, #2
 801152e:	d1c5      	bne.n	80114bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011530:	4616      	mov	r6, r2
 8011532:	3201      	adds	r2, #1
 8011534:	f1a4 0408 	sub.w	r4, r4, #8
 8011538:	d1b6      	bne.n	80114a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801153a:	9b01      	ldr	r3, [sp, #4]
 801153c:	b2ac      	uxth	r4, r5
 801153e:	00ed      	lsls	r5, r5, #3
 8011540:	1958      	adds	r0, r3, r5
 8011542:	1c7b      	adds	r3, r7, #1
 8011544:	d10b      	bne.n	801155e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 8011546:	4601      	mov	r1, r0
 8011548:	9803      	ldr	r0, [sp, #12]
 801154a:	f7fb f83f 	bl	800c5cc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801154e:	4621      	mov	r1, r4
 8011550:	9801      	ldr	r0, [sp, #4]
 8011552:	f7ff fcd5 	bl	8010f00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011556:	e4fd      	b.n	8010f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011558:	464f      	mov	r7, r9
 801155a:	4635      	mov	r5, r6
 801155c:	e7ed      	b.n	801153a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 801155e:	9b01      	ldr	r3, [sp, #4]
 8011560:	00ff      	lsls	r7, r7, #3
 8011562:	19d9      	adds	r1, r3, r7
 8011564:	f7fb f832 	bl	800c5cc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011568:	9b03      	ldr	r3, [sp, #12]
 801156a:	cb03      	ldmia	r3!, {r0, r1}
 801156c:	445f      	add	r7, fp
 801156e:	445d      	add	r5, fp
 8011570:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8011574:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 8011578:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 801157c:	9b03      	ldr	r3, [sp, #12]
 801157e:	6869      	ldr	r1, [r5, #4]
 8011580:	c303      	stmia	r3!, {r0, r1}
 8011582:	e7e4      	b.n	801154e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

08011584 <_ZN8touchgfx11Application10invalidateEv>:
 8011584:	4b09      	ldr	r3, [pc, #36]	; (80115ac <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8011586:	f9b3 2000 	ldrsh.w	r2, [r3]
 801158a:	4b09      	ldr	r3, [pc, #36]	; (80115b0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801158c:	b082      	sub	sp, #8
 801158e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011592:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011596:	2100      	movs	r1, #0
 8011598:	9100      	str	r1, [sp, #0]
 801159a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801159e:	ab02      	add	r3, sp, #8
 80115a0:	e913 0006 	ldmdb	r3, {r1, r2}
 80115a4:	b002      	add	sp, #8
 80115a6:	f7ff bcbf 	b.w	8010f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80115aa:	bf00      	nop
 80115ac:	2001547c 	.word	0x2001547c
 80115b0:	2001547e 	.word	0x2001547e

080115b4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80115b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115b8:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 80115bc:	b09b      	sub	sp, #108	; 0x6c
 80115be:	4604      	mov	r4, r0
 80115c0:	4630      	mov	r0, r6
 80115c2:	f7f9 fade 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80115c6:	4605      	mov	r5, r0
 80115c8:	b940      	cbnz	r0, 80115dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 80115ca:	e896 0006 	ldmia.w	r6, {r1, r2}
 80115ce:	4620      	mov	r0, r4
 80115d0:	f7ff fcaa 	bl	8010f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80115d4:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 80115d8:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80115dc:	4bc9      	ldr	r3, [pc, #804]	; (8011904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80115de:	681b      	ldr	r3, [r3, #0]
 80115e0:	2b00      	cmp	r3, #0
 80115e2:	d03e      	beq.n	8011662 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 80115e4:	4dc8      	ldr	r5, [pc, #800]	; (8011908 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80115e6:	4628      	mov	r0, r5
 80115e8:	f7f9 facb 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80115ec:	4606      	mov	r6, r0
 80115ee:	2800      	cmp	r0, #0
 80115f0:	d137      	bne.n	8011662 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 80115f2:	4628      	mov	r0, r5
 80115f4:	f7ff fa4a 	bl	8010a8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80115f8:	6829      	ldr	r1, [r5, #0]
 80115fa:	686a      	ldr	r2, [r5, #4]
 80115fc:	4620      	mov	r0, r4
 80115fe:	f7ff fc93 	bl	8010f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011602:	802e      	strh	r6, [r5, #0]
 8011604:	806e      	strh	r6, [r5, #2]
 8011606:	80ae      	strh	r6, [r5, #4]
 8011608:	80ee      	strh	r6, [r5, #6]
 801160a:	ae09      	add	r6, sp, #36	; 0x24
 801160c:	4630      	mov	r0, r6
 801160e:	f7ff fc26 	bl	8010e5e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011612:	4abe      	ldr	r2, [pc, #760]	; (801190c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011614:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8011618:	8815      	ldrh	r5, [r2, #0]
 801161a:	9202      	str	r2, [sp, #8]
 801161c:	462b      	mov	r3, r5
 801161e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011622:	429f      	cmp	r7, r3
 8011624:	d924      	bls.n	8011670 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8011626:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801162a:	2907      	cmp	r1, #7
 801162c:	d816      	bhi.n	801165c <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 801162e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011632:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8011636:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801163a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801163e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011642:	1c4a      	adds	r2, r1, #1
 8011644:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8011648:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 801164c:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8011650:	f8a2 9002 	strh.w	r9, [r2, #2]
 8011654:	f8a2 e004 	strh.w	lr, [r2, #4]
 8011658:	f8a2 c006 	strh.w	ip, [r2, #6]
 801165c:	3301      	adds	r3, #1
 801165e:	b29b      	uxth	r3, r3
 8011660:	e7df      	b.n	8011622 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8011662:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011666:	2b00      	cmp	r3, #0
 8011668:	d1cf      	bne.n	801160a <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 801166a:	b01b      	add	sp, #108	; 0x6c
 801166c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011670:	462f      	mov	r7, r5
 8011672:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8011676:	42bb      	cmp	r3, r7
 8011678:	d90b      	bls.n	8011692 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 801167a:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 801167e:	4620      	mov	r0, r4
 8011680:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8011684:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8011688:	3701      	adds	r7, #1
 801168a:	f7ff fc4d 	bl	8010f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801168e:	b2bf      	uxth	r7, r7
 8011690:	e7ef      	b.n	8011672 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8011692:	4a9f      	ldr	r2, [pc, #636]	; (8011910 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8011694:	6813      	ldr	r3, [r2, #0]
 8011696:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801169a:	2b01      	cmp	r3, #1
 801169c:	4690      	mov	r8, r2
 801169e:	f040 80e6 	bne.w	801186e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 80116a2:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80116a6:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 80116aa:	4629      	mov	r1, r5
 80116ac:	33aa      	adds	r3, #170	; 0xaa
 80116ae:	2500      	movs	r5, #0
 80116b0:	428f      	cmp	r7, r1
 80116b2:	f103 0308 	add.w	r3, r3, #8
 80116b6:	dd0a      	ble.n	80116ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 80116b8:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80116bc:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 80116c0:	4402      	add	r2, r0
 80116c2:	b212      	sxth	r2, r2
 80116c4:	4295      	cmp	r5, r2
 80116c6:	bfb8      	it	lt
 80116c8:	4615      	movlt	r5, r2
 80116ca:	3101      	adds	r1, #1
 80116cc:	e7f0      	b.n	80116b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 80116ce:	4b91      	ldr	r3, [pc, #580]	; (8011914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80116d0:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011910 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 80116d4:	881b      	ldrh	r3, [r3, #0]
 80116d6:	2b0f      	cmp	r3, #15
 80116d8:	bf88      	it	hi
 80116da:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 80116de:	f04f 0300 	mov.w	r3, #0
 80116e2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80116e6:	bf98      	it	ls
 80116e8:	f04f 0a01 	movls.w	sl, #1
 80116ec:	46d8      	mov	r8, fp
 80116ee:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 80116f2:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 80116f6:	4438      	add	r0, r7
 80116f8:	b207      	sxth	r7, r0
 80116fa:	f8db 0000 	ldr.w	r0, [fp]
 80116fe:	42bd      	cmp	r5, r7
 8011700:	6803      	ldr	r3, [r0, #0]
 8011702:	f340 8084 	ble.w	801180e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011706:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801170a:	4798      	blx	r3
 801170c:	eb07 030a 	add.w	r3, r7, sl
 8011710:	4298      	cmp	r0, r3
 8011712:	da07      	bge.n	8011724 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011714:	4285      	cmp	r5, r0
 8011716:	dd05      	ble.n	8011724 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011718:	4287      	cmp	r7, r0
 801171a:	dd6d      	ble.n	80117f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801171c:	2f00      	cmp	r7, #0
 801171e:	dd6b      	ble.n	80117f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011720:	4628      	mov	r0, r5
 8011722:	e004      	b.n	801172e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011724:	4287      	cmp	r7, r0
 8011726:	dcfb      	bgt.n	8011720 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8011728:	42a8      	cmp	r0, r5
 801172a:	bfa8      	it	ge
 801172c:	4628      	movge	r0, r5
 801172e:	4b7a      	ldr	r3, [pc, #488]	; (8011918 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011730:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011734:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011738:	f8ad 3018 	strh.w	r3, [sp, #24]
 801173c:	9b02      	ldr	r3, [sp, #8]
 801173e:	1bc0      	subs	r0, r0, r7
 8011740:	2200      	movs	r2, #0
 8011742:	881f      	ldrh	r7, [r3, #0]
 8011744:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011748:	f8ad 001a 	strh.w	r0, [sp, #26]
 801174c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011750:	42bb      	cmp	r3, r7
 8011752:	d9cc      	bls.n	80116ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011754:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8011758:	ab07      	add	r3, sp, #28
 801175a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801175e:	6851      	ldr	r1, [r2, #4]
 8011760:	c303      	stmia	r3!, {r0, r1}
 8011762:	a905      	add	r1, sp, #20
 8011764:	a807      	add	r0, sp, #28
 8011766:	f7ff fad0 	bl	8010d0a <_ZNK8touchgfx4Rect9intersectERKS0_>
 801176a:	2800      	cmp	r0, #0
 801176c:	d04c      	beq.n	8011808 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801176e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011772:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8011776:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801177a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801177e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011782:	9303      	str	r3, [sp, #12]
 8011784:	4686      	mov	lr, r0
 8011786:	4290      	cmp	r0, r2
 8011788:	4448      	add	r0, r9
 801178a:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 801178e:	bfb8      	it	lt
 8011790:	4696      	movlt	lr, r2
 8011792:	444a      	add	r2, r9
 8011794:	4299      	cmp	r1, r3
 8011796:	b280      	uxth	r0, r0
 8011798:	b292      	uxth	r2, r2
 801179a:	468c      	mov	ip, r1
 801179c:	fa0f f982 	sxth.w	r9, r2
 80117a0:	bfb8      	it	lt
 80117a2:	469c      	movlt	ip, r3
 80117a4:	b203      	sxth	r3, r0
 80117a6:	454b      	cmp	r3, r9
 80117a8:	bfb8      	it	lt
 80117aa:	4602      	movlt	r2, r0
 80117ac:	eba2 020e 	sub.w	r2, r2, lr
 80117b0:	f8ad 2020 	strh.w	r2, [sp, #32]
 80117b4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80117b8:	9b03      	ldr	r3, [sp, #12]
 80117ba:	f8ad e01c 	strh.w	lr, [sp, #28]
 80117be:	4411      	add	r1, r2
 80117c0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80117c4:	f8ad c01e 	strh.w	ip, [sp, #30]
 80117c8:	4413      	add	r3, r2
 80117ca:	b289      	uxth	r1, r1
 80117cc:	b29b      	uxth	r3, r3
 80117ce:	b208      	sxth	r0, r1
 80117d0:	b21a      	sxth	r2, r3
 80117d2:	4290      	cmp	r0, r2
 80117d4:	bfb8      	it	lt
 80117d6:	460b      	movlt	r3, r1
 80117d8:	eba3 030c 	sub.w	r3, r3, ip
 80117dc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80117e0:	a807      	add	r0, sp, #28
 80117e2:	f7f9 f9ce 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80117e6:	b920      	cbnz	r0, 80117f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80117e8:	6823      	ldr	r3, [r4, #0]
 80117ea:	a907      	add	r1, sp, #28
 80117ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80117ee:	4620      	mov	r0, r4
 80117f0:	4798      	blx	r3
 80117f2:	3701      	adds	r7, #1
 80117f4:	b2bf      	uxth	r7, r7
 80117f6:	e7a9      	b.n	801174c <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80117f8:	f8d8 0000 	ldr.w	r0, [r8]
 80117fc:	6803      	ldr	r3, [r0, #0]
 80117fe:	2101      	movs	r1, #1
 8011800:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011804:	4798      	blx	r3
 8011806:	e772      	b.n	80116ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011808:	e9cd 0007 	strd	r0, r0, [sp, #28]
 801180c:	e7e8      	b.n	80117e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801180e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011810:	4798      	blx	r3
 8011812:	4b42      	ldr	r3, [pc, #264]	; (801191c <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011814:	781b      	ldrb	r3, [r3, #0]
 8011816:	2b00      	cmp	r3, #0
 8011818:	f43f af27 	beq.w	801166a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 801181c:	2300      	movs	r3, #0
 801181e:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011822:	9b02      	ldr	r3, [sp, #8]
 8011824:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011828:	881b      	ldrh	r3, [r3, #0]
 801182a:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 801182e:	429d      	cmp	r5, r3
 8011830:	f67f af1b 	bls.w	801166a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011834:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011838:	2907      	cmp	r1, #7
 801183a:	d815      	bhi.n	8011868 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 801183c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011840:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011844:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011848:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801184c:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011850:	1c4a      	adds	r2, r1, #1
 8011852:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011856:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801185a:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 801185e:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011862:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011866:	80d7      	strh	r7, [r2, #6]
 8011868:	3301      	adds	r3, #1
 801186a:	b29b      	uxth	r3, r3
 801186c:	e7df      	b.n	801182e <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 801186e:	2b02      	cmp	r3, #2
 8011870:	f040 8136 	bne.w	8011ae0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011874:	4b2a      	ldr	r3, [pc, #168]	; (8011920 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011876:	781b      	ldrb	r3, [r3, #0]
 8011878:	2b01      	cmp	r3, #1
 801187a:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 801187e:	f000 809c 	beq.w	80119ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011882:	9b02      	ldr	r3, [sp, #8]
 8011884:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011888:	f8b3 b000 	ldrh.w	fp, [r3]
 801188c:	f10b 0b01 	add.w	fp, fp, #1
 8011890:	fa1f fb8b 	uxth.w	fp, fp
 8011894:	2a00      	cmp	r2, #0
 8011896:	d0bc      	beq.n	8011812 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011898:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 801189c:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 80118a0:	441d      	add	r5, r3
 80118a2:	b22d      	sxth	r5, r5
 80118a4:	4659      	mov	r1, fp
 80118a6:	f04f 0800 	mov.w	r8, #0
 80118aa:	b28b      	uxth	r3, r1
 80118ac:	429a      	cmp	r2, r3
 80118ae:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80118b2:	f240 80c1 	bls.w	8011a38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 80118b6:	4427      	add	r7, r4
 80118b8:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 80118bc:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 80118c0:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 80118c4:	4563      	cmp	r3, ip
 80118c6:	4608      	mov	r0, r1
 80118c8:	f340 80a3 	ble.w	8011a12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 80118cc:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 80118d0:	4465      	add	r5, ip
 80118d2:	b22d      	sxth	r5, r5
 80118d4:	429d      	cmp	r5, r3
 80118d6:	bfa8      	it	ge
 80118d8:	461d      	movge	r5, r3
 80118da:	3101      	adds	r1, #1
 80118dc:	4680      	mov	r8, r0
 80118de:	e7e4      	b.n	80118aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 80118e0:	d10b      	bne.n	80118fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 80118e2:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 80118e6:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 80118ea:	458c      	cmp	ip, r1
 80118ec:	bfb4      	ite	lt
 80118ee:	469c      	movlt	ip, r3
 80118f0:	46bc      	movge	ip, r7
 80118f2:	4572      	cmp	r2, lr
 80118f4:	bfb8      	it	lt
 80118f6:	4672      	movlt	r2, lr
 80118f8:	e088      	b.n	8011a0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 80118fa:	428a      	cmp	r2, r1
 80118fc:	bfb8      	it	lt
 80118fe:	460a      	movlt	r2, r1
 8011900:	46bc      	mov	ip, r7
 8011902:	e083      	b.n	8011a0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011904:	200154c8 	.word	0x200154c8
 8011908:	200154d4 	.word	0x200154d4
 801190c:	2000008c 	.word	0x2000008c
 8011910:	20015488 	.word	0x20015488
 8011914:	2001547e 	.word	0x2001547e
 8011918:	2001547c 	.word	0x2001547c
 801191c:	20015486 	.word	0x20015486
 8011920:	20015480 	.word	0x20015480
 8011924:	1961      	adds	r1, r4, r5
 8011926:	ab07      	add	r3, sp, #28
 8011928:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 801192c:	6849      	ldr	r1, [r1, #4]
 801192e:	c303      	stmia	r3!, {r0, r1}
 8011930:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011934:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011938:	2b13      	cmp	r3, #19
 801193a:	bfd8      	it	le
 801193c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011940:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011944:	440b      	add	r3, r1
 8011946:	1a9b      	subs	r3, r3, r2
 8011948:	a807      	add	r0, sp, #28
 801194a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801194e:	f7ff f8b7 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011952:	a807      	add	r0, sp, #28
 8011954:	f7f9 f915 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011958:	bb78      	cbnz	r0, 80119ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801195a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801195e:	f8d8 0000 	ldr.w	r0, [r8]
 8011962:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011966:	f8d0 e000 	ldr.w	lr, [r0]
 801196a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801196e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011972:	f1bc 0f14 	cmp.w	ip, #20
 8011976:	bfa8      	it	ge
 8011978:	f04f 0c14 	movge.w	ip, #20
 801197c:	fa1f fc8c 	uxth.w	ip, ip
 8011980:	f8cd c000 	str.w	ip, [sp]
 8011984:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8011988:	47d0      	blx	sl
 801198a:	4682      	mov	sl, r0
 801198c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011990:	a807      	add	r0, sp, #28
 8011992:	f7ff f87b 	bl	8010a8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011996:	6823      	ldr	r3, [r4, #0]
 8011998:	4425      	add	r5, r4
 801199a:	4620      	mov	r0, r4
 801199c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801199e:	a907      	add	r1, sp, #28
 80119a0:	4798      	blx	r3
 80119a2:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 80119a6:	eba0 000a 	sub.w	r0, r0, sl
 80119aa:	b200      	sxth	r0, r0
 80119ac:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 80119b0:	b918      	cbnz	r0, 80119ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80119b2:	b2b9      	uxth	r1, r7
 80119b4:	4648      	mov	r0, r9
 80119b6:	f7ff faa3 	bl	8010f00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80119ba:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 80119be:	f1bb 0f00 	cmp.w	fp, #0
 80119c2:	f43f af26 	beq.w	8011812 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80119c6:	9b02      	ldr	r3, [sp, #8]
 80119c8:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80119cc:	881b      	ldrh	r3, [r3, #0]
 80119ce:	3301      	adds	r3, #1
 80119d0:	b29b      	uxth	r3, r3
 80119d2:	2700      	movs	r7, #0
 80119d4:	b299      	uxth	r1, r3
 80119d6:	458b      	cmp	fp, r1
 80119d8:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 80119dc:	d9a2      	bls.n	8011924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 80119de:	4425      	add	r5, r4
 80119e0:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 80119e4:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 80119e8:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 80119ec:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 80119f0:	4408      	add	r0, r1
 80119f2:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 80119f6:	4471      	add	r1, lr
 80119f8:	b200      	sxth	r0, r0
 80119fa:	b209      	sxth	r1, r1
 80119fc:	4288      	cmp	r0, r1
 80119fe:	469c      	mov	ip, r3
 8011a00:	f6bf af6e 	bge.w	80118e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011a04:	4586      	cmp	lr, r0
 8011a06:	4672      	mov	r2, lr
 8011a08:	bfb8      	it	lt
 8011a0a:	4602      	movlt	r2, r0
 8011a0c:	3301      	adds	r3, #1
 8011a0e:	4667      	mov	r7, ip
 8011a10:	e7e0      	b.n	80119d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011a12:	d10c      	bne.n	8011a2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011a14:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011a18:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8011a1c:	4287      	cmp	r7, r0
 8011a1e:	bfb4      	ite	lt
 8011a20:	4608      	movlt	r0, r1
 8011a22:	4640      	movge	r0, r8
 8011a24:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011a28:	443b      	add	r3, r7
 8011a2a:	b21b      	sxth	r3, r3
 8011a2c:	e752      	b.n	80118d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8011a2e:	4565      	cmp	r5, ip
 8011a30:	bfa8      	it	ge
 8011a32:	4665      	movge	r5, ip
 8011a34:	4640      	mov	r0, r8
 8011a36:	e750      	b.n	80118da <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011a38:	eb09 0007 	add.w	r0, r9, r7
 8011a3c:	4427      	add	r7, r4
 8011a3e:	9203      	str	r2, [sp, #12]
 8011a40:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011a44:	f1ba 0f13 	cmp.w	sl, #19
 8011a48:	bfde      	ittt	le
 8011a4a:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8011a4e:	4455      	addle	r5, sl
 8011a50:	b22d      	sxthle	r5, r5
 8011a52:	f7f9 f896 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a56:	9a03      	ldr	r2, [sp, #12]
 8011a58:	2800      	cmp	r0, #0
 8011a5a:	f47f af1b 	bne.w	8011894 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8011a5e:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011a62:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011a66:	482a      	ldr	r0, [pc, #168]	; (8011b10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011a68:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8011a6c:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011a70:	6800      	ldr	r0, [r0, #0]
 8011a72:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011a76:	1aad      	subs	r5, r5, r2
 8011a78:	2d14      	cmp	r5, #20
 8011a7a:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011a7e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011a82:	bfa8      	it	ge
 8011a84:	2514      	movge	r5, #20
 8011a86:	f8d0 c000 	ldr.w	ip, [r0]
 8011a8a:	b2ad      	uxth	r5, r5
 8011a8c:	fa1f fa8a 	uxth.w	sl, sl
 8011a90:	4555      	cmp	r5, sl
 8011a92:	bf94      	ite	ls
 8011a94:	9500      	strls	r5, [sp, #0]
 8011a96:	f8cd a000 	strhi.w	sl, [sp]
 8011a9a:	b292      	uxth	r2, r2
 8011a9c:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011aa0:	b29b      	uxth	r3, r3
 8011aa2:	b289      	uxth	r1, r1
 8011aa4:	47a8      	blx	r5
 8011aa6:	6823      	ldr	r3, [r4, #0]
 8011aa8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011aac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011aae:	a907      	add	r1, sp, #28
 8011ab0:	4620      	mov	r0, r4
 8011ab2:	4798      	blx	r3
 8011ab4:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011ab8:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8011abc:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011ac0:	1a5b      	subs	r3, r3, r1
 8011ac2:	440a      	add	r2, r1
 8011ac4:	b21b      	sxth	r3, r3
 8011ac6:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8011aca:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8011ace:	2b00      	cmp	r3, #0
 8011ad0:	f47f aed7 	bne.w	8011882 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011ad4:	fa1f f188 	uxth.w	r1, r8
 8011ad8:	4648      	mov	r0, r9
 8011ada:	f7ff fa11 	bl	8010f00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011ade:	e6d0      	b.n	8011882 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011ae0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011ae4:	42ab      	cmp	r3, r5
 8011ae6:	f67f ae94 	bls.w	8011812 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011aea:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011aee:	ab07      	add	r3, sp, #28
 8011af0:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011af4:	6851      	ldr	r1, [r2, #4]
 8011af6:	c303      	stmia	r3!, {r0, r1}
 8011af8:	a807      	add	r0, sp, #28
 8011afa:	f7f9 f842 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011afe:	b920      	cbnz	r0, 8011b0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011b00:	6823      	ldr	r3, [r4, #0]
 8011b02:	a907      	add	r1, sp, #28
 8011b04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011b06:	4620      	mov	r0, r4
 8011b08:	4798      	blx	r3
 8011b0a:	3501      	adds	r5, #1
 8011b0c:	b2ad      	uxth	r5, r5
 8011b0e:	e7e7      	b.n	8011ae0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011b10:	20015488 	.word	0x20015488

08011b14 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011b14:	4b03      	ldr	r3, [pc, #12]	; (8011b24 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011b16:	2200      	movs	r2, #0
 8011b18:	801a      	strh	r2, [r3, #0]
 8011b1a:	805a      	strh	r2, [r3, #2]
 8011b1c:	809a      	strh	r2, [r3, #4]
 8011b1e:	80da      	strh	r2, [r3, #6]
 8011b20:	4770      	bx	lr
 8011b22:	bf00      	nop
 8011b24:	200154d4 	.word	0x200154d4

08011b28 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b2c:	4606      	mov	r6, r0
 8011b2e:	b09d      	sub	sp, #116	; 0x74
 8011b30:	a803      	add	r0, sp, #12
 8011b32:	4614      	mov	r4, r2
 8011b34:	468a      	mov	sl, r1
 8011b36:	461d      	mov	r5, r3
 8011b38:	f000 fe67 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 8011b3c:	6833      	ldr	r3, [r6, #0]
 8011b3e:	4630      	mov	r0, r6
 8011b40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011b42:	4798      	blx	r3
 8011b44:	6833      	ldr	r3, [r6, #0]
 8011b46:	4607      	mov	r7, r0
 8011b48:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011b4a:	4630      	mov	r0, r6
 8011b4c:	4798      	blx	r3
 8011b4e:	462a      	mov	r2, r5
 8011b50:	9000      	str	r0, [sp, #0]
 8011b52:	4621      	mov	r1, r4
 8011b54:	463b      	mov	r3, r7
 8011b56:	a803      	add	r0, sp, #12
 8011b58:	f000 feb2 	bl	80128c0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011b5c:	2500      	movs	r5, #0
 8011b5e:	462c      	mov	r4, r5
 8011b60:	46a9      	mov	r9, r5
 8011b62:	46a8      	mov	r8, r5
 8011b64:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011b68:	2300      	movs	r3, #0
 8011b6a:	9302      	str	r3, [sp, #8]
 8011b6c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011b70:	429c      	cmp	r4, r3
 8011b72:	d002      	beq.n	8011b7a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011b74:	455c      	cmp	r4, fp
 8011b76:	bf18      	it	ne
 8011b78:	4625      	movne	r5, r4
 8011b7a:	ab02      	add	r3, sp, #8
 8011b7c:	4632      	mov	r2, r6
 8011b7e:	4651      	mov	r1, sl
 8011b80:	a803      	add	r0, sp, #12
 8011b82:	f001 f99f 	bl	8012ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011b86:	4604      	mov	r4, r0
 8011b88:	b108      	cbz	r0, 8011b8e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011b8a:	280a      	cmp	r0, #10
 8011b8c:	d10a      	bne.n	8011ba4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011b8e:	45c1      	cmp	r9, r8
 8011b90:	bf38      	it	cc
 8011b92:	46c1      	movcc	r9, r8
 8011b94:	f04f 0800 	mov.w	r8, #0
 8011b98:	2c00      	cmp	r4, #0
 8011b9a:	d1e5      	bne.n	8011b68 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011b9c:	4648      	mov	r0, r9
 8011b9e:	b01d      	add	sp, #116	; 0x74
 8011ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ba4:	9a02      	ldr	r2, [sp, #8]
 8011ba6:	2a00      	cmp	r2, #0
 8011ba8:	d0de      	beq.n	8011b68 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011baa:	7b57      	ldrb	r7, [r2, #13]
 8011bac:	6833      	ldr	r3, [r6, #0]
 8011bae:	8894      	ldrh	r4, [r2, #4]
 8011bb0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011bb2:	007f      	lsls	r7, r7, #1
 8011bb4:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011bb8:	7a97      	ldrb	r7, [r2, #10]
 8011bba:	4629      	mov	r1, r5
 8011bbc:	4307      	orrs	r7, r0
 8011bbe:	4630      	mov	r0, r6
 8011bc0:	4798      	blx	r3
 8011bc2:	4438      	add	r0, r7
 8011bc4:	4480      	add	r8, r0
 8011bc6:	fa1f f888 	uxth.w	r8, r8
 8011bca:	e7e5      	b.n	8011b98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011bcc <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011bcc:	b508      	push	{r3, lr}
 8011bce:	6803      	ldr	r3, [r0, #0]
 8011bd0:	68db      	ldr	r3, [r3, #12]
 8011bd2:	4798      	blx	r3
 8011bd4:	b128      	cbz	r0, 8011be2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011bd6:	7b43      	ldrb	r3, [r0, #13]
 8011bd8:	7a80      	ldrb	r0, [r0, #10]
 8011bda:	005b      	lsls	r3, r3, #1
 8011bdc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011be0:	4318      	orrs	r0, r3
 8011be2:	bd08      	pop	{r3, pc}

08011be4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011be4:	b40e      	push	{r1, r2, r3}
 8011be6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011be8:	b09e      	sub	sp, #120	; 0x78
 8011bea:	ab23      	add	r3, sp, #140	; 0x8c
 8011bec:	4605      	mov	r5, r0
 8011bee:	f853 4b04 	ldr.w	r4, [r3], #4
 8011bf2:	9303      	str	r3, [sp, #12]
 8011bf4:	a805      	add	r0, sp, #20
 8011bf6:	f000 fe08 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 8011bfa:	682b      	ldr	r3, [r5, #0]
 8011bfc:	4628      	mov	r0, r5
 8011bfe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011c00:	4798      	blx	r3
 8011c02:	682b      	ldr	r3, [r5, #0]
 8011c04:	4606      	mov	r6, r0
 8011c06:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011c08:	4628      	mov	r0, r5
 8011c0a:	4798      	blx	r3
 8011c0c:	4633      	mov	r3, r6
 8011c0e:	ae1e      	add	r6, sp, #120	; 0x78
 8011c10:	4621      	mov	r1, r4
 8011c12:	9000      	str	r0, [sp, #0]
 8011c14:	9a03      	ldr	r2, [sp, #12]
 8011c16:	2400      	movs	r4, #0
 8011c18:	a805      	add	r0, sp, #20
 8011c1a:	f000 fe51 	bl	80128c0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011c1e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011c22:	462a      	mov	r2, r5
 8011c24:	4633      	mov	r3, r6
 8011c26:	4621      	mov	r1, r4
 8011c28:	a805      	add	r0, sp, #20
 8011c2a:	f001 f94b 	bl	8012ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011c2e:	b1f0      	cbz	r0, 8011c6e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011c30:	280a      	cmp	r0, #10
 8011c32:	d018      	beq.n	8011c66 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011c34:	9f04      	ldr	r7, [sp, #16]
 8011c36:	b1b7      	cbz	r7, 8011c66 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011c38:	7b78      	ldrb	r0, [r7, #13]
 8011c3a:	7a3b      	ldrb	r3, [r7, #8]
 8011c3c:	88aa      	ldrh	r2, [r5, #4]
 8011c3e:	00c1      	lsls	r1, r0, #3
 8011c40:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011c44:	4319      	orrs	r1, r3
 8011c46:	0643      	lsls	r3, r0, #25
 8011c48:	bf44      	itt	mi
 8011c4a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011c4e:	b219      	sxthmi	r1, r3
 8011c50:	0100      	lsls	r0, r0, #4
 8011c52:	79fb      	ldrb	r3, [r7, #7]
 8011c54:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011c58:	4303      	orrs	r3, r0
 8011c5a:	4413      	add	r3, r2
 8011c5c:	1a5b      	subs	r3, r3, r1
 8011c5e:	b29b      	uxth	r3, r3
 8011c60:	42a3      	cmp	r3, r4
 8011c62:	bfc8      	it	gt
 8011c64:	b21c      	sxthgt	r4, r3
 8011c66:	4633      	mov	r3, r6
 8011c68:	462a      	mov	r2, r5
 8011c6a:	2100      	movs	r1, #0
 8011c6c:	e7dc      	b.n	8011c28 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011c6e:	b2a0      	uxth	r0, r4
 8011c70:	b01e      	add	sp, #120	; 0x78
 8011c72:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011c76:	b003      	add	sp, #12
 8011c78:	4770      	bx	lr

08011c7a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011c7a:	b40e      	push	{r1, r2, r3}
 8011c7c:	b570      	push	{r4, r5, r6, lr}
 8011c7e:	b09d      	sub	sp, #116	; 0x74
 8011c80:	ab21      	add	r3, sp, #132	; 0x84
 8011c82:	4604      	mov	r4, r0
 8011c84:	f853 5b04 	ldr.w	r5, [r3], #4
 8011c88:	9302      	str	r3, [sp, #8]
 8011c8a:	a803      	add	r0, sp, #12
 8011c8c:	f000 fdbd 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 8011c90:	6823      	ldr	r3, [r4, #0]
 8011c92:	4620      	mov	r0, r4
 8011c94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011c96:	4798      	blx	r3
 8011c98:	6823      	ldr	r3, [r4, #0]
 8011c9a:	4606      	mov	r6, r0
 8011c9c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011c9e:	4620      	mov	r0, r4
 8011ca0:	4798      	blx	r3
 8011ca2:	4633      	mov	r3, r6
 8011ca4:	9000      	str	r0, [sp, #0]
 8011ca6:	9a02      	ldr	r2, [sp, #8]
 8011ca8:	4629      	mov	r1, r5
 8011caa:	a803      	add	r0, sp, #12
 8011cac:	f000 fe08 	bl	80128c0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011cb0:	a803      	add	r0, sp, #12
 8011cb2:	f001 f9d5 	bl	8013060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011cb6:	2401      	movs	r4, #1
 8011cb8:	b2a3      	uxth	r3, r4
 8011cba:	b140      	cbz	r0, 8011cce <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011cbc:	280a      	cmp	r0, #10
 8011cbe:	bf08      	it	eq
 8011cc0:	3301      	addeq	r3, #1
 8011cc2:	a803      	add	r0, sp, #12
 8011cc4:	bf08      	it	eq
 8011cc6:	b21c      	sxtheq	r4, r3
 8011cc8:	f001 f9ca 	bl	8013060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011ccc:	e7f4      	b.n	8011cb8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011cce:	4618      	mov	r0, r3
 8011cd0:	b01d      	add	sp, #116	; 0x74
 8011cd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cd6:	b003      	add	sp, #12
 8011cd8:	4770      	bx	lr

08011cda <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011cda:	b40e      	push	{r1, r2, r3}
 8011cdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011cde:	b09e      	sub	sp, #120	; 0x78
 8011ce0:	ab23      	add	r3, sp, #140	; 0x8c
 8011ce2:	4604      	mov	r4, r0
 8011ce4:	f853 5b04 	ldr.w	r5, [r3], #4
 8011ce8:	9303      	str	r3, [sp, #12]
 8011cea:	a805      	add	r0, sp, #20
 8011cec:	f000 fd8d 	bl	801280a <_ZN8touchgfx12TextProviderC1Ev>
 8011cf0:	6823      	ldr	r3, [r4, #0]
 8011cf2:	4620      	mov	r0, r4
 8011cf4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011cf6:	4798      	blx	r3
 8011cf8:	6823      	ldr	r3, [r4, #0]
 8011cfa:	4606      	mov	r6, r0
 8011cfc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011cfe:	4620      	mov	r0, r4
 8011d00:	4798      	blx	r3
 8011d02:	4633      	mov	r3, r6
 8011d04:	4629      	mov	r1, r5
 8011d06:	9000      	str	r0, [sp, #0]
 8011d08:	9a03      	ldr	r2, [sp, #12]
 8011d0a:	a805      	add	r0, sp, #20
 8011d0c:	ad1e      	add	r5, sp, #120	; 0x78
 8011d0e:	f000 fdd7 	bl	80128c0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011d12:	2100      	movs	r1, #0
 8011d14:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011d18:	4622      	mov	r2, r4
 8011d1a:	462b      	mov	r3, r5
 8011d1c:	a805      	add	r0, sp, #20
 8011d1e:	f001 f8d1 	bl	8012ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011d22:	26ff      	movs	r6, #255	; 0xff
 8011d24:	b1d8      	cbz	r0, 8011d5e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8011d26:	280a      	cmp	r0, #10
 8011d28:	d012      	beq.n	8011d50 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011d2a:	9804      	ldr	r0, [sp, #16]
 8011d2c:	b180      	cbz	r0, 8011d50 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011d2e:	7b47      	ldrb	r7, [r0, #13]
 8011d30:	7922      	ldrb	r2, [r4, #4]
 8011d32:	00fb      	lsls	r3, r7, #3
 8011d34:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011d38:	7a03      	ldrb	r3, [r0, #8]
 8011d3a:	430b      	orrs	r3, r1
 8011d3c:	0679      	lsls	r1, r7, #25
 8011d3e:	bf44      	itt	mi
 8011d40:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011d44:	b21b      	sxthmi	r3, r3
 8011d46:	1ad3      	subs	r3, r2, r3
 8011d48:	b2db      	uxtb	r3, r3
 8011d4a:	429e      	cmp	r6, r3
 8011d4c:	bf28      	it	cs
 8011d4e:	461e      	movcs	r6, r3
 8011d50:	462b      	mov	r3, r5
 8011d52:	4622      	mov	r2, r4
 8011d54:	2100      	movs	r1, #0
 8011d56:	a805      	add	r0, sp, #20
 8011d58:	f001 f8b4 	bl	8012ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011d5c:	e7e2      	b.n	8011d24 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8011d5e:	4630      	mov	r0, r6
 8011d60:	b01e      	add	sp, #120	; 0x78
 8011d62:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011d66:	b003      	add	sp, #12
 8011d68:	4770      	bx	lr

08011d6a <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011d6a:	b513      	push	{r0, r1, r4, lr}
 8011d6c:	6803      	ldr	r3, [r0, #0]
 8011d6e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011d72:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011d76:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011d7a:	2400      	movs	r4, #0
 8011d7c:	9400      	str	r4, [sp, #0]
 8011d7e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011d82:	691b      	ldr	r3, [r3, #16]
 8011d84:	4669      	mov	r1, sp
 8011d86:	4798      	blx	r3
 8011d88:	b002      	add	sp, #8
 8011d8a:	bd10      	pop	{r4, pc}

08011d8c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011d8c:	b538      	push	{r3, r4, r5, lr}
 8011d8e:	680b      	ldr	r3, [r1, #0]
 8011d90:	460c      	mov	r4, r1
 8011d92:	68db      	ldr	r3, [r3, #12]
 8011d94:	4605      	mov	r5, r0
 8011d96:	4798      	blx	r3
 8011d98:	6823      	ldr	r3, [r4, #0]
 8011d9a:	4620      	mov	r0, r4
 8011d9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d9e:	4629      	mov	r1, r5
 8011da0:	4798      	blx	r3
 8011da2:	4628      	mov	r0, r5
 8011da4:	bd38      	pop	{r3, r4, r5, pc}

08011da6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8011da6:	b410      	push	{r4}
 8011da8:	880a      	ldrh	r2, [r1, #0]
 8011daa:	8884      	ldrh	r4, [r0, #4]
 8011dac:	4422      	add	r2, r4
 8011dae:	800a      	strh	r2, [r1, #0]
 8011db0:	88c4      	ldrh	r4, [r0, #6]
 8011db2:	884a      	ldrh	r2, [r1, #2]
 8011db4:	4422      	add	r2, r4
 8011db6:	804a      	strh	r2, [r1, #2]
 8011db8:	6940      	ldr	r0, [r0, #20]
 8011dba:	b120      	cbz	r0, 8011dc6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011dbc:	6803      	ldr	r3, [r0, #0]
 8011dbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011dc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011dc4:	4718      	bx	r3
 8011dc6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011dca:	4770      	bx	lr

08011dcc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011dcc:	b570      	push	{r4, r5, r6, lr}
 8011dce:	8882      	ldrh	r2, [r0, #4]
 8011dd0:	880b      	ldrh	r3, [r1, #0]
 8011dd2:	4413      	add	r3, r2
 8011dd4:	800b      	strh	r3, [r1, #0]
 8011dd6:	88c2      	ldrh	r2, [r0, #6]
 8011dd8:	884b      	ldrh	r3, [r1, #2]
 8011dda:	460c      	mov	r4, r1
 8011ddc:	4413      	add	r3, r2
 8011dde:	804b      	strh	r3, [r1, #2]
 8011de0:	4605      	mov	r5, r0
 8011de2:	1d01      	adds	r1, r0, #4
 8011de4:	4620      	mov	r0, r4
 8011de6:	f7f8 fe89 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 8011dea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011dee:	2b00      	cmp	r3, #0
 8011df0:	dd0b      	ble.n	8011e0a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011df2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011df6:	2b00      	cmp	r3, #0
 8011df8:	dd07      	ble.n	8011e0a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011dfa:	6968      	ldr	r0, [r5, #20]
 8011dfc:	b128      	cbz	r0, 8011e0a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011dfe:	6803      	ldr	r3, [r0, #0]
 8011e00:	4621      	mov	r1, r4
 8011e02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011e04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e08:	4718      	bx	r3
 8011e0a:	bd70      	pop	{r4, r5, r6, pc}

08011e0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011e0c:	b570      	push	{r4, r5, r6, lr}
 8011e0e:	8882      	ldrh	r2, [r0, #4]
 8011e10:	880b      	ldrh	r3, [r1, #0]
 8011e12:	4413      	add	r3, r2
 8011e14:	800b      	strh	r3, [r1, #0]
 8011e16:	88c2      	ldrh	r2, [r0, #6]
 8011e18:	884b      	ldrh	r3, [r1, #2]
 8011e1a:	460c      	mov	r4, r1
 8011e1c:	4413      	add	r3, r2
 8011e1e:	804b      	strh	r3, [r1, #2]
 8011e20:	4605      	mov	r5, r0
 8011e22:	1d01      	adds	r1, r0, #4
 8011e24:	4620      	mov	r0, r4
 8011e26:	f7f8 fe69 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 8011e2a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011e2e:	2b00      	cmp	r3, #0
 8011e30:	dd18      	ble.n	8011e64 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011e32:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011e36:	2b00      	cmp	r3, #0
 8011e38:	dd14      	ble.n	8011e64 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011e3a:	6968      	ldr	r0, [r5, #20]
 8011e3c:	b128      	cbz	r0, 8011e4a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8011e3e:	6803      	ldr	r3, [r0, #0]
 8011e40:	4621      	mov	r1, r4
 8011e42:	691b      	ldr	r3, [r3, #16]
 8011e44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e48:	4718      	bx	r3
 8011e4a:	4b07      	ldr	r3, [pc, #28]	; (8011e68 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011e4c:	681b      	ldr	r3, [r3, #0]
 8011e4e:	3304      	adds	r3, #4
 8011e50:	429d      	cmp	r5, r3
 8011e52:	d107      	bne.n	8011e64 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011e54:	f7fe fff2 	bl	8010e3c <_ZN8touchgfx11Application11getInstanceEv>
 8011e58:	6821      	ldr	r1, [r4, #0]
 8011e5a:	6862      	ldr	r2, [r4, #4]
 8011e5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e60:	f7ff b862 	b.w	8010f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011e64:	bd70      	pop	{r4, r5, r6, pc}
 8011e66:	bf00      	nop
 8011e68:	200154cc 	.word	0x200154cc

08011e6c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011e6c:	b570      	push	{r4, r5, r6, lr}
 8011e6e:	4604      	mov	r4, r0
 8011e70:	4616      	mov	r6, r2
 8011e72:	460d      	mov	r5, r1
 8011e74:	b901      	cbnz	r1, 8011e78 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011e76:	b192      	cbz	r2, 8011e9e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011e78:	6823      	ldr	r3, [r4, #0]
 8011e7a:	4620      	mov	r0, r4
 8011e7c:	699b      	ldr	r3, [r3, #24]
 8011e7e:	4798      	blx	r3
 8011e80:	88e2      	ldrh	r2, [r4, #6]
 8011e82:	88a1      	ldrh	r1, [r4, #4]
 8011e84:	4432      	add	r2, r6
 8011e86:	4429      	add	r1, r5
 8011e88:	4620      	mov	r0, r4
 8011e8a:	b212      	sxth	r2, r2
 8011e8c:	b209      	sxth	r1, r1
 8011e8e:	f7f0 ff4b 	bl	8002d28 <_ZN8touchgfx8Drawable5setXYEss>
 8011e92:	6823      	ldr	r3, [r4, #0]
 8011e94:	4620      	mov	r0, r4
 8011e96:	699b      	ldr	r3, [r3, #24]
 8011e98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e9c:	4718      	bx	r3
 8011e9e:	bd70      	pop	{r4, r5, r6, pc}

08011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8011ea0:	b510      	push	{r4, lr}
 8011ea2:	4604      	mov	r4, r0
 8011ea4:	4608      	mov	r0, r1
 8011ea6:	2300      	movs	r3, #0
 8011ea8:	8023      	strh	r3, [r4, #0]
 8011eaa:	8063      	strh	r3, [r4, #2]
 8011eac:	6803      	ldr	r3, [r0, #0]
 8011eae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011eb2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011eb6:	80a1      	strh	r1, [r4, #4]
 8011eb8:	80e2      	strh	r2, [r4, #6]
 8011eba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ebc:	4621      	mov	r1, r4
 8011ebe:	4798      	blx	r3
 8011ec0:	4620      	mov	r0, r4
 8011ec2:	bd10      	pop	{r4, pc}

08011ec4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8011ec4:	b530      	push	{r4, r5, lr}
 8011ec6:	8083      	strh	r3, [r0, #4]
 8011ec8:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8011ecc:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8011ed0:	7183      	strb	r3, [r0, #6]
 8011ed2:	79c3      	ldrb	r3, [r0, #7]
 8011ed4:	6101      	str	r1, [r0, #16]
 8011ed6:	f365 0306 	bfi	r3, r5, #0, #7
 8011eda:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8011ede:	8282      	strh	r2, [r0, #20]
 8011ee0:	f365 13c7 	bfi	r3, r5, #7, #1
 8011ee4:	71c3      	strb	r3, [r0, #7]
 8011ee6:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8011eea:	7203      	strb	r3, [r0, #8]
 8011eec:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8011ef0:	7243      	strb	r3, [r0, #9]
 8011ef2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011ef6:	8143      	strh	r3, [r0, #10]
 8011ef8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8011efc:	8183      	strh	r3, [r0, #12]
 8011efe:	4b01      	ldr	r3, [pc, #4]	; (8011f04 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8011f00:	6003      	str	r3, [r0, #0]
 8011f02:	bd30      	pop	{r4, r5, pc}
 8011f04:	08024074 	.word	0x08024074

08011f08 <_ZNK8touchgfx9ConstFont4findEt>:
 8011f08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f0a:	6904      	ldr	r4, [r0, #16]
 8011f0c:	b3bc      	cbz	r4, 8011f7e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f0e:	88a3      	ldrh	r3, [r4, #4]
 8011f10:	8a82      	ldrh	r2, [r0, #20]
 8011f12:	1acb      	subs	r3, r1, r3
 8011f14:	f102 32ff 	add.w	r2, r2, #4294967295
 8011f18:	d431      	bmi.n	8011f7e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f1a:	4293      	cmp	r3, r2
 8011f1c:	dd0c      	ble.n	8011f38 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011f1e:	230e      	movs	r3, #14
 8011f20:	fb03 4302 	mla	r3, r3, r2, r4
 8011f24:	889b      	ldrh	r3, [r3, #4]
 8011f26:	1a5b      	subs	r3, r3, r1
 8011f28:	1ad3      	subs	r3, r2, r3
 8011f2a:	429a      	cmp	r2, r3
 8011f2c:	db27      	blt.n	8011f7e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f2e:	2b00      	cmp	r3, #0
 8011f30:	bfbc      	itt	lt
 8011f32:	2302      	movlt	r3, #2
 8011f34:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011f38:	2500      	movs	r5, #0
 8011f3a:	260e      	movs	r6, #14
 8011f3c:	4295      	cmp	r5, r2
 8011f3e:	dc1e      	bgt.n	8011f7e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f40:	fb06 4003 	mla	r0, r6, r3, r4
 8011f44:	8887      	ldrh	r7, [r0, #4]
 8011f46:	42b9      	cmp	r1, r7
 8011f48:	d01a      	beq.n	8011f80 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011f4a:	d20d      	bcs.n	8011f68 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011f4c:	1e5a      	subs	r2, r3, #1
 8011f4e:	4295      	cmp	r5, r2
 8011f50:	dc15      	bgt.n	8011f7e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f52:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011f56:	1a5b      	subs	r3, r3, r1
 8011f58:	1ad3      	subs	r3, r2, r3
 8011f5a:	429a      	cmp	r2, r3
 8011f5c:	db0f      	blt.n	8011f7e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f5e:	429d      	cmp	r5, r3
 8011f60:	ddec      	ble.n	8011f3c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011f62:	1953      	adds	r3, r2, r5
 8011f64:	105b      	asrs	r3, r3, #1
 8011f66:	e7e9      	b.n	8011f3c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011f68:	1c5d      	adds	r5, r3, #1
 8011f6a:	42aa      	cmp	r2, r5
 8011f6c:	db07      	blt.n	8011f7e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f6e:	8a43      	ldrh	r3, [r0, #18]
 8011f70:	1acb      	subs	r3, r1, r3
 8011f72:	442b      	add	r3, r5
 8011f74:	429d      	cmp	r5, r3
 8011f76:	dc02      	bgt.n	8011f7e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f78:	429a      	cmp	r2, r3
 8011f7a:	dadf      	bge.n	8011f3c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011f7c:	e7f1      	b.n	8011f62 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011f7e:	2000      	movs	r0, #0
 8011f80:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011f82 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011f82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011f84:	4604      	mov	r4, r0
 8011f86:	4617      	mov	r7, r2
 8011f88:	461e      	mov	r6, r3
 8011f8a:	b911      	cbnz	r1, 8011f92 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011f8c:	2500      	movs	r5, #0
 8011f8e:	4628      	mov	r0, r5
 8011f90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011f92:	290a      	cmp	r1, #10
 8011f94:	d0fa      	beq.n	8011f8c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011f96:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011f9a:	4291      	cmp	r1, r2
 8011f9c:	d0f6      	beq.n	8011f8c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011f9e:	f242 020b 	movw	r2, #8203	; 0x200b
 8011fa2:	4291      	cmp	r1, r2
 8011fa4:	d0f2      	beq.n	8011f8c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011fa6:	f7ff ffaf 	bl	8011f08 <_ZNK8touchgfx9ConstFont4findEt>
 8011faa:	4605      	mov	r5, r0
 8011fac:	b950      	cbnz	r0, 8011fc4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011fae:	6823      	ldr	r3, [r4, #0]
 8011fb0:	4620      	mov	r0, r4
 8011fb2:	691b      	ldr	r3, [r3, #16]
 8011fb4:	4798      	blx	r3
 8011fb6:	4601      	mov	r1, r0
 8011fb8:	4620      	mov	r0, r4
 8011fba:	f7ff ffa5 	bl	8011f08 <_ZNK8touchgfx9ConstFont4findEt>
 8011fbe:	4605      	mov	r5, r0
 8011fc0:	2800      	cmp	r0, #0
 8011fc2:	d0e3      	beq.n	8011f8c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011fc4:	6823      	ldr	r3, [r4, #0]
 8011fc6:	4629      	mov	r1, r5
 8011fc8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011fca:	4620      	mov	r0, r4
 8011fcc:	4798      	blx	r3
 8011fce:	6038      	str	r0, [r7, #0]
 8011fd0:	6823      	ldr	r3, [r4, #0]
 8011fd2:	4620      	mov	r0, r4
 8011fd4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011fd6:	4798      	blx	r3
 8011fd8:	7030      	strb	r0, [r6, #0]
 8011fda:	e7d8      	b.n	8011f8e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011fdc <_ZN8touchgfx4clzuEm>:
 8011fdc:	4603      	mov	r3, r0
 8011fde:	b1c8      	cbz	r0, 8012014 <_ZN8touchgfx4clzuEm+0x38>
 8011fe0:	0c02      	lsrs	r2, r0, #16
 8011fe2:	0412      	lsls	r2, r2, #16
 8011fe4:	b9a2      	cbnz	r2, 8012010 <_ZN8touchgfx4clzuEm+0x34>
 8011fe6:	0403      	lsls	r3, r0, #16
 8011fe8:	2010      	movs	r0, #16
 8011fea:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011fee:	bf04      	itt	eq
 8011ff0:	021b      	lsleq	r3, r3, #8
 8011ff2:	3008      	addeq	r0, #8
 8011ff4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011ff8:	bf04      	itt	eq
 8011ffa:	011b      	lsleq	r3, r3, #4
 8011ffc:	3004      	addeq	r0, #4
 8011ffe:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012002:	bf04      	itt	eq
 8012004:	009b      	lsleq	r3, r3, #2
 8012006:	3002      	addeq	r0, #2
 8012008:	2b00      	cmp	r3, #0
 801200a:	db04      	blt.n	8012016 <_ZN8touchgfx4clzuEm+0x3a>
 801200c:	3001      	adds	r0, #1
 801200e:	4770      	bx	lr
 8012010:	2000      	movs	r0, #0
 8012012:	e7ea      	b.n	8011fea <_ZN8touchgfx4clzuEm+0xe>
 8012014:	2020      	movs	r0, #32
 8012016:	4770      	bx	lr

08012018 <_ZN8touchgfx7muldivuEmmmRm>:
 8012018:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801201c:	4680      	mov	r8, r0
 801201e:	460f      	mov	r7, r1
 8012020:	4615      	mov	r5, r2
 8012022:	461e      	mov	r6, r3
 8012024:	f7ff ffda 	bl	8011fdc <_ZN8touchgfx4clzuEm>
 8012028:	b998      	cbnz	r0, 8012052 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801202a:	4608      	mov	r0, r1
 801202c:	f7ff ffd6 	bl	8011fdc <_ZN8touchgfx4clzuEm>
 8012030:	2800      	cmp	r0, #0
 8012032:	dd08      	ble.n	8012046 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012034:	4633      	mov	r3, r6
 8012036:	462a      	mov	r2, r5
 8012038:	4641      	mov	r1, r8
 801203a:	4638      	mov	r0, r7
 801203c:	f7ff ffec 	bl	8012018 <_ZN8touchgfx7muldivuEmmmRm>
 8012040:	b003      	add	sp, #12
 8012042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012046:	f04f 33ff 	mov.w	r3, #4294967295
 801204a:	6033      	str	r3, [r6, #0]
 801204c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012050:	e7f6      	b.n	8012040 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012052:	fa31 f900 	lsrs.w	r9, r1, r0
 8012056:	fb01 f308 	mul.w	r3, r1, r8
 801205a:	d105      	bne.n	8012068 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 801205c:	fbb3 f0f5 	udiv	r0, r3, r5
 8012060:	fb05 3510 	mls	r5, r5, r0, r3
 8012064:	6035      	str	r5, [r6, #0]
 8012066:	e7eb      	b.n	8012040 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012068:	2301      	movs	r3, #1
 801206a:	fa08 fb00 	lsl.w	fp, r8, r0
 801206e:	fa03 f000 	lsl.w	r0, r3, r0
 8012072:	3801      	subs	r0, #1
 8012074:	462a      	mov	r2, r5
 8012076:	4633      	mov	r3, r6
 8012078:	4641      	mov	r1, r8
 801207a:	4038      	ands	r0, r7
 801207c:	f7ff ffcc 	bl	8012018 <_ZN8touchgfx7muldivuEmmmRm>
 8012080:	fbbb faf5 	udiv	sl, fp, r5
 8012084:	462a      	mov	r2, r5
 8012086:	4607      	mov	r7, r0
 8012088:	ab01      	add	r3, sp, #4
 801208a:	fb05 b11a 	mls	r1, r5, sl, fp
 801208e:	4648      	mov	r0, r9
 8012090:	f7ff ffc2 	bl	8012018 <_ZN8touchgfx7muldivuEmmmRm>
 8012094:	9b01      	ldr	r3, [sp, #4]
 8012096:	6832      	ldr	r2, [r6, #0]
 8012098:	fb09 f40a 	mul.w	r4, r9, sl
 801209c:	441a      	add	r2, r3
 801209e:	fbb2 f3f5 	udiv	r3, r2, r5
 80120a2:	441c      	add	r4, r3
 80120a4:	443c      	add	r4, r7
 80120a6:	4420      	add	r0, r4
 80120a8:	fb05 2513 	mls	r5, r5, r3, r2
 80120ac:	e7da      	b.n	8012064 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

080120ae <_ZN8touchgfx6muldivElllRl>:
 80120ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80120b0:	2800      	cmp	r0, #0
 80120b2:	bfba      	itte	lt
 80120b4:	4240      	neglt	r0, r0
 80120b6:	f04f 34ff 	movlt.w	r4, #4294967295
 80120ba:	2401      	movge	r4, #1
 80120bc:	2900      	cmp	r1, #0
 80120be:	bfbc      	itt	lt
 80120c0:	4249      	neglt	r1, r1
 80120c2:	4264      	neglt	r4, r4
 80120c4:	2a00      	cmp	r2, #0
 80120c6:	bfb6      	itet	lt
 80120c8:	4265      	neglt	r5, r4
 80120ca:	4625      	movge	r5, r4
 80120cc:	4252      	neglt	r2, r2
 80120ce:	4288      	cmp	r0, r1
 80120d0:	461e      	mov	r6, r3
 80120d2:	bfc2      	ittt	gt
 80120d4:	4603      	movgt	r3, r0
 80120d6:	4608      	movgt	r0, r1
 80120d8:	4619      	movgt	r1, r3
 80120da:	ab01      	add	r3, sp, #4
 80120dc:	f7ff ff9c 	bl	8012018 <_ZN8touchgfx7muldivuEmmmRm>
 80120e0:	9b01      	ldr	r3, [sp, #4]
 80120e2:	4368      	muls	r0, r5
 80120e4:	435c      	muls	r4, r3
 80120e6:	6034      	str	r4, [r6, #0]
 80120e8:	b002      	add	sp, #8
 80120ea:	bd70      	pop	{r4, r5, r6, pc}

080120ec <_ZN8touchgfx6muldivElll>:
 80120ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80120ee:	4606      	mov	r6, r0
 80120f0:	ab01      	add	r3, sp, #4
 80120f2:	460d      	mov	r5, r1
 80120f4:	4614      	mov	r4, r2
 80120f6:	f7ff ffda 	bl	80120ae <_ZN8touchgfx6muldivElllRl>
 80120fa:	2e00      	cmp	r6, #0
 80120fc:	db20      	blt.n	8012140 <_ZN8touchgfx6muldivElll+0x54>
 80120fe:	bf14      	ite	ne
 8012100:	2301      	movne	r3, #1
 8012102:	2300      	moveq	r3, #0
 8012104:	2d00      	cmp	r5, #0
 8012106:	db1e      	blt.n	8012146 <_ZN8touchgfx6muldivElll+0x5a>
 8012108:	bf14      	ite	ne
 801210a:	2201      	movne	r2, #1
 801210c:	2200      	moveq	r2, #0
 801210e:	2c00      	cmp	r4, #0
 8012110:	fb03 f202 	mul.w	r2, r3, r2
 8012114:	db1a      	blt.n	801214c <_ZN8touchgfx6muldivElll+0x60>
 8012116:	bf14      	ite	ne
 8012118:	2301      	movne	r3, #1
 801211a:	2300      	moveq	r3, #0
 801211c:	4353      	muls	r3, r2
 801211e:	2b01      	cmp	r3, #1
 8012120:	d117      	bne.n	8012152 <_ZN8touchgfx6muldivElll+0x66>
 8012122:	9b01      	ldr	r3, [sp, #4]
 8012124:	2c00      	cmp	r4, #0
 8012126:	bfb8      	it	lt
 8012128:	4264      	neglt	r4, r4
 801212a:	2b00      	cmp	r3, #0
 801212c:	f104 0401 	add.w	r4, r4, #1
 8012130:	bfb8      	it	lt
 8012132:	425b      	neglt	r3, r3
 8012134:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8012138:	db00      	blt.n	801213c <_ZN8touchgfx6muldivElll+0x50>
 801213a:	3001      	adds	r0, #1
 801213c:	b002      	add	sp, #8
 801213e:	bd70      	pop	{r4, r5, r6, pc}
 8012140:	f04f 33ff 	mov.w	r3, #4294967295
 8012144:	e7de      	b.n	8012104 <_ZN8touchgfx6muldivElll+0x18>
 8012146:	f04f 32ff 	mov.w	r2, #4294967295
 801214a:	e7e0      	b.n	801210e <_ZN8touchgfx6muldivElll+0x22>
 801214c:	f04f 33ff 	mov.w	r3, #4294967295
 8012150:	e7e4      	b.n	801211c <_ZN8touchgfx6muldivElll+0x30>
 8012152:	3301      	adds	r3, #1
 8012154:	d1f2      	bne.n	801213c <_ZN8touchgfx6muldivElll+0x50>
 8012156:	9b01      	ldr	r3, [sp, #4]
 8012158:	2c00      	cmp	r4, #0
 801215a:	bfb8      	it	lt
 801215c:	4264      	neglt	r4, r4
 801215e:	2b00      	cmp	r3, #0
 8012160:	bfb8      	it	lt
 8012162:	425b      	neglt	r3, r3
 8012164:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8012168:	bfc8      	it	gt
 801216a:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801216e:	e7e5      	b.n	801213c <_ZN8touchgfx6muldivElll+0x50>

08012170 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012170:	2000      	movs	r0, #0
 8012172:	4770      	bx	lr

08012174 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012174:	2001      	movs	r0, #1
 8012176:	4770      	bx	lr

08012178 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8012178:	2002      	movs	r0, #2
 801217a:	4770      	bx	lr

0801217c <_ZN8touchgfx6ScreenD1Ev>:
 801217c:	4770      	bx	lr

0801217e <_ZN8touchgfx12GestureEventD1Ev>:
 801217e:	4770      	bx	lr

08012180 <_ZN8touchgfx9DragEventD1Ev>:
 8012180:	4770      	bx	lr

08012182 <_ZN8touchgfx10ClickEventD1Ev>:
 8012182:	4770      	bx	lr

08012184 <_ZN8touchgfx10ClickEventD0Ev>:
 8012184:	b510      	push	{r4, lr}
 8012186:	210c      	movs	r1, #12
 8012188:	4604      	mov	r4, r0
 801218a:	f00e f973 	bl	8020474 <_ZdlPvj>
 801218e:	4620      	mov	r0, r4
 8012190:	bd10      	pop	{r4, pc}

08012192 <_ZN8touchgfx9DragEventD0Ev>:
 8012192:	b510      	push	{r4, lr}
 8012194:	2110      	movs	r1, #16
 8012196:	4604      	mov	r4, r0
 8012198:	f00e f96c 	bl	8020474 <_ZdlPvj>
 801219c:	4620      	mov	r0, r4
 801219e:	bd10      	pop	{r4, pc}

080121a0 <_ZN8touchgfx12GestureEventD0Ev>:
 80121a0:	b510      	push	{r4, lr}
 80121a2:	210c      	movs	r1, #12
 80121a4:	4604      	mov	r4, r0
 80121a6:	f00e f965 	bl	8020474 <_ZdlPvj>
 80121aa:	4620      	mov	r0, r4
 80121ac:	bd10      	pop	{r4, pc}

080121ae <_ZN8touchgfx6ScreenD0Ev>:
 80121ae:	b510      	push	{r4, lr}
 80121b0:	213c      	movs	r1, #60	; 0x3c
 80121b2:	4604      	mov	r4, r0
 80121b4:	f00e f95e 	bl	8020474 <_ZdlPvj>
 80121b8:	4620      	mov	r0, r4
 80121ba:	bd10      	pop	{r4, pc}

080121bc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80121bc:	b530      	push	{r4, r5, lr}
 80121be:	460d      	mov	r5, r1
 80121c0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80121c2:	b087      	sub	sp, #28
 80121c4:	4604      	mov	r4, r0
 80121c6:	b301      	cbz	r1, 801220a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80121c8:	a801      	add	r0, sp, #4
 80121ca:	f7ff fe69 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80121ce:	892a      	ldrh	r2, [r5, #8]
 80121d0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80121d4:	7928      	ldrb	r0, [r5, #4]
 80121d6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80121da:	f88d 0010 	strb.w	r0, [sp, #16]
 80121de:	1ad2      	subs	r2, r2, r3
 80121e0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80121e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80121e4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80121e8:	441a      	add	r2, r3
 80121ea:	896b      	ldrh	r3, [r5, #10]
 80121ec:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80121f0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80121f4:	1b5b      	subs	r3, r3, r5
 80121f6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80121f8:	442b      	add	r3, r5
 80121fa:	4d05      	ldr	r5, [pc, #20]	; (8012210 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80121fc:	9503      	str	r5, [sp, #12]
 80121fe:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012202:	6803      	ldr	r3, [r0, #0]
 8012204:	a903      	add	r1, sp, #12
 8012206:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012208:	4798      	blx	r3
 801220a:	b007      	add	sp, #28
 801220c:	bd30      	pop	{r4, r5, pc}
 801220e:	bf00      	nop
 8012210:	080240f4 	.word	0x080240f4

08012214 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012214:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012218:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801221a:	b08a      	sub	sp, #40	; 0x28
 801221c:	4604      	mov	r4, r0
 801221e:	460d      	mov	r5, r1
 8012220:	b113      	cbz	r3, 8012228 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012222:	790b      	ldrb	r3, [r1, #4]
 8012224:	2b00      	cmp	r3, #0
 8012226:	d044      	beq.n	80122b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012228:	f104 0804 	add.w	r8, r4, #4
 801222c:	4641      	mov	r1, r8
 801222e:	a803      	add	r0, sp, #12
 8012230:	f7ff fe36 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012234:	792b      	ldrb	r3, [r5, #4]
 8012236:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801223a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801223e:	b983      	cbnz	r3, 8012262 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012240:	892a      	ldrh	r2, [r5, #8]
 8012242:	88e9      	ldrh	r1, [r5, #6]
 8012244:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8012248:	1b92      	subs	r2, r2, r6
 801224a:	1bc9      	subs	r1, r1, r7
 801224c:	9301      	str	r3, [sp, #4]
 801224e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012252:	9300      	str	r3, [sp, #0]
 8012254:	b212      	sxth	r2, r2
 8012256:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801225a:	b209      	sxth	r1, r1
 801225c:	4640      	mov	r0, r8
 801225e:	f7f8 fb69 	bl	800a934 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012262:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012264:	b329      	cbz	r1, 80122b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012266:	a805      	add	r0, sp, #20
 8012268:	f7ff fe1a 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801226c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012270:	792b      	ldrb	r3, [r5, #4]
 8012272:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012274:	f88d 3020 	strb.w	r3, [sp, #32]
 8012278:	1abf      	subs	r7, r7, r2
 801227a:	88ea      	ldrh	r2, [r5, #6]
 801227c:	4417      	add	r7, r2
 801227e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8012280:	4417      	add	r7, r2
 8012282:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012286:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801228a:	1ab6      	subs	r6, r6, r2
 801228c:	892a      	ldrh	r2, [r5, #8]
 801228e:	4416      	add	r6, r2
 8012290:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012292:	4416      	add	r6, r2
 8012294:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8012298:	4a07      	ldr	r2, [pc, #28]	; (80122b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801229a:	9207      	str	r2, [sp, #28]
 801229c:	2600      	movs	r6, #0
 801229e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80122a2:	6803      	ldr	r3, [r0, #0]
 80122a4:	a907      	add	r1, sp, #28
 80122a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80122a8:	4798      	blx	r3
 80122aa:	792b      	ldrb	r3, [r5, #4]
 80122ac:	b10b      	cbz	r3, 80122b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80122ae:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80122b2:	b00a      	add	sp, #40	; 0x28
 80122b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80122b8:	080240cc 	.word	0x080240cc

080122bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80122bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80122c0:	460c      	mov	r4, r1
 80122c2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80122c4:	b088      	sub	sp, #32
 80122c6:	4605      	mov	r5, r0
 80122c8:	2900      	cmp	r1, #0
 80122ca:	d06d      	beq.n	80123a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80122cc:	4668      	mov	r0, sp
 80122ce:	f7ff fde7 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80122d2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80122d4:	88e3      	ldrh	r3, [r4, #6]
 80122d6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80122da:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80122de:	440b      	add	r3, r1
 80122e0:	b21b      	sxth	r3, r3
 80122e2:	4543      	cmp	r3, r8
 80122e4:	db31      	blt.n	801234a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80122e6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80122ea:	44c4      	add	ip, r8
 80122ec:	fa0f fc8c 	sxth.w	ip, ip
 80122f0:	4563      	cmp	r3, ip
 80122f2:	da2a      	bge.n	801234a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80122f4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80122f6:	8926      	ldrh	r6, [r4, #8]
 80122f8:	4416      	add	r6, r2
 80122fa:	b236      	sxth	r6, r6
 80122fc:	42be      	cmp	r6, r7
 80122fe:	db24      	blt.n	801234a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012300:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012304:	4438      	add	r0, r7
 8012306:	b200      	sxth	r0, r0
 8012308:	4286      	cmp	r6, r0
 801230a:	da1e      	bge.n	801234a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801230c:	8963      	ldrh	r3, [r4, #10]
 801230e:	4419      	add	r1, r3
 8012310:	b209      	sxth	r1, r1
 8012312:	4541      	cmp	r1, r8
 8012314:	db08      	blt.n	8012328 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012316:	4561      	cmp	r1, ip
 8012318:	da06      	bge.n	8012328 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801231a:	89a3      	ldrh	r3, [r4, #12]
 801231c:	441a      	add	r2, r3
 801231e:	b212      	sxth	r2, r2
 8012320:	42ba      	cmp	r2, r7
 8012322:	db01      	blt.n	8012328 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012324:	4282      	cmp	r2, r0
 8012326:	db10      	blt.n	801234a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012328:	4b21      	ldr	r3, [pc, #132]	; (80123b0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801232a:	9304      	str	r3, [sp, #16]
 801232c:	2302      	movs	r3, #2
 801232e:	f88d 3014 	strb.w	r3, [sp, #20]
 8012332:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012334:	2300      	movs	r3, #0
 8012336:	f8ad 3016 	strh.w	r3, [sp, #22]
 801233a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801233e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012342:	6803      	ldr	r3, [r0, #0]
 8012344:	a904      	add	r1, sp, #16
 8012346:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012348:	4798      	blx	r3
 801234a:	1d29      	adds	r1, r5, #4
 801234c:	a802      	add	r0, sp, #8
 801234e:	f7ff fda7 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012352:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012356:	88e0      	ldrh	r0, [r4, #6]
 8012358:	7921      	ldrb	r1, [r4, #4]
 801235a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801235e:	8922      	ldrh	r2, [r4, #8]
 8012360:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8012362:	f88d 1014 	strb.w	r1, [sp, #20]
 8012366:	eba3 0808 	sub.w	r8, r3, r8
 801236a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801236e:	1bdf      	subs	r7, r3, r7
 8012370:	b2bb      	uxth	r3, r7
 8012372:	fa1f f888 	uxth.w	r8, r8
 8012376:	8967      	ldrh	r7, [r4, #10]
 8012378:	89a4      	ldrh	r4, [r4, #12]
 801237a:	4440      	add	r0, r8
 801237c:	4460      	add	r0, ip
 801237e:	441a      	add	r2, r3
 8012380:	44b8      	add	r8, r7
 8012382:	4423      	add	r3, r4
 8012384:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012388:	4433      	add	r3, r6
 801238a:	4432      	add	r2, r6
 801238c:	44e0      	add	r8, ip
 801238e:	4c09      	ldr	r4, [pc, #36]	; (80123b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012390:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012392:	9404      	str	r4, [sp, #16]
 8012394:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012398:	f8ad 801a 	strh.w	r8, [sp, #26]
 801239c:	f8ad 301c 	strh.w	r3, [sp, #28]
 80123a0:	6803      	ldr	r3, [r0, #0]
 80123a2:	a904      	add	r1, sp, #16
 80123a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80123a6:	4798      	blx	r3
 80123a8:	b008      	add	sp, #32
 80123aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123ae:	bf00      	nop
 80123b0:	080240cc 	.word	0x080240cc
 80123b4:	080240e0 	.word	0x080240e0

080123b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80123b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80123ba:	4604      	mov	r4, r0
 80123bc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80123c0:	3201      	adds	r2, #1
 80123c2:	d112      	bne.n	80123ea <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80123c4:	6803      	ldr	r3, [r0, #0]
 80123c6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80123ca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80123ce:	f8ad 1004 	strh.w	r1, [sp, #4]
 80123d2:	2500      	movs	r5, #0
 80123d4:	9500      	str	r5, [sp, #0]
 80123d6:	466d      	mov	r5, sp
 80123d8:	4629      	mov	r1, r5
 80123da:	f8ad 2006 	strh.w	r2, [sp, #6]
 80123de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80123e0:	4798      	blx	r3
 80123e2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80123e6:	e884 0003 	stmia.w	r4, {r0, r1}
 80123ea:	4620      	mov	r0, r4
 80123ec:	b003      	add	sp, #12
 80123ee:	bd30      	pop	{r4, r5, pc}

080123f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80123f0:	b513      	push	{r0, r1, r4, lr}
 80123f2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80123f6:	3301      	adds	r3, #1
 80123f8:	4604      	mov	r4, r0
 80123fa:	d109      	bne.n	8012410 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80123fc:	4601      	mov	r1, r0
 80123fe:	4668      	mov	r0, sp
 8012400:	f7ff fd4e 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012404:	f8bd 3000 	ldrh.w	r3, [sp]
 8012408:	8423      	strh	r3, [r4, #32]
 801240a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801240e:	8463      	strh	r3, [r4, #34]	; 0x22
 8012410:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012414:	b002      	add	sp, #8
 8012416:	bd10      	pop	{r4, pc}

08012418 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012418:	b513      	push	{r0, r1, r4, lr}
 801241a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801241e:	3301      	adds	r3, #1
 8012420:	4604      	mov	r4, r0
 8012422:	d109      	bne.n	8012438 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012424:	4601      	mov	r1, r0
 8012426:	4668      	mov	r0, sp
 8012428:	f7ff fd3a 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801242c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012430:	8423      	strh	r3, [r4, #32]
 8012432:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012436:	8463      	strh	r3, [r4, #34]	; 0x22
 8012438:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801243c:	b002      	add	sp, #8
 801243e:	bd10      	pop	{r4, pc}

08012440 <_ZN8touchgfx6ScreenC1Ev>:
 8012440:	b570      	push	{r4, r5, r6, lr}
 8012442:	4605      	mov	r5, r0
 8012444:	4b16      	ldr	r3, [pc, #88]	; (80124a0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012446:	f845 3b04 	str.w	r3, [r5], #4
 801244a:	2300      	movs	r3, #0
 801244c:	8103      	strh	r3, [r0, #8]
 801244e:	8143      	strh	r3, [r0, #10]
 8012450:	8183      	strh	r3, [r0, #12]
 8012452:	81c3      	strh	r3, [r0, #14]
 8012454:	8203      	strh	r3, [r0, #16]
 8012456:	8243      	strh	r3, [r0, #18]
 8012458:	8283      	strh	r3, [r0, #20]
 801245a:	82c3      	strh	r3, [r0, #22]
 801245c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012460:	6203      	str	r3, [r0, #32]
 8012462:	8483      	strh	r3, [r0, #36]	; 0x24
 8012464:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012466:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801246a:	4a0e      	ldr	r2, [pc, #56]	; (80124a4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801246c:	6343      	str	r3, [r0, #52]	; 0x34
 801246e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8012472:	4b0d      	ldr	r3, [pc, #52]	; (80124a8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012474:	6042      	str	r2, [r0, #4]
 8012476:	f9b3 6000 	ldrsh.w	r6, [r3]
 801247a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801247c:	4a0b      	ldr	r2, [pc, #44]	; (80124ac <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801247e:	4604      	mov	r4, r0
 8012480:	2101      	movs	r1, #1
 8012482:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8012486:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801248a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801248e:	4628      	mov	r0, r5
 8012490:	4798      	blx	r3
 8012492:	6863      	ldr	r3, [r4, #4]
 8012494:	4628      	mov	r0, r5
 8012496:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012498:	4631      	mov	r1, r6
 801249a:	4798      	blx	r3
 801249c:	4620      	mov	r0, r4
 801249e:	bd70      	pop	{r4, r5, r6, pc}
 80124a0:	08024108 	.word	0x08024108
 80124a4:	08023524 	.word	0x08023524
 80124a8:	2001547e 	.word	0x2001547e
 80124ac:	2001547c 	.word	0x2001547c

080124b0 <_ZN8touchgfx6Screen4drawEv>:
 80124b0:	b507      	push	{r0, r1, r2, lr}
 80124b2:	4b09      	ldr	r3, [pc, #36]	; (80124d8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80124b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80124b8:	4b08      	ldr	r3, [pc, #32]	; (80124dc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80124ba:	f8ad 2004 	strh.w	r2, [sp, #4]
 80124be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80124c2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80124c6:	6803      	ldr	r3, [r0, #0]
 80124c8:	2100      	movs	r1, #0
 80124ca:	9100      	str	r1, [sp, #0]
 80124cc:	689b      	ldr	r3, [r3, #8]
 80124ce:	4669      	mov	r1, sp
 80124d0:	4798      	blx	r3
 80124d2:	b003      	add	sp, #12
 80124d4:	f85d fb04 	ldr.w	pc, [sp], #4
 80124d8:	2001547c 	.word	0x2001547c
 80124dc:	2001547e 	.word	0x2001547e

080124e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80124e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124e4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80124e8:	2b00      	cmp	r3, #0
 80124ea:	b089      	sub	sp, #36	; 0x24
 80124ec:	4680      	mov	r8, r0
 80124ee:	460c      	mov	r4, r1
 80124f0:	4615      	mov	r5, r2
 80124f2:	dd0e      	ble.n	8012512 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80124f4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80124f8:	2b00      	cmp	r3, #0
 80124fa:	dd0a      	ble.n	8012512 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80124fc:	4628      	mov	r0, r5
 80124fe:	f7ff ff5b 	bl	80123b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012502:	4621      	mov	r1, r4
 8012504:	f7fe fc01 	bl	8010d0a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012508:	69eb      	ldr	r3, [r5, #28]
 801250a:	b928      	cbnz	r0, 8012518 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801250c:	461d      	mov	r5, r3
 801250e:	2b00      	cmp	r3, #0
 8012510:	d1f4      	bne.n	80124fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012512:	b009      	add	sp, #36	; 0x24
 8012514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012518:	ae04      	add	r6, sp, #16
 801251a:	2b00      	cmp	r3, #0
 801251c:	f000 80b5 	beq.w	801268a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012520:	682b      	ldr	r3, [r5, #0]
 8012522:	4629      	mov	r1, r5
 8012524:	68db      	ldr	r3, [r3, #12]
 8012526:	a802      	add	r0, sp, #8
 8012528:	4798      	blx	r3
 801252a:	4628      	mov	r0, r5
 801252c:	f7ff ff60 	bl	80123f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012530:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012534:	4407      	add	r7, r0
 8012536:	4628      	mov	r0, r5
 8012538:	f7ff ff6e 	bl	8012418 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801253c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012540:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012544:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012548:	4418      	add	r0, r3
 801254a:	4621      	mov	r1, r4
 801254c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012550:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012554:	b23f      	sxth	r7, r7
 8012556:	4630      	mov	r0, r6
 8012558:	f8ad 3016 	strh.w	r3, [sp, #22]
 801255c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012560:	f7f8 facc 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 8012564:	4628      	mov	r0, r5
 8012566:	f7ff ff27 	bl	80123b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801256a:	4602      	mov	r2, r0
 801256c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012570:	ab06      	add	r3, sp, #24
 8012572:	e883 0003 	stmia.w	r3, {r0, r1}
 8012576:	4611      	mov	r1, r2
 8012578:	4618      	mov	r0, r3
 801257a:	f7f8 fabf 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 801257e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012582:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012586:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801258a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801258e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012592:	4299      	cmp	r1, r3
 8012594:	d10b      	bne.n	80125ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012596:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801259a:	4552      	cmp	r2, sl
 801259c:	d107      	bne.n	80125ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801259e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80125a2:	455a      	cmp	r2, fp
 80125a4:	d103      	bne.n	80125ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80125a6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80125aa:	454a      	cmp	r2, r9
 80125ac:	d06d      	beq.n	801268a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80125ae:	f1bb 0f00 	cmp.w	fp, #0
 80125b2:	dd65      	ble.n	8012680 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80125b4:	f1b9 0f00 	cmp.w	r9, #0
 80125b8:	dd62      	ble.n	8012680 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80125ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80125be:	fa1f f08a 	uxth.w	r0, sl
 80125c2:	4552      	cmp	r2, sl
 80125c4:	9000      	str	r0, [sp, #0]
 80125c6:	da12      	bge.n	80125ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80125c8:	9301      	str	r3, [sp, #4]
 80125ca:	9b00      	ldr	r3, [sp, #0]
 80125cc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80125d0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80125d4:	1a9a      	subs	r2, r3, r2
 80125d6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80125da:	f8ad 0014 	strh.w	r0, [sp, #20]
 80125de:	f8ad 2016 	strh.w	r2, [sp, #22]
 80125e2:	69ea      	ldr	r2, [r5, #28]
 80125e4:	4631      	mov	r1, r6
 80125e6:	4640      	mov	r0, r8
 80125e8:	f7ff ff7a 	bl	80124e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80125ec:	9b01      	ldr	r3, [sp, #4]
 80125ee:	f9b4 2000 	ldrsh.w	r2, [r4]
 80125f2:	429a      	cmp	r2, r3
 80125f4:	b29f      	uxth	r7, r3
 80125f6:	da0d      	bge.n	8012614 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80125f8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80125fc:	1aba      	subs	r2, r7, r2
 80125fe:	f8ad a012 	strh.w	sl, [sp, #18]
 8012602:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012606:	f8ad 9016 	strh.w	r9, [sp, #22]
 801260a:	69ea      	ldr	r2, [r5, #28]
 801260c:	4631      	mov	r1, r6
 801260e:	4640      	mov	r0, r8
 8012610:	f7ff ff66 	bl	80124e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012614:	8822      	ldrh	r2, [r4, #0]
 8012616:	88a3      	ldrh	r3, [r4, #4]
 8012618:	445f      	add	r7, fp
 801261a:	4413      	add	r3, r2
 801261c:	b29b      	uxth	r3, r3
 801261e:	b2bf      	uxth	r7, r7
 8012620:	b23a      	sxth	r2, r7
 8012622:	b219      	sxth	r1, r3
 8012624:	4291      	cmp	r1, r2
 8012626:	dd0d      	ble.n	8012644 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012628:	1bdb      	subs	r3, r3, r7
 801262a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801262e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012632:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012636:	f8ad 9016 	strh.w	r9, [sp, #22]
 801263a:	69ea      	ldr	r2, [r5, #28]
 801263c:	4631      	mov	r1, r6
 801263e:	4640      	mov	r0, r8
 8012640:	f7ff ff4e 	bl	80124e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012644:	88e2      	ldrh	r2, [r4, #6]
 8012646:	8863      	ldrh	r3, [r4, #2]
 8012648:	4413      	add	r3, r2
 801264a:	9a00      	ldr	r2, [sp, #0]
 801264c:	444a      	add	r2, r9
 801264e:	b29b      	uxth	r3, r3
 8012650:	fa1f f982 	uxth.w	r9, r2
 8012654:	fa0f f289 	sxth.w	r2, r9
 8012658:	b219      	sxth	r1, r3
 801265a:	428a      	cmp	r2, r1
 801265c:	da15      	bge.n	801268a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801265e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012662:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012666:	f8ad 1014 	strh.w	r1, [sp, #20]
 801266a:	eba3 0309 	sub.w	r3, r3, r9
 801266e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012672:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012676:	f8ad 3016 	strh.w	r3, [sp, #22]
 801267a:	69ea      	ldr	r2, [r5, #28]
 801267c:	4631      	mov	r1, r6
 801267e:	e001      	b.n	8012684 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012680:	69ea      	ldr	r2, [r5, #28]
 8012682:	4621      	mov	r1, r4
 8012684:	4640      	mov	r0, r8
 8012686:	f7ff ff2b 	bl	80124e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801268a:	4628      	mov	r0, r5
 801268c:	f7ff fe94 	bl	80123b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012690:	6861      	ldr	r1, [r4, #4]
 8012692:	4602      	mov	r2, r0
 8012694:	6820      	ldr	r0, [r4, #0]
 8012696:	4633      	mov	r3, r6
 8012698:	c303      	stmia	r3!, {r0, r1}
 801269a:	4611      	mov	r1, r2
 801269c:	4630      	mov	r0, r6
 801269e:	f7f8 fa2d 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 80126a2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80126a6:	2b00      	cmp	r3, #0
 80126a8:	f77f af33 	ble.w	8012512 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80126ac:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80126b0:	2b00      	cmp	r3, #0
 80126b2:	f77f af2e 	ble.w	8012512 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80126b6:	4628      	mov	r0, r5
 80126b8:	f7ff fe9a 	bl	80123f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80126bc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80126c0:	1a18      	subs	r0, r3, r0
 80126c2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80126c6:	4628      	mov	r0, r5
 80126c8:	f7ff fea6 	bl	8012418 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80126cc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80126d0:	1a18      	subs	r0, r3, r0
 80126d2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80126d6:	682b      	ldr	r3, [r5, #0]
 80126d8:	4631      	mov	r1, r6
 80126da:	689b      	ldr	r3, [r3, #8]
 80126dc:	4628      	mov	r0, r5
 80126de:	4798      	blx	r3
 80126e0:	e717      	b.n	8012512 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080126e2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80126e2:	b570      	push	{r4, r5, r6, lr}
 80126e4:	460c      	mov	r4, r1
 80126e6:	b086      	sub	sp, #24
 80126e8:	1d06      	adds	r6, r0, #4
 80126ea:	2300      	movs	r3, #0
 80126ec:	4631      	mov	r1, r6
 80126ee:	4605      	mov	r5, r0
 80126f0:	a802      	add	r0, sp, #8
 80126f2:	9301      	str	r3, [sp, #4]
 80126f4:	f7ff fbd4 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80126f8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80126fc:	8822      	ldrh	r2, [r4, #0]
 80126fe:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012702:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012706:	f8ad 0014 	strh.w	r0, [sp, #20]
 801270a:	1ad2      	subs	r2, r2, r3
 801270c:	8863      	ldrh	r3, [r4, #2]
 801270e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012712:	1a5b      	subs	r3, r3, r1
 8012714:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012718:	f8ad 1016 	strh.w	r1, [sp, #22]
 801271c:	aa01      	add	r2, sp, #4
 801271e:	a904      	add	r1, sp, #16
 8012720:	4630      	mov	r0, r6
 8012722:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012726:	f7f8 fac1 	bl	800acac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801272a:	9a01      	ldr	r2, [sp, #4]
 801272c:	b11a      	cbz	r2, 8012736 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801272e:	4621      	mov	r1, r4
 8012730:	4628      	mov	r0, r5
 8012732:	f7ff fed5 	bl	80124e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012736:	b006      	add	sp, #24
 8012738:	bd70      	pop	{r4, r5, r6, pc}

0801273a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801273a:	b530      	push	{r4, r5, lr}
 801273c:	4602      	mov	r2, r0
 801273e:	4604      	mov	r4, r0
 8012740:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012744:	b085      	sub	sp, #20
 8012746:	460d      	mov	r5, r1
 8012748:	6851      	ldr	r1, [r2, #4]
 801274a:	466b      	mov	r3, sp
 801274c:	c303      	stmia	r3!, {r0, r1}
 801274e:	4629      	mov	r1, r5
 8012750:	4668      	mov	r0, sp
 8012752:	f7f8 f9d3 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 8012756:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801275a:	b12b      	cbz	r3, 8012768 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801275c:	4669      	mov	r1, sp
 801275e:	4620      	mov	r0, r4
 8012760:	f7ff ffbf 	bl	80126e2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012764:	b005      	add	sp, #20
 8012766:	bd30      	pop	{r4, r5, pc}
 8012768:	3404      	adds	r4, #4
 801276a:	4621      	mov	r1, r4
 801276c:	a802      	add	r0, sp, #8
 801276e:	f7ff fb97 	bl	8011ea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012772:	f8bd 3000 	ldrh.w	r3, [sp]
 8012776:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801277a:	1a9b      	subs	r3, r3, r2
 801277c:	f8ad 3000 	strh.w	r3, [sp]
 8012780:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012784:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012788:	4669      	mov	r1, sp
 801278a:	1a9b      	subs	r3, r3, r2
 801278c:	4620      	mov	r0, r4
 801278e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012792:	f7f8 fa52 	bl	800ac3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012796:	e7e5      	b.n	8012764 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012798 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012798:	680a      	ldr	r2, [r1, #0]
 801279a:	460b      	mov	r3, r1
 801279c:	6992      	ldr	r2, [r2, #24]
 801279e:	1d01      	adds	r1, r0, #4
 80127a0:	4618      	mov	r0, r3
 80127a2:	4710      	bx	r2

080127a4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80127a4:	4298      	cmp	r0, r3
 80127a6:	d200      	bcs.n	80127aa <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80127a8:	b913      	cbnz	r3, 80127b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80127aa:	440a      	add	r2, r1
 80127ac:	b210      	sxth	r0, r2
 80127ae:	4770      	bx	lr
 80127b0:	ee07 0a90 	vmov	s15, r0
 80127b4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80127b8:	ee07 3a90 	vmov	s15, r3
 80127bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80127c0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80127c4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80127c8:	ee37 7a66 	vsub.f32	s14, s14, s13
 80127cc:	ee07 2a90 	vmov	s15, r2
 80127d0:	ee67 5a07 	vmul.f32	s11, s14, s14
 80127d4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80127d8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80127dc:	ee07 1a90 	vmov	s15, r1
 80127e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80127e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80127e8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80127ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80127f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80127f4:	bfcc      	ite	gt
 80127f6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80127fa:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80127fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012802:	ee17 3a90 	vmov	r3, s15
 8012806:	b218      	sxth	r0, r3
 8012808:	4770      	bx	lr

0801280a <_ZN8touchgfx12TextProviderC1Ev>:
 801280a:	b538      	push	{r3, r4, r5, lr}
 801280c:	2500      	movs	r5, #0
 801280e:	2302      	movs	r3, #2
 8012810:	4604      	mov	r4, r0
 8012812:	e9c0 5500 	strd	r5, r5, [r0]
 8012816:	7403      	strb	r3, [r0, #16]
 8012818:	6145      	str	r5, [r0, #20]
 801281a:	7605      	strb	r5, [r0, #24]
 801281c:	83c5      	strh	r5, [r0, #30]
 801281e:	8405      	strh	r5, [r0, #32]
 8012820:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012822:	8705      	strh	r5, [r0, #56]	; 0x38
 8012824:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012826:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801282a:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801282e:	220e      	movs	r2, #14
 8012830:	4629      	mov	r1, r5
 8012832:	304c      	adds	r0, #76	; 0x4c
 8012834:	f00e f858 	bl	80208e8 <memset>
 8012838:	2301      	movs	r3, #1
 801283a:	4620      	mov	r0, r4
 801283c:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012840:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012844:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012848:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801284c:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012850:	f7f2 fa78 	bl	8004d44 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012854:	4620      	mov	r0, r4
 8012856:	bd38      	pop	{r3, r4, r5, pc}

08012858 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012858:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801285a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801285e:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012860:	fab0 f080 	clz	r0, r0
 8012864:	0940      	lsrs	r0, r0, #5
 8012866:	4770      	bx	lr

08012868 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012868:	b530      	push	{r4, r5, lr}
 801286a:	2500      	movs	r5, #0
 801286c:	2401      	movs	r4, #1
 801286e:	6843      	ldr	r3, [r0, #4]
 8012870:	b913      	cbnz	r3, 8012878 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012872:	6803      	ldr	r3, [r0, #0]
 8012874:	b313      	cbz	r3, 80128bc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012876:	6043      	str	r3, [r0, #4]
 8012878:	7e03      	ldrb	r3, [r0, #24]
 801287a:	b143      	cbz	r3, 801288e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801287c:	6943      	ldr	r3, [r0, #20]
 801287e:	b12b      	cbz	r3, 801288c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012880:	881a      	ldrh	r2, [r3, #0]
 8012882:	b11a      	cbz	r2, 801288c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012884:	1c9a      	adds	r2, r3, #2
 8012886:	6142      	str	r2, [r0, #20]
 8012888:	8818      	ldrh	r0, [r3, #0]
 801288a:	bd30      	pop	{r4, r5, pc}
 801288c:	7605      	strb	r5, [r0, #24]
 801288e:	6843      	ldr	r3, [r0, #4]
 8012890:	8819      	ldrh	r1, [r3, #0]
 8012892:	b199      	cbz	r1, 80128bc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012894:	1c9a      	adds	r2, r3, #2
 8012896:	2902      	cmp	r1, #2
 8012898:	6042      	str	r2, [r0, #4]
 801289a:	d1f5      	bne.n	8012888 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801289c:	7c03      	ldrb	r3, [r0, #16]
 801289e:	2b01      	cmp	r3, #1
 80128a0:	d8e5      	bhi.n	801286e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80128a2:	1c5a      	adds	r2, r3, #1
 80128a4:	3302      	adds	r3, #2
 80128a6:	7402      	strb	r2, [r0, #16]
 80128a8:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80128ac:	6143      	str	r3, [r0, #20]
 80128ae:	2b00      	cmp	r3, #0
 80128b0:	d0dd      	beq.n	801286e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80128b2:	881b      	ldrh	r3, [r3, #0]
 80128b4:	2b00      	cmp	r3, #0
 80128b6:	d0da      	beq.n	801286e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80128b8:	7604      	strb	r4, [r0, #24]
 80128ba:	e7d8      	b.n	801286e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80128bc:	2000      	movs	r0, #0
 80128be:	e7e4      	b.n	801288a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080128c0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80128c0:	b430      	push	{r4, r5}
 80128c2:	6001      	str	r1, [r0, #0]
 80128c4:	2100      	movs	r1, #0
 80128c6:	6041      	str	r1, [r0, #4]
 80128c8:	6815      	ldr	r5, [r2, #0]
 80128ca:	6085      	str	r5, [r0, #8]
 80128cc:	6852      	ldr	r2, [r2, #4]
 80128ce:	6443      	str	r3, [r0, #68]	; 0x44
 80128d0:	9b02      	ldr	r3, [sp, #8]
 80128d2:	60c2      	str	r2, [r0, #12]
 80128d4:	7401      	strb	r1, [r0, #16]
 80128d6:	6141      	str	r1, [r0, #20]
 80128d8:	7601      	strb	r1, [r0, #24]
 80128da:	8701      	strh	r1, [r0, #56]	; 0x38
 80128dc:	8401      	strh	r1, [r0, #32]
 80128de:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80128e2:	6483      	str	r3, [r0, #72]	; 0x48
 80128e4:	bc30      	pop	{r4, r5}
 80128e6:	f7f2 ba2d 	b.w	8004d44 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080128ea <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80128ea:	b408      	push	{r3}
 80128ec:	b510      	push	{r4, lr}
 80128ee:	b085      	sub	sp, #20
 80128f0:	ac07      	add	r4, sp, #28
 80128f2:	f854 3b04 	ldr.w	r3, [r4], #4
 80128f6:	9300      	str	r3, [sp, #0]
 80128f8:	4613      	mov	r3, r2
 80128fa:	4622      	mov	r2, r4
 80128fc:	9403      	str	r4, [sp, #12]
 80128fe:	f7ff ffdf 	bl	80128c0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012902:	b005      	add	sp, #20
 8012904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012908:	b001      	add	sp, #4
 801290a:	4770      	bx	lr

0801290c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801290c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801290e:	4605      	mov	r5, r0
 8012910:	4608      	mov	r0, r1
 8012912:	b1e9      	cbz	r1, 8012950 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012914:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012918:	460b      	mov	r3, r1
 801291a:	f101 0708 	add.w	r7, r1, #8
 801291e:	4622      	mov	r2, r4
 8012920:	6818      	ldr	r0, [r3, #0]
 8012922:	6859      	ldr	r1, [r3, #4]
 8012924:	4626      	mov	r6, r4
 8012926:	c603      	stmia	r6!, {r0, r1}
 8012928:	3308      	adds	r3, #8
 801292a:	42bb      	cmp	r3, r7
 801292c:	4634      	mov	r4, r6
 801292e:	d1f7      	bne.n	8012920 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012930:	6818      	ldr	r0, [r3, #0]
 8012932:	6030      	str	r0, [r6, #0]
 8012934:	889b      	ldrh	r3, [r3, #4]
 8012936:	80b3      	strh	r3, [r6, #4]
 8012938:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801293c:	015b      	lsls	r3, r3, #5
 801293e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012942:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012946:	430b      	orrs	r3, r1
 8012948:	425b      	negs	r3, r3
 801294a:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801294e:	4610      	mov	r0, r2
 8012950:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012952 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012952:	b538      	push	{r3, r4, r5, lr}
 8012954:	460c      	mov	r4, r1
 8012956:	6811      	ldr	r1, [r2, #0]
 8012958:	4610      	mov	r0, r2
 801295a:	68cd      	ldr	r5, [r1, #12]
 801295c:	4619      	mov	r1, r3
 801295e:	47a8      	blx	r5
 8012960:	2800      	cmp	r0, #0
 8012962:	bf08      	it	eq
 8012964:	4620      	moveq	r0, r4
 8012966:	bd38      	pop	{r3, r4, r5, pc}

08012968 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012968:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801296a:	4604      	mov	r4, r0
 801296c:	4615      	mov	r5, r2
 801296e:	4608      	mov	r0, r1
 8012970:	b93a      	cbnz	r2, 8012982 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012972:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012976:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801297a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801297e:	4628      	mov	r0, r5
 8012980:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012982:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012986:	8893      	ldrh	r3, [r2, #4]
 8012988:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801298c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012990:	79ee      	ldrb	r6, [r5, #7]
 8012992:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012996:	4316      	orrs	r6, r2
 8012998:	19da      	adds	r2, r3, r7
 801299a:	b291      	uxth	r1, r2
 801299c:	291d      	cmp	r1, #29
 801299e:	b2b7      	uxth	r7, r6
 80129a0:	d87a      	bhi.n	8012a98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80129a2:	2201      	movs	r2, #1
 80129a4:	408a      	lsls	r2, r1
 80129a6:	4975      	ldr	r1, [pc, #468]	; (8012b7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80129a8:	420a      	tst	r2, r1
 80129aa:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80129ae:	d12d      	bne.n	8012a0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80129b0:	f412 7f60 	tst.w	r2, #896	; 0x380
 80129b4:	d070      	beq.n	8012a98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80129b6:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80129ba:	462b      	mov	r3, r5
 80129bc:	f105 0e08 	add.w	lr, r5, #8
 80129c0:	4615      	mov	r5, r2
 80129c2:	6818      	ldr	r0, [r3, #0]
 80129c4:	6859      	ldr	r1, [r3, #4]
 80129c6:	4694      	mov	ip, r2
 80129c8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80129cc:	3308      	adds	r3, #8
 80129ce:	4573      	cmp	r3, lr
 80129d0:	4662      	mov	r2, ip
 80129d2:	d1f6      	bne.n	80129c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80129d4:	6818      	ldr	r0, [r3, #0]
 80129d6:	f8cc 0000 	str.w	r0, [ip]
 80129da:	889b      	ldrh	r3, [r3, #4]
 80129dc:	f8ac 3004 	strh.w	r3, [ip, #4]
 80129e0:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80129e4:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80129e8:	b2b3      	uxth	r3, r6
 80129ea:	1aca      	subs	r2, r1, r3
 80129ec:	b292      	uxth	r2, r2
 80129ee:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80129f2:	10d2      	asrs	r2, r2, #3
 80129f4:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80129f8:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80129fc:	4302      	orrs	r2, r0
 80129fe:	1bcf      	subs	r7, r1, r7
 8012a00:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012a04:	1afb      	subs	r3, r7, r3
 8012a06:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012a0a:	e7b8      	b.n	801297e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012a0c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012a0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012a12:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012a14:	f640 6333 	movw	r3, #3635	; 0xe33
 8012a18:	4299      	cmp	r1, r3
 8012a1a:	d110      	bne.n	8012a3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8012a1c:	6803      	ldr	r3, [r0, #0]
 8012a1e:	68db      	ldr	r3, [r3, #12]
 8012a20:	4798      	blx	r3
 8012a22:	7b41      	ldrb	r1, [r0, #13]
 8012a24:	00cb      	lsls	r3, r1, #3
 8012a26:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012a2a:	7a03      	ldrb	r3, [r0, #8]
 8012a2c:	0648      	lsls	r0, r1, #25
 8012a2e:	ea43 0302 	orr.w	r3, r3, r2
 8012a32:	bf44      	itt	mi
 8012a34:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012a38:	b21b      	sxthmi	r3, r3
 8012a3a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012a3e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012a42:	443b      	add	r3, r7
 8012a44:	4433      	add	r3, r6
 8012a46:	b29b      	uxth	r3, r3
 8012a48:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012a4c:	462a      	mov	r2, r5
 8012a4e:	f105 0c08 	add.w	ip, r5, #8
 8012a52:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012a56:	4635      	mov	r5, r6
 8012a58:	6810      	ldr	r0, [r2, #0]
 8012a5a:	6851      	ldr	r1, [r2, #4]
 8012a5c:	4637      	mov	r7, r6
 8012a5e:	c703      	stmia	r7!, {r0, r1}
 8012a60:	3208      	adds	r2, #8
 8012a62:	4562      	cmp	r2, ip
 8012a64:	463e      	mov	r6, r7
 8012a66:	d1f7      	bne.n	8012a58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012a68:	6810      	ldr	r0, [r2, #0]
 8012a6a:	6038      	str	r0, [r7, #0]
 8012a6c:	8892      	ldrh	r2, [r2, #4]
 8012a6e:	80ba      	strh	r2, [r7, #4]
 8012a70:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012a74:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012a78:	10db      	asrs	r3, r3, #3
 8012a7a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012a7e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012a82:	4313      	orrs	r3, r2
 8012a84:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012a88:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012a8c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012a90:	1a9b      	subs	r3, r3, r2
 8012a92:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012a96:	e772      	b.n	801297e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012a98:	f023 0204 	bic.w	r2, r3, #4
 8012a9c:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012aa0:	428a      	cmp	r2, r1
 8012aa2:	d003      	beq.n	8012aac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012aa4:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012aa8:	4293      	cmp	r3, r2
 8012aaa:	d120      	bne.n	8012aee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012aac:	3b01      	subs	r3, #1
 8012aae:	4602      	mov	r2, r0
 8012ab0:	b29b      	uxth	r3, r3
 8012ab2:	4629      	mov	r1, r5
 8012ab4:	4620      	mov	r0, r4
 8012ab6:	f7ff ff4c 	bl	8012952 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012aba:	7b41      	ldrb	r1, [r0, #13]
 8012abc:	00cb      	lsls	r3, r1, #3
 8012abe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012ac2:	7a03      	ldrb	r3, [r0, #8]
 8012ac4:	0649      	lsls	r1, r1, #25
 8012ac6:	ea43 0302 	orr.w	r3, r3, r2
 8012aca:	bf44      	itt	mi
 8012acc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012ad0:	b21b      	sxthmi	r3, r3
 8012ad2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012ad6:	7b6b      	ldrb	r3, [r5, #13]
 8012ad8:	7aaa      	ldrb	r2, [r5, #10]
 8012ada:	005b      	lsls	r3, r3, #1
 8012adc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012ae0:	4313      	orrs	r3, r2
 8012ae2:	115a      	asrs	r2, r3, #5
 8012ae4:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012ae8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012aec:	e036      	b.n	8012b5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012aee:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012af2:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012af6:	7a2a      	ldrb	r2, [r5, #8]
 8012af8:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012afc:	ea42 0201 	orr.w	r2, r2, r1
 8012b00:	bf1c      	itt	ne
 8012b02:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012b06:	b212      	sxthne	r2, r2
 8012b08:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012b0c:	f640 6109 	movw	r1, #3593	; 0xe09
 8012b10:	f023 0210 	bic.w	r2, r3, #16
 8012b14:	428a      	cmp	r2, r1
 8012b16:	d003      	beq.n	8012b20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012b18:	f640 6213 	movw	r2, #3603	; 0xe13
 8012b1c:	4293      	cmp	r3, r2
 8012b1e:	d12a      	bne.n	8012b76 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012b20:	7b6e      	ldrb	r6, [r5, #13]
 8012b22:	0076      	lsls	r6, r6, #1
 8012b24:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012b28:	7aae      	ldrb	r6, [r5, #10]
 8012b2a:	4316      	orrs	r6, r2
 8012b2c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012b30:	4293      	cmp	r3, r2
 8012b32:	bf18      	it	ne
 8012b34:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012b38:	4602      	mov	r2, r0
 8012b3a:	bf14      	ite	ne
 8012b3c:	b29b      	uxthne	r3, r3
 8012b3e:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012b42:	4629      	mov	r1, r5
 8012b44:	4620      	mov	r0, r4
 8012b46:	f7ff ff04 	bl	8012952 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012b4a:	7b43      	ldrb	r3, [r0, #13]
 8012b4c:	7a82      	ldrb	r2, [r0, #10]
 8012b4e:	005b      	lsls	r3, r3, #1
 8012b50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012b54:	4313      	orrs	r3, r2
 8012b56:	1af6      	subs	r6, r6, r3
 8012b58:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012b5c:	7b69      	ldrb	r1, [r5, #13]
 8012b5e:	00cb      	lsls	r3, r1, #3
 8012b60:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012b64:	7a2b      	ldrb	r3, [r5, #8]
 8012b66:	4313      	orrs	r3, r2
 8012b68:	064a      	lsls	r2, r1, #25
 8012b6a:	bf44      	itt	mi
 8012b6c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012b70:	b21b      	sxthmi	r3, r3
 8012b72:	1bdb      	subs	r3, r3, r7
 8012b74:	e747      	b.n	8012a06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012b76:	2300      	movs	r3, #0
 8012b78:	e7b6      	b.n	8012ae8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012b7a:	bf00      	nop
 8012b7c:	3fc00079 	.word	0x3fc00079

08012b80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012b80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b84:	4604      	mov	r4, r0
 8012b86:	b942      	cbnz	r2, 8012b9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012b88:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012b8c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012b90:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012b94:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012b98:	e047      	b.n	8012c2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012b9a:	7b51      	ldrb	r1, [r2, #13]
 8012b9c:	8893      	ldrh	r3, [r2, #4]
 8012b9e:	010d      	lsls	r5, r1, #4
 8012ba0:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012ba4:	79d5      	ldrb	r5, [r2, #7]
 8012ba6:	4305      	orrs	r5, r0
 8012ba8:	2d04      	cmp	r5, #4
 8012baa:	bfcc      	ite	gt
 8012bac:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012bb0:	f04f 0e01 	movle.w	lr, #1
 8012bb4:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012bb8:	f200 80ab 	bhi.w	8012d12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012bbc:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012bc0:	4283      	cmp	r3, r0
 8012bc2:	d216      	bcs.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012bc4:	f240 605b 	movw	r0, #1627	; 0x65b
 8012bc8:	4283      	cmp	r3, r0
 8012bca:	d859      	bhi.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012bcc:	f240 6057 	movw	r0, #1623	; 0x657
 8012bd0:	4283      	cmp	r3, r0
 8012bd2:	d20e      	bcs.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012bd4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012bd8:	d24a      	bcs.n	8012c70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012bda:	f240 604e 	movw	r0, #1614	; 0x64e
 8012bde:	4283      	cmp	r3, r0
 8012be0:	d207      	bcs.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012be2:	f240 601a 	movw	r0, #1562	; 0x61a
 8012be6:	4283      	cmp	r3, r0
 8012be8:	d02a      	beq.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012bea:	d821      	bhi.n	8012c30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012bec:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012bf0:	d35b      	bcc.n	8012caa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012bf2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012bf6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012bfa:	f040 80d0 	bne.w	8012d9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012bfe:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012c02:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012c06:	f040 80ca 	bne.w	8012d9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012c0a:	00cb      	lsls	r3, r1, #3
 8012c0c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012c10:	7a13      	ldrb	r3, [r2, #8]
 8012c12:	0649      	lsls	r1, r1, #25
 8012c14:	ea43 0300 	orr.w	r3, r3, r0
 8012c18:	bf44      	itt	mi
 8012c1a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012c1e:	b21b      	sxthmi	r3, r3
 8012c20:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012c24:	1b5d      	subs	r5, r3, r5
 8012c26:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012c2a:	4610      	mov	r0, r2
 8012c2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012c30:	f240 604b 	movw	r0, #1611	; 0x64b
 8012c34:	4283      	cmp	r3, r0
 8012c36:	d338      	bcc.n	8012caa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012c38:	f240 604c 	movw	r0, #1612	; 0x64c
 8012c3c:	4283      	cmp	r3, r0
 8012c3e:	d9d8      	bls.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c40:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012c44:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012c48:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012c4c:	f040 80f2 	bne.w	8012e34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012c50:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012c54:	f040 80ee 	bne.w	8012e34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012c58:	00cb      	lsls	r3, r1, #3
 8012c5a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012c5e:	7a13      	ldrb	r3, [r2, #8]
 8012c60:	064e      	lsls	r6, r1, #25
 8012c62:	ea43 0300 	orr.w	r3, r3, r0
 8012c66:	bf44      	itt	mi
 8012c68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012c6c:	b21b      	sxthmi	r3, r3
 8012c6e:	e7d9      	b.n	8012c24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012c70:	f240 6054 	movw	r0, #1620	; 0x654
 8012c74:	4283      	cmp	r3, r0
 8012c76:	d8e3      	bhi.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c78:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012c7c:	d9e0      	bls.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c7e:	e7b8      	b.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c80:	f240 6074 	movw	r0, #1652	; 0x674
 8012c84:	4283      	cmp	r3, r0
 8012c86:	d0b4      	beq.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c88:	d82d      	bhi.n	8012ce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012c8a:	f240 605e 	movw	r0, #1630	; 0x65e
 8012c8e:	4283      	cmp	r3, r0
 8012c90:	d804      	bhi.n	8012c9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012c92:	f240 605d 	movw	r0, #1629	; 0x65d
 8012c96:	4283      	cmp	r3, r0
 8012c98:	d3d2      	bcc.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c9a:	e7aa      	b.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c9c:	f240 605f 	movw	r0, #1631	; 0x65f
 8012ca0:	4283      	cmp	r3, r0
 8012ca2:	d0cd      	beq.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ca4:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012ca8:	d0a3      	beq.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012caa:	00cb      	lsls	r3, r1, #3
 8012cac:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012cb0:	7a13      	ldrb	r3, [r2, #8]
 8012cb2:	0649      	lsls	r1, r1, #25
 8012cb4:	ea43 0300 	orr.w	r3, r3, r0
 8012cb8:	bf44      	itt	mi
 8012cba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012cbe:	b21b      	sxthmi	r3, r3
 8012cc0:	1b5d      	subs	r5, r3, r5
 8012cc2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012cc6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012cca:	7b53      	ldrb	r3, [r2, #13]
 8012ccc:	015b      	lsls	r3, r3, #5
 8012cce:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012cd2:	7993      	ldrb	r3, [r2, #6]
 8012cd4:	430b      	orrs	r3, r1
 8012cd6:	005b      	lsls	r3, r3, #1
 8012cd8:	2105      	movs	r1, #5
 8012cda:	fb93 f3f1 	sdiv	r3, r3, r1
 8012cde:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012ce2:	440b      	add	r3, r1
 8012ce4:	e756      	b.n	8012b94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012ce6:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012cea:	4283      	cmp	r3, r0
 8012cec:	d809      	bhi.n	8012d02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012cee:	f240 60df 	movw	r0, #1759	; 0x6df
 8012cf2:	4283      	cmp	r3, r0
 8012cf4:	f4bf af7d 	bcs.w	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012cf8:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8012cfc:	2b05      	cmp	r3, #5
 8012cfe:	d8d4      	bhi.n	8012caa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012d00:	e777      	b.n	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012d02:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012d06:	4283      	cmp	r3, r0
 8012d08:	d09a      	beq.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012d0a:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8012d0e:	4283      	cmp	r3, r0
 8012d10:	e7ca      	b.n	8012ca8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012d12:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012d16:	d22b      	bcs.n	8012d70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012d18:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8012d1c:	4283      	cmp	r3, r0
 8012d1e:	d28f      	bcs.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012d20:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012d24:	4283      	cmp	r3, r0
 8012d26:	d816      	bhi.n	8012d56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012d28:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8012d2c:	4283      	cmp	r3, r0
 8012d2e:	f4bf af60 	bcs.w	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012d32:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012d36:	4283      	cmp	r3, r0
 8012d38:	d80a      	bhi.n	8012d50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012d3a:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8012d3e:	4283      	cmp	r3, r0
 8012d40:	f4bf af57 	bcs.w	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012d44:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012d48:	4283      	cmp	r3, r0
 8012d4a:	f43f af79 	beq.w	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012d4e:	e7ac      	b.n	8012caa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012d50:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012d54:	e7f8      	b.n	8012d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012d56:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012d5a:	4283      	cmp	r3, r0
 8012d5c:	d802      	bhi.n	8012d64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8012d5e:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012d62:	e798      	b.n	8012c96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012d64:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012d68:	4283      	cmp	r3, r0
 8012d6a:	f47f af42 	bne.w	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012d6e:	e767      	b.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012d70:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012d74:	4283      	cmp	r3, r0
 8012d76:	f43f af63 	beq.w	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012d7a:	d802      	bhi.n	8012d82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012d7c:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012d80:	e7f2      	b.n	8012d68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012d82:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012d86:	4283      	cmp	r3, r0
 8012d88:	d805      	bhi.n	8012d96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012d8a:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8012d8e:	4283      	cmp	r3, r0
 8012d90:	f4ff af2f 	bcc.w	8012bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012d94:	e754      	b.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012d96:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8012d9a:	4283      	cmp	r3, r0
 8012d9c:	e7af      	b.n	8012cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8012d9e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012da2:	4617      	mov	r7, r2
 8012da4:	f102 0808 	add.w	r8, r2, #8
 8012da8:	4666      	mov	r6, ip
 8012daa:	6838      	ldr	r0, [r7, #0]
 8012dac:	6879      	ldr	r1, [r7, #4]
 8012dae:	46e6      	mov	lr, ip
 8012db0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012db4:	3708      	adds	r7, #8
 8012db6:	4547      	cmp	r7, r8
 8012db8:	46f4      	mov	ip, lr
 8012dba:	d1f6      	bne.n	8012daa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012dbc:	6838      	ldr	r0, [r7, #0]
 8012dbe:	f8ce 0000 	str.w	r0, [lr]
 8012dc2:	88b9      	ldrh	r1, [r7, #4]
 8012dc4:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012dc8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012dcc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012dd0:	d009      	beq.n	8012de6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012dd2:	7b51      	ldrb	r1, [r2, #13]
 8012dd4:	7992      	ldrb	r2, [r2, #6]
 8012dd6:	0149      	lsls	r1, r1, #5
 8012dd8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012ddc:	4311      	orrs	r1, r2
 8012dde:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012de2:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012de6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012dea:	b2ad      	uxth	r5, r5
 8012dec:	d00d      	beq.n	8012e0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8012dee:	442b      	add	r3, r5
 8012df0:	b29b      	uxth	r3, r3
 8012df2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012df6:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012dfa:	10db      	asrs	r3, r3, #3
 8012dfc:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012e00:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012e04:	4313      	orrs	r3, r2
 8012e06:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012e0a:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012e0e:	00cb      	lsls	r3, r1, #3
 8012e10:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012e14:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012e18:	064f      	lsls	r7, r1, #25
 8012e1a:	ea43 0302 	orr.w	r3, r3, r2
 8012e1e:	bf44      	itt	mi
 8012e20:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e24:	b21b      	sxthmi	r3, r3
 8012e26:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012e2a:	1b5b      	subs	r3, r3, r5
 8012e2c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012e30:	4632      	mov	r2, r6
 8012e32:	e6fa      	b.n	8012c2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012e34:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012e38:	4617      	mov	r7, r2
 8012e3a:	f102 0908 	add.w	r9, r2, #8
 8012e3e:	4666      	mov	r6, ip
 8012e40:	6838      	ldr	r0, [r7, #0]
 8012e42:	6879      	ldr	r1, [r7, #4]
 8012e44:	46e0      	mov	r8, ip
 8012e46:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8012e4a:	3708      	adds	r7, #8
 8012e4c:	454f      	cmp	r7, r9
 8012e4e:	46c4      	mov	ip, r8
 8012e50:	d1f6      	bne.n	8012e40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8012e52:	6838      	ldr	r0, [r7, #0]
 8012e54:	f8c8 0000 	str.w	r0, [r8]
 8012e58:	88b9      	ldrh	r1, [r7, #4]
 8012e5a:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012e5e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012e62:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012e66:	d009      	beq.n	8012e7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8012e68:	7b51      	ldrb	r1, [r2, #13]
 8012e6a:	7992      	ldrb	r2, [r2, #6]
 8012e6c:	0149      	lsls	r1, r1, #5
 8012e6e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012e72:	4311      	orrs	r1, r2
 8012e74:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012e78:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012e7c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012e80:	d00e      	beq.n	8012ea0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8012e82:	eba3 030e 	sub.w	r3, r3, lr
 8012e86:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012e8a:	b29b      	uxth	r3, r3
 8012e8c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012e90:	10db      	asrs	r3, r3, #3
 8012e92:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012e96:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012e9a:	4313      	orrs	r3, r2
 8012e9c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012ea0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012ea4:	00cb      	lsls	r3, r1, #3
 8012ea6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012eaa:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012eae:	0648      	lsls	r0, r1, #25
 8012eb0:	ea43 0302 	orr.w	r3, r3, r2
 8012eb4:	bf44      	itt	mi
 8012eb6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012eba:	b21b      	sxthmi	r3, r3
 8012ebc:	1b5d      	subs	r5, r3, r5
 8012ebe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012ec2:	e7b5      	b.n	8012e30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012ec4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ec8:	461e      	mov	r6, r3
 8012eca:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012ecc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012ed0:	4604      	mov	r4, r0
 8012ed2:	4617      	mov	r7, r2
 8012ed4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012ed8:	f7f1 fef2 	bl	8004cc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012edc:	4605      	mov	r5, r0
 8012ede:	b918      	cbnz	r0, 8012ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012ee0:	6030      	str	r0, [r6, #0]
 8012ee2:	4628      	mov	r0, r5
 8012ee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ee8:	683b      	ldr	r3, [r7, #0]
 8012eea:	4601      	mov	r1, r0
 8012eec:	68db      	ldr	r3, [r3, #12]
 8012eee:	4638      	mov	r0, r7
 8012ef0:	4798      	blx	r3
 8012ef2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012ef6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012efa:	4602      	mov	r2, r0
 8012efc:	6030      	str	r0, [r6, #0]
 8012efe:	d213      	bcs.n	8012f28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012f00:	4643      	mov	r3, r8
 8012f02:	4639      	mov	r1, r7
 8012f04:	4620      	mov	r0, r4
 8012f06:	f7ff fe3b 	bl	8012b80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012f0a:	6030      	str	r0, [r6, #0]
 8012f0c:	6833      	ldr	r3, [r6, #0]
 8012f0e:	b143      	cbz	r3, 8012f22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012f10:	7b5a      	ldrb	r2, [r3, #13]
 8012f12:	7a9b      	ldrb	r3, [r3, #10]
 8012f14:	0052      	lsls	r2, r2, #1
 8012f16:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012f1a:	4313      	orrs	r3, r2
 8012f1c:	bf0c      	ite	eq
 8012f1e:	2301      	moveq	r3, #1
 8012f20:	2300      	movne	r3, #0
 8012f22:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012f26:	e7dc      	b.n	8012ee2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012f28:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012f2c:	b29b      	uxth	r3, r3
 8012f2e:	2b7f      	cmp	r3, #127	; 0x7f
 8012f30:	d804      	bhi.n	8012f3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012f32:	4639      	mov	r1, r7
 8012f34:	4620      	mov	r0, r4
 8012f36:	f7ff fd17 	bl	8012968 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012f3a:	e7e6      	b.n	8012f0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012f3c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012f40:	2b00      	cmp	r3, #0
 8012f42:	d0e3      	beq.n	8012f0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012f44:	f640 1302 	movw	r3, #2306	; 0x902
 8012f48:	429d      	cmp	r5, r3
 8012f4a:	d1df      	bne.n	8012f0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012f4c:	4601      	mov	r1, r0
 8012f4e:	4620      	mov	r0, r4
 8012f50:	f7ff fcdc 	bl	801290c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012f54:	e7d9      	b.n	8012f0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08012f56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8012f56:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012f5a:	461e      	mov	r6, r3
 8012f5c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012f5e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012f62:	4604      	mov	r4, r0
 8012f64:	4617      	mov	r7, r2
 8012f66:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012f6a:	f7f1 fea9 	bl	8004cc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012f6e:	4605      	mov	r5, r0
 8012f70:	b918      	cbnz	r0, 8012f7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8012f72:	6030      	str	r0, [r6, #0]
 8012f74:	4628      	mov	r0, r5
 8012f76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012f7a:	683b      	ldr	r3, [r7, #0]
 8012f7c:	4601      	mov	r1, r0
 8012f7e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8012f82:	4638      	mov	r0, r7
 8012f84:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012f88:	47c8      	blx	r9
 8012f8a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012f8e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012f92:	4602      	mov	r2, r0
 8012f94:	6030      	str	r0, [r6, #0]
 8012f96:	d213      	bcs.n	8012fc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8012f98:	4643      	mov	r3, r8
 8012f9a:	4639      	mov	r1, r7
 8012f9c:	4620      	mov	r0, r4
 8012f9e:	f7ff fdef 	bl	8012b80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012fa2:	6030      	str	r0, [r6, #0]
 8012fa4:	6833      	ldr	r3, [r6, #0]
 8012fa6:	b143      	cbz	r3, 8012fba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8012fa8:	7b5a      	ldrb	r2, [r3, #13]
 8012faa:	7a9b      	ldrb	r3, [r3, #10]
 8012fac:	0052      	lsls	r2, r2, #1
 8012fae:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012fb2:	4313      	orrs	r3, r2
 8012fb4:	bf0c      	ite	eq
 8012fb6:	2301      	moveq	r3, #1
 8012fb8:	2300      	movne	r3, #0
 8012fba:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012fbe:	e7d9      	b.n	8012f74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8012fc0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012fc4:	b29b      	uxth	r3, r3
 8012fc6:	2b7f      	cmp	r3, #127	; 0x7f
 8012fc8:	d804      	bhi.n	8012fd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8012fca:	4639      	mov	r1, r7
 8012fcc:	4620      	mov	r0, r4
 8012fce:	f7ff fccb 	bl	8012968 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012fd2:	e7e6      	b.n	8012fa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8012fd4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012fd8:	2b00      	cmp	r3, #0
 8012fda:	d0e3      	beq.n	8012fa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012fdc:	f640 1302 	movw	r3, #2306	; 0x902
 8012fe0:	429d      	cmp	r5, r3
 8012fe2:	d1df      	bne.n	8012fa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012fe4:	4601      	mov	r1, r0
 8012fe6:	4620      	mov	r0, r4
 8012fe8:	f7ff fc90 	bl	801290c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012fec:	e7d9      	b.n	8012fa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08012fee <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012fee:	b510      	push	{r4, lr}
 8012ff0:	4604      	mov	r4, r0
 8012ff2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8012ff6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012ff8:	b1f1      	cbz	r1, 8013038 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012ffa:	2b0a      	cmp	r3, #10
 8012ffc:	d02f      	beq.n	801305e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012ffe:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013000:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013004:	3901      	subs	r1, #1
 8013006:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8013008:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801300c:	1c51      	adds	r1, r2, #1
 801300e:	b289      	uxth	r1, r1
 8013010:	2901      	cmp	r1, #1
 8013012:	bf84      	itt	hi
 8013014:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8013018:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801301a:	f103 0201 	add.w	r2, r3, #1
 801301e:	8722      	strh	r2, [r4, #56]	; 0x38
 8013020:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013022:	bf98      	it	ls
 8013024:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8013026:	4413      	add	r3, r2
 8013028:	b29b      	uxth	r3, r3
 801302a:	2b09      	cmp	r3, #9
 801302c:	bf88      	it	hi
 801302e:	3b0a      	subhi	r3, #10
 8013030:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013034:	8458      	strh	r0, [r3, #34]	; 0x22
 8013036:	e7dc      	b.n	8012ff2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8013038:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801303a:	2b0a      	cmp	r3, #10
 801303c:	d00f      	beq.n	801305e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801303e:	4620      	mov	r0, r4
 8013040:	f7ff fc12 	bl	8012868 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013044:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013046:	1c5a      	adds	r2, r3, #1
 8013048:	8722      	strh	r2, [r4, #56]	; 0x38
 801304a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801304c:	4413      	add	r3, r2
 801304e:	b29b      	uxth	r3, r3
 8013050:	2b09      	cmp	r3, #9
 8013052:	bf88      	it	hi
 8013054:	3b0a      	subhi	r3, #10
 8013056:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801305a:	8458      	strh	r0, [r3, #34]	; 0x22
 801305c:	e7ec      	b.n	8013038 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801305e:	bd10      	pop	{r4, pc}

08013060 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013060:	b538      	push	{r3, r4, r5, lr}
 8013062:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013064:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8013068:	4604      	mov	r4, r0
 801306a:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801306c:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801306e:	3a01      	subs	r2, #1
 8013070:	8702      	strh	r2, [r0, #56]	; 0x38
 8013072:	1c5a      	adds	r2, r3, #1
 8013074:	b292      	uxth	r2, r2
 8013076:	2a09      	cmp	r2, #9
 8013078:	bf86      	itte	hi
 801307a:	3b09      	subhi	r3, #9
 801307c:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801307e:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8013080:	f7ff ffb5 	bl	8012fee <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013084:	8c23      	ldrh	r3, [r4, #32]
 8013086:	2b01      	cmp	r3, #1
 8013088:	bf9c      	itt	ls
 801308a:	3301      	addls	r3, #1
 801308c:	8423      	strhls	r3, [r4, #32]
 801308e:	8be3      	ldrh	r3, [r4, #30]
 8013090:	b90b      	cbnz	r3, 8013096 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8013092:	2302      	movs	r3, #2
 8013094:	83e3      	strh	r3, [r4, #30]
 8013096:	8be3      	ldrh	r3, [r4, #30]
 8013098:	3b01      	subs	r3, #1
 801309a:	b29b      	uxth	r3, r3
 801309c:	83e3      	strh	r3, [r4, #30]
 801309e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80130a2:	4628      	mov	r0, r5
 80130a4:	8365      	strh	r5, [r4, #26]
 80130a6:	bd38      	pop	{r3, r4, r5, pc}

080130a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80130a8:	428a      	cmp	r2, r1
 80130aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80130ae:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80130b0:	d931      	bls.n	8013116 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80130b2:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80130b4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80130b8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80130bc:	19ee      	adds	r6, r5, r7
 80130be:	1a54      	subs	r4, r2, r1
 80130c0:	3e01      	subs	r6, #1
 80130c2:	fa1f fe84 	uxth.w	lr, r4
 80130c6:	b2b4      	uxth	r4, r6
 80130c8:	eba4 090e 	sub.w	r9, r4, lr
 80130cc:	fa1f f989 	uxth.w	r9, r9
 80130d0:	2c09      	cmp	r4, #9
 80130d2:	4626      	mov	r6, r4
 80130d4:	bf88      	it	hi
 80130d6:	f1a4 060a 	subhi.w	r6, r4, #10
 80130da:	f1bc 0f00 	cmp.w	ip, #0
 80130de:	bf08      	it	eq
 80130e0:	f04f 0c02 	moveq.w	ip, #2
 80130e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80130e8:	f10c 3cff 	add.w	ip, ip, #4294967295
 80130ec:	fa1f fc8c 	uxth.w	ip, ip
 80130f0:	3c01      	subs	r4, #1
 80130f2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80130f6:	b2a4      	uxth	r4, r4
 80130f8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80130fc:	454c      	cmp	r4, r9
 80130fe:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013102:	d1e5      	bne.n	80130d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013104:	eba5 050e 	sub.w	r5, r5, lr
 8013108:	eb0e 0408 	add.w	r4, lr, r8
 801310c:	8705      	strh	r5, [r0, #56]	; 0x38
 801310e:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013112:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8013116:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8013118:	1a64      	subs	r4, r4, r1
 801311a:	4439      	add	r1, r7
 801311c:	b289      	uxth	r1, r1
 801311e:	2909      	cmp	r1, #9
 8013120:	bf88      	it	hi
 8013122:	390a      	subhi	r1, #10
 8013124:	8704      	strh	r4, [r0, #56]	; 0x38
 8013126:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013128:	250a      	movs	r5, #10
 801312a:	b18a      	cbz	r2, 8013150 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801312c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801312e:	3a01      	subs	r2, #1
 8013130:	b292      	uxth	r2, r2
 8013132:	3101      	adds	r1, #1
 8013134:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013138:	8701      	strh	r1, [r0, #56]	; 0x38
 801313a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801313c:	b901      	cbnz	r1, 8013140 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801313e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013140:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013142:	3901      	subs	r1, #1
 8013144:	b289      	uxth	r1, r1
 8013146:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013148:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801314c:	844c      	strh	r4, [r1, #34]	; 0x22
 801314e:	e7ec      	b.n	801312a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013150:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013154:	f7ff bf4b 	b.w	8012fee <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08013158 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013158:	b570      	push	{r4, r5, r6, lr}
 801315a:	2500      	movs	r5, #0
 801315c:	4295      	cmp	r5, r2
 801315e:	d011      	beq.n	8013184 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013160:	8bc4      	ldrh	r4, [r0, #30]
 8013162:	f831 6b02 	ldrh.w	r6, [r1], #2
 8013166:	4414      	add	r4, r2
 8013168:	3c01      	subs	r4, #1
 801316a:	1b64      	subs	r4, r4, r5
 801316c:	b2a4      	uxth	r4, r4
 801316e:	2c01      	cmp	r4, #1
 8013170:	bf88      	it	hi
 8013172:	3c02      	subhi	r4, #2
 8013174:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013178:	8b64      	ldrh	r4, [r4, #26]
 801317a:	42b4      	cmp	r4, r6
 801317c:	d117      	bne.n	80131ae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801317e:	3501      	adds	r5, #1
 8013180:	b2ad      	uxth	r5, r5
 8013182:	e7eb      	b.n	801315c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013184:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013188:	2400      	movs	r4, #0
 801318a:	4413      	add	r3, r2
 801318c:	b2a2      	uxth	r2, r4
 801318e:	429a      	cmp	r2, r3
 8013190:	da0f      	bge.n	80131b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8013192:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013194:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013198:	4432      	add	r2, r6
 801319a:	b292      	uxth	r2, r2
 801319c:	2a09      	cmp	r2, #9
 801319e:	bf88      	it	hi
 80131a0:	3a0a      	subhi	r2, #10
 80131a2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80131a6:	3401      	adds	r4, #1
 80131a8:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80131aa:	42aa      	cmp	r2, r5
 80131ac:	d0ee      	beq.n	801318c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80131ae:	2000      	movs	r0, #0
 80131b0:	bd70      	pop	{r4, r5, r6, pc}
 80131b2:	2001      	movs	r0, #1
 80131b4:	e7fc      	b.n	80131b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080131b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80131b6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131ba:	4605      	mov	r5, r0
 80131bc:	4616      	mov	r6, r2
 80131be:	1c8c      	adds	r4, r1, #2
 80131c0:	8809      	ldrh	r1, [r1, #0]
 80131c2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80131c6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80131ca:	42b3      	cmp	r3, r6
 80131cc:	d124      	bne.n	8013218 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80131ce:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80131d2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80131d6:	f001 070f 	and.w	r7, r1, #15
 80131da:	f8cd 8000 	str.w	r8, [sp]
 80131de:	464b      	mov	r3, r9
 80131e0:	4652      	mov	r2, sl
 80131e2:	4621      	mov	r1, r4
 80131e4:	4628      	mov	r0, r5
 80131e6:	f7ff ffb7 	bl	8013158 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80131ea:	4683      	mov	fp, r0
 80131ec:	b168      	cbz	r0, 801320a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80131ee:	eb0a 0109 	add.w	r1, sl, r9
 80131f2:	4441      	add	r1, r8
 80131f4:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80131f8:	463a      	mov	r2, r7
 80131fa:	4649      	mov	r1, r9
 80131fc:	4628      	mov	r0, r5
 80131fe:	f7ff ff53 	bl	80130a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013202:	4658      	mov	r0, fp
 8013204:	b003      	add	sp, #12
 8013206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801320a:	eb07 010a 	add.w	r1, r7, sl
 801320e:	4449      	add	r1, r9
 8013210:	4441      	add	r1, r8
 8013212:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013216:	e7d2      	b.n	80131be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013218:	f04f 0b00 	mov.w	fp, #0
 801321c:	e7f1      	b.n	8013202 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801321e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801321e:	b570      	push	{r4, r5, r6, lr}
 8013220:	8810      	ldrh	r0, [r2, #0]
 8013222:	4298      	cmp	r0, r3
 8013224:	d817      	bhi.n	8013256 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013226:	1e48      	subs	r0, r1, #1
 8013228:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801322c:	4298      	cmp	r0, r3
 801322e:	d312      	bcc.n	8013256 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013230:	2400      	movs	r4, #0
 8013232:	428c      	cmp	r4, r1
 8013234:	d20f      	bcs.n	8013256 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013236:	1860      	adds	r0, r4, r1
 8013238:	1040      	asrs	r0, r0, #1
 801323a:	0085      	lsls	r5, r0, #2
 801323c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013240:	42b3      	cmp	r3, r6
 8013242:	d902      	bls.n	801324a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013244:	3001      	adds	r0, #1
 8013246:	b284      	uxth	r4, r0
 8013248:	e7f3      	b.n	8013232 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801324a:	d201      	bcs.n	8013250 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801324c:	b281      	uxth	r1, r0
 801324e:	e7f0      	b.n	8013232 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013250:	442a      	add	r2, r5
 8013252:	8850      	ldrh	r0, [r2, #2]
 8013254:	bd70      	pop	{r4, r5, r6, pc}
 8013256:	2000      	movs	r0, #0
 8013258:	e7fc      	b.n	8013254 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801325a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801325a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801325e:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013260:	886f      	ldrh	r7, [r5, #2]
 8013262:	4604      	mov	r4, r0
 8013264:	087f      	lsrs	r7, r7, #1
 8013266:	260b      	movs	r6, #11
 8013268:	3e01      	subs	r6, #1
 801326a:	d013      	beq.n	8013294 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801326c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801326e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013272:	462a      	mov	r2, r5
 8013274:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013278:	4639      	mov	r1, r7
 801327a:	4643      	mov	r3, r8
 801327c:	4620      	mov	r0, r4
 801327e:	f7ff ffce 	bl	801321e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8013282:	b138      	cbz	r0, 8013294 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013284:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013288:	4642      	mov	r2, r8
 801328a:	4620      	mov	r0, r4
 801328c:	f7ff ff93 	bl	80131b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8013290:	2800      	cmp	r0, #0
 8013292:	d1e9      	bne.n	8013268 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013298 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013298:	b570      	push	{r4, r5, r6, lr}
 801329a:	694a      	ldr	r2, [r1, #20]
 801329c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801329e:	684b      	ldr	r3, [r1, #4]
 80132a0:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80132a2:	1b54      	subs	r4, r2, r5
 80132a4:	f000 8106 	beq.w	80134b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80132a8:	1b9b      	subs	r3, r3, r6
 80132aa:	d003      	beq.n	80132b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80132ac:	4363      	muls	r3, r4
 80132ae:	2210      	movs	r2, #16
 80132b0:	fb93 f3f2 	sdiv	r3, r3, r2
 80132b4:	680c      	ldr	r4, [r1, #0]
 80132b6:	698a      	ldr	r2, [r1, #24]
 80132b8:	1b65      	subs	r5, r4, r5
 80132ba:	f000 80fd 	beq.w	80134b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80132be:	1b92      	subs	r2, r2, r6
 80132c0:	d003      	beq.n	80132ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80132c2:	436a      	muls	r2, r5
 80132c4:	2410      	movs	r4, #16
 80132c6:	fb92 f2f4 	sdiv	r2, r2, r4
 80132ca:	1a9b      	subs	r3, r3, r2
 80132cc:	ee07 3a90 	vmov	s15, r3
 80132d0:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80134f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80132d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80132d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80132dc:	ee67 7a84 	vmul.f32	s15, s15, s8
 80132e0:	460a      	mov	r2, r1
 80132e2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80132e6:	4603      	mov	r3, r0
 80132e8:	f100 040c 	add.w	r4, r0, #12
 80132ec:	eeb1 6a43 	vneg.f32	s12, s6
 80132f0:	edd2 7a02 	vldr	s15, [r2, #8]
 80132f4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80132f8:	3214      	adds	r2, #20
 80132fa:	ece3 6a01 	vstmia	r3!, {s13}
 80132fe:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013302:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013306:	429c      	cmp	r4, r3
 8013308:	edc3 7a02 	vstr	s15, [r3, #8]
 801330c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013310:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013314:	edc3 7a05 	vstr	s15, [r3, #20]
 8013318:	d1ea      	bne.n	80132f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801331a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801331c:	698b      	ldr	r3, [r1, #24]
 801331e:	edd0 4a02 	vldr	s9, [r0, #8]
 8013322:	edd0 3a00 	vldr	s7, [r0]
 8013326:	edd0 6a01 	vldr	s13, [r0, #4]
 801332a:	ed90 5a05 	vldr	s10, [r0, #20]
 801332e:	ed90 2a03 	vldr	s4, [r0, #12]
 8013332:	edd0 5a04 	vldr	s11, [r0, #16]
 8013336:	ed90 1a07 	vldr	s2, [r0, #28]
 801333a:	edd0 2a06 	vldr	s5, [r0, #24]
 801333e:	1a9b      	subs	r3, r3, r2
 8013340:	ee07 3a90 	vmov	s15, r3
 8013344:	684b      	ldr	r3, [r1, #4]
 8013346:	1a9b      	subs	r3, r3, r2
 8013348:	ee07 3a10 	vmov	s14, r3
 801334c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013350:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013354:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013358:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801335c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013360:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013364:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013368:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801336c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013370:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013374:	ee67 7a83 	vmul.f32	s15, s15, s6
 8013378:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801337c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801337e:	694a      	ldr	r2, [r1, #20]
 8013380:	1b13      	subs	r3, r2, r4
 8013382:	ee07 3a10 	vmov	s14, r3
 8013386:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801338a:	680b      	ldr	r3, [r1, #0]
 801338c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013390:	1b1b      	subs	r3, r3, r4
 8013392:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8013396:	ee07 3a10 	vmov	s14, r3
 801339a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801339e:	ee27 7a04 	vmul.f32	s14, s14, s8
 80133a2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80133a6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80133aa:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80133ae:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80133b0:	698b      	ldr	r3, [r1, #24]
 80133b2:	1a9b      	subs	r3, r3, r2
 80133b4:	ee06 3a90 	vmov	s13, r3
 80133b8:	684b      	ldr	r3, [r1, #4]
 80133ba:	1a9b      	subs	r3, r3, r2
 80133bc:	ee07 3a10 	vmov	s14, r3
 80133c0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80133c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80133c8:	ee66 6a84 	vmul.f32	s13, s13, s8
 80133cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80133d0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80133d4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80133d8:	ee66 6a83 	vmul.f32	s13, s13, s6
 80133dc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80133e0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80133e2:	694a      	ldr	r2, [r1, #20]
 80133e4:	1b13      	subs	r3, r2, r4
 80133e6:	ee07 3a10 	vmov	s14, r3
 80133ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80133ee:	680b      	ldr	r3, [r1, #0]
 80133f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80133f4:	1b1b      	subs	r3, r3, r4
 80133f6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80133fa:	ee07 3a10 	vmov	s14, r3
 80133fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013402:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013406:	eea5 5a87 	vfma.f32	s10, s11, s14
 801340a:	edd0 5a08 	vldr	s11, [r0, #32]
 801340e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013412:	ee31 1a65 	vsub.f32	s2, s2, s11
 8013416:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801341a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801341c:	698b      	ldr	r3, [r1, #24]
 801341e:	1a9b      	subs	r3, r3, r2
 8013420:	ee07 3a10 	vmov	s14, r3
 8013424:	684b      	ldr	r3, [r1, #4]
 8013426:	1a9b      	subs	r3, r3, r2
 8013428:	ee01 3a90 	vmov	s3, r3
 801342c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013430:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013434:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013438:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801343c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013440:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013444:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013448:	ee27 7a03 	vmul.f32	s14, s14, s6
 801344c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013450:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013452:	694a      	ldr	r2, [r1, #20]
 8013454:	1b13      	subs	r3, r2, r4
 8013456:	ee03 3a10 	vmov	s6, r3
 801345a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801345e:	680b      	ldr	r3, [r1, #0]
 8013460:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013464:	1b1b      	subs	r3, r3, r4
 8013466:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801346a:	ee03 3a10 	vmov	s6, r3
 801346e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013472:	ee23 4a04 	vmul.f32	s8, s6, s8
 8013476:	eee1 5a04 	vfma.f32	s11, s2, s8
 801347a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801347e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8013482:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8013486:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801348a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801348e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013492:	dd13      	ble.n	80134bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8013494:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013498:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801349c:	63c3      	str	r3, [r0, #60]	; 0x3c
 801349e:	eee3 7a87 	vfma.f32	s15, s7, s14
 80134a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80134a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134aa:	dd15      	ble.n	80134d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80134ac:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80134b0:	6403      	str	r3, [r0, #64]	; 0x40
 80134b2:	bd70      	pop	{r4, r5, r6, pc}
 80134b4:	4623      	mov	r3, r4
 80134b6:	e6fd      	b.n	80132b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80134b8:	462a      	mov	r2, r5
 80134ba:	e706      	b.n	80132ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80134bc:	d502      	bpl.n	80134c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80134be:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80134c2:	e7e9      	b.n	8013498 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80134c4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80134c8:	eea3 2a85 	vfma.f32	s4, s7, s10
 80134cc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80134d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134d4:	dade      	bge.n	8013494 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80134d6:	e7f2      	b.n	80134be <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80134d8:	d502      	bpl.n	80134e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80134da:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80134de:	e7e7      	b.n	80134b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80134e0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80134e4:	eee3 4a86 	vfma.f32	s9, s7, s12
 80134e8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80134ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134f0:	dadc      	bge.n	80134ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80134f2:	e7f2      	b.n	80134da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80134f4:	3d800000 	.word	0x3d800000

080134f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80134f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80134fc:	2714      	movs	r7, #20
 80134fe:	435f      	muls	r7, r3
 8013500:	eb02 0c07 	add.w	ip, r2, r7
 8013504:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8013508:	f115 0e0f 	adds.w	lr, r5, #15
 801350c:	f100 80a2 	bmi.w	8013654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013510:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013514:	9c08      	ldr	r4, [sp, #32]
 8013516:	f8c0 e014 	str.w	lr, [r0, #20]
 801351a:	2614      	movs	r6, #20
 801351c:	4366      	muls	r6, r4
 801351e:	eb02 0806 	add.w	r8, r2, r6
 8013522:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013526:	f115 040f 	adds.w	r4, r5, #15
 801352a:	f100 809f 	bmi.w	801366c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801352e:	1124      	asrs	r4, r4, #4
 8013530:	eba4 040e 	sub.w	r4, r4, lr
 8013534:	6184      	str	r4, [r0, #24]
 8013536:	2c00      	cmp	r4, #0
 8013538:	f000 808a 	beq.w	8013650 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801353c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013540:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013544:	5995      	ldr	r5, [r2, r6]
 8013546:	eba4 0809 	sub.w	r8, r4, r9
 801354a:	59d4      	ldr	r4, [r2, r7]
 801354c:	eba5 0a04 	sub.w	sl, r5, r4
 8013550:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013554:	fb0e fe05 	mul.w	lr, lr, r5
 8013558:	fb0a ee19 	mls	lr, sl, r9, lr
 801355c:	fb08 e404 	mla	r4, r8, r4, lr
 8013560:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013564:	3c01      	subs	r4, #1
 8013566:	19a4      	adds	r4, r4, r6
 8013568:	f100 808c 	bmi.w	8013684 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801356c:	fb94 fef6 	sdiv	lr, r4, r6
 8013570:	f8c0 e000 	str.w	lr, [r0]
 8013574:	fb06 441e 	mls	r4, r6, lr, r4
 8013578:	6104      	str	r4, [r0, #16]
 801357a:	2d00      	cmp	r5, #0
 801357c:	f2c0 8095 	blt.w	80136aa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8013580:	fb95 f4f6 	sdiv	r4, r5, r6
 8013584:	6044      	str	r4, [r0, #4]
 8013586:	fb06 5514 	mls	r5, r6, r4, r5
 801358a:	6085      	str	r5, [r0, #8]
 801358c:	60c6      	str	r6, [r0, #12]
 801358e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8013592:	6945      	ldr	r5, [r0, #20]
 8013594:	59d2      	ldr	r2, [r2, r7]
 8013596:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80136cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801359a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801359e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80135a2:	ee07 4a10 	vmov	s14, r4
 80135a6:	6804      	ldr	r4, [r0, #0]
 80135a8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80135ac:	ee07 2a90 	vmov	s15, r2
 80135b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80135b8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80135bc:	ee27 7a26 	vmul.f32	s14, s14, s13
 80135c0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80135c4:	edd3 6a00 	vldr	s13, [r3]
 80135c8:	eee6 6a07 	vfma.f32	s13, s12, s14
 80135cc:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80135d0:	eee6 6a27 	vfma.f32	s13, s12, s15
 80135d4:	edc0 6a07 	vstr	s13, [r0, #28]
 80135d8:	edd0 6a01 	vldr	s13, [r0, #4]
 80135dc:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80135e0:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80135e4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80135e8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80135ec:	ed80 6a08 	vstr	s12, [r0, #32]
 80135f0:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80135f2:	6242      	str	r2, [r0, #36]	; 0x24
 80135f4:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80135f8:	ed93 6a03 	vldr	s12, [r3, #12]
 80135fc:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013600:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013604:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8013608:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801360c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013610:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013614:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013618:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801361c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801361e:	6302      	str	r2, [r0, #48]	; 0x30
 8013620:	ed93 6a06 	vldr	s12, [r3, #24]
 8013624:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8013628:	eea5 6a87 	vfma.f32	s12, s11, s14
 801362c:	eeb0 7a46 	vmov.f32	s14, s12
 8013630:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013634:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013638:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801363c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013640:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013644:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013648:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801364c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801364e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013650:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013654:	f1c5 0501 	rsb	r5, r5, #1
 8013658:	f015 050f 	ands.w	r5, r5, #15
 801365c:	bf18      	it	ne
 801365e:	2501      	movne	r5, #1
 8013660:	2410      	movs	r4, #16
 8013662:	fb9e fef4 	sdiv	lr, lr, r4
 8013666:	ebae 0e05 	sub.w	lr, lr, r5
 801366a:	e753      	b.n	8013514 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801366c:	f1c5 0501 	rsb	r5, r5, #1
 8013670:	f015 050f 	ands.w	r5, r5, #15
 8013674:	bf18      	it	ne
 8013676:	2501      	movne	r5, #1
 8013678:	f04f 0910 	mov.w	r9, #16
 801367c:	fb94 f4f9 	sdiv	r4, r4, r9
 8013680:	1b64      	subs	r4, r4, r5
 8013682:	e755      	b.n	8013530 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013684:	4264      	negs	r4, r4
 8013686:	fb94 fef6 	sdiv	lr, r4, r6
 801368a:	f1ce 0800 	rsb	r8, lr, #0
 801368e:	fb06 441e 	mls	r4, r6, lr, r4
 8013692:	f8c0 8000 	str.w	r8, [r0]
 8013696:	6104      	str	r4, [r0, #16]
 8013698:	2c00      	cmp	r4, #0
 801369a:	f43f af6e 	beq.w	801357a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801369e:	ea6f 0e0e 	mvn.w	lr, lr
 80136a2:	f8c0 e000 	str.w	lr, [r0]
 80136a6:	1b34      	subs	r4, r6, r4
 80136a8:	e766      	b.n	8013578 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80136aa:	426d      	negs	r5, r5
 80136ac:	fb95 f4f6 	sdiv	r4, r5, r6
 80136b0:	f1c4 0e00 	rsb	lr, r4, #0
 80136b4:	fb06 5514 	mls	r5, r6, r4, r5
 80136b8:	f8c0 e004 	str.w	lr, [r0, #4]
 80136bc:	6085      	str	r5, [r0, #8]
 80136be:	2d00      	cmp	r5, #0
 80136c0:	f43f af64 	beq.w	801358c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80136c4:	43e4      	mvns	r4, r4
 80136c6:	6044      	str	r4, [r0, #4]
 80136c8:	1b75      	subs	r5, r6, r5
 80136ca:	e75e      	b.n	801358a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80136cc:	3d800000 	.word	0x3d800000

080136d0 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80136d0:	4602      	mov	r2, r0
 80136d2:	b148      	cbz	r0, 80136e8 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80136d4:	2300      	movs	r3, #0
 80136d6:	b298      	uxth	r0, r3
 80136d8:	3301      	adds	r3, #1
 80136da:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80136de:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80136e2:	2900      	cmp	r1, #0
 80136e4:	d1f7      	bne.n	80136d6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80136e6:	4770      	bx	lr
 80136e8:	4770      	bx	lr

080136ea <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80136ea:	b530      	push	{r4, r5, lr}
 80136ec:	4604      	mov	r4, r0
 80136ee:	b159      	cbz	r1, 8013708 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80136f0:	b148      	cbz	r0, 8013706 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80136f2:	2300      	movs	r3, #0
 80136f4:	b298      	uxth	r0, r3
 80136f6:	4282      	cmp	r2, r0
 80136f8:	d905      	bls.n	8013706 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80136fa:	5ccd      	ldrb	r5, [r1, r3]
 80136fc:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013700:	3301      	adds	r3, #1
 8013702:	2d00      	cmp	r5, #0
 8013704:	d1f6      	bne.n	80136f4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8013706:	bd30      	pop	{r4, r5, pc}
 8013708:	4608      	mov	r0, r1
 801370a:	e7fc      	b.n	8013706 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801370c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 801370c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801370e:	b08b      	sub	sp, #44	; 0x2c
 8013710:	468c      	mov	ip, r1
 8013712:	2100      	movs	r1, #0
 8013714:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013718:	ae01      	add	r6, sp, #4
 801371a:	211f      	movs	r1, #31
 801371c:	fbb0 f7f3 	udiv	r7, r0, r3
 8013720:	fb03 0517 	mls	r5, r3, r7, r0
 8013724:	b2ec      	uxtb	r4, r5
 8013726:	2d09      	cmp	r5, #9
 8013728:	bfd4      	ite	le
 801372a:	3430      	addle	r4, #48	; 0x30
 801372c:	3457      	addgt	r4, #87	; 0x57
 801372e:	b2e4      	uxtb	r4, r4
 8013730:	558c      	strb	r4, [r1, r6]
 8013732:	4638      	mov	r0, r7
 8013734:	1e4c      	subs	r4, r1, #1
 8013736:	b92f      	cbnz	r7, 8013744 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013738:	4431      	add	r1, r6
 801373a:	4660      	mov	r0, ip
 801373c:	f7ff ffd5 	bl	80136ea <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013740:	b00b      	add	sp, #44	; 0x2c
 8013742:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013744:	4621      	mov	r1, r4
 8013746:	e7e9      	b.n	801371c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013748 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013748:	b5f0      	push	{r4, r5, r6, r7, lr}
 801374a:	4607      	mov	r7, r0
 801374c:	b08b      	sub	sp, #44	; 0x2c
 801374e:	4608      	mov	r0, r1
 8013750:	b341      	cbz	r1, 80137a4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013752:	1e99      	subs	r1, r3, #2
 8013754:	2922      	cmp	r1, #34	; 0x22
 8013756:	d825      	bhi.n	80137a4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013758:	2100      	movs	r1, #0
 801375a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801375e:	463c      	mov	r4, r7
 8013760:	261f      	movs	r6, #31
 8013762:	f10d 0c04 	add.w	ip, sp, #4
 8013766:	fb94 fef3 	sdiv	lr, r4, r3
 801376a:	fb03 441e 	mls	r4, r3, lr, r4
 801376e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013772:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013776:	b2ec      	uxtb	r4, r5
 8013778:	2d09      	cmp	r5, #9
 801377a:	bfd4      	ite	le
 801377c:	3430      	addle	r4, #48	; 0x30
 801377e:	3457      	addgt	r4, #87	; 0x57
 8013780:	b2e4      	uxtb	r4, r4
 8013782:	f80c 4006 	strb.w	r4, [ip, r6]
 8013786:	4674      	mov	r4, lr
 8013788:	1e71      	subs	r1, r6, #1
 801378a:	b96c      	cbnz	r4, 80137a8 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 801378c:	2f00      	cmp	r7, #0
 801378e:	da05      	bge.n	801379c <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8013790:	ab0a      	add	r3, sp, #40	; 0x28
 8013792:	4419      	add	r1, r3
 8013794:	232d      	movs	r3, #45	; 0x2d
 8013796:	f801 3c24 	strb.w	r3, [r1, #-36]
 801379a:	1eb1      	subs	r1, r6, #2
 801379c:	3101      	adds	r1, #1
 801379e:	4461      	add	r1, ip
 80137a0:	f7ff ffa3 	bl	80136ea <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80137a4:	b00b      	add	sp, #44	; 0x2c
 80137a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80137a8:	460e      	mov	r6, r1
 80137aa:	e7dc      	b.n	8013766 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080137ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80137ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137b0:	4691      	mov	r9, r2
 80137b2:	b085      	sub	sp, #20
 80137b4:	6802      	ldr	r2, [r0, #0]
 80137b6:	9201      	str	r2, [sp, #4]
 80137b8:	4688      	mov	r8, r1
 80137ba:	4683      	mov	fp, r0
 80137bc:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80137c0:	9103      	str	r1, [sp, #12]
 80137c2:	4610      	mov	r0, r2
 80137c4:	461c      	mov	r4, r3
 80137c6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80137ca:	9302      	str	r3, [sp, #8]
 80137cc:	f7ff ff80 	bl	80136d0 <_ZN8touchgfx7Unicode6strlenEPKt>
 80137d0:	f1b8 0f00 	cmp.w	r8, #0
 80137d4:	bf0c      	ite	eq
 80137d6:	4684      	moveq	ip, r0
 80137d8:	f100 0c01 	addne.w	ip, r0, #1
 80137dc:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80137e0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80137e4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80137e6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80137e8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80137ec:	9903      	ldr	r1, [sp, #12]
 80137ee:	fa1f fc8c 	uxth.w	ip, ip
 80137f2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80137f6:	d041      	beq.n	801387c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80137f8:	d834      	bhi.n	8013864 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80137fa:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80137fe:	d059      	beq.n	80138b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013800:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013804:	d03a      	beq.n	801387c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013806:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801380a:	d034      	beq.n	8013876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801380c:	2400      	movs	r4, #0
 801380e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013812:	3a01      	subs	r2, #1
 8013814:	b169      	cbz	r1, 8013832 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013816:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013818:	458c      	cmp	ip, r1
 801381a:	da09      	bge.n	8013830 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801381c:	eba1 010c 	sub.w	r1, r1, ip
 8013820:	b289      	uxth	r1, r1
 8013822:	b933      	cbnz	r3, 8013832 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013824:	2e00      	cmp	r6, #0
 8013826:	d051      	beq.n	80138cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013828:	2800      	cmp	r0, #0
 801382a:	d04f      	beq.n	80138cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801382c:	440c      	add	r4, r1
 801382e:	b2a4      	uxth	r4, r4
 8013830:	2100      	movs	r1, #0
 8013832:	682b      	ldr	r3, [r5, #0]
 8013834:	4293      	cmp	r3, r2
 8013836:	da07      	bge.n	8013848 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013838:	f1b8 0f00 	cmp.w	r8, #0
 801383c:	d004      	beq.n	8013848 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801383e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013842:	682b      	ldr	r3, [r5, #0]
 8013844:	3301      	adds	r3, #1
 8013846:	602b      	str	r3, [r5, #0]
 8013848:	2730      	movs	r7, #48	; 0x30
 801384a:	2c00      	cmp	r4, #0
 801384c:	d04e      	beq.n	80138ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801384e:	682e      	ldr	r6, [r5, #0]
 8013850:	3c01      	subs	r4, #1
 8013852:	42b2      	cmp	r2, r6
 8013854:	b2a4      	uxth	r4, r4
 8013856:	dd49      	ble.n	80138ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013858:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801385c:	682b      	ldr	r3, [r5, #0]
 801385e:	3301      	adds	r3, #1
 8013860:	602b      	str	r3, [r5, #0]
 8013862:	e7f2      	b.n	801384a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013864:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013868:	d01d      	beq.n	80138a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801386a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801386e:	d002      	beq.n	8013876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013870:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013874:	e7c9      	b.n	801380a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013876:	4684      	mov	ip, r0
 8013878:	f04f 0800 	mov.w	r8, #0
 801387c:	2c00      	cmp	r4, #0
 801387e:	d0c6      	beq.n	801380e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013880:	b947      	cbnz	r7, 8013894 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013882:	2801      	cmp	r0, #1
 8013884:	d106      	bne.n	8013894 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013886:	8814      	ldrh	r4, [r2, #0]
 8013888:	2c30      	cmp	r4, #48	; 0x30
 801388a:	bf02      	ittt	eq
 801388c:	3202      	addeq	r2, #2
 801388e:	f8cb 2000 	streq.w	r2, [fp]
 8013892:	4638      	moveq	r0, r7
 8013894:	45bc      	cmp	ip, r7
 8013896:	da14      	bge.n	80138c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013898:	b2bf      	uxth	r7, r7
 801389a:	eba7 040c 	sub.w	r4, r7, ip
 801389e:	b2a4      	uxth	r4, r4
 80138a0:	46bc      	mov	ip, r7
 80138a2:	2600      	movs	r6, #0
 80138a4:	e7b3      	b.n	801380e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80138a6:	4684      	mov	ip, r0
 80138a8:	b16c      	cbz	r4, 80138c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80138aa:	42b8      	cmp	r0, r7
 80138ac:	dd00      	ble.n	80138b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80138ae:	b2b8      	uxth	r0, r7
 80138b0:	2400      	movs	r4, #0
 80138b2:	e003      	b.n	80138bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80138b4:	f04f 0c01 	mov.w	ip, #1
 80138b8:	2400      	movs	r4, #0
 80138ba:	4660      	mov	r0, ip
 80138bc:	4626      	mov	r6, r4
 80138be:	46a0      	mov	r8, r4
 80138c0:	e7a5      	b.n	801380e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80138c2:	2400      	movs	r4, #0
 80138c4:	e7ed      	b.n	80138a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80138c6:	4626      	mov	r6, r4
 80138c8:	46a0      	mov	r8, r4
 80138ca:	e7a0      	b.n	801380e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80138cc:	2900      	cmp	r1, #0
 80138ce:	d0b0      	beq.n	8013832 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80138d0:	2720      	movs	r7, #32
 80138d2:	682e      	ldr	r6, [r5, #0]
 80138d4:	2900      	cmp	r1, #0
 80138d6:	d0ac      	beq.n	8013832 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80138d8:	3901      	subs	r1, #1
 80138da:	4296      	cmp	r6, r2
 80138dc:	b289      	uxth	r1, r1
 80138de:	daa7      	bge.n	8013830 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80138e0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80138e4:	682b      	ldr	r3, [r5, #0]
 80138e6:	3301      	adds	r3, #1
 80138e8:	602b      	str	r3, [r5, #0]
 80138ea:	e7f2      	b.n	80138d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80138ec:	b188      	cbz	r0, 8013912 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80138ee:	682b      	ldr	r3, [r5, #0]
 80138f0:	3801      	subs	r0, #1
 80138f2:	429a      	cmp	r2, r3
 80138f4:	b280      	uxth	r0, r0
 80138f6:	dd0c      	ble.n	8013912 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80138f8:	f8db 3000 	ldr.w	r3, [fp]
 80138fc:	1c9c      	adds	r4, r3, #2
 80138fe:	f8cb 4000 	str.w	r4, [fp]
 8013902:	881c      	ldrh	r4, [r3, #0]
 8013904:	682b      	ldr	r3, [r5, #0]
 8013906:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801390a:	682b      	ldr	r3, [r5, #0]
 801390c:	3301      	adds	r3, #1
 801390e:	602b      	str	r3, [r5, #0]
 8013910:	e7ec      	b.n	80138ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013912:	2620      	movs	r6, #32
 8013914:	b151      	cbz	r1, 801392c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013916:	6828      	ldr	r0, [r5, #0]
 8013918:	3901      	subs	r1, #1
 801391a:	4282      	cmp	r2, r0
 801391c:	b289      	uxth	r1, r1
 801391e:	dd05      	ble.n	801392c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013920:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013924:	682b      	ldr	r3, [r5, #0]
 8013926:	3301      	adds	r3, #1
 8013928:	602b      	str	r3, [r5, #0]
 801392a:	e7f3      	b.n	8013914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801392c:	b005      	add	sp, #20
 801392e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013932 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013932:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013936:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801393a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801393e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013942:	2400      	movs	r4, #0
 8013944:	8014      	strh	r4, [r2, #0]
 8013946:	701c      	strb	r4, [r3, #0]
 8013948:	f888 4000 	strb.w	r4, [r8]
 801394c:	f88c 4000 	strb.w	r4, [ip]
 8013950:	f88e 4000 	strb.w	r4, [lr]
 8013954:	703c      	strb	r4, [r7, #0]
 8013956:	6804      	ldr	r4, [r0, #0]
 8013958:	b1a4      	cbz	r4, 8013984 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801395a:	8824      	ldrh	r4, [r4, #0]
 801395c:	f04f 0901 	mov.w	r9, #1
 8013960:	b314      	cbz	r4, 80139a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013962:	2c2b      	cmp	r4, #43	; 0x2b
 8013964:	d001      	beq.n	801396a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013966:	2c20      	cmp	r4, #32
 8013968:	d110      	bne.n	801398c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801396a:	8014      	strh	r4, [r2, #0]
 801396c:	6804      	ldr	r4, [r0, #0]
 801396e:	b10c      	cbz	r4, 8013974 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013970:	3402      	adds	r4, #2
 8013972:	6004      	str	r4, [r0, #0]
 8013974:	680c      	ldr	r4, [r1, #0]
 8013976:	b10c      	cbz	r4, 801397c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013978:	3401      	adds	r4, #1
 801397a:	600c      	str	r4, [r1, #0]
 801397c:	6804      	ldr	r4, [r0, #0]
 801397e:	b17c      	cbz	r4, 80139a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013980:	8824      	ldrh	r4, [r4, #0]
 8013982:	e7ed      	b.n	8013960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013984:	680c      	ldr	r4, [r1, #0]
 8013986:	b17c      	cbz	r4, 80139a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013988:	7824      	ldrb	r4, [r4, #0]
 801398a:	e7e7      	b.n	801395c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801398c:	2c2d      	cmp	r4, #45	; 0x2d
 801398e:	d102      	bne.n	8013996 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013990:	f883 9000 	strb.w	r9, [r3]
 8013994:	e7ea      	b.n	801396c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013996:	2c23      	cmp	r4, #35	; 0x23
 8013998:	d107      	bne.n	80139aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801399a:	f888 9000 	strb.w	r9, [r8]
 801399e:	e7e5      	b.n	801396c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80139a0:	680c      	ldr	r4, [r1, #0]
 80139a2:	b10c      	cbz	r4, 80139a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80139a4:	7824      	ldrb	r4, [r4, #0]
 80139a6:	e7db      	b.n	8013960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80139a8:	2400      	movs	r4, #0
 80139aa:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80139ae:	2b09      	cmp	r3, #9
 80139b0:	d901      	bls.n	80139b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80139b2:	2c2a      	cmp	r4, #42	; 0x2a
 80139b4:	d122      	bne.n	80139fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80139b6:	2301      	movs	r3, #1
 80139b8:	2c30      	cmp	r4, #48	; 0x30
 80139ba:	f88e 3000 	strb.w	r3, [lr]
 80139be:	d10d      	bne.n	80139dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80139c0:	f88c 3000 	strb.w	r3, [ip]
 80139c4:	6803      	ldr	r3, [r0, #0]
 80139c6:	b10b      	cbz	r3, 80139cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80139c8:	3302      	adds	r3, #2
 80139ca:	6003      	str	r3, [r0, #0]
 80139cc:	680b      	ldr	r3, [r1, #0]
 80139ce:	b10b      	cbz	r3, 80139d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80139d0:	3301      	adds	r3, #1
 80139d2:	600b      	str	r3, [r1, #0]
 80139d4:	6803      	ldr	r3, [r0, #0]
 80139d6:	2b00      	cmp	r3, #0
 80139d8:	d02f      	beq.n	8013a3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80139da:	881c      	ldrh	r4, [r3, #0]
 80139dc:	2c2a      	cmp	r4, #42	; 0x2a
 80139de:	d135      	bne.n	8013a4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80139e0:	f04f 33ff 	mov.w	r3, #4294967295
 80139e4:	6033      	str	r3, [r6, #0]
 80139e6:	6803      	ldr	r3, [r0, #0]
 80139e8:	b10b      	cbz	r3, 80139ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80139ea:	3302      	adds	r3, #2
 80139ec:	6003      	str	r3, [r0, #0]
 80139ee:	680b      	ldr	r3, [r1, #0]
 80139f0:	b10b      	cbz	r3, 80139f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80139f2:	3301      	adds	r3, #1
 80139f4:	600b      	str	r3, [r1, #0]
 80139f6:	6803      	ldr	r3, [r0, #0]
 80139f8:	b31b      	cbz	r3, 8013a42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80139fa:	881c      	ldrh	r4, [r3, #0]
 80139fc:	2c2e      	cmp	r4, #46	; 0x2e
 80139fe:	d11a      	bne.n	8013a36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013a00:	2301      	movs	r3, #1
 8013a02:	703b      	strb	r3, [r7, #0]
 8013a04:	6803      	ldr	r3, [r0, #0]
 8013a06:	b10b      	cbz	r3, 8013a0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013a08:	3302      	adds	r3, #2
 8013a0a:	6003      	str	r3, [r0, #0]
 8013a0c:	680b      	ldr	r3, [r1, #0]
 8013a0e:	b10b      	cbz	r3, 8013a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013a10:	3301      	adds	r3, #1
 8013a12:	600b      	str	r3, [r1, #0]
 8013a14:	6803      	ldr	r3, [r0, #0]
 8013a16:	2b00      	cmp	r3, #0
 8013a18:	d036      	beq.n	8013a88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013a1a:	881b      	ldrh	r3, [r3, #0]
 8013a1c:	2b2a      	cmp	r3, #42	; 0x2a
 8013a1e:	d137      	bne.n	8013a90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013a20:	f04f 33ff 	mov.w	r3, #4294967295
 8013a24:	602b      	str	r3, [r5, #0]
 8013a26:	6803      	ldr	r3, [r0, #0]
 8013a28:	b10b      	cbz	r3, 8013a2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013a2a:	3302      	adds	r3, #2
 8013a2c:	6003      	str	r3, [r0, #0]
 8013a2e:	680b      	ldr	r3, [r1, #0]
 8013a30:	b10b      	cbz	r3, 8013a36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013a32:	3301      	adds	r3, #1
 8013a34:	600b      	str	r3, [r1, #0]
 8013a36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013a3a:	680c      	ldr	r4, [r1, #0]
 8013a3c:	b134      	cbz	r4, 8013a4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013a3e:	7824      	ldrb	r4, [r4, #0]
 8013a40:	e7cc      	b.n	80139dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013a42:	680b      	ldr	r3, [r1, #0]
 8013a44:	2b00      	cmp	r3, #0
 8013a46:	d0f6      	beq.n	8013a36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013a48:	781c      	ldrb	r4, [r3, #0]
 8013a4a:	e7d7      	b.n	80139fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013a4c:	2300      	movs	r3, #0
 8013a4e:	6033      	str	r3, [r6, #0]
 8013a50:	220a      	movs	r2, #10
 8013a52:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013a56:	fa1f f38c 	uxth.w	r3, ip
 8013a5a:	2b09      	cmp	r3, #9
 8013a5c:	d8ce      	bhi.n	80139fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013a5e:	6833      	ldr	r3, [r6, #0]
 8013a60:	fb02 c303 	mla	r3, r2, r3, ip
 8013a64:	6033      	str	r3, [r6, #0]
 8013a66:	6803      	ldr	r3, [r0, #0]
 8013a68:	b10b      	cbz	r3, 8013a6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013a6a:	3302      	adds	r3, #2
 8013a6c:	6003      	str	r3, [r0, #0]
 8013a6e:	680b      	ldr	r3, [r1, #0]
 8013a70:	b10b      	cbz	r3, 8013a76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013a72:	3301      	adds	r3, #1
 8013a74:	600b      	str	r3, [r1, #0]
 8013a76:	6803      	ldr	r3, [r0, #0]
 8013a78:	b10b      	cbz	r3, 8013a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013a7a:	881c      	ldrh	r4, [r3, #0]
 8013a7c:	e7e9      	b.n	8013a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013a7e:	680c      	ldr	r4, [r1, #0]
 8013a80:	2c00      	cmp	r4, #0
 8013a82:	d0e6      	beq.n	8013a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013a84:	7824      	ldrb	r4, [r4, #0]
 8013a86:	e7e4      	b.n	8013a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013a88:	680b      	ldr	r3, [r1, #0]
 8013a8a:	b10b      	cbz	r3, 8013a90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013a8c:	781b      	ldrb	r3, [r3, #0]
 8013a8e:	e7c5      	b.n	8013a1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013a90:	2200      	movs	r2, #0
 8013a92:	602a      	str	r2, [r5, #0]
 8013a94:	240a      	movs	r4, #10
 8013a96:	3b30      	subs	r3, #48	; 0x30
 8013a98:	b29e      	uxth	r6, r3
 8013a9a:	2e09      	cmp	r6, #9
 8013a9c:	682a      	ldr	r2, [r5, #0]
 8013a9e:	d813      	bhi.n	8013ac8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013aa0:	fb04 3302 	mla	r3, r4, r2, r3
 8013aa4:	602b      	str	r3, [r5, #0]
 8013aa6:	6803      	ldr	r3, [r0, #0]
 8013aa8:	b10b      	cbz	r3, 8013aae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013aaa:	3302      	adds	r3, #2
 8013aac:	6003      	str	r3, [r0, #0]
 8013aae:	680b      	ldr	r3, [r1, #0]
 8013ab0:	b10b      	cbz	r3, 8013ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013ab2:	3301      	adds	r3, #1
 8013ab4:	600b      	str	r3, [r1, #0]
 8013ab6:	6803      	ldr	r3, [r0, #0]
 8013ab8:	b10b      	cbz	r3, 8013abe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013aba:	881b      	ldrh	r3, [r3, #0]
 8013abc:	e7eb      	b.n	8013a96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013abe:	680b      	ldr	r3, [r1, #0]
 8013ac0:	2b00      	cmp	r3, #0
 8013ac2:	d0e8      	beq.n	8013a96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013ac4:	781b      	ldrb	r3, [r3, #0]
 8013ac6:	e7e6      	b.n	8013a96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013ac8:	2a06      	cmp	r2, #6
 8013aca:	bfa8      	it	ge
 8013acc:	2206      	movge	r2, #6
 8013ace:	602a      	str	r2, [r5, #0]
 8013ad0:	e7b1      	b.n	8013a36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013ad2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013ad2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ad6:	b0a3      	sub	sp, #140	; 0x8c
 8013ad8:	2600      	movs	r6, #0
 8013ada:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8013ade:	4607      	mov	r7, r0
 8013ae0:	4688      	mov	r8, r1
 8013ae2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013ae6:	4631      	mov	r1, r6
 8013ae8:	2242      	movs	r2, #66	; 0x42
 8013aea:	4648      	mov	r0, r9
 8013aec:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8013aee:	960d      	str	r6, [sp, #52]	; 0x34
 8013af0:	f00c fefa 	bl	80208e8 <memset>
 8013af4:	b15f      	cbz	r7, 8013b0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013af6:	f108 3aff 	add.w	sl, r8, #4294967295
 8013afa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013afc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013afe:	b152      	cbz	r2, 8013b16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013b00:	8812      	ldrh	r2, [r2, #0]
 8013b02:	b10a      	cbz	r2, 8013b08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013b04:	459a      	cmp	sl, r3
 8013b06:	dc2e      	bgt.n	8013b66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013b08:	2200      	movs	r2, #0
 8013b0a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013b0e:	4638      	mov	r0, r7
 8013b10:	b023      	add	sp, #140	; 0x8c
 8013b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b16:	9a08      	ldr	r2, [sp, #32]
 8013b18:	2a00      	cmp	r2, #0
 8013b1a:	d0f5      	beq.n	8013b08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013b1c:	7812      	ldrb	r2, [r2, #0]
 8013b1e:	e7f0      	b.n	8013b02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013b20:	2d00      	cmp	r5, #0
 8013b22:	d0ea      	beq.n	8013afa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b24:	782a      	ldrb	r2, [r5, #0]
 8013b26:	b142      	cbz	r2, 8013b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013b28:	2a25      	cmp	r2, #37	; 0x25
 8013b2a:	d001      	beq.n	8013b30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013b2c:	459a      	cmp	sl, r3
 8013b2e:	dc08      	bgt.n	8013b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013b30:	f1bb 0f00 	cmp.w	fp, #0
 8013b34:	d121      	bne.n	8013b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013b36:	2d00      	cmp	r5, #0
 8013b38:	d0df      	beq.n	8013afa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b3a:	782a      	ldrb	r2, [r5, #0]
 8013b3c:	f04f 0b00 	mov.w	fp, #0
 8013b40:	e01d      	b.n	8013b7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013b42:	f1bb 0f00 	cmp.w	fp, #0
 8013b46:	d078      	beq.n	8013c3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013b48:	f8bb 2000 	ldrh.w	r2, [fp]
 8013b4c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013b50:	f1bb 0f00 	cmp.w	fp, #0
 8013b54:	d002      	beq.n	8013b5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013b56:	f10b 0202 	add.w	r2, fp, #2
 8013b5a:	9209      	str	r2, [sp, #36]	; 0x24
 8013b5c:	b10d      	cbz	r5, 8013b62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013b5e:	3501      	adds	r5, #1
 8013b60:	9508      	str	r5, [sp, #32]
 8013b62:	3301      	adds	r3, #1
 8013b64:	930d      	str	r3, [sp, #52]	; 0x34
 8013b66:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013b6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b6c:	f1bb 0f00 	cmp.w	fp, #0
 8013b70:	d0d6      	beq.n	8013b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013b72:	f8bb 2000 	ldrh.w	r2, [fp]
 8013b76:	2a00      	cmp	r2, #0
 8013b78:	d1d6      	bne.n	8013b28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013b7a:	f8bb 2000 	ldrh.w	r2, [fp]
 8013b7e:	2a00      	cmp	r2, #0
 8013b80:	d0bb      	beq.n	8013afa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b82:	459a      	cmp	sl, r3
 8013b84:	ddb9      	ble.n	8013afa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b86:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013b8a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013b8e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013b92:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013b96:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013b9a:	960e      	str	r6, [sp, #56]	; 0x38
 8013b9c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013ba0:	960f      	str	r6, [sp, #60]	; 0x3c
 8013ba2:	f1bb 0f00 	cmp.w	fp, #0
 8013ba6:	d002      	beq.n	8013bae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013ba8:	f10b 0302 	add.w	r3, fp, #2
 8013bac:	9309      	str	r3, [sp, #36]	; 0x24
 8013bae:	b10d      	cbz	r5, 8013bb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013bb0:	1c6b      	adds	r3, r5, #1
 8013bb2:	9308      	str	r3, [sp, #32]
 8013bb4:	ab0f      	add	r3, sp, #60	; 0x3c
 8013bb6:	9305      	str	r3, [sp, #20]
 8013bb8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013bbc:	9304      	str	r3, [sp, #16]
 8013bbe:	ab0e      	add	r3, sp, #56	; 0x38
 8013bc0:	9303      	str	r3, [sp, #12]
 8013bc2:	ab0c      	add	r3, sp, #48	; 0x30
 8013bc4:	9302      	str	r3, [sp, #8]
 8013bc6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013bca:	9301      	str	r3, [sp, #4]
 8013bcc:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013bd0:	9300      	str	r3, [sp, #0]
 8013bd2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013bd6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013bda:	a908      	add	r1, sp, #32
 8013bdc:	a809      	add	r0, sp, #36	; 0x24
 8013bde:	f7ff fea8 	bl	8013932 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013be2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013be4:	2b00      	cmp	r3, #0
 8013be6:	bfbe      	ittt	lt
 8013be8:	6823      	ldrlt	r3, [r4, #0]
 8013bea:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013bee:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013bf0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013bf2:	bfb8      	it	lt
 8013bf4:	3404      	addlt	r4, #4
 8013bf6:	2b00      	cmp	r3, #0
 8013bf8:	bfb8      	it	lt
 8013bfa:	6823      	ldrlt	r3, [r4, #0]
 8013bfc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013c00:	bfbe      	ittt	lt
 8013c02:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013c06:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013c08:	3404      	addlt	r4, #4
 8013c0a:	b1d9      	cbz	r1, 8013c44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013c0c:	880b      	ldrh	r3, [r1, #0]
 8013c0e:	2b69      	cmp	r3, #105	; 0x69
 8013c10:	d01f      	beq.n	8013c52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013c12:	d82f      	bhi.n	8013c74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013c14:	2b58      	cmp	r3, #88	; 0x58
 8013c16:	d01c      	beq.n	8013c52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013c18:	d818      	bhi.n	8013c4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013c1a:	2b25      	cmp	r3, #37	; 0x25
 8013c1c:	d034      	beq.n	8013c88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013c1e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013c22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c24:	f1bb 0f00 	cmp.w	fp, #0
 8013c28:	f000 80b8 	beq.w	8013d9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013c2c:	f8bb 5000 	ldrh.w	r5, [fp]
 8013c30:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013c34:	3301      	adds	r3, #1
 8013c36:	930d      	str	r3, [sp, #52]	; 0x34
 8013c38:	e029      	b.n	8013c8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013c3a:	b10d      	cbz	r5, 8013c40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013c3c:	782a      	ldrb	r2, [r5, #0]
 8013c3e:	e785      	b.n	8013b4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013c40:	462a      	mov	r2, r5
 8013c42:	e783      	b.n	8013b4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013c44:	2a00      	cmp	r2, #0
 8013c46:	d0ea      	beq.n	8013c1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013c48:	7813      	ldrb	r3, [r2, #0]
 8013c4a:	e7e0      	b.n	8013c0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013c4c:	3b63      	subs	r3, #99	; 0x63
 8013c4e:	2b01      	cmp	r3, #1
 8013c50:	d8e5      	bhi.n	8013c1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013c52:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013c56:	b329      	cbz	r1, 8013ca4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013c58:	880b      	ldrh	r3, [r1, #0]
 8013c5a:	2b69      	cmp	r3, #105	; 0x69
 8013c5c:	d063      	beq.n	8013d26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013c5e:	d825      	bhi.n	8013cac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013c60:	2b63      	cmp	r3, #99	; 0x63
 8013c62:	d038      	beq.n	8013cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013c64:	2b64      	cmp	r3, #100	; 0x64
 8013c66:	d05e      	beq.n	8013d26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013c68:	2b58      	cmp	r3, #88	; 0x58
 8013c6a:	d07b      	beq.n	8013d64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013c6c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013c70:	4625      	mov	r5, r4
 8013c72:	e036      	b.n	8013ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013c74:	2b73      	cmp	r3, #115	; 0x73
 8013c76:	d0ec      	beq.n	8013c52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013c78:	d802      	bhi.n	8013c80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013c7a:	2b6f      	cmp	r3, #111	; 0x6f
 8013c7c:	d1cf      	bne.n	8013c1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013c7e:	e7e8      	b.n	8013c52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013c80:	2b75      	cmp	r3, #117	; 0x75
 8013c82:	d0e6      	beq.n	8013c52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013c84:	2b78      	cmp	r3, #120	; 0x78
 8013c86:	e7f9      	b.n	8013c7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013c88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013c8a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013c8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c90:	b10b      	cbz	r3, 8013c96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013c92:	3302      	adds	r3, #2
 8013c94:	9309      	str	r3, [sp, #36]	; 0x24
 8013c96:	9b08      	ldr	r3, [sp, #32]
 8013c98:	2b00      	cmp	r3, #0
 8013c9a:	f43f af2e 	beq.w	8013afa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013c9e:	3301      	adds	r3, #1
 8013ca0:	9308      	str	r3, [sp, #32]
 8013ca2:	e72a      	b.n	8013afa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013ca4:	2a00      	cmp	r2, #0
 8013ca6:	d0e1      	beq.n	8013c6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013ca8:	7813      	ldrb	r3, [r2, #0]
 8013caa:	e7d6      	b.n	8013c5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013cac:	2b73      	cmp	r3, #115	; 0x73
 8013cae:	d036      	beq.n	8013d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013cb0:	d807      	bhi.n	8013cc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013cb2:	2b6f      	cmp	r3, #111	; 0x6f
 8013cb4:	d1da      	bne.n	8013c6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013cb6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013cb8:	1d25      	adds	r5, r4, #4
 8013cba:	eba8 0202 	sub.w	r2, r8, r2
 8013cbe:	2308      	movs	r3, #8
 8013cc0:	e04a      	b.n	8013d58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013cc2:	2b75      	cmp	r3, #117	; 0x75
 8013cc4:	d043      	beq.n	8013d4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013cc6:	2b78      	cmp	r3, #120	; 0x78
 8013cc8:	d1d0      	bne.n	8013c6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013cca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013ccc:	1d25      	adds	r5, r4, #4
 8013cce:	eba8 0202 	sub.w	r2, r8, r2
 8013cd2:	2310      	movs	r3, #16
 8013cd4:	e040      	b.n	8013d58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013cd6:	6823      	ldr	r3, [r4, #0]
 8013cd8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8013cdc:	1d25      	adds	r5, r4, #4
 8013cde:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013ce2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ce4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013ce8:	2b00      	cmp	r3, #0
 8013cea:	d052      	beq.n	8013d92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013cec:	881a      	ldrh	r2, [r3, #0]
 8013cee:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8013cf2:	a80d      	add	r0, sp, #52	; 0x34
 8013cf4:	9005      	str	r0, [sp, #20]
 8013cf6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013cfa:	9004      	str	r0, [sp, #16]
 8013cfc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013cfe:	9003      	str	r0, [sp, #12]
 8013d00:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8013d04:	9002      	str	r0, [sp, #8]
 8013d06:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013d08:	9001      	str	r0, [sp, #4]
 8013d0a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8013d0e:	9000      	str	r0, [sp, #0]
 8013d10:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013d14:	a810      	add	r0, sp, #64	; 0x40
 8013d16:	f7ff fd49 	bl	80137ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013d1a:	462c      	mov	r4, r5
 8013d1c:	e7b7      	b.n	8013c8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013d1e:	6823      	ldr	r3, [r4, #0]
 8013d20:	1d25      	adds	r5, r4, #4
 8013d22:	9310      	str	r3, [sp, #64]	; 0x40
 8013d24:	e7dd      	b.n	8013ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013d26:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013d28:	6820      	ldr	r0, [r4, #0]
 8013d2a:	eba8 0202 	sub.w	r2, r8, r2
 8013d2e:	230a      	movs	r3, #10
 8013d30:	b292      	uxth	r2, r2
 8013d32:	4649      	mov	r1, r9
 8013d34:	f7ff fd08 	bl	8013748 <_ZN8touchgfx7Unicode4itoaElPtti>
 8013d38:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013d3c:	2b2d      	cmp	r3, #45	; 0x2d
 8013d3e:	f104 0504 	add.w	r5, r4, #4
 8013d42:	d1ce      	bne.n	8013ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013d44:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013d48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d4a:	3302      	adds	r3, #2
 8013d4c:	e7e9      	b.n	8013d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013d4e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013d50:	1d25      	adds	r5, r4, #4
 8013d52:	eba8 0202 	sub.w	r2, r8, r2
 8013d56:	230a      	movs	r3, #10
 8013d58:	b292      	uxth	r2, r2
 8013d5a:	4649      	mov	r1, r9
 8013d5c:	6820      	ldr	r0, [r4, #0]
 8013d5e:	f7ff fcd5 	bl	801370c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013d62:	e7be      	b.n	8013ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013d64:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013d66:	6820      	ldr	r0, [r4, #0]
 8013d68:	eba8 0202 	sub.w	r2, r8, r2
 8013d6c:	b292      	uxth	r2, r2
 8013d6e:	2310      	movs	r3, #16
 8013d70:	4649      	mov	r1, r9
 8013d72:	f7ff fccb 	bl	801370c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013d76:	1d25      	adds	r5, r4, #4
 8013d78:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013d7c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013d80:	2b00      	cmp	r3, #0
 8013d82:	d0ae      	beq.n	8013ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013d84:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013d88:	2919      	cmp	r1, #25
 8013d8a:	d8f7      	bhi.n	8013d7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013d8c:	3b20      	subs	r3, #32
 8013d8e:	8013      	strh	r3, [r2, #0]
 8013d90:	e7f4      	b.n	8013d7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013d92:	9a08      	ldr	r2, [sp, #32]
 8013d94:	2a00      	cmp	r2, #0
 8013d96:	d0aa      	beq.n	8013cee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013d98:	7812      	ldrb	r2, [r2, #0]
 8013d9a:	e7a8      	b.n	8013cee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013d9c:	2d00      	cmp	r5, #0
 8013d9e:	f43f af47 	beq.w	8013c30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8013da2:	782d      	ldrb	r5, [r5, #0]
 8013da4:	e744      	b.n	8013c30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08013da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8013da6:	b507      	push	{r0, r1, r2, lr}
 8013da8:	9300      	str	r3, [sp, #0]
 8013daa:	4613      	mov	r3, r2
 8013dac:	2200      	movs	r2, #0
 8013dae:	f7ff fe90 	bl	8013ad2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8013db2:	b003      	add	sp, #12
 8013db4:	f85d fb04 	ldr.w	pc, [sp], #4

08013db8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8013db8:	b40c      	push	{r2, r3}
 8013dba:	b507      	push	{r0, r1, r2, lr}
 8013dbc:	ab04      	add	r3, sp, #16
 8013dbe:	f853 2b04 	ldr.w	r2, [r3], #4
 8013dc2:	9301      	str	r3, [sp, #4]
 8013dc4:	f7ff ffef 	bl	8013da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8013dc8:	b003      	add	sp, #12
 8013dca:	f85d eb04 	ldr.w	lr, [sp], #4
 8013dce:	b002      	add	sp, #8
 8013dd0:	4770      	bx	lr
	...

08013dd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8013dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013dd8:	b0c3      	sub	sp, #268	; 0x10c
 8013dda:	2600      	movs	r6, #0
 8013ddc:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8013de0:	4607      	mov	r7, r0
 8013de2:	4689      	mov	r9, r1
 8013de4:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013de8:	4631      	mov	r1, r6
 8013dea:	22c8      	movs	r2, #200	; 0xc8
 8013dec:	4640      	mov	r0, r8
 8013dee:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8013df2:	960c      	str	r6, [sp, #48]	; 0x30
 8013df4:	f00c fd78 	bl	80208e8 <memset>
 8013df8:	b17f      	cbz	r7, 8013e1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 8013dfa:	eddf 5aa4 	vldr	s11, [pc, #656]	; 801408c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8013dfe:	f8df b298 	ldr.w	fp, [pc, #664]	; 8014098 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8013e02:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013e04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e06:	b162      	cbz	r2, 8013e22 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 8013e08:	8812      	ldrh	r2, [r2, #0]
 8013e0a:	b11a      	cbz	r2, 8013e14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8013e0c:	f109 31ff 	add.w	r1, r9, #4294967295
 8013e10:	4299      	cmp	r1, r3
 8013e12:	dc26      	bgt.n	8013e62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8013e14:	2200      	movs	r2, #0
 8013e16:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013e1a:	4638      	mov	r0, r7
 8013e1c:	b043      	add	sp, #268	; 0x10c
 8013e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e22:	9a08      	ldr	r2, [sp, #32]
 8013e24:	2a00      	cmp	r2, #0
 8013e26:	d0f5      	beq.n	8013e14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8013e28:	7812      	ldrb	r2, [r2, #0]
 8013e2a:	e7ee      	b.n	8013e0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8013e2c:	2c00      	cmp	r4, #0
 8013e2e:	d0e8      	beq.n	8013e02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013e30:	7822      	ldrb	r2, [r4, #0]
 8013e32:	b132      	cbz	r2, 8013e42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8013e34:	2a25      	cmp	r2, #37	; 0x25
 8013e36:	d001      	beq.n	8013e3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 8013e38:	4299      	cmp	r1, r3
 8013e3a:	dc05      	bgt.n	8013e48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8013e3c:	b9cd      	cbnz	r5, 8013e72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8013e3e:	2c00      	cmp	r4, #0
 8013e40:	d0df      	beq.n	8013e02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013e42:	7822      	ldrb	r2, [r4, #0]
 8013e44:	2500      	movs	r5, #0
 8013e46:	e015      	b.n	8013e74 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 8013e48:	2d00      	cmp	r5, #0
 8013e4a:	d073      	beq.n	8013f34 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8013e4c:	882a      	ldrh	r2, [r5, #0]
 8013e4e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013e52:	b10d      	cbz	r5, 8013e58 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8013e54:	3502      	adds	r5, #2
 8013e56:	9509      	str	r5, [sp, #36]	; 0x24
 8013e58:	b10c      	cbz	r4, 8013e5e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 8013e5a:	3401      	adds	r4, #1
 8013e5c:	9408      	str	r4, [sp, #32]
 8013e5e:	3301      	adds	r3, #1
 8013e60:	930c      	str	r3, [sp, #48]	; 0x30
 8013e62:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 8013e66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e68:	2d00      	cmp	r5, #0
 8013e6a:	d0df      	beq.n	8013e2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8013e6c:	882a      	ldrh	r2, [r5, #0]
 8013e6e:	2a00      	cmp	r2, #0
 8013e70:	d1e0      	bne.n	8013e34 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8013e72:	882a      	ldrh	r2, [r5, #0]
 8013e74:	2a00      	cmp	r2, #0
 8013e76:	d0c4      	beq.n	8013e02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013e78:	4299      	cmp	r1, r3
 8013e7a:	ddc2      	ble.n	8013e02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013e7c:	2300      	movs	r3, #0
 8013e7e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013e82:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8013e86:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8013e8a:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013e8e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013e92:	930d      	str	r3, [sp, #52]	; 0x34
 8013e94:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8013e98:	930e      	str	r3, [sp, #56]	; 0x38
 8013e9a:	b10d      	cbz	r5, 8013ea0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8013e9c:	1cab      	adds	r3, r5, #2
 8013e9e:	9309      	str	r3, [sp, #36]	; 0x24
 8013ea0:	b10c      	cbz	r4, 8013ea6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8013ea2:	1c63      	adds	r3, r4, #1
 8013ea4:	9308      	str	r3, [sp, #32]
 8013ea6:	ab0e      	add	r3, sp, #56	; 0x38
 8013ea8:	9305      	str	r3, [sp, #20]
 8013eaa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013eae:	9304      	str	r3, [sp, #16]
 8013eb0:	ab0d      	add	r3, sp, #52	; 0x34
 8013eb2:	9303      	str	r3, [sp, #12]
 8013eb4:	ab0b      	add	r3, sp, #44	; 0x2c
 8013eb6:	9302      	str	r3, [sp, #8]
 8013eb8:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8013ebc:	9301      	str	r3, [sp, #4]
 8013ebe:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8013ec2:	9300      	str	r3, [sp, #0]
 8013ec4:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 8013ec8:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8013ecc:	a908      	add	r1, sp, #32
 8013ece:	a809      	add	r0, sp, #36	; 0x24
 8013ed0:	f7ff fd2f 	bl	8013932 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013ed4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013ed6:	2b00      	cmp	r3, #0
 8013ed8:	da0b      	bge.n	8013ef2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 8013eda:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8013ede:	edd3 7a00 	vldr	s15, [r3]
 8013ee2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013ee6:	3601      	adds	r6, #1
 8013ee8:	ee17 3a90 	vmov	r3, s15
 8013eec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013ef0:	930d      	str	r3, [sp, #52]	; 0x34
 8013ef2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ef4:	2b00      	cmp	r3, #0
 8013ef6:	da0b      	bge.n	8013f10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 8013ef8:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8013efc:	edd3 7a00 	vldr	s15, [r3]
 8013f00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013f04:	3601      	adds	r6, #1
 8013f06:	ee17 3a90 	vmov	r3, s15
 8013f0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013f0e:	930e      	str	r3, [sp, #56]	; 0x38
 8013f10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f12:	b1a3      	cbz	r3, 8013f3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8013f14:	881a      	ldrh	r2, [r3, #0]
 8013f16:	2a25      	cmp	r2, #37	; 0x25
 8013f18:	d016      	beq.n	8013f48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 8013f1a:	2a66      	cmp	r2, #102	; 0x66
 8013f1c:	d01a      	beq.n	8013f54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8013f1e:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8013f22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f24:	2d00      	cmp	r5, #0
 8013f26:	f000 80fe 	beq.w	8014126 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 8013f2a:	882c      	ldrh	r4, [r5, #0]
 8013f2c:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8013f30:	3301      	adds	r3, #1
 8013f32:	e00d      	b.n	8013f50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8013f34:	b10c      	cbz	r4, 8013f3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 8013f36:	7822      	ldrb	r2, [r4, #0]
 8013f38:	e789      	b.n	8013e4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8013f3a:	4622      	mov	r2, r4
 8013f3c:	e787      	b.n	8013e4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8013f3e:	9b08      	ldr	r3, [sp, #32]
 8013f40:	2b00      	cmp	r3, #0
 8013f42:	d0ec      	beq.n	8013f1e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8013f44:	781a      	ldrb	r2, [r3, #0]
 8013f46:	e7e6      	b.n	8013f16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 8013f48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f4a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013f4e:	3302      	adds	r3, #2
 8013f50:	930c      	str	r3, [sp, #48]	; 0x30
 8013f52:	e042      	b.n	8013fda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8013f54:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8013f58:	edd3 7a00 	vldr	s15, [r3]
 8013f5c:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8013f60:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8013f64:	3601      	adds	r6, #1
 8013f66:	b923      	cbnz	r3, 8013f72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 8013f68:	2301      	movs	r3, #1
 8013f6a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8013f6e:	2306      	movs	r3, #6
 8013f70:	930e      	str	r3, [sp, #56]	; 0x38
 8013f72:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013f76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f7a:	bf48      	it	mi
 8013f7c:	eef1 7a67 	vnegmi.f32	s15, s15
 8013f80:	eeb0 7ae7 	vabs.f32	s14, s15
 8013f84:	bf48      	it	mi
 8013f86:	232d      	movmi	r3, #45	; 0x2d
 8013f88:	eeb4 7a65 	vcmp.f32	s14, s11
 8013f8c:	bf48      	it	mi
 8013f8e:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 8013f92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f96:	dd2b      	ble.n	8013ff0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 8013f98:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8013f9c:	2366      	movs	r3, #102	; 0x66
 8013f9e:	9311      	str	r3, [sp, #68]	; 0x44
 8013fa0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fa2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013fa6:	2b00      	cmp	r3, #0
 8013fa8:	f000 80b7 	beq.w	801411a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8013fac:	881a      	ldrh	r2, [r3, #0]
 8013fae:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8013fb2:	a80c      	add	r0, sp, #48	; 0x30
 8013fb4:	9005      	str	r0, [sp, #20]
 8013fb6:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 8013fba:	9004      	str	r0, [sp, #16]
 8013fbc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013fbe:	9003      	str	r0, [sp, #12]
 8013fc0:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8013fc4:	9002      	str	r0, [sp, #8]
 8013fc6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013fc8:	9001      	str	r0, [sp, #4]
 8013fca:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8013fce:	9000      	str	r0, [sp, #0]
 8013fd0:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8013fd4:	a80f      	add	r0, sp, #60	; 0x3c
 8013fd6:	f7ff fbe9 	bl	80137ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013fda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fdc:	b10b      	cbz	r3, 8013fe2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8013fde:	3302      	adds	r3, #2
 8013fe0:	9309      	str	r3, [sp, #36]	; 0x24
 8013fe2:	9b08      	ldr	r3, [sp, #32]
 8013fe4:	2b00      	cmp	r3, #0
 8013fe6:	f43f af0c 	beq.w	8013e02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013fea:	3301      	adds	r3, #1
 8013fec:	9308      	str	r3, [sp, #32]
 8013fee:	e708      	b.n	8013e02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013ff0:	eef4 7a67 	vcmp.f32	s15, s15
 8013ff4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ff8:	d60b      	bvs.n	8014012 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 8013ffa:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013ffc:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8014090 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014000:	2300      	movs	r3, #0
 8014002:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 8014006:	4283      	cmp	r3, r0
 8014008:	da07      	bge.n	801401a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801400a:	ee87 7a06 	vdiv.f32	s14, s14, s12
 801400e:	3301      	adds	r3, #1
 8014010:	e7f9      	b.n	8014006 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014012:	4b20      	ldr	r3, [pc, #128]	; (8014094 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014014:	9310      	str	r3, [sp, #64]	; 0x40
 8014016:	236e      	movs	r3, #110	; 0x6e
 8014018:	e7c1      	b.n	8013f9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801401a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801401e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014022:	eeb0 7a67 	vmov.f32	s14, s15
 8014026:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801402a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801402e:	da27      	bge.n	8014080 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014030:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014032:	2100      	movs	r1, #0
 8014034:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 8014038:	eba9 0202 	sub.w	r2, r9, r2
 801403c:	eef4 6ac5 	vcmpe.f32	s13, s10
 8014040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014044:	b28c      	uxth	r4, r1
 8014046:	db2a      	blt.n	801409e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8014048:	1a53      	subs	r3, r2, r1
 801404a:	2b00      	cmp	r3, #0
 801404c:	dd27      	ble.n	801409e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801404e:	2963      	cmp	r1, #99	; 0x63
 8014050:	d024      	beq.n	801409c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8014052:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014056:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801405a:	ee17 3a10 	vmov	r3, s14
 801405e:	2b09      	cmp	r3, #9
 8014060:	bfa8      	it	ge
 8014062:	2309      	movge	r3, #9
 8014064:	ee07 3a10 	vmov	s14, r3
 8014068:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801406c:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8014070:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 8014074:	eee7 7a66 	vfms.f32	s15, s14, s13
 8014078:	3101      	adds	r1, #1
 801407a:	eec6 6a86 	vdiv.f32	s13, s13, s12
 801407e:	e7dd      	b.n	801403c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 8014080:	ee66 6a86 	vmul.f32	s13, s13, s12
 8014084:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014088:	e7cd      	b.n	8014026 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 801408a:	bf00      	nop
 801408c:	7f7fffff 	.word	0x7f7fffff
 8014090:	3f000002 	.word	0x3f000002
 8014094:	0061006e 	.word	0x0061006e
 8014098:	006e0069 	.word	0x006e0069
 801409c:	460c      	mov	r4, r1
 801409e:	2a63      	cmp	r2, #99	; 0x63
 80140a0:	bfd4      	ite	le
 80140a2:	ebc4 0202 	rsble	r2, r4, r2
 80140a6:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 80140aa:	2a00      	cmp	r2, #0
 80140ac:	dd30      	ble.n	8014110 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80140ae:	4603      	mov	r3, r0
 80140b0:	2501      	movs	r5, #1
 80140b2:	210a      	movs	r1, #10
 80140b4:	2b00      	cmp	r3, #0
 80140b6:	dd0d      	ble.n	80140d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 80140b8:	ee67 7a86 	vmul.f32	s15, s15, s12
 80140bc:	3b01      	subs	r3, #1
 80140be:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80140c2:	ee17 ca10 	vmov	ip, s14
 80140c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80140ca:	fb01 c505 	mla	r5, r1, r5, ip
 80140ce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80140d2:	e7ef      	b.n	80140b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 80140d4:	2800      	cmp	r0, #0
 80140d6:	f100 33ff 	add.w	r3, r0, #4294967295
 80140da:	bfac      	ite	ge
 80140dc:	1a18      	subge	r0, r3, r0
 80140de:	4618      	movlt	r0, r3
 80140e0:	0064      	lsls	r4, r4, #1
 80140e2:	900e      	str	r0, [sp, #56]	; 0x38
 80140e4:	230a      	movs	r3, #10
 80140e6:	b292      	uxth	r2, r2
 80140e8:	eb08 0104 	add.w	r1, r8, r4
 80140ec:	4628      	mov	r0, r5
 80140ee:	f7ff fb2b 	bl	8013748 <_ZN8touchgfx7Unicode4itoaElPtti>
 80140f2:	2d01      	cmp	r5, #1
 80140f4:	dc0a      	bgt.n	801410c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 80140f6:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 80140fa:	2b00      	cmp	r3, #0
 80140fc:	bf0c      	ite	eq
 80140fe:	2300      	moveq	r3, #0
 8014100:	232e      	movne	r3, #46	; 0x2e
 8014102:	aa42      	add	r2, sp, #264	; 0x108
 8014104:	4414      	add	r4, r2
 8014106:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801410a:	e749      	b.n	8013fa0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 801410c:	232e      	movs	r3, #46	; 0x2e
 801410e:	e7f8      	b.n	8014102 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014110:	ab42      	add	r3, sp, #264	; 0x108
 8014112:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8014116:	2300      	movs	r3, #0
 8014118:	e7f5      	b.n	8014106 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801411a:	9a08      	ldr	r2, [sp, #32]
 801411c:	2a00      	cmp	r2, #0
 801411e:	f43f af46 	beq.w	8013fae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014122:	7812      	ldrb	r2, [r2, #0]
 8014124:	e743      	b.n	8013fae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014126:	2c00      	cmp	r4, #0
 8014128:	f43f af00 	beq.w	8013f2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801412c:	7824      	ldrb	r4, [r4, #0]
 801412e:	e6fd      	b.n	8013f2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014130 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014130:	b507      	push	{r0, r1, r2, lr}
 8014132:	9300      	str	r3, [sp, #0]
 8014134:	4613      	mov	r3, r2
 8014136:	2200      	movs	r2, #0
 8014138:	f7ff fe4c 	bl	8013dd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801413c:	b003      	add	sp, #12
 801413e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014144 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014144:	4b01      	ldr	r3, [pc, #4]	; (801414c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8014146:	6018      	str	r0, [r3, #0]
 8014148:	4770      	bx	lr
 801414a:	bf00      	nop
 801414c:	200154f0 	.word	0x200154f0

08014150 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014150:	4b06      	ldr	r3, [pc, #24]	; (801416c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014152:	881a      	ldrh	r2, [r3, #0]
 8014154:	4282      	cmp	r2, r0
 8014156:	d807      	bhi.n	8014168 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8014158:	4b05      	ldr	r3, [pc, #20]	; (8014170 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801415a:	881b      	ldrh	r3, [r3, #0]
 801415c:	4413      	add	r3, r2
 801415e:	4298      	cmp	r0, r3
 8014160:	bfac      	ite	ge
 8014162:	2000      	movge	r0, #0
 8014164:	2001      	movlt	r0, #1
 8014166:	4770      	bx	lr
 8014168:	2000      	movs	r0, #0
 801416a:	4770      	bx	lr
 801416c:	20015510 	.word	0x20015510
 8014170:	20015514 	.word	0x20015514

08014174 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014174:	b508      	push	{r3, lr}
 8014176:	4601      	mov	r1, r0
 8014178:	f7ff ffea 	bl	8014150 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801417c:	b118      	cbz	r0, 8014186 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801417e:	4b02      	ldr	r3, [pc, #8]	; (8014188 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8014180:	681b      	ldr	r3, [r3, #0]
 8014182:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8014186:	bd08      	pop	{r3, pc}
 8014188:	200154f4 	.word	0x200154f4

0801418c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801418c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801418e:	4c24      	ldr	r4, [pc, #144]	; (8014220 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8014190:	6823      	ldr	r3, [r4, #0]
 8014192:	2b00      	cmp	r3, #0
 8014194:	d042      	beq.n	801421c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014196:	4a23      	ldr	r2, [pc, #140]	; (8014224 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8014198:	4d23      	ldr	r5, [pc, #140]	; (8014228 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801419a:	8811      	ldrh	r1, [r2, #0]
 801419c:	f8b5 c000 	ldrh.w	ip, [r5]
 80141a0:	4822      	ldr	r0, [pc, #136]	; (801422c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80141a2:	4461      	add	r1, ip
 80141a4:	1c4a      	adds	r2, r1, #1
 80141a6:	f022 0201 	bic.w	r2, r2, #1
 80141aa:	008f      	lsls	r7, r1, #2
 80141ac:	0412      	lsls	r2, r2, #16
 80141ae:	19de      	adds	r6, r3, r7
 80141b0:	0c12      	lsrs	r2, r2, #16
 80141b2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80141b6:	6006      	str	r6, [r0, #0]
 80141b8:	4e1d      	ldr	r6, [pc, #116]	; (8014230 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80141ba:	19da      	adds	r2, r3, r7
 80141bc:	6032      	str	r2, [r6, #0]
 80141be:	220e      	movs	r2, #14
 80141c0:	fb02 f20c 	mul.w	r2, r2, ip
 80141c4:	3203      	adds	r2, #3
 80141c6:	f022 0203 	bic.w	r2, r2, #3
 80141ca:	443a      	add	r2, r7
 80141cc:	4f19      	ldr	r7, [pc, #100]	; (8014234 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80141ce:	4413      	add	r3, r2
 80141d0:	603b      	str	r3, [r7, #0]
 80141d2:	4f19      	ldr	r7, [pc, #100]	; (8014238 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80141d4:	2300      	movs	r3, #0
 80141d6:	803b      	strh	r3, [r7, #0]
 80141d8:	4f18      	ldr	r7, [pc, #96]	; (801423c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80141da:	683f      	ldr	r7, [r7, #0]
 80141dc:	1aba      	subs	r2, r7, r2
 80141de:	4f18      	ldr	r7, [pc, #96]	; (8014240 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80141e0:	603a      	str	r2, [r7, #0]
 80141e2:	4a18      	ldr	r2, [pc, #96]	; (8014244 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80141e4:	469c      	mov	ip, r3
 80141e6:	8013      	strh	r3, [r2, #0]
 80141e8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80141ec:	428b      	cmp	r3, r1
 80141ee:	d10d      	bne.n	801420c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80141f0:	882d      	ldrh	r5, [r5, #0]
 80141f2:	6830      	ldr	r0, [r6, #0]
 80141f4:	2300      	movs	r3, #0
 80141f6:	240e      	movs	r4, #14
 80141f8:	429d      	cmp	r5, r3
 80141fa:	d90f      	bls.n	801421c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80141fc:	fb04 0203 	mla	r2, r4, r3, r0
 8014200:	3301      	adds	r3, #1
 8014202:	7b11      	ldrb	r1, [r2, #12]
 8014204:	f36f 1145 	bfc	r1, #5, #1
 8014208:	7311      	strb	r1, [r2, #12]
 801420a:	e7f5      	b.n	80141f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801420c:	6822      	ldr	r2, [r4, #0]
 801420e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014212:	6802      	ldr	r2, [r0, #0]
 8014214:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8014218:	3301      	adds	r3, #1
 801421a:	e7e7      	b.n	80141ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801421c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801421e:	bf00      	nop
 8014220:	200154f4 	.word	0x200154f4
 8014224:	20015510 	.word	0x20015510
 8014228:	20015514 	.word	0x20015514
 801422c:	20015508 	.word	0x20015508
 8014230:	200154f8 	.word	0x200154f8
 8014234:	20015500 	.word	0x20015500
 8014238:	20015512 	.word	0x20015512
 801423c:	200154fc 	.word	0x200154fc
 8014240:	2001550c 	.word	0x2001550c
 8014244:	20015504 	.word	0x20015504

08014248 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8014248:	4b06      	ldr	r3, [pc, #24]	; (8014264 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801424a:	681b      	ldr	r3, [r3, #0]
 801424c:	b943      	cbnz	r3, 8014260 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801424e:	b139      	cbz	r1, 8014260 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014250:	4b05      	ldr	r3, [pc, #20]	; (8014268 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014252:	801a      	strh	r2, [r3, #0]
 8014254:	4b05      	ldr	r3, [pc, #20]	; (801426c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8014256:	6019      	str	r1, [r3, #0]
 8014258:	4b05      	ldr	r3, [pc, #20]	; (8014270 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801425a:	6018      	str	r0, [r3, #0]
 801425c:	f7ff bf96 	b.w	801418c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014260:	4770      	bx	lr
 8014262:	bf00      	nop
 8014264:	20015500 	.word	0x20015500
 8014268:	20015514 	.word	0x20015514
 801426c:	200154fc 	.word	0x200154fc
 8014270:	200154f4 	.word	0x200154f4

08014274 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014274:	b470      	push	{r4, r5, r6}
 8014276:	4c07      	ldr	r4, [pc, #28]	; (8014294 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8014278:	6826      	ldr	r6, [r4, #0]
 801427a:	4605      	mov	r5, r0
 801427c:	4610      	mov	r0, r2
 801427e:	9a03      	ldr	r2, [sp, #12]
 8014280:	b936      	cbnz	r6, 8014290 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014282:	6025      	str	r5, [r4, #0]
 8014284:	4c04      	ldr	r4, [pc, #16]	; (8014298 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8014286:	8021      	strh	r1, [r4, #0]
 8014288:	bc70      	pop	{r4, r5, r6}
 801428a:	4619      	mov	r1, r3
 801428c:	f7ff bfdc 	b.w	8014248 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8014290:	bc70      	pop	{r4, r5, r6}
 8014292:	4770      	bx	lr
 8014294:	20015518 	.word	0x20015518
 8014298:	20015510 	.word	0x20015510

0801429c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801429c:	4a12      	ldr	r2, [pc, #72]	; (80142e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801429e:	8803      	ldrh	r3, [r0, #0]
 80142a0:	8812      	ldrh	r2, [r2, #0]
 80142a2:	4293      	cmp	r3, r2
 80142a4:	d207      	bcs.n	80142b6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80142a6:	4a11      	ldr	r2, [pc, #68]	; (80142ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80142a8:	6812      	ldr	r2, [r2, #0]
 80142aa:	2114      	movs	r1, #20
 80142ac:	fb01 2303 	mla	r3, r1, r3, r2
 80142b0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80142b4:	4770      	bx	lr
 80142b6:	490e      	ldr	r1, [pc, #56]	; (80142f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80142b8:	8809      	ldrh	r1, [r1, #0]
 80142ba:	4411      	add	r1, r2
 80142bc:	428b      	cmp	r3, r1
 80142be:	da04      	bge.n	80142ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80142c0:	1a9b      	subs	r3, r3, r2
 80142c2:	4a0c      	ldr	r2, [pc, #48]	; (80142f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80142c4:	210e      	movs	r1, #14
 80142c6:	6812      	ldr	r2, [r2, #0]
 80142c8:	e7f0      	b.n	80142ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80142ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80142ce:	4293      	cmp	r3, r2
 80142d0:	d108      	bne.n	80142e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80142d2:	4b09      	ldr	r3, [pc, #36]	; (80142f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80142d4:	781b      	ldrb	r3, [r3, #0]
 80142d6:	b91b      	cbnz	r3, 80142e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80142d8:	4b08      	ldr	r3, [pc, #32]	; (80142fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80142da:	f9b3 0000 	ldrsh.w	r0, [r3]
 80142de:	4770      	bx	lr
 80142e0:	4b07      	ldr	r3, [pc, #28]	; (8014300 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80142e2:	e7fa      	b.n	80142da <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80142e4:	2000      	movs	r0, #0
 80142e6:	4770      	bx	lr
 80142e8:	20015510 	.word	0x20015510
 80142ec:	20015518 	.word	0x20015518
 80142f0:	20015514 	.word	0x20015514
 80142f4:	200154f8 	.word	0x200154f8
 80142f8:	20015480 	.word	0x20015480
 80142fc:	20015482 	.word	0x20015482
 8014300:	20015484 	.word	0x20015484

08014304 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014304:	4a12      	ldr	r2, [pc, #72]	; (8014350 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8014306:	8803      	ldrh	r3, [r0, #0]
 8014308:	8812      	ldrh	r2, [r2, #0]
 801430a:	4293      	cmp	r3, r2
 801430c:	d207      	bcs.n	801431e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801430e:	4a11      	ldr	r2, [pc, #68]	; (8014354 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014310:	6812      	ldr	r2, [r2, #0]
 8014312:	2114      	movs	r1, #20
 8014314:	fb01 2303 	mla	r3, r1, r3, r2
 8014318:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801431c:	4770      	bx	lr
 801431e:	490e      	ldr	r1, [pc, #56]	; (8014358 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014320:	8809      	ldrh	r1, [r1, #0]
 8014322:	4411      	add	r1, r2
 8014324:	428b      	cmp	r3, r1
 8014326:	da04      	bge.n	8014332 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8014328:	1a9b      	subs	r3, r3, r2
 801432a:	4a0c      	ldr	r2, [pc, #48]	; (801435c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801432c:	210e      	movs	r1, #14
 801432e:	6812      	ldr	r2, [r2, #0]
 8014330:	e7f0      	b.n	8014314 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014332:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014336:	4293      	cmp	r3, r2
 8014338:	d108      	bne.n	801434c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801433a:	4b09      	ldr	r3, [pc, #36]	; (8014360 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801433c:	781b      	ldrb	r3, [r3, #0]
 801433e:	b91b      	cbnz	r3, 8014348 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014340:	4b08      	ldr	r3, [pc, #32]	; (8014364 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014342:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014346:	4770      	bx	lr
 8014348:	4b07      	ldr	r3, [pc, #28]	; (8014368 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801434a:	e7fa      	b.n	8014342 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801434c:	2000      	movs	r0, #0
 801434e:	4770      	bx	lr
 8014350:	20015510 	.word	0x20015510
 8014354:	20015518 	.word	0x20015518
 8014358:	20015514 	.word	0x20015514
 801435c:	200154f8 	.word	0x200154f8
 8014360:	20015480 	.word	0x20015480
 8014364:	20015484 	.word	0x20015484
 8014368:	20015482 	.word	0x20015482

0801436c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801436c:	b510      	push	{r4, lr}
 801436e:	4a1f      	ldr	r2, [pc, #124]	; (80143ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8014370:	880b      	ldrh	r3, [r1, #0]
 8014372:	8812      	ldrh	r2, [r2, #0]
 8014374:	4293      	cmp	r3, r2
 8014376:	d213      	bcs.n	80143a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8014378:	4a1d      	ldr	r2, [pc, #116]	; (80143f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801437a:	6812      	ldr	r2, [r2, #0]
 801437c:	2114      	movs	r1, #20
 801437e:	fb01 2303 	mla	r3, r1, r3, r2
 8014382:	8a1a      	ldrh	r2, [r3, #16]
 8014384:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8014388:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801438c:	8a5b      	ldrh	r3, [r3, #18]
 801438e:	8004      	strh	r4, [r0, #0]
 8014390:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014394:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8014398:	8041      	strh	r1, [r0, #2]
 801439a:	8082      	strh	r2, [r0, #4]
 801439c:	80c3      	strh	r3, [r0, #6]
 801439e:	e00e      	b.n	80143be <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80143a0:	4914      	ldr	r1, [pc, #80]	; (80143f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80143a2:	8809      	ldrh	r1, [r1, #0]
 80143a4:	4411      	add	r1, r2
 80143a6:	428b      	cmp	r3, r1
 80143a8:	da0a      	bge.n	80143c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80143aa:	1a9b      	subs	r3, r3, r2
 80143ac:	4a12      	ldr	r2, [pc, #72]	; (80143f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80143ae:	6812      	ldr	r2, [r2, #0]
 80143b0:	210e      	movs	r1, #14
 80143b2:	fb01 2303 	mla	r3, r1, r3, r2
 80143b6:	681a      	ldr	r2, [r3, #0]
 80143b8:	6002      	str	r2, [r0, #0]
 80143ba:	685a      	ldr	r2, [r3, #4]
 80143bc:	6042      	str	r2, [r0, #4]
 80143be:	bd10      	pop	{r4, pc}
 80143c0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80143c4:	4293      	cmp	r3, r2
 80143c6:	d10b      	bne.n	80143e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80143c8:	4b0c      	ldr	r3, [pc, #48]	; (80143fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80143ca:	f9b3 1000 	ldrsh.w	r1, [r3]
 80143ce:	4b0c      	ldr	r3, [pc, #48]	; (8014400 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80143d0:	8081      	strh	r1, [r0, #4]
 80143d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80143d6:	80c2      	strh	r2, [r0, #6]
 80143d8:	2300      	movs	r3, #0
 80143da:	8003      	strh	r3, [r0, #0]
 80143dc:	8043      	strh	r3, [r0, #2]
 80143de:	e7ee      	b.n	80143be <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80143e0:	2300      	movs	r3, #0
 80143e2:	8003      	strh	r3, [r0, #0]
 80143e4:	8043      	strh	r3, [r0, #2]
 80143e6:	8083      	strh	r3, [r0, #4]
 80143e8:	e7d8      	b.n	801439c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80143ea:	bf00      	nop
 80143ec:	20015510 	.word	0x20015510
 80143f0:	20015518 	.word	0x20015518
 80143f4:	20015514 	.word	0x20015514
 80143f8:	200154f8 	.word	0x200154f8
 80143fc:	2001547c 	.word	0x2001547c
 8014400:	2001547e 	.word	0x2001547e

08014404 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014404:	4a17      	ldr	r2, [pc, #92]	; (8014464 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8014406:	8803      	ldrh	r3, [r0, #0]
 8014408:	8812      	ldrh	r2, [r2, #0]
 801440a:	4293      	cmp	r3, r2
 801440c:	d213      	bcs.n	8014436 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801440e:	4a16      	ldr	r2, [pc, #88]	; (8014468 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014410:	6812      	ldr	r2, [r2, #0]
 8014412:	2114      	movs	r1, #20
 8014414:	fb01 2303 	mla	r3, r1, r3, r2
 8014418:	8a1a      	ldrh	r2, [r3, #16]
 801441a:	8919      	ldrh	r1, [r3, #8]
 801441c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014420:	428a      	cmp	r2, r1
 8014422:	db1d      	blt.n	8014460 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014424:	8a58      	ldrh	r0, [r3, #18]
 8014426:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801442a:	895b      	ldrh	r3, [r3, #10]
 801442c:	4298      	cmp	r0, r3
 801442e:	bfac      	ite	ge
 8014430:	2000      	movge	r0, #0
 8014432:	2001      	movlt	r0, #1
 8014434:	4770      	bx	lr
 8014436:	490d      	ldr	r1, [pc, #52]	; (801446c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8014438:	8809      	ldrh	r1, [r1, #0]
 801443a:	4411      	add	r1, r2
 801443c:	428b      	cmp	r3, r1
 801443e:	da0d      	bge.n	801445c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014440:	1a9b      	subs	r3, r3, r2
 8014442:	4a0b      	ldr	r2, [pc, #44]	; (8014470 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014444:	6812      	ldr	r2, [r2, #0]
 8014446:	210e      	movs	r1, #14
 8014448:	fb01 2303 	mla	r3, r1, r3, r2
 801444c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014450:	891a      	ldrh	r2, [r3, #8]
 8014452:	4291      	cmp	r1, r2
 8014454:	db04      	blt.n	8014460 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014456:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801445a:	e7e6      	b.n	801442a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801445c:	2000      	movs	r0, #0
 801445e:	4770      	bx	lr
 8014460:	2001      	movs	r0, #1
 8014462:	4770      	bx	lr
 8014464:	20015510 	.word	0x20015510
 8014468:	20015518 	.word	0x20015518
 801446c:	20015514 	.word	0x20015514
 8014470:	200154f8 	.word	0x200154f8

08014474 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014474:	4a12      	ldr	r2, [pc, #72]	; (80144c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8014476:	8803      	ldrh	r3, [r0, #0]
 8014478:	8811      	ldrh	r1, [r2, #0]
 801447a:	428b      	cmp	r3, r1
 801447c:	d20b      	bcs.n	8014496 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801447e:	4a11      	ldr	r2, [pc, #68]	; (80144c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014480:	6812      	ldr	r2, [r2, #0]
 8014482:	b112      	cbz	r2, 801448a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8014484:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014488:	b9c0      	cbnz	r0, 80144bc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801448a:	4a0f      	ldr	r2, [pc, #60]	; (80144c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801448c:	6811      	ldr	r1, [r2, #0]
 801448e:	2214      	movs	r2, #20
 8014490:	4353      	muls	r3, r2
 8014492:	58c8      	ldr	r0, [r1, r3]
 8014494:	4770      	bx	lr
 8014496:	4a0d      	ldr	r2, [pc, #52]	; (80144cc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8014498:	8812      	ldrh	r2, [r2, #0]
 801449a:	440a      	add	r2, r1
 801449c:	4293      	cmp	r3, r2
 801449e:	da04      	bge.n	80144aa <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80144a0:	4a08      	ldr	r2, [pc, #32]	; (80144c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80144a2:	6812      	ldr	r2, [r2, #0]
 80144a4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80144a8:	4770      	bx	lr
 80144aa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80144ae:	4293      	cmp	r3, r2
 80144b0:	d103      	bne.n	80144ba <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80144b2:	4b07      	ldr	r3, [pc, #28]	; (80144d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80144b4:	681b      	ldr	r3, [r3, #0]
 80144b6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80144b8:	4770      	bx	lr
 80144ba:	2000      	movs	r0, #0
 80144bc:	4770      	bx	lr
 80144be:	bf00      	nop
 80144c0:	20015510 	.word	0x20015510
 80144c4:	200154f4 	.word	0x200154f4
 80144c8:	20015518 	.word	0x20015518
 80144cc:	20015514 	.word	0x20015514
 80144d0:	20015488 	.word	0x20015488

080144d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80144d4:	4b24      	ldr	r3, [pc, #144]	; (8014568 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80144d6:	8802      	ldrh	r2, [r0, #0]
 80144d8:	8818      	ldrh	r0, [r3, #0]
 80144da:	4282      	cmp	r2, r0
 80144dc:	d221      	bcs.n	8014522 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80144de:	4b23      	ldr	r3, [pc, #140]	; (801456c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80144e0:	6819      	ldr	r1, [r3, #0]
 80144e2:	2314      	movs	r3, #20
 80144e4:	fb03 1302 	mla	r3, r3, r2, r1
 80144e8:	6858      	ldr	r0, [r3, #4]
 80144ea:	2800      	cmp	r0, #0
 80144ec:	d03a      	beq.n	8014564 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80144ee:	4920      	ldr	r1, [pc, #128]	; (8014570 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80144f0:	6809      	ldr	r1, [r1, #0]
 80144f2:	2900      	cmp	r1, #0
 80144f4:	d036      	beq.n	8014564 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80144f6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80144fa:	2900      	cmp	r1, #0
 80144fc:	d032      	beq.n	8014564 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80144fe:	891a      	ldrh	r2, [r3, #8]
 8014500:	8958      	ldrh	r0, [r3, #10]
 8014502:	4350      	muls	r0, r2
 8014504:	7c5a      	ldrb	r2, [r3, #17]
 8014506:	7cdb      	ldrb	r3, [r3, #19]
 8014508:	0952      	lsrs	r2, r2, #5
 801450a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801450e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014512:	2b0b      	cmp	r3, #11
 8014514:	bf18      	it	ne
 8014516:	0040      	lslne	r0, r0, #1
 8014518:	3003      	adds	r0, #3
 801451a:	f020 0003 	bic.w	r0, r0, #3
 801451e:	4408      	add	r0, r1
 8014520:	4770      	bx	lr
 8014522:	4b14      	ldr	r3, [pc, #80]	; (8014574 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014524:	881b      	ldrh	r3, [r3, #0]
 8014526:	4403      	add	r3, r0
 8014528:	429a      	cmp	r2, r3
 801452a:	da1a      	bge.n	8014562 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801452c:	4b12      	ldr	r3, [pc, #72]	; (8014578 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801452e:	681b      	ldr	r3, [r3, #0]
 8014530:	1a10      	subs	r0, r2, r0
 8014532:	210e      	movs	r1, #14
 8014534:	fb01 3000 	mla	r0, r1, r0, r3
 8014538:	7b03      	ldrb	r3, [r0, #12]
 801453a:	f003 031f 	and.w	r3, r3, #31
 801453e:	2b0b      	cmp	r3, #11
 8014540:	d10b      	bne.n	801455a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014542:	8903      	ldrh	r3, [r0, #8]
 8014544:	8940      	ldrh	r0, [r0, #10]
 8014546:	4358      	muls	r0, r3
 8014548:	4b09      	ldr	r3, [pc, #36]	; (8014570 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801454a:	6819      	ldr	r1, [r3, #0]
 801454c:	3003      	adds	r0, #3
 801454e:	f020 0303 	bic.w	r3, r0, #3
 8014552:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8014556:	4418      	add	r0, r3
 8014558:	4770      	bx	lr
 801455a:	2b0d      	cmp	r3, #13
 801455c:	d101      	bne.n	8014562 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801455e:	300d      	adds	r0, #13
 8014560:	4770      	bx	lr
 8014562:	2000      	movs	r0, #0
 8014564:	4770      	bx	lr
 8014566:	bf00      	nop
 8014568:	20015510 	.word	0x20015510
 801456c:	20015518 	.word	0x20015518
 8014570:	200154f4 	.word	0x200154f4
 8014574:	20015514 	.word	0x20015514
 8014578:	200154f8 	.word	0x200154f8

0801457c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801457c:	b510      	push	{r4, lr}
 801457e:	4a17      	ldr	r2, [pc, #92]	; (80145dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8014580:	8803      	ldrh	r3, [r0, #0]
 8014582:	8812      	ldrh	r2, [r2, #0]
 8014584:	4293      	cmp	r3, r2
 8014586:	d20c      	bcs.n	80145a2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8014588:	4a15      	ldr	r2, [pc, #84]	; (80145e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801458a:	6812      	ldr	r2, [r2, #0]
 801458c:	2114      	movs	r1, #20
 801458e:	fb01 2303 	mla	r3, r1, r3, r2
 8014592:	7c58      	ldrb	r0, [r3, #17]
 8014594:	0942      	lsrs	r2, r0, #5
 8014596:	7cd8      	ldrb	r0, [r3, #19]
 8014598:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801459c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80145a0:	bd10      	pop	{r4, pc}
 80145a2:	4910      	ldr	r1, [pc, #64]	; (80145e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80145a4:	8809      	ldrh	r1, [r1, #0]
 80145a6:	4411      	add	r1, r2
 80145a8:	428b      	cmp	r3, r1
 80145aa:	da09      	bge.n	80145c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80145ac:	1a9b      	subs	r3, r3, r2
 80145ae:	4a0e      	ldr	r2, [pc, #56]	; (80145e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80145b0:	6812      	ldr	r2, [r2, #0]
 80145b2:	210e      	movs	r1, #14
 80145b4:	fb01 2303 	mla	r3, r1, r3, r2
 80145b8:	7b18      	ldrb	r0, [r3, #12]
 80145ba:	f000 001f 	and.w	r0, r0, #31
 80145be:	e7ef      	b.n	80145a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80145c0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80145c4:	4293      	cmp	r3, r2
 80145c6:	d106      	bne.n	80145d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80145c8:	f7ed ff8a 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 80145cc:	6803      	ldr	r3, [r0, #0]
 80145ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80145d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80145d4:	4718      	bx	r3
 80145d6:	2000      	movs	r0, #0
 80145d8:	e7e2      	b.n	80145a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80145da:	bf00      	nop
 80145dc:	20015510 	.word	0x20015510
 80145e0:	20015518 	.word	0x20015518
 80145e4:	20015514 	.word	0x20015514
 80145e8:	200154f8 	.word	0x200154f8

080145ec <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80145ec:	2010      	movs	r0, #16
 80145ee:	4770      	bx	lr

080145f0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80145f0:	2000      	movs	r0, #0
 80145f2:	4770      	bx	lr

080145f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80145f4:	4b02      	ldr	r3, [pc, #8]	; (8014600 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80145f6:	8818      	ldrh	r0, [r3, #0]
 80145f8:	0040      	lsls	r0, r0, #1
 80145fa:	b280      	uxth	r0, r0
 80145fc:	4770      	bx	lr
 80145fe:	bf00      	nop
 8014600:	20015482 	.word	0x20015482

08014604 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014604:	2bff      	cmp	r3, #255	; 0xff
 8014606:	d050      	beq.n	80146aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8014608:	2a0b      	cmp	r2, #11
 801460a:	d04a      	beq.n	80146a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801460c:	d80e      	bhi.n	801462c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801460e:	2a03      	cmp	r2, #3
 8014610:	d03f      	beq.n	8014692 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014612:	d804      	bhi.n	801461e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014614:	2a01      	cmp	r2, #1
 8014616:	d03e      	beq.n	8014696 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8014618:	d93f      	bls.n	801469a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801461a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801461c:	4770      	bx	lr
 801461e:	2a09      	cmp	r2, #9
 8014620:	d03f      	beq.n	80146a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014622:	d83c      	bhi.n	801469e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014624:	2a08      	cmp	r2, #8
 8014626:	d03a      	beq.n	801469e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014628:	2000      	movs	r0, #0
 801462a:	4770      	bx	lr
 801462c:	2a2f      	cmp	r2, #47	; 0x2f
 801462e:	d024      	beq.n	801467a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014630:	d80d      	bhi.n	801464e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014632:	2a2d      	cmp	r2, #45	; 0x2d
 8014634:	d014      	beq.n	8014660 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8014636:	d826      	bhi.n	8014686 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014638:	2a2c      	cmp	r2, #44	; 0x2c
 801463a:	d1f5      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801463c:	684b      	ldr	r3, [r1, #4]
 801463e:	781b      	ldrb	r3, [r3, #0]
 8014640:	2b01      	cmp	r3, #1
 8014642:	d018      	beq.n	8014676 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014644:	d323      	bcc.n	801468e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8014646:	2b02      	cmp	r3, #2
 8014648:	d1ee      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801464a:	6880      	ldr	r0, [r0, #8]
 801464c:	4770      	bx	lr
 801464e:	2a31      	cmp	r2, #49	; 0x31
 8014650:	d004      	beq.n	801465c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014652:	d328      	bcc.n	80146a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014654:	2a32      	cmp	r2, #50	; 0x32
 8014656:	d026      	beq.n	80146a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014658:	2a33      	cmp	r2, #51	; 0x33
 801465a:	d1e5      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801465c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801465e:	4770      	bx	lr
 8014660:	684b      	ldr	r3, [r1, #4]
 8014662:	781b      	ldrb	r3, [r3, #0]
 8014664:	2b01      	cmp	r3, #1
 8014666:	d004      	beq.n	8014672 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8014668:	d30b      	bcc.n	8014682 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801466a:	2b02      	cmp	r3, #2
 801466c:	d1dc      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801466e:	6900      	ldr	r0, [r0, #16]
 8014670:	4770      	bx	lr
 8014672:	6a00      	ldr	r0, [r0, #32]
 8014674:	4770      	bx	lr
 8014676:	6980      	ldr	r0, [r0, #24]
 8014678:	4770      	bx	lr
 801467a:	684b      	ldr	r3, [r1, #4]
 801467c:	781b      	ldrb	r3, [r3, #0]
 801467e:	2b00      	cmp	r3, #0
 8014680:	d1d2      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014682:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014684:	4770      	bx	lr
 8014686:	684b      	ldr	r3, [r1, #4]
 8014688:	781b      	ldrb	r3, [r3, #0]
 801468a:	2b00      	cmp	r3, #0
 801468c:	d1cc      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801468e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014690:	4770      	bx	lr
 8014692:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8014694:	4770      	bx	lr
 8014696:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8014698:	4770      	bx	lr
 801469a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801469c:	4770      	bx	lr
 801469e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80146a0:	4770      	bx	lr
 80146a2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80146a4:	4770      	bx	lr
 80146a6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80146a8:	4770      	bx	lr
 80146aa:	2a0b      	cmp	r2, #11
 80146ac:	d049      	beq.n	8014742 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80146ae:	d80e      	bhi.n	80146ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80146b0:	2a03      	cmp	r2, #3
 80146b2:	d040      	beq.n	8014736 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80146b4:	d804      	bhi.n	80146c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80146b6:	2a01      	cmp	r2, #1
 80146b8:	d03f      	beq.n	801473a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80146ba:	d940      	bls.n	801473e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80146bc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80146be:	4770      	bx	lr
 80146c0:	2a09      	cmp	r2, #9
 80146c2:	d03e      	beq.n	8014742 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80146c4:	d801      	bhi.n	80146ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80146c6:	2a08      	cmp	r2, #8
 80146c8:	d1ae      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80146ca:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80146cc:	4770      	bx	lr
 80146ce:	2a2f      	cmp	r2, #47	; 0x2f
 80146d0:	d024      	beq.n	801471c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80146d2:	d80d      	bhi.n	80146f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80146d4:	2a2d      	cmp	r2, #45	; 0x2d
 80146d6:	d014      	beq.n	8014702 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80146d8:	d826      	bhi.n	8014728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80146da:	2a2c      	cmp	r2, #44	; 0x2c
 80146dc:	d1a4      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80146de:	684b      	ldr	r3, [r1, #4]
 80146e0:	781b      	ldrb	r3, [r3, #0]
 80146e2:	2b01      	cmp	r3, #1
 80146e4:	d018      	beq.n	8014718 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80146e6:	d324      	bcc.n	8014732 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80146e8:	2b02      	cmp	r3, #2
 80146ea:	d19d      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80146ec:	68c0      	ldr	r0, [r0, #12]
 80146ee:	4770      	bx	lr
 80146f0:	2a31      	cmp	r2, #49	; 0x31
 80146f2:	d004      	beq.n	80146fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80146f4:	d327      	bcc.n	8014746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80146f6:	2a32      	cmp	r2, #50	; 0x32
 80146f8:	d025      	beq.n	8014746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80146fa:	2a33      	cmp	r2, #51	; 0x33
 80146fc:	d194      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80146fe:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014700:	4770      	bx	lr
 8014702:	684b      	ldr	r3, [r1, #4]
 8014704:	781b      	ldrb	r3, [r3, #0]
 8014706:	2b01      	cmp	r3, #1
 8014708:	d004      	beq.n	8014714 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801470a:	d30b      	bcc.n	8014724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801470c:	2b02      	cmp	r3, #2
 801470e:	d18b      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014710:	6940      	ldr	r0, [r0, #20]
 8014712:	4770      	bx	lr
 8014714:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014716:	4770      	bx	lr
 8014718:	69c0      	ldr	r0, [r0, #28]
 801471a:	4770      	bx	lr
 801471c:	684b      	ldr	r3, [r1, #4]
 801471e:	781b      	ldrb	r3, [r3, #0]
 8014720:	2b00      	cmp	r3, #0
 8014722:	d181      	bne.n	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014724:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014726:	4770      	bx	lr
 8014728:	684b      	ldr	r3, [r1, #4]
 801472a:	781b      	ldrb	r3, [r3, #0]
 801472c:	2b00      	cmp	r3, #0
 801472e:	f47f af7b 	bne.w	8014628 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014732:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014734:	4770      	bx	lr
 8014736:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014738:	4770      	bx	lr
 801473a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801473c:	4770      	bx	lr
 801473e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014740:	4770      	bx	lr
 8014742:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014744:	4770      	bx	lr
 8014746:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8014748:	4770      	bx	lr

0801474a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801474a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801474e:	b087      	sub	sp, #28
 8014750:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014752:	9205      	str	r2, [sp, #20]
 8014754:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014758:	9202      	str	r2, [sp, #8]
 801475a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801475e:	9101      	str	r1, [sp, #4]
 8014760:	6841      	ldr	r1, [r0, #4]
 8014762:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014766:	fb01 2404 	mla	r4, r1, r4, r2
 801476a:	6802      	ldr	r2, [r0, #0]
 801476c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014770:	f8de 2000 	ldr.w	r2, [lr]
 8014774:	9203      	str	r2, [sp, #12]
 8014776:	f8de 2004 	ldr.w	r2, [lr, #4]
 801477a:	3204      	adds	r2, #4
 801477c:	9204      	str	r2, [sp, #16]
 801477e:	9a02      	ldr	r2, [sp, #8]
 8014780:	43d6      	mvns	r6, r2
 8014782:	b2f6      	uxtb	r6, r6
 8014784:	9a01      	ldr	r2, [sp, #4]
 8014786:	2a00      	cmp	r2, #0
 8014788:	dc03      	bgt.n	8014792 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801478a:	9a05      	ldr	r2, [sp, #20]
 801478c:	2a00      	cmp	r2, #0
 801478e:	f340 8129 	ble.w	80149e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014792:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014794:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014798:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801479c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80147a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80147a2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80147a6:	2b00      	cmp	r3, #0
 80147a8:	dd0e      	ble.n	80147c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80147aa:	1408      	asrs	r0, r1, #16
 80147ac:	d405      	bmi.n	80147ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80147ae:	4560      	cmp	r0, ip
 80147b0:	da03      	bge.n	80147ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80147b2:	1410      	asrs	r0, r2, #16
 80147b4:	d401      	bmi.n	80147ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80147b6:	42b8      	cmp	r0, r7
 80147b8:	db07      	blt.n	80147ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80147ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80147bc:	4401      	add	r1, r0
 80147be:	9814      	ldr	r0, [sp, #80]	; 0x50
 80147c0:	3b01      	subs	r3, #1
 80147c2:	4402      	add	r2, r0
 80147c4:	3402      	adds	r4, #2
 80147c6:	e7ee      	b.n	80147a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80147c8:	d071      	beq.n	80148ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80147ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80147cc:	1e58      	subs	r0, r3, #1
 80147ce:	fb05 1500 	mla	r5, r5, r0, r1
 80147d2:	142d      	asrs	r5, r5, #16
 80147d4:	d45f      	bmi.n	8014896 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80147d6:	4565      	cmp	r5, ip
 80147d8:	da5d      	bge.n	8014896 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80147da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80147dc:	fb05 2000 	mla	r0, r5, r0, r2
 80147e0:	1400      	asrs	r0, r0, #16
 80147e2:	d458      	bmi.n	8014896 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80147e4:	42b8      	cmp	r0, r7
 80147e6:	da56      	bge.n	8014896 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80147e8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80147ec:	4699      	mov	r9, r3
 80147ee:	46a2      	mov	sl, r4
 80147f0:	f1b9 0f00 	cmp.w	r9, #0
 80147f4:	dd57      	ble.n	80148a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80147f6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80147fa:	9803      	ldr	r0, [sp, #12]
 80147fc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014800:	140d      	asrs	r5, r1, #16
 8014802:	fb07 000c 	mla	r0, r7, ip, r0
 8014806:	f109 39ff 	add.w	r9, r9, #4294967295
 801480a:	5d40      	ldrb	r0, [r0, r5]
 801480c:	9d04      	ldr	r5, [sp, #16]
 801480e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014812:	f8ba 5000 	ldrh.w	r5, [sl]
 8014816:	122f      	asrs	r7, r5, #8
 8014818:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801481c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014820:	fb17 f706 	smulbb	r7, r7, r6
 8014824:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014828:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801482c:	00ed      	lsls	r5, r5, #3
 801482e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014832:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014836:	10c7      	asrs	r7, r0, #3
 8014838:	b2ed      	uxtb	r5, r5
 801483a:	00c0      	lsls	r0, r0, #3
 801483c:	fb18 f806 	smulbb	r8, r8, r6
 8014840:	fb15 f506 	smulbb	r5, r5, r6
 8014844:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014848:	b2c0      	uxtb	r0, r0
 801484a:	fa1f fc8c 	uxth.w	ip, ip
 801484e:	fb07 870b 	mla	r7, r7, fp, r8
 8014852:	fb00 500b 	mla	r0, r0, fp, r5
 8014856:	b280      	uxth	r0, r0
 8014858:	b2bf      	uxth	r7, r7
 801485a:	f10c 0501 	add.w	r5, ip, #1
 801485e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014862:	f107 0801 	add.w	r8, r7, #1
 8014866:	1c45      	adds	r5, r0, #1
 8014868:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801486c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014870:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014872:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014876:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801487a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801487e:	ea45 0c0c 	orr.w	ip, r5, ip
 8014882:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014886:	4401      	add	r1, r0
 8014888:	9814      	ldr	r0, [sp, #80]	; 0x50
 801488a:	ea4c 0c08 	orr.w	ip, ip, r8
 801488e:	f82a cb02 	strh.w	ip, [sl], #2
 8014892:	4402      	add	r2, r0
 8014894:	e7ac      	b.n	80147f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014896:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801489a:	f04f 0800 	mov.w	r8, #0
 801489e:	eb03 0008 	add.w	r0, r3, r8
 80148a2:	2800      	cmp	r0, #0
 80148a4:	dc41      	bgt.n	801492a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80148a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80148aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80148ae:	9b01      	ldr	r3, [sp, #4]
 80148b0:	2b00      	cmp	r3, #0
 80148b2:	f340 8097 	ble.w	80149e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80148b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80148ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80148be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80148c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80148c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80148c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80148cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80148d0:	eef0 6a62 	vmov.f32	s13, s5
 80148d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80148d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80148dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80148e0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80148e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80148e8:	eef0 6a43 	vmov.f32	s13, s6
 80148ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80148f0:	ee12 2a90 	vmov	r2, s5
 80148f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80148f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80148fc:	ee13 2a10 	vmov	r2, s6
 8014900:	9313      	str	r3, [sp, #76]	; 0x4c
 8014902:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014904:	fb92 f3f3 	sdiv	r3, r2, r3
 8014908:	9314      	str	r3, [sp, #80]	; 0x50
 801490a:	9b01      	ldr	r3, [sp, #4]
 801490c:	9a05      	ldr	r2, [sp, #20]
 801490e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014912:	3b01      	subs	r3, #1
 8014914:	9301      	str	r3, [sp, #4]
 8014916:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801491a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801491c:	eeb0 3a67 	vmov.f32	s6, s15
 8014920:	bf08      	it	eq
 8014922:	4613      	moveq	r3, r2
 8014924:	eef0 2a47 	vmov.f32	s5, s14
 8014928:	e72c      	b.n	8014784 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801492a:	140f      	asrs	r7, r1, #16
 801492c:	d453      	bmi.n	80149d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801492e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014932:	42bd      	cmp	r5, r7
 8014934:	dd4f      	ble.n	80149d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014936:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801493a:	d44c      	bmi.n	80149d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801493c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014940:	4560      	cmp	r0, ip
 8014942:	dd48      	ble.n	80149d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014944:	9803      	ldr	r0, [sp, #12]
 8014946:	b22d      	sxth	r5, r5
 8014948:	fb0c 0505 	mla	r5, ip, r5, r0
 801494c:	5de8      	ldrb	r0, [r5, r7]
 801494e:	9d04      	ldr	r5, [sp, #16]
 8014950:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014954:	f06f 0501 	mvn.w	r5, #1
 8014958:	fb05 fb08 	mul.w	fp, r5, r8
 801495c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014960:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014964:	122f      	asrs	r7, r5, #8
 8014966:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801496a:	fb17 f706 	smulbb	r7, r7, r6
 801496e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014972:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014976:	00ed      	lsls	r5, r5, #3
 8014978:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801497c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014980:	10c7      	asrs	r7, r0, #3
 8014982:	b2ed      	uxtb	r5, r5
 8014984:	00c0      	lsls	r0, r0, #3
 8014986:	fb19 f906 	smulbb	r9, r9, r6
 801498a:	fb15 f506 	smulbb	r5, r5, r6
 801498e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014992:	b2c0      	uxtb	r0, r0
 8014994:	fa1f fc8c 	uxth.w	ip, ip
 8014998:	fb07 970a 	mla	r7, r7, sl, r9
 801499c:	fb00 500a 	mla	r0, r0, sl, r5
 80149a0:	b2bf      	uxth	r7, r7
 80149a2:	b280      	uxth	r0, r0
 80149a4:	f10c 0501 	add.w	r5, ip, #1
 80149a8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80149ac:	f107 0901 	add.w	r9, r7, #1
 80149b0:	1c45      	adds	r5, r0, #1
 80149b2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80149b6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80149ba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80149be:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80149c2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80149c6:	ea45 0c0c 	orr.w	ip, r5, ip
 80149ca:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80149ce:	ea4c 0c09 	orr.w	ip, ip, r9
 80149d2:	f824 c00b 	strh.w	ip, [r4, fp]
 80149d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80149d8:	4401      	add	r1, r0
 80149da:	9814      	ldr	r0, [sp, #80]	; 0x50
 80149dc:	f108 38ff 	add.w	r8, r8, #4294967295
 80149e0:	4402      	add	r2, r0
 80149e2:	e75c      	b.n	801489e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80149e4:	b007      	add	sp, #28
 80149e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080149ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80149ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149ee:	b085      	sub	sp, #20
 80149f0:	4693      	mov	fp, r2
 80149f2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80149f4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80149f6:	6870      	ldr	r0, [r6, #4]
 80149f8:	9100      	str	r1, [sp, #0]
 80149fa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80149fe:	fb00 2404 	mla	r4, r0, r4, r2
 8014a02:	6832      	ldr	r2, [r6, #0]
 8014a04:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014a08:	682a      	ldr	r2, [r5, #0]
 8014a0a:	9201      	str	r2, [sp, #4]
 8014a0c:	686a      	ldr	r2, [r5, #4]
 8014a0e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014a12:	3204      	adds	r2, #4
 8014a14:	9202      	str	r2, [sp, #8]
 8014a16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014a1a:	9a00      	ldr	r2, [sp, #0]
 8014a1c:	2a00      	cmp	r2, #0
 8014a1e:	dc03      	bgt.n	8014a28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014a20:	f1bb 0f00 	cmp.w	fp, #0
 8014a24:	f340 80a0 	ble.w	8014b68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014a28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014a2a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014a2e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014a32:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014a36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014a38:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014a3c:	2b00      	cmp	r3, #0
 8014a3e:	dd0c      	ble.n	8014a5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a40:	1406      	asrs	r6, r0, #16
 8014a42:	d405      	bmi.n	8014a50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a44:	454e      	cmp	r6, r9
 8014a46:	da03      	bge.n	8014a50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a48:	1416      	asrs	r6, r2, #16
 8014a4a:	d401      	bmi.n	8014a50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a4c:	4546      	cmp	r6, r8
 8014a4e:	db05      	blt.n	8014a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014a50:	4470      	add	r0, lr
 8014a52:	4462      	add	r2, ip
 8014a54:	3b01      	subs	r3, #1
 8014a56:	3402      	adds	r4, #2
 8014a58:	e7f0      	b.n	8014a3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014a5a:	d00f      	beq.n	8014a7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014a5c:	1e5e      	subs	r6, r3, #1
 8014a5e:	fb0e 0706 	mla	r7, lr, r6, r0
 8014a62:	143f      	asrs	r7, r7, #16
 8014a64:	d541      	bpl.n	8014aea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014a66:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014a6a:	4698      	mov	r8, r3
 8014a6c:	9603      	str	r6, [sp, #12]
 8014a6e:	f1b8 0f00 	cmp.w	r8, #0
 8014a72:	dc59      	bgt.n	8014b28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014a74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a7c:	9b00      	ldr	r3, [sp, #0]
 8014a7e:	2b00      	cmp	r3, #0
 8014a80:	dd72      	ble.n	8014b68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014a82:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a90:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a94:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a98:	eeb0 6a62 	vmov.f32	s12, s5
 8014a9c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014aa0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014aa4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014aa8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014aac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ab0:	eeb0 6a43 	vmov.f32	s12, s6
 8014ab4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014ab8:	ee12 2a90 	vmov	r2, s5
 8014abc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ac0:	fb92 fef3 	sdiv	lr, r2, r3
 8014ac4:	ee13 2a10 	vmov	r2, s6
 8014ac8:	fb92 fcf3 	sdiv	ip, r2, r3
 8014acc:	9b00      	ldr	r3, [sp, #0]
 8014ace:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ad2:	3b01      	subs	r3, #1
 8014ad4:	9300      	str	r3, [sp, #0]
 8014ad6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014ada:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014adc:	eeb0 3a67 	vmov.f32	s6, s15
 8014ae0:	bf08      	it	eq
 8014ae2:	465b      	moveq	r3, fp
 8014ae4:	eef0 2a47 	vmov.f32	s5, s14
 8014ae8:	e797      	b.n	8014a1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014aea:	454f      	cmp	r7, r9
 8014aec:	dabb      	bge.n	8014a66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014aee:	fb0c 2606 	mla	r6, ip, r6, r2
 8014af2:	1436      	asrs	r6, r6, #16
 8014af4:	d4b7      	bmi.n	8014a66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014af6:	4546      	cmp	r6, r8
 8014af8:	dab5      	bge.n	8014a66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014afa:	461e      	mov	r6, r3
 8014afc:	46a0      	mov	r8, r4
 8014afe:	2e00      	cmp	r6, #0
 8014b00:	ddb8      	ble.n	8014a74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014b02:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014b06:	9901      	ldr	r1, [sp, #4]
 8014b08:	1417      	asrs	r7, r2, #16
 8014b0a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014b0e:	fb0a 1707 	mla	r7, sl, r7, r1
 8014b12:	9902      	ldr	r1, [sp, #8]
 8014b14:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014b18:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014b1c:	f828 7b02 	strh.w	r7, [r8], #2
 8014b20:	4470      	add	r0, lr
 8014b22:	4462      	add	r2, ip
 8014b24:	3e01      	subs	r6, #1
 8014b26:	e7ea      	b.n	8014afe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014b28:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014b2c:	d417      	bmi.n	8014b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014b2e:	68ae      	ldr	r6, [r5, #8]
 8014b30:	454e      	cmp	r6, r9
 8014b32:	dd14      	ble.n	8014b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014b34:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014b38:	d411      	bmi.n	8014b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014b3a:	68ef      	ldr	r7, [r5, #12]
 8014b3c:	4557      	cmp	r7, sl
 8014b3e:	dd0e      	ble.n	8014b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014b40:	9f01      	ldr	r7, [sp, #4]
 8014b42:	b236      	sxth	r6, r6
 8014b44:	fb0a 7606 	mla	r6, sl, r6, r7
 8014b48:	9f02      	ldr	r7, [sp, #8]
 8014b4a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014b4e:	f06f 0101 	mvn.w	r1, #1
 8014b52:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014b56:	fb01 f608 	mul.w	r6, r1, r8
 8014b5a:	9903      	ldr	r1, [sp, #12]
 8014b5c:	538f      	strh	r7, [r1, r6]
 8014b5e:	4470      	add	r0, lr
 8014b60:	4462      	add	r2, ip
 8014b62:	f108 38ff 	add.w	r8, r8, #4294967295
 8014b66:	e782      	b.n	8014a6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014b68:	b005      	add	sp, #20
 8014b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014b6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b72:	b087      	sub	sp, #28
 8014b74:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014b76:	9205      	str	r2, [sp, #20]
 8014b78:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014b7c:	9203      	str	r2, [sp, #12]
 8014b7e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014b82:	9102      	str	r1, [sp, #8]
 8014b84:	6861      	ldr	r1, [r4, #4]
 8014b86:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014b8a:	fb01 2000 	mla	r0, r1, r0, r2
 8014b8e:	6822      	ldr	r2, [r4, #0]
 8014b90:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014b94:	9200      	str	r2, [sp, #0]
 8014b96:	f8dc 2000 	ldr.w	r2, [ip]
 8014b9a:	9204      	str	r2, [sp, #16]
 8014b9c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014ba0:	3204      	adds	r2, #4
 8014ba2:	9201      	str	r2, [sp, #4]
 8014ba4:	9a03      	ldr	r2, [sp, #12]
 8014ba6:	43d5      	mvns	r5, r2
 8014ba8:	b2ed      	uxtb	r5, r5
 8014baa:	9a02      	ldr	r2, [sp, #8]
 8014bac:	2a00      	cmp	r2, #0
 8014bae:	dc03      	bgt.n	8014bb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014bb0:	9a05      	ldr	r2, [sp, #20]
 8014bb2:	2a00      	cmp	r2, #0
 8014bb4:	f340 812c 	ble.w	8014e10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014bb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014bba:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014bbe:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014bc2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014bc6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014bc8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014bcc:	2b00      	cmp	r3, #0
 8014bce:	dd10      	ble.n	8014bf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014bd0:	140c      	asrs	r4, r1, #16
 8014bd2:	d405      	bmi.n	8014be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014bd4:	4574      	cmp	r4, lr
 8014bd6:	da03      	bge.n	8014be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014bd8:	1414      	asrs	r4, r2, #16
 8014bda:	d401      	bmi.n	8014be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014bdc:	42bc      	cmp	r4, r7
 8014bde:	db09      	blt.n	8014bf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014be0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014be2:	9800      	ldr	r0, [sp, #0]
 8014be4:	4421      	add	r1, r4
 8014be6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014be8:	3002      	adds	r0, #2
 8014bea:	4422      	add	r2, r4
 8014bec:	3b01      	subs	r3, #1
 8014bee:	9000      	str	r0, [sp, #0]
 8014bf0:	e7ec      	b.n	8014bcc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014bf2:	d071      	beq.n	8014cd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014bf4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014bf6:	1e5c      	subs	r4, r3, #1
 8014bf8:	fb06 1604 	mla	r6, r6, r4, r1
 8014bfc:	1436      	asrs	r6, r6, #16
 8014bfe:	d45d      	bmi.n	8014cbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014c00:	4576      	cmp	r6, lr
 8014c02:	da5b      	bge.n	8014cbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014c04:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014c06:	fb06 2404 	mla	r4, r6, r4, r2
 8014c0a:	1424      	asrs	r4, r4, #16
 8014c0c:	d456      	bmi.n	8014cbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014c0e:	42bc      	cmp	r4, r7
 8014c10:	da54      	bge.n	8014cbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014c12:	f8dd 9000 	ldr.w	r9, [sp]
 8014c16:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014c1a:	4698      	mov	r8, r3
 8014c1c:	f1b8 0f00 	cmp.w	r8, #0
 8014c20:	dd54      	ble.n	8014ccc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014c22:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014c26:	9804      	ldr	r0, [sp, #16]
 8014c28:	1414      	asrs	r4, r2, #16
 8014c2a:	fb07 0404 	mla	r4, r7, r4, r0
 8014c2e:	140e      	asrs	r6, r1, #16
 8014c30:	9801      	ldr	r0, [sp, #4]
 8014c32:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014c36:	f8b9 4000 	ldrh.w	r4, [r9]
 8014c3a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014c3e:	eb00 0b0e 	add.w	fp, r0, lr
 8014c42:	1227      	asrs	r7, r4, #8
 8014c44:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014c48:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014c4c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014c50:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014c52:	fb16 f60a 	smulbb	r6, r6, sl
 8014c56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014c5a:	fb07 6705 	mla	r7, r7, r5, r6
 8014c5e:	10e6      	asrs	r6, r4, #3
 8014c60:	00e4      	lsls	r4, r4, #3
 8014c62:	b2e4      	uxtb	r4, r4
 8014c64:	fb1b fb0a 	smulbb	fp, fp, sl
 8014c68:	fb14 f405 	smulbb	r4, r4, r5
 8014c6c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014c70:	b2bf      	uxth	r7, r7
 8014c72:	fb06 b605 	mla	r6, r6, r5, fp
 8014c76:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014c7a:	b2b6      	uxth	r6, r6
 8014c7c:	fa1f fe8e 	uxth.w	lr, lr
 8014c80:	1c7c      	adds	r4, r7, #1
 8014c82:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014c86:	f106 0b01 	add.w	fp, r6, #1
 8014c8a:	f10e 0401 	add.w	r4, lr, #1
 8014c8e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014c92:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014c96:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014c9a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014c9e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014ca2:	4327      	orrs	r7, r4
 8014ca4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014ca8:	4401      	add	r1, r0
 8014caa:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014cac:	ea47 070b 	orr.w	r7, r7, fp
 8014cb0:	f829 7b02 	strh.w	r7, [r9], #2
 8014cb4:	4402      	add	r2, r0
 8014cb6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014cba:	e7af      	b.n	8014c1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014cbc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014cc0:	f04f 0e00 	mov.w	lr, #0
 8014cc4:	eb03 040e 	add.w	r4, r3, lr
 8014cc8:	2c00      	cmp	r4, #0
 8014cca:	dc43      	bgt.n	8014d54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014ccc:	9a00      	ldr	r2, [sp, #0]
 8014cce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014cd2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014cd6:	9300      	str	r3, [sp, #0]
 8014cd8:	9b02      	ldr	r3, [sp, #8]
 8014cda:	2b00      	cmp	r3, #0
 8014cdc:	f340 8098 	ble.w	8014e10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014ce0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ce4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014ce8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014cec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014cee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014cf2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cfa:	eef0 6a62 	vmov.f32	s13, s5
 8014cfe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d0a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014d0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d12:	eef0 6a43 	vmov.f32	s13, s6
 8014d16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d1a:	ee12 2a90 	vmov	r2, s5
 8014d1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d22:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d26:	ee13 2a10 	vmov	r2, s6
 8014d2a:	9313      	str	r3, [sp, #76]	; 0x4c
 8014d2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d32:	9314      	str	r3, [sp, #80]	; 0x50
 8014d34:	9b02      	ldr	r3, [sp, #8]
 8014d36:	9a05      	ldr	r2, [sp, #20]
 8014d38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d3c:	3b01      	subs	r3, #1
 8014d3e:	9302      	str	r3, [sp, #8]
 8014d40:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014d44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d46:	eeb0 3a67 	vmov.f32	s6, s15
 8014d4a:	bf08      	it	eq
 8014d4c:	4613      	moveq	r3, r2
 8014d4e:	eef0 2a47 	vmov.f32	s5, s14
 8014d52:	e72a      	b.n	8014baa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014d54:	140f      	asrs	r7, r1, #16
 8014d56:	d454      	bmi.n	8014e02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014d58:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014d5c:	42be      	cmp	r6, r7
 8014d5e:	dd50      	ble.n	8014e02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014d60:	ea5f 4822 	movs.w	r8, r2, asr #16
 8014d64:	d44d      	bmi.n	8014e02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014d66:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014d6a:	4544      	cmp	r4, r8
 8014d6c:	dd49      	ble.n	8014e02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014d6e:	9c04      	ldr	r4, [sp, #16]
 8014d70:	b236      	sxth	r6, r6
 8014d72:	fb08 4606 	mla	r6, r8, r6, r4
 8014d76:	f06f 0001 	mvn.w	r0, #1
 8014d7a:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014d7e:	9c01      	ldr	r4, [sp, #4]
 8014d80:	fb00 fa0e 	mul.w	sl, r0, lr
 8014d84:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014d88:	9800      	ldr	r0, [sp, #0]
 8014d8a:	eb04 0b08 	add.w	fp, r4, r8
 8014d8e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8014d92:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014d96:	9801      	ldr	r0, [sp, #4]
 8014d98:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014d9c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014da0:	9800      	ldr	r0, [sp, #0]
 8014da2:	1227      	asrs	r7, r4, #8
 8014da4:	fb16 f609 	smulbb	r6, r6, r9
 8014da8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014dac:	fb07 6705 	mla	r7, r7, r5, r6
 8014db0:	10e6      	asrs	r6, r4, #3
 8014db2:	00e4      	lsls	r4, r4, #3
 8014db4:	b2e4      	uxtb	r4, r4
 8014db6:	fb1b fb09 	smulbb	fp, fp, r9
 8014dba:	fb14 f405 	smulbb	r4, r4, r5
 8014dbe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014dc2:	b2bf      	uxth	r7, r7
 8014dc4:	fb06 b605 	mla	r6, r6, r5, fp
 8014dc8:	fb08 4809 	mla	r8, r8, r9, r4
 8014dcc:	b2b6      	uxth	r6, r6
 8014dce:	fa1f f888 	uxth.w	r8, r8
 8014dd2:	1c7c      	adds	r4, r7, #1
 8014dd4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014dd8:	f106 0b01 	add.w	fp, r6, #1
 8014ddc:	f108 0401 	add.w	r4, r8, #1
 8014de0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014de4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014de8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014dec:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014df0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014df4:	4327      	orrs	r7, r4
 8014df6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014dfa:	ea47 070b 	orr.w	r7, r7, fp
 8014dfe:	f820 700a 	strh.w	r7, [r0, sl]
 8014e02:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014e04:	4401      	add	r1, r0
 8014e06:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014e08:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014e0c:	4402      	add	r2, r0
 8014e0e:	e759      	b.n	8014cc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014e10:	b007      	add	sp, #28
 8014e12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014e18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e1c:	b085      	sub	sp, #20
 8014e1e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e22:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014e24:	9203      	str	r2, [sp, #12]
 8014e26:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014e2a:	6870      	ldr	r0, [r6, #4]
 8014e2c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014e2e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8014e32:	686f      	ldr	r7, [r5, #4]
 8014e34:	9101      	str	r1, [sp, #4]
 8014e36:	fb00 2404 	mla	r4, r0, r4, r2
 8014e3a:	6832      	ldr	r2, [r6, #0]
 8014e3c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e40:	682a      	ldr	r2, [r5, #0]
 8014e42:	9202      	str	r2, [sp, #8]
 8014e44:	3704      	adds	r7, #4
 8014e46:	9a01      	ldr	r2, [sp, #4]
 8014e48:	2a00      	cmp	r2, #0
 8014e4a:	dc03      	bgt.n	8014e54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014e4c:	9a03      	ldr	r2, [sp, #12]
 8014e4e:	2a00      	cmp	r2, #0
 8014e50:	f340 80cc 	ble.w	8014fec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014e54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014e56:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014e5a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014e5e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014e62:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014e64:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014e68:	2b00      	cmp	r3, #0
 8014e6a:	dd0d      	ble.n	8014e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014e6c:	1406      	asrs	r6, r0, #16
 8014e6e:	d405      	bmi.n	8014e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014e70:	454e      	cmp	r6, r9
 8014e72:	da03      	bge.n	8014e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014e74:	1416      	asrs	r6, r2, #16
 8014e76:	d401      	bmi.n	8014e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014e78:	4546      	cmp	r6, r8
 8014e7a:	db06      	blt.n	8014e8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e7c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8014e7e:	4460      	add	r0, ip
 8014e80:	4432      	add	r2, r6
 8014e82:	3b01      	subs	r3, #1
 8014e84:	3402      	adds	r4, #2
 8014e86:	e7ef      	b.n	8014e68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8014e88:	d00f      	beq.n	8014eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014e8a:	1e5e      	subs	r6, r3, #1
 8014e8c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8014e90:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8014e94:	d543      	bpl.n	8014f1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8014e96:	4698      	mov	r8, r3
 8014e98:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8014e9c:	f1b8 0f00 	cmp.w	r8, #0
 8014ea0:	dc71      	bgt.n	8014f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8014ea2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ea6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014eaa:	9b01      	ldr	r3, [sp, #4]
 8014eac:	2b00      	cmp	r3, #0
 8014eae:	f340 809d 	ble.w	8014fec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014eb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014eb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014eba:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014ebe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ec0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ec4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ec8:	eeb0 6a62 	vmov.f32	s12, s5
 8014ecc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014ed0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ed4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ed8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014edc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ee0:	eeb0 6a43 	vmov.f32	s12, s6
 8014ee4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014ee8:	ee12 2a90 	vmov	r2, s5
 8014eec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ef0:	fb92 fcf3 	sdiv	ip, r2, r3
 8014ef4:	ee13 2a10 	vmov	r2, s6
 8014ef8:	fb92 f3f3 	sdiv	r3, r2, r3
 8014efc:	9312      	str	r3, [sp, #72]	; 0x48
 8014efe:	9b01      	ldr	r3, [sp, #4]
 8014f00:	9a03      	ldr	r2, [sp, #12]
 8014f02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f06:	3b01      	subs	r3, #1
 8014f08:	9301      	str	r3, [sp, #4]
 8014f0a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014f0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f10:	eeb0 3a67 	vmov.f32	s6, s15
 8014f14:	bf08      	it	eq
 8014f16:	4613      	moveq	r3, r2
 8014f18:	eef0 2a47 	vmov.f32	s5, s14
 8014f1c:	e793      	b.n	8014e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8014f1e:	45ce      	cmp	lr, r9
 8014f20:	dab9      	bge.n	8014e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014f22:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014f24:	fb01 2606 	mla	r6, r1, r6, r2
 8014f28:	1436      	asrs	r6, r6, #16
 8014f2a:	d4b4      	bmi.n	8014e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014f2c:	4546      	cmp	r6, r8
 8014f2e:	dab2      	bge.n	8014e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014f30:	4698      	mov	r8, r3
 8014f32:	46a2      	mov	sl, r4
 8014f34:	f1b8 0f00 	cmp.w	r8, #0
 8014f38:	ddb3      	ble.n	8014ea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014f3a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014f3e:	9902      	ldr	r1, [sp, #8]
 8014f40:	1416      	asrs	r6, r2, #16
 8014f42:	fb09 1606 	mla	r6, r9, r6, r1
 8014f46:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014f4a:	492a      	ldr	r1, [pc, #168]	; (8014ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014f4c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8014f50:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014f54:	eb07 0b0e 	add.w	fp, r7, lr
 8014f58:	4460      	add	r0, ip
 8014f5a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8014f5e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8014f62:	00f6      	lsls	r6, r6, #3
 8014f64:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014f68:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014f6c:	ea49 0606 	orr.w	r6, r9, r6
 8014f70:	f817 900e 	ldrb.w	r9, [r7, lr]
 8014f74:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014f76:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014f7a:	f82a 6b02 	strh.w	r6, [sl], #2
 8014f7e:	440a      	add	r2, r1
 8014f80:	f108 38ff 	add.w	r8, r8, #4294967295
 8014f84:	e7d6      	b.n	8014f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014f86:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014f8a:	d429      	bmi.n	8014fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014f8c:	68ae      	ldr	r6, [r5, #8]
 8014f8e:	454e      	cmp	r6, r9
 8014f90:	dd26      	ble.n	8014fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014f92:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8014f96:	d423      	bmi.n	8014fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014f98:	68e9      	ldr	r1, [r5, #12]
 8014f9a:	4559      	cmp	r1, fp
 8014f9c:	dd20      	ble.n	8014fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014f9e:	9902      	ldr	r1, [sp, #8]
 8014fa0:	fa0f fe86 	sxth.w	lr, r6
 8014fa4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014fa8:	f06f 0101 	mvn.w	r1, #1
 8014fac:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014fb0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014fb4:	eb07 060e 	add.w	r6, r7, lr
 8014fb8:	fb01 f908 	mul.w	r9, r1, r8
 8014fbc:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014fc0:	7876      	ldrb	r6, [r6, #1]
 8014fc2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8014fc6:	00f6      	lsls	r6, r6, #3
 8014fc8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014fcc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014fd0:	ea4b 0606 	orr.w	r6, fp, r6
 8014fd4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014fd8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014fdc:	f82a 6009 	strh.w	r6, [sl, r9]
 8014fe0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014fe2:	4460      	add	r0, ip
 8014fe4:	440a      	add	r2, r1
 8014fe6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014fea:	e757      	b.n	8014e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014fec:	b005      	add	sp, #20
 8014fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ff2:	bf00      	nop
 8014ff4:	fffff800 	.word	0xfffff800

08014ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ffc:	b087      	sub	sp, #28
 8014ffe:	468b      	mov	fp, r1
 8015000:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015002:	9204      	str	r2, [sp, #16]
 8015004:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015008:	9205      	str	r2, [sp, #20]
 801500a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801500e:	6841      	ldr	r1, [r0, #4]
 8015010:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015014:	fb01 2404 	mla	r4, r1, r4, r2
 8015018:	6802      	ldr	r2, [r0, #0]
 801501a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801501e:	f8dc 2000 	ldr.w	r2, [ip]
 8015022:	9201      	str	r2, [sp, #4]
 8015024:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015028:	3204      	adds	r2, #4
 801502a:	9202      	str	r2, [sp, #8]
 801502c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015030:	f1bb 0f00 	cmp.w	fp, #0
 8015034:	dc03      	bgt.n	801503e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8015036:	9a04      	ldr	r2, [sp, #16]
 8015038:	2a00      	cmp	r2, #0
 801503a:	f340 8138 	ble.w	80152ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801503e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015040:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015044:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8015048:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801504c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801504e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015052:	2b00      	cmp	r3, #0
 8015054:	dd0e      	ble.n	8015074 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015056:	1402      	asrs	r2, r0, #16
 8015058:	d405      	bmi.n	8015066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801505a:	42ba      	cmp	r2, r7
 801505c:	da03      	bge.n	8015066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801505e:	140a      	asrs	r2, r1, #16
 8015060:	d401      	bmi.n	8015066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015062:	42b2      	cmp	r2, r6
 8015064:	db07      	blt.n	8015076 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015066:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015068:	4410      	add	r0, r2
 801506a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801506c:	3b01      	subs	r3, #1
 801506e:	4411      	add	r1, r2
 8015070:	3402      	adds	r4, #2
 8015072:	e7ee      	b.n	8015052 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015074:	d019      	beq.n	80150aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015076:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015078:	1e5a      	subs	r2, r3, #1
 801507a:	fb05 0502 	mla	r5, r5, r2, r0
 801507e:	142d      	asrs	r5, r5, #16
 8015080:	d409      	bmi.n	8015096 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015082:	42bd      	cmp	r5, r7
 8015084:	da07      	bge.n	8015096 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015086:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015088:	fb05 1202 	mla	r2, r5, r2, r1
 801508c:	1412      	asrs	r2, r2, #16
 801508e:	d402      	bmi.n	8015096 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015090:	42b2      	cmp	r2, r6
 8015092:	f2c0 80ac 	blt.w	80151ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015096:	f04f 0e00 	mov.w	lr, #0
 801509a:	eb03 020e 	add.w	r2, r3, lr
 801509e:	2a00      	cmp	r2, #0
 80150a0:	dc3e      	bgt.n	8015120 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80150a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80150aa:	f1bb 0f00 	cmp.w	fp, #0
 80150ae:	f340 80fe 	ble.w	80152ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80150b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80150b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80150ba:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80150be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80150c0:	f1bb 0b01 	subs.w	fp, fp, #1
 80150c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80150c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150cc:	eeb0 6a62 	vmov.f32	s12, s5
 80150d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80150dc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80150e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80150e4:	eeb0 6a43 	vmov.f32	s12, s6
 80150e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80150ec:	ee12 2a90 	vmov	r2, s5
 80150f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80150f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80150f8:	ee13 2a10 	vmov	r2, s6
 80150fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015100:	9313      	str	r3, [sp, #76]	; 0x4c
 8015102:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015104:	fb92 f3f3 	sdiv	r3, r2, r3
 8015108:	9a04      	ldr	r2, [sp, #16]
 801510a:	9314      	str	r3, [sp, #80]	; 0x50
 801510c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015110:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015112:	eeb0 3a67 	vmov.f32	s6, s15
 8015116:	bf08      	it	eq
 8015118:	4613      	moveq	r3, r2
 801511a:	eef0 2a47 	vmov.f32	s5, s14
 801511e:	e787      	b.n	8015030 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015120:	1406      	asrs	r6, r0, #16
 8015122:	d45d      	bmi.n	80151e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015124:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8015128:	42b5      	cmp	r5, r6
 801512a:	dd59      	ble.n	80151e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801512c:	140f      	asrs	r7, r1, #16
 801512e:	d457      	bmi.n	80151e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015130:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015134:	42ba      	cmp	r2, r7
 8015136:	dd53      	ble.n	80151e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015138:	9a01      	ldr	r2, [sp, #4]
 801513a:	b22d      	sxth	r5, r5
 801513c:	fb07 2505 	mla	r5, r7, r5, r2
 8015140:	5daa      	ldrb	r2, [r5, r6]
 8015142:	9d02      	ldr	r5, [sp, #8]
 8015144:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015148:	0e2e      	lsrs	r6, r5, #24
 801514a:	d049      	beq.n	80151e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801514c:	f06f 0201 	mvn.w	r2, #1
 8015150:	fb02 f20e 	mul.w	r2, r2, lr
 8015154:	9203      	str	r2, [sp, #12]
 8015156:	f834 8002 	ldrh.w	r8, [r4, r2]
 801515a:	9a05      	ldr	r2, [sp, #20]
 801515c:	4356      	muls	r6, r2
 801515e:	1c72      	adds	r2, r6, #1
 8015160:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015164:	1212      	asrs	r2, r2, #8
 8015166:	fa1f f982 	uxth.w	r9, r2
 801516a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801516e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015172:	43d2      	mvns	r2, r2
 8015174:	b2d2      	uxtb	r2, r2
 8015176:	fb16 f609 	smulbb	r6, r6, r9
 801517a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801517e:	fb07 6702 	mla	r7, r7, r2, r6
 8015182:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015186:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801518a:	b2ed      	uxtb	r5, r5
 801518c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015190:	fa5f f888 	uxtb.w	r8, r8
 8015194:	fb15 f509 	smulbb	r5, r5, r9
 8015198:	fb08 5502 	mla	r5, r8, r2, r5
 801519c:	b2bf      	uxth	r7, r7
 801519e:	fb1a fa09 	smulbb	sl, sl, r9
 80151a2:	b2ad      	uxth	r5, r5
 80151a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80151a8:	fb06 a602 	mla	r6, r6, r2, sl
 80151ac:	1c7a      	adds	r2, r7, #1
 80151ae:	f105 0a01 	add.w	sl, r5, #1
 80151b2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80151b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80151ba:	b2b6      	uxth	r6, r6
 80151bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80151c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80151c4:	ea4a 0707 	orr.w	r7, sl, r7
 80151c8:	f106 0a01 	add.w	sl, r6, #1
 80151cc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80151d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80151d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80151d8:	9a03      	ldr	r2, [sp, #12]
 80151da:	ea47 070a 	orr.w	r7, r7, sl
 80151de:	52a7      	strh	r7, [r4, r2]
 80151e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80151e2:	4410      	add	r0, r2
 80151e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80151e6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80151ea:	4411      	add	r1, r2
 80151ec:	e755      	b.n	801509a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80151ee:	f04f 0800 	mov.w	r8, #0
 80151f2:	eba3 0208 	sub.w	r2, r3, r8
 80151f6:	2a00      	cmp	r2, #0
 80151f8:	f77f af53 	ble.w	80150a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80151fc:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015200:	9f01      	ldr	r7, [sp, #4]
 8015202:	140a      	asrs	r2, r1, #16
 8015204:	1405      	asrs	r5, r0, #16
 8015206:	fb06 7202 	mla	r2, r6, r2, r7
 801520a:	5d52      	ldrb	r2, [r2, r5]
 801520c:	9d02      	ldr	r5, [sp, #8]
 801520e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015212:	0e2e      	lsrs	r6, r5, #24
 8015214:	d044      	beq.n	80152a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015216:	9a05      	ldr	r2, [sp, #20]
 8015218:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801521c:	4356      	muls	r6, r2
 801521e:	1c72      	adds	r2, r6, #1
 8015220:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015224:	1212      	asrs	r2, r2, #8
 8015226:	fa1f f982 	uxth.w	r9, r2
 801522a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801522e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015232:	43d2      	mvns	r2, r2
 8015234:	b2d2      	uxtb	r2, r2
 8015236:	fb16 f609 	smulbb	r6, r6, r9
 801523a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801523e:	fb07 6702 	mla	r7, r7, r2, r6
 8015242:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015246:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801524a:	b2ed      	uxtb	r5, r5
 801524c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015250:	fa5f fe8e 	uxtb.w	lr, lr
 8015254:	fb15 f509 	smulbb	r5, r5, r9
 8015258:	fb0e 5502 	mla	r5, lr, r2, r5
 801525c:	b2bf      	uxth	r7, r7
 801525e:	fb1a fa09 	smulbb	sl, sl, r9
 8015262:	b2ad      	uxth	r5, r5
 8015264:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015268:	fb06 a602 	mla	r6, r6, r2, sl
 801526c:	1c7a      	adds	r2, r7, #1
 801526e:	f105 0a01 	add.w	sl, r5, #1
 8015272:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015276:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801527a:	b2b6      	uxth	r6, r6
 801527c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015280:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015284:	ea4a 0707 	orr.w	r7, sl, r7
 8015288:	f106 0a01 	add.w	sl, r6, #1
 801528c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015290:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015294:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015298:	ea47 070a 	orr.w	r7, r7, sl
 801529c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80152a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80152a2:	4410      	add	r0, r2
 80152a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80152a6:	f108 0801 	add.w	r8, r8, #1
 80152aa:	4411      	add	r1, r2
 80152ac:	e7a1      	b.n	80151f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80152ae:	b007      	add	sp, #28
 80152b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080152b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80152b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152b8:	b085      	sub	sp, #20
 80152ba:	468b      	mov	fp, r1
 80152bc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80152be:	9203      	str	r2, [sp, #12]
 80152c0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80152c4:	6841      	ldr	r1, [r0, #4]
 80152c6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80152ca:	fb01 2404 	mla	r4, r1, r4, r2
 80152ce:	6802      	ldr	r2, [r0, #0]
 80152d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80152d4:	f8de 2000 	ldr.w	r2, [lr]
 80152d8:	9200      	str	r2, [sp, #0]
 80152da:	f8de 2004 	ldr.w	r2, [lr, #4]
 80152de:	3204      	adds	r2, #4
 80152e0:	9201      	str	r2, [sp, #4]
 80152e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80152e6:	f1bb 0f00 	cmp.w	fp, #0
 80152ea:	dc03      	bgt.n	80152f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80152ec:	9a03      	ldr	r2, [sp, #12]
 80152ee:	2a00      	cmp	r2, #0
 80152f0:	f340 8153 	ble.w	801559a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80152f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80152f6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80152fa:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80152fe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015302:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015304:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015308:	2b00      	cmp	r3, #0
 801530a:	dd0e      	ble.n	801532a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801530c:	1408      	asrs	r0, r1, #16
 801530e:	d405      	bmi.n	801531c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015310:	42b8      	cmp	r0, r7
 8015312:	da03      	bge.n	801531c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015314:	1410      	asrs	r0, r2, #16
 8015316:	d401      	bmi.n	801531c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015318:	42b0      	cmp	r0, r6
 801531a:	db07      	blt.n	801532c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801531c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801531e:	4401      	add	r1, r0
 8015320:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015322:	3b01      	subs	r3, #1
 8015324:	4402      	add	r2, r0
 8015326:	3402      	adds	r4, #2
 8015328:	e7ee      	b.n	8015308 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801532a:	d017      	beq.n	801535c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801532c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801532e:	1e58      	subs	r0, r3, #1
 8015330:	fb05 1500 	mla	r5, r5, r0, r1
 8015334:	142d      	asrs	r5, r5, #16
 8015336:	d409      	bmi.n	801534c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015338:	42bd      	cmp	r5, r7
 801533a:	da07      	bge.n	801534c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801533c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801533e:	fb05 2000 	mla	r0, r5, r0, r2
 8015342:	1400      	asrs	r0, r0, #16
 8015344:	d402      	bmi.n	801534c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015346:	42b0      	cmp	r0, r6
 8015348:	f2c0 80bc 	blt.w	80154c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801534c:	2600      	movs	r6, #0
 801534e:	1998      	adds	r0, r3, r6
 8015350:	2800      	cmp	r0, #0
 8015352:	dc3e      	bgt.n	80153d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015354:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015358:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801535c:	f1bb 0f00 	cmp.w	fp, #0
 8015360:	f340 811b 	ble.w	801559a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015364:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015368:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801536c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015370:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015372:	f1bb 0b01 	subs.w	fp, fp, #1
 8015376:	ee31 1a05 	vadd.f32	s2, s2, s10
 801537a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801537e:	eeb0 6a62 	vmov.f32	s12, s5
 8015382:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015386:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801538a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801538e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015392:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015396:	eeb0 6a43 	vmov.f32	s12, s6
 801539a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801539e:	ee12 2a90 	vmov	r2, s5
 80153a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80153a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80153aa:	ee13 2a10 	vmov	r2, s6
 80153ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80153b2:	9311      	str	r3, [sp, #68]	; 0x44
 80153b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80153ba:	9a03      	ldr	r2, [sp, #12]
 80153bc:	9312      	str	r3, [sp, #72]	; 0x48
 80153be:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80153c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153c4:	eeb0 3a67 	vmov.f32	s6, s15
 80153c8:	bf08      	it	eq
 80153ca:	4613      	moveq	r3, r2
 80153cc:	eef0 2a47 	vmov.f32	s5, s14
 80153d0:	e789      	b.n	80152e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80153d2:	140f      	asrs	r7, r1, #16
 80153d4:	d426      	bmi.n	8015424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80153d6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80153da:	42bd      	cmp	r5, r7
 80153dc:	dd22      	ble.n	8015424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80153de:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80153e2:	d41f      	bmi.n	8015424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80153e4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80153e8:	4560      	cmp	r0, ip
 80153ea:	dd1b      	ble.n	8015424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80153ec:	9800      	ldr	r0, [sp, #0]
 80153ee:	b22d      	sxth	r5, r5
 80153f0:	fb0c 0505 	mla	r5, ip, r5, r0
 80153f4:	5de8      	ldrb	r0, [r5, r7]
 80153f6:	9d01      	ldr	r5, [sp, #4]
 80153f8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80153fc:	0e07      	lsrs	r7, r0, #24
 80153fe:	2fff      	cmp	r7, #255	; 0xff
 8015400:	d116      	bne.n	8015430 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015402:	f06f 0501 	mvn.w	r5, #1
 8015406:	fb05 f706 	mul.w	r7, r5, r6
 801540a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801540e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015412:	0945      	lsrs	r5, r0, #5
 8015414:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015418:	ea4c 0505 	orr.w	r5, ip, r5
 801541c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015420:	4305      	orrs	r5, r0
 8015422:	53e5      	strh	r5, [r4, r7]
 8015424:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015426:	4401      	add	r1, r0
 8015428:	9812      	ldr	r0, [sp, #72]	; 0x48
 801542a:	3e01      	subs	r6, #1
 801542c:	4402      	add	r2, r0
 801542e:	e78e      	b.n	801534e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015430:	b2fd      	uxtb	r5, r7
 8015432:	2f00      	cmp	r7, #0
 8015434:	d0f6      	beq.n	8015424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015436:	f06f 0701 	mvn.w	r7, #1
 801543a:	4377      	muls	r7, r6
 801543c:	fa1f f985 	uxth.w	r9, r5
 8015440:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015444:	9702      	str	r7, [sp, #8]
 8015446:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801544a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801544e:	43ed      	mvns	r5, r5
 8015450:	b2ed      	uxtb	r5, r5
 8015452:	fb17 f709 	smulbb	r7, r7, r9
 8015456:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801545a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801545e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015462:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8015466:	b2c0      	uxtb	r0, r0
 8015468:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801546c:	fa5f f888 	uxtb.w	r8, r8
 8015470:	fb10 f009 	smulbb	r0, r0, r9
 8015474:	fb08 0005 	mla	r0, r8, r5, r0
 8015478:	b280      	uxth	r0, r0
 801547a:	fa1f fc8c 	uxth.w	ip, ip
 801547e:	fb1a fa09 	smulbb	sl, sl, r9
 8015482:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015486:	fb07 a705 	mla	r7, r7, r5, sl
 801548a:	f100 0a01 	add.w	sl, r0, #1
 801548e:	f10c 0501 	add.w	r5, ip, #1
 8015492:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015496:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801549a:	b2bf      	uxth	r7, r7
 801549c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80154a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80154a4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80154a8:	f107 0a01 	add.w	sl, r7, #1
 80154ac:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80154b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80154b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80154b8:	9802      	ldr	r0, [sp, #8]
 80154ba:	ea4c 0c0a 	orr.w	ip, ip, sl
 80154be:	f824 c000 	strh.w	ip, [r4, r0]
 80154c2:	e7af      	b.n	8015424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80154c4:	f04f 0800 	mov.w	r8, #0
 80154c8:	eba3 0008 	sub.w	r0, r3, r8
 80154cc:	2800      	cmp	r0, #0
 80154ce:	f77f af41 	ble.w	8015354 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80154d2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80154d6:	9f00      	ldr	r7, [sp, #0]
 80154d8:	1410      	asrs	r0, r2, #16
 80154da:	140d      	asrs	r5, r1, #16
 80154dc:	fb06 7000 	mla	r0, r6, r0, r7
 80154e0:	5d40      	ldrb	r0, [r0, r5]
 80154e2:	9d01      	ldr	r5, [sp, #4]
 80154e4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80154e8:	0e2e      	lsrs	r6, r5, #24
 80154ea:	2eff      	cmp	r6, #255	; 0xff
 80154ec:	d112      	bne.n	8015514 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80154ee:	482c      	ldr	r0, [pc, #176]	; (80155a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80154f0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80154f4:	0968      	lsrs	r0, r5, #5
 80154f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80154fa:	4330      	orrs	r0, r6
 80154fc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015500:	4328      	orrs	r0, r5
 8015502:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8015506:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015508:	4401      	add	r1, r0
 801550a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801550c:	f108 0801 	add.w	r8, r8, #1
 8015510:	4402      	add	r2, r0
 8015512:	e7d9      	b.n	80154c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015514:	b2f0      	uxtb	r0, r6
 8015516:	2e00      	cmp	r6, #0
 8015518:	d0f5      	beq.n	8015506 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801551a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801551e:	fa1f f980 	uxth.w	r9, r0
 8015522:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015526:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801552a:	43c0      	mvns	r0, r0
 801552c:	b2c0      	uxtb	r0, r0
 801552e:	fb16 f609 	smulbb	r6, r6, r9
 8015532:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015536:	fb07 6700 	mla	r7, r7, r0, r6
 801553a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801553e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015542:	b2ed      	uxtb	r5, r5
 8015544:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015548:	fa5f fc8c 	uxtb.w	ip, ip
 801554c:	fb15 f509 	smulbb	r5, r5, r9
 8015550:	fb0c 5500 	mla	r5, ip, r0, r5
 8015554:	b2bf      	uxth	r7, r7
 8015556:	fb1a fa09 	smulbb	sl, sl, r9
 801555a:	b2ad      	uxth	r5, r5
 801555c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015560:	fb06 a600 	mla	r6, r6, r0, sl
 8015564:	1c78      	adds	r0, r7, #1
 8015566:	f105 0a01 	add.w	sl, r5, #1
 801556a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801556e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015572:	b2b6      	uxth	r6, r6
 8015574:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015578:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801557c:	ea4a 0707 	orr.w	r7, sl, r7
 8015580:	f106 0a01 	add.w	sl, r6, #1
 8015584:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015588:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801558c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015590:	ea47 070a 	orr.w	r7, r7, sl
 8015594:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015598:	e7b5      	b.n	8015506 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801559a:	b005      	add	sp, #20
 801559c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155a0:	fffff800 	.word	0xfffff800

080155a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80155a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155a8:	b087      	sub	sp, #28
 80155aa:	468b      	mov	fp, r1
 80155ac:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80155ae:	9204      	str	r2, [sp, #16]
 80155b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80155b4:	9205      	str	r2, [sp, #20]
 80155b6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80155ba:	6861      	ldr	r1, [r4, #4]
 80155bc:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80155c0:	fb01 2000 	mla	r0, r1, r0, r2
 80155c4:	6822      	ldr	r2, [r4, #0]
 80155c6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80155ca:	f8de 2000 	ldr.w	r2, [lr]
 80155ce:	9201      	str	r2, [sp, #4]
 80155d0:	f8de 2004 	ldr.w	r2, [lr, #4]
 80155d4:	9202      	str	r2, [sp, #8]
 80155d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80155da:	f1bb 0f00 	cmp.w	fp, #0
 80155de:	dc03      	bgt.n	80155e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80155e0:	9a04      	ldr	r2, [sp, #16]
 80155e2:	2a00      	cmp	r2, #0
 80155e4:	f340 8142 	ble.w	801586c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80155e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80155ea:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80155ee:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80155f2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80155f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80155f8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80155fc:	2b00      	cmp	r3, #0
 80155fe:	dd0e      	ble.n	801561e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015600:	140c      	asrs	r4, r1, #16
 8015602:	d405      	bmi.n	8015610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015604:	42bc      	cmp	r4, r7
 8015606:	da03      	bge.n	8015610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015608:	1414      	asrs	r4, r2, #16
 801560a:	d401      	bmi.n	8015610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801560c:	42b4      	cmp	r4, r6
 801560e:	db07      	blt.n	8015620 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015610:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015612:	4421      	add	r1, r4
 8015614:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015616:	3b01      	subs	r3, #1
 8015618:	4422      	add	r2, r4
 801561a:	3002      	adds	r0, #2
 801561c:	e7ee      	b.n	80155fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801561e:	d019      	beq.n	8015654 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015620:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015622:	1e5c      	subs	r4, r3, #1
 8015624:	fb05 1504 	mla	r5, r5, r4, r1
 8015628:	142d      	asrs	r5, r5, #16
 801562a:	d409      	bmi.n	8015640 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801562c:	42bd      	cmp	r5, r7
 801562e:	da07      	bge.n	8015640 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015630:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015632:	fb05 2404 	mla	r4, r5, r4, r2
 8015636:	1424      	asrs	r4, r4, #16
 8015638:	d402      	bmi.n	8015640 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801563a:	42b4      	cmp	r4, r6
 801563c:	f2c0 80b1 	blt.w	80157a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015640:	f04f 0800 	mov.w	r8, #0
 8015644:	eb03 0408 	add.w	r4, r3, r8
 8015648:	2c00      	cmp	r4, #0
 801564a:	dc3e      	bgt.n	80156ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801564c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015650:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015654:	f1bb 0f00 	cmp.w	fp, #0
 8015658:	f340 8108 	ble.w	801586c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801565c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015660:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015664:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015668:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801566a:	f1bb 0b01 	subs.w	fp, fp, #1
 801566e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015672:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015676:	eeb0 6a62 	vmov.f32	s12, s5
 801567a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801567e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015682:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015686:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801568a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801568e:	eeb0 6a43 	vmov.f32	s12, s6
 8015692:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015696:	ee12 2a90 	vmov	r2, s5
 801569a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801569e:	fb92 f3f3 	sdiv	r3, r2, r3
 80156a2:	ee13 2a10 	vmov	r2, s6
 80156a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156aa:	9313      	str	r3, [sp, #76]	; 0x4c
 80156ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80156b2:	9a04      	ldr	r2, [sp, #16]
 80156b4:	9314      	str	r3, [sp, #80]	; 0x50
 80156b6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80156ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156bc:	eeb0 3a67 	vmov.f32	s6, s15
 80156c0:	bf08      	it	eq
 80156c2:	4613      	moveq	r3, r2
 80156c4:	eef0 2a47 	vmov.f32	s5, s14
 80156c8:	e787      	b.n	80155da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80156ca:	140e      	asrs	r6, r1, #16
 80156cc:	d462      	bmi.n	8015794 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80156ce:	f8de 5008 	ldr.w	r5, [lr, #8]
 80156d2:	42b5      	cmp	r5, r6
 80156d4:	dd5e      	ble.n	8015794 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80156d6:	1417      	asrs	r7, r2, #16
 80156d8:	d45c      	bmi.n	8015794 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80156da:	f8de 400c 	ldr.w	r4, [lr, #12]
 80156de:	42bc      	cmp	r4, r7
 80156e0:	dd58      	ble.n	8015794 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80156e2:	b22d      	sxth	r5, r5
 80156e4:	fb07 6505 	mla	r5, r7, r5, r6
 80156e8:	9c02      	ldr	r4, [sp, #8]
 80156ea:	5d66      	ldrb	r6, [r4, r5]
 80156ec:	2e00      	cmp	r6, #0
 80156ee:	d051      	beq.n	8015794 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80156f0:	9c01      	ldr	r4, [sp, #4]
 80156f2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80156f6:	f06f 0401 	mvn.w	r4, #1
 80156fa:	fb04 f408 	mul.w	r4, r4, r8
 80156fe:	9403      	str	r4, [sp, #12]
 8015700:	5b05      	ldrh	r5, [r0, r4]
 8015702:	9c05      	ldr	r4, [sp, #20]
 8015704:	4366      	muls	r6, r4
 8015706:	1c74      	adds	r4, r6, #1
 8015708:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801570c:	1224      	asrs	r4, r4, #8
 801570e:	b2a7      	uxth	r7, r4
 8015710:	122e      	asrs	r6, r5, #8
 8015712:	43e4      	mvns	r4, r4
 8015714:	b2e4      	uxtb	r4, r4
 8015716:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801571a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801571e:	fb16 f604 	smulbb	r6, r6, r4
 8015722:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015726:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801572a:	00ed      	lsls	r5, r5, #3
 801572c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015730:	b2ed      	uxtb	r5, r5
 8015732:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015736:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801573a:	fb15 f504 	smulbb	r5, r5, r4
 801573e:	fa5f f989 	uxtb.w	r9, r9
 8015742:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015746:	fb09 5507 	mla	r5, r9, r7, r5
 801574a:	fb1a fa04 	smulbb	sl, sl, r4
 801574e:	fa1f fc8c 	uxth.w	ip, ip
 8015752:	b2ad      	uxth	r5, r5
 8015754:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015758:	fb06 a607 	mla	r6, r6, r7, sl
 801575c:	f10c 0401 	add.w	r4, ip, #1
 8015760:	f105 0a01 	add.w	sl, r5, #1
 8015764:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015768:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801576c:	b2b6      	uxth	r6, r6
 801576e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015772:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015776:	ea4a 0c0c 	orr.w	ip, sl, ip
 801577a:	f106 0a01 	add.w	sl, r6, #1
 801577e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015782:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015786:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801578a:	9c03      	ldr	r4, [sp, #12]
 801578c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015790:	f820 c004 	strh.w	ip, [r0, r4]
 8015794:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015796:	4421      	add	r1, r4
 8015798:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801579a:	f108 38ff 	add.w	r8, r8, #4294967295
 801579e:	4422      	add	r2, r4
 80157a0:	e750      	b.n	8015644 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80157a2:	f04f 0900 	mov.w	r9, #0
 80157a6:	eba3 0409 	sub.w	r4, r3, r9
 80157aa:	2c00      	cmp	r4, #0
 80157ac:	f77f af4e 	ble.w	801564c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80157b0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80157b4:	140d      	asrs	r5, r1, #16
 80157b6:	1414      	asrs	r4, r2, #16
 80157b8:	fb06 5404 	mla	r4, r6, r4, r5
 80157bc:	9d02      	ldr	r5, [sp, #8]
 80157be:	5d2e      	ldrb	r6, [r5, r4]
 80157c0:	2e00      	cmp	r6, #0
 80157c2:	d04c      	beq.n	801585e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80157c4:	9d01      	ldr	r5, [sp, #4]
 80157c6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80157ca:	9c05      	ldr	r4, [sp, #20]
 80157cc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80157d0:	4366      	muls	r6, r4
 80157d2:	1c74      	adds	r4, r6, #1
 80157d4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80157d8:	1224      	asrs	r4, r4, #8
 80157da:	b2a7      	uxth	r7, r4
 80157dc:	122e      	asrs	r6, r5, #8
 80157de:	43e4      	mvns	r4, r4
 80157e0:	b2e4      	uxtb	r4, r4
 80157e2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80157e6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80157ea:	fb16 f604 	smulbb	r6, r6, r4
 80157ee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80157f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80157f6:	00ed      	lsls	r5, r5, #3
 80157f8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80157fc:	b2ed      	uxtb	r5, r5
 80157fe:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015802:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015806:	fb15 f504 	smulbb	r5, r5, r4
 801580a:	fa5f f888 	uxtb.w	r8, r8
 801580e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015812:	fb08 5507 	mla	r5, r8, r7, r5
 8015816:	fb1a fa04 	smulbb	sl, sl, r4
 801581a:	fa1f fc8c 	uxth.w	ip, ip
 801581e:	b2ad      	uxth	r5, r5
 8015820:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015824:	fb06 a607 	mla	r6, r6, r7, sl
 8015828:	f10c 0401 	add.w	r4, ip, #1
 801582c:	f105 0a01 	add.w	sl, r5, #1
 8015830:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015834:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015838:	b2b6      	uxth	r6, r6
 801583a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801583e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015842:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015846:	f106 0a01 	add.w	sl, r6, #1
 801584a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801584e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015852:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015856:	ea4c 0c0a 	orr.w	ip, ip, sl
 801585a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801585e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015860:	4421      	add	r1, r4
 8015862:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015864:	f109 0901 	add.w	r9, r9, #1
 8015868:	4422      	add	r2, r4
 801586a:	e79c      	b.n	80157a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801586c:	b007      	add	sp, #28
 801586e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015872 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015872:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015876:	b085      	sub	sp, #20
 8015878:	468b      	mov	fp, r1
 801587a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801587c:	9203      	str	r2, [sp, #12]
 801587e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015882:	6861      	ldr	r1, [r4, #4]
 8015884:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015888:	fb01 2000 	mla	r0, r1, r0, r2
 801588c:	6822      	ldr	r2, [r4, #0]
 801588e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015892:	f8d8 2000 	ldr.w	r2, [r8]
 8015896:	9200      	str	r2, [sp, #0]
 8015898:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801589c:	9201      	str	r2, [sp, #4]
 801589e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80158a2:	f1bb 0f00 	cmp.w	fp, #0
 80158a6:	dc03      	bgt.n	80158b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80158a8:	9a03      	ldr	r2, [sp, #12]
 80158aa:	2a00      	cmp	r2, #0
 80158ac:	f340 8146 	ble.w	8015b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80158b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80158b2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80158b6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80158ba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80158be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80158c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80158c4:	2b00      	cmp	r3, #0
 80158c6:	dd0e      	ble.n	80158e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80158c8:	140c      	asrs	r4, r1, #16
 80158ca:	d405      	bmi.n	80158d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80158cc:	42bc      	cmp	r4, r7
 80158ce:	da03      	bge.n	80158d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80158d0:	1414      	asrs	r4, r2, #16
 80158d2:	d401      	bmi.n	80158d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80158d4:	42b4      	cmp	r4, r6
 80158d6:	db07      	blt.n	80158e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80158d8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80158da:	4421      	add	r1, r4
 80158dc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80158de:	3b01      	subs	r3, #1
 80158e0:	4422      	add	r2, r4
 80158e2:	3002      	adds	r0, #2
 80158e4:	e7ee      	b.n	80158c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80158e6:	d017      	beq.n	8015918 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80158e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80158ea:	1e5c      	subs	r4, r3, #1
 80158ec:	fb05 1504 	mla	r5, r5, r4, r1
 80158f0:	142d      	asrs	r5, r5, #16
 80158f2:	d409      	bmi.n	8015908 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80158f4:	42bd      	cmp	r5, r7
 80158f6:	da07      	bge.n	8015908 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80158f8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80158fa:	fb05 2404 	mla	r4, r5, r4, r2
 80158fe:	1424      	asrs	r4, r4, #16
 8015900:	d402      	bmi.n	8015908 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015902:	42b4      	cmp	r4, r6
 8015904:	f2c0 80b3 	blt.w	8015a6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015908:	2600      	movs	r6, #0
 801590a:	199c      	adds	r4, r3, r6
 801590c:	2c00      	cmp	r4, #0
 801590e:	dc3e      	bgt.n	801598e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015910:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015914:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015918:	f1bb 0f00 	cmp.w	fp, #0
 801591c:	f340 810e 	ble.w	8015b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015920:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015924:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015928:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801592c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801592e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015932:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015936:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801593a:	eeb0 6a62 	vmov.f32	s12, s5
 801593e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015942:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015946:	ee77 2a62 	vsub.f32	s5, s14, s5
 801594a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801594e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015952:	eeb0 6a43 	vmov.f32	s12, s6
 8015956:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801595a:	ee12 2a90 	vmov	r2, s5
 801595e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015962:	fb92 f3f3 	sdiv	r3, r2, r3
 8015966:	ee13 2a10 	vmov	r2, s6
 801596a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801596e:	9311      	str	r3, [sp, #68]	; 0x44
 8015970:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015972:	fb92 f3f3 	sdiv	r3, r2, r3
 8015976:	9a03      	ldr	r2, [sp, #12]
 8015978:	9312      	str	r3, [sp, #72]	; 0x48
 801597a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801597e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015980:	eeb0 3a67 	vmov.f32	s6, s15
 8015984:	bf08      	it	eq
 8015986:	4613      	moveq	r3, r2
 8015988:	eef0 2a47 	vmov.f32	s5, s14
 801598c:	e789      	b.n	80158a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801598e:	140f      	asrs	r7, r1, #16
 8015990:	d418      	bmi.n	80159c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015992:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015996:	42bd      	cmp	r5, r7
 8015998:	dd14      	ble.n	80159c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801599a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801599e:	d411      	bmi.n	80159c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80159a0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80159a4:	4564      	cmp	r4, ip
 80159a6:	dd0d      	ble.n	80159c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80159a8:	b22d      	sxth	r5, r5
 80159aa:	fb0c 7505 	mla	r5, ip, r5, r7
 80159ae:	9c01      	ldr	r4, [sp, #4]
 80159b0:	5d64      	ldrb	r4, [r4, r5]
 80159b2:	2cff      	cmp	r4, #255	; 0xff
 80159b4:	d10c      	bne.n	80159d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80159b6:	9c00      	ldr	r4, [sp, #0]
 80159b8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80159bc:	f06f 0401 	mvn.w	r4, #1
 80159c0:	4374      	muls	r4, r6
 80159c2:	5305      	strh	r5, [r0, r4]
 80159c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80159c6:	4421      	add	r1, r4
 80159c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80159ca:	3e01      	subs	r6, #1
 80159cc:	4422      	add	r2, r4
 80159ce:	e79c      	b.n	801590a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80159d0:	2c00      	cmp	r4, #0
 80159d2:	d0f7      	beq.n	80159c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80159d4:	9f00      	ldr	r7, [sp, #0]
 80159d6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80159da:	f06f 0501 	mvn.w	r5, #1
 80159de:	4375      	muls	r5, r6
 80159e0:	9502      	str	r5, [sp, #8]
 80159e2:	5b45      	ldrh	r5, [r0, r5]
 80159e4:	fa1f fc84 	uxth.w	ip, r4
 80159e8:	122f      	asrs	r7, r5, #8
 80159ea:	43e4      	mvns	r4, r4
 80159ec:	b2e4      	uxtb	r4, r4
 80159ee:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80159f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80159f6:	fb17 f704 	smulbb	r7, r7, r4
 80159fa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80159fe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015a02:	00ed      	lsls	r5, r5, #3
 8015a04:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015a08:	b2ed      	uxtb	r5, r5
 8015a0a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015a0e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015a12:	fb15 f504 	smulbb	r5, r5, r4
 8015a16:	fa5f f989 	uxtb.w	r9, r9
 8015a1a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015a1e:	fb09 550c 	mla	r5, r9, ip, r5
 8015a22:	fb1a fa04 	smulbb	sl, sl, r4
 8015a26:	fa1f fe8e 	uxth.w	lr, lr
 8015a2a:	b2ad      	uxth	r5, r5
 8015a2c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015a30:	fb07 a70c 	mla	r7, r7, ip, sl
 8015a34:	f10e 0401 	add.w	r4, lr, #1
 8015a38:	f105 0a01 	add.w	sl, r5, #1
 8015a3c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015a40:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015a44:	b2bf      	uxth	r7, r7
 8015a46:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015a4a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015a4e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015a52:	f107 0a01 	add.w	sl, r7, #1
 8015a56:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015a5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015a5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015a62:	9c02      	ldr	r4, [sp, #8]
 8015a64:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015a68:	f820 e004 	strh.w	lr, [r0, r4]
 8015a6c:	e7aa      	b.n	80159c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015a6e:	f04f 0900 	mov.w	r9, #0
 8015a72:	eba3 0409 	sub.w	r4, r3, r9
 8015a76:	2c00      	cmp	r4, #0
 8015a78:	f77f af4a 	ble.w	8015910 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015a7c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015a80:	1414      	asrs	r4, r2, #16
 8015a82:	140d      	asrs	r5, r1, #16
 8015a84:	fb06 5504 	mla	r5, r6, r4, r5
 8015a88:	9c01      	ldr	r4, [sp, #4]
 8015a8a:	5d64      	ldrb	r4, [r4, r5]
 8015a8c:	2cff      	cmp	r4, #255	; 0xff
 8015a8e:	d10b      	bne.n	8015aa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015a90:	9c00      	ldr	r4, [sp, #0]
 8015a92:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015a96:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015a9a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015a9c:	4421      	add	r1, r4
 8015a9e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015aa0:	f109 0901 	add.w	r9, r9, #1
 8015aa4:	4422      	add	r2, r4
 8015aa6:	e7e4      	b.n	8015a72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015aa8:	2c00      	cmp	r4, #0
 8015aaa:	d0f6      	beq.n	8015a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015aac:	9e00      	ldr	r6, [sp, #0]
 8015aae:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015ab2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015ab6:	b2a7      	uxth	r7, r4
 8015ab8:	122e      	asrs	r6, r5, #8
 8015aba:	43e4      	mvns	r4, r4
 8015abc:	b2e4      	uxtb	r4, r4
 8015abe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015ac2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015ac6:	fb16 f604 	smulbb	r6, r6, r4
 8015aca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015ace:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015ad2:	00ed      	lsls	r5, r5, #3
 8015ad4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015ad8:	b2ed      	uxtb	r5, r5
 8015ada:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015ade:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015ae2:	fb15 f504 	smulbb	r5, r5, r4
 8015ae6:	fa5f fe8e 	uxtb.w	lr, lr
 8015aea:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015aee:	fb0e 5507 	mla	r5, lr, r7, r5
 8015af2:	fb1a fa04 	smulbb	sl, sl, r4
 8015af6:	fa1f fc8c 	uxth.w	ip, ip
 8015afa:	b2ad      	uxth	r5, r5
 8015afc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015b00:	fb06 a607 	mla	r6, r6, r7, sl
 8015b04:	f10c 0401 	add.w	r4, ip, #1
 8015b08:	f105 0a01 	add.w	sl, r5, #1
 8015b0c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015b10:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015b14:	b2b6      	uxth	r6, r6
 8015b16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b1a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015b1e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015b22:	f106 0a01 	add.w	sl, r6, #1
 8015b26:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015b2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b2e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015b32:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015b36:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015b3a:	e7ae      	b.n	8015a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015b3c:	b005      	add	sp, #20
 8015b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015b42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015b42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b46:	b085      	sub	sp, #20
 8015b48:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015b4a:	9203      	str	r2, [sp, #12]
 8015b4c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015b50:	9201      	str	r2, [sp, #4]
 8015b52:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015b56:	9100      	str	r1, [sp, #0]
 8015b58:	6841      	ldr	r1, [r0, #4]
 8015b5a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015b5e:	fb01 2404 	mla	r4, r1, r4, r2
 8015b62:	6802      	ldr	r2, [r0, #0]
 8015b64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015b68:	f8de 2000 	ldr.w	r2, [lr]
 8015b6c:	9202      	str	r2, [sp, #8]
 8015b6e:	9a01      	ldr	r2, [sp, #4]
 8015b70:	43d6      	mvns	r6, r2
 8015b72:	b2f6      	uxtb	r6, r6
 8015b74:	9a00      	ldr	r2, [sp, #0]
 8015b76:	2a00      	cmp	r2, #0
 8015b78:	dc03      	bgt.n	8015b82 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015b7a:	9a03      	ldr	r2, [sp, #12]
 8015b7c:	2a00      	cmp	r2, #0
 8015b7e:	f340 8124 	ble.w	8015dca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015b82:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015b84:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015b88:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015b8c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015b90:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015b92:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015b96:	2b00      	cmp	r3, #0
 8015b98:	dd0e      	ble.n	8015bb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015b9a:	1408      	asrs	r0, r1, #16
 8015b9c:	d405      	bmi.n	8015baa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015b9e:	4560      	cmp	r0, ip
 8015ba0:	da03      	bge.n	8015baa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ba2:	1410      	asrs	r0, r2, #16
 8015ba4:	d401      	bmi.n	8015baa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ba6:	42b8      	cmp	r0, r7
 8015ba8:	db07      	blt.n	8015bba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015baa:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015bac:	4401      	add	r1, r0
 8015bae:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015bb0:	3b01      	subs	r3, #1
 8015bb2:	4402      	add	r2, r0
 8015bb4:	3402      	adds	r4, #2
 8015bb6:	e7ee      	b.n	8015b96 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015bb8:	d06e      	beq.n	8015c98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015bba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015bbc:	1e58      	subs	r0, r3, #1
 8015bbe:	fb05 1500 	mla	r5, r5, r0, r1
 8015bc2:	142d      	asrs	r5, r5, #16
 8015bc4:	d45c      	bmi.n	8015c80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015bc6:	4565      	cmp	r5, ip
 8015bc8:	da5a      	bge.n	8015c80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015bca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015bcc:	fb05 2000 	mla	r0, r5, r0, r2
 8015bd0:	1400      	asrs	r0, r0, #16
 8015bd2:	d455      	bmi.n	8015c80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015bd4:	42b8      	cmp	r0, r7
 8015bd6:	da53      	bge.n	8015c80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015bd8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015bdc:	4699      	mov	r9, r3
 8015bde:	46a2      	mov	sl, r4
 8015be0:	f1b9 0f00 	cmp.w	r9, #0
 8015be4:	dd54      	ble.n	8015c90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015be6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015bea:	140d      	asrs	r5, r1, #16
 8015bec:	1410      	asrs	r0, r2, #16
 8015bee:	fb07 5000 	mla	r0, r7, r0, r5
 8015bf2:	9d02      	ldr	r5, [sp, #8]
 8015bf4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015bf8:	f8ba 5000 	ldrh.w	r5, [sl]
 8015bfc:	122f      	asrs	r7, r5, #8
 8015bfe:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015c02:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015c06:	fb17 f706 	smulbb	r7, r7, r6
 8015c0a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015c0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015c12:	00ed      	lsls	r5, r5, #3
 8015c14:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015c18:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015c1c:	10c7      	asrs	r7, r0, #3
 8015c1e:	b2ed      	uxtb	r5, r5
 8015c20:	00c0      	lsls	r0, r0, #3
 8015c22:	fb18 f806 	smulbb	r8, r8, r6
 8015c26:	fb15 f506 	smulbb	r5, r5, r6
 8015c2a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015c2e:	b2c0      	uxtb	r0, r0
 8015c30:	fa1f fc8c 	uxth.w	ip, ip
 8015c34:	fb07 870b 	mla	r7, r7, fp, r8
 8015c38:	fb00 500b 	mla	r0, r0, fp, r5
 8015c3c:	b280      	uxth	r0, r0
 8015c3e:	b2bf      	uxth	r7, r7
 8015c40:	f10c 0501 	add.w	r5, ip, #1
 8015c44:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015c48:	f107 0801 	add.w	r8, r7, #1
 8015c4c:	1c45      	adds	r5, r0, #1
 8015c4e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015c52:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015c56:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c58:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015c5c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015c60:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015c64:	ea45 0c0c 	orr.w	ip, r5, ip
 8015c68:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015c6c:	4401      	add	r1, r0
 8015c6e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015c70:	ea4c 0c08 	orr.w	ip, ip, r8
 8015c74:	f82a cb02 	strh.w	ip, [sl], #2
 8015c78:	4402      	add	r2, r0
 8015c7a:	f109 39ff 	add.w	r9, r9, #4294967295
 8015c7e:	e7af      	b.n	8015be0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015c80:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015c84:	f04f 0800 	mov.w	r8, #0
 8015c88:	eb03 0008 	add.w	r0, r3, r8
 8015c8c:	2800      	cmp	r0, #0
 8015c8e:	dc41      	bgt.n	8015d14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015c90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015c94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015c98:	9b00      	ldr	r3, [sp, #0]
 8015c9a:	2b00      	cmp	r3, #0
 8015c9c:	f340 8095 	ble.w	8015dca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015ca0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ca4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015ca8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015cac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015cae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015cb2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015cb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015cba:	eef0 6a62 	vmov.f32	s13, s5
 8015cbe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015cc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015cc6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015cca:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015cce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015cd2:	eef0 6a43 	vmov.f32	s13, s6
 8015cd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015cda:	ee12 2a90 	vmov	r2, s5
 8015cde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015ce2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ce6:	ee13 2a10 	vmov	r2, s6
 8015cea:	9311      	str	r3, [sp, #68]	; 0x44
 8015cec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015cee:	fb92 f3f3 	sdiv	r3, r2, r3
 8015cf2:	9312      	str	r3, [sp, #72]	; 0x48
 8015cf4:	9b00      	ldr	r3, [sp, #0]
 8015cf6:	9a03      	ldr	r2, [sp, #12]
 8015cf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015cfc:	3b01      	subs	r3, #1
 8015cfe:	9300      	str	r3, [sp, #0]
 8015d00:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015d04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015d06:	eeb0 3a67 	vmov.f32	s6, s15
 8015d0a:	bf08      	it	eq
 8015d0c:	4613      	moveq	r3, r2
 8015d0e:	eef0 2a47 	vmov.f32	s5, s14
 8015d12:	e72f      	b.n	8015b74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015d14:	140f      	asrs	r7, r1, #16
 8015d16:	d451      	bmi.n	8015dbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015d18:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015d1c:	42bd      	cmp	r5, r7
 8015d1e:	dd4d      	ble.n	8015dbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015d20:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015d24:	d44a      	bmi.n	8015dbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015d26:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015d2a:	4560      	cmp	r0, ip
 8015d2c:	dd46      	ble.n	8015dbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015d2e:	b22d      	sxth	r5, r5
 8015d30:	fb0c 7505 	mla	r5, ip, r5, r7
 8015d34:	9802      	ldr	r0, [sp, #8]
 8015d36:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015d3a:	f06f 0501 	mvn.w	r5, #1
 8015d3e:	fb05 fb08 	mul.w	fp, r5, r8
 8015d42:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015d46:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015d4a:	122f      	asrs	r7, r5, #8
 8015d4c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015d50:	fb17 f706 	smulbb	r7, r7, r6
 8015d54:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015d58:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015d5c:	00ed      	lsls	r5, r5, #3
 8015d5e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015d62:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015d66:	10c7      	asrs	r7, r0, #3
 8015d68:	b2ed      	uxtb	r5, r5
 8015d6a:	00c0      	lsls	r0, r0, #3
 8015d6c:	fb19 f906 	smulbb	r9, r9, r6
 8015d70:	fb15 f506 	smulbb	r5, r5, r6
 8015d74:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015d78:	b2c0      	uxtb	r0, r0
 8015d7a:	fa1f fc8c 	uxth.w	ip, ip
 8015d7e:	fb07 970a 	mla	r7, r7, sl, r9
 8015d82:	fb00 500a 	mla	r0, r0, sl, r5
 8015d86:	b2bf      	uxth	r7, r7
 8015d88:	b280      	uxth	r0, r0
 8015d8a:	f10c 0501 	add.w	r5, ip, #1
 8015d8e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015d92:	f107 0901 	add.w	r9, r7, #1
 8015d96:	1c45      	adds	r5, r0, #1
 8015d98:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015d9c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015da0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015da4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015da8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015dac:	ea45 0c0c 	orr.w	ip, r5, ip
 8015db0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015db4:	ea4c 0c09 	orr.w	ip, ip, r9
 8015db8:	f824 c00b 	strh.w	ip, [r4, fp]
 8015dbc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015dbe:	4401      	add	r1, r0
 8015dc0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015dc2:	f108 38ff 	add.w	r8, r8, #4294967295
 8015dc6:	4402      	add	r2, r0
 8015dc8:	e75e      	b.n	8015c88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015dca:	b005      	add	sp, #20
 8015dcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015dd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dd4:	b085      	sub	sp, #20
 8015dd6:	4693      	mov	fp, r2
 8015dd8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015dda:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015ddc:	6870      	ldr	r0, [r6, #4]
 8015dde:	9101      	str	r1, [sp, #4]
 8015de0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015de4:	fb00 2404 	mla	r4, r0, r4, r2
 8015de8:	6832      	ldr	r2, [r6, #0]
 8015dea:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8015dee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015df2:	682a      	ldr	r2, [r5, #0]
 8015df4:	9202      	str	r2, [sp, #8]
 8015df6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015dfa:	9a01      	ldr	r2, [sp, #4]
 8015dfc:	2a00      	cmp	r2, #0
 8015dfe:	dc03      	bgt.n	8015e08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015e00:	f1bb 0f00 	cmp.w	fp, #0
 8015e04:	f340 809a 	ble.w	8015f3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015e08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015e0a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015e0e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015e12:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015e16:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015e18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015e1c:	2b00      	cmp	r3, #0
 8015e1e:	dd0c      	ble.n	8015e3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015e20:	1406      	asrs	r6, r0, #16
 8015e22:	d405      	bmi.n	8015e30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015e24:	454e      	cmp	r6, r9
 8015e26:	da03      	bge.n	8015e30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015e28:	1416      	asrs	r6, r2, #16
 8015e2a:	d401      	bmi.n	8015e30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015e2c:	4546      	cmp	r6, r8
 8015e2e:	db05      	blt.n	8015e3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e30:	4470      	add	r0, lr
 8015e32:	4462      	add	r2, ip
 8015e34:	3b01      	subs	r3, #1
 8015e36:	3402      	adds	r4, #2
 8015e38:	e7f0      	b.n	8015e1c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015e3a:	d00f      	beq.n	8015e5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015e3c:	1e5e      	subs	r6, r3, #1
 8015e3e:	fb0e 0706 	mla	r7, lr, r6, r0
 8015e42:	143f      	asrs	r7, r7, #16
 8015e44:	d541      	bpl.n	8015eca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8015e46:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8015e4a:	4698      	mov	r8, r3
 8015e4c:	9603      	str	r6, [sp, #12]
 8015e4e:	f1b8 0f00 	cmp.w	r8, #0
 8015e52:	dc56      	bgt.n	8015f02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8015e54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e58:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e5c:	9b01      	ldr	r3, [sp, #4]
 8015e5e:	2b00      	cmp	r3, #0
 8015e60:	dd6c      	ble.n	8015f3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015e62:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015e66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015e6a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015e6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e70:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e78:	eeb0 6a62 	vmov.f32	s12, s5
 8015e7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e84:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015e88:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015e8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015e90:	eeb0 6a43 	vmov.f32	s12, s6
 8015e94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015e98:	ee12 2a90 	vmov	r2, s5
 8015e9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015ea0:	fb92 fef3 	sdiv	lr, r2, r3
 8015ea4:	ee13 2a10 	vmov	r2, s6
 8015ea8:	fb92 fcf3 	sdiv	ip, r2, r3
 8015eac:	9b01      	ldr	r3, [sp, #4]
 8015eae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015eb2:	3b01      	subs	r3, #1
 8015eb4:	9301      	str	r3, [sp, #4]
 8015eb6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015eba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ebc:	eeb0 3a67 	vmov.f32	s6, s15
 8015ec0:	bf08      	it	eq
 8015ec2:	465b      	moveq	r3, fp
 8015ec4:	eef0 2a47 	vmov.f32	s5, s14
 8015ec8:	e797      	b.n	8015dfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015eca:	454f      	cmp	r7, r9
 8015ecc:	dabb      	bge.n	8015e46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015ece:	fb0c 2606 	mla	r6, ip, r6, r2
 8015ed2:	1436      	asrs	r6, r6, #16
 8015ed4:	d4b7      	bmi.n	8015e46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015ed6:	4546      	cmp	r6, r8
 8015ed8:	dab5      	bge.n	8015e46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015eda:	461e      	mov	r6, r3
 8015edc:	46a0      	mov	r8, r4
 8015ede:	2e00      	cmp	r6, #0
 8015ee0:	ddb8      	ble.n	8015e54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015ee2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015ee6:	9902      	ldr	r1, [sp, #8]
 8015ee8:	1417      	asrs	r7, r2, #16
 8015eea:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015eee:	fb0a 9707 	mla	r7, sl, r7, r9
 8015ef2:	4470      	add	r0, lr
 8015ef4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015ef8:	f828 7b02 	strh.w	r7, [r8], #2
 8015efc:	4462      	add	r2, ip
 8015efe:	3e01      	subs	r6, #1
 8015f00:	e7ed      	b.n	8015ede <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8015f02:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015f06:	d414      	bmi.n	8015f32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015f08:	68ae      	ldr	r6, [r5, #8]
 8015f0a:	454e      	cmp	r6, r9
 8015f0c:	dd11      	ble.n	8015f32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015f0e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015f12:	d40e      	bmi.n	8015f32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015f14:	68ef      	ldr	r7, [r5, #12]
 8015f16:	4557      	cmp	r7, sl
 8015f18:	dd0b      	ble.n	8015f32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015f1a:	b236      	sxth	r6, r6
 8015f1c:	fb0a 9606 	mla	r6, sl, r6, r9
 8015f20:	9f02      	ldr	r7, [sp, #8]
 8015f22:	f06f 0101 	mvn.w	r1, #1
 8015f26:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015f2a:	fb01 f608 	mul.w	r6, r1, r8
 8015f2e:	9903      	ldr	r1, [sp, #12]
 8015f30:	538f      	strh	r7, [r1, r6]
 8015f32:	4470      	add	r0, lr
 8015f34:	4462      	add	r2, ip
 8015f36:	f108 38ff 	add.w	r8, r8, #4294967295
 8015f3a:	e788      	b.n	8015e4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015f3c:	b005      	add	sp, #20
 8015f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f46:	b087      	sub	sp, #28
 8015f48:	468b      	mov	fp, r1
 8015f4a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015f4c:	9203      	str	r2, [sp, #12]
 8015f4e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015f52:	9204      	str	r2, [sp, #16]
 8015f54:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8015f58:	6841      	ldr	r1, [r0, #4]
 8015f5a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8015f5e:	fb01 2505 	mla	r5, r1, r5, r2
 8015f62:	6802      	ldr	r2, [r0, #0]
 8015f64:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015f68:	f8d9 2000 	ldr.w	r2, [r9]
 8015f6c:	9201      	str	r2, [sp, #4]
 8015f6e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015f72:	f1bb 0f00 	cmp.w	fp, #0
 8015f76:	dc03      	bgt.n	8015f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015f78:	9a03      	ldr	r2, [sp, #12]
 8015f7a:	2a00      	cmp	r2, #0
 8015f7c:	f340 8159 	ble.w	8016232 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015f80:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015f82:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015f86:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015f8a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015f8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015f90:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015f94:	2b00      	cmp	r3, #0
 8015f96:	dd0e      	ble.n	8015fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015f98:	1402      	asrs	r2, r0, #16
 8015f9a:	d405      	bmi.n	8015fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015f9c:	42ba      	cmp	r2, r7
 8015f9e:	da03      	bge.n	8015fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015fa0:	140a      	asrs	r2, r1, #16
 8015fa2:	d401      	bmi.n	8015fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015fa4:	42b2      	cmp	r2, r6
 8015fa6:	db07      	blt.n	8015fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015fa8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015faa:	4410      	add	r0, r2
 8015fac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015fae:	3b01      	subs	r3, #1
 8015fb0:	4411      	add	r1, r2
 8015fb2:	3502      	adds	r5, #2
 8015fb4:	e7ee      	b.n	8015f94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015fb6:	d017      	beq.n	8015fe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015fb8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015fba:	1e5a      	subs	r2, r3, #1
 8015fbc:	fb04 0402 	mla	r4, r4, r2, r0
 8015fc0:	1424      	asrs	r4, r4, #16
 8015fc2:	d409      	bmi.n	8015fd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015fc4:	42bc      	cmp	r4, r7
 8015fc6:	da07      	bge.n	8015fd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015fc8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015fca:	fb04 1202 	mla	r2, r4, r2, r1
 8015fce:	1412      	asrs	r2, r2, #16
 8015fd0:	d402      	bmi.n	8015fd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015fd2:	42b2      	cmp	r2, r6
 8015fd4:	f2c0 80bf 	blt.w	8016156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015fd8:	2700      	movs	r7, #0
 8015fda:	19da      	adds	r2, r3, r7
 8015fdc:	2a00      	cmp	r2, #0
 8015fde:	dc3e      	bgt.n	801605e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015fe0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015fe4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015fe8:	f1bb 0f00 	cmp.w	fp, #0
 8015fec:	f340 8121 	ble.w	8016232 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015ff0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ff4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ff8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015ffc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ffe:	f1bb 0b01 	subs.w	fp, fp, #1
 8016002:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016006:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801600a:	eeb0 6a62 	vmov.f32	s12, s5
 801600e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016012:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016016:	ee77 2a62 	vsub.f32	s5, s14, s5
 801601a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801601e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016022:	eeb0 6a43 	vmov.f32	s12, s6
 8016026:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801602a:	ee12 2a90 	vmov	r2, s5
 801602e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016032:	fb92 f3f3 	sdiv	r3, r2, r3
 8016036:	ee13 2a10 	vmov	r2, s6
 801603a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801603e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016040:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016042:	fb92 f3f3 	sdiv	r3, r2, r3
 8016046:	9a03      	ldr	r2, [sp, #12]
 8016048:	9314      	str	r3, [sp, #80]	; 0x50
 801604a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801604e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016050:	eeb0 3a67 	vmov.f32	s6, s15
 8016054:	bf08      	it	eq
 8016056:	4613      	moveq	r3, r2
 8016058:	eef0 2a47 	vmov.f32	s5, s14
 801605c:	e789      	b.n	8015f72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801605e:	1406      	asrs	r6, r0, #16
 8016060:	d42d      	bmi.n	80160be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016062:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8016066:	42b4      	cmp	r4, r6
 8016068:	dd29      	ble.n	80160be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801606a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801606e:	d426      	bmi.n	80160be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016070:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016074:	4562      	cmp	r2, ip
 8016076:	dd22      	ble.n	80160be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016078:	b224      	sxth	r4, r4
 801607a:	9a01      	ldr	r2, [sp, #4]
 801607c:	fb0c 6404 	mla	r4, ip, r4, r6
 8016080:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8016084:	0e22      	lsrs	r2, r4, #24
 8016086:	d01a      	beq.n	80160be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016088:	9e04      	ldr	r6, [sp, #16]
 801608a:	4372      	muls	r2, r6
 801608c:	1c56      	adds	r6, r2, #1
 801608e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016092:	1212      	asrs	r2, r2, #8
 8016094:	0a26      	lsrs	r6, r4, #8
 8016096:	2aff      	cmp	r2, #255	; 0xff
 8016098:	9605      	str	r6, [sp, #20]
 801609a:	d116      	bne.n	80160ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801609c:	f06f 0201 	mvn.w	r2, #1
 80160a0:	fb02 fc07 	mul.w	ip, r2, r7
 80160a4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80160a8:	0962      	lsrs	r2, r4, #5
 80160aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80160ae:	f026 0607 	bic.w	r6, r6, #7
 80160b2:	4316      	orrs	r6, r2
 80160b4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80160b8:	4326      	orrs	r6, r4
 80160ba:	f825 600c 	strh.w	r6, [r5, ip]
 80160be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80160c0:	4410      	add	r0, r2
 80160c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80160c4:	3f01      	subs	r7, #1
 80160c6:	4411      	add	r1, r2
 80160c8:	e787      	b.n	8015fda <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80160ca:	f06f 0601 	mvn.w	r6, #1
 80160ce:	437e      	muls	r6, r7
 80160d0:	fa1f fa82 	uxth.w	sl, r2
 80160d4:	f835 8006 	ldrh.w	r8, [r5, r6]
 80160d8:	9602      	str	r6, [sp, #8]
 80160da:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80160de:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80160e2:	43d2      	mvns	r2, r2
 80160e4:	b2d2      	uxtb	r2, r2
 80160e6:	fb1c fc0a 	smulbb	ip, ip, sl
 80160ea:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80160ee:	fb0e ce02 	mla	lr, lr, r2, ip
 80160f2:	b2e4      	uxtb	r4, r4
 80160f4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80160f8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80160fc:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016100:	fa5f f888 	uxtb.w	r8, r8
 8016104:	fb14 f40a 	smulbb	r4, r4, sl
 8016108:	fb08 4402 	mla	r4, r8, r2, r4
 801610c:	fa1f fe8e 	uxth.w	lr, lr
 8016110:	fb16 f60a 	smulbb	r6, r6, sl
 8016114:	b2a4      	uxth	r4, r4
 8016116:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801611a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801611e:	f10e 0201 	add.w	r2, lr, #1
 8016122:	1c66      	adds	r6, r4, #1
 8016124:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016128:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801612c:	fa1f fc8c 	uxth.w	ip, ip
 8016130:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016134:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016138:	ea46 0e0e 	orr.w	lr, r6, lr
 801613c:	f10c 0601 	add.w	r6, ip, #1
 8016140:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016144:	0976      	lsrs	r6, r6, #5
 8016146:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801614a:	9a02      	ldr	r2, [sp, #8]
 801614c:	ea4e 0e06 	orr.w	lr, lr, r6
 8016150:	f825 e002 	strh.w	lr, [r5, r2]
 8016154:	e7b3      	b.n	80160be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016156:	f04f 0800 	mov.w	r8, #0
 801615a:	eba3 0208 	sub.w	r2, r3, r8
 801615e:	2a00      	cmp	r2, #0
 8016160:	f77f af3e 	ble.w	8015fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016164:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8016168:	1404      	asrs	r4, r0, #16
 801616a:	140a      	asrs	r2, r1, #16
 801616c:	fb06 4202 	mla	r2, r6, r2, r4
 8016170:	9c01      	ldr	r4, [sp, #4]
 8016172:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8016176:	0e22      	lsrs	r2, r4, #24
 8016178:	d016      	beq.n	80161a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801617a:	9e04      	ldr	r6, [sp, #16]
 801617c:	4372      	muls	r2, r6
 801617e:	1c56      	adds	r6, r2, #1
 8016180:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016184:	1212      	asrs	r2, r2, #8
 8016186:	2aff      	cmp	r2, #255	; 0xff
 8016188:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801618c:	d113      	bne.n	80161b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801618e:	0962      	lsrs	r2, r4, #5
 8016190:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016194:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016198:	f026 0607 	bic.w	r6, r6, #7
 801619c:	4316      	orrs	r6, r2
 801619e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80161a2:	4326      	orrs	r6, r4
 80161a4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80161a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80161aa:	4410      	add	r0, r2
 80161ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80161ae:	f108 0801 	add.w	r8, r8, #1
 80161b2:	4411      	add	r1, r2
 80161b4:	e7d1      	b.n	801615a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80161b6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80161ba:	fa1f fa82 	uxth.w	sl, r2
 80161be:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80161c2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80161c6:	43d2      	mvns	r2, r2
 80161c8:	b2d2      	uxtb	r2, r2
 80161ca:	fb17 f70a 	smulbb	r7, r7, sl
 80161ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80161d2:	fb0c 7c02 	mla	ip, ip, r2, r7
 80161d6:	b2e4      	uxtb	r4, r4
 80161d8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80161dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80161e0:	fa5f fe8e 	uxtb.w	lr, lr
 80161e4:	fb14 f40a 	smulbb	r4, r4, sl
 80161e8:	fb0e 4402 	mla	r4, lr, r2, r4
 80161ec:	b2f6      	uxtb	r6, r6
 80161ee:	fa1f fc8c 	uxth.w	ip, ip
 80161f2:	fb16 f60a 	smulbb	r6, r6, sl
 80161f6:	b2a4      	uxth	r4, r4
 80161f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80161fc:	fb07 6702 	mla	r7, r7, r2, r6
 8016200:	f10c 0201 	add.w	r2, ip, #1
 8016204:	1c66      	adds	r6, r4, #1
 8016206:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801620a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801620e:	b2bf      	uxth	r7, r7
 8016210:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016214:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016218:	ea46 0c0c 	orr.w	ip, r6, ip
 801621c:	1c7e      	adds	r6, r7, #1
 801621e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016222:	0976      	lsrs	r6, r6, #5
 8016224:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016228:	ea4c 0c06 	orr.w	ip, ip, r6
 801622c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016230:	e7ba      	b.n	80161a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016232:	b007      	add	sp, #28
 8016234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016238 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801623c:	b085      	sub	sp, #20
 801623e:	468b      	mov	fp, r1
 8016240:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016242:	9203      	str	r2, [sp, #12]
 8016244:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016248:	6841      	ldr	r1, [r0, #4]
 801624a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801624e:	fb01 2404 	mla	r4, r1, r4, r2
 8016252:	6802      	ldr	r2, [r0, #0]
 8016254:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016258:	f8d8 2000 	ldr.w	r2, [r8]
 801625c:	9201      	str	r2, [sp, #4]
 801625e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016262:	f1bb 0f00 	cmp.w	fp, #0
 8016266:	dc03      	bgt.n	8016270 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016268:	9a03      	ldr	r2, [sp, #12]
 801626a:	2a00      	cmp	r2, #0
 801626c:	f340 814f 	ble.w	801650e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016270:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016272:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8016276:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801627a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801627e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016280:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016284:	2b00      	cmp	r3, #0
 8016286:	dd0e      	ble.n	80162a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016288:	1408      	asrs	r0, r1, #16
 801628a:	d405      	bmi.n	8016298 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801628c:	42b8      	cmp	r0, r7
 801628e:	da03      	bge.n	8016298 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016290:	1410      	asrs	r0, r2, #16
 8016292:	d401      	bmi.n	8016298 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016294:	42b0      	cmp	r0, r6
 8016296:	db07      	blt.n	80162a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016298:	9811      	ldr	r0, [sp, #68]	; 0x44
 801629a:	4401      	add	r1, r0
 801629c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801629e:	3b01      	subs	r3, #1
 80162a0:	4402      	add	r2, r0
 80162a2:	3402      	adds	r4, #2
 80162a4:	e7ee      	b.n	8016284 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80162a6:	d017      	beq.n	80162d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80162a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80162aa:	1e58      	subs	r0, r3, #1
 80162ac:	fb05 1500 	mla	r5, r5, r0, r1
 80162b0:	142d      	asrs	r5, r5, #16
 80162b2:	d409      	bmi.n	80162c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80162b4:	42bd      	cmp	r5, r7
 80162b6:	da07      	bge.n	80162c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80162b8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80162ba:	fb05 2000 	mla	r0, r5, r0, r2
 80162be:	1400      	asrs	r0, r0, #16
 80162c0:	d402      	bmi.n	80162c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80162c2:	42b0      	cmp	r0, r6
 80162c4:	f2c0 80ba 	blt.w	801643c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80162c8:	2600      	movs	r6, #0
 80162ca:	1998      	adds	r0, r3, r6
 80162cc:	2800      	cmp	r0, #0
 80162ce:	dc3e      	bgt.n	801634e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80162d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80162d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80162d8:	f1bb 0f00 	cmp.w	fp, #0
 80162dc:	f340 8117 	ble.w	801650e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80162e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80162e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80162e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80162ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80162ee:	f1bb 0b01 	subs.w	fp, fp, #1
 80162f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80162f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80162fa:	eeb0 6a62 	vmov.f32	s12, s5
 80162fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016302:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016306:	ee77 2a62 	vsub.f32	s5, s14, s5
 801630a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801630e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016312:	eeb0 6a43 	vmov.f32	s12, s6
 8016316:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801631a:	ee12 2a90 	vmov	r2, s5
 801631e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016322:	fb92 f3f3 	sdiv	r3, r2, r3
 8016326:	ee13 2a10 	vmov	r2, s6
 801632a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801632e:	9311      	str	r3, [sp, #68]	; 0x44
 8016330:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016332:	fb92 f3f3 	sdiv	r3, r2, r3
 8016336:	9a03      	ldr	r2, [sp, #12]
 8016338:	9312      	str	r3, [sp, #72]	; 0x48
 801633a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801633e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016340:	eeb0 3a67 	vmov.f32	s6, s15
 8016344:	bf08      	it	eq
 8016346:	4613      	moveq	r3, r2
 8016348:	eef0 2a47 	vmov.f32	s5, s14
 801634c:	e789      	b.n	8016262 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801634e:	140f      	asrs	r7, r1, #16
 8016350:	d424      	bmi.n	801639c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016352:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016356:	42bd      	cmp	r5, r7
 8016358:	dd20      	ble.n	801639c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801635a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801635e:	d41d      	bmi.n	801639c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016360:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8016364:	4560      	cmp	r0, ip
 8016366:	dd19      	ble.n	801639c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016368:	b22d      	sxth	r5, r5
 801636a:	fb0c 7505 	mla	r5, ip, r5, r7
 801636e:	9801      	ldr	r0, [sp, #4]
 8016370:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8016374:	0e07      	lsrs	r7, r0, #24
 8016376:	2fff      	cmp	r7, #255	; 0xff
 8016378:	d116      	bne.n	80163a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801637a:	f06f 0501 	mvn.w	r5, #1
 801637e:	fb05 f706 	mul.w	r7, r5, r6
 8016382:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016386:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801638a:	0945      	lsrs	r5, r0, #5
 801638c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016390:	ea4c 0505 	orr.w	r5, ip, r5
 8016394:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016398:	4305      	orrs	r5, r0
 801639a:	53e5      	strh	r5, [r4, r7]
 801639c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801639e:	4401      	add	r1, r0
 80163a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80163a2:	3e01      	subs	r6, #1
 80163a4:	4402      	add	r2, r0
 80163a6:	e790      	b.n	80162ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80163a8:	b2fd      	uxtb	r5, r7
 80163aa:	2f00      	cmp	r7, #0
 80163ac:	d0f6      	beq.n	801639c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80163ae:	f06f 0701 	mvn.w	r7, #1
 80163b2:	4377      	muls	r7, r6
 80163b4:	fa1f f985 	uxth.w	r9, r5
 80163b8:	f834 e007 	ldrh.w	lr, [r4, r7]
 80163bc:	9702      	str	r7, [sp, #8]
 80163be:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80163c2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80163c6:	43ed      	mvns	r5, r5
 80163c8:	b2ed      	uxtb	r5, r5
 80163ca:	fb17 f709 	smulbb	r7, r7, r9
 80163ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80163d2:	fb0c 7c05 	mla	ip, ip, r5, r7
 80163d6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80163da:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80163de:	b2c0      	uxtb	r0, r0
 80163e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80163e4:	fa5f fe8e 	uxtb.w	lr, lr
 80163e8:	fb10 f009 	smulbb	r0, r0, r9
 80163ec:	fb0e 0005 	mla	r0, lr, r5, r0
 80163f0:	b280      	uxth	r0, r0
 80163f2:	fa1f fc8c 	uxth.w	ip, ip
 80163f6:	fb1a fa09 	smulbb	sl, sl, r9
 80163fa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80163fe:	fb07 a705 	mla	r7, r7, r5, sl
 8016402:	f100 0a01 	add.w	sl, r0, #1
 8016406:	f10c 0501 	add.w	r5, ip, #1
 801640a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801640e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016412:	b2bf      	uxth	r7, r7
 8016414:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016418:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801641c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016420:	f107 0a01 	add.w	sl, r7, #1
 8016424:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016428:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801642c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016430:	9802      	ldr	r0, [sp, #8]
 8016432:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016436:	f824 c000 	strh.w	ip, [r4, r0]
 801643a:	e7af      	b.n	801639c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801643c:	f04f 0e00 	mov.w	lr, #0
 8016440:	eba3 000e 	sub.w	r0, r3, lr
 8016444:	2800      	cmp	r0, #0
 8016446:	f77f af43 	ble.w	80162d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801644a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801644e:	140d      	asrs	r5, r1, #16
 8016450:	1410      	asrs	r0, r2, #16
 8016452:	fb06 5000 	mla	r0, r6, r0, r5
 8016456:	9d01      	ldr	r5, [sp, #4]
 8016458:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801645c:	0e2e      	lsrs	r6, r5, #24
 801645e:	2eff      	cmp	r6, #255	; 0xff
 8016460:	d112      	bne.n	8016488 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016462:	482c      	ldr	r0, [pc, #176]	; (8016514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016464:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016468:	0968      	lsrs	r0, r5, #5
 801646a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801646e:	4330      	orrs	r0, r6
 8016470:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016474:	4328      	orrs	r0, r5
 8016476:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801647a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801647c:	4401      	add	r1, r0
 801647e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016480:	f10e 0e01 	add.w	lr, lr, #1
 8016484:	4402      	add	r2, r0
 8016486:	e7db      	b.n	8016440 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8016488:	b2f0      	uxtb	r0, r6
 801648a:	2e00      	cmp	r6, #0
 801648c:	d0f5      	beq.n	801647a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801648e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016492:	fa1f f980 	uxth.w	r9, r0
 8016496:	ea4f 272c 	mov.w	r7, ip, asr #8
 801649a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801649e:	43c0      	mvns	r0, r0
 80164a0:	b2c0      	uxtb	r0, r0
 80164a2:	fb16 f609 	smulbb	r6, r6, r9
 80164a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80164aa:	fb07 6700 	mla	r7, r7, r0, r6
 80164ae:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80164b2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80164b6:	b2ed      	uxtb	r5, r5
 80164b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80164bc:	fa5f fc8c 	uxtb.w	ip, ip
 80164c0:	fb15 f509 	smulbb	r5, r5, r9
 80164c4:	fb0c 5500 	mla	r5, ip, r0, r5
 80164c8:	b2bf      	uxth	r7, r7
 80164ca:	fb1a fa09 	smulbb	sl, sl, r9
 80164ce:	b2ad      	uxth	r5, r5
 80164d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80164d4:	fb06 a600 	mla	r6, r6, r0, sl
 80164d8:	1c78      	adds	r0, r7, #1
 80164da:	f105 0a01 	add.w	sl, r5, #1
 80164de:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80164e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80164e6:	b2b6      	uxth	r6, r6
 80164e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80164ec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80164f0:	ea4a 0707 	orr.w	r7, sl, r7
 80164f4:	f106 0a01 	add.w	sl, r6, #1
 80164f8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80164fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016500:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016504:	ea47 070a 	orr.w	r7, r7, sl
 8016508:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801650c:	e7b5      	b.n	801647a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801650e:	b005      	add	sp, #20
 8016510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016514:	fffff800 	.word	0xfffff800

08016518 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801651c:	b087      	sub	sp, #28
 801651e:	468b      	mov	fp, r1
 8016520:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016522:	9203      	str	r2, [sp, #12]
 8016524:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016528:	9204      	str	r2, [sp, #16]
 801652a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801652e:	6841      	ldr	r1, [r0, #4]
 8016530:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016534:	fb01 2404 	mla	r4, r1, r4, r2
 8016538:	6802      	ldr	r2, [r0, #0]
 801653a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801653e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016542:	3201      	adds	r2, #1
 8016544:	f022 0201 	bic.w	r2, r2, #1
 8016548:	9200      	str	r2, [sp, #0]
 801654a:	f8d9 2000 	ldr.w	r2, [r9]
 801654e:	9201      	str	r2, [sp, #4]
 8016550:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016554:	f1bb 0f00 	cmp.w	fp, #0
 8016558:	dc03      	bgt.n	8016562 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801655a:	9a03      	ldr	r2, [sp, #12]
 801655c:	2a00      	cmp	r2, #0
 801655e:	f340 8169 	ble.w	8016834 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016562:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016564:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016568:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801656c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016570:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016572:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016576:	2b00      	cmp	r3, #0
 8016578:	dd0e      	ble.n	8016598 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801657a:	1402      	asrs	r2, r0, #16
 801657c:	d405      	bmi.n	801658a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801657e:	42ba      	cmp	r2, r7
 8016580:	da03      	bge.n	801658a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016582:	140a      	asrs	r2, r1, #16
 8016584:	d401      	bmi.n	801658a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016586:	42b2      	cmp	r2, r6
 8016588:	db07      	blt.n	801659a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801658a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801658c:	4410      	add	r0, r2
 801658e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016590:	3b01      	subs	r3, #1
 8016592:	4411      	add	r1, r2
 8016594:	3402      	adds	r4, #2
 8016596:	e7ee      	b.n	8016576 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016598:	d017      	beq.n	80165ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801659a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801659c:	1e5a      	subs	r2, r3, #1
 801659e:	fb05 0502 	mla	r5, r5, r2, r0
 80165a2:	142d      	asrs	r5, r5, #16
 80165a4:	d409      	bmi.n	80165ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80165a6:	42bd      	cmp	r5, r7
 80165a8:	da07      	bge.n	80165ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80165aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80165ac:	fb05 1202 	mla	r2, r5, r2, r1
 80165b0:	1412      	asrs	r2, r2, #16
 80165b2:	d402      	bmi.n	80165ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80165b4:	42b2      	cmp	r2, r6
 80165b6:	f2c0 80c7 	blt.w	8016748 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80165ba:	2700      	movs	r7, #0
 80165bc:	19da      	adds	r2, r3, r7
 80165be:	2a00      	cmp	r2, #0
 80165c0:	dc3e      	bgt.n	8016640 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80165c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80165c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80165ca:	f1bb 0f00 	cmp.w	fp, #0
 80165ce:	f340 8131 	ble.w	8016834 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80165d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80165d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80165da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80165de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80165e0:	f1bb 0b01 	subs.w	fp, fp, #1
 80165e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80165e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80165ec:	eeb0 6a62 	vmov.f32	s12, s5
 80165f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80165f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80165f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80165fc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016600:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016604:	eeb0 6a43 	vmov.f32	s12, s6
 8016608:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801660c:	ee12 2a90 	vmov	r2, s5
 8016610:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016614:	fb92 f3f3 	sdiv	r3, r2, r3
 8016618:	ee13 2a10 	vmov	r2, s6
 801661c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016620:	9313      	str	r3, [sp, #76]	; 0x4c
 8016622:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016624:	fb92 f3f3 	sdiv	r3, r2, r3
 8016628:	9a03      	ldr	r2, [sp, #12]
 801662a:	9314      	str	r3, [sp, #80]	; 0x50
 801662c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016630:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016632:	eeb0 3a67 	vmov.f32	s6, s15
 8016636:	bf08      	it	eq
 8016638:	4613      	moveq	r3, r2
 801663a:	eef0 2a47 	vmov.f32	s5, s14
 801663e:	e789      	b.n	8016554 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016640:	1405      	asrs	r5, r0, #16
 8016642:	d435      	bmi.n	80166b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016644:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016648:	42aa      	cmp	r2, r5
 801664a:	dd31      	ble.n	80166b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801664c:	140e      	asrs	r6, r1, #16
 801664e:	d42f      	bmi.n	80166b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016650:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016654:	42b2      	cmp	r2, r6
 8016656:	dd2b      	ble.n	80166b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016658:	9a00      	ldr	r2, [sp, #0]
 801665a:	fb06 5502 	mla	r5, r6, r2, r5
 801665e:	086a      	lsrs	r2, r5, #1
 8016660:	9e01      	ldr	r6, [sp, #4]
 8016662:	5cb2      	ldrb	r2, [r6, r2]
 8016664:	07ee      	lsls	r6, r5, #31
 8016666:	bf54      	ite	pl
 8016668:	f002 020f 	andpl.w	r2, r2, #15
 801666c:	1112      	asrmi	r2, r2, #4
 801666e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016672:	b2d2      	uxtb	r2, r2
 8016674:	b1e2      	cbz	r2, 80166b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016676:	9d04      	ldr	r5, [sp, #16]
 8016678:	436a      	muls	r2, r5
 801667a:	1c55      	adds	r5, r2, #1
 801667c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016680:	4d6e      	ldr	r5, [pc, #440]	; (801683c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016682:	682d      	ldr	r5, [r5, #0]
 8016684:	1212      	asrs	r2, r2, #8
 8016686:	0a2e      	lsrs	r6, r5, #8
 8016688:	2aff      	cmp	r2, #255	; 0xff
 801668a:	9605      	str	r6, [sp, #20]
 801668c:	d116      	bne.n	80166bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801668e:	f06f 0201 	mvn.w	r2, #1
 8016692:	fb02 fc07 	mul.w	ip, r2, r7
 8016696:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801669a:	096a      	lsrs	r2, r5, #5
 801669c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80166a0:	f026 0607 	bic.w	r6, r6, #7
 80166a4:	4316      	orrs	r6, r2
 80166a6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80166aa:	432e      	orrs	r6, r5
 80166ac:	f824 600c 	strh.w	r6, [r4, ip]
 80166b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80166b2:	4410      	add	r0, r2
 80166b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80166b6:	3f01      	subs	r7, #1
 80166b8:	4411      	add	r1, r2
 80166ba:	e77f      	b.n	80165bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80166bc:	f06f 0601 	mvn.w	r6, #1
 80166c0:	437e      	muls	r6, r7
 80166c2:	fa1f fa82 	uxth.w	sl, r2
 80166c6:	f834 8006 	ldrh.w	r8, [r4, r6]
 80166ca:	9602      	str	r6, [sp, #8]
 80166cc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80166d0:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80166d4:	43d2      	mvns	r2, r2
 80166d6:	b2d2      	uxtb	r2, r2
 80166d8:	fb1c fc0a 	smulbb	ip, ip, sl
 80166dc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80166e0:	fb0e ce02 	mla	lr, lr, r2, ip
 80166e4:	b2ed      	uxtb	r5, r5
 80166e6:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80166ea:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80166ee:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80166f2:	fa5f f888 	uxtb.w	r8, r8
 80166f6:	fb15 f50a 	smulbb	r5, r5, sl
 80166fa:	fb08 5502 	mla	r5, r8, r2, r5
 80166fe:	fa1f fe8e 	uxth.w	lr, lr
 8016702:	fb16 f60a 	smulbb	r6, r6, sl
 8016706:	b2ad      	uxth	r5, r5
 8016708:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801670c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016710:	f10e 0201 	add.w	r2, lr, #1
 8016714:	1c6e      	adds	r6, r5, #1
 8016716:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801671a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801671e:	fa1f fc8c 	uxth.w	ip, ip
 8016722:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016726:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801672a:	ea46 0e0e 	orr.w	lr, r6, lr
 801672e:	f10c 0601 	add.w	r6, ip, #1
 8016732:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016736:	0976      	lsrs	r6, r6, #5
 8016738:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801673c:	9a02      	ldr	r2, [sp, #8]
 801673e:	ea4e 0e06 	orr.w	lr, lr, r6
 8016742:	f824 e002 	strh.w	lr, [r4, r2]
 8016746:	e7b3      	b.n	80166b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016748:	f04f 0800 	mov.w	r8, #0
 801674c:	eba3 0208 	sub.w	r2, r3, r8
 8016750:	2a00      	cmp	r2, #0
 8016752:	f77f af36 	ble.w	80165c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016756:	9e00      	ldr	r6, [sp, #0]
 8016758:	1402      	asrs	r2, r0, #16
 801675a:	140d      	asrs	r5, r1, #16
 801675c:	fb06 2505 	mla	r5, r6, r5, r2
 8016760:	086a      	lsrs	r2, r5, #1
 8016762:	9e01      	ldr	r6, [sp, #4]
 8016764:	5cb2      	ldrb	r2, [r6, r2]
 8016766:	07ed      	lsls	r5, r5, #31
 8016768:	bf54      	ite	pl
 801676a:	f002 020f 	andpl.w	r2, r2, #15
 801676e:	1112      	asrmi	r2, r2, #4
 8016770:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016774:	b2d2      	uxtb	r2, r2
 8016776:	b1c2      	cbz	r2, 80167aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016778:	9d04      	ldr	r5, [sp, #16]
 801677a:	436a      	muls	r2, r5
 801677c:	1c55      	adds	r5, r2, #1
 801677e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016782:	4d2e      	ldr	r5, [pc, #184]	; (801683c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016784:	1212      	asrs	r2, r2, #8
 8016786:	682e      	ldr	r6, [r5, #0]
 8016788:	2aff      	cmp	r2, #255	; 0xff
 801678a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801678e:	d113      	bne.n	80167b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016790:	0972      	lsrs	r2, r6, #5
 8016792:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016796:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801679a:	f025 0507 	bic.w	r5, r5, #7
 801679e:	4315      	orrs	r5, r2
 80167a0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80167a4:	4335      	orrs	r5, r6
 80167a6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80167aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167ac:	4410      	add	r0, r2
 80167ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167b0:	f108 0801 	add.w	r8, r8, #1
 80167b4:	4411      	add	r1, r2
 80167b6:	e7c9      	b.n	801674c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80167b8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80167bc:	fa1f fa82 	uxth.w	sl, r2
 80167c0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80167c4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80167c8:	43d2      	mvns	r2, r2
 80167ca:	b2d2      	uxtb	r2, r2
 80167cc:	fb17 f70a 	smulbb	r7, r7, sl
 80167d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80167d4:	fb0c 7c02 	mla	ip, ip, r2, r7
 80167d8:	b2f6      	uxtb	r6, r6
 80167da:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80167de:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80167e2:	fa5f fe8e 	uxtb.w	lr, lr
 80167e6:	fb16 f60a 	smulbb	r6, r6, sl
 80167ea:	fb0e 6602 	mla	r6, lr, r2, r6
 80167ee:	b2ed      	uxtb	r5, r5
 80167f0:	fa1f fc8c 	uxth.w	ip, ip
 80167f4:	fb15 f50a 	smulbb	r5, r5, sl
 80167f8:	b2b6      	uxth	r6, r6
 80167fa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80167fe:	fb07 5702 	mla	r7, r7, r2, r5
 8016802:	f10c 0201 	add.w	r2, ip, #1
 8016806:	1c75      	adds	r5, r6, #1
 8016808:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801680c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016810:	b2bf      	uxth	r7, r7
 8016812:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016816:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801681a:	ea45 0c0c 	orr.w	ip, r5, ip
 801681e:	1c7d      	adds	r5, r7, #1
 8016820:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016824:	096d      	lsrs	r5, r5, #5
 8016826:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801682a:	ea4c 0c05 	orr.w	ip, ip, r5
 801682e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016832:	e7ba      	b.n	80167aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016834:	b007      	add	sp, #28
 8016836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801683a:	bf00      	nop
 801683c:	20015498 	.word	0x20015498

08016840 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016844:	b087      	sub	sp, #28
 8016846:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016b54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801684a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801684c:	9205      	str	r2, [sp, #20]
 801684e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016852:	9101      	str	r1, [sp, #4]
 8016854:	6841      	ldr	r1, [r0, #4]
 8016856:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801685a:	fb01 2404 	mla	r4, r1, r4, r2
 801685e:	6802      	ldr	r2, [r0, #0]
 8016860:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016864:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016868:	3201      	adds	r2, #1
 801686a:	f022 0201 	bic.w	r2, r2, #1
 801686e:	9202      	str	r2, [sp, #8]
 8016870:	f8db 2000 	ldr.w	r2, [fp]
 8016874:	9203      	str	r2, [sp, #12]
 8016876:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801687a:	9a01      	ldr	r2, [sp, #4]
 801687c:	2a00      	cmp	r2, #0
 801687e:	dc03      	bgt.n	8016888 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016880:	9a05      	ldr	r2, [sp, #20]
 8016882:	2a00      	cmp	r2, #0
 8016884:	f340 8162 	ble.w	8016b4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016888:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801688a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801688e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016892:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016896:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016898:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801689c:	2b00      	cmp	r3, #0
 801689e:	dd0e      	ble.n	80168be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80168a0:	1402      	asrs	r2, r0, #16
 80168a2:	d405      	bmi.n	80168b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80168a4:	42ba      	cmp	r2, r7
 80168a6:	da03      	bge.n	80168b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80168a8:	140a      	asrs	r2, r1, #16
 80168aa:	d401      	bmi.n	80168b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80168ac:	42b2      	cmp	r2, r6
 80168ae:	db07      	blt.n	80168c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80168b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168b2:	4410      	add	r0, r2
 80168b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168b6:	3b01      	subs	r3, #1
 80168b8:	4411      	add	r1, r2
 80168ba:	3402      	adds	r4, #2
 80168bc:	e7ee      	b.n	801689c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80168be:	d017      	beq.n	80168f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80168c0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80168c2:	1e5a      	subs	r2, r3, #1
 80168c4:	fb05 0502 	mla	r5, r5, r2, r0
 80168c8:	142d      	asrs	r5, r5, #16
 80168ca:	d409      	bmi.n	80168e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80168cc:	42bd      	cmp	r5, r7
 80168ce:	da07      	bge.n	80168e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80168d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80168d2:	fb05 1202 	mla	r2, r5, r2, r1
 80168d6:	1412      	asrs	r2, r2, #16
 80168d8:	d402      	bmi.n	80168e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80168da:	42b2      	cmp	r2, r6
 80168dc:	f2c0 80c3 	blt.w	8016a66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80168e0:	2500      	movs	r5, #0
 80168e2:	195a      	adds	r2, r3, r5
 80168e4:	2a00      	cmp	r2, #0
 80168e6:	dc3f      	bgt.n	8016968 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80168e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80168ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80168f0:	9b01      	ldr	r3, [sp, #4]
 80168f2:	2b00      	cmp	r3, #0
 80168f4:	f340 812a 	ble.w	8016b4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80168f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80168fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016900:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016904:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016906:	ee31 1a05 	vadd.f32	s2, s2, s10
 801690a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801690e:	eeb0 6a62 	vmov.f32	s12, s5
 8016912:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016916:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801691a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801691e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016922:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016926:	eeb0 6a43 	vmov.f32	s12, s6
 801692a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801692e:	ee12 2a90 	vmov	r2, s5
 8016932:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016936:	fb92 f3f3 	sdiv	r3, r2, r3
 801693a:	ee13 2a10 	vmov	r2, s6
 801693e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016940:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016942:	fb92 f3f3 	sdiv	r3, r2, r3
 8016946:	9314      	str	r3, [sp, #80]	; 0x50
 8016948:	9b01      	ldr	r3, [sp, #4]
 801694a:	9a05      	ldr	r2, [sp, #20]
 801694c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016950:	3b01      	subs	r3, #1
 8016952:	9301      	str	r3, [sp, #4]
 8016954:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016958:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801695a:	eeb0 3a67 	vmov.f32	s6, s15
 801695e:	bf08      	it	eq
 8016960:	4613      	moveq	r3, r2
 8016962:	eef0 2a47 	vmov.f32	s5, s14
 8016966:	e788      	b.n	801687a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016968:	1406      	asrs	r6, r0, #16
 801696a:	d42c      	bmi.n	80169c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801696c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016970:	42b2      	cmp	r2, r6
 8016972:	dd28      	ble.n	80169c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016974:	140f      	asrs	r7, r1, #16
 8016976:	d426      	bmi.n	80169c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016978:	f8db 200c 	ldr.w	r2, [fp, #12]
 801697c:	42ba      	cmp	r2, r7
 801697e:	dd22      	ble.n	80169c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016980:	9a02      	ldr	r2, [sp, #8]
 8016982:	fb07 6602 	mla	r6, r7, r2, r6
 8016986:	0872      	lsrs	r2, r6, #1
 8016988:	9f03      	ldr	r7, [sp, #12]
 801698a:	5cba      	ldrb	r2, [r7, r2]
 801698c:	07f6      	lsls	r6, r6, #31
 801698e:	bf54      	ite	pl
 8016990:	f002 020f 	andpl.w	r2, r2, #15
 8016994:	1112      	asrmi	r2, r2, #4
 8016996:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801699a:	b2d2      	uxtb	r2, r2
 801699c:	2aff      	cmp	r2, #255	; 0xff
 801699e:	d118      	bne.n	80169d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80169a0:	f8d8 2000 	ldr.w	r2, [r8]
 80169a4:	f06f 0601 	mvn.w	r6, #1
 80169a8:	fb06 f705 	mul.w	r7, r6, r5
 80169ac:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80169b0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80169b4:	0956      	lsrs	r6, r2, #5
 80169b6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80169ba:	ea4c 0606 	orr.w	r6, ip, r6
 80169be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80169c2:	4316      	orrs	r6, r2
 80169c4:	53e6      	strh	r6, [r4, r7]
 80169c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80169c8:	4410      	add	r0, r2
 80169ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80169cc:	3d01      	subs	r5, #1
 80169ce:	4411      	add	r1, r2
 80169d0:	e787      	b.n	80168e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80169d2:	2a00      	cmp	r2, #0
 80169d4:	d0f7      	beq.n	80169c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80169d6:	f06f 0601 	mvn.w	r6, #1
 80169da:	436e      	muls	r6, r5
 80169dc:	f8d8 c000 	ldr.w	ip, [r8]
 80169e0:	f834 e006 	ldrh.w	lr, [r4, r6]
 80169e4:	9604      	str	r6, [sp, #16]
 80169e6:	fa1f f982 	uxth.w	r9, r2
 80169ea:	ea4f 272e 	mov.w	r7, lr, asr #8
 80169ee:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80169f2:	43d2      	mvns	r2, r2
 80169f4:	b2d2      	uxtb	r2, r2
 80169f6:	fb16 f609 	smulbb	r6, r6, r9
 80169fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80169fe:	fb07 6702 	mla	r7, r7, r2, r6
 8016a02:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016a06:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016a0a:	fa5f fc8c 	uxtb.w	ip, ip
 8016a0e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a12:	fa5f fe8e 	uxtb.w	lr, lr
 8016a16:	fb1c fc09 	smulbb	ip, ip, r9
 8016a1a:	fb0e cc02 	mla	ip, lr, r2, ip
 8016a1e:	b2bf      	uxth	r7, r7
 8016a20:	fb1a fa09 	smulbb	sl, sl, r9
 8016a24:	fa1f fc8c 	uxth.w	ip, ip
 8016a28:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a2c:	fb06 a602 	mla	r6, r6, r2, sl
 8016a30:	1c7a      	adds	r2, r7, #1
 8016a32:	f10c 0a01 	add.w	sl, ip, #1
 8016a36:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016a3a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016a3e:	b2b6      	uxth	r6, r6
 8016a40:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016a44:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016a48:	ea4a 0707 	orr.w	r7, sl, r7
 8016a4c:	f106 0a01 	add.w	sl, r6, #1
 8016a50:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016a54:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016a58:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016a5c:	9a04      	ldr	r2, [sp, #16]
 8016a5e:	ea47 070a 	orr.w	r7, r7, sl
 8016a62:	52a7      	strh	r7, [r4, r2]
 8016a64:	e7af      	b.n	80169c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016a66:	f04f 0e00 	mov.w	lr, #0
 8016a6a:	eba3 020e 	sub.w	r2, r3, lr
 8016a6e:	2a00      	cmp	r2, #0
 8016a70:	f77f af3a 	ble.w	80168e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016a74:	9e02      	ldr	r6, [sp, #8]
 8016a76:	1402      	asrs	r2, r0, #16
 8016a78:	140d      	asrs	r5, r1, #16
 8016a7a:	fb06 2505 	mla	r5, r6, r5, r2
 8016a7e:	086a      	lsrs	r2, r5, #1
 8016a80:	9e03      	ldr	r6, [sp, #12]
 8016a82:	5cb2      	ldrb	r2, [r6, r2]
 8016a84:	07ed      	lsls	r5, r5, #31
 8016a86:	bf54      	ite	pl
 8016a88:	f002 020f 	andpl.w	r2, r2, #15
 8016a8c:	1112      	asrmi	r2, r2, #4
 8016a8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016a92:	b2d2      	uxtb	r2, r2
 8016a94:	2aff      	cmp	r2, #255	; 0xff
 8016a96:	d115      	bne.n	8016ac4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016a98:	f8d8 5000 	ldr.w	r5, [r8]
 8016a9c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016aa0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016aa4:	096a      	lsrs	r2, r5, #5
 8016aa6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016aaa:	4332      	orrs	r2, r6
 8016aac:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016ab0:	432a      	orrs	r2, r5
 8016ab2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016ab6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016ab8:	4410      	add	r0, r2
 8016aba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016abc:	f10e 0e01 	add.w	lr, lr, #1
 8016ac0:	4411      	add	r1, r2
 8016ac2:	e7d2      	b.n	8016a6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016ac4:	2a00      	cmp	r2, #0
 8016ac6:	d0f6      	beq.n	8016ab6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016ac8:	f8d8 7000 	ldr.w	r7, [r8]
 8016acc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016ad0:	fa1f f982 	uxth.w	r9, r2
 8016ad4:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016ad8:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016adc:	43d2      	mvns	r2, r2
 8016ade:	b2d2      	uxtb	r2, r2
 8016ae0:	fb15 f509 	smulbb	r5, r5, r9
 8016ae4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016ae8:	fb06 5602 	mla	r6, r6, r2, r5
 8016aec:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016af0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016af4:	b2ff      	uxtb	r7, r7
 8016af6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016afa:	fa5f fc8c 	uxtb.w	ip, ip
 8016afe:	fb17 f709 	smulbb	r7, r7, r9
 8016b02:	fb0c 7702 	mla	r7, ip, r2, r7
 8016b06:	b2b6      	uxth	r6, r6
 8016b08:	fb1a fa09 	smulbb	sl, sl, r9
 8016b0c:	b2bf      	uxth	r7, r7
 8016b0e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016b12:	fb05 a502 	mla	r5, r5, r2, sl
 8016b16:	1c72      	adds	r2, r6, #1
 8016b18:	f107 0a01 	add.w	sl, r7, #1
 8016b1c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016b20:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016b24:	b2ad      	uxth	r5, r5
 8016b26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016b2a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016b2e:	ea4a 0606 	orr.w	r6, sl, r6
 8016b32:	f105 0a01 	add.w	sl, r5, #1
 8016b36:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016b3a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016b3e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016b42:	ea46 060a 	orr.w	r6, r6, sl
 8016b46:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016b4a:	e7b4      	b.n	8016ab6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016b4c:	b007      	add	sp, #28
 8016b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b52:	bf00      	nop
 8016b54:	20015498 	.word	0x20015498

08016b58 <_ZN8touchgfx8LCD16bppD1Ev>:
 8016b58:	4770      	bx	lr

08016b5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016b5a:	4770      	bx	lr

08016b5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016b5c:	4770      	bx	lr

08016b5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016b5e:	4770      	bx	lr

08016b60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016b60:	4770      	bx	lr

08016b62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016b62:	4770      	bx	lr

08016b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016b64:	4770      	bx	lr

08016b66 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016b66:	4770      	bx	lr

08016b68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016b68:	4770      	bx	lr

08016b6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016b6a:	4770      	bx	lr

08016b6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016b6c:	4770      	bx	lr

08016b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016b6e:	4770      	bx	lr

08016b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016b70:	4770      	bx	lr

08016b72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016b72:	4770      	bx	lr

08016b74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016b74:	4770      	bx	lr

08016b76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016b76:	4770      	bx	lr

08016b78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016b78:	4770      	bx	lr

08016b7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016b7a:	4770      	bx	lr

08016b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016b7c:	4770      	bx	lr

08016b7e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016b7e:	4770      	bx	lr

08016b80 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016b80:	4770      	bx	lr

08016b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016b82:	4770      	bx	lr

08016b84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016b84:	4770      	bx	lr

08016b86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016b86:	4770      	bx	lr

08016b88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016b88:	4770      	bx	lr

08016b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016b8a:	4770      	bx	lr

08016b8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016b8c:	4770      	bx	lr

08016b8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016b8e:	4770      	bx	lr

08016b90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016b90:	4770      	bx	lr

08016b92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016b92:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016b96:	b088      	sub	sp, #32
 8016b98:	ac08      	add	r4, sp, #32
 8016b9a:	4606      	mov	r6, r0
 8016b9c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016ba0:	4620      	mov	r0, r4
 8016ba2:	4688      	mov	r8, r1
 8016ba4:	4691      	mov	r9, r2
 8016ba6:	f7fd fc65 	bl	8014474 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016baa:	6833      	ldr	r3, [r6, #0]
 8016bac:	4605      	mov	r5, r0
 8016bae:	4620      	mov	r0, r4
 8016bb0:	699f      	ldr	r7, [r3, #24]
 8016bb2:	f7fd fb73 	bl	801429c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016bb6:	4682      	mov	sl, r0
 8016bb8:	4620      	mov	r0, r4
 8016bba:	f7fd fba3 	bl	8014304 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016bbe:	9500      	str	r5, [sp, #0]
 8016bc0:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016bc4:	464b      	mov	r3, r9
 8016bc6:	a806      	add	r0, sp, #24
 8016bc8:	4642      	mov	r2, r8
 8016bca:	4631      	mov	r1, r6
 8016bcc:	47b8      	blx	r7
 8016bce:	4628      	mov	r0, r5
 8016bd0:	b008      	add	sp, #32
 8016bd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016bd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016bd8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016bdc:	2300      	movs	r3, #0
 8016bde:	9300      	str	r3, [sp, #0]
 8016be0:	4b3d      	ldr	r3, [pc, #244]	; (8016cd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016be2:	781b      	ldrb	r3, [r3, #0]
 8016be4:	2b00      	cmp	r3, #0
 8016be6:	d137      	bne.n	8016c58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016be8:	4a3c      	ldr	r2, [pc, #240]	; (8016cdc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016bea:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016bee:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016bf2:	2b00      	cmp	r3, #0
 8016bf4:	d132      	bne.n	8016c5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016bf6:	4b3a      	ldr	r3, [pc, #232]	; (8016ce0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016bf8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016bfc:	6808      	ldr	r0, [r1, #0]
 8016bfe:	6849      	ldr	r1, [r1, #4]
 8016c00:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016c04:	ac02      	add	r4, sp, #8
 8016c06:	ab02      	add	r3, sp, #8
 8016c08:	c303      	stmia	r3!, {r0, r1}
 8016c0a:	4669      	mov	r1, sp
 8016c0c:	4620      	mov	r0, r4
 8016c0e:	f7f9 ff7f 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c12:	4668      	mov	r0, sp
 8016c14:	f7f9 ff54 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c18:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016c1c:	f8bd 2000 	ldrh.w	r2, [sp]
 8016c20:	4d30      	ldr	r5, [pc, #192]	; (8016ce4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016c22:	4413      	add	r3, r2
 8016c24:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016c28:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016c2c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016c30:	6828      	ldr	r0, [r5, #0]
 8016c32:	4413      	add	r3, r2
 8016c34:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016c38:	6803      	ldr	r3, [r0, #0]
 8016c3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016c3c:	4798      	blx	r3
 8016c3e:	f010 0f01 	tst.w	r0, #1
 8016c42:	462f      	mov	r7, r5
 8016c44:	d00c      	beq.n	8016c60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016c46:	6828      	ldr	r0, [r5, #0]
 8016c48:	6803      	ldr	r3, [r0, #0]
 8016c4a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016c4e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016c50:	4798      	blx	r3
 8016c52:	b004      	add	sp, #16
 8016c54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016c58:	4a21      	ldr	r2, [pc, #132]	; (8016ce0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016c5a:	e7c6      	b.n	8016bea <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016c5c:	4b1f      	ldr	r3, [pc, #124]	; (8016cdc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016c5e:	e7cb      	b.n	8016bf8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016c60:	6838      	ldr	r0, [r7, #0]
 8016c62:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016c66:	6803      	ldr	r3, [r0, #0]
 8016c68:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016c6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016c6e:	4798      	blx	r3
 8016c70:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016c74:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016c78:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016c7c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016c80:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016c84:	6838      	ldr	r0, [r7, #0]
 8016c86:	6803      	ldr	r3, [r0, #0]
 8016c88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016c8a:	4798      	blx	r3
 8016c8c:	4a13      	ldr	r2, [pc, #76]	; (8016cdc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016c8e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016c92:	8813      	ldrh	r3, [r2, #0]
 8016c94:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016c98:	fb03 1404 	mla	r4, r3, r4, r1
 8016c9c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016ca0:	435d      	muls	r5, r3
 8016ca2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016ca6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016caa:	4691      	mov	r9, r2
 8016cac:	6838      	ldr	r0, [r7, #0]
 8016cae:	42ac      	cmp	r4, r5
 8016cb0:	6803      	ldr	r3, [r0, #0]
 8016cb2:	d20e      	bcs.n	8016cd2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016cb4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016cb8:	4632      	mov	r2, r6
 8016cba:	4643      	mov	r3, r8
 8016cbc:	4621      	mov	r1, r4
 8016cbe:	47d0      	blx	sl
 8016cc0:	f8b9 3000 	ldrh.w	r3, [r9]
 8016cc4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016cc8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016ccc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016cd0:	e7ec      	b.n	8016cac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016cd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016cd4:	4798      	blx	r3
 8016cd6:	e7bc      	b.n	8016c52 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016cd8:	20015480 	.word	0x20015480
 8016cdc:	20015482 	.word	0x20015482
 8016ce0:	20015484 	.word	0x20015484
 8016ce4:	20015488 	.word	0x20015488

08016ce8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cec:	b08b      	sub	sp, #44	; 0x2c
 8016cee:	460f      	mov	r7, r1
 8016cf0:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016cf4:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8016cf8:	4616      	mov	r6, r2
 8016cfa:	f1bb 0f00 	cmp.w	fp, #0
 8016cfe:	d049      	beq.n	8016d94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016d00:	6810      	ldr	r0, [r2, #0]
 8016d02:	6851      	ldr	r1, [r2, #4]
 8016d04:	ad06      	add	r5, sp, #24
 8016d06:	c503      	stmia	r5!, {r0, r1}
 8016d08:	6818      	ldr	r0, [r3, #0]
 8016d0a:	6859      	ldr	r1, [r3, #4]
 8016d0c:	ad08      	add	r5, sp, #32
 8016d0e:	c503      	stmia	r5!, {r0, r1}
 8016d10:	a806      	add	r0, sp, #24
 8016d12:	f7f9 fed5 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d16:	4631      	mov	r1, r6
 8016d18:	a808      	add	r0, sp, #32
 8016d1a:	f7f9 fef9 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016d1e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016d22:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016d26:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016d2a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016d2e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016d32:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016d36:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8016d3a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016d3e:	4f5f      	ldr	r7, [pc, #380]	; (8016ebc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016d40:	440a      	add	r2, r1
 8016d42:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016d46:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016d4a:	6838      	ldr	r0, [r7, #0]
 8016d4c:	4413      	add	r3, r2
 8016d4e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016d52:	6803      	ldr	r3, [r0, #0]
 8016d54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016d56:	4798      	blx	r3
 8016d58:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016d5c:	46b9      	mov	r9, r7
 8016d5e:	d01c      	beq.n	8016d9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8016d60:	f010 0f04 	tst.w	r0, #4
 8016d64:	d01d      	beq.n	8016da2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016d66:	f8d9 0000 	ldr.w	r0, [r9]
 8016d6a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016d6e:	6801      	ldr	r1, [r0, #0]
 8016d70:	f8cd b00c 	str.w	fp, [sp, #12]
 8016d74:	2700      	movs	r7, #0
 8016d76:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016d7a:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016d7e:	9402      	str	r4, [sp, #8]
 8016d80:	b2ad      	uxth	r5, r5
 8016d82:	fa1f f488 	uxth.w	r4, r8
 8016d86:	9501      	str	r5, [sp, #4]
 8016d88:	9400      	str	r4, [sp, #0]
 8016d8a:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8016d8c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016d90:	4631      	mov	r1, r6
 8016d92:	47a0      	blx	r4
 8016d94:	b00b      	add	sp, #44	; 0x2c
 8016d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d9a:	b914      	cbnz	r4, 8016da2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016d9c:	f010 0f01 	tst.w	r0, #1
 8016da0:	e7e0      	b.n	8016d64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8016da2:	f8d9 0000 	ldr.w	r0, [r9]
 8016da6:	6803      	ldr	r3, [r0, #0]
 8016da8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016daa:	4798      	blx	r3
 8016dac:	4b44      	ldr	r3, [pc, #272]	; (8016ec0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8016dae:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8016db2:	881a      	ldrh	r2, [r3, #0]
 8016db4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016db8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016dbc:	fb02 1404 	mla	r4, r2, r4, r1
 8016dc0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016dc4:	469a      	mov	sl, r3
 8016dc6:	fb05 f502 	mul.w	r5, r5, r2
 8016dca:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8016dce:	d059      	beq.n	8016e84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016dd0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8016dd4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016dd8:	fa1f f28b 	uxth.w	r2, fp
 8016ddc:	fa1f f989 	uxth.w	r9, r9
 8016de0:	469e      	mov	lr, r3
 8016de2:	42ac      	cmp	r4, r5
 8016de4:	d264      	bcs.n	8016eb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016de6:	eb04 0a07 	add.w	sl, r4, r7
 8016dea:	4554      	cmp	r4, sl
 8016dec:	d23d      	bcs.n	8016e6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8016dee:	8821      	ldrh	r1, [r4, #0]
 8016df0:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016df4:	1208      	asrs	r0, r1, #8
 8016df6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016dfa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016dfe:	fb10 f009 	smulbb	r0, r0, r9
 8016e02:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8016e06:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016e0a:	00c9      	lsls	r1, r1, #3
 8016e0c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8016e10:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016e14:	10d8      	asrs	r0, r3, #3
 8016e16:	b2c9      	uxtb	r1, r1
 8016e18:	00db      	lsls	r3, r3, #3
 8016e1a:	fa1f fc8c 	uxth.w	ip, ip
 8016e1e:	fb1b fb09 	smulbb	fp, fp, r9
 8016e22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016e26:	b2db      	uxtb	r3, r3
 8016e28:	fb11 f109 	smulbb	r1, r1, r9
 8016e2c:	fb00 b002 	mla	r0, r0, r2, fp
 8016e30:	fb03 1302 	mla	r3, r3, r2, r1
 8016e34:	f10c 0b01 	add.w	fp, ip, #1
 8016e38:	b29b      	uxth	r3, r3
 8016e3a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8016e3e:	b280      	uxth	r0, r0
 8016e40:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8016e44:	f103 0c01 	add.w	ip, r3, #1
 8016e48:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8016e4c:	1c43      	adds	r3, r0, #1
 8016e4e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016e52:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016e56:	0940      	lsrs	r0, r0, #5
 8016e58:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016e5c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016e60:	ea4c 0c00 	orr.w	ip, ip, r0
 8016e64:	f824 cb02 	strh.w	ip, [r4], #2
 8016e68:	e7bf      	b.n	8016dea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8016e6a:	f8be 3000 	ldrh.w	r3, [lr]
 8016e6e:	eba3 0308 	sub.w	r3, r3, r8
 8016e72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016e76:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016e7a:	eba3 0308 	sub.w	r3, r3, r8
 8016e7e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016e82:	e7ae      	b.n	8016de2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8016e84:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016e88:	f8d9 0000 	ldr.w	r0, [r9]
 8016e8c:	42ac      	cmp	r4, r5
 8016e8e:	6803      	ldr	r3, [r0, #0]
 8016e90:	d20e      	bcs.n	8016eb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016e92:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8016e96:	4632      	mov	r2, r6
 8016e98:	463b      	mov	r3, r7
 8016e9a:	4621      	mov	r1, r4
 8016e9c:	47c0      	blx	r8
 8016e9e:	f8ba 3000 	ldrh.w	r3, [sl]
 8016ea2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016ea6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016eaa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016eae:	e7eb      	b.n	8016e88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8016eb0:	4b02      	ldr	r3, [pc, #8]	; (8016ebc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016eb2:	6818      	ldr	r0, [r3, #0]
 8016eb4:	6803      	ldr	r3, [r0, #0]
 8016eb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016eb8:	4798      	blx	r3
 8016eba:	e76b      	b.n	8016d94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016ebc:	20015488 	.word	0x20015488
 8016ec0:	20015482 	.word	0x20015482

08016ec4 <_ZN8touchgfx8LCD16bppD0Ev>:
 8016ec4:	b510      	push	{r4, lr}
 8016ec6:	2178      	movs	r1, #120	; 0x78
 8016ec8:	4604      	mov	r4, r0
 8016eca:	f009 fad3 	bl	8020474 <_ZdlPvj>
 8016ece:	4620      	mov	r0, r4
 8016ed0:	bd10      	pop	{r4, pc}

08016ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016ed2:	b510      	push	{r4, lr}
 8016ed4:	2104      	movs	r1, #4
 8016ed6:	4604      	mov	r4, r0
 8016ed8:	f009 facc 	bl	8020474 <_ZdlPvj>
 8016edc:	4620      	mov	r0, r4
 8016ede:	bd10      	pop	{r4, pc}

08016ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016ee0:	b510      	push	{r4, lr}
 8016ee2:	2104      	movs	r1, #4
 8016ee4:	4604      	mov	r4, r0
 8016ee6:	f009 fac5 	bl	8020474 <_ZdlPvj>
 8016eea:	4620      	mov	r0, r4
 8016eec:	bd10      	pop	{r4, pc}

08016eee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016eee:	b510      	push	{r4, lr}
 8016ef0:	2104      	movs	r1, #4
 8016ef2:	4604      	mov	r4, r0
 8016ef4:	f009 fabe 	bl	8020474 <_ZdlPvj>
 8016ef8:	4620      	mov	r0, r4
 8016efa:	bd10      	pop	{r4, pc}

08016efc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016efc:	b510      	push	{r4, lr}
 8016efe:	2104      	movs	r1, #4
 8016f00:	4604      	mov	r4, r0
 8016f02:	f009 fab7 	bl	8020474 <_ZdlPvj>
 8016f06:	4620      	mov	r0, r4
 8016f08:	bd10      	pop	{r4, pc}

08016f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016f0a:	b510      	push	{r4, lr}
 8016f0c:	2104      	movs	r1, #4
 8016f0e:	4604      	mov	r4, r0
 8016f10:	f009 fab0 	bl	8020474 <_ZdlPvj>
 8016f14:	4620      	mov	r0, r4
 8016f16:	bd10      	pop	{r4, pc}

08016f18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016f18:	b510      	push	{r4, lr}
 8016f1a:	2104      	movs	r1, #4
 8016f1c:	4604      	mov	r4, r0
 8016f1e:	f009 faa9 	bl	8020474 <_ZdlPvj>
 8016f22:	4620      	mov	r0, r4
 8016f24:	bd10      	pop	{r4, pc}

08016f26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016f26:	b510      	push	{r4, lr}
 8016f28:	2104      	movs	r1, #4
 8016f2a:	4604      	mov	r4, r0
 8016f2c:	f009 faa2 	bl	8020474 <_ZdlPvj>
 8016f30:	4620      	mov	r0, r4
 8016f32:	bd10      	pop	{r4, pc}

08016f34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016f34:	b510      	push	{r4, lr}
 8016f36:	2104      	movs	r1, #4
 8016f38:	4604      	mov	r4, r0
 8016f3a:	f009 fa9b 	bl	8020474 <_ZdlPvj>
 8016f3e:	4620      	mov	r0, r4
 8016f40:	bd10      	pop	{r4, pc}

08016f42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016f42:	b510      	push	{r4, lr}
 8016f44:	2104      	movs	r1, #4
 8016f46:	4604      	mov	r4, r0
 8016f48:	f009 fa94 	bl	8020474 <_ZdlPvj>
 8016f4c:	4620      	mov	r0, r4
 8016f4e:	bd10      	pop	{r4, pc}

08016f50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016f50:	b510      	push	{r4, lr}
 8016f52:	2104      	movs	r1, #4
 8016f54:	4604      	mov	r4, r0
 8016f56:	f009 fa8d 	bl	8020474 <_ZdlPvj>
 8016f5a:	4620      	mov	r0, r4
 8016f5c:	bd10      	pop	{r4, pc}

08016f5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016f5e:	b510      	push	{r4, lr}
 8016f60:	2104      	movs	r1, #4
 8016f62:	4604      	mov	r4, r0
 8016f64:	f009 fa86 	bl	8020474 <_ZdlPvj>
 8016f68:	4620      	mov	r0, r4
 8016f6a:	bd10      	pop	{r4, pc}

08016f6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016f6c:	b510      	push	{r4, lr}
 8016f6e:	2104      	movs	r1, #4
 8016f70:	4604      	mov	r4, r0
 8016f72:	f009 fa7f 	bl	8020474 <_ZdlPvj>
 8016f76:	4620      	mov	r0, r4
 8016f78:	bd10      	pop	{r4, pc}

08016f7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016f7a:	b510      	push	{r4, lr}
 8016f7c:	2104      	movs	r1, #4
 8016f7e:	4604      	mov	r4, r0
 8016f80:	f009 fa78 	bl	8020474 <_ZdlPvj>
 8016f84:	4620      	mov	r0, r4
 8016f86:	bd10      	pop	{r4, pc}

08016f88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016f88:	b510      	push	{r4, lr}
 8016f8a:	2104      	movs	r1, #4
 8016f8c:	4604      	mov	r4, r0
 8016f8e:	f009 fa71 	bl	8020474 <_ZdlPvj>
 8016f92:	4620      	mov	r0, r4
 8016f94:	bd10      	pop	{r4, pc}

08016f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016f96:	b510      	push	{r4, lr}
 8016f98:	2104      	movs	r1, #4
 8016f9a:	4604      	mov	r4, r0
 8016f9c:	f009 fa6a 	bl	8020474 <_ZdlPvj>
 8016fa0:	4620      	mov	r0, r4
 8016fa2:	bd10      	pop	{r4, pc}

08016fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016fa4:	b510      	push	{r4, lr}
 8016fa6:	2104      	movs	r1, #4
 8016fa8:	4604      	mov	r4, r0
 8016faa:	f009 fa63 	bl	8020474 <_ZdlPvj>
 8016fae:	4620      	mov	r0, r4
 8016fb0:	bd10      	pop	{r4, pc}

08016fb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016fb2:	b510      	push	{r4, lr}
 8016fb4:	2104      	movs	r1, #4
 8016fb6:	4604      	mov	r4, r0
 8016fb8:	f009 fa5c 	bl	8020474 <_ZdlPvj>
 8016fbc:	4620      	mov	r0, r4
 8016fbe:	bd10      	pop	{r4, pc}

08016fc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016fc0:	b510      	push	{r4, lr}
 8016fc2:	2104      	movs	r1, #4
 8016fc4:	4604      	mov	r4, r0
 8016fc6:	f009 fa55 	bl	8020474 <_ZdlPvj>
 8016fca:	4620      	mov	r0, r4
 8016fcc:	bd10      	pop	{r4, pc}

08016fce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016fce:	b510      	push	{r4, lr}
 8016fd0:	2104      	movs	r1, #4
 8016fd2:	4604      	mov	r4, r0
 8016fd4:	f009 fa4e 	bl	8020474 <_ZdlPvj>
 8016fd8:	4620      	mov	r0, r4
 8016fda:	bd10      	pop	{r4, pc}

08016fdc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016fdc:	b510      	push	{r4, lr}
 8016fde:	2104      	movs	r1, #4
 8016fe0:	4604      	mov	r4, r0
 8016fe2:	f009 fa47 	bl	8020474 <_ZdlPvj>
 8016fe6:	4620      	mov	r0, r4
 8016fe8:	bd10      	pop	{r4, pc}

08016fea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016fea:	b510      	push	{r4, lr}
 8016fec:	2104      	movs	r1, #4
 8016fee:	4604      	mov	r4, r0
 8016ff0:	f009 fa40 	bl	8020474 <_ZdlPvj>
 8016ff4:	4620      	mov	r0, r4
 8016ff6:	bd10      	pop	{r4, pc}

08016ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016ff8:	b510      	push	{r4, lr}
 8016ffa:	2104      	movs	r1, #4
 8016ffc:	4604      	mov	r4, r0
 8016ffe:	f009 fa39 	bl	8020474 <_ZdlPvj>
 8017002:	4620      	mov	r0, r4
 8017004:	bd10      	pop	{r4, pc}

08017006 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017006:	b510      	push	{r4, lr}
 8017008:	2104      	movs	r1, #4
 801700a:	4604      	mov	r4, r0
 801700c:	f009 fa32 	bl	8020474 <_ZdlPvj>
 8017010:	4620      	mov	r0, r4
 8017012:	bd10      	pop	{r4, pc}

08017014 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017014:	b510      	push	{r4, lr}
 8017016:	2104      	movs	r1, #4
 8017018:	4604      	mov	r4, r0
 801701a:	f009 fa2b 	bl	8020474 <_ZdlPvj>
 801701e:	4620      	mov	r0, r4
 8017020:	bd10      	pop	{r4, pc}

08017022 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017022:	b510      	push	{r4, lr}
 8017024:	2104      	movs	r1, #4
 8017026:	4604      	mov	r4, r0
 8017028:	f009 fa24 	bl	8020474 <_ZdlPvj>
 801702c:	4620      	mov	r0, r4
 801702e:	bd10      	pop	{r4, pc}

08017030 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017030:	b510      	push	{r4, lr}
 8017032:	2104      	movs	r1, #4
 8017034:	4604      	mov	r4, r0
 8017036:	f009 fa1d 	bl	8020474 <_ZdlPvj>
 801703a:	4620      	mov	r0, r4
 801703c:	bd10      	pop	{r4, pc}

0801703e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801703e:	b510      	push	{r4, lr}
 8017040:	2104      	movs	r1, #4
 8017042:	4604      	mov	r4, r0
 8017044:	f009 fa16 	bl	8020474 <_ZdlPvj>
 8017048:	4620      	mov	r0, r4
 801704a:	bd10      	pop	{r4, pc}

0801704c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801704c:	b510      	push	{r4, lr}
 801704e:	2104      	movs	r1, #4
 8017050:	4604      	mov	r4, r0
 8017052:	f009 fa0f 	bl	8020474 <_ZdlPvj>
 8017056:	4620      	mov	r0, r4
 8017058:	bd10      	pop	{r4, pc}
	...

0801705c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801705c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017060:	b091      	sub	sp, #68	; 0x44
 8017062:	469b      	mov	fp, r3
 8017064:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8017068:	4616      	mov	r6, r2
 801706a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801706e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017072:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8017076:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801707a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801707e:	4604      	mov	r4, r0
 8017080:	460d      	mov	r5, r1
 8017082:	4640      	mov	r0, r8
 8017084:	4659      	mov	r1, fp
 8017086:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801708a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801708e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8017092:	f7f3 fd33 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 8017096:	4631      	mov	r1, r6
 8017098:	4640      	mov	r0, r8
 801709a:	f7f3 fd2f 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 801709e:	4b74      	ldr	r3, [pc, #464]	; (8017270 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80170a0:	8818      	ldrh	r0, [r3, #0]
 80170a2:	4b74      	ldr	r3, [pc, #464]	; (8017274 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80170a4:	8819      	ldrh	r1, [r3, #0]
 80170a6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80170aa:	2b00      	cmp	r3, #0
 80170ac:	b202      	sxth	r2, r0
 80170ae:	b20e      	sxth	r6, r1
 80170b0:	da07      	bge.n	80170c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80170b2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80170b6:	4463      	add	r3, ip
 80170b8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80170bc:	2300      	movs	r3, #0
 80170be:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80170c2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80170c6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80170ca:	1ad2      	subs	r2, r2, r3
 80170cc:	4594      	cmp	ip, r2
 80170ce:	bfc4      	itt	gt
 80170d0:	1ac2      	subgt	r2, r0, r3
 80170d2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80170d6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80170da:	2a00      	cmp	r2, #0
 80170dc:	da07      	bge.n	80170ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80170de:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 80170e2:	4462      	add	r2, ip
 80170e4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80170e8:	2200      	movs	r2, #0
 80170ea:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80170ee:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80170f2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80170f6:	eba6 060a 	sub.w	r6, r6, sl
 80170fa:	42b2      	cmp	r2, r6
 80170fc:	bfc4      	itt	gt
 80170fe:	eba1 020a 	subgt.w	r2, r1, sl
 8017102:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8017106:	4a5c      	ldr	r2, [pc, #368]	; (8017278 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017108:	7812      	ldrb	r2, [r2, #0]
 801710a:	b9a2      	cbnz	r2, 8017136 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801710c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017110:	4286      	cmp	r6, r0
 8017112:	4640      	mov	r0, r8
 8017114:	9303      	str	r3, [sp, #12]
 8017116:	bf14      	ite	ne
 8017118:	2600      	movne	r6, #0
 801711a:	2601      	moveq	r6, #1
 801711c:	f7f3 fd31 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017120:	9b03      	ldr	r3, [sp, #12]
 8017122:	b160      	cbz	r0, 801713e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017124:	2300      	movs	r3, #0
 8017126:	8023      	strh	r3, [r4, #0]
 8017128:	8063      	strh	r3, [r4, #2]
 801712a:	80a3      	strh	r3, [r4, #4]
 801712c:	4620      	mov	r0, r4
 801712e:	80e3      	strh	r3, [r4, #6]
 8017130:	b011      	add	sp, #68	; 0x44
 8017132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017136:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801713a:	428e      	cmp	r6, r1
 801713c:	e7e9      	b.n	8017112 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801713e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017142:	9205      	str	r2, [sp, #20]
 8017144:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8017148:	9206      	str	r2, [sp, #24]
 801714a:	f8bb 2000 	ldrh.w	r2, [fp]
 801714e:	900e      	str	r0, [sp, #56]	; 0x38
 8017150:	1a9b      	subs	r3, r3, r2
 8017152:	b21b      	sxth	r3, r3
 8017154:	9303      	str	r3, [sp, #12]
 8017156:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801715a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801715e:	ebaa 0a03 	sub.w	sl, sl, r3
 8017162:	fa0f f38a 	sxth.w	r3, sl
 8017166:	9304      	str	r3, [sp, #16]
 8017168:	9b03      	ldr	r3, [sp, #12]
 801716a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801716e:	9b04      	ldr	r3, [sp, #16]
 8017170:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017174:	9b05      	ldr	r3, [sp, #20]
 8017176:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801717a:	a90e      	add	r1, sp, #56	; 0x38
 801717c:	9b06      	ldr	r3, [sp, #24]
 801717e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8017182:	a80c      	add	r0, sp, #48	; 0x30
 8017184:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8017188:	f7f9 fcc2 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801718c:	4640      	mov	r0, r8
 801718e:	f7f9 fc97 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017192:	a80e      	add	r0, sp, #56	; 0x38
 8017194:	f7f9 fc94 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017198:	4b38      	ldr	r3, [pc, #224]	; (801727c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801719a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801719e:	881b      	ldrh	r3, [r3, #0]
 80171a0:	9307      	str	r3, [sp, #28]
 80171a2:	682b      	ldr	r3, [r5, #0]
 80171a4:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8017280 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80171a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80171aa:	4628      	mov	r0, r5
 80171ac:	4798      	blx	r3
 80171ae:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80171b2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80171b6:	4681      	mov	r9, r0
 80171b8:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80171bc:	f8db 0000 	ldr.w	r0, [fp]
 80171c0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80171c2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80171c6:	6803      	ldr	r3, [r0, #0]
 80171c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80171ca:	4798      	blx	r3
 80171cc:	4607      	mov	r7, r0
 80171ce:	f8db 0000 	ldr.w	r0, [fp]
 80171d2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80171d6:	6803      	ldr	r3, [r0, #0]
 80171d8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80171dc:	9109      	str	r1, [sp, #36]	; 0x24
 80171de:	9208      	str	r2, [sp, #32]
 80171e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80171e2:	4798      	blx	r3
 80171e4:	f010 0f01 	tst.w	r0, #1
 80171e8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80171ec:	d012      	beq.n	8017214 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80171ee:	f8db 0000 	ldr.w	r0, [fp]
 80171f2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80171f6:	6803      	ldr	r3, [r0, #0]
 80171f8:	9200      	str	r2, [sp, #0]
 80171fa:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80171fc:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017200:	462b      	mov	r3, r5
 8017202:	47b0      	blx	r6
 8017204:	9b03      	ldr	r3, [sp, #12]
 8017206:	8023      	strh	r3, [r4, #0]
 8017208:	9b04      	ldr	r3, [sp, #16]
 801720a:	8063      	strh	r3, [r4, #2]
 801720c:	9b05      	ldr	r3, [sp, #20]
 801720e:	80a3      	strh	r3, [r4, #4]
 8017210:	9b06      	ldr	r3, [sp, #24]
 8017212:	e78b      	b.n	801712c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017214:	fb09 f202 	mul.w	r2, r9, r2
 8017218:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801721c:	440f      	add	r7, r1
 801721e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017222:	b166      	cbz	r6, 801723e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017224:	9a07      	ldr	r2, [sp, #28]
 8017226:	4592      	cmp	sl, r2
 8017228:	d109      	bne.n	801723e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801722a:	f8db 0000 	ldr.w	r0, [fp]
 801722e:	6802      	ldr	r2, [r0, #0]
 8017230:	fb09 f303 	mul.w	r3, r9, r3
 8017234:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8017236:	4629      	mov	r1, r5
 8017238:	463a      	mov	r2, r7
 801723a:	47b0      	blx	r6
 801723c:	e7e2      	b.n	8017204 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801723e:	fb0a f303 	mul.w	r3, sl, r3
 8017242:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8017280 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017246:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801724a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801724e:	4545      	cmp	r5, r8
 8017250:	d2d8      	bcs.n	8017204 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017252:	f8db 0000 	ldr.w	r0, [fp]
 8017256:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801725a:	6802      	ldr	r2, [r0, #0]
 801725c:	4629      	mov	r1, r5
 801725e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017262:	005b      	lsls	r3, r3, #1
 8017264:	463a      	mov	r2, r7
 8017266:	47d0      	blx	sl
 8017268:	444f      	add	r7, r9
 801726a:	4435      	add	r5, r6
 801726c:	e7ef      	b.n	801724e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801726e:	bf00      	nop
 8017270:	2001547c 	.word	0x2001547c
 8017274:	2001547e 	.word	0x2001547e
 8017278:	20015480 	.word	0x20015480
 801727c:	20015482 	.word	0x20015482
 8017280:	20015488 	.word	0x20015488

08017284 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017284:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017286:	4606      	mov	r6, r0
 8017288:	b087      	sub	sp, #28
 801728a:	460c      	mov	r4, r1
 801728c:	4617      	mov	r7, r2
 801728e:	461d      	mov	r5, r3
 8017290:	b333      	cbz	r3, 80172e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017292:	4608      	mov	r0, r1
 8017294:	f7f3 fc75 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017298:	bb10      	cbnz	r0, 80172e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801729a:	6820      	ldr	r0, [r4, #0]
 801729c:	6861      	ldr	r1, [r4, #4]
 801729e:	4c1c      	ldr	r4, [pc, #112]	; (8017310 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80172a0:	ab04      	add	r3, sp, #16
 80172a2:	c303      	stmia	r3!, {r0, r1}
 80172a4:	a804      	add	r0, sp, #16
 80172a6:	f7f9 fc0b 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80172aa:	6820      	ldr	r0, [r4, #0]
 80172ac:	6803      	ldr	r3, [r0, #0]
 80172ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80172b0:	4798      	blx	r3
 80172b2:	2dff      	cmp	r5, #255	; 0xff
 80172b4:	d016      	beq.n	80172e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80172b6:	f010 0f08 	tst.w	r0, #8
 80172ba:	6820      	ldr	r0, [r4, #0]
 80172bc:	d015      	beq.n	80172ea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80172be:	2400      	movs	r4, #0
 80172c0:	6801      	ldr	r1, [r0, #0]
 80172c2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80172c6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80172ca:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80172ce:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80172d2:	9401      	str	r4, [sp, #4]
 80172d4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80172d8:	9400      	str	r4, [sp, #0]
 80172da:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80172dc:	4639      	mov	r1, r7
 80172de:	47a0      	blx	r4
 80172e0:	b007      	add	sp, #28
 80172e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80172e4:	f010 0f02 	tst.w	r0, #2
 80172e8:	e7e7      	b.n	80172ba <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80172ea:	6803      	ldr	r3, [r0, #0]
 80172ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80172ee:	4798      	blx	r3
 80172f0:	4b08      	ldr	r3, [pc, #32]	; (8017314 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80172f2:	881a      	ldrh	r2, [r3, #0]
 80172f4:	6833      	ldr	r3, [r6, #0]
 80172f6:	e9cd 7500 	strd	r7, r5, [sp]
 80172fa:	4601      	mov	r1, r0
 80172fc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80172fe:	4630      	mov	r0, r6
 8017300:	ab04      	add	r3, sp, #16
 8017302:	47a8      	blx	r5
 8017304:	6820      	ldr	r0, [r4, #0]
 8017306:	6803      	ldr	r3, [r0, #0]
 8017308:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801730a:	4798      	blx	r3
 801730c:	e7e8      	b.n	80172e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801730e:	bf00      	nop
 8017310:	20015488 	.word	0x20015488
 8017314:	20015482 	.word	0x20015482

08017318 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017318:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801731c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017320:	9e08      	ldr	r6, [sp, #32]
 8017322:	4688      	mov	r8, r1
 8017324:	4614      	mov	r4, r2
 8017326:	461d      	mov	r5, r3
 8017328:	2f00      	cmp	r7, #0
 801732a:	f000 80a9 	beq.w	8017480 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801732e:	4618      	mov	r0, r3
 8017330:	f7f3 fc27 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017334:	2800      	cmp	r0, #0
 8017336:	f040 80a3 	bne.w	8017480 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801733a:	f9b5 1000 	ldrsh.w	r1, [r5]
 801733e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017342:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017346:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801734a:	fb04 1303 	mla	r3, r4, r3, r1
 801734e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017352:	4365      	muls	r5, r4
 8017354:	2fff      	cmp	r7, #255	; 0xff
 8017356:	eba4 0200 	sub.w	r2, r4, r0
 801735a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801735e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017362:	d04a      	beq.n	80173fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017364:	b2bc      	uxth	r4, r7
 8017366:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801736a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801736e:	fa5f f788 	uxtb.w	r7, r8
 8017372:	b2f3      	uxtb	r3, r6
 8017374:	0040      	lsls	r0, r0, #1
 8017376:	fb0e fe04 	mul.w	lr, lr, r4
 801737a:	4367      	muls	r7, r4
 801737c:	4363      	muls	r3, r4
 801737e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017382:	fa1f fc8c 	uxth.w	ip, ip
 8017386:	42a9      	cmp	r1, r5
 8017388:	d27a      	bcs.n	8017480 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801738a:	eb01 0900 	add.w	r9, r1, r0
 801738e:	4549      	cmp	r1, r9
 8017390:	d231      	bcs.n	80173f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017392:	880a      	ldrh	r2, [r1, #0]
 8017394:	1214      	asrs	r4, r2, #8
 8017396:	10d6      	asrs	r6, r2, #3
 8017398:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801739c:	00d2      	lsls	r2, r2, #3
 801739e:	b2d2      	uxtb	r2, r2
 80173a0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80173a4:	fb14 f40c 	smulbb	r4, r4, ip
 80173a8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80173ac:	4474      	add	r4, lr
 80173ae:	fb12 f20c 	smulbb	r2, r2, ip
 80173b2:	b2a4      	uxth	r4, r4
 80173b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80173b8:	441a      	add	r2, r3
 80173ba:	b292      	uxth	r2, r2
 80173bc:	f104 0a01 	add.w	sl, r4, #1
 80173c0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80173c4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80173c8:	fb16 f60c 	smulbb	r6, r6, ip
 80173cc:	f102 0a01 	add.w	sl, r2, #1
 80173d0:	443e      	add	r6, r7
 80173d2:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80173d6:	b2b6      	uxth	r6, r6
 80173d8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80173dc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80173e0:	4322      	orrs	r2, r4
 80173e2:	1c74      	adds	r4, r6, #1
 80173e4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80173e8:	0976      	lsrs	r6, r6, #5
 80173ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80173ee:	4332      	orrs	r2, r6
 80173f0:	f821 2b02 	strh.w	r2, [r1], #2
 80173f4:	e7cb      	b.n	801738e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80173f6:	4441      	add	r1, r8
 80173f8:	e7c5      	b.n	8017386 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80173fa:	4f22      	ldr	r7, [pc, #136]	; (8017484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80173fc:	0973      	lsrs	r3, r6, #5
 80173fe:	ea08 0707 	and.w	r7, r8, r7
 8017402:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017406:	433b      	orrs	r3, r7
 8017408:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801740c:	4333      	orrs	r3, r6
 801740e:	07e7      	lsls	r7, r4, #31
 8017410:	b29b      	uxth	r3, r3
 8017412:	d50b      	bpl.n	801742c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017414:	0040      	lsls	r0, r0, #1
 8017416:	0052      	lsls	r2, r2, #1
 8017418:	42a9      	cmp	r1, r5
 801741a:	d231      	bcs.n	8017480 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801741c:	180c      	adds	r4, r1, r0
 801741e:	42a1      	cmp	r1, r4
 8017420:	d202      	bcs.n	8017428 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017422:	f821 3b02 	strh.w	r3, [r1], #2
 8017426:	e7fa      	b.n	801741e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017428:	4411      	add	r1, r2
 801742a:	e7f5      	b.n	8017418 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801742c:	078e      	lsls	r6, r1, #30
 801742e:	d008      	beq.n	8017442 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017430:	0066      	lsls	r6, r4, #1
 8017432:	460a      	mov	r2, r1
 8017434:	42aa      	cmp	r2, r5
 8017436:	d202      	bcs.n	801743e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017438:	8013      	strh	r3, [r2, #0]
 801743a:	4432      	add	r2, r6
 801743c:	e7fa      	b.n	8017434 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801743e:	3102      	adds	r1, #2
 8017440:	3801      	subs	r0, #1
 8017442:	07c2      	lsls	r2, r0, #31
 8017444:	d50b      	bpl.n	801745e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017446:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801744a:	3a01      	subs	r2, #1
 801744c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017450:	0066      	lsls	r6, r4, #1
 8017452:	42aa      	cmp	r2, r5
 8017454:	d202      	bcs.n	801745c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017456:	8013      	strh	r3, [r2, #0]
 8017458:	4432      	add	r2, r6
 801745a:	e7fa      	b.n	8017452 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801745c:	3801      	subs	r0, #1
 801745e:	b178      	cbz	r0, 8017480 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017460:	1040      	asrs	r0, r0, #1
 8017462:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017466:	0080      	lsls	r0, r0, #2
 8017468:	0064      	lsls	r4, r4, #1
 801746a:	42a9      	cmp	r1, r5
 801746c:	d208      	bcs.n	8017480 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801746e:	180e      	adds	r6, r1, r0
 8017470:	460a      	mov	r2, r1
 8017472:	42b2      	cmp	r2, r6
 8017474:	d202      	bcs.n	801747c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017476:	f842 3b04 	str.w	r3, [r2], #4
 801747a:	e7fa      	b.n	8017472 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801747c:	4421      	add	r1, r4
 801747e:	e7f4      	b.n	801746a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017480:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017484:	00fff800 	.word	0x00fff800

08017488 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017488:	2200      	movs	r2, #0
 801748a:	4910      	ldr	r1, [pc, #64]	; (80174cc <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801748c:	6042      	str	r2, [r0, #4]
 801748e:	6001      	str	r1, [r0, #0]
 8017490:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8017494:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8017498:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801749c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80174a0:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80174a4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80174a8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80174ac:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80174b0:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80174b4:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80174b8:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80174bc:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80174c0:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80174c4:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80174c8:	4770      	bx	lr
 80174ca:	bf00      	nop
 80174cc:	0802436c 	.word	0x0802436c

080174d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80174d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174d4:	460d      	mov	r5, r1
 80174d6:	b08d      	sub	sp, #52	; 0x34
 80174d8:	4604      	mov	r4, r0
 80174da:	6808      	ldr	r0, [r1, #0]
 80174dc:	6849      	ldr	r1, [r1, #4]
 80174de:	4699      	mov	r9, r3
 80174e0:	ab08      	add	r3, sp, #32
 80174e2:	c303      	stmia	r3!, {r0, r1}
 80174e4:	6810      	ldr	r0, [r2, #0]
 80174e6:	6851      	ldr	r1, [r2, #4]
 80174e8:	ab0a      	add	r3, sp, #40	; 0x28
 80174ea:	c303      	stmia	r3!, {r0, r1}
 80174ec:	a808      	add	r0, sp, #32
 80174ee:	f7f9 fae7 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174f2:	4629      	mov	r1, r5
 80174f4:	a80a      	add	r0, sp, #40	; 0x28
 80174f6:	f7f9 fb0b 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80174fa:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80174fe:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017502:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8017506:	4d63      	ldr	r5, [pc, #396]	; (8017694 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017508:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801750c:	6828      	ldr	r0, [r5, #0]
 801750e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017512:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017516:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801751a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801751e:	440a      	add	r2, r1
 8017520:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017524:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017528:	4413      	add	r3, r2
 801752a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801752e:	6803      	ldr	r3, [r0, #0]
 8017530:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017532:	4798      	blx	r3
 8017534:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017538:	d119      	bne.n	801756e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801753a:	f010 0f20 	tst.w	r0, #32
 801753e:	6828      	ldr	r0, [r5, #0]
 8017540:	d018      	beq.n	8017574 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017542:	2500      	movs	r5, #0
 8017544:	6801      	ldr	r1, [r0, #0]
 8017546:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801754a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801754e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017552:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017556:	9502      	str	r5, [sp, #8]
 8017558:	b2b6      	uxth	r6, r6
 801755a:	fa1f f588 	uxth.w	r5, r8
 801755e:	9601      	str	r6, [sp, #4]
 8017560:	9500      	str	r5, [sp, #0]
 8017562:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8017564:	4621      	mov	r1, r4
 8017566:	47a8      	blx	r5
 8017568:	b00d      	add	sp, #52	; 0x34
 801756a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801756e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8017572:	e7e4      	b.n	801753e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017574:	6803      	ldr	r3, [r0, #0]
 8017576:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017578:	4798      	blx	r3
 801757a:	4947      	ldr	r1, [pc, #284]	; (8017698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801757c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017580:	880b      	ldrh	r3, [r1, #0]
 8017582:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8017586:	fb03 5202 	mla	r2, r3, r2, r5
 801758a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801758e:	4373      	muls	r3, r6
 8017590:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017594:	9307      	str	r3, [sp, #28]
 8017596:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801759a:	9306      	str	r3, [sp, #24]
 801759c:	468a      	mov	sl, r1
 801759e:	9b07      	ldr	r3, [sp, #28]
 80175a0:	4298      	cmp	r0, r3
 80175a2:	d270      	bcs.n	8017686 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80175a4:	9b06      	ldr	r3, [sp, #24]
 80175a6:	4621      	mov	r1, r4
 80175a8:	eb00 0b03 	add.w	fp, r0, r3
 80175ac:	4558      	cmp	r0, fp
 80175ae:	d25d      	bcs.n	801766c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80175b0:	f851 4b04 	ldr.w	r4, [r1], #4
 80175b4:	0e23      	lsrs	r3, r4, #24
 80175b6:	d014      	beq.n	80175e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80175b8:	2bff      	cmp	r3, #255	; 0xff
 80175ba:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80175be:	d112      	bne.n	80175e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80175c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80175c4:	d10f      	bne.n	80175e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80175c6:	0963      	lsrs	r3, r4, #5
 80175c8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80175cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80175d0:	f02c 0c07 	bic.w	ip, ip, #7
 80175d4:	ea43 0c0c 	orr.w	ip, r3, ip
 80175d8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80175dc:	ea4c 0404 	orr.w	r4, ip, r4
 80175e0:	8004      	strh	r4, [r0, #0]
 80175e2:	3002      	adds	r0, #2
 80175e4:	e7e2      	b.n	80175ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80175e6:	fb09 f303 	mul.w	r3, r9, r3
 80175ea:	8807      	ldrh	r7, [r0, #0]
 80175ec:	1c5a      	adds	r2, r3, #1
 80175ee:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80175f2:	1212      	asrs	r2, r2, #8
 80175f4:	123e      	asrs	r6, r7, #8
 80175f6:	b293      	uxth	r3, r2
 80175f8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80175fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017600:	43d2      	mvns	r2, r2
 8017602:	b2d2      	uxtb	r2, r2
 8017604:	10fd      	asrs	r5, r7, #3
 8017606:	fb1e fe03 	smulbb	lr, lr, r3
 801760a:	00ff      	lsls	r7, r7, #3
 801760c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017610:	fb06 e602 	mla	r6, r6, r2, lr
 8017614:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017618:	b2ff      	uxtb	r7, r7
 801761a:	fa5f fc8c 	uxtb.w	ip, ip
 801761e:	b2e4      	uxtb	r4, r4
 8017620:	b2b6      	uxth	r6, r6
 8017622:	fb1c fc03 	smulbb	ip, ip, r3
 8017626:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801762a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801762e:	fb14 f403 	smulbb	r4, r4, r3
 8017632:	fb05 c502 	mla	r5, r5, r2, ip
 8017636:	f106 0e01 	add.w	lr, r6, #1
 801763a:	fb07 4702 	mla	r7, r7, r2, r4
 801763e:	b2ad      	uxth	r5, r5
 8017640:	b2bf      	uxth	r7, r7
 8017642:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017646:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801764a:	f105 0c01 	add.w	ip, r5, #1
 801764e:	1c7e      	adds	r6, r7, #1
 8017650:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017654:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017658:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801765c:	096d      	lsrs	r5, r5, #5
 801765e:	ea46 060e 	orr.w	r6, r6, lr
 8017662:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017666:	432e      	orrs	r6, r5
 8017668:	8006      	strh	r6, [r0, #0]
 801766a:	e7ba      	b.n	80175e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801766c:	f8ba 3000 	ldrh.w	r3, [sl]
 8017670:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8017674:	eba3 0308 	sub.w	r3, r3, r8
 8017678:	eba4 0408 	sub.w	r4, r4, r8
 801767c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017680:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017684:	e78b      	b.n	801759e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017686:	4b03      	ldr	r3, [pc, #12]	; (8017694 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017688:	6818      	ldr	r0, [r3, #0]
 801768a:	6803      	ldr	r3, [r0, #0]
 801768c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801768e:	4798      	blx	r3
 8017690:	e76a      	b.n	8017568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017692:	bf00      	nop
 8017694:	20015488 	.word	0x20015488
 8017698:	20015482 	.word	0x20015482

0801769c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801769c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80176a0:	460c      	mov	r4, r1
 80176a2:	b085      	sub	sp, #20
 80176a4:	6810      	ldr	r0, [r2, #0]
 80176a6:	6851      	ldr	r1, [r2, #4]
 80176a8:	466d      	mov	r5, sp
 80176aa:	c503      	stmia	r5!, {r0, r1}
 80176ac:	6818      	ldr	r0, [r3, #0]
 80176ae:	6859      	ldr	r1, [r3, #4]
 80176b0:	4616      	mov	r6, r2
 80176b2:	c503      	stmia	r5!, {r0, r1}
 80176b4:	4668      	mov	r0, sp
 80176b6:	f7f9 fa03 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80176ba:	4631      	mov	r1, r6
 80176bc:	a802      	add	r0, sp, #8
 80176be:	f7f9 fa27 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80176c2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80176c6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80176ca:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80176ce:	4d28      	ldr	r5, [pc, #160]	; (8017770 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80176d0:	4e28      	ldr	r6, [pc, #160]	; (8017774 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80176d2:	6828      	ldr	r0, [r5, #0]
 80176d4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80176d8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80176dc:	fb11 2103 	smlabb	r1, r1, r3, r2
 80176e0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80176e4:	f8bd 1000 	ldrh.w	r1, [sp]
 80176e8:	440a      	add	r2, r1
 80176ea:	f8ad 2008 	strh.w	r2, [sp, #8]
 80176ee:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80176f2:	4413      	add	r3, r2
 80176f4:	f8ad 300a 	strh.w	r3, [sp, #10]
 80176f8:	6803      	ldr	r3, [r0, #0]
 80176fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80176fc:	4798      	blx	r3
 80176fe:	8833      	ldrh	r3, [r6, #0]
 8017700:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017704:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017708:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8017778 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801770c:	fb03 1202 	mla	r2, r3, r2, r1
 8017710:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017714:	fb08 f303 	mul.w	r3, r8, r3
 8017718:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801771c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017720:	4298      	cmp	r0, r3
 8017722:	d21d      	bcs.n	8017760 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017724:	eb00 080c 	add.w	r8, r0, ip
 8017728:	4540      	cmp	r0, r8
 801772a:	d20f      	bcs.n	801774c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801772c:	f854 1b04 	ldr.w	r1, [r4], #4
 8017730:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017734:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017738:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801773c:	ea42 0209 	orr.w	r2, r2, r9
 8017740:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017744:	430a      	orrs	r2, r1
 8017746:	f820 2b02 	strh.w	r2, [r0], #2
 801774a:	e7ed      	b.n	8017728 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801774c:	8832      	ldrh	r2, [r6, #0]
 801774e:	1bd2      	subs	r2, r2, r7
 8017750:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017754:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017758:	1bd2      	subs	r2, r2, r7
 801775a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801775e:	e7df      	b.n	8017720 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017760:	6828      	ldr	r0, [r5, #0]
 8017762:	6803      	ldr	r3, [r0, #0]
 8017764:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017766:	4798      	blx	r3
 8017768:	b005      	add	sp, #20
 801776a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801776e:	bf00      	nop
 8017770:	20015488 	.word	0x20015488
 8017774:	20015482 	.word	0x20015482
 8017778:	fffff800 	.word	0xfffff800

0801777c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801777c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017780:	460e      	mov	r6, r1
 8017782:	b08e      	sub	sp, #56	; 0x38
 8017784:	4604      	mov	r4, r0
 8017786:	6808      	ldr	r0, [r1, #0]
 8017788:	6849      	ldr	r1, [r1, #4]
 801778a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017964 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801778e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017968 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017792:	461d      	mov	r5, r3
 8017794:	ab0a      	add	r3, sp, #40	; 0x28
 8017796:	c303      	stmia	r3!, {r0, r1}
 8017798:	6810      	ldr	r0, [r2, #0]
 801779a:	6851      	ldr	r1, [r2, #4]
 801779c:	ab0c      	add	r3, sp, #48	; 0x30
 801779e:	c303      	stmia	r3!, {r0, r1}
 80177a0:	a80a      	add	r0, sp, #40	; 0x28
 80177a2:	f7f9 f98d 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80177a6:	4631      	mov	r1, r6
 80177a8:	a80c      	add	r0, sp, #48	; 0x30
 80177aa:	f7f9 f9b1 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80177ae:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80177b2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80177b6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80177ba:	f8d8 0000 	ldr.w	r0, [r8]
 80177be:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80177c2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80177c6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80177ca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80177ce:	440c      	add	r4, r1
 80177d0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80177d4:	440a      	add	r2, r1
 80177d6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80177da:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80177de:	4413      	add	r3, r2
 80177e0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80177e4:	6803      	ldr	r3, [r0, #0]
 80177e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80177e8:	4798      	blx	r3
 80177ea:	2dff      	cmp	r5, #255	; 0xff
 80177ec:	d124      	bne.n	8017838 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80177ee:	f010 0f01 	tst.w	r0, #1
 80177f2:	f8d8 0000 	ldr.w	r0, [r8]
 80177f6:	d022      	beq.n	801783e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80177f8:	2100      	movs	r1, #0
 80177fa:	f8d0 c000 	ldr.w	ip, [r0]
 80177fe:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017802:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017806:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801780a:	f04f 0e01 	mov.w	lr, #1
 801780e:	f8cd e018 	str.w	lr, [sp, #24]
 8017812:	f8b9 e000 	ldrh.w	lr, [r9]
 8017816:	9503      	str	r5, [sp, #12]
 8017818:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801781c:	b2b6      	uxth	r6, r6
 801781e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017822:	9102      	str	r1, [sp, #8]
 8017824:	b2bf      	uxth	r7, r7
 8017826:	9601      	str	r6, [sp, #4]
 8017828:	9700      	str	r7, [sp, #0]
 801782a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801782e:	4621      	mov	r1, r4
 8017830:	47a8      	blx	r5
 8017832:	b00e      	add	sp, #56	; 0x38
 8017834:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017838:	f010 0f04 	tst.w	r0, #4
 801783c:	e7d9      	b.n	80177f2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801783e:	6803      	ldr	r3, [r0, #0]
 8017840:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017842:	4798      	blx	r3
 8017844:	f8b9 3000 	ldrh.w	r3, [r9]
 8017848:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801784c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017850:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017854:	fb03 1202 	mla	r2, r3, r2, r1
 8017858:	ebac 0c07 	sub.w	ip, ip, r7
 801785c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017860:	435e      	muls	r6, r3
 8017862:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017866:	2dff      	cmp	r5, #255	; 0xff
 8017868:	eba3 0707 	sub.w	r7, r3, r7
 801786c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017870:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017874:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017878:	d049      	beq.n	801790e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801787a:	43eb      	mvns	r3, r5
 801787c:	fa1f f985 	uxth.w	r9, r5
 8017880:	b2db      	uxtb	r3, r3
 8017882:	42b0      	cmp	r0, r6
 8017884:	d266      	bcs.n	8017954 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017886:	eb00 0a0e 	add.w	sl, r0, lr
 801788a:	4550      	cmp	r0, sl
 801788c:	4621      	mov	r1, r4
 801788e:	f104 0403 	add.w	r4, r4, #3
 8017892:	d25b      	bcs.n	801794c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017894:	8802      	ldrh	r2, [r0, #0]
 8017896:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801789a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801789e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80178a2:	fb11 f109 	smulbb	r1, r1, r9
 80178a6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80178aa:	10d5      	asrs	r5, r2, #3
 80178ac:	fb08 1803 	mla	r8, r8, r3, r1
 80178b0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80178b4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80178b8:	fb11 f109 	smulbb	r1, r1, r9
 80178bc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80178c0:	fb05 1503 	mla	r5, r5, r3, r1
 80178c4:	00d2      	lsls	r2, r2, #3
 80178c6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80178ca:	b2d2      	uxtb	r2, r2
 80178cc:	fb11 f109 	smulbb	r1, r1, r9
 80178d0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80178d4:	fa1f f888 	uxth.w	r8, r8
 80178d8:	fb02 1203 	mla	r2, r2, r3, r1
 80178dc:	b292      	uxth	r2, r2
 80178de:	f108 0101 	add.w	r1, r8, #1
 80178e2:	b2ad      	uxth	r5, r5
 80178e4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80178e8:	1c51      	adds	r1, r2, #1
 80178ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80178ee:	1c69      	adds	r1, r5, #1
 80178f0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80178f4:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80178f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80178fc:	096d      	lsrs	r5, r5, #5
 80178fe:	ea42 0208 	orr.w	r2, r2, r8
 8017902:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017906:	432a      	orrs	r2, r5
 8017908:	f820 2b02 	strh.w	r2, [r0], #2
 801790c:	e7bd      	b.n	801788a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801790e:	4a14      	ldr	r2, [pc, #80]	; (8017960 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017910:	42b0      	cmp	r0, r6
 8017912:	d21f      	bcs.n	8017954 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017914:	eb00 050e 	add.w	r5, r0, lr
 8017918:	42a8      	cmp	r0, r5
 801791a:	4621      	mov	r1, r4
 801791c:	f104 0403 	add.w	r4, r4, #3
 8017920:	d210      	bcs.n	8017944 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017922:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017926:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801792a:	00db      	lsls	r3, r3, #3
 801792c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017930:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017934:	430b      	orrs	r3, r1
 8017936:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801793a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801793e:	f820 3b02 	strh.w	r3, [r0], #2
 8017942:	e7e9      	b.n	8017918 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017944:	4438      	add	r0, r7
 8017946:	eb01 040c 	add.w	r4, r1, ip
 801794a:	e7e1      	b.n	8017910 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801794c:	4438      	add	r0, r7
 801794e:	eb01 040c 	add.w	r4, r1, ip
 8017952:	e796      	b.n	8017882 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017954:	4b03      	ldr	r3, [pc, #12]	; (8017964 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017956:	6818      	ldr	r0, [r3, #0]
 8017958:	6803      	ldr	r3, [r0, #0]
 801795a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801795c:	4798      	blx	r3
 801795e:	e768      	b.n	8017832 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017960:	fffff800 	.word	0xfffff800
 8017964:	20015488 	.word	0x20015488
 8017968:	20015482 	.word	0x20015482

0801796c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801796c:	b4f0      	push	{r4, r5, r6, r7}
 801796e:	4616      	mov	r6, r2
 8017970:	2e01      	cmp	r6, #1
 8017972:	461c      	mov	r4, r3
 8017974:	460d      	mov	r5, r1
 8017976:	9a04      	ldr	r2, [sp, #16]
 8017978:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801797c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017980:	d012      	beq.n	80179a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017982:	d303      	bcc.n	801798c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017984:	2e02      	cmp	r6, #2
 8017986:	d00a      	beq.n	801799e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017988:	bcf0      	pop	{r4, r5, r6, r7}
 801798a:	4770      	bx	lr
 801798c:	6805      	ldr	r5, [r0, #0]
 801798e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017992:	68ed      	ldr	r5, [r5, #12]
 8017994:	4613      	mov	r3, r2
 8017996:	46ac      	mov	ip, r5
 8017998:	4622      	mov	r2, r4
 801799a:	bcf0      	pop	{r4, r5, r6, r7}
 801799c:	4760      	bx	ip
 801799e:	4621      	mov	r1, r4
 80179a0:	4628      	mov	r0, r5
 80179a2:	bcf0      	pop	{r4, r5, r6, r7}
 80179a4:	f7ff bd94 	b.w	80174d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80179a8:	4621      	mov	r1, r4
 80179aa:	4628      	mov	r0, r5
 80179ac:	bcf0      	pop	{r4, r5, r6, r7}
 80179ae:	f7ff bee5 	b.w	801777c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080179b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80179b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179b8:	4681      	mov	r9, r0
 80179ba:	b093      	sub	sp, #76	; 0x4c
 80179bc:	6810      	ldr	r0, [r2, #0]
 80179be:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80179c2:	4f6d      	ldr	r7, [pc, #436]	; (8017b78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80179c4:	4688      	mov	r8, r1
 80179c6:	6851      	ldr	r1, [r2, #4]
 80179c8:	ac0e      	add	r4, sp, #56	; 0x38
 80179ca:	c403      	stmia	r4!, {r0, r1}
 80179cc:	6818      	ldr	r0, [r3, #0]
 80179ce:	6859      	ldr	r1, [r3, #4]
 80179d0:	ac10      	add	r4, sp, #64	; 0x40
 80179d2:	4616      	mov	r6, r2
 80179d4:	c403      	stmia	r4!, {r0, r1}
 80179d6:	a80e      	add	r0, sp, #56	; 0x38
 80179d8:	f7f9 f872 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179dc:	4631      	mov	r1, r6
 80179de:	a810      	add	r0, sp, #64	; 0x40
 80179e0:	f7f9 f896 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80179e4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80179e8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80179ec:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80179f0:	4e62      	ldr	r6, [pc, #392]	; (8017b7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80179f2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80179f6:	6830      	ldr	r0, [r6, #0]
 80179f8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80179fc:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017a00:	4489      	add	r9, r1
 8017a02:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017a06:	440a      	add	r2, r1
 8017a08:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017a0c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017a10:	4413      	add	r3, r2
 8017a12:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017a16:	6803      	ldr	r3, [r0, #0]
 8017a18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a1a:	4798      	blx	r3
 8017a1c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017a20:	6830      	ldr	r0, [r6, #0]
 8017a22:	d01d      	beq.n	8017a60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017a24:	2200      	movs	r2, #0
 8017a26:	6801      	ldr	r1, [r0, #0]
 8017a28:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017a2c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017a30:	220b      	movs	r2, #11
 8017a32:	9207      	str	r2, [sp, #28]
 8017a34:	883a      	ldrh	r2, [r7, #0]
 8017a36:	9206      	str	r2, [sp, #24]
 8017a38:	2201      	movs	r2, #1
 8017a3a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017a3e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017a42:	9203      	str	r2, [sp, #12]
 8017a44:	b2a4      	uxth	r4, r4
 8017a46:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017a4a:	9200      	str	r2, [sp, #0]
 8017a4c:	b2ad      	uxth	r5, r5
 8017a4e:	9502      	str	r5, [sp, #8]
 8017a50:	9401      	str	r4, [sp, #4]
 8017a52:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017a54:	4642      	mov	r2, r8
 8017a56:	4649      	mov	r1, r9
 8017a58:	47a0      	blx	r4
 8017a5a:	b013      	add	sp, #76	; 0x4c
 8017a5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a60:	6803      	ldr	r3, [r0, #0]
 8017a62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a64:	4798      	blx	r3
 8017a66:	883b      	ldrh	r3, [r7, #0]
 8017a68:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017a6c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017a70:	fb03 1202 	mla	r2, r3, r2, r1
 8017a74:	435d      	muls	r5, r3
 8017a76:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017a7a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017a7e:	920c      	str	r2, [sp, #48]	; 0x30
 8017a80:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017a84:	1b12      	subs	r2, r2, r4
 8017a86:	920d      	str	r2, [sp, #52]	; 0x34
 8017a88:	0062      	lsls	r2, r4, #1
 8017a8a:	1b1c      	subs	r4, r3, r4
 8017a8c:	0063      	lsls	r3, r4, #1
 8017a8e:	920a      	str	r2, [sp, #40]	; 0x28
 8017a90:	930b      	str	r3, [sp, #44]	; 0x2c
 8017a92:	f04f 0e04 	mov.w	lr, #4
 8017a96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017a98:	4298      	cmp	r0, r3
 8017a9a:	d266      	bcs.n	8017b6a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017a9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017a9e:	eb00 0b03 	add.w	fp, r0, r3
 8017aa2:	4558      	cmp	r0, fp
 8017aa4:	d25c      	bcs.n	8017b60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017aa6:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017aaa:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017aae:	f858 2003 	ldr.w	r2, [r8, r3]
 8017ab2:	0e11      	lsrs	r1, r2, #24
 8017ab4:	d012      	beq.n	8017adc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017ab6:	29ff      	cmp	r1, #255	; 0xff
 8017ab8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017abc:	d110      	bne.n	8017ae0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017abe:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017ac2:	d10d      	bne.n	8017ae0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017ac4:	0953      	lsrs	r3, r2, #5
 8017ac6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017aca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017ace:	f027 0707 	bic.w	r7, r7, #7
 8017ad2:	431f      	orrs	r7, r3
 8017ad4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017ad8:	433a      	orrs	r2, r7
 8017ada:	8002      	strh	r2, [r0, #0]
 8017adc:	3002      	adds	r0, #2
 8017ade:	e7e0      	b.n	8017aa2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017ae0:	fb0a f101 	mul.w	r1, sl, r1
 8017ae4:	8806      	ldrh	r6, [r0, #0]
 8017ae6:	1c4b      	adds	r3, r1, #1
 8017ae8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017aec:	1235      	asrs	r5, r6, #8
 8017aee:	10f4      	asrs	r4, r6, #3
 8017af0:	121b      	asrs	r3, r3, #8
 8017af2:	00f6      	lsls	r6, r6, #3
 8017af4:	b299      	uxth	r1, r3
 8017af6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017afa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017afe:	b2f6      	uxtb	r6, r6
 8017b00:	43db      	mvns	r3, r3
 8017b02:	b2d2      	uxtb	r2, r2
 8017b04:	b2db      	uxtb	r3, r3
 8017b06:	fb1c fc01 	smulbb	ip, ip, r1
 8017b0a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017b0e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017b12:	fb12 f201 	smulbb	r2, r2, r1
 8017b16:	fb05 c503 	mla	r5, r5, r3, ip
 8017b1a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017b1e:	b2ff      	uxtb	r7, r7
 8017b20:	fb06 2203 	mla	r2, r6, r3, r2
 8017b24:	b2ad      	uxth	r5, r5
 8017b26:	fb17 f701 	smulbb	r7, r7, r1
 8017b2a:	b292      	uxth	r2, r2
 8017b2c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017b30:	fb04 7403 	mla	r4, r4, r3, r7
 8017b34:	f105 0c01 	add.w	ip, r5, #1
 8017b38:	1c57      	adds	r7, r2, #1
 8017b3a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017b3e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017b42:	b2a4      	uxth	r4, r4
 8017b44:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017b48:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017b4c:	433d      	orrs	r5, r7
 8017b4e:	1c67      	adds	r7, r4, #1
 8017b50:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017b54:	0964      	lsrs	r4, r4, #5
 8017b56:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017b5a:	4325      	orrs	r5, r4
 8017b5c:	8005      	strh	r5, [r0, #0]
 8017b5e:	e7bd      	b.n	8017adc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017b60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017b62:	4418      	add	r0, r3
 8017b64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017b66:	4499      	add	r9, r3
 8017b68:	e795      	b.n	8017a96 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017b6a:	4b04      	ldr	r3, [pc, #16]	; (8017b7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017b6c:	6818      	ldr	r0, [r3, #0]
 8017b6e:	6803      	ldr	r3, [r0, #0]
 8017b70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017b72:	4798      	blx	r3
 8017b74:	e771      	b.n	8017a5a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017b76:	bf00      	nop
 8017b78:	20015482 	.word	0x20015482
 8017b7c:	20015488 	.word	0x20015488

08017b80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b84:	b087      	sub	sp, #28
 8017b86:	4680      	mov	r8, r0
 8017b88:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017b8c:	460d      	mov	r5, r1
 8017b8e:	4614      	mov	r4, r2
 8017b90:	2e00      	cmp	r6, #0
 8017b92:	f000 80b9 	beq.w	8017d08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017b96:	6810      	ldr	r0, [r2, #0]
 8017b98:	6851      	ldr	r1, [r2, #4]
 8017b9a:	af02      	add	r7, sp, #8
 8017b9c:	c703      	stmia	r7!, {r0, r1}
 8017b9e:	6818      	ldr	r0, [r3, #0]
 8017ba0:	6859      	ldr	r1, [r3, #4]
 8017ba2:	af04      	add	r7, sp, #16
 8017ba4:	c703      	stmia	r7!, {r0, r1}
 8017ba6:	a802      	add	r0, sp, #8
 8017ba8:	f7f8 ff8a 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017bac:	4621      	mov	r1, r4
 8017bae:	a804      	add	r0, sp, #16
 8017bb0:	f7f8 ffae 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017bb4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017bb8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017bbc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017bc0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017bc4:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017bc8:	eb08 0401 	add.w	r4, r8, r1
 8017bcc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017bd0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017bd4:	440a      	add	r2, r1
 8017bd6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017bda:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017bde:	4413      	add	r3, r2
 8017be0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017be4:	4b4a      	ldr	r3, [pc, #296]	; (8017d10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017be6:	6818      	ldr	r0, [r3, #0]
 8017be8:	6803      	ldr	r3, [r0, #0]
 8017bea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017bec:	4798      	blx	r3
 8017bee:	4b49      	ldr	r3, [pc, #292]	; (8017d14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017bf0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017bf4:	881a      	ldrh	r2, [r3, #0]
 8017bf6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017bfa:	2eff      	cmp	r6, #255	; 0xff
 8017bfc:	fb02 c101 	mla	r1, r2, r1, ip
 8017c00:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017c04:	fb02 f207 	mul.w	r2, r2, r7
 8017c08:	f105 0104 	add.w	r1, r5, #4
 8017c0c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017c10:	461d      	mov	r5, r3
 8017c12:	d05a      	beq.n	8017cca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017c14:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017c18:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017c1c:	b2b6      	uxth	r6, r6
 8017c1e:	fa1f fe8e 	uxth.w	lr, lr
 8017c22:	9301      	str	r3, [sp, #4]
 8017c24:	4282      	cmp	r2, r0
 8017c26:	d96a      	bls.n	8017cfe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017c28:	eb00 0b0a 	add.w	fp, r0, sl
 8017c2c:	4583      	cmp	fp, r0
 8017c2e:	d940      	bls.n	8017cb2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017c30:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017c34:	8805      	ldrh	r5, [r0, #0]
 8017c36:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017c3a:	122f      	asrs	r7, r5, #8
 8017c3c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017c40:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017c44:	fb17 f70e 	smulbb	r7, r7, lr
 8017c48:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017c4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017c50:	00ed      	lsls	r5, r5, #3
 8017c52:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017c56:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017c5a:	10df      	asrs	r7, r3, #3
 8017c5c:	b2ed      	uxtb	r5, r5
 8017c5e:	00db      	lsls	r3, r3, #3
 8017c60:	fa1f fc8c 	uxth.w	ip, ip
 8017c64:	fb19 f90e 	smulbb	r9, r9, lr
 8017c68:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017c6c:	b2db      	uxtb	r3, r3
 8017c6e:	fb15 f50e 	smulbb	r5, r5, lr
 8017c72:	fb07 9706 	mla	r7, r7, r6, r9
 8017c76:	fb03 5306 	mla	r3, r3, r6, r5
 8017c7a:	f10c 0901 	add.w	r9, ip, #1
 8017c7e:	b29b      	uxth	r3, r3
 8017c80:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017c84:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017c88:	f103 0c01 	add.w	ip, r3, #1
 8017c8c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017c90:	b2bf      	uxth	r7, r7
 8017c92:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017c96:	ea4c 0c09 	orr.w	ip, ip, r9
 8017c9a:	f107 0901 	add.w	r9, r7, #1
 8017c9e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017ca2:	097f      	lsrs	r7, r7, #5
 8017ca4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ca8:	ea4c 0c07 	orr.w	ip, ip, r7
 8017cac:	f820 cb02 	strh.w	ip, [r0], #2
 8017cb0:	e7bc      	b.n	8017c2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017cb2:	9b01      	ldr	r3, [sp, #4]
 8017cb4:	881b      	ldrh	r3, [r3, #0]
 8017cb6:	eba3 0308 	sub.w	r3, r3, r8
 8017cba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017cbe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017cc2:	eba3 0308 	sub.w	r3, r3, r8
 8017cc6:	441c      	add	r4, r3
 8017cc8:	e7ac      	b.n	8017c24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017cca:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017cce:	4282      	cmp	r2, r0
 8017cd0:	d915      	bls.n	8017cfe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017cd2:	eb00 060a 	add.w	r6, r0, sl
 8017cd6:	4286      	cmp	r6, r0
 8017cd8:	d906      	bls.n	8017ce8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017cda:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017cde:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017ce2:	f820 3b02 	strh.w	r3, [r0], #2
 8017ce6:	e7f6      	b.n	8017cd6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017ce8:	882b      	ldrh	r3, [r5, #0]
 8017cea:	eba3 0308 	sub.w	r3, r3, r8
 8017cee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017cf2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017cf6:	eba3 0308 	sub.w	r3, r3, r8
 8017cfa:	441c      	add	r4, r3
 8017cfc:	e7e7      	b.n	8017cce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017cfe:	4b04      	ldr	r3, [pc, #16]	; (8017d10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017d00:	6818      	ldr	r0, [r3, #0]
 8017d02:	6803      	ldr	r3, [r0, #0]
 8017d04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017d06:	4798      	blx	r3
 8017d08:	b007      	add	sp, #28
 8017d0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d0e:	bf00      	nop
 8017d10:	20015488 	.word	0x20015488
 8017d14:	20015482 	.word	0x20015482

08017d18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d1c:	b091      	sub	sp, #68	; 0x44
 8017d1e:	4680      	mov	r8, r0
 8017d20:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017d24:	460f      	mov	r7, r1
 8017d26:	4614      	mov	r4, r2
 8017d28:	2d00      	cmp	r5, #0
 8017d2a:	d051      	beq.n	8017dd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017d2c:	6810      	ldr	r0, [r2, #0]
 8017d2e:	6851      	ldr	r1, [r2, #4]
 8017d30:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8017f34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017d34:	ae0c      	add	r6, sp, #48	; 0x30
 8017d36:	c603      	stmia	r6!, {r0, r1}
 8017d38:	6818      	ldr	r0, [r3, #0]
 8017d3a:	6859      	ldr	r1, [r3, #4]
 8017d3c:	ae0e      	add	r6, sp, #56	; 0x38
 8017d3e:	c603      	stmia	r6!, {r0, r1}
 8017d40:	a80c      	add	r0, sp, #48	; 0x30
 8017d42:	f7f8 febd 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d46:	4621      	mov	r1, r4
 8017d48:	a80e      	add	r0, sp, #56	; 0x38
 8017d4a:	f7f8 fee1 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d4e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017d52:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017d56:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017d5a:	f8d9 0000 	ldr.w	r0, [r9]
 8017d5e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017d62:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8017d66:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017d6a:	eb08 0401 	add.w	r4, r8, r1
 8017d6e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017d72:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8017f38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017d76:	440a      	add	r2, r1
 8017d78:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017d7c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017d80:	4413      	add	r3, r2
 8017d82:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017d86:	6803      	ldr	r3, [r0, #0]
 8017d88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d8a:	4798      	blx	r3
 8017d8c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017d90:	f8d9 0000 	ldr.w	r0, [r9]
 8017d94:	d01f      	beq.n	8017dd6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017d96:	2200      	movs	r2, #0
 8017d98:	6801      	ldr	r1, [r0, #0]
 8017d9a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017d9e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017da2:	220b      	movs	r2, #11
 8017da4:	9207      	str	r2, [sp, #28]
 8017da6:	f8b8 2000 	ldrh.w	r2, [r8]
 8017daa:	9206      	str	r2, [sp, #24]
 8017dac:	2201      	movs	r2, #1
 8017dae:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017db2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017db6:	9203      	str	r2, [sp, #12]
 8017db8:	fa1f f28a 	uxth.w	r2, sl
 8017dbc:	9202      	str	r2, [sp, #8]
 8017dbe:	b2b6      	uxth	r6, r6
 8017dc0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017dc4:	9200      	str	r2, [sp, #0]
 8017dc6:	9601      	str	r6, [sp, #4]
 8017dc8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8017dca:	463a      	mov	r2, r7
 8017dcc:	4621      	mov	r1, r4
 8017dce:	47a8      	blx	r5
 8017dd0:	b011      	add	sp, #68	; 0x44
 8017dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017dd6:	6803      	ldr	r3, [r0, #0]
 8017dd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017dda:	4798      	blx	r3
 8017ddc:	f8b8 2000 	ldrh.w	r2, [r8]
 8017de0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017de4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8017de8:	2dff      	cmp	r5, #255	; 0xff
 8017dea:	fb02 1303 	mla	r3, r2, r3, r1
 8017dee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017df2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017df6:	fb0a fa02 	mul.w	sl, sl, r2
 8017dfa:	d062      	beq.n	8017ec2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017dfc:	ea6f 0c05 	mvn.w	ip, r5
 8017e00:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017e04:	930a      	str	r3, [sp, #40]	; 0x28
 8017e06:	b2ad      	uxth	r5, r5
 8017e08:	fa5f fc8c 	uxtb.w	ip, ip
 8017e0c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8017e10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017e12:	4298      	cmp	r0, r3
 8017e14:	f080 8085 	bcs.w	8017f22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017e18:	eb00 0b09 	add.w	fp, r0, r9
 8017e1c:	4558      	cmp	r0, fp
 8017e1e:	d246      	bcs.n	8017eae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017e20:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017e24:	2303      	movs	r3, #3
 8017e26:	2204      	movs	r2, #4
 8017e28:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017e2c:	eb07 0a0e 	add.w	sl, r7, lr
 8017e30:	8803      	ldrh	r3, [r0, #0]
 8017e32:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017e36:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017e3a:	1219      	asrs	r1, r3, #8
 8017e3c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017e40:	fb18 f805 	smulbb	r8, r8, r5
 8017e44:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017e48:	10da      	asrs	r2, r3, #3
 8017e4a:	fb01 810c 	mla	r1, r1, ip, r8
 8017e4e:	00db      	lsls	r3, r3, #3
 8017e50:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017e54:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017e58:	b2db      	uxtb	r3, r3
 8017e5a:	fb18 f805 	smulbb	r8, r8, r5
 8017e5e:	fb1e fe05 	smulbb	lr, lr, r5
 8017e62:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017e66:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8017e6a:	b289      	uxth	r1, r1
 8017e6c:	fb02 820c 	mla	r2, r2, ip, r8
 8017e70:	fb03 e30c 	mla	r3, r3, ip, lr
 8017e74:	b292      	uxth	r2, r2
 8017e76:	b29b      	uxth	r3, r3
 8017e78:	f101 0801 	add.w	r8, r1, #1
 8017e7c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017e80:	f103 0e01 	add.w	lr, r3, #1
 8017e84:	f102 0801 	add.w	r8, r2, #1
 8017e88:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8017e8c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8017e90:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017e94:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017e98:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017e9c:	ea4e 0101 	orr.w	r1, lr, r1
 8017ea0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017ea4:	ea41 0108 	orr.w	r1, r1, r8
 8017ea8:	f820 1b02 	strh.w	r1, [r0], #2
 8017eac:	e7b6      	b.n	8017e1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8017eae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017eb0:	881b      	ldrh	r3, [r3, #0]
 8017eb2:	1b9b      	subs	r3, r3, r6
 8017eb4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017eb8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017ebc:	1b9b      	subs	r3, r3, r6
 8017ebe:	441c      	add	r4, r3
 8017ec0:	e7a6      	b.n	8017e10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8017ec2:	491b      	ldr	r1, [pc, #108]	; (8017f30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8017ec4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017ec8:	2203      	movs	r2, #3
 8017eca:	2504      	movs	r5, #4
 8017ecc:	4550      	cmp	r0, sl
 8017ece:	d228      	bcs.n	8017f22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017ed0:	eb00 0c09 	add.w	ip, r0, r9
 8017ed4:	4560      	cmp	r0, ip
 8017ed6:	4623      	mov	r3, r4
 8017ed8:	d219      	bcs.n	8017f0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8017eda:	f893 e000 	ldrb.w	lr, [r3]
 8017ede:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8017ee2:	eb07 0b0e 	add.w	fp, r7, lr
 8017ee6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017eea:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8017eee:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017ef2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8017ef6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8017efa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017efe:	ea43 030b 	orr.w	r3, r3, fp
 8017f02:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8017f06:	3401      	adds	r4, #1
 8017f08:	f820 3b02 	strh.w	r3, [r0], #2
 8017f0c:	e7e2      	b.n	8017ed4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8017f0e:	f8b8 3000 	ldrh.w	r3, [r8]
 8017f12:	1b9b      	subs	r3, r3, r6
 8017f14:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f18:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017f1c:	1b9b      	subs	r3, r3, r6
 8017f1e:	441c      	add	r4, r3
 8017f20:	e7d4      	b.n	8017ecc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8017f22:	4b04      	ldr	r3, [pc, #16]	; (8017f34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8017f24:	6818      	ldr	r0, [r3, #0]
 8017f26:	6803      	ldr	r3, [r0, #0]
 8017f28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017f2a:	4798      	blx	r3
 8017f2c:	e750      	b.n	8017dd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017f2e:	bf00      	nop
 8017f30:	fffff800 	.word	0xfffff800
 8017f34:	20015488 	.word	0x20015488
 8017f38:	20015482 	.word	0x20015482

08017f3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017f3c:	b430      	push	{r4, r5}
 8017f3e:	780d      	ldrb	r5, [r1, #0]
 8017f40:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8017f44:	2d01      	cmp	r5, #1
 8017f46:	d00a      	beq.n	8017f5e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8017f48:	d305      	bcc.n	8017f56 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8017f4a:	2d02      	cmp	r5, #2
 8017f4c:	d10b      	bne.n	8017f66 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8017f4e:	9402      	str	r4, [sp, #8]
 8017f50:	bc30      	pop	{r4, r5}
 8017f52:	f7ff be15 	b.w	8017b80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8017f56:	9402      	str	r4, [sp, #8]
 8017f58:	bc30      	pop	{r4, r5}
 8017f5a:	f7ff bd2b 	b.w	80179b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8017f5e:	9402      	str	r4, [sp, #8]
 8017f60:	bc30      	pop	{r4, r5}
 8017f62:	f7ff bed9 	b.w	8017d18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8017f66:	bc30      	pop	{r4, r5}
 8017f68:	4770      	bx	lr
	...

08017f6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8017f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f70:	4604      	mov	r4, r0
 8017f72:	b087      	sub	sp, #28
 8017f74:	6810      	ldr	r0, [r2, #0]
 8017f76:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8017f7a:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80181b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8017f7e:	460e      	mov	r6, r1
 8017f80:	6851      	ldr	r1, [r2, #4]
 8017f82:	ad02      	add	r5, sp, #8
 8017f84:	c503      	stmia	r5!, {r0, r1}
 8017f86:	6818      	ldr	r0, [r3, #0]
 8017f88:	6859      	ldr	r1, [r3, #4]
 8017f8a:	ad04      	add	r5, sp, #16
 8017f8c:	4617      	mov	r7, r2
 8017f8e:	c503      	stmia	r5!, {r0, r1}
 8017f90:	a802      	add	r0, sp, #8
 8017f92:	f7f8 fd95 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f96:	4639      	mov	r1, r7
 8017f98:	a804      	add	r0, sp, #16
 8017f9a:	f7f8 fdb9 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f9e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017fa2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017fa6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8017faa:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017fae:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017fb2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017fb6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017fba:	440e      	add	r6, r1
 8017fbc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017fc0:	440a      	add	r2, r1
 8017fc2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017fc6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017fca:	4413      	add	r3, r2
 8017fcc:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017fd0:	4b77      	ldr	r3, [pc, #476]	; (80181b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8017fd2:	6818      	ldr	r0, [r3, #0]
 8017fd4:	6803      	ldr	r3, [r0, #0]
 8017fd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017fd8:	4798      	blx	r3
 8017fda:	f8b9 b000 	ldrh.w	fp, [r9]
 8017fde:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017fe2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017fe6:	fb0b 2303 	mla	r3, fp, r3, r2
 8017fea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017fee:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017ff2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017ff6:	fb05 f50b 	mul.w	r5, r5, fp
 8017ffa:	9300      	str	r3, [sp, #0]
 8017ffc:	d069      	beq.n	80180d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8017ffe:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018002:	4558      	cmp	r0, fp
 8018004:	f080 80cc 	bcs.w	80181a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018008:	9b00      	ldr	r3, [sp, #0]
 801800a:	18c3      	adds	r3, r0, r3
 801800c:	9301      	str	r3, [sp, #4]
 801800e:	4631      	mov	r1, r6
 8018010:	9b01      	ldr	r3, [sp, #4]
 8018012:	4298      	cmp	r0, r3
 8018014:	d24f      	bcs.n	80180b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018016:	f811 2b01 	ldrb.w	r2, [r1], #1
 801801a:	2a00      	cmp	r2, #0
 801801c:	d048      	beq.n	80180b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801801e:	fb0a f202 	mul.w	r2, sl, r2
 8018022:	1c53      	adds	r3, r2, #1
 8018024:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018028:	121b      	asrs	r3, r3, #8
 801802a:	d041      	beq.n	80180b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801802c:	8802      	ldrh	r2, [r0, #0]
 801802e:	f8b4 c000 	ldrh.w	ip, [r4]
 8018032:	b29e      	uxth	r6, r3
 8018034:	1215      	asrs	r5, r2, #8
 8018036:	43db      	mvns	r3, r3
 8018038:	b2db      	uxtb	r3, r3
 801803a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801803e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018042:	fb15 f503 	smulbb	r5, r5, r3
 8018046:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801804a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801804e:	00d2      	lsls	r2, r2, #3
 8018050:	fb07 5706 	mla	r7, r7, r6, r5
 8018054:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018058:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801805c:	b2d2      	uxtb	r2, r2
 801805e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018062:	b2bf      	uxth	r7, r7
 8018064:	fb1e fe03 	smulbb	lr, lr, r3
 8018068:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801806c:	fa5f fc8c 	uxtb.w	ip, ip
 8018070:	fb12 f203 	smulbb	r2, r2, r3
 8018074:	fb05 e506 	mla	r5, r5, r6, lr
 8018078:	fb0c 2c06 	mla	ip, ip, r6, r2
 801807c:	f107 0e01 	add.w	lr, r7, #1
 8018080:	fa1f fc8c 	uxth.w	ip, ip
 8018084:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018088:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801808c:	f10c 0701 	add.w	r7, ip, #1
 8018090:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018094:	b2ad      	uxth	r5, r5
 8018096:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801809a:	ea47 070e 	orr.w	r7, r7, lr
 801809e:	f105 0e01 	add.w	lr, r5, #1
 80180a2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80180a6:	096d      	lsrs	r5, r5, #5
 80180a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80180ac:	432f      	orrs	r7, r5
 80180ae:	8007      	strh	r7, [r0, #0]
 80180b0:	3002      	adds	r0, #2
 80180b2:	3402      	adds	r4, #2
 80180b4:	e7ac      	b.n	8018010 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80180b6:	f8b9 3000 	ldrh.w	r3, [r9]
 80180ba:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80180be:	eba3 0308 	sub.w	r3, r3, r8
 80180c2:	eba6 0608 	sub.w	r6, r6, r8
 80180c6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80180ca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80180ce:	440e      	add	r6, r1
 80180d0:	e797      	b.n	8018002 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80180d2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80180d6:	42a8      	cmp	r0, r5
 80180d8:	d262      	bcs.n	80181a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80180da:	9b00      	ldr	r3, [sp, #0]
 80180dc:	4631      	mov	r1, r6
 80180de:	eb00 0b03 	add.w	fp, r0, r3
 80180e2:	4558      	cmp	r0, fp
 80180e4:	d24e      	bcs.n	8018184 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80180e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80180ea:	b12b      	cbz	r3, 80180f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80180ec:	2bff      	cmp	r3, #255	; 0xff
 80180ee:	f8b4 e000 	ldrh.w	lr, [r4]
 80180f2:	d104      	bne.n	80180fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80180f4:	f8a0 e000 	strh.w	lr, [r0]
 80180f8:	3002      	adds	r0, #2
 80180fa:	3402      	adds	r4, #2
 80180fc:	e7f1      	b.n	80180e2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80180fe:	8802      	ldrh	r2, [r0, #0]
 8018100:	b29f      	uxth	r7, r3
 8018102:	1216      	asrs	r6, r2, #8
 8018104:	43db      	mvns	r3, r3
 8018106:	b2db      	uxtb	r3, r3
 8018108:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801810c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018110:	fb16 f603 	smulbb	r6, r6, r3
 8018114:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018118:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801811c:	00d2      	lsls	r2, r2, #3
 801811e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018122:	b2d2      	uxtb	r2, r2
 8018124:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018128:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801812c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018130:	fb1a fa03 	smulbb	sl, sl, r3
 8018134:	fa1f fc8c 	uxth.w	ip, ip
 8018138:	fb12 f303 	smulbb	r3, r2, r3
 801813c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018140:	fa5f fe8e 	uxtb.w	lr, lr
 8018144:	fb06 a607 	mla	r6, r6, r7, sl
 8018148:	f10c 0201 	add.w	r2, ip, #1
 801814c:	fb0e 3307 	mla	r3, lr, r7, r3
 8018150:	b2b6      	uxth	r6, r6
 8018152:	b29b      	uxth	r3, r3
 8018154:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018158:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801815c:	f106 0a01 	add.w	sl, r6, #1
 8018160:	f103 0c01 	add.w	ip, r3, #1
 8018164:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018168:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801816c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018170:	0976      	lsrs	r6, r6, #5
 8018172:	ea4c 0c02 	orr.w	ip, ip, r2
 8018176:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801817a:	ea4c 0c06 	orr.w	ip, ip, r6
 801817e:	f8a0 c000 	strh.w	ip, [r0]
 8018182:	e7b9      	b.n	80180f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018184:	f8b9 3000 	ldrh.w	r3, [r9]
 8018188:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801818c:	eba3 0308 	sub.w	r3, r3, r8
 8018190:	eba6 0608 	sub.w	r6, r6, r8
 8018194:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018198:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801819c:	440e      	add	r6, r1
 801819e:	e79a      	b.n	80180d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80181a0:	4b03      	ldr	r3, [pc, #12]	; (80181b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80181a2:	6818      	ldr	r0, [r3, #0]
 80181a4:	6803      	ldr	r3, [r0, #0]
 80181a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80181a8:	4798      	blx	r3
 80181aa:	b007      	add	sp, #28
 80181ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181b0:	20015488 	.word	0x20015488
 80181b4:	20015482 	.word	0x20015482

080181b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80181b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181bc:	b089      	sub	sp, #36	; 0x24
 80181be:	4682      	mov	sl, r0
 80181c0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80181c4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80181c6:	460f      	mov	r7, r1
 80181c8:	4691      	mov	r9, r2
 80181ca:	4698      	mov	r8, r3
 80181cc:	2e00      	cmp	r6, #0
 80181ce:	d036      	beq.n	801823e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80181d0:	4608      	mov	r0, r1
 80181d2:	f7fc f863 	bl	801429c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80181d6:	4605      	mov	r5, r0
 80181d8:	4638      	mov	r0, r7
 80181da:	f7fc f893 	bl	8014304 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80181de:	f8ad 000e 	strh.w	r0, [sp, #14]
 80181e2:	4638      	mov	r0, r7
 80181e4:	f8ad 9008 	strh.w	r9, [sp, #8]
 80181e8:	f8ad 500c 	strh.w	r5, [sp, #12]
 80181ec:	f8ad 800a 	strh.w	r8, [sp, #10]
 80181f0:	f7fc f940 	bl	8014474 <_ZNK8touchgfx6Bitmap7getDataEv>
 80181f4:	4605      	mov	r5, r0
 80181f6:	4638      	mov	r0, r7
 80181f8:	f7fc f96c 	bl	80144d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80181fc:	4681      	mov	r9, r0
 80181fe:	4638      	mov	r0, r7
 8018200:	f7fc f9bc 	bl	801457c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018204:	280b      	cmp	r0, #11
 8018206:	d81a      	bhi.n	801823e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018208:	e8df f000 	tbb	[pc, r0]
 801820c:	1906aebd 	.word	0x1906aebd
 8018210:	19191919 	.word	0x19191919
 8018214:	b5191919 	.word	0xb5191919
 8018218:	4bb0      	ldr	r3, [pc, #704]	; (80184dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801821a:	6818      	ldr	r0, [r3, #0]
 801821c:	6803      	ldr	r3, [r0, #0]
 801821e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018220:	4798      	blx	r3
 8018222:	2eff      	cmp	r6, #255	; 0xff
 8018224:	d121      	bne.n	801826a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8018226:	0683      	lsls	r3, r0, #26
 8018228:	d41f      	bmi.n	801826a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801822a:	4638      	mov	r0, r7
 801822c:	f7fc f8ea 	bl	8014404 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018230:	b940      	cbnz	r0, 8018244 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018232:	4623      	mov	r3, r4
 8018234:	aa02      	add	r2, sp, #8
 8018236:	4629      	mov	r1, r5
 8018238:	4650      	mov	r0, sl
 801823a:	f7ff fa2f 	bl	801769c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801823e:	b009      	add	sp, #36	; 0x24
 8018240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018244:	f10d 0818 	add.w	r8, sp, #24
 8018248:	4639      	mov	r1, r7
 801824a:	4640      	mov	r0, r8
 801824c:	f7fc f88e 	bl	801436c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018250:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018254:	af04      	add	r7, sp, #16
 8018256:	e887 0003 	stmia.w	r7, {r0, r1}
 801825a:	4638      	mov	r0, r7
 801825c:	4621      	mov	r1, r4
 801825e:	f7f2 fc4d 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 8018262:	4638      	mov	r0, r7
 8018264:	f7f2 fc8d 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018268:	b130      	cbz	r0, 8018278 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801826a:	4633      	mov	r3, r6
 801826c:	4622      	mov	r2, r4
 801826e:	a902      	add	r1, sp, #8
 8018270:	4628      	mov	r0, r5
 8018272:	f7ff f92d 	bl	80174d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018276:	e7e2      	b.n	801823e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018278:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801827c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018280:	4293      	cmp	r3, r2
 8018282:	dd12      	ble.n	80182aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8018284:	1a9b      	subs	r3, r3, r2
 8018286:	f9b4 0000 	ldrsh.w	r0, [r4]
 801828a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801828e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018292:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018296:	f8ad 101c 	strh.w	r1, [sp, #28]
 801829a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801829e:	4642      	mov	r2, r8
 80182a0:	4633      	mov	r3, r6
 80182a2:	a902      	add	r1, sp, #8
 80182a4:	4628      	mov	r0, r5
 80182a6:	f7ff f913 	bl	80174d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80182aa:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80182ae:	f9b4 2000 	ldrsh.w	r2, [r4]
 80182b2:	4293      	cmp	r3, r2
 80182b4:	dd12      	ble.n	80182dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 80182b6:	1a9b      	subs	r3, r3, r2
 80182b8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80182bc:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80182c0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80182c4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80182c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80182cc:	f8ad 101e 	strh.w	r1, [sp, #30]
 80182d0:	23ff      	movs	r3, #255	; 0xff
 80182d2:	4642      	mov	r2, r8
 80182d4:	a902      	add	r1, sp, #8
 80182d6:	4628      	mov	r0, r5
 80182d8:	f7ff f8fa 	bl	80174d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80182dc:	463b      	mov	r3, r7
 80182de:	aa02      	add	r2, sp, #8
 80182e0:	4629      	mov	r1, r5
 80182e2:	4650      	mov	r0, sl
 80182e4:	f7ff f9da 	bl	801769c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80182e8:	88a2      	ldrh	r2, [r4, #4]
 80182ea:	8823      	ldrh	r3, [r4, #0]
 80182ec:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80182f0:	4413      	add	r3, r2
 80182f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80182f6:	440a      	add	r2, r1
 80182f8:	b29b      	uxth	r3, r3
 80182fa:	b292      	uxth	r2, r2
 80182fc:	b211      	sxth	r1, r2
 80182fe:	b218      	sxth	r0, r3
 8018300:	4288      	cmp	r0, r1
 8018302:	dd12      	ble.n	801832a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018304:	1a9b      	subs	r3, r3, r2
 8018306:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801830a:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801830e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018312:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018316:	f8ad 001e 	strh.w	r0, [sp, #30]
 801831a:	23ff      	movs	r3, #255	; 0xff
 801831c:	4642      	mov	r2, r8
 801831e:	a902      	add	r1, sp, #8
 8018320:	4628      	mov	r0, r5
 8018322:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018326:	f7ff f8d3 	bl	80174d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801832a:	88e2      	ldrh	r2, [r4, #6]
 801832c:	8863      	ldrh	r3, [r4, #2]
 801832e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018332:	4413      	add	r3, r2
 8018334:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018338:	440a      	add	r2, r1
 801833a:	b29b      	uxth	r3, r3
 801833c:	b292      	uxth	r2, r2
 801833e:	b211      	sxth	r1, r2
 8018340:	b218      	sxth	r0, r3
 8018342:	4288      	cmp	r0, r1
 8018344:	f77f af7b 	ble.w	801823e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018348:	1a9b      	subs	r3, r3, r2
 801834a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801834e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018352:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018356:	f8ad 6018 	strh.w	r6, [sp, #24]
 801835a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801835e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018362:	23ff      	movs	r3, #255	; 0xff
 8018364:	4642      	mov	r2, r8
 8018366:	e782      	b.n	801826e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8018368:	4633      	mov	r3, r6
 801836a:	4622      	mov	r2, r4
 801836c:	a902      	add	r1, sp, #8
 801836e:	4628      	mov	r0, r5
 8018370:	f7ff fa04 	bl	801777c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018374:	e763      	b.n	801823e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018376:	9600      	str	r6, [sp, #0]
 8018378:	4623      	mov	r3, r4
 801837a:	aa02      	add	r2, sp, #8
 801837c:	4649      	mov	r1, r9
 801837e:	4628      	mov	r0, r5
 8018380:	f7ff fddc 	bl	8017f3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018384:	e75b      	b.n	801823e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018386:	4638      	mov	r0, r7
 8018388:	f7fc f83c 	bl	8014404 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801838c:	b950      	cbnz	r0, 80183a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 801838e:	e9cd 6000 	strd	r6, r0, [sp]
 8018392:	f8da 3000 	ldr.w	r3, [sl]
 8018396:	aa02      	add	r2, sp, #8
 8018398:	68de      	ldr	r6, [r3, #12]
 801839a:	4629      	mov	r1, r5
 801839c:	4623      	mov	r3, r4
 801839e:	4650      	mov	r0, sl
 80183a0:	47b0      	blx	r6
 80183a2:	e74c      	b.n	801823e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80183a4:	f10d 0818 	add.w	r8, sp, #24
 80183a8:	4639      	mov	r1, r7
 80183aa:	4640      	mov	r0, r8
 80183ac:	f7fb ffde 	bl	801436c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80183b0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80183b4:	af04      	add	r7, sp, #16
 80183b6:	e887 0003 	stmia.w	r7, {r0, r1}
 80183ba:	4638      	mov	r0, r7
 80183bc:	4621      	mov	r1, r4
 80183be:	f7f2 fb9d 	bl	800aafc <_ZN8touchgfx4RectaNERKS0_>
 80183c2:	4638      	mov	r0, r7
 80183c4:	f7f2 fbdd 	bl	800ab82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80183c8:	b138      	cbz	r0, 80183da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 80183ca:	9600      	str	r6, [sp, #0]
 80183cc:	4623      	mov	r3, r4
 80183ce:	aa02      	add	r2, sp, #8
 80183d0:	4649      	mov	r1, r9
 80183d2:	4628      	mov	r0, r5
 80183d4:	f7ff fdca 	bl	8017f6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80183d8:	e731      	b.n	801823e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80183da:	e9cd 6000 	strd	r6, r0, [sp]
 80183de:	f8da 3000 	ldr.w	r3, [sl]
 80183e2:	aa02      	add	r2, sp, #8
 80183e4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80183e8:	4629      	mov	r1, r5
 80183ea:	463b      	mov	r3, r7
 80183ec:	4650      	mov	r0, sl
 80183ee:	47d8      	blx	fp
 80183f0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80183f4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80183f8:	4293      	cmp	r3, r2
 80183fa:	dd13      	ble.n	8018424 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 80183fc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018400:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018404:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018408:	1a9b      	subs	r3, r3, r2
 801840a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801840e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018412:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018416:	9600      	str	r6, [sp, #0]
 8018418:	4643      	mov	r3, r8
 801841a:	aa02      	add	r2, sp, #8
 801841c:	4649      	mov	r1, r9
 801841e:	4628      	mov	r0, r5
 8018420:	f7ff fda4 	bl	8017f6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018424:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018428:	f9b4 2000 	ldrsh.w	r2, [r4]
 801842c:	4293      	cmp	r3, r2
 801842e:	dd13      	ble.n	8018458 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018430:	1a9b      	subs	r3, r3, r2
 8018432:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018436:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801843a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801843e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018442:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018446:	f8ad 101e 	strh.w	r1, [sp, #30]
 801844a:	9600      	str	r6, [sp, #0]
 801844c:	4643      	mov	r3, r8
 801844e:	aa02      	add	r2, sp, #8
 8018450:	4649      	mov	r1, r9
 8018452:	4628      	mov	r0, r5
 8018454:	f7ff fd8a 	bl	8017f6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018458:	88a2      	ldrh	r2, [r4, #4]
 801845a:	8823      	ldrh	r3, [r4, #0]
 801845c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018460:	4413      	add	r3, r2
 8018462:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018466:	440a      	add	r2, r1
 8018468:	b29b      	uxth	r3, r3
 801846a:	b292      	uxth	r2, r2
 801846c:	b211      	sxth	r1, r2
 801846e:	b218      	sxth	r0, r3
 8018470:	4288      	cmp	r0, r1
 8018472:	dd13      	ble.n	801849c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8018474:	1a9b      	subs	r3, r3, r2
 8018476:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801847a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801847e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018482:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018486:	f8ad 001e 	strh.w	r0, [sp, #30]
 801848a:	9600      	str	r6, [sp, #0]
 801848c:	4643      	mov	r3, r8
 801848e:	aa02      	add	r2, sp, #8
 8018490:	4649      	mov	r1, r9
 8018492:	4628      	mov	r0, r5
 8018494:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018498:	f7ff fd68 	bl	8017f6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801849c:	88e2      	ldrh	r2, [r4, #6]
 801849e:	8863      	ldrh	r3, [r4, #2]
 80184a0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80184a4:	4413      	add	r3, r2
 80184a6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80184aa:	440a      	add	r2, r1
 80184ac:	b29b      	uxth	r3, r3
 80184ae:	b292      	uxth	r2, r2
 80184b0:	b211      	sxth	r1, r2
 80184b2:	b218      	sxth	r0, r3
 80184b4:	4288      	cmp	r0, r1
 80184b6:	f77f aec2 	ble.w	801823e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80184ba:	f9b4 7000 	ldrsh.w	r7, [r4]
 80184be:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80184c2:	f8ad 7018 	strh.w	r7, [sp, #24]
 80184c6:	1a9b      	subs	r3, r3, r2
 80184c8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80184cc:	f8ad 101a 	strh.w	r1, [sp, #26]
 80184d0:	f8ad 001c 	strh.w	r0, [sp, #28]
 80184d4:	9600      	str	r6, [sp, #0]
 80184d6:	4643      	mov	r3, r8
 80184d8:	e779      	b.n	80183ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 80184da:	bf00      	nop
 80184dc:	20015488 	.word	0x20015488

080184e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80184e0:	b180      	cbz	r0, 8018504 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80184e2:	2903      	cmp	r1, #3
 80184e4:	d81c      	bhi.n	8018520 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80184e6:	e8df f001 	tbb	[pc, r1]
 80184ea:	1d02      	.short	0x1d02
 80184ec:	1f08      	.short	0x1f08
 80184ee:	4b10      	ldr	r3, [pc, #64]	; (8018530 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80184f0:	8818      	ldrh	r0, [r3, #0]
 80184f2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80184f6:	4240      	negs	r0, r0
 80184f8:	4770      	bx	lr
 80184fa:	4b0d      	ldr	r3, [pc, #52]	; (8018530 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80184fc:	8818      	ldrh	r0, [r3, #0]
 80184fe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018502:	4770      	bx	lr
 8018504:	2903      	cmp	r1, #3
 8018506:	d80b      	bhi.n	8018520 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018508:	a301      	add	r3, pc, #4	; (adr r3, 8018510 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801850a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801850e:	bf00      	nop
 8018510:	08018525 	.word	0x08018525
 8018514:	080184fb 	.word	0x080184fb
 8018518:	08018529 	.word	0x08018529
 801851c:	080184ef 	.word	0x080184ef
 8018520:	2000      	movs	r0, #0
 8018522:	4770      	bx	lr
 8018524:	2001      	movs	r0, #1
 8018526:	4770      	bx	lr
 8018528:	f04f 30ff 	mov.w	r0, #4294967295
 801852c:	4770      	bx	lr
 801852e:	bf00      	nop
 8018530:	20015482 	.word	0x20015482

08018534 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018534:	b180      	cbz	r0, 8018558 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018536:	2903      	cmp	r1, #3
 8018538:	d81c      	bhi.n	8018574 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801853a:	e8df f001 	tbb	[pc, r1]
 801853e:	021d      	.short	0x021d
 8018540:	071f      	.short	0x071f
 8018542:	4b10      	ldr	r3, [pc, #64]	; (8018584 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018544:	8818      	ldrh	r0, [r3, #0]
 8018546:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801854a:	4770      	bx	lr
 801854c:	4b0d      	ldr	r3, [pc, #52]	; (8018584 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801854e:	8818      	ldrh	r0, [r3, #0]
 8018550:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018554:	4240      	negs	r0, r0
 8018556:	4770      	bx	lr
 8018558:	2903      	cmp	r1, #3
 801855a:	d80b      	bhi.n	8018574 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801855c:	a301      	add	r3, pc, #4	; (adr r3, 8018564 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801855e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018562:	bf00      	nop
 8018564:	08018543 	.word	0x08018543
 8018568:	0801857d 	.word	0x0801857d
 801856c:	0801854d 	.word	0x0801854d
 8018570:	08018579 	.word	0x08018579
 8018574:	2000      	movs	r0, #0
 8018576:	4770      	bx	lr
 8018578:	2001      	movs	r0, #1
 801857a:	4770      	bx	lr
 801857c:	f04f 30ff 	mov.w	r0, #4294967295
 8018580:	4770      	bx	lr
 8018582:	bf00      	nop
 8018584:	20015482 	.word	0x20015482

08018588 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801858c:	b099      	sub	sp, #100	; 0x64
 801858e:	910b      	str	r1, [sp, #44]	; 0x2c
 8018590:	a914      	add	r1, sp, #80	; 0x50
 8018592:	e881 000c 	stmia.w	r1, {r2, r3}
 8018596:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801859a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801859e:	f891 900d 	ldrb.w	r9, [r1, #13]
 80185a2:	9309      	str	r3, [sp, #36]	; 0x24
 80185a4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80185a8:	9310      	str	r3, [sp, #64]	; 0x40
 80185aa:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80185ae:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80185b2:	930c      	str	r3, [sp, #48]	; 0x30
 80185b4:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80185b8:	798f      	ldrb	r7, [r1, #6]
 80185ba:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80185be:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80185c2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80185c6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80185ca:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80185ce:	431f      	orrs	r7, r3
 80185d0:	f000 8195 	beq.w	80188fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80185d4:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80185d8:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80185dc:	f891 9007 	ldrb.w	r9, [r1, #7]
 80185e0:	ea59 0903 	orrs.w	r9, r9, r3
 80185e4:	f000 818b 	beq.w	80188fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80185e8:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80185ec:	b29b      	uxth	r3, r3
 80185ee:	2d00      	cmp	r5, #0
 80185f0:	f000 812e 	beq.w	8018850 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80185f4:	1aed      	subs	r5, r5, r3
 80185f6:	b2ad      	uxth	r5, r5
 80185f8:	042b      	lsls	r3, r5, #16
 80185fa:	d502      	bpl.n	8018602 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80185fc:	1b64      	subs	r4, r4, r5
 80185fe:	b224      	sxth	r4, r4
 8018600:	2500      	movs	r5, #0
 8018602:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018606:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801860a:	428c      	cmp	r4, r1
 801860c:	b28b      	uxth	r3, r1
 801860e:	bfbf      	itttt	lt
 8018610:	18ed      	addlt	r5, r5, r3
 8018612:	1b2c      	sublt	r4, r5, r4
 8018614:	b2a5      	uxthlt	r5, r4
 8018616:	460c      	movlt	r4, r1
 8018618:	8891      	ldrh	r1, [r2, #4]
 801861a:	440b      	add	r3, r1
 801861c:	b21b      	sxth	r3, r3
 801861e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018620:	88d3      	ldrh	r3, [r2, #6]
 8018622:	8852      	ldrh	r2, [r2, #2]
 8018624:	4413      	add	r3, r2
 8018626:	b21b      	sxth	r3, r3
 8018628:	930d      	str	r3, [sp, #52]	; 0x34
 801862a:	4bbe      	ldr	r3, [pc, #760]	; (8018924 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801862c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801862e:	f893 b000 	ldrb.w	fp, [r3]
 8018632:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018636:	f1dc 0300 	rsbs	r3, ip, #0
 801863a:	eb43 030c 	adc.w	r3, r3, ip
 801863e:	930e      	str	r3, [sp, #56]	; 0x38
 8018640:	4621      	mov	r1, r4
 8018642:	4653      	mov	r3, sl
 8018644:	a814      	add	r0, sp, #80	; 0x50
 8018646:	f7f8 f8b5 	bl	80107b4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801864a:	4621      	mov	r1, r4
 801864c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018650:	4653      	mov	r3, sl
 8018652:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018654:	a814      	add	r0, sp, #80	; 0x50
 8018656:	f7f8 f8ca 	bl	80107ee <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801865a:	a918      	add	r1, sp, #96	; 0x60
 801865c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018660:	a817      	add	r0, sp, #92	; 0x5c
 8018662:	f7f8 f9eb 	bl	8010a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018666:	f1ba 0f00 	cmp.w	sl, #0
 801866a:	f040 80f4 	bne.w	8018856 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801866e:	f1bb 0f01 	cmp.w	fp, #1
 8018672:	f040 80f8 	bne.w	8018866 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018676:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018678:	2b00      	cmp	r3, #0
 801867a:	f040 8145 	bne.w	8018908 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801867e:	b2ba      	uxth	r2, r7
 8018680:	b905      	cbnz	r5, 8018684 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018682:	b16e      	cbz	r6, 80186a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018684:	fb06 5302 	mla	r3, r6, r2, r5
 8018688:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801868a:	fb08 f303 	mul.w	r3, r8, r3
 801868e:	4631      	mov	r1, r6
 8018690:	f003 0607 	and.w	r6, r3, #7
 8018694:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018698:	9328      	str	r3, [sp, #160]	; 0xa0
 801869a:	eba9 0301 	sub.w	r3, r9, r1
 801869e:	930a      	str	r3, [sp, #40]	; 0x28
 80186a0:	4651      	mov	r1, sl
 80186a2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80186a4:	f7ff ff1c 	bl	80184e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80186a8:	4681      	mov	r9, r0
 80186aa:	980e      	ldr	r0, [sp, #56]	; 0x38
 80186ac:	f7ff ff42 	bl	8018534 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80186b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80186b2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80186b4:	eba3 0a01 	sub.w	sl, r3, r1
 80186b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80186ba:	459a      	cmp	sl, r3
 80186bc:	bfa8      	it	ge
 80186be:	469a      	movge	sl, r3
 80186c0:	f1ba 0f00 	cmp.w	sl, #0
 80186c4:	4683      	mov	fp, r0
 80186c6:	f340 811a 	ble.w	80188fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80186ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80186cc:	1b64      	subs	r4, r4, r5
 80186ce:	1b1c      	subs	r4, r3, r4
 80186d0:	42bc      	cmp	r4, r7
 80186d2:	bfd4      	ite	le
 80186d4:	ebc5 0504 	rsble	r5, r5, r4
 80186d8:	ebc5 0507 	rsbgt	r5, r5, r7
 80186dc:	2d00      	cmp	r5, #0
 80186de:	f340 810e 	ble.w	80188fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80186e2:	1b52      	subs	r2, r2, r5
 80186e4:	fb08 f302 	mul.w	r3, r8, r2
 80186e8:	930f      	str	r3, [sp, #60]	; 0x3c
 80186ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80186ec:	2b00      	cmp	r3, #0
 80186ee:	f040 8116 	bne.w	801891e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80186f2:	4b8d      	ldr	r3, [pc, #564]	; (8018928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80186f4:	6818      	ldr	r0, [r3, #0]
 80186f6:	6803      	ldr	r3, [r0, #0]
 80186f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80186fa:	4798      	blx	r3
 80186fc:	2301      	movs	r3, #1
 80186fe:	fa03 f308 	lsl.w	r3, r3, r8
 8018702:	4a8a      	ldr	r2, [pc, #552]	; (801892c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018704:	3b01      	subs	r3, #1
 8018706:	b2db      	uxtb	r3, r3
 8018708:	8811      	ldrh	r1, [r2, #0]
 801870a:	930e      	str	r3, [sp, #56]	; 0x38
 801870c:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018710:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018714:	fb01 2303 	mla	r3, r1, r3, r2
 8018718:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801871c:	930a      	str	r3, [sp, #40]	; 0x28
 801871e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018720:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018724:	9313      	str	r3, [sp, #76]	; 0x4c
 8018726:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018728:	0a19      	lsrs	r1, r3, #8
 801872a:	b2cb      	uxtb	r3, r1
 801872c:	9312      	str	r3, [sp, #72]	; 0x48
 801872e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018730:	b2db      	uxtb	r3, r3
 8018732:	9311      	str	r3, [sp, #68]	; 0x44
 8018734:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018736:	095a      	lsrs	r2, r3, #5
 8018738:	4b7d      	ldr	r3, [pc, #500]	; (8018930 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801873a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801873e:	400b      	ands	r3, r1
 8018740:	4313      	orrs	r3, r2
 8018742:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018744:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018748:	4313      	orrs	r3, r2
 801874a:	b29b      	uxth	r3, r3
 801874c:	9310      	str	r3, [sp, #64]	; 0x40
 801874e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018750:	781a      	ldrb	r2, [r3, #0]
 8018752:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018756:	4132      	asrs	r2, r6
 8018758:	fb05 b919 	mls	r9, r5, r9, fp
 801875c:	fb03 fb05 	mul.w	fp, r3, r5
 8018760:	b2d2      	uxtb	r2, r2
 8018762:	930d      	str	r3, [sp, #52]	; 0x34
 8018764:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018768:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801876c:	f0c0 80f5 	bcc.w	801895a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018770:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018774:	46ae      	mov	lr, r5
 8018776:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801877a:	f0c0 80dd 	bcc.w	8018938 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801877e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018780:	4013      	ands	r3, r2
 8018782:	d055      	beq.n	8018830 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018784:	20ff      	movs	r0, #255	; 0xff
 8018786:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018788:	fb90 f1f1 	sdiv	r1, r0, r1
 801878c:	434b      	muls	r3, r1
 801878e:	2bfe      	cmp	r3, #254	; 0xfe
 8018790:	dd03      	ble.n	801879a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018792:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018794:	4281      	cmp	r1, r0
 8018796:	f000 80cd 	beq.w	8018934 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801879a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801879c:	f8bc 4000 	ldrh.w	r4, [ip]
 80187a0:	fb11 f303 	smulbb	r3, r1, r3
 80187a4:	b29b      	uxth	r3, r3
 80187a6:	1c59      	adds	r1, r3, #1
 80187a8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80187ac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80187b0:	b29f      	uxth	r7, r3
 80187b2:	43db      	mvns	r3, r3
 80187b4:	b2db      	uxtb	r3, r3
 80187b6:	9309      	str	r3, [sp, #36]	; 0x24
 80187b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80187ba:	1220      	asrs	r0, r4, #8
 80187bc:	fb13 f907 	smulbb	r9, r3, r7
 80187c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80187c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187c6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80187ca:	fb00 9003 	mla	r0, r0, r3, r9
 80187ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80187d0:	10e1      	asrs	r1, r4, #3
 80187d2:	fb13 f907 	smulbb	r9, r3, r7
 80187d6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80187da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187dc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80187e0:	fb01 9103 	mla	r1, r1, r3, r9
 80187e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80187e6:	00e4      	lsls	r4, r4, #3
 80187e8:	fb13 f707 	smulbb	r7, r3, r7
 80187ec:	b2e4      	uxtb	r4, r4
 80187ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187f0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80187f4:	fb04 7403 	mla	r4, r4, r3, r7
 80187f8:	b280      	uxth	r0, r0
 80187fa:	b2a4      	uxth	r4, r4
 80187fc:	1c43      	adds	r3, r0, #1
 80187fe:	f104 0901 	add.w	r9, r4, #1
 8018802:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018806:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801880a:	b289      	uxth	r1, r1
 801880c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018810:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018814:	ea49 0000 	orr.w	r0, r9, r0
 8018818:	f101 0901 	add.w	r9, r1, #1
 801881c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018820:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018824:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018828:	ea40 0009 	orr.w	r0, r0, r9
 801882c:	f8ac 0000 	strh.w	r0, [ip]
 8018830:	4446      	add	r6, r8
 8018832:	b2b6      	uxth	r6, r6
 8018834:	2e07      	cmp	r6, #7
 8018836:	bf81      	itttt	hi
 8018838:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801883a:	785a      	ldrbhi	r2, [r3, #1]
 801883c:	3301      	addhi	r3, #1
 801883e:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018840:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018842:	bf9a      	itte	ls
 8018844:	fa42 f208 	asrls.w	r2, r2, r8
 8018848:	b2d2      	uxtbls	r2, r2
 801884a:	2600      	movhi	r6, #0
 801884c:	449c      	add	ip, r3
 801884e:	e792      	b.n	8018776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018850:	441c      	add	r4, r3
 8018852:	b224      	sxth	r4, r4
 8018854:	e6d5      	b.n	8018602 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018856:	f1ba 0f01 	cmp.w	sl, #1
 801885a:	f47f af0c 	bne.w	8018676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801885e:	f1bb 0f01 	cmp.w	fp, #1
 8018862:	f47f af08 	bne.w	8018676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018866:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801886a:	f8db 0000 	ldr.w	r0, [fp]
 801886e:	6803      	ldr	r3, [r0, #0]
 8018870:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018872:	4798      	blx	r3
 8018874:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018878:	465a      	mov	r2, fp
 801887a:	d006      	beq.n	801888a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801887c:	f1b8 0f04 	cmp.w	r8, #4
 8018880:	d140      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018882:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018884:	3300      	adds	r3, #0
 8018886:	bf18      	it	ne
 8018888:	2301      	movne	r3, #1
 801888a:	0580      	lsls	r0, r0, #22
 801888c:	d56e      	bpl.n	801896c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801888e:	f1b8 0f08 	cmp.w	r8, #8
 8018892:	d16b      	bne.n	801896c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018894:	2b00      	cmp	r3, #0
 8018896:	bf0c      	ite	eq
 8018898:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801889c:	f44f 7180 	movne.w	r1, #256	; 0x100
 80188a0:	2d00      	cmp	r5, #0
 80188a2:	f47f aee8 	bne.w	8018676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188a6:	2e00      	cmp	r6, #0
 80188a8:	f47f aee5 	bne.w	8018676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188ac:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80188ae:	19e3      	adds	r3, r4, r7
 80188b0:	4283      	cmp	r3, r0
 80188b2:	f73f aee0 	bgt.w	8018676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80188b8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80188ba:	444b      	add	r3, r9
 80188bc:	4283      	cmp	r3, r0
 80188be:	f73f aeda 	bgt.w	8018676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188c2:	6810      	ldr	r0, [r2, #0]
 80188c4:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80188c8:	6804      	ldr	r4, [r0, #0]
 80188ca:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80188ce:	b2bf      	uxth	r7, r7
 80188d0:	f1b8 0f08 	cmp.w	r8, #8
 80188d4:	f04f 0500 	mov.w	r5, #0
 80188d8:	bf18      	it	ne
 80188da:	3701      	addne	r7, #1
 80188dc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80188e0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80188e2:	9104      	str	r1, [sp, #16]
 80188e4:	bf18      	it	ne
 80188e6:	f027 0701 	bicne.w	r7, r7, #1
 80188ea:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80188ec:	bf18      	it	ne
 80188ee:	b2bf      	uxthne	r7, r7
 80188f0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80188f4:	e9cd 7900 	strd	r7, r9, [sp]
 80188f8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80188fa:	6d64      	ldr	r4, [r4, #84]	; 0x54
 80188fc:	47a0      	blx	r4
 80188fe:	b019      	add	sp, #100	; 0x64
 8018900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018904:	2300      	movs	r3, #0
 8018906:	e7c0      	b.n	801888a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018908:	2208      	movs	r2, #8
 801890a:	fb92 f3f8 	sdiv	r3, r2, r8
 801890e:	1e5a      	subs	r2, r3, #1
 8018910:	443a      	add	r2, r7
 8018912:	fb92 f2f3 	sdiv	r2, r2, r3
 8018916:	fb12 f203 	smulbb	r2, r2, r3
 801891a:	b292      	uxth	r2, r2
 801891c:	e6b0      	b.n	8018680 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801891e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018920:	e6ec      	b.n	80186fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018922:	bf00      	nop
 8018924:	20015480 	.word	0x20015480
 8018928:	20015488 	.word	0x20015488
 801892c:	20015482 	.word	0x20015482
 8018930:	00fff800 	.word	0x00fff800
 8018934:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018936:	e779      	b.n	801882c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018938:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801893a:	b153      	cbz	r3, 8018952 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801893c:	441e      	add	r6, r3
 801893e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018940:	b2b6      	uxth	r6, r6
 8018942:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018946:	f006 0607 	and.w	r6, r6, #7
 801894a:	781a      	ldrb	r2, [r3, #0]
 801894c:	9328      	str	r3, [sp, #160]	; 0xa0
 801894e:	4132      	asrs	r2, r6
 8018950:	b2d2      	uxtb	r2, r2
 8018952:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018954:	445b      	add	r3, fp
 8018956:	930a      	str	r3, [sp, #40]	; 0x28
 8018958:	e706      	b.n	8018768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801895a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801895c:	2b00      	cmp	r3, #0
 801895e:	d1ce      	bne.n	80188fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018960:	4b05      	ldr	r3, [pc, #20]	; (8018978 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018962:	6818      	ldr	r0, [r3, #0]
 8018964:	6803      	ldr	r3, [r0, #0]
 8018966:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018968:	4798      	blx	r3
 801896a:	e7c8      	b.n	80188fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801896c:	2b00      	cmp	r3, #0
 801896e:	f43f ae82 	beq.w	8018676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018972:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018976:	e793      	b.n	80188a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018978:	20015488 	.word	0x20015488

0801897c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801897c:	b538      	push	{r3, r4, r5, lr}
 801897e:	4c15      	ldr	r4, [pc, #84]	; (80189d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018980:	7823      	ldrb	r3, [r4, #0]
 8018982:	f3bf 8f5b 	dmb	ish
 8018986:	07da      	lsls	r2, r3, #31
 8018988:	4605      	mov	r5, r0
 801898a:	d40b      	bmi.n	80189a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801898c:	4620      	mov	r0, r4
 801898e:	f007 fd73 	bl	8020478 <__cxa_guard_acquire>
 8018992:	b138      	cbz	r0, 80189a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018994:	4620      	mov	r0, r4
 8018996:	f007 fd7b 	bl	8020490 <__cxa_guard_release>
 801899a:	4a0f      	ldr	r2, [pc, #60]	; (80189d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801899c:	490f      	ldr	r1, [pc, #60]	; (80189dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801899e:	4810      	ldr	r0, [pc, #64]	; (80189e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80189a0:	f007 fd63 	bl	802046a <__aeabi_atexit>
 80189a4:	4c0f      	ldr	r4, [pc, #60]	; (80189e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80189a6:	7823      	ldrb	r3, [r4, #0]
 80189a8:	f3bf 8f5b 	dmb	ish
 80189ac:	07db      	lsls	r3, r3, #31
 80189ae:	d40b      	bmi.n	80189c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80189b0:	4620      	mov	r0, r4
 80189b2:	f007 fd61 	bl	8020478 <__cxa_guard_acquire>
 80189b6:	b138      	cbz	r0, 80189c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80189b8:	4620      	mov	r0, r4
 80189ba:	f007 fd69 	bl	8020490 <__cxa_guard_release>
 80189be:	4a06      	ldr	r2, [pc, #24]	; (80189d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80189c0:	4909      	ldr	r1, [pc, #36]	; (80189e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80189c2:	480a      	ldr	r0, [pc, #40]	; (80189ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80189c4:	f007 fd51 	bl	802046a <__aeabi_atexit>
 80189c8:	4b05      	ldr	r3, [pc, #20]	; (80189e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80189ca:	612b      	str	r3, [r5, #16]
 80189cc:	4b07      	ldr	r3, [pc, #28]	; (80189ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80189ce:	616b      	str	r3, [r5, #20]
 80189d0:	bd38      	pop	{r3, r4, r5, pc}
 80189d2:	bf00      	nop
 80189d4:	2001555c 	.word	0x2001555c
 80189d8:	20000000 	.word	0x20000000
 80189dc:	08016b8d 	.word	0x08016b8d
 80189e0:	200000d0 	.word	0x200000d0
 80189e4:	20015560 	.word	0x20015560
 80189e8:	08016b8b 	.word	0x08016b8b
 80189ec:	200000d4 	.word	0x200000d4

080189f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80189f0:	b538      	push	{r3, r4, r5, lr}
 80189f2:	4c15      	ldr	r4, [pc, #84]	; (8018a48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80189f4:	7823      	ldrb	r3, [r4, #0]
 80189f6:	f3bf 8f5b 	dmb	ish
 80189fa:	07da      	lsls	r2, r3, #31
 80189fc:	4605      	mov	r5, r0
 80189fe:	d40b      	bmi.n	8018a18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018a00:	4620      	mov	r0, r4
 8018a02:	f007 fd39 	bl	8020478 <__cxa_guard_acquire>
 8018a06:	b138      	cbz	r0, 8018a18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018a08:	4620      	mov	r0, r4
 8018a0a:	f007 fd41 	bl	8020490 <__cxa_guard_release>
 8018a0e:	4a0f      	ldr	r2, [pc, #60]	; (8018a4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018a10:	490f      	ldr	r1, [pc, #60]	; (8018a50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018a12:	4810      	ldr	r0, [pc, #64]	; (8018a54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018a14:	f007 fd29 	bl	802046a <__aeabi_atexit>
 8018a18:	4c0f      	ldr	r4, [pc, #60]	; (8018a58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018a1a:	7823      	ldrb	r3, [r4, #0]
 8018a1c:	f3bf 8f5b 	dmb	ish
 8018a20:	07db      	lsls	r3, r3, #31
 8018a22:	d40b      	bmi.n	8018a3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018a24:	4620      	mov	r0, r4
 8018a26:	f007 fd27 	bl	8020478 <__cxa_guard_acquire>
 8018a2a:	b138      	cbz	r0, 8018a3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018a2c:	4620      	mov	r0, r4
 8018a2e:	f007 fd2f 	bl	8020490 <__cxa_guard_release>
 8018a32:	4a06      	ldr	r2, [pc, #24]	; (8018a4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018a34:	4909      	ldr	r1, [pc, #36]	; (8018a5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018a36:	480a      	ldr	r0, [pc, #40]	; (8018a60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018a38:	f007 fd17 	bl	802046a <__aeabi_atexit>
 8018a3c:	4b05      	ldr	r3, [pc, #20]	; (8018a54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018a3e:	60ab      	str	r3, [r5, #8]
 8018a40:	4b07      	ldr	r3, [pc, #28]	; (8018a60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018a42:	60eb      	str	r3, [r5, #12]
 8018a44:	bd38      	pop	{r3, r4, r5, pc}
 8018a46:	bf00      	nop
 8018a48:	20015534 	.word	0x20015534
 8018a4c:	20000000 	.word	0x20000000
 8018a50:	08016b91 	.word	0x08016b91
 8018a54:	200000a8 	.word	0x200000a8
 8018a58:	20015538 	.word	0x20015538
 8018a5c:	08016b8f 	.word	0x08016b8f
 8018a60:	200000ac 	.word	0x200000ac

08018a64 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018a64:	b510      	push	{r4, lr}
 8018a66:	4604      	mov	r4, r0
 8018a68:	f7ff ff88 	bl	801897c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018a6c:	4620      	mov	r0, r4
 8018a6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018a72:	f7ff bfbd 	b.w	80189f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018a78:	b538      	push	{r3, r4, r5, lr}
 8018a7a:	4c15      	ldr	r4, [pc, #84]	; (8018ad0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018a7c:	7823      	ldrb	r3, [r4, #0]
 8018a7e:	f3bf 8f5b 	dmb	ish
 8018a82:	07da      	lsls	r2, r3, #31
 8018a84:	4605      	mov	r5, r0
 8018a86:	d40b      	bmi.n	8018aa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018a88:	4620      	mov	r0, r4
 8018a8a:	f007 fcf5 	bl	8020478 <__cxa_guard_acquire>
 8018a8e:	b138      	cbz	r0, 8018aa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018a90:	4620      	mov	r0, r4
 8018a92:	f007 fcfd 	bl	8020490 <__cxa_guard_release>
 8018a96:	4a0f      	ldr	r2, [pc, #60]	; (8018ad4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018a98:	490f      	ldr	r1, [pc, #60]	; (8018ad8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018a9a:	4810      	ldr	r0, [pc, #64]	; (8018adc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018a9c:	f007 fce5 	bl	802046a <__aeabi_atexit>
 8018aa0:	4c0f      	ldr	r4, [pc, #60]	; (8018ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018aa2:	7823      	ldrb	r3, [r4, #0]
 8018aa4:	f3bf 8f5b 	dmb	ish
 8018aa8:	07db      	lsls	r3, r3, #31
 8018aaa:	d40b      	bmi.n	8018ac4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018aac:	4620      	mov	r0, r4
 8018aae:	f007 fce3 	bl	8020478 <__cxa_guard_acquire>
 8018ab2:	b138      	cbz	r0, 8018ac4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018ab4:	4620      	mov	r0, r4
 8018ab6:	f007 fceb 	bl	8020490 <__cxa_guard_release>
 8018aba:	4a06      	ldr	r2, [pc, #24]	; (8018ad4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018abc:	4909      	ldr	r1, [pc, #36]	; (8018ae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018abe:	480a      	ldr	r0, [pc, #40]	; (8018ae8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018ac0:	f007 fcd3 	bl	802046a <__aeabi_atexit>
 8018ac4:	4b05      	ldr	r3, [pc, #20]	; (8018adc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018ac6:	622b      	str	r3, [r5, #32]
 8018ac8:	4b07      	ldr	r3, [pc, #28]	; (8018ae8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018aca:	626b      	str	r3, [r5, #36]	; 0x24
 8018acc:	bd38      	pop	{r3, r4, r5, pc}
 8018ace:	bf00      	nop
 8018ad0:	20015564 	.word	0x20015564
 8018ad4:	20000000 	.word	0x20000000
 8018ad8:	08016b85 	.word	0x08016b85
 8018adc:	200000d8 	.word	0x200000d8
 8018ae0:	20015568 	.word	0x20015568
 8018ae4:	08016b83 	.word	0x08016b83
 8018ae8:	200000dc 	.word	0x200000dc

08018aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018aec:	b538      	push	{r3, r4, r5, lr}
 8018aee:	4c15      	ldr	r4, [pc, #84]	; (8018b44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018af0:	7823      	ldrb	r3, [r4, #0]
 8018af2:	f3bf 8f5b 	dmb	ish
 8018af6:	07da      	lsls	r2, r3, #31
 8018af8:	4605      	mov	r5, r0
 8018afa:	d40b      	bmi.n	8018b14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018afc:	4620      	mov	r0, r4
 8018afe:	f007 fcbb 	bl	8020478 <__cxa_guard_acquire>
 8018b02:	b138      	cbz	r0, 8018b14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018b04:	4620      	mov	r0, r4
 8018b06:	f007 fcc3 	bl	8020490 <__cxa_guard_release>
 8018b0a:	4a0f      	ldr	r2, [pc, #60]	; (8018b48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018b0c:	490f      	ldr	r1, [pc, #60]	; (8018b4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018b0e:	4810      	ldr	r0, [pc, #64]	; (8018b50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018b10:	f007 fcab 	bl	802046a <__aeabi_atexit>
 8018b14:	4c0f      	ldr	r4, [pc, #60]	; (8018b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018b16:	7823      	ldrb	r3, [r4, #0]
 8018b18:	f3bf 8f5b 	dmb	ish
 8018b1c:	07db      	lsls	r3, r3, #31
 8018b1e:	d40b      	bmi.n	8018b38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018b20:	4620      	mov	r0, r4
 8018b22:	f007 fca9 	bl	8020478 <__cxa_guard_acquire>
 8018b26:	b138      	cbz	r0, 8018b38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018b28:	4620      	mov	r0, r4
 8018b2a:	f007 fcb1 	bl	8020490 <__cxa_guard_release>
 8018b2e:	4a06      	ldr	r2, [pc, #24]	; (8018b48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018b30:	4909      	ldr	r1, [pc, #36]	; (8018b58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018b32:	480a      	ldr	r0, [pc, #40]	; (8018b5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018b34:	f007 fc99 	bl	802046a <__aeabi_atexit>
 8018b38:	4b05      	ldr	r3, [pc, #20]	; (8018b50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018b3a:	61ab      	str	r3, [r5, #24]
 8018b3c:	4b07      	ldr	r3, [pc, #28]	; (8018b5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018b3e:	61eb      	str	r3, [r5, #28]
 8018b40:	bd38      	pop	{r3, r4, r5, pc}
 8018b42:	bf00      	nop
 8018b44:	2001553c 	.word	0x2001553c
 8018b48:	20000000 	.word	0x20000000
 8018b4c:	08016b89 	.word	0x08016b89
 8018b50:	200000b0 	.word	0x200000b0
 8018b54:	20015540 	.word	0x20015540
 8018b58:	08016b87 	.word	0x08016b87
 8018b5c:	200000b4 	.word	0x200000b4

08018b60 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018b60:	b510      	push	{r4, lr}
 8018b62:	4604      	mov	r4, r0
 8018b64:	f7ff ff88 	bl	8018a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018b68:	4620      	mov	r0, r4
 8018b6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018b6e:	f7ff bfbd 	b.w	8018aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018b74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018b74:	b538      	push	{r3, r4, r5, lr}
 8018b76:	4c15      	ldr	r4, [pc, #84]	; (8018bcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018b78:	7823      	ldrb	r3, [r4, #0]
 8018b7a:	f3bf 8f5b 	dmb	ish
 8018b7e:	07da      	lsls	r2, r3, #31
 8018b80:	4605      	mov	r5, r0
 8018b82:	d40b      	bmi.n	8018b9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018b84:	4620      	mov	r0, r4
 8018b86:	f007 fc77 	bl	8020478 <__cxa_guard_acquire>
 8018b8a:	b138      	cbz	r0, 8018b9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018b8c:	4620      	mov	r0, r4
 8018b8e:	f007 fc7f 	bl	8020490 <__cxa_guard_release>
 8018b92:	4a0f      	ldr	r2, [pc, #60]	; (8018bd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018b94:	490f      	ldr	r1, [pc, #60]	; (8018bd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018b96:	4810      	ldr	r0, [pc, #64]	; (8018bd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018b98:	f007 fc67 	bl	802046a <__aeabi_atexit>
 8018b9c:	4c0f      	ldr	r4, [pc, #60]	; (8018bdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018b9e:	7823      	ldrb	r3, [r4, #0]
 8018ba0:	f3bf 8f5b 	dmb	ish
 8018ba4:	07db      	lsls	r3, r3, #31
 8018ba6:	d40b      	bmi.n	8018bc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018ba8:	4620      	mov	r0, r4
 8018baa:	f007 fc65 	bl	8020478 <__cxa_guard_acquire>
 8018bae:	b138      	cbz	r0, 8018bc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018bb0:	4620      	mov	r0, r4
 8018bb2:	f007 fc6d 	bl	8020490 <__cxa_guard_release>
 8018bb6:	4a06      	ldr	r2, [pc, #24]	; (8018bd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018bb8:	4909      	ldr	r1, [pc, #36]	; (8018be0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018bba:	480a      	ldr	r0, [pc, #40]	; (8018be4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018bbc:	f007 fc55 	bl	802046a <__aeabi_atexit>
 8018bc0:	4b05      	ldr	r3, [pc, #20]	; (8018bd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018bc2:	632b      	str	r3, [r5, #48]	; 0x30
 8018bc4:	4b07      	ldr	r3, [pc, #28]	; (8018be4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018bc6:	636b      	str	r3, [r5, #52]	; 0x34
 8018bc8:	bd38      	pop	{r3, r4, r5, pc}
 8018bca:	bf00      	nop
 8018bcc:	20015574 	.word	0x20015574
 8018bd0:	20000000 	.word	0x20000000
 8018bd4:	08016b7d 	.word	0x08016b7d
 8018bd8:	200000e8 	.word	0x200000e8
 8018bdc:	20015578 	.word	0x20015578
 8018be0:	08016b7b 	.word	0x08016b7b
 8018be4:	200000ec 	.word	0x200000ec

08018be8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018be8:	b538      	push	{r3, r4, r5, lr}
 8018bea:	4c15      	ldr	r4, [pc, #84]	; (8018c40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018bec:	7823      	ldrb	r3, [r4, #0]
 8018bee:	f3bf 8f5b 	dmb	ish
 8018bf2:	07da      	lsls	r2, r3, #31
 8018bf4:	4605      	mov	r5, r0
 8018bf6:	d40b      	bmi.n	8018c10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018bf8:	4620      	mov	r0, r4
 8018bfa:	f007 fc3d 	bl	8020478 <__cxa_guard_acquire>
 8018bfe:	b138      	cbz	r0, 8018c10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018c00:	4620      	mov	r0, r4
 8018c02:	f007 fc45 	bl	8020490 <__cxa_guard_release>
 8018c06:	4a0f      	ldr	r2, [pc, #60]	; (8018c44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018c08:	490f      	ldr	r1, [pc, #60]	; (8018c48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018c0a:	4810      	ldr	r0, [pc, #64]	; (8018c4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018c0c:	f007 fc2d 	bl	802046a <__aeabi_atexit>
 8018c10:	4c0f      	ldr	r4, [pc, #60]	; (8018c50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018c12:	7823      	ldrb	r3, [r4, #0]
 8018c14:	f3bf 8f5b 	dmb	ish
 8018c18:	07db      	lsls	r3, r3, #31
 8018c1a:	d40b      	bmi.n	8018c34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018c1c:	4620      	mov	r0, r4
 8018c1e:	f007 fc2b 	bl	8020478 <__cxa_guard_acquire>
 8018c22:	b138      	cbz	r0, 8018c34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018c24:	4620      	mov	r0, r4
 8018c26:	f007 fc33 	bl	8020490 <__cxa_guard_release>
 8018c2a:	4a06      	ldr	r2, [pc, #24]	; (8018c44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018c2c:	4909      	ldr	r1, [pc, #36]	; (8018c54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018c2e:	480a      	ldr	r0, [pc, #40]	; (8018c58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018c30:	f007 fc1b 	bl	802046a <__aeabi_atexit>
 8018c34:	4b05      	ldr	r3, [pc, #20]	; (8018c4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018c36:	62ab      	str	r3, [r5, #40]	; 0x28
 8018c38:	4b07      	ldr	r3, [pc, #28]	; (8018c58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018c3a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018c3c:	bd38      	pop	{r3, r4, r5, pc}
 8018c3e:	bf00      	nop
 8018c40:	20015544 	.word	0x20015544
 8018c44:	20000000 	.word	0x20000000
 8018c48:	08016b81 	.word	0x08016b81
 8018c4c:	200000b8 	.word	0x200000b8
 8018c50:	20015548 	.word	0x20015548
 8018c54:	08016b7f 	.word	0x08016b7f
 8018c58:	200000bc 	.word	0x200000bc

08018c5c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018c5c:	b510      	push	{r4, lr}
 8018c5e:	4604      	mov	r4, r0
 8018c60:	f7ff ff88 	bl	8018b74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018c64:	4620      	mov	r0, r4
 8018c66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018c6a:	f7ff bfbd 	b.w	8018be8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018c70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018c70:	b538      	push	{r3, r4, r5, lr}
 8018c72:	4c15      	ldr	r4, [pc, #84]	; (8018cc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018c74:	7823      	ldrb	r3, [r4, #0]
 8018c76:	f3bf 8f5b 	dmb	ish
 8018c7a:	07da      	lsls	r2, r3, #31
 8018c7c:	4605      	mov	r5, r0
 8018c7e:	d40b      	bmi.n	8018c98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018c80:	4620      	mov	r0, r4
 8018c82:	f007 fbf9 	bl	8020478 <__cxa_guard_acquire>
 8018c86:	b138      	cbz	r0, 8018c98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018c88:	4620      	mov	r0, r4
 8018c8a:	f007 fc01 	bl	8020490 <__cxa_guard_release>
 8018c8e:	4a0f      	ldr	r2, [pc, #60]	; (8018ccc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018c90:	490f      	ldr	r1, [pc, #60]	; (8018cd0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018c92:	4810      	ldr	r0, [pc, #64]	; (8018cd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018c94:	f007 fbe9 	bl	802046a <__aeabi_atexit>
 8018c98:	4c0f      	ldr	r4, [pc, #60]	; (8018cd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018c9a:	7823      	ldrb	r3, [r4, #0]
 8018c9c:	f3bf 8f5b 	dmb	ish
 8018ca0:	07db      	lsls	r3, r3, #31
 8018ca2:	d40b      	bmi.n	8018cbc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018ca4:	4620      	mov	r0, r4
 8018ca6:	f007 fbe7 	bl	8020478 <__cxa_guard_acquire>
 8018caa:	b138      	cbz	r0, 8018cbc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018cac:	4620      	mov	r0, r4
 8018cae:	f007 fbef 	bl	8020490 <__cxa_guard_release>
 8018cb2:	4a06      	ldr	r2, [pc, #24]	; (8018ccc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018cb4:	4909      	ldr	r1, [pc, #36]	; (8018cdc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018cb6:	480a      	ldr	r0, [pc, #40]	; (8018ce0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018cb8:	f007 fbd7 	bl	802046a <__aeabi_atexit>
 8018cbc:	4b05      	ldr	r3, [pc, #20]	; (8018cd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018cbe:	652b      	str	r3, [r5, #80]	; 0x50
 8018cc0:	4b07      	ldr	r3, [pc, #28]	; (8018ce0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018cc2:	656b      	str	r3, [r5, #84]	; 0x54
 8018cc4:	bd38      	pop	{r3, r4, r5, pc}
 8018cc6:	bf00      	nop
 8018cc8:	2001557c 	.word	0x2001557c
 8018ccc:	20000000 	.word	0x20000000
 8018cd0:	08016b6d 	.word	0x08016b6d
 8018cd4:	200000f0 	.word	0x200000f0
 8018cd8:	20015580 	.word	0x20015580
 8018cdc:	08016b6b 	.word	0x08016b6b
 8018ce0:	200000f4 	.word	0x200000f4

08018ce4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018ce4:	b538      	push	{r3, r4, r5, lr}
 8018ce6:	4c15      	ldr	r4, [pc, #84]	; (8018d3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018ce8:	7823      	ldrb	r3, [r4, #0]
 8018cea:	f3bf 8f5b 	dmb	ish
 8018cee:	07da      	lsls	r2, r3, #31
 8018cf0:	4605      	mov	r5, r0
 8018cf2:	d40b      	bmi.n	8018d0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018cf4:	4620      	mov	r0, r4
 8018cf6:	f007 fbbf 	bl	8020478 <__cxa_guard_acquire>
 8018cfa:	b138      	cbz	r0, 8018d0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018cfc:	4620      	mov	r0, r4
 8018cfe:	f007 fbc7 	bl	8020490 <__cxa_guard_release>
 8018d02:	4a0f      	ldr	r2, [pc, #60]	; (8018d40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018d04:	490f      	ldr	r1, [pc, #60]	; (8018d44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018d06:	4810      	ldr	r0, [pc, #64]	; (8018d48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018d08:	f007 fbaf 	bl	802046a <__aeabi_atexit>
 8018d0c:	4c0f      	ldr	r4, [pc, #60]	; (8018d4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018d0e:	7823      	ldrb	r3, [r4, #0]
 8018d10:	f3bf 8f5b 	dmb	ish
 8018d14:	07db      	lsls	r3, r3, #31
 8018d16:	d40b      	bmi.n	8018d30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018d18:	4620      	mov	r0, r4
 8018d1a:	f007 fbad 	bl	8020478 <__cxa_guard_acquire>
 8018d1e:	b138      	cbz	r0, 8018d30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018d20:	4620      	mov	r0, r4
 8018d22:	f007 fbb5 	bl	8020490 <__cxa_guard_release>
 8018d26:	4a06      	ldr	r2, [pc, #24]	; (8018d40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018d28:	4909      	ldr	r1, [pc, #36]	; (8018d50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018d2a:	480a      	ldr	r0, [pc, #40]	; (8018d54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018d2c:	f007 fb9d 	bl	802046a <__aeabi_atexit>
 8018d30:	4b05      	ldr	r3, [pc, #20]	; (8018d48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018d32:	64ab      	str	r3, [r5, #72]	; 0x48
 8018d34:	4b07      	ldr	r3, [pc, #28]	; (8018d54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018d36:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018d38:	bd38      	pop	{r3, r4, r5, pc}
 8018d3a:	bf00      	nop
 8018d3c:	20015584 	.word	0x20015584
 8018d40:	20000000 	.word	0x20000000
 8018d44:	08016b71 	.word	0x08016b71
 8018d48:	200000f8 	.word	0x200000f8
 8018d4c:	20015588 	.word	0x20015588
 8018d50:	08016b6f 	.word	0x08016b6f
 8018d54:	200000fc 	.word	0x200000fc

08018d58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018d58:	b538      	push	{r3, r4, r5, lr}
 8018d5a:	4c15      	ldr	r4, [pc, #84]	; (8018db0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018d5c:	7823      	ldrb	r3, [r4, #0]
 8018d5e:	f3bf 8f5b 	dmb	ish
 8018d62:	07da      	lsls	r2, r3, #31
 8018d64:	4605      	mov	r5, r0
 8018d66:	d40b      	bmi.n	8018d80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018d68:	4620      	mov	r0, r4
 8018d6a:	f007 fb85 	bl	8020478 <__cxa_guard_acquire>
 8018d6e:	b138      	cbz	r0, 8018d80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018d70:	4620      	mov	r0, r4
 8018d72:	f007 fb8d 	bl	8020490 <__cxa_guard_release>
 8018d76:	4a0f      	ldr	r2, [pc, #60]	; (8018db4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018d78:	490f      	ldr	r1, [pc, #60]	; (8018db8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018d7a:	4810      	ldr	r0, [pc, #64]	; (8018dbc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018d7c:	f007 fb75 	bl	802046a <__aeabi_atexit>
 8018d80:	4c0f      	ldr	r4, [pc, #60]	; (8018dc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018d82:	7823      	ldrb	r3, [r4, #0]
 8018d84:	f3bf 8f5b 	dmb	ish
 8018d88:	07db      	lsls	r3, r3, #31
 8018d8a:	d40b      	bmi.n	8018da4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018d8c:	4620      	mov	r0, r4
 8018d8e:	f007 fb73 	bl	8020478 <__cxa_guard_acquire>
 8018d92:	b138      	cbz	r0, 8018da4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018d94:	4620      	mov	r0, r4
 8018d96:	f007 fb7b 	bl	8020490 <__cxa_guard_release>
 8018d9a:	4a06      	ldr	r2, [pc, #24]	; (8018db4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018d9c:	4909      	ldr	r1, [pc, #36]	; (8018dc4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018d9e:	480a      	ldr	r0, [pc, #40]	; (8018dc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018da0:	f007 fb63 	bl	802046a <__aeabi_atexit>
 8018da4:	4b05      	ldr	r3, [pc, #20]	; (8018dbc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018da6:	642b      	str	r3, [r5, #64]	; 0x40
 8018da8:	4b07      	ldr	r3, [pc, #28]	; (8018dc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018daa:	646b      	str	r3, [r5, #68]	; 0x44
 8018dac:	bd38      	pop	{r3, r4, r5, pc}
 8018dae:	bf00      	nop
 8018db0:	2001554c 	.word	0x2001554c
 8018db4:	20000000 	.word	0x20000000
 8018db8:	08016b75 	.word	0x08016b75
 8018dbc:	200000c0 	.word	0x200000c0
 8018dc0:	20015550 	.word	0x20015550
 8018dc4:	08016b73 	.word	0x08016b73
 8018dc8:	200000c4 	.word	0x200000c4

08018dcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018dcc:	b538      	push	{r3, r4, r5, lr}
 8018dce:	4c15      	ldr	r4, [pc, #84]	; (8018e24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018dd0:	7823      	ldrb	r3, [r4, #0]
 8018dd2:	f3bf 8f5b 	dmb	ish
 8018dd6:	07da      	lsls	r2, r3, #31
 8018dd8:	4605      	mov	r5, r0
 8018dda:	d40b      	bmi.n	8018df4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018ddc:	4620      	mov	r0, r4
 8018dde:	f007 fb4b 	bl	8020478 <__cxa_guard_acquire>
 8018de2:	b138      	cbz	r0, 8018df4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018de4:	4620      	mov	r0, r4
 8018de6:	f007 fb53 	bl	8020490 <__cxa_guard_release>
 8018dea:	4a0f      	ldr	r2, [pc, #60]	; (8018e28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018dec:	490f      	ldr	r1, [pc, #60]	; (8018e2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8018dee:	4810      	ldr	r0, [pc, #64]	; (8018e30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018df0:	f007 fb3b 	bl	802046a <__aeabi_atexit>
 8018df4:	4c0f      	ldr	r4, [pc, #60]	; (8018e34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018df6:	7823      	ldrb	r3, [r4, #0]
 8018df8:	f3bf 8f5b 	dmb	ish
 8018dfc:	07db      	lsls	r3, r3, #31
 8018dfe:	d40b      	bmi.n	8018e18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018e00:	4620      	mov	r0, r4
 8018e02:	f007 fb39 	bl	8020478 <__cxa_guard_acquire>
 8018e06:	b138      	cbz	r0, 8018e18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018e08:	4620      	mov	r0, r4
 8018e0a:	f007 fb41 	bl	8020490 <__cxa_guard_release>
 8018e0e:	4a06      	ldr	r2, [pc, #24]	; (8018e28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018e10:	4909      	ldr	r1, [pc, #36]	; (8018e38 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018e12:	480a      	ldr	r0, [pc, #40]	; (8018e3c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018e14:	f007 fb29 	bl	802046a <__aeabi_atexit>
 8018e18:	4b05      	ldr	r3, [pc, #20]	; (8018e30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018e1a:	63ab      	str	r3, [r5, #56]	; 0x38
 8018e1c:	4b07      	ldr	r3, [pc, #28]	; (8018e3c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018e1e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018e20:	bd38      	pop	{r3, r4, r5, pc}
 8018e22:	bf00      	nop
 8018e24:	2001556c 	.word	0x2001556c
 8018e28:	20000000 	.word	0x20000000
 8018e2c:	08016b79 	.word	0x08016b79
 8018e30:	200000e0 	.word	0x200000e0
 8018e34:	20015570 	.word	0x20015570
 8018e38:	08016b77 	.word	0x08016b77
 8018e3c:	200000e4 	.word	0x200000e4

08018e40 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018e40:	b510      	push	{r4, lr}
 8018e42:	4604      	mov	r4, r0
 8018e44:	f7ff ff14 	bl	8018c70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018e48:	4620      	mov	r0, r4
 8018e4a:	f7ff ff85 	bl	8018d58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8018e4e:	4620      	mov	r0, r4
 8018e50:	f7ff ff48 	bl	8018ce4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8018e54:	4620      	mov	r0, r4
 8018e56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e5a:	f7ff bfb7 	b.w	8018dcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08018e60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8018e60:	b538      	push	{r3, r4, r5, lr}
 8018e62:	4c15      	ldr	r4, [pc, #84]	; (8018eb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8018e64:	7823      	ldrb	r3, [r4, #0]
 8018e66:	f3bf 8f5b 	dmb	ish
 8018e6a:	07da      	lsls	r2, r3, #31
 8018e6c:	4605      	mov	r5, r0
 8018e6e:	d40b      	bmi.n	8018e88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018e70:	4620      	mov	r0, r4
 8018e72:	f007 fb01 	bl	8020478 <__cxa_guard_acquire>
 8018e76:	b138      	cbz	r0, 8018e88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018e78:	4620      	mov	r0, r4
 8018e7a:	f007 fb09 	bl	8020490 <__cxa_guard_release>
 8018e7e:	4a0f      	ldr	r2, [pc, #60]	; (8018ebc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018e80:	490f      	ldr	r1, [pc, #60]	; (8018ec0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8018e82:	4810      	ldr	r0, [pc, #64]	; (8018ec4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018e84:	f007 faf1 	bl	802046a <__aeabi_atexit>
 8018e88:	4c0f      	ldr	r4, [pc, #60]	; (8018ec8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8018e8a:	7823      	ldrb	r3, [r4, #0]
 8018e8c:	f3bf 8f5b 	dmb	ish
 8018e90:	07db      	lsls	r3, r3, #31
 8018e92:	d40b      	bmi.n	8018eac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018e94:	4620      	mov	r0, r4
 8018e96:	f007 faef 	bl	8020478 <__cxa_guard_acquire>
 8018e9a:	b138      	cbz	r0, 8018eac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018e9c:	4620      	mov	r0, r4
 8018e9e:	f007 faf7 	bl	8020490 <__cxa_guard_release>
 8018ea2:	4a06      	ldr	r2, [pc, #24]	; (8018ebc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018ea4:	4909      	ldr	r1, [pc, #36]	; (8018ecc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018ea6:	480a      	ldr	r0, [pc, #40]	; (8018ed0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018ea8:	f007 fadf 	bl	802046a <__aeabi_atexit>
 8018eac:	4b05      	ldr	r3, [pc, #20]	; (8018ec4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018eae:	662b      	str	r3, [r5, #96]	; 0x60
 8018eb0:	4b07      	ldr	r3, [pc, #28]	; (8018ed0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018eb2:	666b      	str	r3, [r5, #100]	; 0x64
 8018eb4:	bd38      	pop	{r3, r4, r5, pc}
 8018eb6:	bf00      	nop
 8018eb8:	20015554 	.word	0x20015554
 8018ebc:	20000000 	.word	0x20000000
 8018ec0:	08016b65 	.word	0x08016b65
 8018ec4:	200000c8 	.word	0x200000c8
 8018ec8:	20015558 	.word	0x20015558
 8018ecc:	08016b63 	.word	0x08016b63
 8018ed0:	200000cc 	.word	0x200000cc

08018ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018ed4:	b538      	push	{r3, r4, r5, lr}
 8018ed6:	4c15      	ldr	r4, [pc, #84]	; (8018f2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018ed8:	7823      	ldrb	r3, [r4, #0]
 8018eda:	f3bf 8f5b 	dmb	ish
 8018ede:	07da      	lsls	r2, r3, #31
 8018ee0:	4605      	mov	r5, r0
 8018ee2:	d40b      	bmi.n	8018efc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018ee4:	4620      	mov	r0, r4
 8018ee6:	f007 fac7 	bl	8020478 <__cxa_guard_acquire>
 8018eea:	b138      	cbz	r0, 8018efc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018eec:	4620      	mov	r0, r4
 8018eee:	f007 facf 	bl	8020490 <__cxa_guard_release>
 8018ef2:	4a0f      	ldr	r2, [pc, #60]	; (8018f30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018ef4:	490f      	ldr	r1, [pc, #60]	; (8018f34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018ef6:	4810      	ldr	r0, [pc, #64]	; (8018f38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018ef8:	f007 fab7 	bl	802046a <__aeabi_atexit>
 8018efc:	4c0f      	ldr	r4, [pc, #60]	; (8018f3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8018efe:	7823      	ldrb	r3, [r4, #0]
 8018f00:	f3bf 8f5b 	dmb	ish
 8018f04:	07db      	lsls	r3, r3, #31
 8018f06:	d40b      	bmi.n	8018f20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018f08:	4620      	mov	r0, r4
 8018f0a:	f007 fab5 	bl	8020478 <__cxa_guard_acquire>
 8018f0e:	b138      	cbz	r0, 8018f20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018f10:	4620      	mov	r0, r4
 8018f12:	f007 fabd 	bl	8020490 <__cxa_guard_release>
 8018f16:	4a06      	ldr	r2, [pc, #24]	; (8018f30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018f18:	4909      	ldr	r1, [pc, #36]	; (8018f40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018f1a:	480a      	ldr	r0, [pc, #40]	; (8018f44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018f1c:	f007 faa5 	bl	802046a <__aeabi_atexit>
 8018f20:	4b05      	ldr	r3, [pc, #20]	; (8018f38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018f22:	65ab      	str	r3, [r5, #88]	; 0x58
 8018f24:	4b07      	ldr	r3, [pc, #28]	; (8018f44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018f26:	65eb      	str	r3, [r5, #92]	; 0x5c
 8018f28:	bd38      	pop	{r3, r4, r5, pc}
 8018f2a:	bf00      	nop
 8018f2c:	2001552c 	.word	0x2001552c
 8018f30:	20000000 	.word	0x20000000
 8018f34:	08016b69 	.word	0x08016b69
 8018f38:	200000a0 	.word	0x200000a0
 8018f3c:	20015530 	.word	0x20015530
 8018f40:	08016b67 	.word	0x08016b67
 8018f44:	200000a4 	.word	0x200000a4

08018f48 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8018f48:	b510      	push	{r4, lr}
 8018f4a:	4604      	mov	r4, r0
 8018f4c:	f7ff ff88 	bl	8018e60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8018f50:	4620      	mov	r0, r4
 8018f52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f56:	f7ff bfbd 	b.w	8018ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08018f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8018f5c:	b538      	push	{r3, r4, r5, lr}
 8018f5e:	4c15      	ldr	r4, [pc, #84]	; (8018fb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8018f60:	7823      	ldrb	r3, [r4, #0]
 8018f62:	f3bf 8f5b 	dmb	ish
 8018f66:	07da      	lsls	r2, r3, #31
 8018f68:	4605      	mov	r5, r0
 8018f6a:	d40b      	bmi.n	8018f84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018f6c:	4620      	mov	r0, r4
 8018f6e:	f007 fa83 	bl	8020478 <__cxa_guard_acquire>
 8018f72:	b138      	cbz	r0, 8018f84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018f74:	4620      	mov	r0, r4
 8018f76:	f007 fa8b 	bl	8020490 <__cxa_guard_release>
 8018f7a:	4a0f      	ldr	r2, [pc, #60]	; (8018fb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018f7c:	490f      	ldr	r1, [pc, #60]	; (8018fbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8018f7e:	4810      	ldr	r0, [pc, #64]	; (8018fc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018f80:	f007 fa73 	bl	802046a <__aeabi_atexit>
 8018f84:	4c0f      	ldr	r4, [pc, #60]	; (8018fc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8018f86:	7823      	ldrb	r3, [r4, #0]
 8018f88:	f3bf 8f5b 	dmb	ish
 8018f8c:	07db      	lsls	r3, r3, #31
 8018f8e:	d40b      	bmi.n	8018fa8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018f90:	4620      	mov	r0, r4
 8018f92:	f007 fa71 	bl	8020478 <__cxa_guard_acquire>
 8018f96:	b138      	cbz	r0, 8018fa8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018f98:	4620      	mov	r0, r4
 8018f9a:	f007 fa79 	bl	8020490 <__cxa_guard_release>
 8018f9e:	4a06      	ldr	r2, [pc, #24]	; (8018fb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018fa0:	4909      	ldr	r1, [pc, #36]	; (8018fc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8018fa2:	480a      	ldr	r0, [pc, #40]	; (8018fcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018fa4:	f007 fa61 	bl	802046a <__aeabi_atexit>
 8018fa8:	4b05      	ldr	r3, [pc, #20]	; (8018fc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018faa:	672b      	str	r3, [r5, #112]	; 0x70
 8018fac:	4b07      	ldr	r3, [pc, #28]	; (8018fcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018fae:	676b      	str	r3, [r5, #116]	; 0x74
 8018fb0:	bd38      	pop	{r3, r4, r5, pc}
 8018fb2:	bf00      	nop
 8018fb4:	20015524 	.word	0x20015524
 8018fb8:	20000000 	.word	0x20000000
 8018fbc:	08016b5d 	.word	0x08016b5d
 8018fc0:	20000098 	.word	0x20000098
 8018fc4:	20015528 	.word	0x20015528
 8018fc8:	08016b5b 	.word	0x08016b5b
 8018fcc:	2000009c 	.word	0x2000009c

08018fd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8018fd0:	b538      	push	{r3, r4, r5, lr}
 8018fd2:	4c15      	ldr	r4, [pc, #84]	; (8019028 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8018fd4:	7823      	ldrb	r3, [r4, #0]
 8018fd6:	f3bf 8f5b 	dmb	ish
 8018fda:	07da      	lsls	r2, r3, #31
 8018fdc:	4605      	mov	r5, r0
 8018fde:	d40b      	bmi.n	8018ff8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018fe0:	4620      	mov	r0, r4
 8018fe2:	f007 fa49 	bl	8020478 <__cxa_guard_acquire>
 8018fe6:	b138      	cbz	r0, 8018ff8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018fe8:	4620      	mov	r0, r4
 8018fea:	f007 fa51 	bl	8020490 <__cxa_guard_release>
 8018fee:	4a0f      	ldr	r2, [pc, #60]	; (801902c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018ff0:	490f      	ldr	r1, [pc, #60]	; (8019030 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8018ff2:	4810      	ldr	r0, [pc, #64]	; (8019034 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018ff4:	f007 fa39 	bl	802046a <__aeabi_atexit>
 8018ff8:	4c0f      	ldr	r4, [pc, #60]	; (8019038 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8018ffa:	7823      	ldrb	r3, [r4, #0]
 8018ffc:	f3bf 8f5b 	dmb	ish
 8019000:	07db      	lsls	r3, r3, #31
 8019002:	d40b      	bmi.n	801901c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019004:	4620      	mov	r0, r4
 8019006:	f007 fa37 	bl	8020478 <__cxa_guard_acquire>
 801900a:	b138      	cbz	r0, 801901c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801900c:	4620      	mov	r0, r4
 801900e:	f007 fa3f 	bl	8020490 <__cxa_guard_release>
 8019012:	4a06      	ldr	r2, [pc, #24]	; (801902c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019014:	4909      	ldr	r1, [pc, #36]	; (801903c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019016:	480a      	ldr	r0, [pc, #40]	; (8019040 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019018:	f007 fa27 	bl	802046a <__aeabi_atexit>
 801901c:	4b05      	ldr	r3, [pc, #20]	; (8019034 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801901e:	66ab      	str	r3, [r5, #104]	; 0x68
 8019020:	4b07      	ldr	r3, [pc, #28]	; (8019040 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019022:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019024:	bd38      	pop	{r3, r4, r5, pc}
 8019026:	bf00      	nop
 8019028:	2001551c 	.word	0x2001551c
 801902c:	20000000 	.word	0x20000000
 8019030:	08016b61 	.word	0x08016b61
 8019034:	20000090 	.word	0x20000090
 8019038:	20015520 	.word	0x20015520
 801903c:	08016b5f 	.word	0x08016b5f
 8019040:	20000094 	.word	0x20000094

08019044 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019044:	b510      	push	{r4, lr}
 8019046:	4604      	mov	r4, r0
 8019048:	f7ff ff88 	bl	8018f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801904c:	4620      	mov	r0, r4
 801904e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019052:	f7ff bfbd 	b.w	8018fd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019056 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019056:	b510      	push	{r4, lr}
 8019058:	4604      	mov	r4, r0
 801905a:	f7ff fff3 	bl	8019044 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801905e:	4620      	mov	r0, r4
 8019060:	f7ff ff72 	bl	8018f48 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019064:	4620      	mov	r0, r4
 8019066:	f7ff fdf9 	bl	8018c5c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801906a:	4620      	mov	r0, r4
 801906c:	f7ff fcfa 	bl	8018a64 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019070:	4620      	mov	r0, r4
 8019072:	f7ff fd75 	bl	8018b60 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8019076:	4620      	mov	r0, r4
 8019078:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801907c:	f7ff bee0 	b.w	8018e40 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019080 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019084:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8019088:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801908c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8019090:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8019094:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8019098:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801909c:	8808      	ldrh	r0, [r1, #0]
 801909e:	fb05 4c0e 	mla	ip, r5, lr, r4
 80190a2:	2d00      	cmp	r5, #0
 80190a4:	eb02 0a0c 	add.w	sl, r2, ip
 80190a8:	f2c0 80b0 	blt.w	801920c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80190ac:	45ab      	cmp	fp, r5
 80190ae:	f340 80ad 	ble.w	801920c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80190b2:	2c00      	cmp	r4, #0
 80190b4:	f2c0 80a8 	blt.w	8019208 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80190b8:	45a6      	cmp	lr, r4
 80190ba:	f340 80a5 	ble.w	8019208 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80190be:	f812 200c 	ldrb.w	r2, [r2, ip]
 80190c2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80190c6:	1c62      	adds	r2, r4, #1
 80190c8:	f100 80a3 	bmi.w	8019212 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80190cc:	4596      	cmp	lr, r2
 80190ce:	f340 80a0 	ble.w	8019212 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80190d2:	f1b9 0f00 	cmp.w	r9, #0
 80190d6:	f000 809c 	beq.w	8019212 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80190da:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80190de:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80190e2:	3501      	adds	r5, #1
 80190e4:	f100 8099 	bmi.w	801921a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80190e8:	45ab      	cmp	fp, r5
 80190ea:	f340 8096 	ble.w	801921a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80190ee:	2f00      	cmp	r7, #0
 80190f0:	f000 8093 	beq.w	801921a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80190f4:	2c00      	cmp	r4, #0
 80190f6:	f2c0 808e 	blt.w	8019216 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80190fa:	45a6      	cmp	lr, r4
 80190fc:	f340 808b 	ble.w	8019216 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019100:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019104:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019108:	3401      	adds	r4, #1
 801910a:	f100 8089 	bmi.w	8019220 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801910e:	45a6      	cmp	lr, r4
 8019110:	f340 8086 	ble.w	8019220 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019114:	f1b9 0f00 	cmp.w	r9, #0
 8019118:	f000 8082 	beq.w	8019220 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801911c:	44d6      	add	lr, sl
 801911e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019122:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019126:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801912a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801912e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019132:	fb19 fe07 	smulbb	lr, r9, r7
 8019136:	ea44 0808 	orr.w	r8, r4, r8
 801913a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801913e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019142:	f1c7 0210 	rsb	r2, r7, #16
 8019146:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801914a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801914e:	ea44 0c0c 	orr.w	ip, r4, ip
 8019152:	eba2 0209 	sub.w	r2, r2, r9
 8019156:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801915a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801915e:	fb04 f40c 	mul.w	r4, r4, ip
 8019162:	fb02 4808 	mla	r8, r2, r8, r4
 8019166:	041a      	lsls	r2, r3, #16
 8019168:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801916c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019170:	4313      	orrs	r3, r2
 8019172:	042a      	lsls	r2, r5, #16
 8019174:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019178:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801917c:	fb0e 8303 	mla	r3, lr, r3, r8
 8019180:	432a      	orrs	r2, r5
 8019182:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019186:	fb07 3202 	mla	r2, r7, r2, r3
 801918a:	0d53      	lsrs	r3, r2, #21
 801918c:	0952      	lsrs	r2, r2, #5
 801918e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019192:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019196:	431a      	orrs	r2, r3
 8019198:	b293      	uxth	r3, r2
 801919a:	b2b4      	uxth	r4, r6
 801919c:	1202      	asrs	r2, r0, #8
 801919e:	43f6      	mvns	r6, r6
 80191a0:	b2f6      	uxtb	r6, r6
 80191a2:	121d      	asrs	r5, r3, #8
 80191a4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80191a8:	fb12 f206 	smulbb	r2, r2, r6
 80191ac:	10c7      	asrs	r7, r0, #3
 80191ae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80191b2:	00c0      	lsls	r0, r0, #3
 80191b4:	fb05 2504 	mla	r5, r5, r4, r2
 80191b8:	b2c0      	uxtb	r0, r0
 80191ba:	10da      	asrs	r2, r3, #3
 80191bc:	00db      	lsls	r3, r3, #3
 80191be:	b2db      	uxtb	r3, r3
 80191c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80191c4:	fb10 f006 	smulbb	r0, r0, r6
 80191c8:	b2ad      	uxth	r5, r5
 80191ca:	fb03 0004 	mla	r0, r3, r4, r0
 80191ce:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80191d2:	fb17 f706 	smulbb	r7, r7, r6
 80191d6:	b280      	uxth	r0, r0
 80191d8:	1c6b      	adds	r3, r5, #1
 80191da:	fb02 7204 	mla	r2, r2, r4, r7
 80191de:	b292      	uxth	r2, r2
 80191e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80191e4:	1c43      	adds	r3, r0, #1
 80191e6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80191ea:	1c50      	adds	r0, r2, #1
 80191ec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80191f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80191f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80191f8:	0952      	lsrs	r2, r2, #5
 80191fa:	432b      	orrs	r3, r5
 80191fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019200:	4313      	orrs	r3, r2
 8019202:	800b      	strh	r3, [r1, #0]
 8019204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019208:	4680      	mov	r8, r0
 801920a:	e75c      	b.n	80190c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801920c:	4684      	mov	ip, r0
 801920e:	4680      	mov	r8, r0
 8019210:	e767      	b.n	80190e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019212:	4684      	mov	ip, r0
 8019214:	e765      	b.n	80190e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019216:	4605      	mov	r5, r0
 8019218:	e776      	b.n	8019108 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801921a:	4603      	mov	r3, r0
 801921c:	4605      	mov	r5, r0
 801921e:	e782      	b.n	8019126 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019220:	4603      	mov	r3, r0
 8019222:	e780      	b.n	8019126 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019224 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019228:	b099      	sub	sp, #100	; 0x64
 801922a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801922e:	9215      	str	r2, [sp, #84]	; 0x54
 8019230:	9309      	str	r3, [sp, #36]	; 0x24
 8019232:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019234:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8019238:	930d      	str	r3, [sp, #52]	; 0x34
 801923a:	910c      	str	r1, [sp, #48]	; 0x30
 801923c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019240:	9016      	str	r0, [sp, #88]	; 0x58
 8019242:	6850      	ldr	r0, [r2, #4]
 8019244:	6812      	ldr	r2, [r2, #0]
 8019246:	fb00 1303 	mla	r3, r0, r3, r1
 801924a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801924e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019250:	681b      	ldr	r3, [r3, #0]
 8019252:	930b      	str	r3, [sp, #44]	; 0x2c
 8019254:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019256:	685e      	ldr	r6, [r3, #4]
 8019258:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801925a:	43db      	mvns	r3, r3
 801925c:	b2db      	uxtb	r3, r3
 801925e:	3604      	adds	r6, #4
 8019260:	930a      	str	r3, [sp, #40]	; 0x28
 8019262:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019264:	2b00      	cmp	r3, #0
 8019266:	dc03      	bgt.n	8019270 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019268:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801926a:	2b00      	cmp	r3, #0
 801926c:	f340 8225 	ble.w	80196ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019270:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019272:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019276:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801927a:	1e48      	subs	r0, r1, #1
 801927c:	1e57      	subs	r7, r2, #1
 801927e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019280:	2b00      	cmp	r3, #0
 8019282:	f340 80e3 	ble.w	801944c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019286:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801928a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801928e:	d406      	bmi.n	801929e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019290:	4584      	cmp	ip, r0
 8019292:	da04      	bge.n	801929e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019294:	2b00      	cmp	r3, #0
 8019296:	db02      	blt.n	801929e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019298:	42bb      	cmp	r3, r7
 801929a:	f2c0 80d8 	blt.w	801944e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801929e:	f11c 0c01 	adds.w	ip, ip, #1
 80192a2:	f100 80c9 	bmi.w	8019438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80192a6:	4561      	cmp	r1, ip
 80192a8:	f2c0 80c6 	blt.w	8019438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80192ac:	3301      	adds	r3, #1
 80192ae:	f100 80c3 	bmi.w	8019438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80192b2:	429a      	cmp	r2, r3
 80192b4:	f2c0 80c0 	blt.w	8019438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80192b8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80192bc:	4647      	mov	r7, r8
 80192be:	f1bb 0f00 	cmp.w	fp, #0
 80192c2:	f340 80e3 	ble.w	801948c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80192c6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80192c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80192ca:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80192ce:	689b      	ldr	r3, [r3, #8]
 80192d0:	ea5f 422a 	movs.w	r2, sl, asr #16
 80192d4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80192d8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80192dc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80192e0:	f100 8121 	bmi.w	8019526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80192e4:	f103 39ff 	add.w	r9, r3, #4294967295
 80192e8:	454a      	cmp	r2, r9
 80192ea:	f280 811c 	bge.w	8019526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80192ee:	f1bc 0f00 	cmp.w	ip, #0
 80192f2:	f2c0 8118 	blt.w	8019526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80192f6:	f10e 39ff 	add.w	r9, lr, #4294967295
 80192fa:	45cc      	cmp	ip, r9
 80192fc:	f280 8113 	bge.w	8019526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019300:	b21b      	sxth	r3, r3
 8019302:	fb0c 2203 	mla	r2, ip, r3, r2
 8019306:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019308:	eb04 0902 	add.w	r9, r4, r2
 801930c:	5ca2      	ldrb	r2, [r4, r2]
 801930e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019312:	2800      	cmp	r0, #0
 8019314:	f000 80fe 	beq.w	8019514 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019318:	f899 2001 	ldrb.w	r2, [r9, #1]
 801931c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019320:	9211      	str	r2, [sp, #68]	; 0x44
 8019322:	b151      	cbz	r1, 801933a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019324:	eb09 0203 	add.w	r2, r9, r3
 8019328:	f819 3003 	ldrb.w	r3, [r9, r3]
 801932c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019330:	930f      	str	r3, [sp, #60]	; 0x3c
 8019332:	7853      	ldrb	r3, [r2, #1]
 8019334:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019338:	9312      	str	r3, [sp, #72]	; 0x48
 801933a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801933c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801933e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019342:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019346:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801934a:	ea4c 0c03 	orr.w	ip, ip, r3
 801934e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019350:	041b      	lsls	r3, r3, #16
 8019352:	fb10 f201 	smulbb	r2, r0, r1
 8019356:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801935a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801935e:	10d2      	asrs	r2, r2, #3
 8019360:	4323      	orrs	r3, r4
 8019362:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019366:	4353      	muls	r3, r2
 8019368:	fb09 330c 	mla	r3, r9, ip, r3
 801936c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019370:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019374:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019378:	ea4c 0e0e 	orr.w	lr, ip, lr
 801937c:	f1c1 0c10 	rsb	ip, r1, #16
 8019380:	ebac 0c00 	sub.w	ip, ip, r0
 8019384:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019388:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801938c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801938e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019390:	0418      	lsls	r0, r3, #16
 8019392:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019396:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801939a:	4318      	orrs	r0, r3
 801939c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80193a0:	fb02 c200 	mla	r2, r2, r0, ip
 80193a4:	0d53      	lsrs	r3, r2, #21
 80193a6:	0952      	lsrs	r2, r2, #5
 80193a8:	8838      	ldrh	r0, [r7, #0]
 80193aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80193ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80193b2:	431a      	orrs	r2, r3
 80193b4:	b292      	uxth	r2, r2
 80193b6:	1201      	asrs	r1, r0, #8
 80193b8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80193bc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80193c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80193c4:	fb11 f104 	smulbb	r1, r1, r4
 80193c8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80193cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80193d0:	00c0      	lsls	r0, r0, #3
 80193d2:	fb0c 1c03 	mla	ip, ip, r3, r1
 80193d6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80193da:	10d1      	asrs	r1, r2, #3
 80193dc:	b2c0      	uxtb	r0, r0
 80193de:	00d2      	lsls	r2, r2, #3
 80193e0:	b2d2      	uxtb	r2, r2
 80193e2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80193e6:	fb1e fe04 	smulbb	lr, lr, r4
 80193ea:	fb10 f004 	smulbb	r0, r0, r4
 80193ee:	fa1f fc8c 	uxth.w	ip, ip
 80193f2:	fb01 e103 	mla	r1, r1, r3, lr
 80193f6:	fb02 0303 	mla	r3, r2, r3, r0
 80193fa:	b29a      	uxth	r2, r3
 80193fc:	f10c 0301 	add.w	r3, ip, #1
 8019400:	b289      	uxth	r1, r1
 8019402:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019406:	1c53      	adds	r3, r2, #1
 8019408:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801940c:	1c4a      	adds	r2, r1, #1
 801940e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019412:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019416:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801941a:	0949      	lsrs	r1, r1, #5
 801941c:	ea43 030c 	orr.w	r3, r3, ip
 8019420:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019424:	430b      	orrs	r3, r1
 8019426:	803b      	strh	r3, [r7, #0]
 8019428:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801942a:	449a      	add	sl, r3
 801942c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801942e:	3702      	adds	r7, #2
 8019430:	441d      	add	r5, r3
 8019432:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019436:	e742      	b.n	80192be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019438:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801943a:	449a      	add	sl, r3
 801943c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801943e:	441d      	add	r5, r3
 8019440:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019442:	3b01      	subs	r3, #1
 8019444:	9309      	str	r3, [sp, #36]	; 0x24
 8019446:	f108 0802 	add.w	r8, r8, #2
 801944a:	e718      	b.n	801927e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801944c:	d023      	beq.n	8019496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801944e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019450:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019452:	3b01      	subs	r3, #1
 8019454:	fb00 a003 	mla	r0, r0, r3, sl
 8019458:	1400      	asrs	r0, r0, #16
 801945a:	f53f af2d 	bmi.w	80192b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801945e:	3901      	subs	r1, #1
 8019460:	4288      	cmp	r0, r1
 8019462:	f6bf af29 	bge.w	80192b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019466:	9926      	ldr	r1, [sp, #152]	; 0x98
 8019468:	fb01 5303 	mla	r3, r1, r3, r5
 801946c:	141b      	asrs	r3, r3, #16
 801946e:	f53f af23 	bmi.w	80192b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019472:	3a01      	subs	r2, #1
 8019474:	4293      	cmp	r3, r2
 8019476:	f6bf af1f 	bge.w	80192b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801947a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801947e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8019482:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8019486:	f1be 0f00 	cmp.w	lr, #0
 801948a:	dc6c      	bgt.n	8019566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801948c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801948e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019492:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019496:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019498:	2b00      	cmp	r3, #0
 801949a:	f340 810e 	ble.w	80196ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801949e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80194a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80194a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80194aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80194ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80194b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80194b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80194b8:	eef0 6a62 	vmov.f32	s13, s5
 80194bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80194c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80194c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80194c8:	ee16 aa90 	vmov	sl, s13
 80194cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80194d0:	eef0 6a43 	vmov.f32	s13, s6
 80194d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80194d8:	ee12 2a90 	vmov	r2, s5
 80194dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80194e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80194e4:	ee13 2a10 	vmov	r2, s6
 80194e8:	9325      	str	r3, [sp, #148]	; 0x94
 80194ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80194ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80194f0:	9326      	str	r3, [sp, #152]	; 0x98
 80194f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80194f4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80194f6:	3b01      	subs	r3, #1
 80194f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80194fc:	930c      	str	r3, [sp, #48]	; 0x30
 80194fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019500:	bf08      	it	eq
 8019502:	4613      	moveq	r3, r2
 8019504:	ee16 5a90 	vmov	r5, s13
 8019508:	9309      	str	r3, [sp, #36]	; 0x24
 801950a:	eeb0 3a67 	vmov.f32	s6, s15
 801950e:	eef0 2a47 	vmov.f32	s5, s14
 8019512:	e6a6      	b.n	8019262 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019514:	2900      	cmp	r1, #0
 8019516:	f43f af10 	beq.w	801933a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801951a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801951e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019522:	930f      	str	r3, [sp, #60]	; 0x3c
 8019524:	e709      	b.n	801933a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019526:	f112 0901 	adds.w	r9, r2, #1
 801952a:	f53f af7d 	bmi.w	8019428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801952e:	454b      	cmp	r3, r9
 8019530:	f6ff af7a 	blt.w	8019428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019534:	f11c 0901 	adds.w	r9, ip, #1
 8019538:	f53f af76 	bmi.w	8019428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801953c:	45ce      	cmp	lr, r9
 801953e:	f6ff af73 	blt.w	8019428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019542:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019544:	9202      	str	r2, [sp, #8]
 8019546:	b21b      	sxth	r3, r3
 8019548:	fa0f f28e 	sxth.w	r2, lr
 801954c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019550:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019554:	9201      	str	r2, [sp, #4]
 8019556:	9300      	str	r3, [sp, #0]
 8019558:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801955a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801955c:	4633      	mov	r3, r6
 801955e:	4639      	mov	r1, r7
 8019560:	f7ff fd8e 	bl	8019080 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019564:	e760      	b.n	8019428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019566:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019568:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801956a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801956e:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019572:	1429      	asrs	r1, r5, #16
 8019574:	fb03 2101 	mla	r1, r3, r1, r2
 8019578:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801957a:	440a      	add	r2, r1
 801957c:	5c61      	ldrb	r1, [r4, r1]
 801957e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019582:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019586:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801958a:	f1bc 0f00 	cmp.w	ip, #0
 801958e:	f000 808c 	beq.w	80196aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019592:	7857      	ldrb	r7, [r2, #1]
 8019594:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019598:	9413      	str	r4, [sp, #76]	; 0x4c
 801959a:	b140      	cbz	r0, 80195ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801959c:	18d7      	adds	r7, r2, r3
 801959e:	5cd3      	ldrb	r3, [r2, r3]
 80195a0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80195a4:	9310      	str	r3, [sp, #64]	; 0x40
 80195a6:	787b      	ldrb	r3, [r7, #1]
 80195a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80195ac:	9314      	str	r3, [sp, #80]	; 0x50
 80195ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80195b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80195b2:	fb1c f200 	smulbb	r2, ip, r0
 80195b6:	041f      	lsls	r7, r3, #16
 80195b8:	10d2      	asrs	r2, r2, #3
 80195ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80195be:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80195c2:	431f      	orrs	r7, r3
 80195c4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80195c8:	9317      	str	r3, [sp, #92]	; 0x5c
 80195ca:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80195cc:	041b      	lsls	r3, r3, #16
 80195ce:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80195d2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80195d6:	ea43 030b 	orr.w	r3, r3, fp
 80195da:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80195dc:	4353      	muls	r3, r2
 80195de:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80195e2:	fb04 3707 	mla	r7, r4, r7, r3
 80195e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80195ea:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80195ee:	ea43 0b01 	orr.w	fp, r3, r1
 80195f2:	f1c0 0110 	rsb	r1, r0, #16
 80195f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195f8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80195fa:	eba1 0c0c 	sub.w	ip, r1, ip
 80195fe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019602:	fb0c 770b 	mla	r7, ip, fp, r7
 8019606:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801960a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801960e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019612:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019616:	ea4c 0c0b 	orr.w	ip, ip, fp
 801961a:	fb02 770c 	mla	r7, r2, ip, r7
 801961e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019620:	0d79      	lsrs	r1, r7, #21
 8019622:	097f      	lsrs	r7, r7, #5
 8019624:	8812      	ldrh	r2, [r2, #0]
 8019626:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801962a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801962e:	430f      	orrs	r7, r1
 8019630:	b2bb      	uxth	r3, r7
 8019632:	1211      	asrs	r1, r2, #8
 8019634:	1218      	asrs	r0, r3, #8
 8019636:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801963a:	fb11 f104 	smulbb	r1, r1, r4
 801963e:	10d7      	asrs	r7, r2, #3
 8019640:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019644:	00d2      	lsls	r2, r2, #3
 8019646:	fb00 1009 	mla	r0, r0, r9, r1
 801964a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801964e:	10d9      	asrs	r1, r3, #3
 8019650:	b2d2      	uxtb	r2, r2
 8019652:	00db      	lsls	r3, r3, #3
 8019654:	fb17 f704 	smulbb	r7, r7, r4
 8019658:	fb12 f204 	smulbb	r2, r2, r4
 801965c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019660:	b2db      	uxtb	r3, r3
 8019662:	b280      	uxth	r0, r0
 8019664:	fb01 7109 	mla	r1, r1, r9, r7
 8019668:	fb03 2309 	mla	r3, r3, r9, r2
 801966c:	b29b      	uxth	r3, r3
 801966e:	b289      	uxth	r1, r1
 8019670:	1c42      	adds	r2, r0, #1
 8019672:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019676:	1c4f      	adds	r7, r1, #1
 8019678:	1c5a      	adds	r2, r3, #1
 801967a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801967e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019682:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019686:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801968a:	0949      	lsrs	r1, r1, #5
 801968c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801968e:	4310      	orrs	r0, r2
 8019690:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019694:	4308      	orrs	r0, r1
 8019696:	f823 0b02 	strh.w	r0, [r3], #2
 801969a:	930e      	str	r3, [sp, #56]	; 0x38
 801969c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801969e:	449a      	add	sl, r3
 80196a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80196a2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80196a6:	441d      	add	r5, r3
 80196a8:	e6ed      	b.n	8019486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80196aa:	2800      	cmp	r0, #0
 80196ac:	f43f af7f 	beq.w	80195ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80196b0:	5cd3      	ldrb	r3, [r2, r3]
 80196b2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80196b6:	9310      	str	r3, [sp, #64]	; 0x40
 80196b8:	e779      	b.n	80195ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80196ba:	b019      	add	sp, #100	; 0x64
 80196bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080196c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80196c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80196c4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80196c8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80196cc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80196d0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80196d4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80196d8:	8808      	ldrh	r0, [r1, #0]
 80196da:	fb08 470e 	mla	r7, r8, lr, r4
 80196de:	f1b8 0f00 	cmp.w	r8, #0
 80196e2:	eb02 0907 	add.w	r9, r2, r7
 80196e6:	db67      	blt.n	80197b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80196e8:	45c2      	cmp	sl, r8
 80196ea:	dd65      	ble.n	80197b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80196ec:	2c00      	cmp	r4, #0
 80196ee:	db61      	blt.n	80197b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80196f0:	45a6      	cmp	lr, r4
 80196f2:	dd5f      	ble.n	80197b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80196f4:	5dd2      	ldrb	r2, [r2, r7]
 80196f6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80196fa:	1c62      	adds	r2, r4, #1
 80196fc:	d45f      	bmi.n	80197be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80196fe:	4596      	cmp	lr, r2
 8019700:	dd5d      	ble.n	80197be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019702:	2d00      	cmp	r5, #0
 8019704:	d05b      	beq.n	80197be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019706:	f899 2001 	ldrb.w	r2, [r9, #1]
 801970a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801970e:	f118 0801 	adds.w	r8, r8, #1
 8019712:	d458      	bmi.n	80197c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019714:	45c2      	cmp	sl, r8
 8019716:	dd56      	ble.n	80197c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019718:	2e00      	cmp	r6, #0
 801971a:	d054      	beq.n	80197c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801971c:	2c00      	cmp	r4, #0
 801971e:	db50      	blt.n	80197c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019720:	45a6      	cmp	lr, r4
 8019722:	dd4e      	ble.n	80197c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019724:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019728:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801972c:	3401      	adds	r4, #1
 801972e:	d407      	bmi.n	8019740 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019730:	45a6      	cmp	lr, r4
 8019732:	dd05      	ble.n	8019740 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019734:	b125      	cbz	r5, 8019740 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019736:	44ce      	add	lr, r9
 8019738:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801973c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019740:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019744:	fb15 f406 	smulbb	r4, r5, r6
 8019748:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801974c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019750:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019754:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019758:	ea43 0c0c 	orr.w	ip, r3, ip
 801975c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019760:	f1c6 0310 	rsb	r3, r6, #16
 8019764:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019768:	1b5b      	subs	r3, r3, r5
 801976a:	ea4e 0707 	orr.w	r7, lr, r7
 801976e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019772:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019776:	437d      	muls	r5, r7
 8019778:	fb03 5c0c 	mla	ip, r3, ip, r5
 801977c:	0403      	lsls	r3, r0, #16
 801977e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019782:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019786:	4318      	orrs	r0, r3
 8019788:	0413      	lsls	r3, r2, #16
 801978a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801978e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019792:	4313      	orrs	r3, r2
 8019794:	fb04 c000 	mla	r0, r4, r0, ip
 8019798:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801979c:	fb06 0003 	mla	r0, r6, r3, r0
 80197a0:	0d43      	lsrs	r3, r0, #21
 80197a2:	0940      	lsrs	r0, r0, #5
 80197a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80197a8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80197ac:	4318      	orrs	r0, r3
 80197ae:	8008      	strh	r0, [r1, #0]
 80197b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80197b4:	4684      	mov	ip, r0
 80197b6:	e7a0      	b.n	80196fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80197b8:	4607      	mov	r7, r0
 80197ba:	4684      	mov	ip, r0
 80197bc:	e7a7      	b.n	801970e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80197be:	4607      	mov	r7, r0
 80197c0:	e7a5      	b.n	801970e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80197c2:	4602      	mov	r2, r0
 80197c4:	e7b2      	b.n	801972c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80197c6:	4602      	mov	r2, r0
 80197c8:	e7ba      	b.n	8019740 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080197ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197ce:	b093      	sub	sp, #76	; 0x4c
 80197d0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80197d4:	920f      	str	r2, [sp, #60]	; 0x3c
 80197d6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80197d8:	9108      	str	r1, [sp, #32]
 80197da:	9306      	str	r3, [sp, #24]
 80197dc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80197e0:	9010      	str	r0, [sp, #64]	; 0x40
 80197e2:	6850      	ldr	r0, [r2, #4]
 80197e4:	6812      	ldr	r2, [r2, #0]
 80197e6:	fb00 1303 	mla	r3, r0, r3, r1
 80197ea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80197ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80197f0:	681b      	ldr	r3, [r3, #0]
 80197f2:	9307      	str	r3, [sp, #28]
 80197f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80197f6:	685f      	ldr	r7, [r3, #4]
 80197f8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80197fc:	3704      	adds	r7, #4
 80197fe:	9b08      	ldr	r3, [sp, #32]
 8019800:	2b00      	cmp	r3, #0
 8019802:	dc03      	bgt.n	801980c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019804:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019806:	2b00      	cmp	r3, #0
 8019808:	f340 81b2 	ble.w	8019b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801980c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801980e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019812:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019816:	1e48      	subs	r0, r1, #1
 8019818:	f102 3cff 	add.w	ip, r2, #4294967295
 801981c:	9b06      	ldr	r3, [sp, #24]
 801981e:	2b00      	cmp	r3, #0
 8019820:	f340 80a9 	ble.w	8019976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019824:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019828:	ea4f 4326 	mov.w	r3, r6, asr #16
 801982c:	d406      	bmi.n	801983c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801982e:	4586      	cmp	lr, r0
 8019830:	da04      	bge.n	801983c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019832:	2b00      	cmp	r3, #0
 8019834:	db02      	blt.n	801983c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019836:	4563      	cmp	r3, ip
 8019838:	f2c0 809e 	blt.w	8019978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801983c:	f11e 0e01 	adds.w	lr, lr, #1
 8019840:	f100 808f 	bmi.w	8019962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019844:	4571      	cmp	r1, lr
 8019846:	f2c0 808c 	blt.w	8019962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801984a:	3301      	adds	r3, #1
 801984c:	f100 8089 	bmi.w	8019962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019850:	429a      	cmp	r2, r3
 8019852:	f2c0 8086 	blt.w	8019962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019856:	f8dd b018 	ldr.w	fp, [sp, #24]
 801985a:	46c8      	mov	r8, r9
 801985c:	f1bb 0f00 	cmp.w	fp, #0
 8019860:	f340 80a6 	ble.w	80199b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019864:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019866:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019868:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801986c:	689b      	ldr	r3, [r3, #8]
 801986e:	1422      	asrs	r2, r4, #16
 8019870:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019874:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019878:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801987c:	f100 80e3 	bmi.w	8019a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019880:	f103 3aff 	add.w	sl, r3, #4294967295
 8019884:	4552      	cmp	r2, sl
 8019886:	f280 80de 	bge.w	8019a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801988a:	f1bc 0f00 	cmp.w	ip, #0
 801988e:	f2c0 80da 	blt.w	8019a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019892:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019896:	45d4      	cmp	ip, sl
 8019898:	f280 80d5 	bge.w	8019a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801989c:	b21b      	sxth	r3, r3
 801989e:	fb0c 2203 	mla	r2, ip, r3, r2
 80198a2:	9d07      	ldr	r5, [sp, #28]
 80198a4:	eb05 0a02 	add.w	sl, r5, r2
 80198a8:	5caa      	ldrb	r2, [r5, r2]
 80198aa:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80198ae:	2800      	cmp	r0, #0
 80198b0:	f000 80c0 	beq.w	8019a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80198b4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80198b8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80198bc:	920b      	str	r2, [sp, #44]	; 0x2c
 80198be:	b151      	cbz	r1, 80198d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80198c0:	eb0a 0203 	add.w	r2, sl, r3
 80198c4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80198c8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80198cc:	9309      	str	r3, [sp, #36]	; 0x24
 80198ce:	7853      	ldrb	r3, [r2, #1]
 80198d0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80198d4:	930c      	str	r3, [sp, #48]	; 0x30
 80198d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80198d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80198da:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80198de:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80198e2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80198e6:	ea4c 0c03 	orr.w	ip, ip, r3
 80198ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80198ec:	041b      	lsls	r3, r3, #16
 80198ee:	fb10 f201 	smulbb	r2, r0, r1
 80198f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80198f6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80198fa:	10d2      	asrs	r2, r2, #3
 80198fc:	432b      	orrs	r3, r5
 80198fe:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019902:	4353      	muls	r3, r2
 8019904:	fb0a 330c 	mla	r3, sl, ip, r3
 8019908:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801990c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019910:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019914:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019918:	f1c1 0c10 	rsb	ip, r1, #16
 801991c:	ebac 0c00 	sub.w	ip, ip, r0
 8019920:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019924:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019928:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801992a:	0418      	lsls	r0, r3, #16
 801992c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019930:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019934:	4318      	orrs	r0, r3
 8019936:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801993a:	fb02 c200 	mla	r2, r2, r0, ip
 801993e:	0d53      	lsrs	r3, r2, #21
 8019940:	0952      	lsrs	r2, r2, #5
 8019942:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019946:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801994a:	431a      	orrs	r2, r3
 801994c:	f8a8 2000 	strh.w	r2, [r8]
 8019950:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019952:	441c      	add	r4, r3
 8019954:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019956:	f108 0802 	add.w	r8, r8, #2
 801995a:	441e      	add	r6, r3
 801995c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019960:	e77c      	b.n	801985c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019962:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019964:	441c      	add	r4, r3
 8019966:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019968:	441e      	add	r6, r3
 801996a:	9b06      	ldr	r3, [sp, #24]
 801996c:	3b01      	subs	r3, #1
 801996e:	9306      	str	r3, [sp, #24]
 8019970:	f109 0902 	add.w	r9, r9, #2
 8019974:	e752      	b.n	801981c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019976:	d020      	beq.n	80199ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019978:	9b06      	ldr	r3, [sp, #24]
 801997a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801997c:	3b01      	subs	r3, #1
 801997e:	fb00 4003 	mla	r0, r0, r3, r4
 8019982:	1400      	asrs	r0, r0, #16
 8019984:	f53f af67 	bmi.w	8019856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019988:	3901      	subs	r1, #1
 801998a:	4288      	cmp	r0, r1
 801998c:	f6bf af63 	bge.w	8019856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019990:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019992:	fb01 6303 	mla	r3, r1, r3, r6
 8019996:	141b      	asrs	r3, r3, #16
 8019998:	f53f af5d 	bmi.w	8019856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801999c:	3a01      	subs	r2, #1
 801999e:	4293      	cmp	r3, r2
 80199a0:	f6bf af59 	bge.w	8019856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80199a4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80199a8:	46ca      	mov	sl, r9
 80199aa:	f1b8 0f00 	cmp.w	r8, #0
 80199ae:	dc67      	bgt.n	8019a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80199b0:	9b06      	ldr	r3, [sp, #24]
 80199b2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80199b6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80199ba:	9b08      	ldr	r3, [sp, #32]
 80199bc:	2b00      	cmp	r3, #0
 80199be:	f340 80d7 	ble.w	8019b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80199c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80199c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80199ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80199ce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80199d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80199d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80199d8:	eeb0 6a62 	vmov.f32	s12, s5
 80199dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80199e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80199e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80199e8:	ee16 4a10 	vmov	r4, s12
 80199ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80199f0:	eeb0 6a43 	vmov.f32	s12, s6
 80199f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80199f8:	ee12 2a90 	vmov	r2, s5
 80199fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a00:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a04:	ee13 2a10 	vmov	r2, s6
 8019a08:	931f      	str	r3, [sp, #124]	; 0x7c
 8019a0a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019a0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a10:	9320      	str	r3, [sp, #128]	; 0x80
 8019a12:	9b08      	ldr	r3, [sp, #32]
 8019a14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019a16:	3b01      	subs	r3, #1
 8019a18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a1c:	9308      	str	r3, [sp, #32]
 8019a1e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019a20:	bf08      	it	eq
 8019a22:	4613      	moveq	r3, r2
 8019a24:	ee16 6a10 	vmov	r6, s12
 8019a28:	9306      	str	r3, [sp, #24]
 8019a2a:	eeb0 3a67 	vmov.f32	s6, s15
 8019a2e:	eef0 2a47 	vmov.f32	s5, s14
 8019a32:	e6e4      	b.n	80197fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019a34:	2900      	cmp	r1, #0
 8019a36:	f43f af4e 	beq.w	80198d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019a3a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019a3e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019a42:	9309      	str	r3, [sp, #36]	; 0x24
 8019a44:	e747      	b.n	80198d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019a46:	f112 0a01 	adds.w	sl, r2, #1
 8019a4a:	d481      	bmi.n	8019950 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a4c:	4553      	cmp	r3, sl
 8019a4e:	f6ff af7f 	blt.w	8019950 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a52:	f11c 0a01 	adds.w	sl, ip, #1
 8019a56:	f53f af7b 	bmi.w	8019950 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a5a:	45d6      	cmp	lr, sl
 8019a5c:	f6ff af78 	blt.w	8019950 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a60:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019a64:	b21b      	sxth	r3, r3
 8019a66:	fa0f f28e 	sxth.w	r2, lr
 8019a6a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019a6e:	9201      	str	r2, [sp, #4]
 8019a70:	9300      	str	r3, [sp, #0]
 8019a72:	9a07      	ldr	r2, [sp, #28]
 8019a74:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019a76:	463b      	mov	r3, r7
 8019a78:	4641      	mov	r1, r8
 8019a7a:	f7ff fe21 	bl	80196c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019a7e:	e767      	b.n	8019950 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a82:	9d07      	ldr	r5, [sp, #28]
 8019a84:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019a88:	1422      	asrs	r2, r4, #16
 8019a8a:	1431      	asrs	r1, r6, #16
 8019a8c:	fb03 2101 	mla	r1, r3, r1, r2
 8019a90:	9a07      	ldr	r2, [sp, #28]
 8019a92:	440a      	add	r2, r1
 8019a94:	5c69      	ldrb	r1, [r5, r1]
 8019a96:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019a9a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019a9e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019aa2:	f1be 0f00 	cmp.w	lr, #0
 8019aa6:	d05c      	beq.n	8019b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019aa8:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019aac:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019ab0:	950d      	str	r5, [sp, #52]	; 0x34
 8019ab2:	b150      	cbz	r0, 8019aca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019ab4:	eb02 0c03 	add.w	ip, r2, r3
 8019ab8:	5cd3      	ldrb	r3, [r2, r3]
 8019aba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019abe:	930a      	str	r3, [sp, #40]	; 0x28
 8019ac0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019ac4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ac8:	930e      	str	r3, [sp, #56]	; 0x38
 8019aca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019acc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019ace:	fb1e f200 	smulbb	r2, lr, r0
 8019ad2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019ad6:	10d2      	asrs	r2, r2, #3
 8019ad8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019adc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019ae0:	ea4c 0c03 	orr.w	ip, ip, r3
 8019ae4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019ae8:	9311      	str	r3, [sp, #68]	; 0x44
 8019aea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019aec:	041b      	lsls	r3, r3, #16
 8019aee:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019af2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019af6:	ea43 030b 	orr.w	r3, r3, fp
 8019afa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019afc:	4353      	muls	r3, r2
 8019afe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019b02:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019b06:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019b0a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019b0e:	ea43 0b01 	orr.w	fp, r3, r1
 8019b12:	f1c0 0110 	rsb	r1, r0, #16
 8019b16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b18:	eba1 0e0e 	sub.w	lr, r1, lr
 8019b1c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019b20:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019b24:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019b28:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019b2c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019b30:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019b34:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019b38:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019b3c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019b40:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019b44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019b48:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019b4c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019b50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019b52:	f82a cb02 	strh.w	ip, [sl], #2
 8019b56:	441c      	add	r4, r3
 8019b58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019b5a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019b5e:	441e      	add	r6, r3
 8019b60:	e723      	b.n	80199aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019b62:	2800      	cmp	r0, #0
 8019b64:	d0b1      	beq.n	8019aca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019b66:	5cd3      	ldrb	r3, [r2, r3]
 8019b68:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b6c:	930a      	str	r3, [sp, #40]	; 0x28
 8019b6e:	e7ac      	b.n	8019aca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019b70:	b013      	add	sp, #76	; 0x4c
 8019b72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019b76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b7a:	880d      	ldrh	r5, [r1, #0]
 8019b7c:	b087      	sub	sp, #28
 8019b7e:	10ef      	asrs	r7, r5, #3
 8019b80:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019b84:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b88:	00ed      	lsls	r5, r5, #3
 8019b8a:	9701      	str	r7, [sp, #4]
 8019b8c:	b2ed      	uxtb	r5, r5
 8019b8e:	9502      	str	r5, [sp, #8]
 8019b90:	9d01      	ldr	r5, [sp, #4]
 8019b92:	9103      	str	r1, [sp, #12]
 8019b94:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019b98:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019b9c:	9902      	ldr	r1, [sp, #8]
 8019b9e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019ba2:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019ba6:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019baa:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019bae:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019bb2:	022d      	lsls	r5, r5, #8
 8019bb4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019bb8:	fb06 0709 	mla	r7, r6, r9, r0
 8019bbc:	430d      	orrs	r5, r1
 8019bbe:	2e00      	cmp	r6, #0
 8019bc0:	eb02 0c07 	add.w	ip, r2, r7
 8019bc4:	9505      	str	r5, [sp, #20]
 8019bc6:	f2c0 80b6 	blt.w	8019d36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019bca:	45b3      	cmp	fp, r6
 8019bcc:	f340 80b3 	ble.w	8019d36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019bd0:	2800      	cmp	r0, #0
 8019bd2:	f2c0 80ae 	blt.w	8019d32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019bd6:	4581      	cmp	r9, r0
 8019bd8:	f340 80ab 	ble.w	8019d32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019bdc:	5dd7      	ldrb	r7, [r2, r7]
 8019bde:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019be2:	441f      	add	r7, r3
 8019be4:	1c42      	adds	r2, r0, #1
 8019be6:	f100 80a9 	bmi.w	8019d3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019bea:	4591      	cmp	r9, r2
 8019bec:	f340 80a6 	ble.w	8019d3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019bf0:	2c00      	cmp	r4, #0
 8019bf2:	f000 80a3 	beq.w	8019d3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019bf6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019bfa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019bfe:	441d      	add	r5, r3
 8019c00:	3601      	adds	r6, #1
 8019c02:	f100 809f 	bmi.w	8019d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019c06:	45b3      	cmp	fp, r6
 8019c08:	f340 809c 	ble.w	8019d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019c0c:	f1be 0f00 	cmp.w	lr, #0
 8019c10:	f000 8098 	beq.w	8019d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019c14:	2800      	cmp	r0, #0
 8019c16:	f2c0 8093 	blt.w	8019d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019c1a:	4581      	cmp	r9, r0
 8019c1c:	f340 8090 	ble.w	8019d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019c20:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019c24:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019c28:	441e      	add	r6, r3
 8019c2a:	3001      	adds	r0, #1
 8019c2c:	f100 808d 	bmi.w	8019d4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019c30:	4581      	cmp	r9, r0
 8019c32:	f340 808a 	ble.w	8019d4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019c36:	2c00      	cmp	r4, #0
 8019c38:	f000 8087 	beq.w	8019d4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019c3c:	44e1      	add	r9, ip
 8019c3e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019c42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019c46:	4413      	add	r3, r2
 8019c48:	b2a4      	uxth	r4, r4
 8019c4a:	fa1f fe8e 	uxth.w	lr, lr
 8019c4e:	fb04 fb0e 	mul.w	fp, r4, lr
 8019c52:	0124      	lsls	r4, r4, #4
 8019c54:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019c58:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019c5c:	eba4 040b 	sub.w	r4, r4, fp
 8019c60:	fa1f f08e 	uxth.w	r0, lr
 8019c64:	b2a2      	uxth	r2, r4
 8019c66:	78ac      	ldrb	r4, [r5, #2]
 8019c68:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019c6c:	9901      	ldr	r1, [sp, #4]
 8019c6e:	eba9 0900 	sub.w	r9, r9, r0
 8019c72:	fa1f f989 	uxth.w	r9, r9
 8019c76:	4354      	muls	r4, r2
 8019c78:	fb09 440c 	mla	r4, r9, ip, r4
 8019c7c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019c80:	fb00 440c 	mla	r4, r0, ip, r4
 8019c84:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019c88:	fa1f fe88 	uxth.w	lr, r8
 8019c8c:	ea6f 0808 	mvn.w	r8, r8
 8019c90:	fa5f f888 	uxtb.w	r8, r8
 8019c94:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019c98:	fb1a fa08 	smulbb	sl, sl, r8
 8019c9c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019ca0:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019ca4:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019ca8:	787c      	ldrb	r4, [r7, #1]
 8019caa:	782d      	ldrb	r5, [r5, #0]
 8019cac:	783f      	ldrb	r7, [r7, #0]
 8019cae:	fb02 fa0a 	mul.w	sl, r2, sl
 8019cb2:	fb09 aa04 	mla	sl, r9, r4, sl
 8019cb6:	7874      	ldrb	r4, [r6, #1]
 8019cb8:	436a      	muls	r2, r5
 8019cba:	7835      	ldrb	r5, [r6, #0]
 8019cbc:	fb00 aa04 	mla	sl, r0, r4, sl
 8019cc0:	fb09 2207 	mla	r2, r9, r7, r2
 8019cc4:	785c      	ldrb	r4, [r3, #1]
 8019cc6:	781b      	ldrb	r3, [r3, #0]
 8019cc8:	fb00 2005 	mla	r0, r0, r5, r2
 8019ccc:	fb0b a404 	mla	r4, fp, r4, sl
 8019cd0:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019cd4:	9b02      	ldr	r3, [sp, #8]
 8019cd6:	fb11 fa08 	smulbb	sl, r1, r8
 8019cda:	fa1f fc8c 	uxth.w	ip, ip
 8019cde:	fb13 f808 	smulbb	r8, r3, r8
 8019ce2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019ce6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019cea:	fb04 a40e 	mla	r4, r4, lr, sl
 8019cee:	f10c 0301 	add.w	r3, ip, #1
 8019cf2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019cf6:	fa1f fe8e 	uxth.w	lr, lr
 8019cfa:	b2a4      	uxth	r4, r4
 8019cfc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019d00:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019d04:	f104 0a01 	add.w	sl, r4, #1
 8019d08:	f10e 0c01 	add.w	ip, lr, #1
 8019d0c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019d10:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019d14:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019d18:	0964      	lsrs	r4, r4, #5
 8019d1a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019d1e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019d22:	9b03      	ldr	r3, [sp, #12]
 8019d24:	ea4c 0c04 	orr.w	ip, ip, r4
 8019d28:	f8a3 c000 	strh.w	ip, [r3]
 8019d2c:	b007      	add	sp, #28
 8019d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d32:	af05      	add	r7, sp, #20
 8019d34:	e756      	b.n	8019be4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019d36:	ad05      	add	r5, sp, #20
 8019d38:	462f      	mov	r7, r5
 8019d3a:	e761      	b.n	8019c00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019d3c:	ad05      	add	r5, sp, #20
 8019d3e:	e75f      	b.n	8019c00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019d40:	ae05      	add	r6, sp, #20
 8019d42:	e772      	b.n	8019c2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019d44:	ab05      	add	r3, sp, #20
 8019d46:	461e      	mov	r6, r3
 8019d48:	e77e      	b.n	8019c48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019d4a:	ab05      	add	r3, sp, #20
 8019d4c:	e77c      	b.n	8019c48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d52:	b095      	sub	sp, #84	; 0x54
 8019d54:	9212      	str	r2, [sp, #72]	; 0x48
 8019d56:	9309      	str	r3, [sp, #36]	; 0x24
 8019d58:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019d5a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019d5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8019d60:	910e      	str	r1, [sp, #56]	; 0x38
 8019d62:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019d66:	9013      	str	r0, [sp, #76]	; 0x4c
 8019d68:	6850      	ldr	r0, [r2, #4]
 8019d6a:	6812      	ldr	r2, [r2, #0]
 8019d6c:	fb00 1303 	mla	r3, r0, r3, r1
 8019d70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019d74:	930a      	str	r3, [sp, #40]	; 0x28
 8019d76:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d78:	681b      	ldr	r3, [r3, #0]
 8019d7a:	930d      	str	r3, [sp, #52]	; 0x34
 8019d7c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d7e:	685c      	ldr	r4, [r3, #4]
 8019d80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019d82:	43db      	mvns	r3, r3
 8019d84:	b2db      	uxtb	r3, r3
 8019d86:	3404      	adds	r4, #4
 8019d88:	930b      	str	r3, [sp, #44]	; 0x2c
 8019d8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d8c:	2b00      	cmp	r3, #0
 8019d8e:	dc03      	bgt.n	8019d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019d90:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019d92:	2b00      	cmp	r3, #0
 8019d94:	f340 8255 	ble.w	801a242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019d98:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019d9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019da2:	1e48      	subs	r0, r1, #1
 8019da4:	1e55      	subs	r5, r2, #1
 8019da6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019da8:	2b00      	cmp	r3, #0
 8019daa:	f340 80f9 	ble.w	8019fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019dae:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019db0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019db2:	1436      	asrs	r6, r6, #16
 8019db4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019db8:	d406      	bmi.n	8019dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019dba:	4286      	cmp	r6, r0
 8019dbc:	da04      	bge.n	8019dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019dbe:	2b00      	cmp	r3, #0
 8019dc0:	db02      	blt.n	8019dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019dc2:	42ab      	cmp	r3, r5
 8019dc4:	f2c0 80ed 	blt.w	8019fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019dc8:	3601      	adds	r6, #1
 8019dca:	f100 80da 	bmi.w	8019f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019dce:	42b1      	cmp	r1, r6
 8019dd0:	f2c0 80d7 	blt.w	8019f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019dd4:	3301      	adds	r3, #1
 8019dd6:	f100 80d4 	bmi.w	8019f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019dda:	429a      	cmp	r2, r3
 8019ddc:	f2c0 80d1 	blt.w	8019f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019de2:	9311      	str	r3, [sp, #68]	; 0x44
 8019de4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019de6:	930c      	str	r3, [sp, #48]	; 0x30
 8019de8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019dea:	2b00      	cmp	r3, #0
 8019dec:	f340 80fa 	ble.w	8019fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019df0:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019df2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019df4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019df6:	68c6      	ldr	r6, [r0, #12]
 8019df8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019dfa:	141d      	asrs	r5, r3, #16
 8019dfc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019e00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019e02:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019e04:	1400      	asrs	r0, r0, #16
 8019e06:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019e0a:	6892      	ldr	r2, [r2, #8]
 8019e0c:	f100 813e 	bmi.w	801a08c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019e10:	1e57      	subs	r7, r2, #1
 8019e12:	42b8      	cmp	r0, r7
 8019e14:	f280 813a 	bge.w	801a08c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019e18:	2d00      	cmp	r5, #0
 8019e1a:	f2c0 8137 	blt.w	801a08c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019e1e:	1e77      	subs	r7, r6, #1
 8019e20:	42bd      	cmp	r5, r7
 8019e22:	f280 8133 	bge.w	801a08c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019e26:	b212      	sxth	r2, r2
 8019e28:	fb05 0002 	mla	r0, r5, r2, r0
 8019e2c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019e2e:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019e32:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019e36:	182e      	adds	r6, r5, r0
 8019e38:	eb04 050a 	add.w	r5, r4, sl
 8019e3c:	2b00      	cmp	r3, #0
 8019e3e:	f000 8117 	beq.w	801a070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019e42:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019e46:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019e4a:	44a4      	add	ip, r4
 8019e4c:	2900      	cmp	r1, #0
 8019e4e:	f000 8117 	beq.w	801a080 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019e52:	18b0      	adds	r0, r6, r2
 8019e54:	5cb2      	ldrb	r2, [r6, r2]
 8019e56:	7840      	ldrb	r0, [r0, #1]
 8019e58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019e5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019e60:	4422      	add	r2, r4
 8019e62:	4420      	add	r0, r4
 8019e64:	b29b      	uxth	r3, r3
 8019e66:	b289      	uxth	r1, r1
 8019e68:	fb03 f901 	mul.w	r9, r3, r1
 8019e6c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019e70:	011b      	lsls	r3, r3, #4
 8019e72:	b289      	uxth	r1, r1
 8019e74:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8019e78:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019e7c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019e7e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8019e82:	f8b6 e000 	ldrh.w	lr, [r6]
 8019e86:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8019e8a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8019e8e:	eba3 0309 	sub.w	r3, r3, r9
 8019e92:	b29b      	uxth	r3, r3
 8019e94:	eba8 0801 	sub.w	r8, r8, r1
 8019e98:	fa1f f888 	uxth.w	r8, r8
 8019e9c:	435f      	muls	r7, r3
 8019e9e:	fb08 770b 	mla	r7, r8, fp, r7
 8019ea2:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019ea6:	9310      	str	r3, [sp, #64]	; 0x40
 8019ea8:	fb01 770b 	mla	r7, r1, fp, r7
 8019eac:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019eb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019eb2:	fb09 770b 	mla	r7, r9, fp, r7
 8019eb6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8019eba:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019ebe:	fb1b fb03 	smulbb	fp, fp, r3
 8019ec2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019ec6:	fb07 b706 	mla	r7, r7, r6, fp
 8019eca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ecc:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019ed0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019ed4:	f89c c000 	ldrb.w	ip, [ip]
 8019ed8:	435d      	muls	r5, r3
 8019eda:	fb08 550b 	mla	r5, r8, fp, r5
 8019ede:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019ee2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019ee4:	fb01 550b 	mla	r5, r1, fp, r5
 8019ee8:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019eec:	fb09 550b 	mla	r5, r9, fp, r5
 8019ef0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8019ef4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019ef8:	fb1b fb03 	smulbb	fp, fp, r3
 8019efc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019efe:	fb03 f30c 	mul.w	r3, r3, ip
 8019f02:	f892 c000 	ldrb.w	ip, [r2]
 8019f06:	fb08 330a 	mla	r3, r8, sl, r3
 8019f0a:	fb01 330c 	mla	r3, r1, ip, r3
 8019f0e:	f890 c000 	ldrb.w	ip, [r0]
 8019f12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019f16:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019f1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f1c:	fa5f fe8e 	uxtb.w	lr, lr
 8019f20:	b2bf      	uxth	r7, r7
 8019f22:	fb1e fe03 	smulbb	lr, lr, r3
 8019f26:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019f2a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019f2e:	fb05 b506 	mla	r5, r5, r6, fp
 8019f32:	1c7b      	adds	r3, r7, #1
 8019f34:	fb0c e606 	mla	r6, ip, r6, lr
 8019f38:	b2ad      	uxth	r5, r5
 8019f3a:	b2b6      	uxth	r6, r6
 8019f3c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019f40:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8019f44:	f105 0b01 	add.w	fp, r5, #1
 8019f48:	1c77      	adds	r7, r6, #1
 8019f4a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8019f4e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8019f52:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019f56:	096d      	lsrs	r5, r5, #5
 8019f58:	431f      	orrs	r7, r3
 8019f5a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019f5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019f60:	433d      	orrs	r5, r7
 8019f62:	801d      	strh	r5, [r3, #0]
 8019f64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019f66:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019f68:	3302      	adds	r3, #2
 8019f6a:	930c      	str	r3, [sp, #48]	; 0x30
 8019f6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019f6e:	4413      	add	r3, r2
 8019f70:	931f      	str	r3, [sp, #124]	; 0x7c
 8019f72:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8019f74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019f76:	4413      	add	r3, r2
 8019f78:	9320      	str	r3, [sp, #128]	; 0x80
 8019f7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019f7c:	3b01      	subs	r3, #1
 8019f7e:	9311      	str	r3, [sp, #68]	; 0x44
 8019f80:	e732      	b.n	8019de8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019f82:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019f84:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8019f86:	4433      	add	r3, r6
 8019f88:	931f      	str	r3, [sp, #124]	; 0x7c
 8019f8a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8019f8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019f8e:	4433      	add	r3, r6
 8019f90:	9320      	str	r3, [sp, #128]	; 0x80
 8019f92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f94:	3b01      	subs	r3, #1
 8019f96:	9309      	str	r3, [sp, #36]	; 0x24
 8019f98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f9a:	3302      	adds	r3, #2
 8019f9c:	930a      	str	r3, [sp, #40]	; 0x28
 8019f9e:	e702      	b.n	8019da6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019fa0:	d027      	beq.n	8019ff2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8019fa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fa4:	9821      	ldr	r0, [sp, #132]	; 0x84
 8019fa6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8019fa8:	3b01      	subs	r3, #1
 8019faa:	fb00 5003 	mla	r0, r0, r3, r5
 8019fae:	1400      	asrs	r0, r0, #16
 8019fb0:	f53f af16 	bmi.w	8019de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019fb4:	3901      	subs	r1, #1
 8019fb6:	4288      	cmp	r0, r1
 8019fb8:	f6bf af12 	bge.w	8019de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019fbc:	9922      	ldr	r1, [sp, #136]	; 0x88
 8019fbe:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019fc0:	fb01 0303 	mla	r3, r1, r3, r0
 8019fc4:	141b      	asrs	r3, r3, #16
 8019fc6:	f53f af0b 	bmi.w	8019de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019fca:	3a01      	subs	r2, #1
 8019fcc:	4293      	cmp	r3, r2
 8019fce:	f6bf af07 	bge.w	8019de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fd4:	9311      	str	r3, [sp, #68]	; 0x44
 8019fd6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8019fda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019fdc:	930c      	str	r3, [sp, #48]	; 0x30
 8019fde:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019fe0:	2b00      	cmp	r3, #0
 8019fe2:	dc70      	bgt.n	801a0c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8019fe4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fe6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019fe8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019fec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019ff0:	930a      	str	r3, [sp, #40]	; 0x28
 8019ff2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ff4:	2b00      	cmp	r3, #0
 8019ff6:	f340 8124 	ble.w	801a242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019ffa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019ffe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a002:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a006:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a008:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a00c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a010:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a014:	eef0 6a62 	vmov.f32	s13, s5
 801a018:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a01c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a020:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a024:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a028:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a02c:	eef0 6a43 	vmov.f32	s13, s6
 801a030:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a034:	ee12 2a90 	vmov	r2, s5
 801a038:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a03c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a040:	ee13 2a10 	vmov	r2, s6
 801a044:	9321      	str	r3, [sp, #132]	; 0x84
 801a046:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a048:	fb92 f3f3 	sdiv	r3, r2, r3
 801a04c:	9322      	str	r3, [sp, #136]	; 0x88
 801a04e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a050:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a052:	3b01      	subs	r3, #1
 801a054:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a058:	930e      	str	r3, [sp, #56]	; 0x38
 801a05a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a05c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a060:	bf08      	it	eq
 801a062:	4613      	moveq	r3, r2
 801a064:	9309      	str	r3, [sp, #36]	; 0x24
 801a066:	eeb0 3a67 	vmov.f32	s6, s15
 801a06a:	eef0 2a47 	vmov.f32	s5, s14
 801a06e:	e68c      	b.n	8019d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a070:	b149      	cbz	r1, 801a086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a072:	5cb2      	ldrb	r2, [r6, r2]
 801a074:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a078:	4422      	add	r2, r4
 801a07a:	4628      	mov	r0, r5
 801a07c:	46ac      	mov	ip, r5
 801a07e:	e6f1      	b.n	8019e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a080:	4628      	mov	r0, r5
 801a082:	462a      	mov	r2, r5
 801a084:	e6ee      	b.n	8019e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a086:	4628      	mov	r0, r5
 801a088:	462a      	mov	r2, r5
 801a08a:	e7f7      	b.n	801a07c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a08c:	1c47      	adds	r7, r0, #1
 801a08e:	f53f af69 	bmi.w	8019f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a092:	42ba      	cmp	r2, r7
 801a094:	f6ff af66 	blt.w	8019f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a098:	1c6f      	adds	r7, r5, #1
 801a09a:	f53f af63 	bmi.w	8019f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a09e:	42be      	cmp	r6, r7
 801a0a0:	f6ff af60 	blt.w	8019f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a0a4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a0a6:	9002      	str	r0, [sp, #8]
 801a0a8:	b236      	sxth	r6, r6
 801a0aa:	b212      	sxth	r2, r2
 801a0ac:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a0b0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a0b4:	9200      	str	r2, [sp, #0]
 801a0b6:	9601      	str	r6, [sp, #4]
 801a0b8:	4623      	mov	r3, r4
 801a0ba:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a0be:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a0c0:	f7ff fd59 	bl	8019b76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a0c4:	e74e      	b.n	8019f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a0c6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a0c8:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a0ca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a0cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a0ce:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a0d2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a0d4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a0d8:	142d      	asrs	r5, r5, #16
 801a0da:	1400      	asrs	r0, r0, #16
 801a0dc:	fb02 5000 	mla	r0, r2, r0, r5
 801a0e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a0e2:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a0e6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a0ea:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a0ee:	182e      	adds	r6, r5, r0
 801a0f0:	eb04 0509 	add.w	r5, r4, r9
 801a0f4:	2b00      	cmp	r3, #0
 801a0f6:	f000 8096 	beq.w	801a226 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a0fa:	7877      	ldrb	r7, [r6, #1]
 801a0fc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a100:	4427      	add	r7, r4
 801a102:	2900      	cmp	r1, #0
 801a104:	f000 8097 	beq.w	801a236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a108:	18b0      	adds	r0, r6, r2
 801a10a:	5cb2      	ldrb	r2, [r6, r2]
 801a10c:	7840      	ldrb	r0, [r0, #1]
 801a10e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a112:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a116:	4422      	add	r2, r4
 801a118:	4420      	add	r0, r4
 801a11a:	b29b      	uxth	r3, r3
 801a11c:	b289      	uxth	r1, r1
 801a11e:	fb03 f801 	mul.w	r8, r3, r1
 801a122:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a124:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a128:	f8b6 c000 	ldrh.w	ip, [r6]
 801a12c:	78be      	ldrb	r6, [r7, #2]
 801a12e:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a132:	011b      	lsls	r3, r3, #4
 801a134:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a138:	b289      	uxth	r1, r1
 801a13a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a13e:	eba3 0308 	sub.w	r3, r3, r8
 801a142:	b29b      	uxth	r3, r3
 801a144:	ebae 0e01 	sub.w	lr, lr, r1
 801a148:	fa1f fe8e 	uxth.w	lr, lr
 801a14c:	435e      	muls	r6, r3
 801a14e:	fb0e 660b 	mla	r6, lr, fp, r6
 801a152:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a156:	9310      	str	r3, [sp, #64]	; 0x40
 801a158:	fb01 660b 	mla	r6, r1, fp, r6
 801a15c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a160:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a162:	fb08 660b 	mla	r6, r8, fp, r6
 801a166:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a16a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a16e:	fb1b fb03 	smulbb	fp, fp, r3
 801a172:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a176:	fb06 b60a 	mla	r6, r6, sl, fp
 801a17a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a17c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a180:	787d      	ldrb	r5, [r7, #1]
 801a182:	783f      	ldrb	r7, [r7, #0]
 801a184:	435d      	muls	r5, r3
 801a186:	fb0e 550b 	mla	r5, lr, fp, r5
 801a18a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a18e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a190:	fb01 550b 	mla	r5, r1, fp, r5
 801a194:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a198:	fb08 550b 	mla	r5, r8, fp, r5
 801a19c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a1a0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a1a4:	fb1b fb03 	smulbb	fp, fp, r3
 801a1a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1aa:	437b      	muls	r3, r7
 801a1ac:	7817      	ldrb	r7, [r2, #0]
 801a1ae:	fb0e 3309 	mla	r3, lr, r9, r3
 801a1b2:	fb01 3307 	mla	r3, r1, r7, r3
 801a1b6:	7807      	ldrb	r7, [r0, #0]
 801a1b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a1bc:	fb08 3707 	mla	r7, r8, r7, r3
 801a1c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a1c2:	fa5f fc8c 	uxtb.w	ip, ip
 801a1c6:	fb1c fc03 	smulbb	ip, ip, r3
 801a1ca:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a1ce:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a1d2:	fb05 b50a 	mla	r5, r5, sl, fp
 801a1d6:	fb07 c70a 	mla	r7, r7, sl, ip
 801a1da:	b2b6      	uxth	r6, r6
 801a1dc:	b2ad      	uxth	r5, r5
 801a1de:	b2bf      	uxth	r7, r7
 801a1e0:	1c73      	adds	r3, r6, #1
 801a1e2:	1c7a      	adds	r2, r7, #1
 801a1e4:	f105 0b01 	add.w	fp, r5, #1
 801a1e8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a1ec:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a1f0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a1f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a1f8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a1fc:	096d      	lsrs	r5, r5, #5
 801a1fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a200:	4316      	orrs	r6, r2
 801a202:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a206:	432e      	orrs	r6, r5
 801a208:	f823 6b02 	strh.w	r6, [r3], #2
 801a20c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a20e:	930c      	str	r3, [sp, #48]	; 0x30
 801a210:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a212:	4413      	add	r3, r2
 801a214:	931f      	str	r3, [sp, #124]	; 0x7c
 801a216:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a218:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a21a:	4413      	add	r3, r2
 801a21c:	9320      	str	r3, [sp, #128]	; 0x80
 801a21e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a220:	3b01      	subs	r3, #1
 801a222:	9311      	str	r3, [sp, #68]	; 0x44
 801a224:	e6db      	b.n	8019fde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a226:	b149      	cbz	r1, 801a23c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a228:	5cb2      	ldrb	r2, [r6, r2]
 801a22a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a22e:	4422      	add	r2, r4
 801a230:	4628      	mov	r0, r5
 801a232:	462f      	mov	r7, r5
 801a234:	e771      	b.n	801a11a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a236:	4628      	mov	r0, r5
 801a238:	462a      	mov	r2, r5
 801a23a:	e76e      	b.n	801a11a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a23c:	4628      	mov	r0, r5
 801a23e:	462a      	mov	r2, r5
 801a240:	e7f7      	b.n	801a232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a242:	b015      	add	sp, #84	; 0x54
 801a244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a248 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a248:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a24c:	880f      	ldrh	r7, [r1, #0]
 801a24e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a252:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a256:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a25a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a25e:	023c      	lsls	r4, r7, #8
 801a260:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a264:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a268:	017c      	lsls	r4, r7, #5
 801a26a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a26e:	00ff      	lsls	r7, r7, #3
 801a270:	ea4b 0404 	orr.w	r4, fp, r4
 801a274:	b2ff      	uxtb	r7, r7
 801a276:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a27a:	4327      	orrs	r7, r4
 801a27c:	2d00      	cmp	r5, #0
 801a27e:	eb02 080a 	add.w	r8, r2, sl
 801a282:	9701      	str	r7, [sp, #4]
 801a284:	db7e      	blt.n	801a384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a286:	45a9      	cmp	r9, r5
 801a288:	dd7c      	ble.n	801a384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a28a:	f1bc 0f00 	cmp.w	ip, #0
 801a28e:	db77      	blt.n	801a380 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a290:	45e6      	cmp	lr, ip
 801a292:	dd75      	ble.n	801a380 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a294:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a298:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a29c:	441f      	add	r7, r3
 801a29e:	f11c 0201 	adds.w	r2, ip, #1
 801a2a2:	d472      	bmi.n	801a38a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a2a4:	4596      	cmp	lr, r2
 801a2a6:	dd70      	ble.n	801a38a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a2a8:	2800      	cmp	r0, #0
 801a2aa:	d06e      	beq.n	801a38a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a2ac:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a2b0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a2b4:	441c      	add	r4, r3
 801a2b6:	3501      	adds	r5, #1
 801a2b8:	d46b      	bmi.n	801a392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a2ba:	45a9      	cmp	r9, r5
 801a2bc:	dd69      	ble.n	801a392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a2be:	2e00      	cmp	r6, #0
 801a2c0:	d067      	beq.n	801a392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a2c2:	f1bc 0f00 	cmp.w	ip, #0
 801a2c6:	db62      	blt.n	801a38e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a2c8:	45e6      	cmp	lr, ip
 801a2ca:	dd60      	ble.n	801a38e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a2cc:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a2d0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a2d4:	441d      	add	r5, r3
 801a2d6:	f11c 0201 	adds.w	r2, ip, #1
 801a2da:	d45d      	bmi.n	801a398 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a2dc:	4596      	cmp	lr, r2
 801a2de:	dd5b      	ble.n	801a398 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a2e0:	2800      	cmp	r0, #0
 801a2e2:	d059      	beq.n	801a398 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a2e4:	44c6      	add	lr, r8
 801a2e6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a2ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a2ee:	4413      	add	r3, r2
 801a2f0:	b280      	uxth	r0, r0
 801a2f2:	b2b2      	uxth	r2, r6
 801a2f4:	fb00 f602 	mul.w	r6, r0, r2
 801a2f8:	0100      	lsls	r0, r0, #4
 801a2fa:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a2fe:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a302:	1b80      	subs	r0, r0, r6
 801a304:	fa1f fc82 	uxth.w	ip, r2
 801a308:	b282      	uxth	r2, r0
 801a30a:	78a0      	ldrb	r0, [r4, #2]
 801a30c:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a310:	f897 9000 	ldrb.w	r9, [r7]
 801a314:	787f      	ldrb	r7, [r7, #1]
 801a316:	eba8 080c 	sub.w	r8, r8, ip
 801a31a:	fa1f f888 	uxth.w	r8, r8
 801a31e:	4350      	muls	r0, r2
 801a320:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a324:	78a8      	ldrb	r0, [r5, #2]
 801a326:	fb0c e000 	mla	r0, ip, r0, lr
 801a32a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a32e:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a332:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a336:	f894 e000 	ldrb.w	lr, [r4]
 801a33a:	fb02 fe0e 	mul.w	lr, r2, lr
 801a33e:	fb08 e909 	mla	r9, r8, r9, lr
 801a342:	f895 e000 	ldrb.w	lr, [r5]
 801a346:	fb0c 990e 	mla	r9, ip, lr, r9
 801a34a:	f893 e000 	ldrb.w	lr, [r3]
 801a34e:	785b      	ldrb	r3, [r3, #1]
 801a350:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a354:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a358:	ea4e 0e00 	orr.w	lr, lr, r0
 801a35c:	7860      	ldrb	r0, [r4, #1]
 801a35e:	4350      	muls	r0, r2
 801a360:	786a      	ldrb	r2, [r5, #1]
 801a362:	fb08 0007 	mla	r0, r8, r7, r0
 801a366:	fb0c 0202 	mla	r2, ip, r2, r0
 801a36a:	fb06 2303 	mla	r3, r6, r3, r2
 801a36e:	095b      	lsrs	r3, r3, #5
 801a370:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a374:	ea4e 0303 	orr.w	r3, lr, r3
 801a378:	800b      	strh	r3, [r1, #0]
 801a37a:	b003      	add	sp, #12
 801a37c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a380:	af01      	add	r7, sp, #4
 801a382:	e78c      	b.n	801a29e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a384:	ac01      	add	r4, sp, #4
 801a386:	4627      	mov	r7, r4
 801a388:	e795      	b.n	801a2b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a38a:	ac01      	add	r4, sp, #4
 801a38c:	e793      	b.n	801a2b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a38e:	ad01      	add	r5, sp, #4
 801a390:	e7a1      	b.n	801a2d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a392:	ab01      	add	r3, sp, #4
 801a394:	461d      	mov	r5, r3
 801a396:	e7ab      	b.n	801a2f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a398:	ab01      	add	r3, sp, #4
 801a39a:	e7a9      	b.n	801a2f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a39c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a39c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3a0:	b08f      	sub	sp, #60	; 0x3c
 801a3a2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a3a6:	920c      	str	r2, [sp, #48]	; 0x30
 801a3a8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a3aa:	910a      	str	r1, [sp, #40]	; 0x28
 801a3ac:	9306      	str	r3, [sp, #24]
 801a3ae:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a3b2:	900d      	str	r0, [sp, #52]	; 0x34
 801a3b4:	6850      	ldr	r0, [r2, #4]
 801a3b6:	6812      	ldr	r2, [r2, #0]
 801a3b8:	fb00 1303 	mla	r3, r0, r3, r1
 801a3bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a3c0:	9307      	str	r3, [sp, #28]
 801a3c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a3c4:	681b      	ldr	r3, [r3, #0]
 801a3c6:	9308      	str	r3, [sp, #32]
 801a3c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a3ca:	685c      	ldr	r4, [r3, #4]
 801a3cc:	3404      	adds	r4, #4
 801a3ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a3d0:	2b00      	cmp	r3, #0
 801a3d2:	dc03      	bgt.n	801a3dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a3d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a3d6:	2b00      	cmp	r3, #0
 801a3d8:	f340 81d6 	ble.w	801a788 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a3dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a3de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a3e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a3e6:	1e48      	subs	r0, r1, #1
 801a3e8:	1e56      	subs	r6, r2, #1
 801a3ea:	9b06      	ldr	r3, [sp, #24]
 801a3ec:	2b00      	cmp	r3, #0
 801a3ee:	f340 80b7 	ble.w	801a560 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a3f2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a3f6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a3fa:	d406      	bmi.n	801a40a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a3fc:	4287      	cmp	r7, r0
 801a3fe:	da04      	bge.n	801a40a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a400:	2b00      	cmp	r3, #0
 801a402:	db02      	blt.n	801a40a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a404:	42b3      	cmp	r3, r6
 801a406:	f2c0 80ac 	blt.w	801a562 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a40a:	3701      	adds	r7, #1
 801a40c:	f100 809d 	bmi.w	801a54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a410:	42b9      	cmp	r1, r7
 801a412:	f2c0 809a 	blt.w	801a54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a416:	3301      	adds	r3, #1
 801a418:	f100 8097 	bmi.w	801a54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a41c:	429a      	cmp	r2, r3
 801a41e:	f2c0 8094 	blt.w	801a54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a422:	9b06      	ldr	r3, [sp, #24]
 801a424:	930b      	str	r3, [sp, #44]	; 0x2c
 801a426:	9b07      	ldr	r3, [sp, #28]
 801a428:	9309      	str	r3, [sp, #36]	; 0x24
 801a42a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a42c:	2b00      	cmp	r3, #0
 801a42e:	f340 80b5 	ble.w	801a59c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a432:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a434:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a436:	68c7      	ldr	r7, [r0, #12]
 801a438:	6892      	ldr	r2, [r2, #8]
 801a43a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a43e:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a442:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a446:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a44a:	f100 80fb 	bmi.w	801a644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a44e:	f102 3cff 	add.w	ip, r2, #4294967295
 801a452:	4560      	cmp	r0, ip
 801a454:	f280 80f6 	bge.w	801a644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a458:	2e00      	cmp	r6, #0
 801a45a:	f2c0 80f3 	blt.w	801a644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a45e:	f107 3cff 	add.w	ip, r7, #4294967295
 801a462:	4566      	cmp	r6, ip
 801a464:	f280 80ee 	bge.w	801a644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a468:	b212      	sxth	r2, r2
 801a46a:	fb06 0002 	mla	r0, r6, r2, r0
 801a46e:	9e08      	ldr	r6, [sp, #32]
 801a470:	1837      	adds	r7, r6, r0
 801a472:	5c30      	ldrb	r0, [r6, r0]
 801a474:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a478:	eb04 0c08 	add.w	ip, r4, r8
 801a47c:	2b00      	cmp	r3, #0
 801a47e:	f000 80d3 	beq.w	801a628 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a482:	787e      	ldrb	r6, [r7, #1]
 801a484:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a488:	4426      	add	r6, r4
 801a48a:	2900      	cmp	r1, #0
 801a48c:	f000 80d4 	beq.w	801a638 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a490:	18b8      	adds	r0, r7, r2
 801a492:	5cba      	ldrb	r2, [r7, r2]
 801a494:	7840      	ldrb	r0, [r0, #1]
 801a496:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a49a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a49e:	4422      	add	r2, r4
 801a4a0:	4420      	add	r0, r4
 801a4a2:	b29b      	uxth	r3, r3
 801a4a4:	b289      	uxth	r1, r1
 801a4a6:	fb03 f901 	mul.w	r9, r3, r1
 801a4aa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a4ae:	011b      	lsls	r3, r3, #4
 801a4b0:	b289      	uxth	r1, r1
 801a4b2:	78b7      	ldrb	r7, [r6, #2]
 801a4b4:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a4b8:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a4bc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a4c0:	eba3 0309 	sub.w	r3, r3, r9
 801a4c4:	b29b      	uxth	r3, r3
 801a4c6:	ebae 0e01 	sub.w	lr, lr, r1
 801a4ca:	fa1f fe8e 	uxth.w	lr, lr
 801a4ce:	435f      	muls	r7, r3
 801a4d0:	fb0e 770a 	mla	r7, lr, sl, r7
 801a4d4:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a4d8:	fb01 770a 	mla	r7, r1, sl, r7
 801a4dc:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a4e0:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a4e4:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a4e8:	f896 8000 	ldrb.w	r8, [r6]
 801a4ec:	7876      	ldrb	r6, [r6, #1]
 801a4ee:	fb03 f808 	mul.w	r8, r3, r8
 801a4f2:	fb0e 8807 	mla	r8, lr, r7, r8
 801a4f6:	7817      	ldrb	r7, [r2, #0]
 801a4f8:	fb01 8807 	mla	r8, r1, r7, r8
 801a4fc:	7807      	ldrb	r7, [r0, #0]
 801a4fe:	fb09 8707 	mla	r7, r9, r7, r8
 801a502:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a506:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a50a:	ea47 070a 	orr.w	r7, r7, sl
 801a50e:	4373      	muls	r3, r6
 801a510:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a514:	fb0e 330c 	mla	r3, lr, ip, r3
 801a518:	fb01 310a 	mla	r1, r1, sl, r3
 801a51c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a520:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a522:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a526:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a52a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a52e:	ea47 070a 	orr.w	r7, r7, sl
 801a532:	801f      	strh	r7, [r3, #0]
 801a534:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a536:	3302      	adds	r3, #2
 801a538:	9309      	str	r3, [sp, #36]	; 0x24
 801a53a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a53c:	449b      	add	fp, r3
 801a53e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a540:	441d      	add	r5, r3
 801a542:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a544:	3b01      	subs	r3, #1
 801a546:	930b      	str	r3, [sp, #44]	; 0x2c
 801a548:	e76f      	b.n	801a42a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a54a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a54c:	449b      	add	fp, r3
 801a54e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a550:	441d      	add	r5, r3
 801a552:	9b06      	ldr	r3, [sp, #24]
 801a554:	3b01      	subs	r3, #1
 801a556:	9306      	str	r3, [sp, #24]
 801a558:	9b07      	ldr	r3, [sp, #28]
 801a55a:	3302      	adds	r3, #2
 801a55c:	9307      	str	r3, [sp, #28]
 801a55e:	e744      	b.n	801a3ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a560:	d023      	beq.n	801a5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a562:	9b06      	ldr	r3, [sp, #24]
 801a564:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a566:	3b01      	subs	r3, #1
 801a568:	fb00 b003 	mla	r0, r0, r3, fp
 801a56c:	1400      	asrs	r0, r0, #16
 801a56e:	f53f af58 	bmi.w	801a422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a572:	3901      	subs	r1, #1
 801a574:	4288      	cmp	r0, r1
 801a576:	f6bf af54 	bge.w	801a422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a57a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a57c:	fb01 5303 	mla	r3, r1, r3, r5
 801a580:	141b      	asrs	r3, r3, #16
 801a582:	f53f af4e 	bmi.w	801a422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a586:	3a01      	subs	r2, #1
 801a588:	4293      	cmp	r3, r2
 801a58a:	f6bf af4a 	bge.w	801a422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a58e:	9b06      	ldr	r3, [sp, #24]
 801a590:	9309      	str	r3, [sp, #36]	; 0x24
 801a592:	9b07      	ldr	r3, [sp, #28]
 801a594:	930b      	str	r3, [sp, #44]	; 0x2c
 801a596:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a598:	2b00      	cmp	r3, #0
 801a59a:	dc70      	bgt.n	801a67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a59c:	9b06      	ldr	r3, [sp, #24]
 801a59e:	9a07      	ldr	r2, [sp, #28]
 801a5a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a5a8:	9307      	str	r3, [sp, #28]
 801a5aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5ac:	2b00      	cmp	r3, #0
 801a5ae:	f340 80eb 	ble.w	801a788 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a5b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a5ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a5be:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a5c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a5c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a5cc:	eef0 6a62 	vmov.f32	s13, s5
 801a5d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a5d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a5d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a5dc:	ee16 ba90 	vmov	fp, s13
 801a5e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a5e4:	eef0 6a43 	vmov.f32	s13, s6
 801a5e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a5ec:	ee12 2a90 	vmov	r2, s5
 801a5f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a5f4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5f8:	ee13 2a10 	vmov	r2, s6
 801a5fc:	931b      	str	r3, [sp, #108]	; 0x6c
 801a5fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a600:	fb92 f3f3 	sdiv	r3, r2, r3
 801a604:	931c      	str	r3, [sp, #112]	; 0x70
 801a606:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a608:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a60a:	3b01      	subs	r3, #1
 801a60c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a610:	930a      	str	r3, [sp, #40]	; 0x28
 801a612:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a614:	bf08      	it	eq
 801a616:	4613      	moveq	r3, r2
 801a618:	ee16 5a90 	vmov	r5, s13
 801a61c:	9306      	str	r3, [sp, #24]
 801a61e:	eeb0 3a67 	vmov.f32	s6, s15
 801a622:	eef0 2a47 	vmov.f32	s5, s14
 801a626:	e6d2      	b.n	801a3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a628:	b149      	cbz	r1, 801a63e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a62a:	5cba      	ldrb	r2, [r7, r2]
 801a62c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a630:	4422      	add	r2, r4
 801a632:	4660      	mov	r0, ip
 801a634:	4666      	mov	r6, ip
 801a636:	e734      	b.n	801a4a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a638:	4660      	mov	r0, ip
 801a63a:	4662      	mov	r2, ip
 801a63c:	e731      	b.n	801a4a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a63e:	4660      	mov	r0, ip
 801a640:	4662      	mov	r2, ip
 801a642:	e7f7      	b.n	801a634 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a644:	f110 0c01 	adds.w	ip, r0, #1
 801a648:	f53f af74 	bmi.w	801a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a64c:	4562      	cmp	r2, ip
 801a64e:	f6ff af71 	blt.w	801a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a652:	f116 0c01 	adds.w	ip, r6, #1
 801a656:	f53f af6d 	bmi.w	801a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a65a:	4567      	cmp	r7, ip
 801a65c:	f6ff af6a 	blt.w	801a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a660:	b23f      	sxth	r7, r7
 801a662:	b212      	sxth	r2, r2
 801a664:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a668:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a66c:	9200      	str	r2, [sp, #0]
 801a66e:	9701      	str	r7, [sp, #4]
 801a670:	4623      	mov	r3, r4
 801a672:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a676:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a678:	f7ff fde6 	bl	801a248 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a67c:	e75a      	b.n	801a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a67e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a680:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a684:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a688:	1428      	asrs	r0, r5, #16
 801a68a:	fb02 6000 	mla	r0, r2, r0, r6
 801a68e:	9e08      	ldr	r6, [sp, #32]
 801a690:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a694:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a698:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a69c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a6a0:	1837      	adds	r7, r6, r0
 801a6a2:	eb04 0c08 	add.w	ip, r4, r8
 801a6a6:	2b00      	cmp	r3, #0
 801a6a8:	d060      	beq.n	801a76c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a6aa:	787e      	ldrb	r6, [r7, #1]
 801a6ac:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a6b0:	4426      	add	r6, r4
 801a6b2:	2900      	cmp	r1, #0
 801a6b4:	d062      	beq.n	801a77c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a6b6:	18b8      	adds	r0, r7, r2
 801a6b8:	5cba      	ldrb	r2, [r7, r2]
 801a6ba:	7840      	ldrb	r0, [r0, #1]
 801a6bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a6c0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a6c4:	4422      	add	r2, r4
 801a6c6:	4420      	add	r0, r4
 801a6c8:	b29b      	uxth	r3, r3
 801a6ca:	b289      	uxth	r1, r1
 801a6cc:	fb03 f901 	mul.w	r9, r3, r1
 801a6d0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a6d4:	011b      	lsls	r3, r3, #4
 801a6d6:	b289      	uxth	r1, r1
 801a6d8:	78b7      	ldrb	r7, [r6, #2]
 801a6da:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a6de:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a6e2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a6e6:	eba3 0309 	sub.w	r3, r3, r9
 801a6ea:	b29b      	uxth	r3, r3
 801a6ec:	ebae 0e01 	sub.w	lr, lr, r1
 801a6f0:	fa1f fe8e 	uxth.w	lr, lr
 801a6f4:	435f      	muls	r7, r3
 801a6f6:	fb0e 770a 	mla	r7, lr, sl, r7
 801a6fa:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a6fe:	fb01 770a 	mla	r7, r1, sl, r7
 801a702:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a706:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a70a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a70e:	f896 8000 	ldrb.w	r8, [r6]
 801a712:	7876      	ldrb	r6, [r6, #1]
 801a714:	fb03 f808 	mul.w	r8, r3, r8
 801a718:	fb0e 8807 	mla	r8, lr, r7, r8
 801a71c:	7817      	ldrb	r7, [r2, #0]
 801a71e:	fb01 8807 	mla	r8, r1, r7, r8
 801a722:	7807      	ldrb	r7, [r0, #0]
 801a724:	fb09 8707 	mla	r7, r9, r7, r8
 801a728:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a72c:	4373      	muls	r3, r6
 801a72e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a732:	7856      	ldrb	r6, [r2, #1]
 801a734:	ea47 070a 	orr.w	r7, r7, sl
 801a738:	fb0e 330c 	mla	r3, lr, ip, r3
 801a73c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a740:	fb01 3306 	mla	r3, r1, r6, r3
 801a744:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a748:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a74c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a74e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a752:	ea47 070a 	orr.w	r7, r7, sl
 801a756:	f823 7b02 	strh.w	r7, [r3], #2
 801a75a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a75c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a75e:	449b      	add	fp, r3
 801a760:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a762:	441d      	add	r5, r3
 801a764:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a766:	3b01      	subs	r3, #1
 801a768:	9309      	str	r3, [sp, #36]	; 0x24
 801a76a:	e714      	b.n	801a596 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a76c:	b149      	cbz	r1, 801a782 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a76e:	5cba      	ldrb	r2, [r7, r2]
 801a770:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a774:	4422      	add	r2, r4
 801a776:	4660      	mov	r0, ip
 801a778:	4666      	mov	r6, ip
 801a77a:	e7a5      	b.n	801a6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a77c:	4660      	mov	r0, ip
 801a77e:	4662      	mov	r2, ip
 801a780:	e7a2      	b.n	801a6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a782:	4660      	mov	r0, ip
 801a784:	4662      	mov	r2, ip
 801a786:	e7f7      	b.n	801a778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801a788:	b00f      	add	sp, #60	; 0x3c
 801a78a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a78e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a78e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a792:	b085      	sub	sp, #20
 801a794:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801a798:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a79c:	9102      	str	r1, [sp, #8]
 801a79e:	2c00      	cmp	r4, #0
 801a7a0:	fb04 710c 	mla	r1, r4, ip, r7
 801a7a4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a7a8:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801a7ac:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a7b0:	eb02 0e01 	add.w	lr, r2, r1
 801a7b4:	f2c0 8122 	blt.w	801a9fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a7b8:	45a0      	cmp	r8, r4
 801a7ba:	f340 811f 	ble.w	801a9fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a7be:	2f00      	cmp	r7, #0
 801a7c0:	f2c0 811a 	blt.w	801a9f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a7c4:	45bc      	cmp	ip, r7
 801a7c6:	f340 8117 	ble.w	801a9f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a7ca:	5c52      	ldrb	r2, [r2, r1]
 801a7cc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a7d0:	1c7a      	adds	r2, r7, #1
 801a7d2:	f100 8116 	bmi.w	801aa02 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a7d6:	4594      	cmp	ip, r2
 801a7d8:	f340 8113 	ble.w	801aa02 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a7dc:	2e00      	cmp	r6, #0
 801a7de:	f000 8112 	beq.w	801aa06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801a7e2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a7e6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a7ea:	3401      	adds	r4, #1
 801a7ec:	f100 810f 	bmi.w	801aa0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a7f0:	45a0      	cmp	r8, r4
 801a7f2:	f340 810c 	ble.w	801aa0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a7f6:	2800      	cmp	r0, #0
 801a7f8:	f000 810c 	beq.w	801aa14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801a7fc:	2f00      	cmp	r7, #0
 801a7fe:	f2c0 8104 	blt.w	801aa0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a802:	45bc      	cmp	ip, r7
 801a804:	f340 8101 	ble.w	801aa0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a808:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801a80c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801a810:	3701      	adds	r7, #1
 801a812:	f100 8102 	bmi.w	801aa1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a816:	45bc      	cmp	ip, r7
 801a818:	f340 80ff 	ble.w	801aa1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a81c:	2e00      	cmp	r6, #0
 801a81e:	f000 80fe 	beq.w	801aa1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801a822:	44f4      	add	ip, lr
 801a824:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801a828:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a82c:	b2b6      	uxth	r6, r6
 801a82e:	b280      	uxth	r0, r0
 801a830:	fb00 fe06 	mul.w	lr, r0, r6
 801a834:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a838:	0136      	lsls	r6, r6, #4
 801a83a:	eba6 070e 	sub.w	r7, r6, lr
 801a83e:	b280      	uxth	r0, r0
 801a840:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801a844:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a848:	b2bf      	uxth	r7, r7
 801a84a:	1a1b      	subs	r3, r3, r0
 801a84c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a850:	b29b      	uxth	r3, r3
 801a852:	fb0a f607 	mul.w	r6, sl, r7
 801a856:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a85a:	fb0b 6603 	mla	r6, fp, r3, r6
 801a85e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a862:	fb00 6609 	mla	r6, r0, r9, r6
 801a866:	fb0e 6608 	mla	r6, lr, r8, r6
 801a86a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a86e:	9600      	str	r6, [sp, #0]
 801a870:	2e00      	cmp	r6, #0
 801a872:	f000 80be 	beq.w	801a9f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801a876:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a87a:	fb0b fc0c 	mul.w	ip, fp, ip
 801a87e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a882:	fb0b f505 	mul.w	r5, fp, r5
 801a886:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a88a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801a88e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a892:	44dc      	add	ip, fp
 801a894:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a898:	9501      	str	r5, [sp, #4]
 801a89a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801a89e:	9503      	str	r5, [sp, #12]
 801a8a0:	9d01      	ldr	r5, [sp, #4]
 801a8a2:	9e02      	ldr	r6, [sp, #8]
 801a8a4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801a8a8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a8ac:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801a8b0:	fb0a fc0c 	mul.w	ip, sl, ip
 801a8b4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a8b8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a8bc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a8c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a8c4:	4465      	add	r5, ip
 801a8c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a8ca:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a8ce:	fb09 fc0c 	mul.w	ip, r9, ip
 801a8d2:	fb09 f904 	mul.w	r9, r9, r4
 801a8d6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801a8da:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801a8de:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801a8e2:	fb08 f404 	mul.w	r4, r8, r4
 801a8e6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a8ea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a8ee:	fb08 f802 	mul.w	r8, r8, r2
 801a8f2:	fb0a fa01 	mul.w	sl, sl, r1
 801a8f6:	0a22      	lsrs	r2, r4, #8
 801a8f8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801a8fc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a900:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801a904:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a908:	4414      	add	r4, r2
 801a90a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801a90e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801a912:	0a2d      	lsrs	r5, r5, #8
 801a914:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a918:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a91c:	9a03      	ldr	r2, [sp, #12]
 801a91e:	8836      	ldrh	r6, [r6, #0]
 801a920:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a924:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a928:	437d      	muls	r5, r7
 801a92a:	4461      	add	r1, ip
 801a92c:	0a24      	lsrs	r4, r4, #8
 801a92e:	fb02 5503 	mla	r5, r2, r3, r5
 801a932:	0a09      	lsrs	r1, r1, #8
 801a934:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a938:	fb04 540e 	mla	r4, r4, lr, r5
 801a93c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a940:	fb01 4100 	mla	r1, r1, r0, r4
 801a944:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a948:	0a09      	lsrs	r1, r1, #8
 801a94a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a94e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801a952:	fb07 f70a 	mul.w	r7, r7, sl
 801a956:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a95a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801a95e:	fb03 7101 	mla	r1, r3, r1, r7
 801a962:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a966:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a96a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a96e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801a972:	fb00 e101 	mla	r1, r0, r1, lr
 801a976:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801a97a:	9a00      	ldr	r2, [sp, #0]
 801a97c:	b287      	uxth	r7, r0
 801a97e:	437a      	muls	r2, r7
 801a980:	0a09      	lsrs	r1, r1, #8
 801a982:	1c53      	adds	r3, r2, #1
 801a984:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a988:	4321      	orrs	r1, r4
 801a98a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a98e:	1235      	asrs	r5, r6, #8
 801a990:	0c0a      	lsrs	r2, r1, #16
 801a992:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a996:	b2db      	uxtb	r3, r3
 801a998:	fb12 f207 	smulbb	r2, r2, r7
 801a99c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a9a0:	fb05 2503 	mla	r5, r5, r3, r2
 801a9a4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801a9a8:	10f2      	asrs	r2, r6, #3
 801a9aa:	b2c8      	uxtb	r0, r1
 801a9ac:	00f6      	lsls	r6, r6, #3
 801a9ae:	fb14 f407 	smulbb	r4, r4, r7
 801a9b2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a9b6:	b2f6      	uxtb	r6, r6
 801a9b8:	fb10 f007 	smulbb	r0, r0, r7
 801a9bc:	fb02 4203 	mla	r2, r2, r3, r4
 801a9c0:	b2ad      	uxth	r5, r5
 801a9c2:	fb06 0303 	mla	r3, r6, r3, r0
 801a9c6:	b299      	uxth	r1, r3
 801a9c8:	b294      	uxth	r4, r2
 801a9ca:	1c6b      	adds	r3, r5, #1
 801a9cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a9d0:	1c62      	adds	r2, r4, #1
 801a9d2:	1c4b      	adds	r3, r1, #1
 801a9d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a9d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a9dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a9e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a9e4:	0952      	lsrs	r2, r2, #5
 801a9e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a9ea:	432b      	orrs	r3, r5
 801a9ec:	4313      	orrs	r3, r2
 801a9ee:	9a02      	ldr	r2, [sp, #8]
 801a9f0:	8013      	strh	r3, [r2, #0]
 801a9f2:	b005      	add	sp, #20
 801a9f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9f8:	2500      	movs	r5, #0
 801a9fa:	e6e9      	b.n	801a7d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801a9fc:	2100      	movs	r1, #0
 801a9fe:	460d      	mov	r5, r1
 801aa00:	e6f3      	b.n	801a7ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801aa02:	2100      	movs	r1, #0
 801aa04:	e6f1      	b.n	801a7ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801aa06:	4631      	mov	r1, r6
 801aa08:	e6ef      	b.n	801a7ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801aa0a:	2400      	movs	r4, #0
 801aa0c:	e700      	b.n	801a810 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801aa0e:	2200      	movs	r2, #0
 801aa10:	4614      	mov	r4, r2
 801aa12:	e70b      	b.n	801a82c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801aa14:	4602      	mov	r2, r0
 801aa16:	4604      	mov	r4, r0
 801aa18:	e708      	b.n	801a82c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801aa1a:	2200      	movs	r2, #0
 801aa1c:	e706      	b.n	801a82c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801aa1e:	4632      	mov	r2, r6
 801aa20:	e704      	b.n	801a82c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801aa22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa26:	b09f      	sub	sp, #124	; 0x7c
 801aa28:	921b      	str	r2, [sp, #108]	; 0x6c
 801aa2a:	9309      	str	r3, [sp, #36]	; 0x24
 801aa2c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801aa2e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801aa32:	931c      	str	r3, [sp, #112]	; 0x70
 801aa34:	9119      	str	r1, [sp, #100]	; 0x64
 801aa36:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801aa3a:	901d      	str	r0, [sp, #116]	; 0x74
 801aa3c:	6850      	ldr	r0, [r2, #4]
 801aa3e:	6812      	ldr	r2, [r2, #0]
 801aa40:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801aa42:	fb00 1303 	mla	r3, r0, r3, r1
 801aa46:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aa4a:	930c      	str	r3, [sp, #48]	; 0x30
 801aa4c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aa4e:	681b      	ldr	r3, [r3, #0]
 801aa50:	9312      	str	r3, [sp, #72]	; 0x48
 801aa52:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aa54:	685e      	ldr	r6, [r3, #4]
 801aa56:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801aa5a:	930d      	str	r3, [sp, #52]	; 0x34
 801aa5c:	3604      	adds	r6, #4
 801aa5e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801aa60:	2b00      	cmp	r3, #0
 801aa62:	dc03      	bgt.n	801aa6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aa64:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801aa66:	2b00      	cmp	r3, #0
 801aa68:	f340 8388 	ble.w	801b17c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801aa6c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aa6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aa72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aa76:	1e48      	subs	r0, r1, #1
 801aa78:	1e57      	subs	r7, r2, #1
 801aa7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aa7c:	2b00      	cmp	r3, #0
 801aa7e:	f340 8195 	ble.w	801adac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aa82:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aa84:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801aa88:	ea4f 4325 	mov.w	r3, r5, asr #16
 801aa8c:	d406      	bmi.n	801aa9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa8e:	4584      	cmp	ip, r0
 801aa90:	da04      	bge.n	801aa9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa92:	2b00      	cmp	r3, #0
 801aa94:	db02      	blt.n	801aa9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa96:	42bb      	cmp	r3, r7
 801aa98:	f2c0 8189 	blt.w	801adae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801aa9c:	f11c 0c01 	adds.w	ip, ip, #1
 801aaa0:	f100 8177 	bmi.w	801ad92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aaa4:	4561      	cmp	r1, ip
 801aaa6:	f2c0 8174 	blt.w	801ad92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aaaa:	3301      	adds	r3, #1
 801aaac:	f100 8171 	bmi.w	801ad92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aab0:	429a      	cmp	r2, r3
 801aab2:	f2c0 816e 	blt.w	801ad92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aab8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801aaba:	931a      	str	r3, [sp, #104]	; 0x68
 801aabc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801aabe:	2b00      	cmp	r3, #0
 801aac0:	f340 8193 	ble.w	801adea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801aac4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801aac6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801aaca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aacc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801aad0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801aad2:	141b      	asrs	r3, r3, #16
 801aad4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801aad8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801aadc:	f100 81d6 	bmi.w	801ae8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801aae0:	f100 38ff 	add.w	r8, r0, #4294967295
 801aae4:	4543      	cmp	r3, r8
 801aae6:	f280 81d1 	bge.w	801ae8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801aaea:	f1bc 0f00 	cmp.w	ip, #0
 801aaee:	f2c0 81cd 	blt.w	801ae8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801aaf2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801aaf6:	45c4      	cmp	ip, r8
 801aaf8:	f280 81c8 	bge.w	801ae8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801aafc:	b200      	sxth	r0, r0
 801aafe:	fb0c 3300 	mla	r3, ip, r0, r3
 801ab02:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ab04:	eb04 0803 	add.w	r8, r4, r3
 801ab08:	5ce3      	ldrb	r3, [r4, r3]
 801ab0a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ab0e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ab12:	2a00      	cmp	r2, #0
 801ab14:	f000 81af 	beq.w	801ae76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ab18:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ab1c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ab20:	940e      	str	r4, [sp, #56]	; 0x38
 801ab22:	0e24      	lsrs	r4, r4, #24
 801ab24:	9415      	str	r4, [sp, #84]	; 0x54
 801ab26:	b179      	cbz	r1, 801ab48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ab28:	eb08 0c00 	add.w	ip, r8, r0
 801ab2c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ab30:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ab34:	900a      	str	r0, [sp, #40]	; 0x28
 801ab36:	0e00      	lsrs	r0, r0, #24
 801ab38:	9013      	str	r0, [sp, #76]	; 0x4c
 801ab3a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ab3e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ab42:	900f      	str	r0, [sp, #60]	; 0x3c
 801ab44:	0e00      	lsrs	r0, r0, #24
 801ab46:	9016      	str	r0, [sp, #88]	; 0x58
 801ab48:	b292      	uxth	r2, r2
 801ab4a:	b289      	uxth	r1, r1
 801ab4c:	fb02 f901 	mul.w	r9, r2, r1
 801ab50:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ab54:	0112      	lsls	r2, r2, #4
 801ab56:	eba2 0809 	sub.w	r8, r2, r9
 801ab5a:	b289      	uxth	r1, r1
 801ab5c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ab60:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ab62:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab64:	fa1f f888 	uxth.w	r8, r8
 801ab68:	1a52      	subs	r2, r2, r1
 801ab6a:	b292      	uxth	r2, r2
 801ab6c:	fb08 f000 	mul.w	r0, r8, r0
 801ab70:	fb02 000e 	mla	r0, r2, lr, r0
 801ab74:	fb01 0004 	mla	r0, r1, r4, r0
 801ab78:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ab7a:	fb09 0004 	mla	r0, r9, r4, r0
 801ab7e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ab82:	2800      	cmp	r0, #0
 801ab84:	f000 80fa 	beq.w	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ab88:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ab8c:	d01b      	beq.n	801abc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ab8e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ab92:	fb0e fa0a 	mul.w	sl, lr, sl
 801ab96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ab9a:	fb0e fe03 	mul.w	lr, lr, r3
 801ab9e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801aba2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aba6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801abaa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801abae:	4453      	add	r3, sl
 801abb0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801abb4:	0a1b      	lsrs	r3, r3, #8
 801abb6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801abbe:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801abc2:	ea43 030c 	orr.w	r3, r3, ip
 801abc6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801abc8:	2cff      	cmp	r4, #255	; 0xff
 801abca:	d021      	beq.n	801ac10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801abcc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801abce:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801abd2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801abd4:	fb04 fb0b 	mul.w	fp, r4, fp
 801abd8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801abda:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801abde:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801abe0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801abe4:	fb04 fa0a 	mul.w	sl, r4, sl
 801abe8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801abec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801abf0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801abf4:	44de      	add	lr, fp
 801abf6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801abfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801abfe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac0a:	ea4e 040a 	orr.w	r4, lr, sl
 801ac0e:	940e      	str	r4, [sp, #56]	; 0x38
 801ac10:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac12:	2cff      	cmp	r4, #255	; 0xff
 801ac14:	d021      	beq.n	801ac5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ac16:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ac18:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ac1c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac1e:	fb04 fb0b 	mul.w	fp, r4, fp
 801ac22:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ac24:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ac28:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac2a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ac2e:	fb04 fa0a 	mul.w	sl, r4, sl
 801ac32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac36:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ac3a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ac3e:	44de      	add	lr, fp
 801ac40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ac44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ac48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac54:	ea4e 040a 	orr.w	r4, lr, sl
 801ac58:	940a      	str	r4, [sp, #40]	; 0x28
 801ac5a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ac5c:	2cff      	cmp	r4, #255	; 0xff
 801ac5e:	d021      	beq.n	801aca4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801ac60:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ac62:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ac66:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ac68:	fb04 fb0b 	mul.w	fp, r4, fp
 801ac6c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ac6e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ac72:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ac74:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ac78:	fb04 fa0a 	mul.w	sl, r4, sl
 801ac7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac80:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ac84:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ac88:	44de      	add	lr, fp
 801ac8a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ac8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ac92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac96:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac9e:	ea4e 040a 	orr.w	r4, lr, sl
 801aca2:	940f      	str	r4, [sp, #60]	; 0x3c
 801aca4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aca6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801acaa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801acac:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801acb0:	fb08 fc0c 	mul.w	ip, r8, ip
 801acb4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801acb8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801acbc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801acbe:	fb01 cc0e 	mla	ip, r1, lr, ip
 801acc2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801acc6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801acc8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801accc:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801acd0:	fb08 f80e 	mul.w	r8, r8, lr
 801acd4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801acd8:	fb02 8303 	mla	r3, r2, r3, r8
 801acdc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801acde:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ace0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ace4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ace6:	fb01 330a 	mla	r3, r1, sl, r3
 801acea:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801acee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801acf0:	fb09 3901 	mla	r9, r9, r1, r3
 801acf4:	4342      	muls	r2, r0
 801acf6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801acfa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801acfe:	883b      	ldrh	r3, [r7, #0]
 801ad00:	1c50      	adds	r0, r2, #1
 801ad02:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ad06:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ad0a:	ea4c 0c09 	orr.w	ip, ip, r9
 801ad0e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ad12:	1219      	asrs	r1, r3, #8
 801ad14:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ad18:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ad1c:	b2c0      	uxtb	r0, r0
 801ad1e:	fb12 f204 	smulbb	r2, r2, r4
 801ad22:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ad26:	fb01 2100 	mla	r1, r1, r0, r2
 801ad2a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ad2e:	10da      	asrs	r2, r3, #3
 801ad30:	fa5f fc8c 	uxtb.w	ip, ip
 801ad34:	00db      	lsls	r3, r3, #3
 801ad36:	fb1c fc04 	smulbb	ip, ip, r4
 801ad3a:	b2db      	uxtb	r3, r3
 801ad3c:	b289      	uxth	r1, r1
 801ad3e:	fb03 c300 	mla	r3, r3, r0, ip
 801ad42:	fa1f fc83 	uxth.w	ip, r3
 801ad46:	1c4b      	adds	r3, r1, #1
 801ad48:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ad4c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ad50:	fb1e fe04 	smulbb	lr, lr, r4
 801ad54:	f10c 0301 	add.w	r3, ip, #1
 801ad58:	fb02 e200 	mla	r2, r2, r0, lr
 801ad5c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ad60:	b292      	uxth	r2, r2
 801ad62:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ad66:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad6a:	430b      	orrs	r3, r1
 801ad6c:	1c51      	adds	r1, r2, #1
 801ad6e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ad72:	0952      	lsrs	r2, r2, #5
 801ad74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad78:	4313      	orrs	r3, r2
 801ad7a:	803b      	strh	r3, [r7, #0]
 801ad7c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ad7e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ad80:	441a      	add	r2, r3
 801ad82:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad84:	9229      	str	r2, [sp, #164]	; 0xa4
 801ad86:	441d      	add	r5, r3
 801ad88:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ad8a:	3b01      	subs	r3, #1
 801ad8c:	3702      	adds	r7, #2
 801ad8e:	931a      	str	r3, [sp, #104]	; 0x68
 801ad90:	e694      	b.n	801aabc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ad92:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ad94:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ad96:	441c      	add	r4, r3
 801ad98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad9a:	9429      	str	r4, [sp, #164]	; 0xa4
 801ad9c:	441d      	add	r5, r3
 801ad9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ada0:	3b01      	subs	r3, #1
 801ada2:	9309      	str	r3, [sp, #36]	; 0x24
 801ada4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ada6:	3302      	adds	r3, #2
 801ada8:	930c      	str	r3, [sp, #48]	; 0x30
 801adaa:	e666      	b.n	801aa7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801adac:	d024      	beq.n	801adf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801adae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adb0:	982b      	ldr	r0, [sp, #172]	; 0xac
 801adb2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801adb4:	3b01      	subs	r3, #1
 801adb6:	fb00 4003 	mla	r0, r0, r3, r4
 801adba:	1400      	asrs	r0, r0, #16
 801adbc:	f53f ae7b 	bmi.w	801aab6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801adc0:	3901      	subs	r1, #1
 801adc2:	4288      	cmp	r0, r1
 801adc4:	f6bf ae77 	bge.w	801aab6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801adc8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801adca:	fb01 5303 	mla	r3, r1, r3, r5
 801adce:	141b      	asrs	r3, r3, #16
 801add0:	f53f ae71 	bmi.w	801aab6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801add4:	3a01      	subs	r2, #1
 801add6:	4293      	cmp	r3, r2
 801add8:	f6bf ae6d 	bge.w	801aab6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801addc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ade0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801ade4:	f1bb 0f00 	cmp.w	fp, #0
 801ade8:	dc70      	bgt.n	801aecc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801adea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801adf0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801adf2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801adf6:	930c      	str	r3, [sp, #48]	; 0x30
 801adf8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801adfa:	2b00      	cmp	r3, #0
 801adfc:	f340 81be 	ble.w	801b17c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ae00:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae08:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ae0c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae12:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae1a:	eef0 6a62 	vmov.f32	s13, s5
 801ae1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae26:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae2a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801ae2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae32:	eef0 6a43 	vmov.f32	s13, s6
 801ae36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae3a:	ee12 2a90 	vmov	r2, s5
 801ae3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae42:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae46:	ee13 2a10 	vmov	r2, s6
 801ae4a:	932b      	str	r3, [sp, #172]	; 0xac
 801ae4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae4e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae52:	932c      	str	r3, [sp, #176]	; 0xb0
 801ae54:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ae56:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801ae58:	3b01      	subs	r3, #1
 801ae5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae5e:	9319      	str	r3, [sp, #100]	; 0x64
 801ae60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae62:	bf08      	it	eq
 801ae64:	4613      	moveq	r3, r2
 801ae66:	ee16 5a90 	vmov	r5, s13
 801ae6a:	9309      	str	r3, [sp, #36]	; 0x24
 801ae6c:	eeb0 3a67 	vmov.f32	s6, s15
 801ae70:	eef0 2a47 	vmov.f32	s5, s14
 801ae74:	e5f3      	b.n	801aa5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ae76:	2900      	cmp	r1, #0
 801ae78:	f43f ae66 	beq.w	801ab48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ae7c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ae80:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ae84:	900a      	str	r0, [sp, #40]	; 0x28
 801ae86:	0e00      	lsrs	r0, r0, #24
 801ae88:	9013      	str	r0, [sp, #76]	; 0x4c
 801ae8a:	e65d      	b.n	801ab48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ae8c:	f113 0801 	adds.w	r8, r3, #1
 801ae90:	f53f af74 	bmi.w	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ae94:	4540      	cmp	r0, r8
 801ae96:	f6ff af71 	blt.w	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ae9a:	f11c 0801 	adds.w	r8, ip, #1
 801ae9e:	f53f af6d 	bmi.w	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aea2:	45c6      	cmp	lr, r8
 801aea4:	f6ff af6a 	blt.w	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aea8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801aeaa:	9302      	str	r3, [sp, #8]
 801aeac:	b200      	sxth	r0, r0
 801aeae:	fa0f f38e 	sxth.w	r3, lr
 801aeb2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801aeb6:	e9cd c203 	strd	ip, r2, [sp, #12]
 801aeba:	9301      	str	r3, [sp, #4]
 801aebc:	9000      	str	r0, [sp, #0]
 801aebe:	4633      	mov	r3, r6
 801aec0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aec2:	981d      	ldr	r0, [sp, #116]	; 0x74
 801aec4:	4639      	mov	r1, r7
 801aec6:	f7ff fc62 	bl	801a78e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801aeca:	e757      	b.n	801ad7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aecc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801aece:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aed0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801aed4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aed6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aeda:	1427      	asrs	r7, r4, #16
 801aedc:	142b      	asrs	r3, r5, #16
 801aede:	fb01 7303 	mla	r3, r1, r3, r7
 801aee2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aee4:	18e7      	adds	r7, r4, r3
 801aee6:	5ce3      	ldrb	r3, [r4, r3]
 801aee8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801aeec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801aef0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801aef4:	2a00      	cmp	r2, #0
 801aef6:	f000 8137 	beq.w	801b168 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801aefa:	f897 e001 	ldrb.w	lr, [r7, #1]
 801aefe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801af02:	9410      	str	r4, [sp, #64]	; 0x40
 801af04:	0e24      	lsrs	r4, r4, #24
 801af06:	9417      	str	r4, [sp, #92]	; 0x5c
 801af08:	b170      	cbz	r0, 801af28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801af0a:	eb07 0e01 	add.w	lr, r7, r1
 801af0e:	5c79      	ldrb	r1, [r7, r1]
 801af10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801af14:	910b      	str	r1, [sp, #44]	; 0x2c
 801af16:	0e09      	lsrs	r1, r1, #24
 801af18:	9114      	str	r1, [sp, #80]	; 0x50
 801af1a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801af1e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801af22:	9111      	str	r1, [sp, #68]	; 0x44
 801af24:	0e09      	lsrs	r1, r1, #24
 801af26:	9118      	str	r1, [sp, #96]	; 0x60
 801af28:	b292      	uxth	r2, r2
 801af2a:	b280      	uxth	r0, r0
 801af2c:	fb02 f800 	mul.w	r8, r2, r0
 801af30:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801af34:	0112      	lsls	r2, r2, #4
 801af36:	eba2 0e08 	sub.w	lr, r2, r8
 801af3a:	b280      	uxth	r0, r0
 801af3c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801af40:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801af42:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801af44:	fa1f fe8e 	uxth.w	lr, lr
 801af48:	1a12      	subs	r2, r2, r0
 801af4a:	b292      	uxth	r2, r2
 801af4c:	fb0e f101 	mul.w	r1, lr, r1
 801af50:	fb02 110c 	mla	r1, r2, ip, r1
 801af54:	fb00 1104 	mla	r1, r0, r4, r1
 801af58:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801af5a:	fb08 1104 	mla	r1, r8, r4, r1
 801af5e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801af62:	2900      	cmp	r1, #0
 801af64:	f000 80f5 	beq.w	801b152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801af68:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801af6c:	d019      	beq.n	801afa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801af6e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801af72:	fb0c fa0a 	mul.w	sl, ip, sl
 801af76:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801af7a:	fb0c fc03 	mul.w	ip, ip, r3
 801af7e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801af82:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801af86:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801af8a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801af8e:	4453      	add	r3, sl
 801af90:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801af94:	0a1b      	lsrs	r3, r3, #8
 801af96:	0a3f      	lsrs	r7, r7, #8
 801af98:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801af9c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801afa0:	433b      	orrs	r3, r7
 801afa2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801afa4:	2cff      	cmp	r4, #255	; 0xff
 801afa6:	d020      	beq.n	801afea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801afa8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801afaa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801afae:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801afb0:	4367      	muls	r7, r4
 801afb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801afb4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801afb8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801afba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801afbe:	fb04 fa0a 	mul.w	sl, r4, sl
 801afc2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801afc6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801afca:	44bc      	add	ip, r7
 801afcc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801afd0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801afd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801afd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801afdc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801afe0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801afe4:	ea4c 040a 	orr.w	r4, ip, sl
 801afe8:	9410      	str	r4, [sp, #64]	; 0x40
 801afea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801afec:	2cff      	cmp	r4, #255	; 0xff
 801afee:	d020      	beq.n	801b032 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801aff0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aff2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801aff6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aff8:	4367      	muls	r7, r4
 801affa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801affc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b000:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b002:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b006:	fb04 fa0a 	mul.w	sl, r4, sl
 801b00a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b00e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b012:	44bc      	add	ip, r7
 801b014:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b018:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b01c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b020:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b024:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b028:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b02c:	ea4c 040a 	orr.w	r4, ip, sl
 801b030:	940b      	str	r4, [sp, #44]	; 0x2c
 801b032:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b034:	2cff      	cmp	r4, #255	; 0xff
 801b036:	d020      	beq.n	801b07a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b038:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b03a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b03e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b040:	4367      	muls	r7, r4
 801b042:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b044:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b048:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b04a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b04e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b052:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b056:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b05a:	44bc      	add	ip, r7
 801b05c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b060:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b064:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b068:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b06c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b070:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b074:	ea4c 040a 	orr.w	r4, ip, sl
 801b078:	9411      	str	r4, [sp, #68]	; 0x44
 801b07a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b07c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b080:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b082:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b086:	fb0e f707 	mul.w	r7, lr, r7
 801b08a:	fb02 770c 	mla	r7, r2, ip, r7
 801b08e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b092:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b094:	fb00 770c 	mla	r7, r0, ip, r7
 801b098:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b09c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b09e:	fb08 770c 	mla	r7, r8, ip, r7
 801b0a2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b0a6:	fb0e fe0c 	mul.w	lr, lr, ip
 801b0aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b0ae:	fb02 e303 	mla	r3, r2, r3, lr
 801b0b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b0b4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b0b6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b0ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b0bc:	fb00 330a 	mla	r3, r0, sl, r3
 801b0c0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b0c4:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b0c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b0ca:	f8b9 0000 	ldrh.w	r0, [r9]
 801b0ce:	434b      	muls	r3, r1
 801b0d0:	0a3f      	lsrs	r7, r7, #8
 801b0d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0d6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b0da:	1c59      	adds	r1, r3, #1
 801b0dc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b0e0:	ea47 070c 	orr.w	r7, r7, ip
 801b0e4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b0e8:	1202      	asrs	r2, r0, #8
 801b0ea:	0c3b      	lsrs	r3, r7, #16
 801b0ec:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b0f0:	b2c9      	uxtb	r1, r1
 801b0f2:	fb13 f304 	smulbb	r3, r3, r4
 801b0f6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b0fa:	fb02 3201 	mla	r2, r2, r1, r3
 801b0fe:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b102:	10c3      	asrs	r3, r0, #3
 801b104:	b2ff      	uxtb	r7, r7
 801b106:	00c0      	lsls	r0, r0, #3
 801b108:	b292      	uxth	r2, r2
 801b10a:	fb1c fc04 	smulbb	ip, ip, r4
 801b10e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b112:	b2c0      	uxtb	r0, r0
 801b114:	fb17 f704 	smulbb	r7, r7, r4
 801b118:	fb03 c301 	mla	r3, r3, r1, ip
 801b11c:	fb00 7001 	mla	r0, r0, r1, r7
 801b120:	f102 0c01 	add.w	ip, r2, #1
 801b124:	b280      	uxth	r0, r0
 801b126:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b12a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b12e:	1c42      	adds	r2, r0, #1
 801b130:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b134:	b29b      	uxth	r3, r3
 801b136:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b13a:	ea42 020c 	orr.w	r2, r2, ip
 801b13e:	f103 0c01 	add.w	ip, r3, #1
 801b142:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b146:	095b      	lsrs	r3, r3, #5
 801b148:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b14c:	431a      	orrs	r2, r3
 801b14e:	f8a9 2000 	strh.w	r2, [r9]
 801b152:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b154:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b156:	441a      	add	r2, r3
 801b158:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b15a:	9229      	str	r2, [sp, #164]	; 0xa4
 801b15c:	f109 0902 	add.w	r9, r9, #2
 801b160:	441d      	add	r5, r3
 801b162:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b166:	e63d      	b.n	801ade4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b168:	2800      	cmp	r0, #0
 801b16a:	f43f aedd 	beq.w	801af28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b16e:	5c79      	ldrb	r1, [r7, r1]
 801b170:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b174:	910b      	str	r1, [sp, #44]	; 0x2c
 801b176:	0e09      	lsrs	r1, r1, #24
 801b178:	9114      	str	r1, [sp, #80]	; 0x50
 801b17a:	e6d5      	b.n	801af28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b17c:	b01f      	add	sp, #124	; 0x7c
 801b17e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b182 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b182:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b186:	b089      	sub	sp, #36	; 0x24
 801b188:	9101      	str	r1, [sp, #4]
 801b18a:	9801      	ldr	r0, [sp, #4]
 801b18c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b190:	8800      	ldrh	r0, [r0, #0]
 801b192:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b196:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b19a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b19e:	1206      	asrs	r6, r0, #8
 801b1a0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b1a4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b1a8:	9602      	str	r6, [sp, #8]
 801b1aa:	10c6      	asrs	r6, r0, #3
 801b1ac:	00c0      	lsls	r0, r0, #3
 801b1ae:	b2c0      	uxtb	r0, r0
 801b1b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b1b4:	9004      	str	r0, [sp, #16]
 801b1b6:	2f00      	cmp	r7, #0
 801b1b8:	fb07 100c 	mla	r0, r7, ip, r1
 801b1bc:	9603      	str	r6, [sp, #12]
 801b1be:	eb02 0e00 	add.w	lr, r2, r0
 801b1c2:	f2c0 810a 	blt.w	801b3da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b1c6:	45b8      	cmp	r8, r7
 801b1c8:	f340 8107 	ble.w	801b3da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b1cc:	2900      	cmp	r1, #0
 801b1ce:	f2c0 8102 	blt.w	801b3d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b1d2:	458c      	cmp	ip, r1
 801b1d4:	f340 80ff 	ble.w	801b3d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b1d8:	5c12      	ldrb	r2, [r2, r0]
 801b1da:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b1de:	1c4a      	adds	r2, r1, #1
 801b1e0:	f100 80fe 	bmi.w	801b3e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b1e4:	4594      	cmp	ip, r2
 801b1e6:	f340 80fb 	ble.w	801b3e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b1ea:	2d00      	cmp	r5, #0
 801b1ec:	f000 80fa 	beq.w	801b3e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b1f0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b1f4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b1f8:	3701      	adds	r7, #1
 801b1fa:	f100 80f7 	bmi.w	801b3ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b1fe:	45b8      	cmp	r8, r7
 801b200:	f340 80f4 	ble.w	801b3ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b204:	2c00      	cmp	r4, #0
 801b206:	f000 80f4 	beq.w	801b3f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b20a:	2900      	cmp	r1, #0
 801b20c:	eb0e 020c 	add.w	r2, lr, ip
 801b210:	f2c0 80ea 	blt.w	801b3e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b214:	458c      	cmp	ip, r1
 801b216:	f340 80e7 	ble.w	801b3e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b21a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b21e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b222:	3101      	adds	r1, #1
 801b224:	f100 80e8 	bmi.w	801b3f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b228:	458c      	cmp	ip, r1
 801b22a:	f340 80e5 	ble.w	801b3f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b22e:	2d00      	cmp	r5, #0
 801b230:	f000 80e4 	beq.w	801b3fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b234:	7852      	ldrb	r2, [r2, #1]
 801b236:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b23a:	0e0b      	lsrs	r3, r1, #24
 801b23c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b240:	9300      	str	r3, [sp, #0]
 801b242:	b2a4      	uxth	r4, r4
 801b244:	b2ab      	uxth	r3, r5
 801b246:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b24a:	fb03 f904 	mul.w	r9, r3, r4
 801b24e:	fb0a f505 	mul.w	r5, sl, r5
 801b252:	011b      	lsls	r3, r3, #4
 801b254:	eba3 0e09 	sub.w	lr, r3, r9
 801b258:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b25c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b260:	0a28      	lsrs	r0, r5, #8
 801b262:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b266:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b26a:	4405      	add	r5, r0
 801b26c:	0a2d      	lsrs	r5, r5, #8
 801b26e:	fb0a f303 	mul.w	r3, sl, r3
 801b272:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b276:	9005      	str	r0, [sp, #20]
 801b278:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b27c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b280:	0a1b      	lsrs	r3, r3, #8
 801b282:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b286:	9306      	str	r3, [sp, #24]
 801b288:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b28c:	fb0b f303 	mul.w	r3, fp, r3
 801b290:	0a1d      	lsrs	r5, r3, #8
 801b292:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b296:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b29a:	fb0b f606 	mul.w	r6, fp, r6
 801b29e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b2a2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b2a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b2aa:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b2ae:	fb08 f707 	mul.w	r7, r8, r7
 801b2b2:	441d      	add	r5, r3
 801b2b4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b2b8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b2bc:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b2c0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b2c4:	fb08 fc0c 	mul.w	ip, r8, ip
 801b2c8:	0a1b      	lsrs	r3, r3, #8
 801b2ca:	9307      	str	r3, [sp, #28]
 801b2cc:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b2d0:	0e0b      	lsrs	r3, r1, #24
 801b2d2:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b2d6:	435f      	muls	r7, r3
 801b2d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b2dc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b2e0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b2e4:	4460      	add	r0, ip
 801b2e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b2ea:	b2a4      	uxth	r4, r4
 801b2ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b2f0:	0a2d      	lsrs	r5, r5, #8
 801b2f2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b2f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b2fa:	fa1f fe8e 	uxth.w	lr, lr
 801b2fe:	4359      	muls	r1, r3
 801b300:	1b12      	subs	r2, r2, r4
 801b302:	9b05      	ldr	r3, [sp, #20]
 801b304:	44bc      	add	ip, r7
 801b306:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b30a:	b292      	uxth	r2, r2
 801b30c:	fb05 f50e 	mul.w	r5, r5, lr
 801b310:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b314:	fb03 5502 	mla	r5, r3, r2, r5
 801b318:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b31c:	9b06      	ldr	r3, [sp, #24]
 801b31e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b322:	0a36      	lsrs	r6, r6, #8
 801b324:	0a00      	lsrs	r0, r0, #8
 801b326:	fb0c 5509 	mla	r5, ip, r9, r5
 801b32a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b32e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b332:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b336:	fb00 5504 	mla	r5, r0, r4, r5
 801b33a:	fb0e f606 	mul.w	r6, lr, r6
 801b33e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b342:	0a09      	lsrs	r1, r1, #8
 801b344:	9b07      	ldr	r3, [sp, #28]
 801b346:	fb02 6000 	mla	r0, r2, r0, r6
 801b34a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b34e:	fb09 0001 	mla	r0, r9, r1, r0
 801b352:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b356:	fb0e fe0b 	mul.w	lr, lr, fp
 801b35a:	fb04 0003 	mla	r0, r4, r3, r0
 801b35e:	fb02 e20a 	mla	r2, r2, sl, lr
 801b362:	9b00      	ldr	r3, [sp, #0]
 801b364:	fb04 2408 	mla	r4, r4, r8, r2
 801b368:	fb09 4903 	mla	r9, r9, r3, r4
 801b36c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b370:	9b02      	ldr	r3, [sp, #8]
 801b372:	9a04      	ldr	r2, [sp, #16]
 801b374:	fa5f f989 	uxtb.w	r9, r9
 801b378:	fb03 f109 	mul.w	r1, r3, r9
 801b37c:	9b03      	ldr	r3, [sp, #12]
 801b37e:	0a2d      	lsrs	r5, r5, #8
 801b380:	0a00      	lsrs	r0, r0, #8
 801b382:	fb03 f309 	mul.w	r3, r3, r9
 801b386:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b38a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b38e:	4305      	orrs	r5, r0
 801b390:	fb02 f909 	mul.w	r9, r2, r9
 801b394:	1c58      	adds	r0, r3, #1
 801b396:	1c4a      	adds	r2, r1, #1
 801b398:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b39c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b3a0:	0a2b      	lsrs	r3, r5, #8
 801b3a2:	0c2a      	lsrs	r2, r5, #16
 801b3a4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b3a8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b3ac:	00db      	lsls	r3, r3, #3
 801b3ae:	0212      	lsls	r2, r2, #8
 801b3b0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b3b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b3b8:	4313      	orrs	r3, r2
 801b3ba:	f109 0201 	add.w	r2, r9, #1
 801b3be:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b3c2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b3c6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b3ca:	431d      	orrs	r5, r3
 801b3cc:	9b01      	ldr	r3, [sp, #4]
 801b3ce:	801d      	strh	r5, [r3, #0]
 801b3d0:	b009      	add	sp, #36	; 0x24
 801b3d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3d6:	2000      	movs	r0, #0
 801b3d8:	e701      	b.n	801b1de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b3da:	2600      	movs	r6, #0
 801b3dc:	4630      	mov	r0, r6
 801b3de:	e70b      	b.n	801b1f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b3e0:	2600      	movs	r6, #0
 801b3e2:	e709      	b.n	801b1f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b3e4:	462e      	mov	r6, r5
 801b3e6:	e707      	b.n	801b1f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b3e8:	2700      	movs	r7, #0
 801b3ea:	e71a      	b.n	801b222 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b3ec:	2100      	movs	r1, #0
 801b3ee:	460f      	mov	r7, r1
 801b3f0:	e723      	b.n	801b23a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b3f2:	4621      	mov	r1, r4
 801b3f4:	4627      	mov	r7, r4
 801b3f6:	e720      	b.n	801b23a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b3f8:	2100      	movs	r1, #0
 801b3fa:	e71e      	b.n	801b23a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b3fc:	4629      	mov	r1, r5
 801b3fe:	e71c      	b.n	801b23a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b400 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b404:	b09b      	sub	sp, #108	; 0x6c
 801b406:	9218      	str	r2, [sp, #96]	; 0x60
 801b408:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b40a:	9116      	str	r1, [sp, #88]	; 0x58
 801b40c:	9307      	str	r3, [sp, #28]
 801b40e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b412:	9019      	str	r0, [sp, #100]	; 0x64
 801b414:	6850      	ldr	r0, [r2, #4]
 801b416:	6812      	ldr	r2, [r2, #0]
 801b418:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b41a:	fb00 1303 	mla	r3, r0, r3, r1
 801b41e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b422:	930a      	str	r3, [sp, #40]	; 0x28
 801b424:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b426:	681b      	ldr	r3, [r3, #0]
 801b428:	930f      	str	r3, [sp, #60]	; 0x3c
 801b42a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b42c:	685e      	ldr	r6, [r3, #4]
 801b42e:	3604      	adds	r6, #4
 801b430:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b432:	2b00      	cmp	r3, #0
 801b434:	dc03      	bgt.n	801b43e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b436:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b438:	2b00      	cmp	r3, #0
 801b43a:	f340 8373 	ble.w	801bb24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b43e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b440:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b444:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b448:	1e48      	subs	r0, r1, #1
 801b44a:	1e57      	subs	r7, r2, #1
 801b44c:	9b07      	ldr	r3, [sp, #28]
 801b44e:	2b00      	cmp	r3, #0
 801b450:	f340 8190 	ble.w	801b774 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b454:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b456:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b45a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b45e:	d406      	bmi.n	801b46e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b460:	4584      	cmp	ip, r0
 801b462:	da04      	bge.n	801b46e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b464:	2b00      	cmp	r3, #0
 801b466:	db02      	blt.n	801b46e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b468:	42bb      	cmp	r3, r7
 801b46a:	f2c0 8184 	blt.w	801b776 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b46e:	f11c 0c01 	adds.w	ip, ip, #1
 801b472:	f100 8172 	bmi.w	801b75a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b476:	4561      	cmp	r1, ip
 801b478:	f2c0 816f 	blt.w	801b75a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b47c:	3301      	adds	r3, #1
 801b47e:	f100 816c 	bmi.w	801b75a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b482:	429a      	cmp	r2, r3
 801b484:	f2c0 8169 	blt.w	801b75a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b488:	9b07      	ldr	r3, [sp, #28]
 801b48a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b48c:	9317      	str	r3, [sp, #92]	; 0x5c
 801b48e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b490:	2b00      	cmp	r3, #0
 801b492:	f340 818e 	ble.w	801b7b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b496:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b498:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b49c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b49e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b4a2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b4a4:	141b      	asrs	r3, r3, #16
 801b4a6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b4aa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b4ae:	f100 81d1 	bmi.w	801b854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b4b2:	f101 38ff 	add.w	r8, r1, #4294967295
 801b4b6:	4543      	cmp	r3, r8
 801b4b8:	f280 81cc 	bge.w	801b854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b4bc:	f1bc 0f00 	cmp.w	ip, #0
 801b4c0:	f2c0 81c8 	blt.w	801b854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b4c4:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b4c8:	45c4      	cmp	ip, r8
 801b4ca:	f280 81c3 	bge.w	801b854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b4ce:	b209      	sxth	r1, r1
 801b4d0:	fb0c 3301 	mla	r3, ip, r1, r3
 801b4d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b4d6:	eb04 0803 	add.w	r8, r4, r3
 801b4da:	5ce3      	ldrb	r3, [r4, r3]
 801b4dc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b4e0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b4e4:	2a00      	cmp	r2, #0
 801b4e6:	f000 81aa 	beq.w	801b83e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b4ea:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b4ee:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b4f2:	940b      	str	r4, [sp, #44]	; 0x2c
 801b4f4:	0e24      	lsrs	r4, r4, #24
 801b4f6:	9412      	str	r4, [sp, #72]	; 0x48
 801b4f8:	b178      	cbz	r0, 801b51a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b4fa:	eb08 0c01 	add.w	ip, r8, r1
 801b4fe:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b502:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b506:	9108      	str	r1, [sp, #32]
 801b508:	0e09      	lsrs	r1, r1, #24
 801b50a:	9110      	str	r1, [sp, #64]	; 0x40
 801b50c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b510:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b514:	910c      	str	r1, [sp, #48]	; 0x30
 801b516:	0e09      	lsrs	r1, r1, #24
 801b518:	9113      	str	r1, [sp, #76]	; 0x4c
 801b51a:	b292      	uxth	r2, r2
 801b51c:	b280      	uxth	r0, r0
 801b51e:	fb02 f900 	mul.w	r9, r2, r0
 801b522:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b526:	0112      	lsls	r2, r2, #4
 801b528:	eba2 0809 	sub.w	r8, r2, r9
 801b52c:	b280      	uxth	r0, r0
 801b52e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b532:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b534:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b536:	fa1f f888 	uxth.w	r8, r8
 801b53a:	1a12      	subs	r2, r2, r0
 801b53c:	b292      	uxth	r2, r2
 801b53e:	fb08 f101 	mul.w	r1, r8, r1
 801b542:	fb02 110e 	mla	r1, r2, lr, r1
 801b546:	fb00 1104 	mla	r1, r0, r4, r1
 801b54a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b54c:	fb09 1104 	mla	r1, r9, r4, r1
 801b550:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b554:	2900      	cmp	r1, #0
 801b556:	f000 80f5 	beq.w	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b55a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b55e:	d01b      	beq.n	801b598 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b560:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b564:	fb0e fa0a 	mul.w	sl, lr, sl
 801b568:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b56c:	fb0e fe03 	mul.w	lr, lr, r3
 801b570:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b574:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b578:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b57c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b580:	4453      	add	r3, sl
 801b582:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b586:	0a1b      	lsrs	r3, r3, #8
 801b588:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b58c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b590:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b594:	ea43 030c 	orr.w	r3, r3, ip
 801b598:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b59a:	2cff      	cmp	r4, #255	; 0xff
 801b59c:	d021      	beq.n	801b5e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b59e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b5a0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b5a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b5a6:	fb04 fb0b 	mul.w	fp, r4, fp
 801b5aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b5ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b5b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b5b2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5b6:	fb04 fa0a 	mul.w	sl, r4, sl
 801b5ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b5be:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b5c2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b5c6:	44de      	add	lr, fp
 801b5c8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b5cc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b5d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b5d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b5dc:	ea4e 040a 	orr.w	r4, lr, sl
 801b5e0:	940b      	str	r4, [sp, #44]	; 0x2c
 801b5e2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b5e4:	2cff      	cmp	r4, #255	; 0xff
 801b5e6:	d021      	beq.n	801b62c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b5e8:	9c08      	ldr	r4, [sp, #32]
 801b5ea:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b5ee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b5f0:	fb04 fb0b 	mul.w	fp, r4, fp
 801b5f4:	9c08      	ldr	r4, [sp, #32]
 801b5f6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b5fa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b5fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b600:	fb04 fa0a 	mul.w	sl, r4, sl
 801b604:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b608:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b60c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b610:	44de      	add	lr, fp
 801b612:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b616:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b61a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b61e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b622:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b626:	ea4e 040a 	orr.w	r4, lr, sl
 801b62a:	9408      	str	r4, [sp, #32]
 801b62c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b62e:	2cff      	cmp	r4, #255	; 0xff
 801b630:	d021      	beq.n	801b676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b632:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b634:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b638:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b63a:	fb04 fb0b 	mul.w	fp, r4, fp
 801b63e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b640:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b644:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b646:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b64a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b64e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b652:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b656:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b65a:	44de      	add	lr, fp
 801b65c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b660:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b664:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b668:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b66c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b670:	ea4e 040a 	orr.w	r4, lr, sl
 801b674:	940c      	str	r4, [sp, #48]	; 0x30
 801b676:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b678:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b67c:	9c08      	ldr	r4, [sp, #32]
 801b67e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b682:	fb08 fc0c 	mul.w	ip, r8, ip
 801b686:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b68a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b68e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b690:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b694:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b698:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b69a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b69e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b6a2:	fb08 f80e 	mul.w	r8, r8, lr
 801b6a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b6aa:	fb02 8303 	mla	r3, r2, r3, r8
 801b6ae:	9a08      	ldr	r2, [sp, #32]
 801b6b0:	f8b7 8000 	ldrh.w	r8, [r7]
 801b6b4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b6b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b6ba:	fb00 330a 	mla	r3, r0, sl, r3
 801b6be:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b6c2:	fb09 3900 	mla	r9, r9, r0, r3
 801b6c6:	43c9      	mvns	r1, r1
 801b6c8:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b6cc:	fa5f fe81 	uxtb.w	lr, r1
 801b6d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b6d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b6d8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b6dc:	fb02 f20e 	mul.w	r2, r2, lr
 801b6e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b6e4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b6e8:	ea4c 0c09 	orr.w	ip, ip, r9
 801b6ec:	1c53      	adds	r3, r2, #1
 801b6ee:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b6f2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b6f6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b6fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b6fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b702:	4a63      	ldr	r2, [pc, #396]	; (801b890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b704:	fb00 f00e 	mul.w	r0, r0, lr
 801b708:	b2db      	uxtb	r3, r3
 801b70a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b70e:	1c43      	adds	r3, r0, #1
 801b710:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b714:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b718:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b71c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b720:	b2c9      	uxtb	r1, r1
 801b722:	00db      	lsls	r3, r3, #3
 801b724:	fb01 f10e 	mul.w	r1, r1, lr
 801b728:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b72c:	4313      	orrs	r3, r2
 801b72e:	1c4a      	adds	r2, r1, #1
 801b730:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b734:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b738:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b73c:	ea4c 0c03 	orr.w	ip, ip, r3
 801b740:	f8a7 c000 	strh.w	ip, [r7]
 801b744:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b746:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b748:	441a      	add	r2, r3
 801b74a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b74c:	9225      	str	r2, [sp, #148]	; 0x94
 801b74e:	441d      	add	r5, r3
 801b750:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b752:	3b01      	subs	r3, #1
 801b754:	3702      	adds	r7, #2
 801b756:	9317      	str	r3, [sp, #92]	; 0x5c
 801b758:	e699      	b.n	801b48e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b75a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b75c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b75e:	441c      	add	r4, r3
 801b760:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b762:	9425      	str	r4, [sp, #148]	; 0x94
 801b764:	441d      	add	r5, r3
 801b766:	9b07      	ldr	r3, [sp, #28]
 801b768:	3b01      	subs	r3, #1
 801b76a:	9307      	str	r3, [sp, #28]
 801b76c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b76e:	3302      	adds	r3, #2
 801b770:	930a      	str	r3, [sp, #40]	; 0x28
 801b772:	e66b      	b.n	801b44c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b774:	d024      	beq.n	801b7c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b776:	9b07      	ldr	r3, [sp, #28]
 801b778:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b77a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b77c:	3b01      	subs	r3, #1
 801b77e:	fb00 4003 	mla	r0, r0, r3, r4
 801b782:	1400      	asrs	r0, r0, #16
 801b784:	f53f ae80 	bmi.w	801b488 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b788:	3901      	subs	r1, #1
 801b78a:	4288      	cmp	r0, r1
 801b78c:	f6bf ae7c 	bge.w	801b488 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b790:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b792:	fb01 5303 	mla	r3, r1, r3, r5
 801b796:	141b      	asrs	r3, r3, #16
 801b798:	f53f ae76 	bmi.w	801b488 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b79c:	3a01      	subs	r2, #1
 801b79e:	4293      	cmp	r3, r2
 801b7a0:	f6bf ae72 	bge.w	801b488 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b7a4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b7a8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b7ac:	f1bb 0f00 	cmp.w	fp, #0
 801b7b0:	dc70      	bgt.n	801b894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b7b2:	9b07      	ldr	r3, [sp, #28]
 801b7b4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b7b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b7ba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b7be:	930a      	str	r3, [sp, #40]	; 0x28
 801b7c0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b7c2:	2b00      	cmp	r3, #0
 801b7c4:	f340 81ae 	ble.w	801bb24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b7c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b7d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b7d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b7d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b7da:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b7de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b7e2:	eef0 6a62 	vmov.f32	s13, s5
 801b7e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b7ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b7f2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801b7f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b7fa:	eef0 6a43 	vmov.f32	s13, s6
 801b7fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b802:	ee12 2a90 	vmov	r2, s5
 801b806:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b80a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b80e:	ee13 2a10 	vmov	r2, s6
 801b812:	9327      	str	r3, [sp, #156]	; 0x9c
 801b814:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b816:	fb92 f3f3 	sdiv	r3, r2, r3
 801b81a:	9328      	str	r3, [sp, #160]	; 0xa0
 801b81c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b81e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b820:	3b01      	subs	r3, #1
 801b822:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b826:	9316      	str	r3, [sp, #88]	; 0x58
 801b828:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b82a:	bf08      	it	eq
 801b82c:	4613      	moveq	r3, r2
 801b82e:	ee16 5a90 	vmov	r5, s13
 801b832:	9307      	str	r3, [sp, #28]
 801b834:	eeb0 3a67 	vmov.f32	s6, s15
 801b838:	eef0 2a47 	vmov.f32	s5, s14
 801b83c:	e5f8      	b.n	801b430 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b83e:	2800      	cmp	r0, #0
 801b840:	f43f ae6b 	beq.w	801b51a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b844:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b848:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b84c:	9108      	str	r1, [sp, #32]
 801b84e:	0e09      	lsrs	r1, r1, #24
 801b850:	9110      	str	r1, [sp, #64]	; 0x40
 801b852:	e662      	b.n	801b51a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b854:	f113 0801 	adds.w	r8, r3, #1
 801b858:	f53f af74 	bmi.w	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b85c:	4541      	cmp	r1, r8
 801b85e:	f6ff af71 	blt.w	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b862:	f11c 0801 	adds.w	r8, ip, #1
 801b866:	f53f af6d 	bmi.w	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b86a:	45c6      	cmp	lr, r8
 801b86c:	f6ff af6a 	blt.w	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b870:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801b874:	b209      	sxth	r1, r1
 801b876:	fa0f f38e 	sxth.w	r3, lr
 801b87a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801b87e:	9301      	str	r3, [sp, #4]
 801b880:	9100      	str	r1, [sp, #0]
 801b882:	4633      	mov	r3, r6
 801b884:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b886:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b888:	4639      	mov	r1, r7
 801b88a:	f7ff fc7a 	bl	801b182 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801b88e:	e759      	b.n	801b744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b890:	fffff800 	.word	0xfffff800
 801b894:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b896:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b898:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b89c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b89e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b8a2:	1427      	asrs	r7, r4, #16
 801b8a4:	142b      	asrs	r3, r5, #16
 801b8a6:	fb01 7303 	mla	r3, r1, r3, r7
 801b8aa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b8ac:	18e7      	adds	r7, r4, r3
 801b8ae:	5ce3      	ldrb	r3, [r4, r3]
 801b8b0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b8b4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b8b8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b8bc:	2a00      	cmp	r2, #0
 801b8be:	f000 8127 	beq.w	801bb10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801b8c2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b8c6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b8ca:	940d      	str	r4, [sp, #52]	; 0x34
 801b8cc:	0e24      	lsrs	r4, r4, #24
 801b8ce:	9414      	str	r4, [sp, #80]	; 0x50
 801b8d0:	b170      	cbz	r0, 801b8f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b8d2:	eb07 0e01 	add.w	lr, r7, r1
 801b8d6:	5c79      	ldrb	r1, [r7, r1]
 801b8d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b8dc:	9109      	str	r1, [sp, #36]	; 0x24
 801b8de:	0e09      	lsrs	r1, r1, #24
 801b8e0:	9111      	str	r1, [sp, #68]	; 0x44
 801b8e2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b8e6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b8ea:	910e      	str	r1, [sp, #56]	; 0x38
 801b8ec:	0e09      	lsrs	r1, r1, #24
 801b8ee:	9115      	str	r1, [sp, #84]	; 0x54
 801b8f0:	b292      	uxth	r2, r2
 801b8f2:	b280      	uxth	r0, r0
 801b8f4:	fb02 f800 	mul.w	r8, r2, r0
 801b8f8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b8fc:	0112      	lsls	r2, r2, #4
 801b8fe:	eba2 0e08 	sub.w	lr, r2, r8
 801b902:	b280      	uxth	r0, r0
 801b904:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b908:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b90a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b90c:	fa1f fe8e 	uxth.w	lr, lr
 801b910:	1a09      	subs	r1, r1, r0
 801b912:	b289      	uxth	r1, r1
 801b914:	fb0e f202 	mul.w	r2, lr, r2
 801b918:	fb01 220c 	mla	r2, r1, ip, r2
 801b91c:	fb00 2204 	mla	r2, r0, r4, r2
 801b920:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b922:	fb08 2204 	mla	r2, r8, r4, r2
 801b926:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b92a:	2a00      	cmp	r2, #0
 801b92c:	f000 80e5 	beq.w	801bafa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801b930:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b934:	d019      	beq.n	801b96a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801b936:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b93a:	fb0c fa0a 	mul.w	sl, ip, sl
 801b93e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b942:	fb0c fc03 	mul.w	ip, ip, r3
 801b946:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b94a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b94e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b952:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b956:	4453      	add	r3, sl
 801b958:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b95c:	0a1b      	lsrs	r3, r3, #8
 801b95e:	0a3f      	lsrs	r7, r7, #8
 801b960:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b964:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b968:	433b      	orrs	r3, r7
 801b96a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b96c:	2cff      	cmp	r4, #255	; 0xff
 801b96e:	d020      	beq.n	801b9b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801b970:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b972:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b976:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b978:	4367      	muls	r7, r4
 801b97a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b97c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b980:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b982:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b986:	fb04 fa0a 	mul.w	sl, r4, sl
 801b98a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b98e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b992:	44bc      	add	ip, r7
 801b994:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b998:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b99c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b9a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9ac:	ea4c 040a 	orr.w	r4, ip, sl
 801b9b0:	940d      	str	r4, [sp, #52]	; 0x34
 801b9b2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b9b4:	2cff      	cmp	r4, #255	; 0xff
 801b9b6:	d020      	beq.n	801b9fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801b9b8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b9ba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b9be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b9c0:	4367      	muls	r7, r4
 801b9c2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b9c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b9c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b9ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b9ce:	fb04 fa0a 	mul.w	sl, r4, sl
 801b9d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b9d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b9da:	44bc      	add	ip, r7
 801b9dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b9e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b9e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b9f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9f4:	ea4c 040a 	orr.w	r4, ip, sl
 801b9f8:	9409      	str	r4, [sp, #36]	; 0x24
 801b9fa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b9fc:	2cff      	cmp	r4, #255	; 0xff
 801b9fe:	d020      	beq.n	801ba42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801ba00:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ba02:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ba06:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ba08:	4367      	muls	r7, r4
 801ba0a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ba0c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ba10:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ba12:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ba16:	fb04 fa0a 	mul.w	sl, r4, sl
 801ba1a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ba1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba22:	44bc      	add	ip, r7
 801ba24:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ba28:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ba2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba38:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba3c:	ea4c 040a 	orr.w	r4, ip, sl
 801ba40:	940e      	str	r4, [sp, #56]	; 0x38
 801ba42:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ba44:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ba48:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ba4a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ba4e:	fb0e f707 	mul.w	r7, lr, r7
 801ba52:	fb01 770c 	mla	r7, r1, ip, r7
 801ba56:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ba5a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ba5c:	fb00 770c 	mla	r7, r0, ip, r7
 801ba60:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ba64:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ba66:	fb08 770c 	mla	r7, r8, ip, r7
 801ba6a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801ba6e:	fb0e fe0c 	mul.w	lr, lr, ip
 801ba72:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ba76:	fb01 e303 	mla	r3, r1, r3, lr
 801ba7a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ba7c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ba80:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba82:	fb00 330a 	mla	r3, r0, sl, r3
 801ba86:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ba8a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ba8e:	f8b9 3000 	ldrh.w	r3, [r9]
 801ba92:	43d2      	mvns	r2, r2
 801ba94:	1218      	asrs	r0, r3, #8
 801ba96:	b2d2      	uxtb	r2, r2
 801ba98:	10d9      	asrs	r1, r3, #3
 801ba9a:	0a3f      	lsrs	r7, r7, #8
 801ba9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801baa0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801baa4:	00db      	lsls	r3, r3, #3
 801baa6:	4350      	muls	r0, r2
 801baa8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801baac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bab0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bab4:	b2db      	uxtb	r3, r3
 801bab6:	ea47 070c 	orr.w	r7, r7, ip
 801baba:	4351      	muls	r1, r2
 801babc:	4353      	muls	r3, r2
 801babe:	1c42      	adds	r2, r0, #1
 801bac0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bac4:	0c3a      	lsrs	r2, r7, #16
 801bac6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801baca:	4a18      	ldr	r2, [pc, #96]	; (801bb2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bacc:	b2c0      	uxtb	r0, r0
 801bace:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bad2:	1c4a      	adds	r2, r1, #1
 801bad4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bad8:	0a3a      	lsrs	r2, r7, #8
 801bada:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bade:	00c9      	lsls	r1, r1, #3
 801bae0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bae4:	4301      	orrs	r1, r0
 801bae6:	1c58      	adds	r0, r3, #1
 801bae8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801baec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801baf0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801baf4:	4308      	orrs	r0, r1
 801baf6:	f8a9 0000 	strh.w	r0, [r9]
 801bafa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bafc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bafe:	441a      	add	r2, r3
 801bb00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bb02:	9225      	str	r2, [sp, #148]	; 0x94
 801bb04:	f109 0902 	add.w	r9, r9, #2
 801bb08:	441d      	add	r5, r3
 801bb0a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bb0e:	e64d      	b.n	801b7ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bb10:	2800      	cmp	r0, #0
 801bb12:	f43f aeed 	beq.w	801b8f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bb16:	5c79      	ldrb	r1, [r7, r1]
 801bb18:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb1c:	9109      	str	r1, [sp, #36]	; 0x24
 801bb1e:	0e09      	lsrs	r1, r1, #24
 801bb20:	9111      	str	r1, [sp, #68]	; 0x44
 801bb22:	e6e5      	b.n	801b8f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bb24:	b01b      	add	sp, #108	; 0x6c
 801bb26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb2a:	bf00      	nop
 801bb2c:	fffff800 	.word	0xfffff800

0801bb30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bb30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb34:	b085      	sub	sp, #20
 801bb36:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801bb3a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bb3e:	9103      	str	r1, [sp, #12]
 801bb40:	fb00 7406 	mla	r4, r0, r6, r7
 801bb44:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bb48:	2800      	cmp	r0, #0
 801bb4a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bb4e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bb52:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bb56:	9501      	str	r5, [sp, #4]
 801bb58:	eb03 0904 	add.w	r9, r3, r4
 801bb5c:	f2c0 8150 	blt.w	801be00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bb60:	4583      	cmp	fp, r0
 801bb62:	f340 814d 	ble.w	801be00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bb66:	2f00      	cmp	r7, #0
 801bb68:	f2c0 8146 	blt.w	801bdf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bb6c:	42be      	cmp	r6, r7
 801bb6e:	f340 8143 	ble.w	801bdf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bb72:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bb76:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bb7a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bb7e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bb82:	4355      	muls	r5, r2
 801bb84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bb88:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bb8c:	fb0c f203 	mul.w	r2, ip, r3
 801bb90:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bb94:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801bb98:	441d      	add	r5, r3
 801bb9a:	f102 0320 	add.w	r3, r2, #32
 801bb9e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bba2:	0a1b      	lsrs	r3, r3, #8
 801bba4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bba8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bbac:	431c      	orrs	r4, r3
 801bbae:	1c7b      	adds	r3, r7, #1
 801bbb0:	f100 812b 	bmi.w	801be0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bbb4:	429e      	cmp	r6, r3
 801bbb6:	f340 8128 	ble.w	801be0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bbba:	2900      	cmp	r1, #0
 801bbbc:	f000 8128 	beq.w	801be10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bbc0:	9a01      	ldr	r2, [sp, #4]
 801bbc2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bbc6:	8855      	ldrh	r5, [r2, #2]
 801bbc8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bbcc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bbd0:	fb08 f802 	mul.w	r8, r8, r2
 801bbd4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bbd8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bbdc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bbe0:	435d      	muls	r5, r3
 801bbe2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bbe6:	44d0      	add	r8, sl
 801bbe8:	f105 0a20 	add.w	sl, r5, #32
 801bbec:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bbf0:	0a2d      	lsrs	r5, r5, #8
 801bbf2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bbf6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bbfa:	432a      	orrs	r2, r5
 801bbfc:	3001      	adds	r0, #1
 801bbfe:	f100 810d 	bmi.w	801be1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bc02:	4583      	cmp	fp, r0
 801bc04:	f340 810a 	ble.w	801be1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bc08:	f1be 0f00 	cmp.w	lr, #0
 801bc0c:	f000 810b 	beq.w	801be26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801bc10:	2f00      	cmp	r7, #0
 801bc12:	f2c0 8100 	blt.w	801be16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bc16:	42be      	cmp	r6, r7
 801bc18:	f340 80fd 	ble.w	801be16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bc1c:	9801      	ldr	r0, [sp, #4]
 801bc1e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bc22:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bc26:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bc2a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801bc2e:	fb0a fa00 	mul.w	sl, sl, r0
 801bc32:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bc36:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bc3a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bc3e:	fb05 f808 	mul.w	r8, r5, r8
 801bc42:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801bc46:	4482      	add	sl, r0
 801bc48:	f108 0020 	add.w	r0, r8, #32
 801bc4c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bc50:	0a00      	lsrs	r0, r0, #8
 801bc52:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bc56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bc5a:	ea4b 0b00 	orr.w	fp, fp, r0
 801bc5e:	3701      	adds	r7, #1
 801bc60:	f100 80e6 	bmi.w	801be30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bc64:	42be      	cmp	r6, r7
 801bc66:	f340 80e3 	ble.w	801be30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bc6a:	2900      	cmp	r1, #0
 801bc6c:	f000 80e3 	beq.w	801be36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bc70:	3601      	adds	r6, #1
 801bc72:	9801      	ldr	r0, [sp, #4]
 801bc74:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bc78:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bc7c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bc80:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bc84:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bc88:	fb09 f906 	mul.w	r9, r9, r6
 801bc8c:	fb07 f800 	mul.w	r8, r7, r0
 801bc90:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bc94:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bc98:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bc9c:	44d1      	add	r9, sl
 801bc9e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bca2:	f108 0020 	add.w	r0, r8, #32
 801bca6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bcaa:	0a00      	lsrs	r0, r0, #8
 801bcac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bcb0:	4330      	orrs	r0, r6
 801bcb2:	b28e      	uxth	r6, r1
 801bcb4:	fa1f f98e 	uxth.w	r9, lr
 801bcb8:	fb06 f809 	mul.w	r8, r6, r9
 801bcbc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bcc0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bcc4:	0136      	lsls	r6, r6, #4
 801bcc6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bcca:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801bcce:	9601      	str	r6, [sp, #4]
 801bcd0:	ea4a 0404 	orr.w	r4, sl, r4
 801bcd4:	fa1f f689 	uxth.w	r6, r9
 801bcd8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bcdc:	fb11 f90e 	smulbb	r9, r1, lr
 801bce0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bce4:	9602      	str	r6, [sp, #8]
 801bce6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bcea:	4626      	mov	r6, r4
 801bcec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bcf0:	f1ce 0410 	rsb	r4, lr, #16
 801bcf4:	1a64      	subs	r4, r4, r1
 801bcf6:	ea4a 0202 	orr.w	r2, sl, r2
 801bcfa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bcfe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bd02:	434a      	muls	r2, r1
 801bd04:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bd08:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bd0c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bd10:	fb04 2406 	mla	r4, r4, r6, r2
 801bd14:	ea4a 0000 	orr.w	r0, sl, r0
 801bd18:	fb09 4200 	mla	r2, r9, r0, r4
 801bd1c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bd20:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bd24:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801bd28:	ea44 0b0b 	orr.w	fp, r4, fp
 801bd2c:	9c01      	ldr	r4, [sp, #4]
 801bd2e:	9e02      	ldr	r6, [sp, #8]
 801bd30:	9903      	ldr	r1, [sp, #12]
 801bd32:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801bd36:	1ba4      	subs	r4, r4, r6
 801bd38:	9e01      	ldr	r6, [sp, #4]
 801bd3a:	8808      	ldrh	r0, [r1, #0]
 801bd3c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801bd40:	eba6 0608 	sub.w	r6, r6, r8
 801bd44:	b2b6      	uxth	r6, r6
 801bd46:	b2a4      	uxth	r4, r4
 801bd48:	4373      	muls	r3, r6
 801bd4a:	fb0c 3304 	mla	r3, ip, r4, r3
 801bd4e:	9c02      	ldr	r4, [sp, #8]
 801bd50:	fb04 3505 	mla	r5, r4, r5, r3
 801bd54:	fb08 5707 	mla	r7, r8, r7, r5
 801bd58:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bd5c:	b289      	uxth	r1, r1
 801bd5e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bd62:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bd66:	434f      	muls	r7, r1
 801bd68:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bd6c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bd70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd74:	1c7b      	adds	r3, r7, #1
 801bd76:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bd7a:	ea42 0e0e 	orr.w	lr, r2, lr
 801bd7e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bd82:	fa1f f28e 	uxth.w	r2, lr
 801bd86:	1203      	asrs	r3, r0, #8
 801bd88:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bd8c:	b2ff      	uxtb	r7, r7
 801bd8e:	1215      	asrs	r5, r2, #8
 801bd90:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bd94:	fb13 f307 	smulbb	r3, r3, r7
 801bd98:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bd9c:	fb05 3501 	mla	r5, r5, r1, r3
 801bda0:	10c3      	asrs	r3, r0, #3
 801bda2:	10d4      	asrs	r4, r2, #3
 801bda4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bda8:	fb13 f307 	smulbb	r3, r3, r7
 801bdac:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bdb0:	fb04 3401 	mla	r4, r4, r1, r3
 801bdb4:	00c3      	lsls	r3, r0, #3
 801bdb6:	00d2      	lsls	r2, r2, #3
 801bdb8:	b2db      	uxtb	r3, r3
 801bdba:	fb13 f307 	smulbb	r3, r3, r7
 801bdbe:	b2d2      	uxtb	r2, r2
 801bdc0:	fb02 3101 	mla	r1, r2, r1, r3
 801bdc4:	b2ad      	uxth	r5, r5
 801bdc6:	b289      	uxth	r1, r1
 801bdc8:	b2a4      	uxth	r4, r4
 801bdca:	1c6b      	adds	r3, r5, #1
 801bdcc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bdd0:	1c62      	adds	r2, r4, #1
 801bdd2:	1c4b      	adds	r3, r1, #1
 801bdd4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bdd8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801bddc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bde0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bde4:	0964      	lsrs	r4, r4, #5
 801bde6:	432b      	orrs	r3, r5
 801bde8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801bdec:	9a03      	ldr	r2, [sp, #12]
 801bdee:	4323      	orrs	r3, r4
 801bdf0:	8013      	strh	r3, [r2, #0]
 801bdf2:	b005      	add	sp, #20
 801bdf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bdf8:	f04f 0c00 	mov.w	ip, #0
 801bdfc:	4664      	mov	r4, ip
 801bdfe:	e6d6      	b.n	801bbae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801be00:	2300      	movs	r3, #0
 801be02:	469c      	mov	ip, r3
 801be04:	461a      	mov	r2, r3
 801be06:	461c      	mov	r4, r3
 801be08:	e6f8      	b.n	801bbfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801be0a:	2300      	movs	r3, #0
 801be0c:	461a      	mov	r2, r3
 801be0e:	e6f5      	b.n	801bbfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801be10:	460b      	mov	r3, r1
 801be12:	460a      	mov	r2, r1
 801be14:	e6f2      	b.n	801bbfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801be16:	2500      	movs	r5, #0
 801be18:	46ab      	mov	fp, r5
 801be1a:	e720      	b.n	801bc5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801be1c:	2700      	movs	r7, #0
 801be1e:	463d      	mov	r5, r7
 801be20:	4638      	mov	r0, r7
 801be22:	46bb      	mov	fp, r7
 801be24:	e745      	b.n	801bcb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801be26:	4677      	mov	r7, lr
 801be28:	4675      	mov	r5, lr
 801be2a:	4670      	mov	r0, lr
 801be2c:	46f3      	mov	fp, lr
 801be2e:	e740      	b.n	801bcb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801be30:	2700      	movs	r7, #0
 801be32:	4638      	mov	r0, r7
 801be34:	e73d      	b.n	801bcb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801be36:	460f      	mov	r7, r1
 801be38:	4608      	mov	r0, r1
 801be3a:	e73a      	b.n	801bcb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801be3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801be3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be40:	b097      	sub	sp, #92	; 0x5c
 801be42:	9214      	str	r2, [sp, #80]	; 0x50
 801be44:	9308      	str	r3, [sp, #32]
 801be46:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801be48:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801be4c:	9312      	str	r3, [sp, #72]	; 0x48
 801be4e:	9111      	str	r1, [sp, #68]	; 0x44
 801be50:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801be54:	9015      	str	r0, [sp, #84]	; 0x54
 801be56:	6850      	ldr	r0, [r2, #4]
 801be58:	6812      	ldr	r2, [r2, #0]
 801be5a:	fb00 1303 	mla	r3, r0, r3, r1
 801be5e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801be62:	9309      	str	r3, [sp, #36]	; 0x24
 801be64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be66:	681b      	ldr	r3, [r3, #0]
 801be68:	930b      	str	r3, [sp, #44]	; 0x2c
 801be6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be6c:	685b      	ldr	r3, [r3, #4]
 801be6e:	930c      	str	r3, [sp, #48]	; 0x30
 801be70:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801be74:	930a      	str	r3, [sp, #40]	; 0x28
 801be76:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801be78:	2b00      	cmp	r3, #0
 801be7a:	dc03      	bgt.n	801be84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801be7c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801be7e:	2b00      	cmp	r3, #0
 801be80:	f340 83cb 	ble.w	801c61a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801be84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801be8e:	1e48      	subs	r0, r1, #1
 801be90:	1e55      	subs	r5, r2, #1
 801be92:	9b08      	ldr	r3, [sp, #32]
 801be94:	2b00      	cmp	r3, #0
 801be96:	f340 81a3 	ble.w	801c1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801be9a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801be9c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801be9e:	1436      	asrs	r6, r6, #16
 801bea0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801bea4:	d406      	bmi.n	801beb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bea6:	4286      	cmp	r6, r0
 801bea8:	da04      	bge.n	801beb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801beaa:	2b00      	cmp	r3, #0
 801beac:	db02      	blt.n	801beb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801beae:	42ab      	cmp	r3, r5
 801beb0:	f2c0 8197 	blt.w	801c1e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801beb4:	3601      	adds	r6, #1
 801beb6:	f100 8184 	bmi.w	801c1c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801beba:	42b1      	cmp	r1, r6
 801bebc:	f2c0 8181 	blt.w	801c1c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bec0:	3301      	adds	r3, #1
 801bec2:	f100 817e 	bmi.w	801c1c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bec6:	429a      	cmp	r2, r3
 801bec8:	f2c0 817b 	blt.w	801c1c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801becc:	9b08      	ldr	r3, [sp, #32]
 801bece:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801bed0:	9313      	str	r3, [sp, #76]	; 0x4c
 801bed2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bed6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801bed8:	2b00      	cmp	r3, #0
 801beda:	f340 81a4 	ble.w	801c226 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801bede:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bee0:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801bee2:	1418      	asrs	r0, r3, #16
 801bee4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801bee6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801beea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801beec:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801bef0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bef2:	142d      	asrs	r5, r5, #16
 801bef4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801bef8:	f100 81f8 	bmi.w	801c2ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801befc:	f102 3eff 	add.w	lr, r2, #4294967295
 801bf00:	4575      	cmp	r5, lr
 801bf02:	f280 81f3 	bge.w	801c2ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bf06:	2800      	cmp	r0, #0
 801bf08:	f2c0 81f0 	blt.w	801c2ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bf0c:	f103 3eff 	add.w	lr, r3, #4294967295
 801bf10:	4570      	cmp	r0, lr
 801bf12:	f280 81eb 	bge.w	801c2ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bf16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bf18:	b212      	sxth	r2, r2
 801bf1a:	fb00 5002 	mla	r0, r0, r2, r5
 801bf1e:	fa1f fe81 	uxth.w	lr, r1
 801bf22:	eb03 0a00 	add.w	sl, r3, r0
 801bf26:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801bf2a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801bf2e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bf32:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801bf36:	b29b      	uxth	r3, r3
 801bf38:	f1bc 0f00 	cmp.w	ip, #0
 801bf3c:	f000 81b9 	beq.w	801c2b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801bf40:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801bf44:	940d      	str	r4, [sp, #52]	; 0x34
 801bf46:	eb0a 0b02 	add.w	fp, sl, r2
 801bf4a:	fa1f fa8c 	uxth.w	sl, ip
 801bf4e:	fb0a fe0e 	mul.w	lr, sl, lr
 801bf52:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801bf56:	fa1f fa8a 	uxth.w	sl, sl
 801bf5a:	eba5 050e 	sub.w	r5, r5, lr
 801bf5e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801bf62:	940e      	str	r4, [sp, #56]	; 0x38
 801bf64:	eba3 030a 	sub.w	r3, r3, sl
 801bf68:	b2ad      	uxth	r5, r5
 801bf6a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bf6c:	b29b      	uxth	r3, r3
 801bf6e:	fb08 f505 	mul.w	r5, r8, r5
 801bf72:	fb09 5303 	mla	r3, r9, r3, r5
 801bf76:	fb0a 3304 	mla	r3, sl, r4, r3
 801bf7a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bf7c:	fb0e 3304 	mla	r3, lr, r4, r3
 801bf80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bf84:	2b00      	cmp	r3, #0
 801bf86:	f000 810f 	beq.w	801c1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bf8a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bf8c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801bf90:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801bf94:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801bf98:	f000 8190 	beq.w	801c2bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801bf9c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801bfa0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bfa4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfa8:	fb09 f000 	mul.w	r0, r9, r0
 801bfac:	fb0a fe0e 	mul.w	lr, sl, lr
 801bfb0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801bfb4:	f100 0b20 	add.w	fp, r0, #32
 801bfb8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bfbc:	44ce      	add	lr, r9
 801bfbe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801bfc2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bfc6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bfca:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bfce:	ea4e 0909 	orr.w	r9, lr, r9
 801bfd2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801bfd6:	8868      	ldrh	r0, [r5, #2]
 801bfd8:	d019      	beq.n	801c00e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801bfda:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801bfde:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bfe2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfe6:	fb08 f800 	mul.w	r8, r8, r0
 801bfea:	fb0a fe0e 	mul.w	lr, sl, lr
 801bfee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801bff2:	f108 0b20 	add.w	fp, r8, #32
 801bff6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bffa:	4486      	add	lr, r0
 801bffc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c000:	0a00      	lsrs	r0, r0, #8
 801c002:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c006:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c00a:	ea4e 0000 	orr.w	r0, lr, r0
 801c00e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c012:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c016:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c01a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c01e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c022:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c026:	ea4e 0909 	orr.w	r9, lr, r9
 801c02a:	ea4a 0000 	orr.w	r0, sl, r0
 801c02e:	f1bc 0f00 	cmp.w	ip, #0
 801c032:	f000 8145 	beq.w	801c2c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c036:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c03a:	3a01      	subs	r2, #1
 801c03c:	0052      	lsls	r2, r2, #1
 801c03e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c040:	3202      	adds	r2, #2
 801c042:	2cff      	cmp	r4, #255	; 0xff
 801c044:	eb05 0e02 	add.w	lr, r5, r2
 801c048:	5aaa      	ldrh	r2, [r5, r2]
 801c04a:	d018      	beq.n	801c07e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c04c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c050:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c054:	fb04 fa02 	mul.w	sl, r4, r2
 801c058:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c05c:	fb08 f805 	mul.w	r8, r8, r5
 801c060:	f10a 0520 	add.w	r5, sl, #32
 801c064:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c068:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c06c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c070:	4442      	add	r2, r8
 801c072:	0a2d      	lsrs	r5, r5, #8
 801c074:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c078:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c07c:	432a      	orrs	r2, r5
 801c07e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c080:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c084:	2cff      	cmp	r4, #255	; 0xff
 801c086:	d01a      	beq.n	801c0be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c088:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c08c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c090:	fb04 fa05 	mul.w	sl, r4, r5
 801c094:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c098:	fb08 f80e 	mul.w	r8, r8, lr
 801c09c:	f10a 0e20 	add.w	lr, sl, #32
 801c0a0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c0a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c0a8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c0ac:	4445      	add	r5, r8
 801c0ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c0b2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c0b6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c0ba:	ea45 050e 	orr.w	r5, r5, lr
 801c0be:	fb1c fe01 	smulbb	lr, ip, r1
 801c0c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c0c6:	f1cc 0810 	rsb	r8, ip, #16
 801c0ca:	eba8 0801 	sub.w	r8, r8, r1
 801c0ce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c0d2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c0d6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c0da:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c0de:	4341      	muls	r1, r0
 801c0e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c0e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c0e8:	ea4a 0202 	orr.w	r2, sl, r2
 801c0ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c0f0:	fb09 1108 	mla	r1, r9, r8, r1
 801c0f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c0f8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c0fc:	fb0c 1102 	mla	r1, ip, r2, r1
 801c100:	ea4b 0505 	orr.w	r5, fp, r5
 801c104:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c108:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c10c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c110:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c114:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c118:	ea42 0e0e 	orr.w	lr, r2, lr
 801c11c:	fa1f f28e 	uxth.w	r2, lr
 801c120:	2bff      	cmp	r3, #255	; 0xff
 801c122:	d103      	bne.n	801c12c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c124:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c126:	29ff      	cmp	r1, #255	; 0xff
 801c128:	f000 80de 	beq.w	801c2e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c12c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c12e:	8838      	ldrh	r0, [r7, #0]
 801c130:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c132:	434b      	muls	r3, r1
 801c134:	f103 0c01 	add.w	ip, r3, #1
 801c138:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c13c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c140:	fa5f fc83 	uxtb.w	ip, r3
 801c144:	1203      	asrs	r3, r0, #8
 801c146:	1215      	asrs	r5, r2, #8
 801c148:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c14c:	fb13 f30c 	smulbb	r3, r3, ip
 801c150:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c154:	fb05 3501 	mla	r5, r5, r1, r3
 801c158:	10c3      	asrs	r3, r0, #3
 801c15a:	10d1      	asrs	r1, r2, #3
 801c15c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c160:	fb13 f30c 	smulbb	r3, r3, ip
 801c164:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c168:	fb01 3104 	mla	r1, r1, r4, r3
 801c16c:	00c3      	lsls	r3, r0, #3
 801c16e:	00d2      	lsls	r2, r2, #3
 801c170:	b2db      	uxtb	r3, r3
 801c172:	b2d2      	uxtb	r2, r2
 801c174:	fb13 f30c 	smulbb	r3, r3, ip
 801c178:	b2ad      	uxth	r5, r5
 801c17a:	fb02 3304 	mla	r3, r2, r4, r3
 801c17e:	b29a      	uxth	r2, r3
 801c180:	1c6b      	adds	r3, r5, #1
 801c182:	b289      	uxth	r1, r1
 801c184:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c188:	1c53      	adds	r3, r2, #1
 801c18a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c18e:	1c4a      	adds	r2, r1, #1
 801c190:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c194:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c198:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c19c:	0949      	lsrs	r1, r1, #5
 801c19e:	432b      	orrs	r3, r5
 801c1a0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c1a4:	430b      	orrs	r3, r1
 801c1a6:	803b      	strh	r3, [r7, #0]
 801c1a8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c1aa:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c1ac:	4413      	add	r3, r2
 801c1ae:	9321      	str	r3, [sp, #132]	; 0x84
 801c1b0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c1b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c1b4:	441a      	add	r2, r3
 801c1b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c1b8:	9222      	str	r2, [sp, #136]	; 0x88
 801c1ba:	3b01      	subs	r3, #1
 801c1bc:	3702      	adds	r7, #2
 801c1be:	9313      	str	r3, [sp, #76]	; 0x4c
 801c1c0:	e689      	b.n	801bed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c1c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c1c4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c1c6:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c1c8:	4433      	add	r3, r6
 801c1ca:	9321      	str	r3, [sp, #132]	; 0x84
 801c1cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c1ce:	441c      	add	r4, r3
 801c1d0:	9b08      	ldr	r3, [sp, #32]
 801c1d2:	9422      	str	r4, [sp, #136]	; 0x88
 801c1d4:	3b01      	subs	r3, #1
 801c1d6:	9308      	str	r3, [sp, #32]
 801c1d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c1da:	3302      	adds	r3, #2
 801c1dc:	9309      	str	r3, [sp, #36]	; 0x24
 801c1de:	e658      	b.n	801be92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c1e0:	d028      	beq.n	801c234 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c1e2:	9b08      	ldr	r3, [sp, #32]
 801c1e4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c1e6:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c1e8:	3b01      	subs	r3, #1
 801c1ea:	fb00 5003 	mla	r0, r0, r3, r5
 801c1ee:	1400      	asrs	r0, r0, #16
 801c1f0:	f53f ae6c 	bmi.w	801becc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c1f4:	3901      	subs	r1, #1
 801c1f6:	4288      	cmp	r0, r1
 801c1f8:	f6bf ae68 	bge.w	801becc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c1fc:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c1fe:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c200:	fb01 0303 	mla	r3, r1, r3, r0
 801c204:	141b      	asrs	r3, r3, #16
 801c206:	f53f ae61 	bmi.w	801becc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c20a:	3a01      	subs	r2, #1
 801c20c:	4293      	cmp	r3, r2
 801c20e:	f6bf ae5d 	bge.w	801becc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c212:	9b08      	ldr	r3, [sp, #32]
 801c214:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c218:	9313      	str	r3, [sp, #76]	; 0x4c
 801c21a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c21e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c220:	2b00      	cmp	r3, #0
 801c222:	f300 8082 	bgt.w	801c32a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c226:	9b08      	ldr	r3, [sp, #32]
 801c228:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c22c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c22e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c232:	9309      	str	r3, [sp, #36]	; 0x24
 801c234:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c236:	2b00      	cmp	r3, #0
 801c238:	f340 81ef 	ble.w	801c61a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c23c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c240:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c244:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c248:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c24a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c24e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c252:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c256:	eef0 6a62 	vmov.f32	s13, s5
 801c25a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c25e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c262:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c266:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c26a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c26e:	eef0 6a43 	vmov.f32	s13, s6
 801c272:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c276:	ee12 2a90 	vmov	r2, s5
 801c27a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c27e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c282:	ee13 2a10 	vmov	r2, s6
 801c286:	9323      	str	r3, [sp, #140]	; 0x8c
 801c288:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c28a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c28e:	9324      	str	r3, [sp, #144]	; 0x90
 801c290:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c292:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c294:	3b01      	subs	r3, #1
 801c296:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c29a:	9311      	str	r3, [sp, #68]	; 0x44
 801c29c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c29e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c2a2:	bf08      	it	eq
 801c2a4:	4613      	moveq	r3, r2
 801c2a6:	9308      	str	r3, [sp, #32]
 801c2a8:	eeb0 3a67 	vmov.f32	s6, s15
 801c2ac:	eef0 2a47 	vmov.f32	s5, s14
 801c2b0:	e5e1      	b.n	801be76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c2b2:	fb08 f505 	mul.w	r5, r8, r5
 801c2b6:	fb09 5303 	mla	r3, r9, r3, r5
 801c2ba:	e661      	b.n	801bf80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c2bc:	4681      	mov	r9, r0
 801c2be:	e688      	b.n	801bfd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c2c0:	f1c1 0210 	rsb	r2, r1, #16
 801c2c4:	4341      	muls	r1, r0
 801c2c6:	fb09 1902 	mla	r9, r9, r2, r1
 801c2ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c2ce:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c2d2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c2d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c2da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c2de:	ea42 0909 	orr.w	r9, r2, r9
 801c2e2:	fa1f f289 	uxth.w	r2, r9
 801c2e6:	e71b      	b.n	801c120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c2e8:	803a      	strh	r2, [r7, #0]
 801c2ea:	e75d      	b.n	801c1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c2ec:	f115 0e01 	adds.w	lr, r5, #1
 801c2f0:	f53f af5a 	bmi.w	801c1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c2f4:	4572      	cmp	r2, lr
 801c2f6:	f6ff af57 	blt.w	801c1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c2fa:	f110 0e01 	adds.w	lr, r0, #1
 801c2fe:	f53f af53 	bmi.w	801c1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c302:	4573      	cmp	r3, lr
 801c304:	f6ff af50 	blt.w	801c1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c308:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c30a:	9502      	str	r5, [sp, #8]
 801c30c:	b21b      	sxth	r3, r3
 801c30e:	b212      	sxth	r2, r2
 801c310:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c314:	9301      	str	r3, [sp, #4]
 801c316:	9200      	str	r2, [sp, #0]
 801c318:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c31c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c320:	4639      	mov	r1, r7
 801c322:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c324:	f7ff fc04 	bl	801bb30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c328:	e73e      	b.n	801c1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c32a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c32c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c330:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c332:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c336:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c338:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c33c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c33e:	141f      	asrs	r7, r3, #16
 801c340:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c342:	141b      	asrs	r3, r3, #16
 801c344:	fb01 3707 	mla	r7, r1, r7, r3
 801c348:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c34a:	fa1f fc82 	uxth.w	ip, r2
 801c34e:	eb03 0a07 	add.w	sl, r3, r7
 801c352:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c356:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c35a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c35e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c362:	b29b      	uxth	r3, r3
 801c364:	2d00      	cmp	r5, #0
 801c366:	f000 813d 	beq.w	801c5e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c36a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c36e:	940f      	str	r4, [sp, #60]	; 0x3c
 801c370:	eb0a 0b01 	add.w	fp, sl, r1
 801c374:	fa1f fa85 	uxth.w	sl, r5
 801c378:	fb0a fc0c 	mul.w	ip, sl, ip
 801c37c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c380:	fa1f fa8a 	uxth.w	sl, sl
 801c384:	eba0 000c 	sub.w	r0, r0, ip
 801c388:	eba3 030a 	sub.w	r3, r3, sl
 801c38c:	b280      	uxth	r0, r0
 801c38e:	fb08 f000 	mul.w	r0, r8, r0
 801c392:	b29b      	uxth	r3, r3
 801c394:	fb09 0303 	mla	r3, r9, r3, r0
 801c398:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c39a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c39e:	9410      	str	r4, [sp, #64]	; 0x40
 801c3a0:	fb0a 3300 	mla	r3, sl, r0, r3
 801c3a4:	fb0c 3304 	mla	r3, ip, r4, r3
 801c3a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c3ac:	2b00      	cmp	r3, #0
 801c3ae:	f000 810b 	beq.w	801c5c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c3b2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c3b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c3b6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c3ba:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c3be:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c3c2:	f000 8114 	beq.w	801c5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c3c6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c3ca:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c3ce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c3d2:	fb09 f707 	mul.w	r7, r9, r7
 801c3d6:	fb0a fc0c 	mul.w	ip, sl, ip
 801c3da:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c3de:	f107 0b20 	add.w	fp, r7, #32
 801c3e2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c3e6:	44cc      	add	ip, r9
 801c3e8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c3ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c3f0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c3f4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c3f8:	ea4c 0909 	orr.w	r9, ip, r9
 801c3fc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c400:	8847      	ldrh	r7, [r0, #2]
 801c402:	d019      	beq.n	801c438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c404:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c408:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c40c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c410:	fb08 f807 	mul.w	r8, r8, r7
 801c414:	fb0a fc0c 	mul.w	ip, sl, ip
 801c418:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c41c:	f108 0b20 	add.w	fp, r8, #32
 801c420:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c424:	44bc      	add	ip, r7
 801c426:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c42a:	0a3f      	lsrs	r7, r7, #8
 801c42c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c430:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c434:	ea4c 0707 	orr.w	r7, ip, r7
 801c438:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c43c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c440:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c444:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c448:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c44c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c450:	ea4c 0909 	orr.w	r9, ip, r9
 801c454:	ea4a 0707 	orr.w	r7, sl, r7
 801c458:	2d00      	cmp	r5, #0
 801c45a:	f000 80ca 	beq.w	801c5f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c45e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c462:	3901      	subs	r1, #1
 801c464:	0049      	lsls	r1, r1, #1
 801c466:	3102      	adds	r1, #2
 801c468:	eb00 0c01 	add.w	ip, r0, r1
 801c46c:	5a41      	ldrh	r1, [r0, r1]
 801c46e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c470:	28ff      	cmp	r0, #255	; 0xff
 801c472:	d019      	beq.n	801c4a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c474:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c476:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c47a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c47e:	fb04 fa01 	mul.w	sl, r4, r1
 801c482:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c486:	fb08 f800 	mul.w	r8, r8, r0
 801c48a:	f10a 0020 	add.w	r0, sl, #32
 801c48e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c492:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c496:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c49a:	4441      	add	r1, r8
 801c49c:	0a00      	lsrs	r0, r0, #8
 801c49e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c4a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c4a6:	4301      	orrs	r1, r0
 801c4a8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c4aa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c4ae:	2cff      	cmp	r4, #255	; 0xff
 801c4b0:	d01a      	beq.n	801c4e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c4b2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c4b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c4ba:	fb04 fa00 	mul.w	sl, r4, r0
 801c4be:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c4c2:	fb08 f80c 	mul.w	r8, r8, ip
 801c4c6:	f10a 0c20 	add.w	ip, sl, #32
 801c4ca:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c4ce:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c4d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c4d6:	4440      	add	r0, r8
 801c4d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c4dc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c4e0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c4e4:	ea40 000c 	orr.w	r0, r0, ip
 801c4e8:	fb15 fc02 	smulbb	ip, r5, r2
 801c4ec:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c4f0:	f1c5 0810 	rsb	r8, r5, #16
 801c4f4:	eba8 0802 	sub.w	r8, r8, r2
 801c4f8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c4fc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c500:	437a      	muls	r2, r7
 801c502:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c506:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c50a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c50e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c512:	fb09 2208 	mla	r2, r9, r8, r2
 801c516:	ea4a 0101 	orr.w	r1, sl, r1
 801c51a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c51e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c522:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c526:	fb05 2201 	mla	r2, r5, r1, r2
 801c52a:	ea4b 0000 	orr.w	r0, fp, r0
 801c52e:	fb0c 2200 	mla	r2, ip, r0, r2
 801c532:	0d57      	lsrs	r7, r2, #21
 801c534:	0952      	lsrs	r2, r2, #5
 801c536:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c53a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c53e:	433a      	orrs	r2, r7
 801c540:	2bff      	cmp	r3, #255	; 0xff
 801c542:	b292      	uxth	r2, r2
 801c544:	d102      	bne.n	801c54c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c546:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c548:	29ff      	cmp	r1, #255	; 0xff
 801c54a:	d063      	beq.n	801c614 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c54c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c54e:	f8be 1000 	ldrh.w	r1, [lr]
 801c552:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c554:	4343      	muls	r3, r0
 801c556:	1c58      	adds	r0, r3, #1
 801c558:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c55c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c560:	1208      	asrs	r0, r1, #8
 801c562:	b2db      	uxtb	r3, r3
 801c564:	1215      	asrs	r5, r2, #8
 801c566:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c56a:	fb10 f003 	smulbb	r0, r0, r3
 801c56e:	10cf      	asrs	r7, r1, #3
 801c570:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c574:	00c9      	lsls	r1, r1, #3
 801c576:	fb05 0504 	mla	r5, r5, r4, r0
 801c57a:	b2c9      	uxtb	r1, r1
 801c57c:	10d0      	asrs	r0, r2, #3
 801c57e:	00d2      	lsls	r2, r2, #3
 801c580:	fb11 f103 	smulbb	r1, r1, r3
 801c584:	b2d2      	uxtb	r2, r2
 801c586:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c58a:	fb02 1204 	mla	r2, r2, r4, r1
 801c58e:	fb17 f703 	smulbb	r7, r7, r3
 801c592:	b2ad      	uxth	r5, r5
 801c594:	b292      	uxth	r2, r2
 801c596:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c59a:	fb00 7004 	mla	r0, r0, r4, r7
 801c59e:	1c6b      	adds	r3, r5, #1
 801c5a0:	1c57      	adds	r7, r2, #1
 801c5a2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c5a6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c5aa:	b280      	uxth	r0, r0
 801c5ac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c5b0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c5b4:	433d      	orrs	r5, r7
 801c5b6:	1c47      	adds	r7, r0, #1
 801c5b8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c5bc:	097f      	lsrs	r7, r7, #5
 801c5be:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c5c2:	433d      	orrs	r5, r7
 801c5c4:	f8ae 5000 	strh.w	r5, [lr]
 801c5c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c5ca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c5cc:	4413      	add	r3, r2
 801c5ce:	9321      	str	r3, [sp, #132]	; 0x84
 801c5d0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c5d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c5d4:	441a      	add	r2, r3
 801c5d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c5d8:	9222      	str	r2, [sp, #136]	; 0x88
 801c5da:	3b01      	subs	r3, #1
 801c5dc:	f10e 0e02 	add.w	lr, lr, #2
 801c5e0:	9313      	str	r3, [sp, #76]	; 0x4c
 801c5e2:	e61c      	b.n	801c21e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c5e4:	fb08 f000 	mul.w	r0, r8, r0
 801c5e8:	fb09 0303 	mla	r3, r9, r3, r0
 801c5ec:	e6dc      	b.n	801c3a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c5ee:	46b9      	mov	r9, r7
 801c5f0:	e704      	b.n	801c3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c5f2:	f1c2 0110 	rsb	r1, r2, #16
 801c5f6:	437a      	muls	r2, r7
 801c5f8:	fb09 2901 	mla	r9, r9, r1, r2
 801c5fc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c600:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c604:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c608:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c60c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c610:	4302      	orrs	r2, r0
 801c612:	e795      	b.n	801c540 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c614:	f8ae 2000 	strh.w	r2, [lr]
 801c618:	e7d6      	b.n	801c5c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c61a:	b017      	add	sp, #92	; 0x5c
 801c61c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c620 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c624:	b085      	sub	sp, #20
 801c626:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c62a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c62e:	9103      	str	r1, [sp, #12]
 801c630:	fb00 7406 	mla	r4, r0, r6, r7
 801c634:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c638:	2800      	cmp	r0, #0
 801c63a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c63e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c642:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c646:	9501      	str	r5, [sp, #4]
 801c648:	eb02 0904 	add.w	r9, r2, r4
 801c64c:	f2c0 8141 	blt.w	801c8d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c650:	4583      	cmp	fp, r0
 801c652:	f340 813e 	ble.w	801c8d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c656:	2f00      	cmp	r7, #0
 801c658:	f2c0 8137 	blt.w	801c8ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c65c:	42be      	cmp	r6, r7
 801c65e:	f340 8134 	ble.w	801c8ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c662:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c666:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c66a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c66e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c672:	4355      	muls	r5, r2
 801c674:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c678:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c67c:	fb0c f203 	mul.w	r2, ip, r3
 801c680:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c684:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c688:	441d      	add	r5, r3
 801c68a:	f102 0320 	add.w	r3, r2, #32
 801c68e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c692:	0a1b      	lsrs	r3, r3, #8
 801c694:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c698:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c69c:	431c      	orrs	r4, r3
 801c69e:	1c7b      	adds	r3, r7, #1
 801c6a0:	f100 811c 	bmi.w	801c8dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c6a4:	429e      	cmp	r6, r3
 801c6a6:	f340 8119 	ble.w	801c8dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c6aa:	2900      	cmp	r1, #0
 801c6ac:	f000 8119 	beq.w	801c8e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c6b0:	9a01      	ldr	r2, [sp, #4]
 801c6b2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c6b6:	8855      	ldrh	r5, [r2, #2]
 801c6b8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c6bc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c6c0:	fb08 f802 	mul.w	r8, r8, r2
 801c6c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c6c8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c6cc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c6d0:	435d      	muls	r5, r3
 801c6d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c6d6:	44d0      	add	r8, sl
 801c6d8:	f105 0a20 	add.w	sl, r5, #32
 801c6dc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c6e0:	0a2d      	lsrs	r5, r5, #8
 801c6e2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c6e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c6ea:	432a      	orrs	r2, r5
 801c6ec:	3001      	adds	r0, #1
 801c6ee:	f100 80fe 	bmi.w	801c8ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c6f2:	4583      	cmp	fp, r0
 801c6f4:	f340 80fb 	ble.w	801c8ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c6f8:	f1be 0f00 	cmp.w	lr, #0
 801c6fc:	f000 80fc 	beq.w	801c8f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c700:	2f00      	cmp	r7, #0
 801c702:	f2c0 80f1 	blt.w	801c8e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c706:	42be      	cmp	r6, r7
 801c708:	f340 80ee 	ble.w	801c8e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c70c:	9801      	ldr	r0, [sp, #4]
 801c70e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c712:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c716:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c71a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c71e:	fb0a fa00 	mul.w	sl, sl, r0
 801c722:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c726:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c72a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c72e:	fb05 f808 	mul.w	r8, r5, r8
 801c732:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c736:	4482      	add	sl, r0
 801c738:	f108 0020 	add.w	r0, r8, #32
 801c73c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c740:	0a00      	lsrs	r0, r0, #8
 801c742:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c746:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c74a:	ea4b 0b00 	orr.w	fp, fp, r0
 801c74e:	3701      	adds	r7, #1
 801c750:	f100 80d7 	bmi.w	801c902 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c754:	42be      	cmp	r6, r7
 801c756:	f340 80d4 	ble.w	801c902 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c75a:	2900      	cmp	r1, #0
 801c75c:	f000 80d4 	beq.w	801c908 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c760:	3601      	adds	r6, #1
 801c762:	9801      	ldr	r0, [sp, #4]
 801c764:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c768:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c76c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c770:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c774:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c778:	fb09 f906 	mul.w	r9, r9, r6
 801c77c:	fb07 f800 	mul.w	r8, r7, r0
 801c780:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c784:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c788:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c78c:	44d1      	add	r9, sl
 801c78e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c792:	f108 0020 	add.w	r0, r8, #32
 801c796:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c79a:	0a00      	lsrs	r0, r0, #8
 801c79c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7a0:	4330      	orrs	r0, r6
 801c7a2:	b28e      	uxth	r6, r1
 801c7a4:	fa1f f98e 	uxth.w	r9, lr
 801c7a8:	fb06 f809 	mul.w	r8, r6, r9
 801c7ac:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c7b0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c7b4:	0136      	lsls	r6, r6, #4
 801c7b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c7ba:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c7be:	9601      	str	r6, [sp, #4]
 801c7c0:	ea4a 0404 	orr.w	r4, sl, r4
 801c7c4:	fa1f f689 	uxth.w	r6, r9
 801c7c8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c7cc:	fb11 f90e 	smulbb	r9, r1, lr
 801c7d0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c7d4:	9602      	str	r6, [sp, #8]
 801c7d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c7da:	4626      	mov	r6, r4
 801c7dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c7e0:	f1ce 0410 	rsb	r4, lr, #16
 801c7e4:	1a64      	subs	r4, r4, r1
 801c7e6:	ea4a 0202 	orr.w	r2, sl, r2
 801c7ea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c7ee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c7f2:	434a      	muls	r2, r1
 801c7f4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c7f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c7fc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c800:	fb04 2406 	mla	r4, r4, r6, r2
 801c804:	ea4a 0000 	orr.w	r0, sl, r0
 801c808:	fb09 4200 	mla	r2, r9, r0, r4
 801c80c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c810:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c814:	9801      	ldr	r0, [sp, #4]
 801c816:	9903      	ldr	r1, [sp, #12]
 801c818:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c81c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c820:	9c02      	ldr	r4, [sp, #8]
 801c822:	8809      	ldrh	r1, [r1, #0]
 801c824:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801c828:	1b00      	subs	r0, r0, r4
 801c82a:	9c01      	ldr	r4, [sp, #4]
 801c82c:	eba4 0608 	sub.w	r6, r4, r8
 801c830:	b2b6      	uxth	r6, r6
 801c832:	b280      	uxth	r0, r0
 801c834:	4373      	muls	r3, r6
 801c836:	fb0c 3300 	mla	r3, ip, r0, r3
 801c83a:	9802      	ldr	r0, [sp, #8]
 801c83c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c840:	fb00 3505 	mla	r5, r0, r5, r3
 801c844:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c848:	fb08 5707 	mla	r7, r8, r7, r5
 801c84c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c850:	120b      	asrs	r3, r1, #8
 801c852:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c856:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801c85a:	b2ff      	uxtb	r7, r7
 801c85c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c860:	10c8      	asrs	r0, r1, #3
 801c862:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c866:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c86a:	00c9      	lsls	r1, r1, #3
 801c86c:	437b      	muls	r3, r7
 801c86e:	ea42 0e0e 	orr.w	lr, r2, lr
 801c872:	b2c9      	uxtb	r1, r1
 801c874:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c878:	fa1f f28e 	uxth.w	r2, lr
 801c87c:	4378      	muls	r0, r7
 801c87e:	434f      	muls	r7, r1
 801c880:	1c59      	adds	r1, r3, #1
 801c882:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c886:	1213      	asrs	r3, r2, #8
 801c888:	f023 0307 	bic.w	r3, r3, #7
 801c88c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c890:	1c41      	adds	r1, r0, #1
 801c892:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c896:	10d1      	asrs	r1, r2, #3
 801c898:	f021 0103 	bic.w	r1, r1, #3
 801c89c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c8a0:	021b      	lsls	r3, r3, #8
 801c8a2:	00c9      	lsls	r1, r1, #3
 801c8a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c8a8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c8ac:	430b      	orrs	r3, r1
 801c8ae:	1c79      	adds	r1, r7, #1
 801c8b0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801c8b4:	00d2      	lsls	r2, r2, #3
 801c8b6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c8ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c8be:	431a      	orrs	r2, r3
 801c8c0:	9b03      	ldr	r3, [sp, #12]
 801c8c2:	801a      	strh	r2, [r3, #0]
 801c8c4:	b005      	add	sp, #20
 801c8c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8ca:	f04f 0c00 	mov.w	ip, #0
 801c8ce:	4664      	mov	r4, ip
 801c8d0:	e6e5      	b.n	801c69e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801c8d2:	2300      	movs	r3, #0
 801c8d4:	469c      	mov	ip, r3
 801c8d6:	461a      	mov	r2, r3
 801c8d8:	461c      	mov	r4, r3
 801c8da:	e707      	b.n	801c6ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c8dc:	2300      	movs	r3, #0
 801c8de:	461a      	mov	r2, r3
 801c8e0:	e704      	b.n	801c6ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c8e2:	460b      	mov	r3, r1
 801c8e4:	460a      	mov	r2, r1
 801c8e6:	e701      	b.n	801c6ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c8e8:	2500      	movs	r5, #0
 801c8ea:	46ab      	mov	fp, r5
 801c8ec:	e72f      	b.n	801c74e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801c8ee:	2700      	movs	r7, #0
 801c8f0:	463d      	mov	r5, r7
 801c8f2:	4638      	mov	r0, r7
 801c8f4:	46bb      	mov	fp, r7
 801c8f6:	e754      	b.n	801c7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c8f8:	4677      	mov	r7, lr
 801c8fa:	4675      	mov	r5, lr
 801c8fc:	4670      	mov	r0, lr
 801c8fe:	46f3      	mov	fp, lr
 801c900:	e74f      	b.n	801c7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c902:	2700      	movs	r7, #0
 801c904:	4638      	mov	r0, r7
 801c906:	e74c      	b.n	801c7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c908:	460f      	mov	r7, r1
 801c90a:	4608      	mov	r0, r1
 801c90c:	e749      	b.n	801c7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801c910 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c914:	b093      	sub	sp, #76	; 0x4c
 801c916:	9210      	str	r2, [sp, #64]	; 0x40
 801c918:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c91a:	910e      	str	r1, [sp, #56]	; 0x38
 801c91c:	9306      	str	r3, [sp, #24]
 801c91e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801c922:	9011      	str	r0, [sp, #68]	; 0x44
 801c924:	6850      	ldr	r0, [r2, #4]
 801c926:	6812      	ldr	r2, [r2, #0]
 801c928:	fb00 1303 	mla	r3, r0, r3, r1
 801c92c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c930:	9307      	str	r3, [sp, #28]
 801c932:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c934:	681b      	ldr	r3, [r3, #0]
 801c936:	9308      	str	r3, [sp, #32]
 801c938:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c93a:	685b      	ldr	r3, [r3, #4]
 801c93c:	9309      	str	r3, [sp, #36]	; 0x24
 801c93e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c940:	2b00      	cmp	r3, #0
 801c942:	dc03      	bgt.n	801c94c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c944:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c946:	2b00      	cmp	r3, #0
 801c948:	f340 83b4 	ble.w	801d0b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801c94c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c94e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c952:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c956:	1e48      	subs	r0, r1, #1
 801c958:	1e55      	subs	r5, r2, #1
 801c95a:	9b06      	ldr	r3, [sp, #24]
 801c95c:	2b00      	cmp	r3, #0
 801c95e:	f340 8163 	ble.w	801cc28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c962:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801c964:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c966:	1436      	asrs	r6, r6, #16
 801c968:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c96c:	d406      	bmi.n	801c97c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c96e:	4286      	cmp	r6, r0
 801c970:	da04      	bge.n	801c97c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c972:	2b00      	cmp	r3, #0
 801c974:	db02      	blt.n	801c97c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c976:	42ab      	cmp	r3, r5
 801c978:	f2c0 8157 	blt.w	801cc2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801c97c:	3601      	adds	r6, #1
 801c97e:	f100 8144 	bmi.w	801cc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c982:	42b1      	cmp	r1, r6
 801c984:	f2c0 8141 	blt.w	801cc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c988:	3301      	adds	r3, #1
 801c98a:	f100 813e 	bmi.w	801cc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c98e:	429a      	cmp	r2, r3
 801c990:	f2c0 813b 	blt.w	801cc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c994:	9b06      	ldr	r3, [sp, #24]
 801c996:	9f07      	ldr	r7, [sp, #28]
 801c998:	930f      	str	r3, [sp, #60]	; 0x3c
 801c99a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c99e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c9a0:	2b00      	cmp	r3, #0
 801c9a2:	f340 8164 	ble.w	801cc6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801c9a6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c9a8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801c9aa:	1418      	asrs	r0, r3, #16
 801c9ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c9ae:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c9b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c9b4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c9b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c9ba:	142d      	asrs	r5, r5, #16
 801c9bc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c9c0:	f100 81ee 	bmi.w	801cda0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c9c4:	f102 3eff 	add.w	lr, r2, #4294967295
 801c9c8:	4575      	cmp	r5, lr
 801c9ca:	f280 81e9 	bge.w	801cda0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c9ce:	2800      	cmp	r0, #0
 801c9d0:	f2c0 81e6 	blt.w	801cda0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c9d4:	f103 3eff 	add.w	lr, r3, #4294967295
 801c9d8:	4570      	cmp	r0, lr
 801c9da:	f280 81e1 	bge.w	801cda0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c9de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c9e0:	b212      	sxth	r2, r2
 801c9e2:	fb00 5002 	mla	r0, r0, r2, r5
 801c9e6:	fa1f fe81 	uxth.w	lr, r1
 801c9ea:	eb03 0a00 	add.w	sl, r3, r0
 801c9ee:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c9f2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c9f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c9fa:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c9fe:	b29b      	uxth	r3, r3
 801ca00:	f1bc 0f00 	cmp.w	ip, #0
 801ca04:	f000 8179 	beq.w	801ccfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801ca08:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ca0c:	940a      	str	r4, [sp, #40]	; 0x28
 801ca0e:	eb0a 0b02 	add.w	fp, sl, r2
 801ca12:	fa1f fa8c 	uxth.w	sl, ip
 801ca16:	fb0a fe0e 	mul.w	lr, sl, lr
 801ca1a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ca1e:	fa1f fa8a 	uxth.w	sl, sl
 801ca22:	eba5 050e 	sub.w	r5, r5, lr
 801ca26:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ca2a:	940b      	str	r4, [sp, #44]	; 0x2c
 801ca2c:	eba3 030a 	sub.w	r3, r3, sl
 801ca30:	b2ad      	uxth	r5, r5
 801ca32:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ca34:	b29b      	uxth	r3, r3
 801ca36:	fb08 f505 	mul.w	r5, r8, r5
 801ca3a:	fb09 5303 	mla	r3, r9, r3, r5
 801ca3e:	fb0a 3304 	mla	r3, sl, r4, r3
 801ca42:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ca44:	fb0e 3304 	mla	r3, lr, r4, r3
 801ca48:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ca4c:	2b00      	cmp	r3, #0
 801ca4e:	f000 80cf 	beq.w	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ca52:	9c08      	ldr	r4, [sp, #32]
 801ca54:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ca58:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ca5c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ca60:	f000 8150 	beq.w	801cd04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801ca64:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ca68:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ca6c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ca70:	fb09 f000 	mul.w	r0, r9, r0
 801ca74:	fb0a fe0e 	mul.w	lr, sl, lr
 801ca78:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801ca7c:	f100 0b20 	add.w	fp, r0, #32
 801ca80:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ca84:	44ce      	add	lr, r9
 801ca86:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ca8a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ca8e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ca92:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ca96:	ea4e 0909 	orr.w	r9, lr, r9
 801ca9a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ca9e:	8868      	ldrh	r0, [r5, #2]
 801caa0:	d019      	beq.n	801cad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801caa2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801caa6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801caaa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801caae:	fb08 f800 	mul.w	r8, r8, r0
 801cab2:	fb0a fe0e 	mul.w	lr, sl, lr
 801cab6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801caba:	f108 0b20 	add.w	fp, r8, #32
 801cabe:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cac2:	4486      	add	lr, r0
 801cac4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cac8:	0a00      	lsrs	r0, r0, #8
 801caca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cace:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cad2:	ea4e 0000 	orr.w	r0, lr, r0
 801cad6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cada:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cade:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cae2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cae6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801caea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801caee:	ea4e 0909 	orr.w	r9, lr, r9
 801caf2:	ea4a 0000 	orr.w	r0, sl, r0
 801caf6:	f1bc 0f00 	cmp.w	ip, #0
 801cafa:	f000 8105 	beq.w	801cd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cafe:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cb02:	3a01      	subs	r2, #1
 801cb04:	0052      	lsls	r2, r2, #1
 801cb06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cb08:	3202      	adds	r2, #2
 801cb0a:	2cff      	cmp	r4, #255	; 0xff
 801cb0c:	eb05 0e02 	add.w	lr, r5, r2
 801cb10:	5aaa      	ldrh	r2, [r5, r2]
 801cb12:	d018      	beq.n	801cb46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801cb14:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801cb18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cb1c:	fb04 fa02 	mul.w	sl, r4, r2
 801cb20:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cb24:	fb08 f805 	mul.w	r8, r8, r5
 801cb28:	f10a 0520 	add.w	r5, sl, #32
 801cb2c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cb30:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cb34:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cb38:	4442      	add	r2, r8
 801cb3a:	0a2d      	lsrs	r5, r5, #8
 801cb3c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cb40:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb44:	432a      	orrs	r2, r5
 801cb46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cb48:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cb4c:	2cff      	cmp	r4, #255	; 0xff
 801cb4e:	d01a      	beq.n	801cb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cb50:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cb54:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb58:	fb04 fa05 	mul.w	sl, r4, r5
 801cb5c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cb60:	fb08 f80e 	mul.w	r8, r8, lr
 801cb64:	f10a 0e20 	add.w	lr, sl, #32
 801cb68:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cb6c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cb70:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cb74:	4445      	add	r5, r8
 801cb76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cb7a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cb7e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cb82:	ea45 050e 	orr.w	r5, r5, lr
 801cb86:	fb1c fe01 	smulbb	lr, ip, r1
 801cb8a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cb8e:	f1cc 0810 	rsb	r8, ip, #16
 801cb92:	eba8 0801 	sub.w	r8, r8, r1
 801cb96:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cb9a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801cb9e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801cba2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801cba6:	4341      	muls	r1, r0
 801cba8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cbac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cbb0:	ea4a 0202 	orr.w	r2, sl, r2
 801cbb4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cbb8:	fb09 1108 	mla	r1, r9, r8, r1
 801cbbc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cbc0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cbc4:	fb0c 1102 	mla	r1, ip, r2, r1
 801cbc8:	ea4b 0505 	orr.w	r5, fp, r5
 801cbcc:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cbd0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cbd4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cbd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cbdc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cbe0:	ea42 0e0e 	orr.w	lr, r2, lr
 801cbe4:	fa1f f28e 	uxth.w	r2, lr
 801cbe8:	2bff      	cmp	r3, #255	; 0xff
 801cbea:	f040 80a1 	bne.w	801cd30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801cbee:	803a      	strh	r2, [r7, #0]
 801cbf0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cbf2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801cbf4:	4413      	add	r3, r2
 801cbf6:	931d      	str	r3, [sp, #116]	; 0x74
 801cbf8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801cbfa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cbfc:	441a      	add	r2, r3
 801cbfe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cc00:	921e      	str	r2, [sp, #120]	; 0x78
 801cc02:	3b01      	subs	r3, #1
 801cc04:	3702      	adds	r7, #2
 801cc06:	930f      	str	r3, [sp, #60]	; 0x3c
 801cc08:	e6c9      	b.n	801c99e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cc0a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cc0c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801cc0e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801cc10:	4433      	add	r3, r6
 801cc12:	931d      	str	r3, [sp, #116]	; 0x74
 801cc14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cc16:	441c      	add	r4, r3
 801cc18:	9b06      	ldr	r3, [sp, #24]
 801cc1a:	941e      	str	r4, [sp, #120]	; 0x78
 801cc1c:	3b01      	subs	r3, #1
 801cc1e:	9306      	str	r3, [sp, #24]
 801cc20:	9b07      	ldr	r3, [sp, #28]
 801cc22:	3302      	adds	r3, #2
 801cc24:	9307      	str	r3, [sp, #28]
 801cc26:	e698      	b.n	801c95a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cc28:	d028      	beq.n	801cc7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc2a:	9b06      	ldr	r3, [sp, #24]
 801cc2c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cc2e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cc30:	3b01      	subs	r3, #1
 801cc32:	fb00 5003 	mla	r0, r0, r3, r5
 801cc36:	1400      	asrs	r0, r0, #16
 801cc38:	f53f aeac 	bmi.w	801c994 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc3c:	3901      	subs	r1, #1
 801cc3e:	4288      	cmp	r0, r1
 801cc40:	f6bf aea8 	bge.w	801c994 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc44:	9920      	ldr	r1, [sp, #128]	; 0x80
 801cc46:	981e      	ldr	r0, [sp, #120]	; 0x78
 801cc48:	fb01 0303 	mla	r3, r1, r3, r0
 801cc4c:	141b      	asrs	r3, r3, #16
 801cc4e:	f53f aea1 	bmi.w	801c994 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc52:	3a01      	subs	r2, #1
 801cc54:	4293      	cmp	r3, r2
 801cc56:	f6bf ae9d 	bge.w	801c994 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc5a:	9b06      	ldr	r3, [sp, #24]
 801cc5c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801cc60:	930f      	str	r3, [sp, #60]	; 0x3c
 801cc62:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cc66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cc68:	2b00      	cmp	r3, #0
 801cc6a:	f300 80b6 	bgt.w	801cdda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801cc6e:	9b06      	ldr	r3, [sp, #24]
 801cc70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cc74:	9b07      	ldr	r3, [sp, #28]
 801cc76:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cc7a:	9307      	str	r3, [sp, #28]
 801cc7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cc7e:	2b00      	cmp	r3, #0
 801cc80:	f340 8218 	ble.w	801d0b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cc84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cc88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cc8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cc90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cc92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cc96:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cc9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cc9e:	eef0 6a62 	vmov.f32	s13, s5
 801cca2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cca6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccaa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccae:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801ccb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ccb6:	eef0 6a43 	vmov.f32	s13, s6
 801ccba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ccbe:	ee12 2a90 	vmov	r2, s5
 801ccc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ccc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccca:	ee13 2a10 	vmov	r2, s6
 801ccce:	931f      	str	r3, [sp, #124]	; 0x7c
 801ccd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ccd2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccd6:	9320      	str	r3, [sp, #128]	; 0x80
 801ccd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ccda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ccdc:	3b01      	subs	r3, #1
 801ccde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cce2:	930e      	str	r3, [sp, #56]	; 0x38
 801cce4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cce6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801ccea:	bf08      	it	eq
 801ccec:	4613      	moveq	r3, r2
 801ccee:	9306      	str	r3, [sp, #24]
 801ccf0:	eeb0 3a67 	vmov.f32	s6, s15
 801ccf4:	eef0 2a47 	vmov.f32	s5, s14
 801ccf8:	e621      	b.n	801c93e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801ccfa:	fb08 f505 	mul.w	r5, r8, r5
 801ccfe:	fb09 5303 	mla	r3, r9, r3, r5
 801cd02:	e6a1      	b.n	801ca48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801cd04:	4681      	mov	r9, r0
 801cd06:	e6c8      	b.n	801ca9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801cd08:	f1c1 0210 	rsb	r2, r1, #16
 801cd0c:	4341      	muls	r1, r0
 801cd0e:	fb09 1902 	mla	r9, r9, r2, r1
 801cd12:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cd16:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cd1a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cd1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd22:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cd26:	ea42 0909 	orr.w	r9, r2, r9
 801cd2a:	fa1f f289 	uxth.w	r2, r9
 801cd2e:	e75b      	b.n	801cbe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cd30:	f8b7 c000 	ldrh.w	ip, [r7]
 801cd34:	43db      	mvns	r3, r3
 801cd36:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cd3a:	fa5f fe83 	uxtb.w	lr, r3
 801cd3e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cd42:	fb00 f00e 	mul.w	r0, r0, lr
 801cd46:	1c41      	adds	r1, r0, #1
 801cd48:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cd4c:	1211      	asrs	r1, r2, #8
 801cd4e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cd52:	f021 0107 	bic.w	r1, r1, #7
 801cd56:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cd5a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cd5e:	48d7      	ldr	r0, [pc, #860]	; (801d0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cd60:	fb05 f50e 	mul.w	r5, r5, lr
 801cd64:	b2c9      	uxtb	r1, r1
 801cd66:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cd6a:	1c69      	adds	r1, r5, #1
 801cd6c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cd70:	10d1      	asrs	r1, r2, #3
 801cd72:	f021 0103 	bic.w	r1, r1, #3
 801cd76:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801cd7a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cd7e:	b2db      	uxtb	r3, r3
 801cd80:	00c9      	lsls	r1, r1, #3
 801cd82:	fb03 f30e 	mul.w	r3, r3, lr
 801cd86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cd8a:	4301      	orrs	r1, r0
 801cd8c:	1c58      	adds	r0, r3, #1
 801cd8e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cd92:	00d2      	lsls	r2, r2, #3
 801cd94:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cd98:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cd9c:	430a      	orrs	r2, r1
 801cd9e:	e726      	b.n	801cbee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801cda0:	f115 0e01 	adds.w	lr, r5, #1
 801cda4:	f53f af24 	bmi.w	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cda8:	4572      	cmp	r2, lr
 801cdaa:	f6ff af21 	blt.w	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cdae:	f110 0e01 	adds.w	lr, r0, #1
 801cdb2:	f53f af1d 	bmi.w	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cdb6:	4573      	cmp	r3, lr
 801cdb8:	f6ff af1a 	blt.w	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cdbc:	b21b      	sxth	r3, r3
 801cdbe:	b212      	sxth	r2, r2
 801cdc0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801cdc4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801cdc8:	9301      	str	r3, [sp, #4]
 801cdca:	9200      	str	r2, [sp, #0]
 801cdcc:	4639      	mov	r1, r7
 801cdce:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801cdd2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cdd4:	f7ff fc24 	bl	801c620 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801cdd8:	e70a      	b.n	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cdda:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cddc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cde0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cde2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cde6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cde8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cdec:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cdee:	141f      	asrs	r7, r3, #16
 801cdf0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cdf2:	141b      	asrs	r3, r3, #16
 801cdf4:	fb01 3707 	mla	r7, r1, r7, r3
 801cdf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cdfa:	fa1f fc82 	uxth.w	ip, r2
 801cdfe:	eb03 0a07 	add.w	sl, r3, r7
 801ce02:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801ce06:	f813 9007 	ldrb.w	r9, [r3, r7]
 801ce0a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ce0e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801ce12:	b29b      	uxth	r3, r3
 801ce14:	2d00      	cmp	r5, #0
 801ce16:	f000 80fe 	beq.w	801d016 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801ce1a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801ce1e:	940c      	str	r4, [sp, #48]	; 0x30
 801ce20:	eb0a 0b01 	add.w	fp, sl, r1
 801ce24:	fa1f fa85 	uxth.w	sl, r5
 801ce28:	fb0a fc0c 	mul.w	ip, sl, ip
 801ce2c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801ce30:	fa1f fa8a 	uxth.w	sl, sl
 801ce34:	eba0 000c 	sub.w	r0, r0, ip
 801ce38:	eba3 030a 	sub.w	r3, r3, sl
 801ce3c:	b280      	uxth	r0, r0
 801ce3e:	fb08 f000 	mul.w	r0, r8, r0
 801ce42:	b29b      	uxth	r3, r3
 801ce44:	fb09 0303 	mla	r3, r9, r3, r0
 801ce48:	980c      	ldr	r0, [sp, #48]	; 0x30
 801ce4a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ce4e:	940d      	str	r4, [sp, #52]	; 0x34
 801ce50:	fb0a 3300 	mla	r3, sl, r0, r3
 801ce54:	fb0c 3304 	mla	r3, ip, r4, r3
 801ce58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ce5c:	2b00      	cmp	r3, #0
 801ce5e:	f000 80cc 	beq.w	801cffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801ce62:	9808      	ldr	r0, [sp, #32]
 801ce64:	9c08      	ldr	r4, [sp, #32]
 801ce66:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ce6a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801ce6e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801ce72:	f000 80d5 	beq.w	801d020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ce76:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801ce7a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ce7e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ce82:	fb09 f707 	mul.w	r7, r9, r7
 801ce86:	fb0a fc0c 	mul.w	ip, sl, ip
 801ce8a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801ce8e:	f107 0b20 	add.w	fp, r7, #32
 801ce92:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801ce96:	44cc      	add	ip, r9
 801ce98:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801ce9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cea0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cea4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cea8:	ea4c 0909 	orr.w	r9, ip, r9
 801ceac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ceb0:	8847      	ldrh	r7, [r0, #2]
 801ceb2:	d019      	beq.n	801cee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801ceb4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801ceb8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cebc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cec0:	fb08 f807 	mul.w	r8, r8, r7
 801cec4:	fb0a fc0c 	mul.w	ip, sl, ip
 801cec8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cecc:	f108 0b20 	add.w	fp, r8, #32
 801ced0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801ced4:	44bc      	add	ip, r7
 801ced6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801ceda:	0a3f      	lsrs	r7, r7, #8
 801cedc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cee0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cee4:	ea4c 0707 	orr.w	r7, ip, r7
 801cee8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801ceec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801cef0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801cef4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cef8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cefc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801cf00:	ea4c 0909 	orr.w	r9, ip, r9
 801cf04:	ea4a 0707 	orr.w	r7, sl, r7
 801cf08:	2d00      	cmp	r5, #0
 801cf0a:	f000 808b 	beq.w	801d024 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801cf0e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801cf12:	3901      	subs	r1, #1
 801cf14:	0049      	lsls	r1, r1, #1
 801cf16:	3102      	adds	r1, #2
 801cf18:	eb00 0c01 	add.w	ip, r0, r1
 801cf1c:	5a41      	ldrh	r1, [r0, r1]
 801cf1e:	980c      	ldr	r0, [sp, #48]	; 0x30
 801cf20:	28ff      	cmp	r0, #255	; 0xff
 801cf22:	d019      	beq.n	801cf58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801cf24:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801cf26:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801cf2a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cf2e:	fb04 fa01 	mul.w	sl, r4, r1
 801cf32:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cf36:	fb08 f800 	mul.w	r8, r8, r0
 801cf3a:	f10a 0020 	add.w	r0, sl, #32
 801cf3e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801cf42:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801cf46:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cf4a:	4441      	add	r1, r8
 801cf4c:	0a00      	lsrs	r0, r0, #8
 801cf4e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801cf52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf56:	4301      	orrs	r1, r0
 801cf58:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cf5a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801cf5e:	2cff      	cmp	r4, #255	; 0xff
 801cf60:	d01a      	beq.n	801cf98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801cf62:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801cf66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf6a:	fb04 fa00 	mul.w	sl, r4, r0
 801cf6e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cf72:	fb08 f80c 	mul.w	r8, r8, ip
 801cf76:	f10a 0c20 	add.w	ip, sl, #32
 801cf7a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801cf7e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801cf82:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cf86:	4440      	add	r0, r8
 801cf88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cf8c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801cf90:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801cf94:	ea40 000c 	orr.w	r0, r0, ip
 801cf98:	fb15 fc02 	smulbb	ip, r5, r2
 801cf9c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801cfa0:	f1c5 0810 	rsb	r8, r5, #16
 801cfa4:	eba8 0802 	sub.w	r8, r8, r2
 801cfa8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cfac:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801cfb0:	437a      	muls	r2, r7
 801cfb2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cfb6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801cfba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cfbe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cfc2:	fb09 2208 	mla	r2, r9, r8, r2
 801cfc6:	ea4a 0101 	orr.w	r1, sl, r1
 801cfca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801cfce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cfd2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cfd6:	fb05 2201 	mla	r2, r5, r1, r2
 801cfda:	ea4b 0000 	orr.w	r0, fp, r0
 801cfde:	fb0c 2200 	mla	r2, ip, r0, r2
 801cfe2:	0d57      	lsrs	r7, r2, #21
 801cfe4:	0952      	lsrs	r2, r2, #5
 801cfe6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cfea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cfee:	433a      	orrs	r2, r7
 801cff0:	2bff      	cmp	r3, #255	; 0xff
 801cff2:	b292      	uxth	r2, r2
 801cff4:	d127      	bne.n	801d046 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801cff6:	f8ae 2000 	strh.w	r2, [lr]
 801cffa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cffc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801cffe:	4413      	add	r3, r2
 801d000:	931d      	str	r3, [sp, #116]	; 0x74
 801d002:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d004:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d006:	441a      	add	r2, r3
 801d008:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d00a:	921e      	str	r2, [sp, #120]	; 0x78
 801d00c:	3b01      	subs	r3, #1
 801d00e:	f10e 0e02 	add.w	lr, lr, #2
 801d012:	930f      	str	r3, [sp, #60]	; 0x3c
 801d014:	e627      	b.n	801cc66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d016:	fb08 f000 	mul.w	r0, r8, r0
 801d01a:	fb09 0303 	mla	r3, r9, r3, r0
 801d01e:	e71b      	b.n	801ce58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d020:	46b9      	mov	r9, r7
 801d022:	e743      	b.n	801ceac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d024:	f1c2 0110 	rsb	r1, r2, #16
 801d028:	437a      	muls	r2, r7
 801d02a:	fb09 2901 	mla	r9, r9, r1, r2
 801d02e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d032:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d036:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d03a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d03e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d042:	4302      	orrs	r2, r0
 801d044:	e7d4      	b.n	801cff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d046:	f8be 7000 	ldrh.w	r7, [lr]
 801d04a:	4c1c      	ldr	r4, [pc, #112]	; (801d0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d04c:	43db      	mvns	r3, r3
 801d04e:	1238      	asrs	r0, r7, #8
 801d050:	fa5f fc83 	uxtb.w	ip, r3
 801d054:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d058:	10fd      	asrs	r5, r7, #3
 801d05a:	fb00 f00c 	mul.w	r0, r0, ip
 801d05e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d062:	fb05 f10c 	mul.w	r1, r5, ip
 801d066:	1c45      	adds	r5, r0, #1
 801d068:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d06c:	1215      	asrs	r5, r2, #8
 801d06e:	f025 0507 	bic.w	r5, r5, #7
 801d072:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d076:	1c4d      	adds	r5, r1, #1
 801d078:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d07c:	10d1      	asrs	r1, r2, #3
 801d07e:	f021 0103 	bic.w	r1, r1, #3
 801d082:	00fb      	lsls	r3, r7, #3
 801d084:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d088:	b2db      	uxtb	r3, r3
 801d08a:	b2c0      	uxtb	r0, r0
 801d08c:	00c9      	lsls	r1, r1, #3
 801d08e:	fb03 f30c 	mul.w	r3, r3, ip
 801d092:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d096:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d09a:	4308      	orrs	r0, r1
 801d09c:	1c59      	adds	r1, r3, #1
 801d09e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d0a2:	00d2      	lsls	r2, r2, #3
 801d0a4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d0a8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d0ac:	4318      	orrs	r0, r3
 801d0ae:	f8ae 0000 	strh.w	r0, [lr]
 801d0b2:	e7a2      	b.n	801cffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d0b4:	b013      	add	sp, #76	; 0x4c
 801d0b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0ba:	bf00      	nop
 801d0bc:	fffff800 	.word	0xfffff800

0801d0c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d0c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d0c4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d0c8:	fb05 4c03 	mla	ip, r5, r3, r4
 801d0cc:	2d00      	cmp	r5, #0
 801d0ce:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d0d2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d0d6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d0da:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d0de:	8808      	ldrh	r0, [r1, #0]
 801d0e0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d0e4:	f2c0 80a7 	blt.w	801d236 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d0e8:	45aa      	cmp	sl, r5
 801d0ea:	f340 80a4 	ble.w	801d236 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d0ee:	2c00      	cmp	r4, #0
 801d0f0:	f2c0 809f 	blt.w	801d232 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d0f4:	42a3      	cmp	r3, r4
 801d0f6:	f340 809c 	ble.w	801d232 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d0fa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d0fe:	1c62      	adds	r2, r4, #1
 801d100:	f100 809c 	bmi.w	801d23c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d104:	4293      	cmp	r3, r2
 801d106:	f340 8099 	ble.w	801d23c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d10a:	f1b9 0f00 	cmp.w	r9, #0
 801d10e:	f000 8095 	beq.w	801d23c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d112:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d116:	3501      	adds	r5, #1
 801d118:	f100 8094 	bmi.w	801d244 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d11c:	45aa      	cmp	sl, r5
 801d11e:	f340 8091 	ble.w	801d244 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d122:	2f00      	cmp	r7, #0
 801d124:	f000 808e 	beq.w	801d244 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d128:	2c00      	cmp	r4, #0
 801d12a:	f2c0 8089 	blt.w	801d240 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d12e:	42a3      	cmp	r3, r4
 801d130:	f340 8086 	ble.w	801d240 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d134:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d138:	3401      	adds	r4, #1
 801d13a:	f100 8086 	bmi.w	801d24a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d13e:	42a3      	cmp	r3, r4
 801d140:	f340 8083 	ble.w	801d24a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d144:	f1b9 0f00 	cmp.w	r9, #0
 801d148:	d07f      	beq.n	801d24a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d14a:	3301      	adds	r3, #1
 801d14c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d150:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d154:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d158:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d15c:	fb19 fe07 	smulbb	lr, r9, r7
 801d160:	ea44 0808 	orr.w	r8, r4, r8
 801d164:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d168:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d16c:	f1c7 0210 	rsb	r2, r7, #16
 801d170:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d174:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d178:	ea44 0c0c 	orr.w	ip, r4, ip
 801d17c:	eba2 0209 	sub.w	r2, r2, r9
 801d180:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d184:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d188:	fb04 f40c 	mul.w	r4, r4, ip
 801d18c:	fb02 4808 	mla	r8, r2, r8, r4
 801d190:	041a      	lsls	r2, r3, #16
 801d192:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d196:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d19a:	4313      	orrs	r3, r2
 801d19c:	042a      	lsls	r2, r5, #16
 801d19e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d1a2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d1a6:	fb0e 8303 	mla	r3, lr, r3, r8
 801d1aa:	432a      	orrs	r2, r5
 801d1ac:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d1b0:	fb07 3202 	mla	r2, r7, r2, r3
 801d1b4:	0d53      	lsrs	r3, r2, #21
 801d1b6:	0952      	lsrs	r2, r2, #5
 801d1b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d1bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d1c0:	431a      	orrs	r2, r3
 801d1c2:	b293      	uxth	r3, r2
 801d1c4:	b2b4      	uxth	r4, r6
 801d1c6:	1202      	asrs	r2, r0, #8
 801d1c8:	43f6      	mvns	r6, r6
 801d1ca:	b2f6      	uxtb	r6, r6
 801d1cc:	121d      	asrs	r5, r3, #8
 801d1ce:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d1d2:	fb12 f206 	smulbb	r2, r2, r6
 801d1d6:	10c7      	asrs	r7, r0, #3
 801d1d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d1dc:	00c0      	lsls	r0, r0, #3
 801d1de:	fb05 2504 	mla	r5, r5, r4, r2
 801d1e2:	b2c0      	uxtb	r0, r0
 801d1e4:	10da      	asrs	r2, r3, #3
 801d1e6:	00db      	lsls	r3, r3, #3
 801d1e8:	b2db      	uxtb	r3, r3
 801d1ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d1ee:	fb10 f006 	smulbb	r0, r0, r6
 801d1f2:	b2ad      	uxth	r5, r5
 801d1f4:	fb03 0004 	mla	r0, r3, r4, r0
 801d1f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d1fc:	fb17 f706 	smulbb	r7, r7, r6
 801d200:	b280      	uxth	r0, r0
 801d202:	1c6b      	adds	r3, r5, #1
 801d204:	fb02 7204 	mla	r2, r2, r4, r7
 801d208:	b292      	uxth	r2, r2
 801d20a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d20e:	1c43      	adds	r3, r0, #1
 801d210:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d214:	1c50      	adds	r0, r2, #1
 801d216:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d21a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d21e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d222:	0952      	lsrs	r2, r2, #5
 801d224:	432b      	orrs	r3, r5
 801d226:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d22a:	4313      	orrs	r3, r2
 801d22c:	800b      	strh	r3, [r1, #0]
 801d22e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d232:	4680      	mov	r8, r0
 801d234:	e763      	b.n	801d0fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d236:	4684      	mov	ip, r0
 801d238:	4680      	mov	r8, r0
 801d23a:	e76c      	b.n	801d116 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d23c:	4684      	mov	ip, r0
 801d23e:	e76a      	b.n	801d116 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d240:	4605      	mov	r5, r0
 801d242:	e779      	b.n	801d138 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d244:	4603      	mov	r3, r0
 801d246:	4605      	mov	r5, r0
 801d248:	e782      	b.n	801d150 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d24a:	4603      	mov	r3, r0
 801d24c:	e780      	b.n	801d150 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d24e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d24e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d252:	b093      	sub	sp, #76	; 0x4c
 801d254:	461d      	mov	r5, r3
 801d256:	9210      	str	r2, [sp, #64]	; 0x40
 801d258:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d25a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d25e:	920b      	str	r2, [sp, #44]	; 0x2c
 801d260:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d264:	910a      	str	r1, [sp, #40]	; 0x28
 801d266:	6859      	ldr	r1, [r3, #4]
 801d268:	681b      	ldr	r3, [r3, #0]
 801d26a:	9011      	str	r0, [sp, #68]	; 0x44
 801d26c:	fb01 2707 	mla	r7, r1, r7, r2
 801d270:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d274:	9307      	str	r3, [sp, #28]
 801d276:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d278:	681b      	ldr	r3, [r3, #0]
 801d27a:	9309      	str	r3, [sp, #36]	; 0x24
 801d27c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d27e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d282:	43db      	mvns	r3, r3
 801d284:	b2db      	uxtb	r3, r3
 801d286:	9308      	str	r3, [sp, #32]
 801d288:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d28a:	2b00      	cmp	r3, #0
 801d28c:	dc03      	bgt.n	801d296 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d28e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d290:	2b00      	cmp	r3, #0
 801d292:	f340 8203 	ble.w	801d69c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d296:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d298:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d29c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d2a0:	1e48      	subs	r0, r1, #1
 801d2a2:	f102 3cff 	add.w	ip, r2, #4294967295
 801d2a6:	2d00      	cmp	r5, #0
 801d2a8:	f340 80da 	ble.w	801d460 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d2ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d2b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d2b4:	d406      	bmi.n	801d2c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2b6:	4586      	cmp	lr, r0
 801d2b8:	da04      	bge.n	801d2c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2ba:	2b00      	cmp	r3, #0
 801d2bc:	db02      	blt.n	801d2c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2be:	4563      	cmp	r3, ip
 801d2c0:	f2c0 80cf 	blt.w	801d462 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d2c4:	f11e 0e01 	adds.w	lr, lr, #1
 801d2c8:	f100 80c1 	bmi.w	801d44e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d2cc:	4571      	cmp	r1, lr
 801d2ce:	f2c0 80be 	blt.w	801d44e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d2d2:	3301      	adds	r3, #1
 801d2d4:	f100 80bb 	bmi.w	801d44e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d2d8:	429a      	cmp	r2, r3
 801d2da:	f2c0 80b8 	blt.w	801d44e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d2de:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d2e2:	46a9      	mov	r9, r5
 801d2e4:	f1b9 0f00 	cmp.w	r9, #0
 801d2e8:	f340 80d8 	ble.w	801d49c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d2ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d2ee:	1421      	asrs	r1, r4, #16
 801d2f0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d2f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d2f8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d2fc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d300:	f100 8111 	bmi.w	801d526 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d304:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d308:	4551      	cmp	r1, sl
 801d30a:	f280 810c 	bge.w	801d526 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d30e:	2800      	cmp	r0, #0
 801d310:	f2c0 8109 	blt.w	801d526 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d314:	f103 3aff 	add.w	sl, r3, #4294967295
 801d318:	4550      	cmp	r0, sl
 801d31a:	f280 8104 	bge.w	801d526 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d31e:	fa0f f38e 	sxth.w	r3, lr
 801d322:	fb00 1103 	mla	r1, r0, r3, r1
 801d326:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d328:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d32c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d330:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d334:	f1bc 0f00 	cmp.w	ip, #0
 801d338:	d007      	beq.n	801d34a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d33a:	005b      	lsls	r3, r3, #1
 801d33c:	eb0a 0003 	add.w	r0, sl, r3
 801d340:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d344:	930c      	str	r3, [sp, #48]	; 0x30
 801d346:	8843      	ldrh	r3, [r0, #2]
 801d348:	930d      	str	r3, [sp, #52]	; 0x34
 801d34a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d34e:	fb12 f30c 	smulbb	r3, r2, ip
 801d352:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d356:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d35a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d35e:	10db      	asrs	r3, r3, #3
 801d360:	ea40 000e 	orr.w	r0, r0, lr
 801d364:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d368:	f1cc 0e10 	rsb	lr, ip, #16
 801d36c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d370:	ebae 0e02 	sub.w	lr, lr, r2
 801d374:	ea4a 0101 	orr.w	r1, sl, r1
 801d378:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d37c:	4351      	muls	r1, r2
 801d37e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d380:	9f08      	ldr	r7, [sp, #32]
 801d382:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d386:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d38a:	0410      	lsls	r0, r2, #16
 801d38c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d390:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d394:	4310      	orrs	r0, r2
 801d396:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d398:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d39a:	0412      	lsls	r2, r2, #16
 801d39c:	fb03 e000 	mla	r0, r3, r0, lr
 801d3a0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d3a4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d3a8:	ea42 020e 	orr.w	r2, r2, lr
 801d3ac:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d3b0:	fb03 0302 	mla	r3, r3, r2, r0
 801d3b4:	0d5a      	lsrs	r2, r3, #21
 801d3b6:	095b      	lsrs	r3, r3, #5
 801d3b8:	f8b8 0000 	ldrh.w	r0, [r8]
 801d3bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d3c0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d3c4:	4313      	orrs	r3, r2
 801d3c6:	b29b      	uxth	r3, r3
 801d3c8:	1201      	asrs	r1, r0, #8
 801d3ca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d3ce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d3d2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d3d6:	fb11 f107 	smulbb	r1, r1, r7
 801d3da:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d3de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d3e2:	00c0      	lsls	r0, r0, #3
 801d3e4:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d3e8:	b2c0      	uxtb	r0, r0
 801d3ea:	10d9      	asrs	r1, r3, #3
 801d3ec:	00db      	lsls	r3, r3, #3
 801d3ee:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d3f2:	b2db      	uxtb	r3, r3
 801d3f4:	fb10 f007 	smulbb	r0, r0, r7
 801d3f8:	fa1f fc8c 	uxth.w	ip, ip
 801d3fc:	fb03 0302 	mla	r3, r3, r2, r0
 801d400:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d404:	fb1e fe07 	smulbb	lr, lr, r7
 801d408:	fb01 e102 	mla	r1, r1, r2, lr
 801d40c:	b29a      	uxth	r2, r3
 801d40e:	f10c 0301 	add.w	r3, ip, #1
 801d412:	b289      	uxth	r1, r1
 801d414:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d418:	1c53      	adds	r3, r2, #1
 801d41a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d41e:	1c4a      	adds	r2, r1, #1
 801d420:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d424:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d428:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d42c:	0949      	lsrs	r1, r1, #5
 801d42e:	ea43 030c 	orr.w	r3, r3, ip
 801d432:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d436:	430b      	orrs	r3, r1
 801d438:	f8a8 3000 	strh.w	r3, [r8]
 801d43c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d43e:	441c      	add	r4, r3
 801d440:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d442:	f108 0802 	add.w	r8, r8, #2
 801d446:	441e      	add	r6, r3
 801d448:	f109 39ff 	add.w	r9, r9, #4294967295
 801d44c:	e74a      	b.n	801d2e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d44e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d450:	441c      	add	r4, r3
 801d452:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d454:	441e      	add	r6, r3
 801d456:	9b07      	ldr	r3, [sp, #28]
 801d458:	3302      	adds	r3, #2
 801d45a:	3d01      	subs	r5, #1
 801d45c:	9307      	str	r3, [sp, #28]
 801d45e:	e722      	b.n	801d2a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d460:	d022      	beq.n	801d4a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d462:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d464:	1e6b      	subs	r3, r5, #1
 801d466:	fb00 4003 	mla	r0, r0, r3, r4
 801d46a:	1400      	asrs	r0, r0, #16
 801d46c:	f53f af37 	bmi.w	801d2de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d470:	3901      	subs	r1, #1
 801d472:	4288      	cmp	r0, r1
 801d474:	f6bf af33 	bge.w	801d2de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d478:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d47a:	fb01 6303 	mla	r3, r1, r3, r6
 801d47e:	141b      	asrs	r3, r3, #16
 801d480:	f53f af2d 	bmi.w	801d2de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d484:	3a01      	subs	r2, #1
 801d486:	4293      	cmp	r3, r2
 801d488:	f6bf af29 	bge.w	801d2de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d48c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d490:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d494:	46a8      	mov	r8, r5
 801d496:	f1b8 0f00 	cmp.w	r8, #0
 801d49a:	dc5e      	bgt.n	801d55a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d49c:	9b07      	ldr	r3, [sp, #28]
 801d49e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d4a2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d4a6:	9307      	str	r3, [sp, #28]
 801d4a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d4aa:	2b00      	cmp	r3, #0
 801d4ac:	f340 80f6 	ble.w	801d69c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d4b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d4b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d4b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d4bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d4be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d4c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d4c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d4ca:	eef0 6a62 	vmov.f32	s13, s5
 801d4ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d4d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d4d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d4da:	ee16 4a90 	vmov	r4, s13
 801d4de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d4e2:	eef0 6a43 	vmov.f32	s13, s6
 801d4e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d4ea:	ee12 2a90 	vmov	r2, s5
 801d4ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d4f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4f6:	ee13 2a10 	vmov	r2, s6
 801d4fa:	931f      	str	r3, [sp, #124]	; 0x7c
 801d4fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d4fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801d502:	9320      	str	r3, [sp, #128]	; 0x80
 801d504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d506:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d508:	3b01      	subs	r3, #1
 801d50a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d50e:	930a      	str	r3, [sp, #40]	; 0x28
 801d510:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d512:	ee16 6a90 	vmov	r6, s13
 801d516:	bf14      	ite	ne
 801d518:	461d      	movne	r5, r3
 801d51a:	4615      	moveq	r5, r2
 801d51c:	eeb0 3a67 	vmov.f32	s6, s15
 801d520:	eef0 2a47 	vmov.f32	s5, s14
 801d524:	e6b0      	b.n	801d288 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d526:	f111 0a01 	adds.w	sl, r1, #1
 801d52a:	d487      	bmi.n	801d43c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d52c:	45d6      	cmp	lr, sl
 801d52e:	db85      	blt.n	801d43c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d530:	f110 0a01 	adds.w	sl, r0, #1
 801d534:	d482      	bmi.n	801d43c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d536:	4553      	cmp	r3, sl
 801d538:	db80      	blt.n	801d43c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d53a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d53c:	9101      	str	r1, [sp, #4]
 801d53e:	b21b      	sxth	r3, r3
 801d540:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d544:	9300      	str	r3, [sp, #0]
 801d546:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d54a:	fa0f f38e 	sxth.w	r3, lr
 801d54e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d550:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d552:	4641      	mov	r1, r8
 801d554:	f7ff fdb4 	bl	801d0c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d558:	e770      	b.n	801d43c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d55a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d55c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d55e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d562:	1430      	asrs	r0, r6, #16
 801d564:	1423      	asrs	r3, r4, #16
 801d566:	fb01 3000 	mla	r0, r1, r0, r3
 801d56a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d56c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d570:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d574:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d578:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d57c:	8858      	ldrh	r0, [r3, #2]
 801d57e:	f1be 0f00 	cmp.w	lr, #0
 801d582:	d00b      	beq.n	801d59c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d584:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d588:	3901      	subs	r1, #1
 801d58a:	0049      	lsls	r1, r1, #1
 801d58c:	3102      	adds	r1, #2
 801d58e:	eb03 0b01 	add.w	fp, r3, r1
 801d592:	5a5b      	ldrh	r3, [r3, r1]
 801d594:	930e      	str	r3, [sp, #56]	; 0x38
 801d596:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d59a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d59c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d5a0:	fb12 f30e 	smulbb	r3, r2, lr
 801d5a4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d5a8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d5ac:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d5b0:	10db      	asrs	r3, r3, #3
 801d5b2:	ea41 010c 	orr.w	r1, r1, ip
 801d5b6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d5ba:	f1ce 0c10 	rsb	ip, lr, #16
 801d5be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d5c2:	ebac 0c02 	sub.w	ip, ip, r2
 801d5c6:	ea4b 0000 	orr.w	r0, fp, r0
 801d5ca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d5ce:	4350      	muls	r0, r2
 801d5d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d5d2:	9f08      	ldr	r7, [sp, #32]
 801d5d4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d5d8:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d5dc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d5e0:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d5e4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d5e6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d5e8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d5ec:	0412      	lsls	r2, r2, #16
 801d5ee:	ea4b 0101 	orr.w	r1, fp, r1
 801d5f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d5f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d5fa:	fb03 c101 	mla	r1, r3, r1, ip
 801d5fe:	4302      	orrs	r2, r0
 801d600:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d604:	fb03 1202 	mla	r2, r3, r2, r1
 801d608:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d60c:	0952      	lsrs	r2, r2, #5
 801d60e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d612:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d616:	f8b9 2000 	ldrh.w	r2, [r9]
 801d61a:	ea4b 0303 	orr.w	r3, fp, r3
 801d61e:	b29b      	uxth	r3, r3
 801d620:	1211      	asrs	r1, r2, #8
 801d622:	1218      	asrs	r0, r3, #8
 801d624:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d628:	fb11 f107 	smulbb	r1, r1, r7
 801d62c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d630:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d634:	00d2      	lsls	r2, r2, #3
 801d636:	fb00 100a 	mla	r0, r0, sl, r1
 801d63a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d63e:	10d9      	asrs	r1, r3, #3
 801d640:	b2d2      	uxtb	r2, r2
 801d642:	00db      	lsls	r3, r3, #3
 801d644:	fb1c fc07 	smulbb	ip, ip, r7
 801d648:	fb12 f207 	smulbb	r2, r2, r7
 801d64c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d650:	b2db      	uxtb	r3, r3
 801d652:	b280      	uxth	r0, r0
 801d654:	fb01 c10a 	mla	r1, r1, sl, ip
 801d658:	fb03 230a 	mla	r3, r3, sl, r2
 801d65c:	b29b      	uxth	r3, r3
 801d65e:	b289      	uxth	r1, r1
 801d660:	1c42      	adds	r2, r0, #1
 801d662:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d666:	f101 0c01 	add.w	ip, r1, #1
 801d66a:	1c5a      	adds	r2, r3, #1
 801d66c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d670:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d674:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d676:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d67a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d67e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d682:	4310      	orrs	r0, r2
 801d684:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d688:	441c      	add	r4, r3
 801d68a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d68c:	ea40 000c 	orr.w	r0, r0, ip
 801d690:	f829 0b02 	strh.w	r0, [r9], #2
 801d694:	441e      	add	r6, r3
 801d696:	f108 38ff 	add.w	r8, r8, #4294967295
 801d69a:	e6fc      	b.n	801d496 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d69c:	b013      	add	sp, #76	; 0x4c
 801d69e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d6a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d6a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d6a6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d6aa:	fb0e 4703 	mla	r7, lr, r3, r4
 801d6ae:	f1be 0f00 	cmp.w	lr, #0
 801d6b2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d6b6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d6ba:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d6be:	8808      	ldrh	r0, [r1, #0]
 801d6c0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d6c4:	db60      	blt.n	801d788 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d6c6:	45f1      	cmp	r9, lr
 801d6c8:	dd5e      	ble.n	801d788 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d6ca:	2c00      	cmp	r4, #0
 801d6cc:	db5a      	blt.n	801d784 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d6ce:	42a3      	cmp	r3, r4
 801d6d0:	dd58      	ble.n	801d784 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d6d2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d6d6:	1c62      	adds	r2, r4, #1
 801d6d8:	d459      	bmi.n	801d78e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d6da:	4293      	cmp	r3, r2
 801d6dc:	dd57      	ble.n	801d78e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d6de:	2d00      	cmp	r5, #0
 801d6e0:	d055      	beq.n	801d78e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d6e2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d6e6:	f11e 0e01 	adds.w	lr, lr, #1
 801d6ea:	d454      	bmi.n	801d796 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d6ec:	45f1      	cmp	r9, lr
 801d6ee:	dd52      	ble.n	801d796 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d6f0:	2e00      	cmp	r6, #0
 801d6f2:	d050      	beq.n	801d796 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d6f4:	2c00      	cmp	r4, #0
 801d6f6:	db4c      	blt.n	801d792 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d6f8:	42a3      	cmp	r3, r4
 801d6fa:	dd4a      	ble.n	801d792 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d6fc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d700:	3401      	adds	r4, #1
 801d702:	d405      	bmi.n	801d710 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d704:	42a3      	cmp	r3, r4
 801d706:	dd03      	ble.n	801d710 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d708:	b115      	cbz	r5, 801d710 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d70a:	3301      	adds	r3, #1
 801d70c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d710:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d714:	fb15 f406 	smulbb	r4, r5, r6
 801d718:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d71c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d720:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d724:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d728:	ea43 0c0c 	orr.w	ip, r3, ip
 801d72c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d730:	f1c6 0310 	rsb	r3, r6, #16
 801d734:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d738:	1b5b      	subs	r3, r3, r5
 801d73a:	ea4e 0707 	orr.w	r7, lr, r7
 801d73e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d742:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d746:	437d      	muls	r5, r7
 801d748:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d74c:	0403      	lsls	r3, r0, #16
 801d74e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d752:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d756:	4318      	orrs	r0, r3
 801d758:	0413      	lsls	r3, r2, #16
 801d75a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d75e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d762:	4313      	orrs	r3, r2
 801d764:	fb04 c000 	mla	r0, r4, r0, ip
 801d768:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d76c:	fb06 0003 	mla	r0, r6, r3, r0
 801d770:	0d43      	lsrs	r3, r0, #21
 801d772:	0940      	lsrs	r0, r0, #5
 801d774:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d778:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d77c:	4318      	orrs	r0, r3
 801d77e:	8008      	strh	r0, [r1, #0]
 801d780:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d784:	4684      	mov	ip, r0
 801d786:	e7a6      	b.n	801d6d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d788:	4607      	mov	r7, r0
 801d78a:	4684      	mov	ip, r0
 801d78c:	e7ab      	b.n	801d6e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d78e:	4607      	mov	r7, r0
 801d790:	e7a9      	b.n	801d6e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d792:	4602      	mov	r2, r0
 801d794:	e7b4      	b.n	801d700 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d796:	4602      	mov	r2, r0
 801d798:	e7ba      	b.n	801d710 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d79a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d79a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d79e:	b08f      	sub	sp, #60	; 0x3c
 801d7a0:	461d      	mov	r5, r3
 801d7a2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d7a4:	920c      	str	r2, [sp, #48]	; 0x30
 801d7a6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801d7aa:	9107      	str	r1, [sp, #28]
 801d7ac:	6859      	ldr	r1, [r3, #4]
 801d7ae:	681b      	ldr	r3, [r3, #0]
 801d7b0:	900d      	str	r0, [sp, #52]	; 0x34
 801d7b2:	fb01 2707 	mla	r7, r1, r7, r2
 801d7b6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d7ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d7bc:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801d7c0:	f8d3 8000 	ldr.w	r8, [r3]
 801d7c4:	9b07      	ldr	r3, [sp, #28]
 801d7c6:	2b00      	cmp	r3, #0
 801d7c8:	dc03      	bgt.n	801d7d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d7ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d7cc:	2b00      	cmp	r3, #0
 801d7ce:	f340 8181 	ble.w	801dad4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d7d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d7d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d7d8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d7dc:	1e48      	subs	r0, r1, #1
 801d7de:	f102 3cff 	add.w	ip, r2, #4294967295
 801d7e2:	2d00      	cmp	r5, #0
 801d7e4:	f340 809b 	ble.w	801d91e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801d7e8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d7ec:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d7f0:	d406      	bmi.n	801d800 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d7f2:	4586      	cmp	lr, r0
 801d7f4:	da04      	bge.n	801d800 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d7f6:	2b00      	cmp	r3, #0
 801d7f8:	db02      	blt.n	801d800 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d7fa:	4563      	cmp	r3, ip
 801d7fc:	f2c0 8090 	blt.w	801d920 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d800:	f11e 0e01 	adds.w	lr, lr, #1
 801d804:	f100 8084 	bmi.w	801d910 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d808:	4571      	cmp	r1, lr
 801d80a:	f2c0 8081 	blt.w	801d910 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d80e:	3301      	adds	r3, #1
 801d810:	d47e      	bmi.n	801d910 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d812:	429a      	cmp	r2, r3
 801d814:	db7c      	blt.n	801d910 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d816:	46aa      	mov	sl, r5
 801d818:	46b9      	mov	r9, r7
 801d81a:	f1ba 0f00 	cmp.w	sl, #0
 801d81e:	f340 8099 	ble.w	801d954 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801d822:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d824:	1421      	asrs	r1, r4, #16
 801d826:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d82a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d82e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d832:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d836:	f100 80d0 	bmi.w	801d9da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d83a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d83e:	4559      	cmp	r1, fp
 801d840:	f280 80cb 	bge.w	801d9da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d844:	2800      	cmp	r0, #0
 801d846:	f2c0 80c8 	blt.w	801d9da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d84a:	f103 3bff 	add.w	fp, r3, #4294967295
 801d84e:	4558      	cmp	r0, fp
 801d850:	f280 80c3 	bge.w	801d9da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d854:	fa0f fe8e 	sxth.w	lr, lr
 801d858:	fb00 110e 	mla	r1, r0, lr, r1
 801d85c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d860:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801d864:	8841      	ldrh	r1, [r0, #2]
 801d866:	f1bc 0f00 	cmp.w	ip, #0
 801d86a:	d00b      	beq.n	801d884 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801d86c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801d870:	3b01      	subs	r3, #1
 801d872:	005b      	lsls	r3, r3, #1
 801d874:	3302      	adds	r3, #2
 801d876:	eb00 0e03 	add.w	lr, r0, r3
 801d87a:	5ac3      	ldrh	r3, [r0, r3]
 801d87c:	9308      	str	r3, [sp, #32]
 801d87e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801d882:	9309      	str	r3, [sp, #36]	; 0x24
 801d884:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801d888:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d88c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d890:	ea40 000b 	orr.w	r0, r0, fp
 801d894:	fb12 f30c 	smulbb	r3, r2, ip
 801d898:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d89c:	10db      	asrs	r3, r3, #3
 801d89e:	f1cc 0e10 	rsb	lr, ip, #16
 801d8a2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d8a6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d8aa:	ebae 0e02 	sub.w	lr, lr, r2
 801d8ae:	ea4b 0101 	orr.w	r1, fp, r1
 801d8b2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d8b6:	4351      	muls	r1, r2
 801d8b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d8ba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d8be:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d8c2:	0410      	lsls	r0, r2, #16
 801d8c4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d8c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d8cc:	4310      	orrs	r0, r2
 801d8ce:	9a08      	ldr	r2, [sp, #32]
 801d8d0:	9908      	ldr	r1, [sp, #32]
 801d8d2:	0412      	lsls	r2, r2, #16
 801d8d4:	fb03 e000 	mla	r0, r3, r0, lr
 801d8d8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d8dc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d8e0:	ea42 020e 	orr.w	r2, r2, lr
 801d8e4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d8e8:	fb03 0302 	mla	r3, r3, r2, r0
 801d8ec:	0d5a      	lsrs	r2, r3, #21
 801d8ee:	095b      	lsrs	r3, r3, #5
 801d8f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d8f4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d8f8:	4313      	orrs	r3, r2
 801d8fa:	f8a9 3000 	strh.w	r3, [r9]
 801d8fe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d900:	441c      	add	r4, r3
 801d902:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d904:	f109 0902 	add.w	r9, r9, #2
 801d908:	441e      	add	r6, r3
 801d90a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d90e:	e784      	b.n	801d81a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d910:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d912:	441c      	add	r4, r3
 801d914:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d916:	3d01      	subs	r5, #1
 801d918:	441e      	add	r6, r3
 801d91a:	3702      	adds	r7, #2
 801d91c:	e761      	b.n	801d7e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d91e:	d01d      	beq.n	801d95c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d920:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d922:	1e6b      	subs	r3, r5, #1
 801d924:	fb00 4003 	mla	r0, r0, r3, r4
 801d928:	1400      	asrs	r0, r0, #16
 801d92a:	f53f af74 	bmi.w	801d816 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d92e:	3901      	subs	r1, #1
 801d930:	4288      	cmp	r0, r1
 801d932:	f6bf af70 	bge.w	801d816 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d936:	991c      	ldr	r1, [sp, #112]	; 0x70
 801d938:	fb01 6303 	mla	r3, r1, r3, r6
 801d93c:	141b      	asrs	r3, r3, #16
 801d93e:	f53f af6a 	bmi.w	801d816 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d942:	3a01      	subs	r2, #1
 801d944:	4293      	cmp	r3, r2
 801d946:	f6bf af66 	bge.w	801d816 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d94a:	46a9      	mov	r9, r5
 801d94c:	46ba      	mov	sl, r7
 801d94e:	f1b9 0f00 	cmp.w	r9, #0
 801d952:	dc5a      	bgt.n	801da0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801d954:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d958:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801d95c:	9b07      	ldr	r3, [sp, #28]
 801d95e:	2b00      	cmp	r3, #0
 801d960:	f340 80b8 	ble.w	801dad4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d964:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d968:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d96c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d970:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d972:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d976:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d97a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d97e:	eef0 6a62 	vmov.f32	s13, s5
 801d982:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d986:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d98a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d98e:	ee16 4a90 	vmov	r4, s13
 801d992:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d996:	eef0 6a43 	vmov.f32	s13, s6
 801d99a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d99e:	ee12 2a90 	vmov	r2, s5
 801d9a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d9a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9aa:	ee13 2a10 	vmov	r2, s6
 801d9ae:	931b      	str	r3, [sp, #108]	; 0x6c
 801d9b0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d9b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9b6:	931c      	str	r3, [sp, #112]	; 0x70
 801d9b8:	9b07      	ldr	r3, [sp, #28]
 801d9ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d9bc:	3b01      	subs	r3, #1
 801d9be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d9c2:	9307      	str	r3, [sp, #28]
 801d9c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d9c6:	ee16 6a90 	vmov	r6, s13
 801d9ca:	bf14      	ite	ne
 801d9cc:	461d      	movne	r5, r3
 801d9ce:	4615      	moveq	r5, r2
 801d9d0:	eeb0 3a67 	vmov.f32	s6, s15
 801d9d4:	eef0 2a47 	vmov.f32	s5, s14
 801d9d8:	e6f4      	b.n	801d7c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801d9da:	f111 0b01 	adds.w	fp, r1, #1
 801d9de:	d48e      	bmi.n	801d8fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d9e0:	45de      	cmp	lr, fp
 801d9e2:	db8c      	blt.n	801d8fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d9e4:	f110 0b01 	adds.w	fp, r0, #1
 801d9e8:	d489      	bmi.n	801d8fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d9ea:	455b      	cmp	r3, fp
 801d9ec:	db87      	blt.n	801d8fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d9ee:	b21b      	sxth	r3, r3
 801d9f0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801d9f4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801d9f8:	9300      	str	r3, [sp, #0]
 801d9fa:	4642      	mov	r2, r8
 801d9fc:	fa0f f38e 	sxth.w	r3, lr
 801da00:	4649      	mov	r1, r9
 801da02:	980d      	ldr	r0, [sp, #52]	; 0x34
 801da04:	f7ff fe4d 	bl	801d6a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801da08:	e779      	b.n	801d8fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801da0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da0c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801da10:	1420      	asrs	r0, r4, #16
 801da12:	1431      	asrs	r1, r6, #16
 801da14:	fb03 0101 	mla	r1, r3, r1, r0
 801da18:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801da1c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801da20:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801da24:	8841      	ldrh	r1, [r0, #2]
 801da26:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801da2a:	f1be 0f00 	cmp.w	lr, #0
 801da2e:	d00b      	beq.n	801da48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801da30:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801da34:	3b01      	subs	r3, #1
 801da36:	005b      	lsls	r3, r3, #1
 801da38:	3302      	adds	r3, #2
 801da3a:	eb00 0b03 	add.w	fp, r0, r3
 801da3e:	5ac3      	ldrh	r3, [r0, r3]
 801da40:	930a      	str	r3, [sp, #40]	; 0x28
 801da42:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801da46:	930b      	str	r3, [sp, #44]	; 0x2c
 801da48:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801da4c:	fb12 f30e 	smulbb	r3, r2, lr
 801da50:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801da54:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801da58:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801da5c:	10db      	asrs	r3, r3, #3
 801da5e:	ea40 000c 	orr.w	r0, r0, ip
 801da62:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801da66:	f1ce 0c10 	rsb	ip, lr, #16
 801da6a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801da6e:	ebac 0c02 	sub.w	ip, ip, r2
 801da72:	ea4b 0101 	orr.w	r1, fp, r1
 801da76:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801da7a:	4351      	muls	r1, r2
 801da7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801da7e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801da82:	fb0c 1c00 	mla	ip, ip, r0, r1
 801da86:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801da8a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801da8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801da90:	990a      	ldr	r1, [sp, #40]	; 0x28
 801da92:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801da96:	0412      	lsls	r2, r2, #16
 801da98:	ea4b 0000 	orr.w	r0, fp, r0
 801da9c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801daa0:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801daa4:	fb03 c000 	mla	r0, r3, r0, ip
 801daa8:	ea42 0b0b 	orr.w	fp, r2, fp
 801daac:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dab0:	fb03 000b 	mla	r0, r3, fp, r0
 801dab4:	0d43      	lsrs	r3, r0, #21
 801dab6:	0940      	lsrs	r0, r0, #5
 801dab8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dabc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dac0:	4318      	orrs	r0, r3
 801dac2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dac4:	f82a 0b02 	strh.w	r0, [sl], #2
 801dac8:	441c      	add	r4, r3
 801daca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dacc:	f109 39ff 	add.w	r9, r9, #4294967295
 801dad0:	441e      	add	r6, r3
 801dad2:	e73c      	b.n	801d94e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801dad4:	b00f      	add	sp, #60	; 0x3c
 801dad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dada <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801dada:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dade:	b085      	sub	sp, #20
 801dae0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801dae4:	9102      	str	r1, [sp, #8]
 801dae6:	2c00      	cmp	r4, #0
 801dae8:	fb04 7103 	mla	r1, r4, r3, r7
 801daec:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801daf0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801daf4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801daf8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dafc:	f2c0 811b 	blt.w	801dd36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801db00:	45a6      	cmp	lr, r4
 801db02:	f340 8118 	ble.w	801dd36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801db06:	2f00      	cmp	r7, #0
 801db08:	f2c0 8113 	blt.w	801dd32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801db0c:	42bb      	cmp	r3, r7
 801db0e:	f340 8110 	ble.w	801dd32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801db12:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801db16:	1c7a      	adds	r2, r7, #1
 801db18:	f100 8110 	bmi.w	801dd3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801db1c:	4293      	cmp	r3, r2
 801db1e:	f340 810d 	ble.w	801dd3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801db22:	2e00      	cmp	r6, #0
 801db24:	f000 810c 	beq.w	801dd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801db28:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801db2c:	3401      	adds	r4, #1
 801db2e:	f100 810b 	bmi.w	801dd48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801db32:	45a6      	cmp	lr, r4
 801db34:	f340 8108 	ble.w	801dd48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801db38:	2800      	cmp	r0, #0
 801db3a:	f000 8108 	beq.w	801dd4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801db3e:	2f00      	cmp	r7, #0
 801db40:	f2c0 8100 	blt.w	801dd44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801db44:	42bb      	cmp	r3, r7
 801db46:	f340 80fd 	ble.w	801dd44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801db4a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801db4e:	3701      	adds	r7, #1
 801db50:	f100 8100 	bmi.w	801dd54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801db54:	42bb      	cmp	r3, r7
 801db56:	f340 80fd 	ble.w	801dd54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801db5a:	2e00      	cmp	r6, #0
 801db5c:	f000 80fc 	beq.w	801dd58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801db60:	3301      	adds	r3, #1
 801db62:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801db66:	b2b6      	uxth	r6, r6
 801db68:	b280      	uxth	r0, r0
 801db6a:	fb00 fe06 	mul.w	lr, r0, r6
 801db6e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801db72:	0136      	lsls	r6, r6, #4
 801db74:	eba6 070e 	sub.w	r7, r6, lr
 801db78:	b280      	uxth	r0, r0
 801db7a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801db7e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801db82:	b2bf      	uxth	r7, r7
 801db84:	1a1b      	subs	r3, r3, r0
 801db86:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801db8a:	b29b      	uxth	r3, r3
 801db8c:	fb0a f607 	mul.w	r6, sl, r7
 801db90:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801db94:	fb0b 6603 	mla	r6, fp, r3, r6
 801db98:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801db9c:	fb00 6609 	mla	r6, r0, r9, r6
 801dba0:	fb0e 6608 	mla	r6, lr, r8, r6
 801dba4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801dba8:	9600      	str	r6, [sp, #0]
 801dbaa:	2e00      	cmp	r6, #0
 801dbac:	f000 80be 	beq.w	801dd2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801dbb0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dbb4:	fb0b fc0c 	mul.w	ip, fp, ip
 801dbb8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801dbbc:	fb0b f505 	mul.w	r5, fp, r5
 801dbc0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dbc4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801dbc8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dbcc:	44dc      	add	ip, fp
 801dbce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dbd2:	9501      	str	r5, [sp, #4]
 801dbd4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801dbd8:	9503      	str	r5, [sp, #12]
 801dbda:	9d01      	ldr	r5, [sp, #4]
 801dbdc:	9e02      	ldr	r6, [sp, #8]
 801dbde:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801dbe2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dbe6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801dbea:	fb0a fc0c 	mul.w	ip, sl, ip
 801dbee:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dbf2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801dbf6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dbfa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dbfe:	4465      	add	r5, ip
 801dc00:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dc04:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801dc08:	fb09 fc0c 	mul.w	ip, r9, ip
 801dc0c:	fb09 f904 	mul.w	r9, r9, r4
 801dc10:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801dc14:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801dc18:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801dc1c:	fb08 f404 	mul.w	r4, r8, r4
 801dc20:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dc24:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dc28:	fb08 f802 	mul.w	r8, r8, r2
 801dc2c:	fb0a fa01 	mul.w	sl, sl, r1
 801dc30:	0a22      	lsrs	r2, r4, #8
 801dc32:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801dc36:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dc3a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801dc3e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801dc42:	4414      	add	r4, r2
 801dc44:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801dc48:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801dc4c:	0a2d      	lsrs	r5, r5, #8
 801dc4e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801dc52:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dc56:	9a03      	ldr	r2, [sp, #12]
 801dc58:	8836      	ldrh	r6, [r6, #0]
 801dc5a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dc5e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dc62:	437d      	muls	r5, r7
 801dc64:	4461      	add	r1, ip
 801dc66:	0a24      	lsrs	r4, r4, #8
 801dc68:	fb02 5503 	mla	r5, r2, r3, r5
 801dc6c:	0a09      	lsrs	r1, r1, #8
 801dc6e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dc72:	fb04 540e 	mla	r4, r4, lr, r5
 801dc76:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dc7a:	fb01 4100 	mla	r1, r1, r0, r4
 801dc7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dc82:	0a09      	lsrs	r1, r1, #8
 801dc84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dc88:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801dc8c:	fb07 f70a 	mul.w	r7, r7, sl
 801dc90:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801dc94:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801dc98:	fb03 7101 	mla	r1, r3, r1, r7
 801dc9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dca0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801dca4:	fb0e 1e08 	mla	lr, lr, r8, r1
 801dca8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801dcac:	fb00 e101 	mla	r1, r0, r1, lr
 801dcb0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801dcb4:	9a00      	ldr	r2, [sp, #0]
 801dcb6:	b287      	uxth	r7, r0
 801dcb8:	437a      	muls	r2, r7
 801dcba:	0a09      	lsrs	r1, r1, #8
 801dcbc:	1c53      	adds	r3, r2, #1
 801dcbe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dcc2:	4321      	orrs	r1, r4
 801dcc4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dcc8:	1235      	asrs	r5, r6, #8
 801dcca:	0c0a      	lsrs	r2, r1, #16
 801dccc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801dcd0:	b2db      	uxtb	r3, r3
 801dcd2:	fb12 f207 	smulbb	r2, r2, r7
 801dcd6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801dcda:	fb05 2503 	mla	r5, r5, r3, r2
 801dcde:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801dce2:	10f2      	asrs	r2, r6, #3
 801dce4:	b2c8      	uxtb	r0, r1
 801dce6:	00f6      	lsls	r6, r6, #3
 801dce8:	fb14 f407 	smulbb	r4, r4, r7
 801dcec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801dcf0:	b2f6      	uxtb	r6, r6
 801dcf2:	fb10 f007 	smulbb	r0, r0, r7
 801dcf6:	fb02 4203 	mla	r2, r2, r3, r4
 801dcfa:	b2ad      	uxth	r5, r5
 801dcfc:	fb06 0303 	mla	r3, r6, r3, r0
 801dd00:	b299      	uxth	r1, r3
 801dd02:	b294      	uxth	r4, r2
 801dd04:	1c6b      	adds	r3, r5, #1
 801dd06:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dd0a:	1c62      	adds	r2, r4, #1
 801dd0c:	1c4b      	adds	r3, r1, #1
 801dd0e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dd12:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801dd16:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801dd1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dd1e:	0952      	lsrs	r2, r2, #5
 801dd20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dd24:	432b      	orrs	r3, r5
 801dd26:	4313      	orrs	r3, r2
 801dd28:	9a02      	ldr	r2, [sp, #8]
 801dd2a:	8013      	strh	r3, [r2, #0]
 801dd2c:	b005      	add	sp, #20
 801dd2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd32:	2500      	movs	r5, #0
 801dd34:	e6ef      	b.n	801db16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801dd36:	2100      	movs	r1, #0
 801dd38:	460d      	mov	r5, r1
 801dd3a:	e6f7      	b.n	801db2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dd3c:	2100      	movs	r1, #0
 801dd3e:	e6f5      	b.n	801db2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dd40:	4631      	mov	r1, r6
 801dd42:	e6f3      	b.n	801db2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dd44:	2400      	movs	r4, #0
 801dd46:	e702      	b.n	801db4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801dd48:	2200      	movs	r2, #0
 801dd4a:	4614      	mov	r4, r2
 801dd4c:	e70b      	b.n	801db66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dd4e:	4602      	mov	r2, r0
 801dd50:	4604      	mov	r4, r0
 801dd52:	e708      	b.n	801db66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dd54:	2200      	movs	r2, #0
 801dd56:	e706      	b.n	801db66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dd58:	4632      	mov	r2, r6
 801dd5a:	e704      	b.n	801db66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801dd5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd60:	b09d      	sub	sp, #116	; 0x74
 801dd62:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801dd66:	9219      	str	r2, [sp, #100]	; 0x64
 801dd68:	9307      	str	r3, [sp, #28]
 801dd6a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801dd6c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801dd70:	931a      	str	r3, [sp, #104]	; 0x68
 801dd72:	9117      	str	r1, [sp, #92]	; 0x5c
 801dd74:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801dd78:	901b      	str	r0, [sp, #108]	; 0x6c
 801dd7a:	6850      	ldr	r0, [r2, #4]
 801dd7c:	6812      	ldr	r2, [r2, #0]
 801dd7e:	fb00 1303 	mla	r3, r0, r3, r1
 801dd82:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dd86:	930a      	str	r3, [sp, #40]	; 0x28
 801dd88:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dd8a:	681b      	ldr	r3, [r3, #0]
 801dd8c:	9310      	str	r3, [sp, #64]	; 0x40
 801dd8e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801dd92:	930b      	str	r3, [sp, #44]	; 0x2c
 801dd94:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dd96:	2b00      	cmp	r3, #0
 801dd98:	dc03      	bgt.n	801dda2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801dd9a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801dd9c:	2b00      	cmp	r3, #0
 801dd9e:	f340 8375 	ble.w	801e48c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801dda2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dda4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dda8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ddac:	1e48      	subs	r0, r1, #1
 801ddae:	1e57      	subs	r7, r2, #1
 801ddb0:	9b07      	ldr	r3, [sp, #28]
 801ddb2:	2b00      	cmp	r3, #0
 801ddb4:	f340 818e 	ble.w	801e0d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ddb8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ddbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ddc0:	d406      	bmi.n	801ddd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ddc2:	4584      	cmp	ip, r0
 801ddc4:	da04      	bge.n	801ddd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ddc6:	2b00      	cmp	r3, #0
 801ddc8:	db02      	blt.n	801ddd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ddca:	42bb      	cmp	r3, r7
 801ddcc:	f2c0 8183 	blt.w	801e0d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ddd0:	f11c 0c01 	adds.w	ip, ip, #1
 801ddd4:	f100 8173 	bmi.w	801e0be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ddd8:	4561      	cmp	r1, ip
 801ddda:	f2c0 8170 	blt.w	801e0be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ddde:	3301      	adds	r3, #1
 801dde0:	f100 816d 	bmi.w	801e0be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dde4:	429a      	cmp	r2, r3
 801dde6:	f2c0 816a 	blt.w	801e0be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ddea:	9b07      	ldr	r3, [sp, #28]
 801ddec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ddee:	9318      	str	r3, [sp, #96]	; 0x60
 801ddf0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ddf2:	2b00      	cmp	r3, #0
 801ddf4:	f340 818c 	ble.w	801e110 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801ddf8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801ddfa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ddfc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801de00:	689b      	ldr	r3, [r3, #8]
 801de02:	1422      	asrs	r2, r4, #16
 801de04:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801de08:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801de0c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801de10:	f100 81cd 	bmi.w	801e1ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801de14:	f103 38ff 	add.w	r8, r3, #4294967295
 801de18:	4542      	cmp	r2, r8
 801de1a:	f280 81c8 	bge.w	801e1ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801de1e:	f1bc 0f00 	cmp.w	ip, #0
 801de22:	f2c0 81c4 	blt.w	801e1ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801de26:	f10e 38ff 	add.w	r8, lr, #4294967295
 801de2a:	45c4      	cmp	ip, r8
 801de2c:	f280 81bf 	bge.w	801e1ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801de30:	b21b      	sxth	r3, r3
 801de32:	fb0c 2203 	mla	r2, ip, r3, r2
 801de36:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801de38:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801de3c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801de40:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801de44:	2800      	cmp	r0, #0
 801de46:	f000 81a9 	beq.w	801e19c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801de4a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801de4e:	950c      	str	r5, [sp, #48]	; 0x30
 801de50:	0e2d      	lsrs	r5, r5, #24
 801de52:	9513      	str	r5, [sp, #76]	; 0x4c
 801de54:	b181      	cbz	r1, 801de78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801de56:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801de5a:	3b01      	subs	r3, #1
 801de5c:	009b      	lsls	r3, r3, #2
 801de5e:	3304      	adds	r3, #4
 801de60:	eb08 0c03 	add.w	ip, r8, r3
 801de64:	f858 3003 	ldr.w	r3, [r8, r3]
 801de68:	9308      	str	r3, [sp, #32]
 801de6a:	0e1b      	lsrs	r3, r3, #24
 801de6c:	9311      	str	r3, [sp, #68]	; 0x44
 801de6e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801de72:	930d      	str	r3, [sp, #52]	; 0x34
 801de74:	0e1b      	lsrs	r3, r3, #24
 801de76:	9314      	str	r3, [sp, #80]	; 0x50
 801de78:	b280      	uxth	r0, r0
 801de7a:	b289      	uxth	r1, r1
 801de7c:	fb00 f901 	mul.w	r9, r0, r1
 801de80:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801de84:	0100      	lsls	r0, r0, #4
 801de86:	eba0 0809 	sub.w	r8, r0, r9
 801de8a:	b289      	uxth	r1, r1
 801de8c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801de90:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801de92:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801de94:	fa1f f888 	uxth.w	r8, r8
 801de98:	1a5b      	subs	r3, r3, r1
 801de9a:	b29b      	uxth	r3, r3
 801de9c:	fb08 f000 	mul.w	r0, r8, r0
 801dea0:	fb03 000e 	mla	r0, r3, lr, r0
 801dea4:	fb01 0005 	mla	r0, r1, r5, r0
 801dea8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801deaa:	fb09 0005 	mla	r0, r9, r5, r0
 801deae:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801deb2:	2800      	cmp	r0, #0
 801deb4:	f000 80fa 	beq.w	801e0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801deb8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801debc:	d01b      	beq.n	801def6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801debe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801dec2:	fb0e fa0a 	mul.w	sl, lr, sl
 801dec6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801deca:	fb0e fe02 	mul.w	lr, lr, r2
 801dece:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ded2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ded6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801deda:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801dede:	4452      	add	r2, sl
 801dee0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801dee4:	0a12      	lsrs	r2, r2, #8
 801dee6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801deea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801deee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801def2:	ea42 020c 	orr.w	r2, r2, ip
 801def6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801def8:	2dff      	cmp	r5, #255	; 0xff
 801defa:	d021      	beq.n	801df40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801defc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801defe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801df02:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801df04:	fb05 fb0b 	mul.w	fp, r5, fp
 801df08:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801df0a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801df0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801df10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801df14:	fb05 fa0a 	mul.w	sl, r5, sl
 801df18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df1c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801df20:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801df24:	44de      	add	lr, fp
 801df26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801df2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801df3a:	ea4e 050a 	orr.w	r5, lr, sl
 801df3e:	950c      	str	r5, [sp, #48]	; 0x30
 801df40:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801df42:	2dff      	cmp	r5, #255	; 0xff
 801df44:	d021      	beq.n	801df8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801df46:	9d08      	ldr	r5, [sp, #32]
 801df48:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801df4c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801df4e:	fb05 fb0b 	mul.w	fp, r5, fp
 801df52:	9d08      	ldr	r5, [sp, #32]
 801df54:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801df58:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801df5a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801df5e:	fb05 fa0a 	mul.w	sl, r5, sl
 801df62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df66:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801df6a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801df6e:	44de      	add	lr, fp
 801df70:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801df74:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df80:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801df84:	ea4e 050a 	orr.w	r5, lr, sl
 801df88:	9508      	str	r5, [sp, #32]
 801df8a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801df8c:	2dff      	cmp	r5, #255	; 0xff
 801df8e:	d021      	beq.n	801dfd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801df90:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801df92:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801df96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801df98:	fb05 fb0b 	mul.w	fp, r5, fp
 801df9c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801df9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dfa2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dfa4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dfa8:	fb05 fa0a 	mul.w	sl, r5, sl
 801dfac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dfb0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dfb4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dfb8:	44de      	add	lr, fp
 801dfba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dfbe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dfc2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dfc6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dfca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dfce:	ea4e 050a 	orr.w	r5, lr, sl
 801dfd2:	950d      	str	r5, [sp, #52]	; 0x34
 801dfd4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dfd6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dfda:	9d08      	ldr	r5, [sp, #32]
 801dfdc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801dfe0:	fb08 fc0c 	mul.w	ip, r8, ip
 801dfe4:	fb03 cc0e 	mla	ip, r3, lr, ip
 801dfe8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801dfec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dfee:	fb01 cc0e 	mla	ip, r1, lr, ip
 801dff2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801dff6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dff8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801dffc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e000:	fb08 f80e 	mul.w	r8, r8, lr
 801e004:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e008:	fb03 8202 	mla	r2, r3, r2, r8
 801e00c:	9b08      	ldr	r3, [sp, #32]
 801e00e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e010:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e014:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e016:	fb01 220a 	mla	r2, r1, sl, r2
 801e01a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e01e:	fb09 2901 	mla	r9, r9, r1, r2
 801e022:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e024:	883b      	ldrh	r3, [r7, #0]
 801e026:	4342      	muls	r2, r0
 801e028:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e02c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e030:	1c50      	adds	r0, r2, #1
 801e032:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e036:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e03a:	ea4c 0c09 	orr.w	ip, ip, r9
 801e03e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e042:	1219      	asrs	r1, r3, #8
 801e044:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e048:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e04c:	b2c0      	uxtb	r0, r0
 801e04e:	fb12 f205 	smulbb	r2, r2, r5
 801e052:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e056:	fb01 2100 	mla	r1, r1, r0, r2
 801e05a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e05e:	10da      	asrs	r2, r3, #3
 801e060:	fa5f fc8c 	uxtb.w	ip, ip
 801e064:	00db      	lsls	r3, r3, #3
 801e066:	fb1c fc05 	smulbb	ip, ip, r5
 801e06a:	b2db      	uxtb	r3, r3
 801e06c:	b289      	uxth	r1, r1
 801e06e:	fb03 c300 	mla	r3, r3, r0, ip
 801e072:	fa1f fc83 	uxth.w	ip, r3
 801e076:	1c4b      	adds	r3, r1, #1
 801e078:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e07c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e080:	fb1e fe05 	smulbb	lr, lr, r5
 801e084:	f10c 0301 	add.w	r3, ip, #1
 801e088:	fb02 e200 	mla	r2, r2, r0, lr
 801e08c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e090:	b292      	uxth	r2, r2
 801e092:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e096:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e09a:	430b      	orrs	r3, r1
 801e09c:	1c51      	adds	r1, r2, #1
 801e09e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e0a2:	0952      	lsrs	r2, r2, #5
 801e0a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e0a8:	4313      	orrs	r3, r2
 801e0aa:	803b      	strh	r3, [r7, #0]
 801e0ac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e0ae:	441c      	add	r4, r3
 801e0b0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e0b2:	441e      	add	r6, r3
 801e0b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e0b6:	3b01      	subs	r3, #1
 801e0b8:	3702      	adds	r7, #2
 801e0ba:	9318      	str	r3, [sp, #96]	; 0x60
 801e0bc:	e698      	b.n	801ddf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e0be:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e0c0:	441c      	add	r4, r3
 801e0c2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e0c4:	441e      	add	r6, r3
 801e0c6:	9b07      	ldr	r3, [sp, #28]
 801e0c8:	3b01      	subs	r3, #1
 801e0ca:	9307      	str	r3, [sp, #28]
 801e0cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e0ce:	3302      	adds	r3, #2
 801e0d0:	930a      	str	r3, [sp, #40]	; 0x28
 801e0d2:	e66d      	b.n	801ddb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e0d4:	d023      	beq.n	801e11e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e0d6:	9b07      	ldr	r3, [sp, #28]
 801e0d8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e0da:	3b01      	subs	r3, #1
 801e0dc:	fb00 4003 	mla	r0, r0, r3, r4
 801e0e0:	1400      	asrs	r0, r0, #16
 801e0e2:	f53f ae82 	bmi.w	801ddea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e0e6:	3901      	subs	r1, #1
 801e0e8:	4288      	cmp	r0, r1
 801e0ea:	f6bf ae7e 	bge.w	801ddea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e0ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e0f0:	fb01 6303 	mla	r3, r1, r3, r6
 801e0f4:	141b      	asrs	r3, r3, #16
 801e0f6:	f53f ae78 	bmi.w	801ddea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e0fa:	3a01      	subs	r2, #1
 801e0fc:	4293      	cmp	r3, r2
 801e0fe:	f6bf ae74 	bge.w	801ddea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e102:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e106:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e10a:	f1bb 0f00 	cmp.w	fp, #0
 801e10e:	dc6c      	bgt.n	801e1ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e110:	9b07      	ldr	r3, [sp, #28]
 801e112:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e116:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e118:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e11c:	930a      	str	r3, [sp, #40]	; 0x28
 801e11e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e120:	2b00      	cmp	r3, #0
 801e122:	f340 81b3 	ble.w	801e48c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e126:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e12a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e12e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e132:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e134:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e138:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e13c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e140:	eef0 6a62 	vmov.f32	s13, s5
 801e144:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e148:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e14c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e150:	ee16 4a90 	vmov	r4, s13
 801e154:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e158:	eef0 6a43 	vmov.f32	s13, s6
 801e15c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e160:	ee12 2a90 	vmov	r2, s5
 801e164:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e168:	fb92 f3f3 	sdiv	r3, r2, r3
 801e16c:	ee13 2a10 	vmov	r2, s6
 801e170:	9329      	str	r3, [sp, #164]	; 0xa4
 801e172:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e174:	fb92 f3f3 	sdiv	r3, r2, r3
 801e178:	932a      	str	r3, [sp, #168]	; 0xa8
 801e17a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e17c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e17e:	3b01      	subs	r3, #1
 801e180:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e184:	9317      	str	r3, [sp, #92]	; 0x5c
 801e186:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e188:	bf08      	it	eq
 801e18a:	4613      	moveq	r3, r2
 801e18c:	ee16 6a90 	vmov	r6, s13
 801e190:	9307      	str	r3, [sp, #28]
 801e192:	eeb0 3a67 	vmov.f32	s6, s15
 801e196:	eef0 2a47 	vmov.f32	s5, s14
 801e19a:	e5fb      	b.n	801dd94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e19c:	2900      	cmp	r1, #0
 801e19e:	f43f ae6b 	beq.w	801de78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e1a2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e1a6:	9308      	str	r3, [sp, #32]
 801e1a8:	0e1b      	lsrs	r3, r3, #24
 801e1aa:	9311      	str	r3, [sp, #68]	; 0x44
 801e1ac:	e664      	b.n	801de78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e1ae:	f112 0801 	adds.w	r8, r2, #1
 801e1b2:	f53f af7b 	bmi.w	801e0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e1b6:	4543      	cmp	r3, r8
 801e1b8:	f6ff af78 	blt.w	801e0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e1bc:	f11c 0801 	adds.w	r8, ip, #1
 801e1c0:	f53f af74 	bmi.w	801e0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e1c4:	45c6      	cmp	lr, r8
 801e1c6:	f6ff af71 	blt.w	801e0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e1ca:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e1cc:	9201      	str	r2, [sp, #4]
 801e1ce:	fa0f f28e 	sxth.w	r2, lr
 801e1d2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e1d6:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e1da:	9200      	str	r2, [sp, #0]
 801e1dc:	b21b      	sxth	r3, r3
 801e1de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e1e0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e1e2:	4639      	mov	r1, r7
 801e1e4:	f7ff fc79 	bl	801dada <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e1e8:	e760      	b.n	801e0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e1ea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e1ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e1ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e1f2:	1427      	asrs	r7, r4, #16
 801e1f4:	1433      	asrs	r3, r6, #16
 801e1f6:	fb01 7303 	mla	r3, r1, r3, r7
 801e1fa:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e1fe:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e202:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e206:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e20a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e20e:	2a00      	cmp	r2, #0
 801e210:	f000 8133 	beq.w	801e47a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e214:	687d      	ldr	r5, [r7, #4]
 801e216:	950e      	str	r5, [sp, #56]	; 0x38
 801e218:	0e2d      	lsrs	r5, r5, #24
 801e21a:	9515      	str	r5, [sp, #84]	; 0x54
 801e21c:	b178      	cbz	r0, 801e23e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e21e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e222:	3901      	subs	r1, #1
 801e224:	0089      	lsls	r1, r1, #2
 801e226:	3104      	adds	r1, #4
 801e228:	eb07 0e01 	add.w	lr, r7, r1
 801e22c:	5879      	ldr	r1, [r7, r1]
 801e22e:	9109      	str	r1, [sp, #36]	; 0x24
 801e230:	0e09      	lsrs	r1, r1, #24
 801e232:	9112      	str	r1, [sp, #72]	; 0x48
 801e234:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e238:	910f      	str	r1, [sp, #60]	; 0x3c
 801e23a:	0e09      	lsrs	r1, r1, #24
 801e23c:	9116      	str	r1, [sp, #88]	; 0x58
 801e23e:	b292      	uxth	r2, r2
 801e240:	b280      	uxth	r0, r0
 801e242:	fb02 f800 	mul.w	r8, r2, r0
 801e246:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e24a:	0112      	lsls	r2, r2, #4
 801e24c:	eba2 0e08 	sub.w	lr, r2, r8
 801e250:	b280      	uxth	r0, r0
 801e252:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e256:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e258:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e25a:	fa1f fe8e 	uxth.w	lr, lr
 801e25e:	1a12      	subs	r2, r2, r0
 801e260:	b292      	uxth	r2, r2
 801e262:	fb0e f101 	mul.w	r1, lr, r1
 801e266:	fb02 110c 	mla	r1, r2, ip, r1
 801e26a:	fb00 1105 	mla	r1, r0, r5, r1
 801e26e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e270:	fb08 1105 	mla	r1, r8, r5, r1
 801e274:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e278:	2900      	cmp	r1, #0
 801e27a:	f000 80f5 	beq.w	801e468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e27e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e282:	d019      	beq.n	801e2b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e284:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e288:	fb0c fa0a 	mul.w	sl, ip, sl
 801e28c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e290:	fb0c fc03 	mul.w	ip, ip, r3
 801e294:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e298:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e29c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e2a0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e2a4:	4453      	add	r3, sl
 801e2a6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e2aa:	0a1b      	lsrs	r3, r3, #8
 801e2ac:	0a3f      	lsrs	r7, r7, #8
 801e2ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e2b2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e2b6:	433b      	orrs	r3, r7
 801e2b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e2ba:	2dff      	cmp	r5, #255	; 0xff
 801e2bc:	d020      	beq.n	801e300 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e2be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e2c0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e2c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e2c6:	436f      	muls	r7, r5
 801e2c8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e2ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e2ce:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e2d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e2d4:	fb05 fa0a 	mul.w	sl, r5, sl
 801e2d8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e2dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e2e0:	44bc      	add	ip, r7
 801e2e2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e2e6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e2ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e2f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e2f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e2fa:	ea4c 050a 	orr.w	r5, ip, sl
 801e2fe:	950e      	str	r5, [sp, #56]	; 0x38
 801e300:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e302:	2dff      	cmp	r5, #255	; 0xff
 801e304:	d020      	beq.n	801e348 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e306:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e308:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e30c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e30e:	436f      	muls	r7, r5
 801e310:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e312:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e316:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e318:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e31c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e320:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e324:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e328:	44bc      	add	ip, r7
 801e32a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e32e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e332:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e336:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e33a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e33e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e342:	ea4c 050a 	orr.w	r5, ip, sl
 801e346:	9509      	str	r5, [sp, #36]	; 0x24
 801e348:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e34a:	2dff      	cmp	r5, #255	; 0xff
 801e34c:	d020      	beq.n	801e390 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e34e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e350:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e354:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e356:	436f      	muls	r7, r5
 801e358:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e35a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e35e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e360:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e364:	fb05 fa0a 	mul.w	sl, r5, sl
 801e368:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e36c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e370:	44bc      	add	ip, r7
 801e372:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e376:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e37a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e37e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e382:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e386:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e38a:	ea4c 050a 	orr.w	r5, ip, sl
 801e38e:	950f      	str	r5, [sp, #60]	; 0x3c
 801e390:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e392:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e396:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e398:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e39c:	fb0e f707 	mul.w	r7, lr, r7
 801e3a0:	fb02 770c 	mla	r7, r2, ip, r7
 801e3a4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e3a8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e3aa:	fb00 770c 	mla	r7, r0, ip, r7
 801e3ae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e3b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e3b4:	fb08 770c 	mla	r7, r8, ip, r7
 801e3b8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e3bc:	fb0e fe0c 	mul.w	lr, lr, ip
 801e3c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e3c4:	fb02 e303 	mla	r3, r2, r3, lr
 801e3c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e3ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e3cc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e3d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e3d2:	fb00 330a 	mla	r3, r0, sl, r3
 801e3d6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e3da:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e3de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e3e0:	f8b9 0000 	ldrh.w	r0, [r9]
 801e3e4:	4359      	muls	r1, r3
 801e3e6:	0a3f      	lsrs	r7, r7, #8
 801e3e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e3ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e3f0:	1c4b      	adds	r3, r1, #1
 801e3f2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e3f6:	ea47 070c 	orr.w	r7, r7, ip
 801e3fa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e3fe:	1202      	asrs	r2, r0, #8
 801e400:	0c3b      	lsrs	r3, r7, #16
 801e402:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e406:	b2c9      	uxtb	r1, r1
 801e408:	fb13 f305 	smulbb	r3, r3, r5
 801e40c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e410:	fb02 3201 	mla	r2, r2, r1, r3
 801e414:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e418:	10c3      	asrs	r3, r0, #3
 801e41a:	b2ff      	uxtb	r7, r7
 801e41c:	00c0      	lsls	r0, r0, #3
 801e41e:	b2c0      	uxtb	r0, r0
 801e420:	fb17 f705 	smulbb	r7, r7, r5
 801e424:	fb00 7001 	mla	r0, r0, r1, r7
 801e428:	b292      	uxth	r2, r2
 801e42a:	fb1c fc05 	smulbb	ip, ip, r5
 801e42e:	b280      	uxth	r0, r0
 801e430:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e434:	fb03 c301 	mla	r3, r3, r1, ip
 801e438:	1c51      	adds	r1, r2, #1
 801e43a:	f100 0c01 	add.w	ip, r0, #1
 801e43e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e442:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e446:	b29b      	uxth	r3, r3
 801e448:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e44c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e450:	ea4c 0202 	orr.w	r2, ip, r2
 801e454:	f103 0c01 	add.w	ip, r3, #1
 801e458:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e45c:	095b      	lsrs	r3, r3, #5
 801e45e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e462:	431a      	orrs	r2, r3
 801e464:	f8a9 2000 	strh.w	r2, [r9]
 801e468:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e46a:	441c      	add	r4, r3
 801e46c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e46e:	f109 0902 	add.w	r9, r9, #2
 801e472:	441e      	add	r6, r3
 801e474:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e478:	e647      	b.n	801e10a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e47a:	2800      	cmp	r0, #0
 801e47c:	f43f aedf 	beq.w	801e23e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e480:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e484:	9109      	str	r1, [sp, #36]	; 0x24
 801e486:	0e09      	lsrs	r1, r1, #24
 801e488:	9112      	str	r1, [sp, #72]	; 0x48
 801e48a:	e6d8      	b.n	801e23e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e48c:	b01d      	add	sp, #116	; 0x74
 801e48e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e492 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e492:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e496:	b085      	sub	sp, #20
 801e498:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e49c:	9102      	str	r1, [sp, #8]
 801e49e:	2c00      	cmp	r4, #0
 801e4a0:	fb04 7103 	mla	r1, r4, r3, r7
 801e4a4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e4a8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e4ac:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e4b0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e4b4:	f2c0 810c 	blt.w	801e6d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e4b8:	45a6      	cmp	lr, r4
 801e4ba:	f340 8109 	ble.w	801e6d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e4be:	2f00      	cmp	r7, #0
 801e4c0:	f2c0 8104 	blt.w	801e6cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e4c4:	42bb      	cmp	r3, r7
 801e4c6:	f340 8101 	ble.w	801e6cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e4ca:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e4ce:	1c7a      	adds	r2, r7, #1
 801e4d0:	f100 8101 	bmi.w	801e6d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e4d4:	4293      	cmp	r3, r2
 801e4d6:	f340 80fe 	ble.w	801e6d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e4da:	2e00      	cmp	r6, #0
 801e4dc:	f000 80fd 	beq.w	801e6da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e4e0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e4e4:	3401      	adds	r4, #1
 801e4e6:	f100 80fc 	bmi.w	801e6e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e4ea:	45a6      	cmp	lr, r4
 801e4ec:	f340 80f9 	ble.w	801e6e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e4f0:	2800      	cmp	r0, #0
 801e4f2:	f000 80f9 	beq.w	801e6e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e4f6:	2f00      	cmp	r7, #0
 801e4f8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e4fc:	f2c0 80ef 	blt.w	801e6de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e500:	42bb      	cmp	r3, r7
 801e502:	f340 80ec 	ble.w	801e6de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e506:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e50a:	3701      	adds	r7, #1
 801e50c:	f100 80ef 	bmi.w	801e6ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e510:	42bb      	cmp	r3, r7
 801e512:	f340 80ec 	ble.w	801e6ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e516:	2e00      	cmp	r6, #0
 801e518:	f000 80eb 	beq.w	801e6f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e51c:	6852      	ldr	r2, [r2, #4]
 801e51e:	b2b6      	uxth	r6, r6
 801e520:	b280      	uxth	r0, r0
 801e522:	fb00 fe06 	mul.w	lr, r0, r6
 801e526:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e52a:	0136      	lsls	r6, r6, #4
 801e52c:	eba6 070e 	sub.w	r7, r6, lr
 801e530:	b280      	uxth	r0, r0
 801e532:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e536:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e53a:	b2bf      	uxth	r7, r7
 801e53c:	1a1b      	subs	r3, r3, r0
 801e53e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e542:	b29b      	uxth	r3, r3
 801e544:	fb07 f60a 	mul.w	r6, r7, sl
 801e548:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e54c:	fb0b 6603 	mla	r6, fp, r3, r6
 801e550:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e554:	fb00 6609 	mla	r6, r0, r9, r6
 801e558:	fb0e 6608 	mla	r6, lr, r8, r6
 801e55c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e560:	9600      	str	r6, [sp, #0]
 801e562:	2e00      	cmp	r6, #0
 801e564:	f000 80af 	beq.w	801e6c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e568:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e56c:	fb0b fc0c 	mul.w	ip, fp, ip
 801e570:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e574:	fb0b f505 	mul.w	r5, fp, r5
 801e578:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e57c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e580:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e584:	44dc      	add	ip, fp
 801e586:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e58a:	9501      	str	r5, [sp, #4]
 801e58c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e590:	9503      	str	r5, [sp, #12]
 801e592:	9d01      	ldr	r5, [sp, #4]
 801e594:	9e02      	ldr	r6, [sp, #8]
 801e596:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e59a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e59e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e5a2:	fb0a fc0c 	mul.w	ip, sl, ip
 801e5a6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e5aa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e5ae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e5b2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e5b6:	4465      	add	r5, ip
 801e5b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e5bc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e5c0:	fb09 fc0c 	mul.w	ip, r9, ip
 801e5c4:	fb09 f904 	mul.w	r9, r9, r4
 801e5c8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e5cc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e5d0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e5d4:	fb08 f404 	mul.w	r4, r8, r4
 801e5d8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e5dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e5e0:	fb08 f802 	mul.w	r8, r8, r2
 801e5e4:	fb0a fa01 	mul.w	sl, sl, r1
 801e5e8:	0a22      	lsrs	r2, r4, #8
 801e5ea:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e5ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e5f2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e5f6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e5fa:	4414      	add	r4, r2
 801e5fc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e600:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e604:	0a2d      	lsrs	r5, r5, #8
 801e606:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e60a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e60e:	9a03      	ldr	r2, [sp, #12]
 801e610:	8836      	ldrh	r6, [r6, #0]
 801e612:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e616:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e61a:	437d      	muls	r5, r7
 801e61c:	4461      	add	r1, ip
 801e61e:	0a24      	lsrs	r4, r4, #8
 801e620:	fb02 5503 	mla	r5, r2, r3, r5
 801e624:	0a09      	lsrs	r1, r1, #8
 801e626:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e62a:	fb04 540e 	mla	r4, r4, lr, r5
 801e62e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e632:	fb01 4100 	mla	r1, r1, r0, r4
 801e636:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e63a:	0a09      	lsrs	r1, r1, #8
 801e63c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e640:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e644:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e648:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e64c:	fb07 f70a 	mul.w	r7, r7, sl
 801e650:	fb03 7101 	mla	r1, r3, r1, r7
 801e654:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e658:	9b00      	ldr	r3, [sp, #0]
 801e65a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e65e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e662:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e666:	fb00 e101 	mla	r1, r0, r1, lr
 801e66a:	43da      	mvns	r2, r3
 801e66c:	1233      	asrs	r3, r6, #8
 801e66e:	b2d2      	uxtb	r2, r2
 801e670:	10f0      	asrs	r0, r6, #3
 801e672:	0a09      	lsrs	r1, r1, #8
 801e674:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e678:	00f6      	lsls	r6, r6, #3
 801e67a:	4353      	muls	r3, r2
 801e67c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e680:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e684:	b2f6      	uxtb	r6, r6
 801e686:	4321      	orrs	r1, r4
 801e688:	4350      	muls	r0, r2
 801e68a:	4356      	muls	r6, r2
 801e68c:	1c5a      	adds	r2, r3, #1
 801e68e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e692:	0c0b      	lsrs	r3, r1, #16
 801e694:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e698:	1c42      	adds	r2, r0, #1
 801e69a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e69e:	0a0a      	lsrs	r2, r1, #8
 801e6a0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e6a4:	021b      	lsls	r3, r3, #8
 801e6a6:	00d2      	lsls	r2, r2, #3
 801e6a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e6ac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e6b0:	4313      	orrs	r3, r2
 801e6b2:	1c72      	adds	r2, r6, #1
 801e6b4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e6b8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e6bc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e6c0:	4319      	orrs	r1, r3
 801e6c2:	9b02      	ldr	r3, [sp, #8]
 801e6c4:	8019      	strh	r1, [r3, #0]
 801e6c6:	b005      	add	sp, #20
 801e6c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6cc:	2500      	movs	r5, #0
 801e6ce:	e6fe      	b.n	801e4ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e6d0:	2100      	movs	r1, #0
 801e6d2:	460d      	mov	r5, r1
 801e6d4:	e706      	b.n	801e4e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e6d6:	2100      	movs	r1, #0
 801e6d8:	e704      	b.n	801e4e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e6da:	4631      	mov	r1, r6
 801e6dc:	e702      	b.n	801e4e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e6de:	2400      	movs	r4, #0
 801e6e0:	e713      	b.n	801e50a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e6e2:	2200      	movs	r2, #0
 801e6e4:	4614      	mov	r4, r2
 801e6e6:	e71a      	b.n	801e51e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e6e8:	4602      	mov	r2, r0
 801e6ea:	4604      	mov	r4, r0
 801e6ec:	e717      	b.n	801e51e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e6ee:	2200      	movs	r2, #0
 801e6f0:	e715      	b.n	801e51e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e6f2:	4632      	mov	r2, r6
 801e6f4:	e713      	b.n	801e51e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801e6f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e6f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6fc:	b09b      	sub	sp, #108	; 0x6c
 801e6fe:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e702:	9218      	str	r2, [sp, #96]	; 0x60
 801e704:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e706:	9116      	str	r1, [sp, #88]	; 0x58
 801e708:	9307      	str	r3, [sp, #28]
 801e70a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e70e:	9019      	str	r0, [sp, #100]	; 0x64
 801e710:	6850      	ldr	r0, [r2, #4]
 801e712:	6812      	ldr	r2, [r2, #0]
 801e714:	fb00 1303 	mla	r3, r0, r3, r1
 801e718:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e71c:	930a      	str	r3, [sp, #40]	; 0x28
 801e71e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e720:	681b      	ldr	r3, [r3, #0]
 801e722:	930f      	str	r3, [sp, #60]	; 0x3c
 801e724:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e726:	2b00      	cmp	r3, #0
 801e728:	dc03      	bgt.n	801e732 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e72a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e72c:	2b00      	cmp	r3, #0
 801e72e:	f340 8386 	ble.w	801ee3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e732:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e734:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e738:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e73c:	1e48      	subs	r0, r1, #1
 801e73e:	1e57      	subs	r7, r2, #1
 801e740:	9b07      	ldr	r3, [sp, #28]
 801e742:	2b00      	cmp	r3, #0
 801e744:	f340 8166 	ble.w	801ea14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e748:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e74c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e750:	d406      	bmi.n	801e760 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e752:	4584      	cmp	ip, r0
 801e754:	da04      	bge.n	801e760 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e756:	2b00      	cmp	r3, #0
 801e758:	db02      	blt.n	801e760 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e75a:	42bb      	cmp	r3, r7
 801e75c:	f2c0 815b 	blt.w	801ea16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e760:	f11c 0c01 	adds.w	ip, ip, #1
 801e764:	f100 814b 	bmi.w	801e9fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e768:	4561      	cmp	r1, ip
 801e76a:	f2c0 8148 	blt.w	801e9fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e76e:	3301      	adds	r3, #1
 801e770:	f100 8145 	bmi.w	801e9fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e774:	429a      	cmp	r2, r3
 801e776:	f2c0 8142 	blt.w	801e9fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e77a:	9b07      	ldr	r3, [sp, #28]
 801e77c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e77e:	9317      	str	r3, [sp, #92]	; 0x5c
 801e780:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e782:	2b00      	cmp	r3, #0
 801e784:	f340 8165 	ble.w	801ea52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e788:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e78a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e78c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e790:	689b      	ldr	r3, [r3, #8]
 801e792:	1422      	asrs	r2, r4, #16
 801e794:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e798:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e79c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e7a0:	f100 81d5 	bmi.w	801eb4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e7a4:	f103 38ff 	add.w	r8, r3, #4294967295
 801e7a8:	4542      	cmp	r2, r8
 801e7aa:	f280 81d0 	bge.w	801eb4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e7ae:	f1bc 0f00 	cmp.w	ip, #0
 801e7b2:	f2c0 81cc 	blt.w	801eb4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e7b6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e7ba:	45c4      	cmp	ip, r8
 801e7bc:	f280 81c7 	bge.w	801eb4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e7c0:	b21b      	sxth	r3, r3
 801e7c2:	fb0c 2203 	mla	r2, ip, r3, r2
 801e7c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e7c8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e7cc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e7d0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e7d4:	2900      	cmp	r1, #0
 801e7d6:	f000 8182 	beq.w	801eade <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e7da:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e7de:	950b      	str	r5, [sp, #44]	; 0x2c
 801e7e0:	0e2d      	lsrs	r5, r5, #24
 801e7e2:	9512      	str	r5, [sp, #72]	; 0x48
 801e7e4:	b180      	cbz	r0, 801e808 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e7e6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e7ea:	3b01      	subs	r3, #1
 801e7ec:	009b      	lsls	r3, r3, #2
 801e7ee:	3304      	adds	r3, #4
 801e7f0:	eb08 0c03 	add.w	ip, r8, r3
 801e7f4:	f858 3003 	ldr.w	r3, [r8, r3]
 801e7f8:	9308      	str	r3, [sp, #32]
 801e7fa:	0e1b      	lsrs	r3, r3, #24
 801e7fc:	9310      	str	r3, [sp, #64]	; 0x40
 801e7fe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e802:	930c      	str	r3, [sp, #48]	; 0x30
 801e804:	0e1b      	lsrs	r3, r3, #24
 801e806:	9313      	str	r3, [sp, #76]	; 0x4c
 801e808:	b289      	uxth	r1, r1
 801e80a:	b280      	uxth	r0, r0
 801e80c:	fb01 f900 	mul.w	r9, r1, r0
 801e810:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e814:	0109      	lsls	r1, r1, #4
 801e816:	eba1 0809 	sub.w	r8, r1, r9
 801e81a:	b280      	uxth	r0, r0
 801e81c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801e820:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e822:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e824:	fa1f f888 	uxth.w	r8, r8
 801e828:	1a09      	subs	r1, r1, r0
 801e82a:	b289      	uxth	r1, r1
 801e82c:	fb08 f303 	mul.w	r3, r8, r3
 801e830:	fb01 330e 	mla	r3, r1, lr, r3
 801e834:	fb00 3305 	mla	r3, r0, r5, r3
 801e838:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e83a:	fb09 3305 	mla	r3, r9, r5, r3
 801e83e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e842:	2b00      	cmp	r3, #0
 801e844:	f000 80d2 	beq.w	801e9ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e848:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e84c:	d01b      	beq.n	801e886 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801e84e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e852:	fb0e fa0a 	mul.w	sl, lr, sl
 801e856:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e85a:	fb0e fe02 	mul.w	lr, lr, r2
 801e85e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e862:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e866:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e86a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e86e:	4452      	add	r2, sl
 801e870:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e874:	0a12      	lsrs	r2, r2, #8
 801e876:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e87a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e87e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e882:	ea42 020c 	orr.w	r2, r2, ip
 801e886:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e888:	2dff      	cmp	r5, #255	; 0xff
 801e88a:	d021      	beq.n	801e8d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801e88c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e88e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e892:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e894:	fb05 fb0b 	mul.w	fp, r5, fp
 801e898:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e89a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e89e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e8a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e8a4:	fb05 fa0a 	mul.w	sl, r5, sl
 801e8a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e8ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e8b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e8b4:	44de      	add	lr, fp
 801e8b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e8ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e8be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e8c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e8ca:	ea4e 050a 	orr.w	r5, lr, sl
 801e8ce:	950b      	str	r5, [sp, #44]	; 0x2c
 801e8d0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e8d2:	2dff      	cmp	r5, #255	; 0xff
 801e8d4:	d021      	beq.n	801e91a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801e8d6:	9d08      	ldr	r5, [sp, #32]
 801e8d8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e8dc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e8de:	fb05 fb0b 	mul.w	fp, r5, fp
 801e8e2:	9d08      	ldr	r5, [sp, #32]
 801e8e4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e8e8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e8ea:	fb05 fa0e 	mul.w	sl, r5, lr
 801e8ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e8f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e8f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e8fa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e8fe:	44de      	add	lr, fp
 801e900:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e904:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e908:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e90c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e910:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e914:	ea4e 050a 	orr.w	r5, lr, sl
 801e918:	9508      	str	r5, [sp, #32]
 801e91a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e91c:	2dff      	cmp	r5, #255	; 0xff
 801e91e:	d021      	beq.n	801e964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801e920:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e922:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e926:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e928:	fb05 fb0b 	mul.w	fp, r5, fp
 801e92c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e92e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e932:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e934:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e938:	fb05 fa0a 	mul.w	sl, r5, sl
 801e93c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e940:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e944:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e948:	44de      	add	lr, fp
 801e94a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e94e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e952:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e956:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e95a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e95e:	ea4e 050a 	orr.w	r5, lr, sl
 801e962:	950c      	str	r5, [sp, #48]	; 0x30
 801e964:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e966:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e96a:	9d08      	ldr	r5, [sp, #32]
 801e96c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e970:	fb08 fc0c 	mul.w	ip, r8, ip
 801e974:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e978:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e97c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e97e:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e982:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e986:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e988:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e98c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e990:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e994:	fb08 f80e 	mul.w	r8, r8, lr
 801e998:	fb01 8202 	mla	r2, r1, r2, r8
 801e99c:	9908      	ldr	r1, [sp, #32]
 801e99e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e9a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e9a4:	fb00 220a 	mla	r2, r0, sl, r2
 801e9a8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801e9ac:	fb09 2900 	mla	r9, r9, r0, r2
 801e9b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e9b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e9bc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e9c0:	ea4c 0c09 	orr.w	ip, ip, r9
 801e9c4:	2bff      	cmp	r3, #255	; 0xff
 801e9c6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801e9ca:	f040 8091 	bne.w	801eaf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e9ce:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801e9d2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801e9d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e9da:	f022 0207 	bic.w	r2, r2, #7
 801e9de:	431a      	orrs	r2, r3
 801e9e0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801e9e4:	ea4c 0c02 	orr.w	ip, ip, r2
 801e9e8:	f8a7 c000 	strh.w	ip, [r7]
 801e9ec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e9ee:	441c      	add	r4, r3
 801e9f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e9f2:	441e      	add	r6, r3
 801e9f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e9f6:	3b01      	subs	r3, #1
 801e9f8:	3702      	adds	r7, #2
 801e9fa:	9317      	str	r3, [sp, #92]	; 0x5c
 801e9fc:	e6c0      	b.n	801e780 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801e9fe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ea00:	441c      	add	r4, r3
 801ea02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ea04:	441e      	add	r6, r3
 801ea06:	9b07      	ldr	r3, [sp, #28]
 801ea08:	3b01      	subs	r3, #1
 801ea0a:	9307      	str	r3, [sp, #28]
 801ea0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ea0e:	3302      	adds	r3, #2
 801ea10:	930a      	str	r3, [sp, #40]	; 0x28
 801ea12:	e695      	b.n	801e740 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ea14:	d024      	beq.n	801ea60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ea16:	9b07      	ldr	r3, [sp, #28]
 801ea18:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ea1a:	3b01      	subs	r3, #1
 801ea1c:	fb00 4003 	mla	r0, r0, r3, r4
 801ea20:	1400      	asrs	r0, r0, #16
 801ea22:	f53f aeaa 	bmi.w	801e77a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea26:	3901      	subs	r1, #1
 801ea28:	4288      	cmp	r0, r1
 801ea2a:	f6bf aea6 	bge.w	801e77a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea2e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ea30:	fb01 6303 	mla	r3, r1, r3, r6
 801ea34:	141b      	asrs	r3, r3, #16
 801ea36:	f53f aea0 	bmi.w	801e77a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea3a:	3a01      	subs	r2, #1
 801ea3c:	4293      	cmp	r3, r2
 801ea3e:	f6bf ae9c 	bge.w	801e77a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea42:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ea46:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ea4a:	f1bb 0f00 	cmp.w	fp, #0
 801ea4e:	f300 809a 	bgt.w	801eb86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ea52:	9b07      	ldr	r3, [sp, #28]
 801ea54:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ea58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ea5a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ea5e:	930a      	str	r3, [sp, #40]	; 0x28
 801ea60:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ea62:	2b00      	cmp	r3, #0
 801ea64:	f340 81eb 	ble.w	801ee3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ea68:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ea6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ea70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ea74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ea76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ea7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ea7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ea82:	eef0 6a62 	vmov.f32	s13, s5
 801ea86:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ea8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ea92:	ee16 4a90 	vmov	r4, s13
 801ea96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ea9a:	eef0 6a43 	vmov.f32	s13, s6
 801ea9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eaa2:	ee12 2a90 	vmov	r2, s5
 801eaa6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eaaa:	fb92 f3f3 	sdiv	r3, r2, r3
 801eaae:	ee13 2a10 	vmov	r2, s6
 801eab2:	9327      	str	r3, [sp, #156]	; 0x9c
 801eab4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eab6:	fb92 f3f3 	sdiv	r3, r2, r3
 801eaba:	9328      	str	r3, [sp, #160]	; 0xa0
 801eabc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801eabe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801eac0:	3b01      	subs	r3, #1
 801eac2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eac6:	9316      	str	r3, [sp, #88]	; 0x58
 801eac8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eaca:	bf08      	it	eq
 801eacc:	4613      	moveq	r3, r2
 801eace:	ee16 6a90 	vmov	r6, s13
 801ead2:	9307      	str	r3, [sp, #28]
 801ead4:	eeb0 3a67 	vmov.f32	s6, s15
 801ead8:	eef0 2a47 	vmov.f32	s5, s14
 801eadc:	e622      	b.n	801e724 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801eade:	2800      	cmp	r0, #0
 801eae0:	f43f ae92 	beq.w	801e808 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801eae4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801eae8:	9308      	str	r3, [sp, #32]
 801eaea:	0e1b      	lsrs	r3, r3, #24
 801eaec:	9310      	str	r3, [sp, #64]	; 0x40
 801eaee:	e68b      	b.n	801e808 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801eaf0:	8839      	ldrh	r1, [r7, #0]
 801eaf2:	4dd4      	ldr	r5, [pc, #848]	; (801ee44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801eaf4:	43db      	mvns	r3, r3
 801eaf6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801eafa:	fa5f f883 	uxtb.w	r8, r3
 801eafe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801eb02:	fb0e fe08 	mul.w	lr, lr, r8
 801eb06:	10c8      	asrs	r0, r1, #3
 801eb08:	00cb      	lsls	r3, r1, #3
 801eb0a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801eb0e:	f10e 0101 	add.w	r1, lr, #1
 801eb12:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801eb16:	fb00 f008 	mul.w	r0, r0, r8
 801eb1a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801eb1e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801eb22:	f100 0e01 	add.w	lr, r0, #1
 801eb26:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801eb2a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801eb2e:	b2db      	uxtb	r3, r3
 801eb30:	b2c9      	uxtb	r1, r1
 801eb32:	00d2      	lsls	r2, r2, #3
 801eb34:	fb03 f308 	mul.w	r3, r3, r8
 801eb38:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801eb3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb40:	430a      	orrs	r2, r1
 801eb42:	1c59      	adds	r1, r3, #1
 801eb44:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801eb48:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801eb4c:	e748      	b.n	801e9e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801eb4e:	f112 0801 	adds.w	r8, r2, #1
 801eb52:	f53f af4b 	bmi.w	801e9ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb56:	4543      	cmp	r3, r8
 801eb58:	f6ff af48 	blt.w	801e9ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb5c:	f11c 0801 	adds.w	r8, ip, #1
 801eb60:	f53f af44 	bmi.w	801e9ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb64:	45c6      	cmp	lr, r8
 801eb66:	f6ff af41 	blt.w	801e9ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb6a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801eb6e:	fa0f f28e 	sxth.w	r2, lr
 801eb72:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801eb76:	9200      	str	r2, [sp, #0]
 801eb78:	b21b      	sxth	r3, r3
 801eb7a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801eb7c:	9819      	ldr	r0, [sp, #100]	; 0x64
 801eb7e:	4639      	mov	r1, r7
 801eb80:	f7ff fc87 	bl	801e492 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801eb84:	e732      	b.n	801e9ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eb88:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eb8a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801eb8e:	1421      	asrs	r1, r4, #16
 801eb90:	1433      	asrs	r3, r6, #16
 801eb92:	fb07 1303 	mla	r3, r7, r3, r1
 801eb96:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801eb98:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801eb9c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801eba0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eba4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eba8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ebac:	2a00      	cmp	r2, #0
 801ebae:	f000 8107 	beq.w	801edc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801ebb2:	684d      	ldr	r5, [r1, #4]
 801ebb4:	950d      	str	r5, [sp, #52]	; 0x34
 801ebb6:	0e2d      	lsrs	r5, r5, #24
 801ebb8:	9514      	str	r5, [sp, #80]	; 0x50
 801ebba:	b178      	cbz	r0, 801ebdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ebbc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801ebc0:	3f01      	subs	r7, #1
 801ebc2:	00bf      	lsls	r7, r7, #2
 801ebc4:	3704      	adds	r7, #4
 801ebc6:	eb01 0e07 	add.w	lr, r1, r7
 801ebca:	59c9      	ldr	r1, [r1, r7]
 801ebcc:	9109      	str	r1, [sp, #36]	; 0x24
 801ebce:	0e09      	lsrs	r1, r1, #24
 801ebd0:	9111      	str	r1, [sp, #68]	; 0x44
 801ebd2:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ebd6:	910e      	str	r1, [sp, #56]	; 0x38
 801ebd8:	0e09      	lsrs	r1, r1, #24
 801ebda:	9115      	str	r1, [sp, #84]	; 0x54
 801ebdc:	b292      	uxth	r2, r2
 801ebde:	b280      	uxth	r0, r0
 801ebe0:	fb02 f900 	mul.w	r9, r2, r0
 801ebe4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ebe8:	0112      	lsls	r2, r2, #4
 801ebea:	eba2 0e09 	sub.w	lr, r2, r9
 801ebee:	b280      	uxth	r0, r0
 801ebf0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ebf4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ebf6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ebf8:	fa1f fe8e 	uxth.w	lr, lr
 801ebfc:	1a09      	subs	r1, r1, r0
 801ebfe:	b289      	uxth	r1, r1
 801ec00:	fb0e f202 	mul.w	r2, lr, r2
 801ec04:	fb01 220c 	mla	r2, r1, ip, r2
 801ec08:	fb00 2205 	mla	r2, r0, r5, r2
 801ec0c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ec0e:	fb09 2205 	mla	r2, r9, r5, r2
 801ec12:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ec16:	2a00      	cmp	r2, #0
 801ec18:	f000 80c9 	beq.w	801edae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ec1c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ec20:	d019      	beq.n	801ec56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ec22:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ec26:	fb0c fa0a 	mul.w	sl, ip, sl
 801ec2a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ec2e:	fb0c fc03 	mul.w	ip, ip, r3
 801ec32:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ec36:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ec3a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ec3e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ec42:	4453      	add	r3, sl
 801ec44:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ec48:	0a1b      	lsrs	r3, r3, #8
 801ec4a:	0a3f      	lsrs	r7, r7, #8
 801ec4c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ec50:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ec54:	433b      	orrs	r3, r7
 801ec56:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ec58:	2dff      	cmp	r5, #255	; 0xff
 801ec5a:	d020      	beq.n	801ec9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ec5c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ec5e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ec62:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ec64:	436f      	muls	r7, r5
 801ec66:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ec68:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ec6c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ec6e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ec72:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec76:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ec7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ec7e:	44bc      	add	ip, r7
 801ec80:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ec84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ec88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ec94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ec98:	ea4c 050a 	orr.w	r5, ip, sl
 801ec9c:	950d      	str	r5, [sp, #52]	; 0x34
 801ec9e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eca0:	2dff      	cmp	r5, #255	; 0xff
 801eca2:	d020      	beq.n	801ece6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801eca4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eca6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ecaa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ecac:	436f      	muls	r7, r5
 801ecae:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ecb0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ecb4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ecb6:	fb05 fa0c 	mul.w	sl, r5, ip
 801ecba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ecbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ecc2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ecc6:	44bc      	add	ip, r7
 801ecc8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eccc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ecd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecd8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ecdc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ece0:	ea4c 050a 	orr.w	r5, ip, sl
 801ece4:	9509      	str	r5, [sp, #36]	; 0x24
 801ece6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ece8:	2dff      	cmp	r5, #255	; 0xff
 801ecea:	d020      	beq.n	801ed2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ecec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ecee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ecf2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ecf4:	436f      	muls	r7, r5
 801ecf6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ecf8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ecfc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ecfe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ed02:	fb05 fa0a 	mul.w	sl, r5, sl
 801ed06:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ed0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed0e:	44bc      	add	ip, r7
 801ed10:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ed14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed28:	ea4c 050a 	orr.w	r5, ip, sl
 801ed2c:	950e      	str	r5, [sp, #56]	; 0x38
 801ed2e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ed30:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ed34:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ed36:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ed3a:	fb0e f707 	mul.w	r7, lr, r7
 801ed3e:	fb01 770c 	mla	r7, r1, ip, r7
 801ed42:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ed46:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ed48:	fb00 770c 	mla	r7, r0, ip, r7
 801ed4c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ed50:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ed52:	fb09 770c 	mla	r7, r9, ip, r7
 801ed56:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ed5a:	fb0e fe0c 	mul.w	lr, lr, ip
 801ed5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ed62:	fb01 e303 	mla	r3, r1, r3, lr
 801ed66:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ed68:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ed6c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ed6e:	fb00 330a 	mla	r3, r0, sl, r3
 801ed72:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ed76:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ed7a:	0a3f      	lsrs	r7, r7, #8
 801ed7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed80:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ed84:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ed88:	ea47 070c 	orr.w	r7, r7, ip
 801ed8c:	2aff      	cmp	r2, #255	; 0xff
 801ed8e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801ed92:	d11e      	bne.n	801edd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801ed94:	097a      	lsrs	r2, r7, #5
 801ed96:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801ed9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed9e:	f023 0307 	bic.w	r3, r3, #7
 801eda2:	4313      	orrs	r3, r2
 801eda4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801eda8:	431f      	orrs	r7, r3
 801edaa:	f8a8 7000 	strh.w	r7, [r8]
 801edae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801edb0:	441c      	add	r4, r3
 801edb2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801edb4:	f108 0802 	add.w	r8, r8, #2
 801edb8:	441e      	add	r6, r3
 801edba:	f10b 3bff 	add.w	fp, fp, #4294967295
 801edbe:	e644      	b.n	801ea4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801edc0:	2800      	cmp	r0, #0
 801edc2:	f43f af0b 	beq.w	801ebdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801edc6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801edca:	9109      	str	r1, [sp, #36]	; 0x24
 801edcc:	0e09      	lsrs	r1, r1, #24
 801edce:	9111      	str	r1, [sp, #68]	; 0x44
 801edd0:	e704      	b.n	801ebdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801edd2:	f8b8 1000 	ldrh.w	r1, [r8]
 801edd6:	43d2      	mvns	r2, r2
 801edd8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801eddc:	fa5f fe82 	uxtb.w	lr, r2
 801ede0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ede4:	fb0c fc0e 	mul.w	ip, ip, lr
 801ede8:	10c8      	asrs	r0, r1, #3
 801edea:	00ca      	lsls	r2, r1, #3
 801edec:	f10c 0101 	add.w	r1, ip, #1
 801edf0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801edf4:	0c39      	lsrs	r1, r7, #16
 801edf6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801edfa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801edfe:	4911      	ldr	r1, [pc, #68]	; (801ee44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ee00:	fb00 f00e 	mul.w	r0, r0, lr
 801ee04:	fa5f fc8c 	uxtb.w	ip, ip
 801ee08:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ee0c:	b2d2      	uxtb	r2, r2
 801ee0e:	1c41      	adds	r1, r0, #1
 801ee10:	fb02 f20e 	mul.w	r2, r2, lr
 801ee14:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ee18:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ee1c:	1c51      	adds	r1, r2, #1
 801ee1e:	00c0      	lsls	r0, r0, #3
 801ee20:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ee24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ee28:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ee2c:	ea4c 0c00 	orr.w	ip, ip, r0
 801ee30:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ee34:	ea47 0c0c 	orr.w	ip, r7, ip
 801ee38:	f8a8 c000 	strh.w	ip, [r8]
 801ee3c:	e7b7      	b.n	801edae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ee3e:	b01b      	add	sp, #108	; 0x6c
 801ee40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee44:	fffff800 	.word	0xfffff800

0801ee48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801ee48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ee4c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801ee50:	2d00      	cmp	r5, #0
 801ee52:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ee56:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ee5a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801ee5e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801ee62:	fb05 0e03 	mla	lr, r5, r3, r0
 801ee66:	f2c0 808c 	blt.w	801ef82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801ee6a:	45a9      	cmp	r9, r5
 801ee6c:	f340 8089 	ble.w	801ef82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801ee70:	2800      	cmp	r0, #0
 801ee72:	f2c0 8084 	blt.w	801ef7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801ee76:	4580      	cmp	r8, r0
 801ee78:	f340 8081 	ble.w	801ef7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801ee7c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801ee80:	f01e 0f01 	tst.w	lr, #1
 801ee84:	5d16      	ldrb	r6, [r2, r4]
 801ee86:	bf0c      	ite	eq
 801ee88:	f006 060f 	andeq.w	r6, r6, #15
 801ee8c:	1136      	asrne	r6, r6, #4
 801ee8e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ee92:	b2f6      	uxtb	r6, r6
 801ee94:	1c44      	adds	r4, r0, #1
 801ee96:	d477      	bmi.n	801ef88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801ee98:	45a0      	cmp	r8, r4
 801ee9a:	dd75      	ble.n	801ef88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801ee9c:	2f00      	cmp	r7, #0
 801ee9e:	d075      	beq.n	801ef8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801eea0:	f10e 0a01 	add.w	sl, lr, #1
 801eea4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801eea8:	f01a 0f01 	tst.w	sl, #1
 801eeac:	5d14      	ldrb	r4, [r2, r4]
 801eeae:	bf0c      	ite	eq
 801eeb0:	f004 040f 	andeq.w	r4, r4, #15
 801eeb4:	1124      	asrne	r4, r4, #4
 801eeb6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801eeba:	b2e4      	uxtb	r4, r4
 801eebc:	3501      	adds	r5, #1
 801eebe:	d469      	bmi.n	801ef94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801eec0:	45a9      	cmp	r9, r5
 801eec2:	dd67      	ble.n	801ef94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801eec4:	f1bc 0f00 	cmp.w	ip, #0
 801eec8:	d067      	beq.n	801ef9a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801eeca:	2800      	cmp	r0, #0
 801eecc:	db60      	blt.n	801ef90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801eece:	4580      	cmp	r8, r0
 801eed0:	dd5e      	ble.n	801ef90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801eed2:	eb03 090e 	add.w	r9, r3, lr
 801eed6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801eeda:	f019 0f01 	tst.w	r9, #1
 801eede:	5d55      	ldrb	r5, [r2, r5]
 801eee0:	bf0c      	ite	eq
 801eee2:	f005 050f 	andeq.w	r5, r5, #15
 801eee6:	112d      	asrne	r5, r5, #4
 801eee8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801eeec:	b2ed      	uxtb	r5, r5
 801eeee:	3001      	adds	r0, #1
 801eef0:	d456      	bmi.n	801efa0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801eef2:	4580      	cmp	r8, r0
 801eef4:	dd54      	ble.n	801efa0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801eef6:	2f00      	cmp	r7, #0
 801eef8:	d054      	beq.n	801efa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801eefa:	3301      	adds	r3, #1
 801eefc:	449e      	add	lr, r3
 801eefe:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ef02:	f01e 0f01 	tst.w	lr, #1
 801ef06:	5cd0      	ldrb	r0, [r2, r3]
 801ef08:	bf0c      	ite	eq
 801ef0a:	f000 000f 	andeq.w	r0, r0, #15
 801ef0e:	1100      	asrne	r0, r0, #4
 801ef10:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ef14:	b2c3      	uxtb	r3, r0
 801ef16:	b2ba      	uxth	r2, r7
 801ef18:	fa1f fc8c 	uxth.w	ip, ip
 801ef1c:	fb02 f00c 	mul.w	r0, r2, ip
 801ef20:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801ef24:	0112      	lsls	r2, r2, #4
 801ef26:	fa1f fc8c 	uxth.w	ip, ip
 801ef2a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801ef2e:	1a12      	subs	r2, r2, r0
 801ef30:	eba7 070c 	sub.w	r7, r7, ip
 801ef34:	b292      	uxth	r2, r2
 801ef36:	b2bf      	uxth	r7, r7
 801ef38:	4362      	muls	r2, r4
 801ef3a:	fb06 2207 	mla	r2, r6, r7, r2
 801ef3e:	fb0c 2505 	mla	r5, ip, r5, r2
 801ef42:	fb00 5303 	mla	r3, r0, r3, r5
 801ef46:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ef4a:	b1b3      	cbz	r3, 801ef7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801ef4c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801ef50:	435a      	muls	r2, r3
 801ef52:	1c53      	adds	r3, r2, #1
 801ef54:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ef58:	4a2d      	ldr	r2, [pc, #180]	; (801f010 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801ef5a:	121b      	asrs	r3, r3, #8
 801ef5c:	6812      	ldr	r2, [r2, #0]
 801ef5e:	2bff      	cmp	r3, #255	; 0xff
 801ef60:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ef64:	d120      	bne.n	801efa8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801ef66:	4b2b      	ldr	r3, [pc, #172]	; (801f014 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801ef68:	0950      	lsrs	r0, r2, #5
 801ef6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ef6e:	4033      	ands	r3, r6
 801ef70:	4318      	orrs	r0, r3
 801ef72:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ef76:	4302      	orrs	r2, r0
 801ef78:	800a      	strh	r2, [r1, #0]
 801ef7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ef7e:	2600      	movs	r6, #0
 801ef80:	e788      	b.n	801ee94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801ef82:	2400      	movs	r4, #0
 801ef84:	4626      	mov	r6, r4
 801ef86:	e799      	b.n	801eebc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ef88:	2400      	movs	r4, #0
 801ef8a:	e797      	b.n	801eebc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ef8c:	463c      	mov	r4, r7
 801ef8e:	e795      	b.n	801eebc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ef90:	2500      	movs	r5, #0
 801ef92:	e7ac      	b.n	801eeee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801ef94:	2300      	movs	r3, #0
 801ef96:	461d      	mov	r5, r3
 801ef98:	e7bd      	b.n	801ef16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ef9a:	4663      	mov	r3, ip
 801ef9c:	4665      	mov	r5, ip
 801ef9e:	e7ba      	b.n	801ef16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801efa0:	2300      	movs	r3, #0
 801efa2:	e7b8      	b.n	801ef16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801efa4:	463b      	mov	r3, r7
 801efa6:	e7b6      	b.n	801ef16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801efa8:	880d      	ldrh	r5, [r1, #0]
 801efaa:	b29f      	uxth	r7, r3
 801efac:	122c      	asrs	r4, r5, #8
 801efae:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801efb2:	43db      	mvns	r3, r3
 801efb4:	b2db      	uxtb	r3, r3
 801efb6:	fb10 f007 	smulbb	r0, r0, r7
 801efba:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801efbe:	fb04 0403 	mla	r4, r4, r3, r0
 801efc2:	b2f6      	uxtb	r6, r6
 801efc4:	10e8      	asrs	r0, r5, #3
 801efc6:	b2d2      	uxtb	r2, r2
 801efc8:	00ed      	lsls	r5, r5, #3
 801efca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801efce:	fb12 f207 	smulbb	r2, r2, r7
 801efd2:	fb16 f607 	smulbb	r6, r6, r7
 801efd6:	b2ed      	uxtb	r5, r5
 801efd8:	b2a4      	uxth	r4, r4
 801efda:	fb00 6603 	mla	r6, r0, r3, r6
 801efde:	fb05 2303 	mla	r3, r5, r3, r2
 801efe2:	b29a      	uxth	r2, r3
 801efe4:	1c63      	adds	r3, r4, #1
 801efe6:	b2b0      	uxth	r0, r6
 801efe8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801efec:	1c53      	adds	r3, r2, #1
 801efee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eff2:	1c42      	adds	r2, r0, #1
 801eff4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801eff8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801effc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f000:	0940      	lsrs	r0, r0, #5
 801f002:	4323      	orrs	r3, r4
 801f004:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f008:	4303      	orrs	r3, r0
 801f00a:	800b      	strh	r3, [r1, #0]
 801f00c:	e7b5      	b.n	801ef7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f00e:	bf00      	nop
 801f010:	20015498 	.word	0x20015498
 801f014:	00fff800 	.word	0x00fff800

0801f018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f01c:	b097      	sub	sp, #92	; 0x5c
 801f01e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f022:	9214      	str	r2, [sp, #80]	; 0x50
 801f024:	9309      	str	r3, [sp, #36]	; 0x24
 801f026:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f028:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f02c:	910d      	str	r1, [sp, #52]	; 0x34
 801f02e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f030:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f034:	9015      	str	r0, [sp, #84]	; 0x54
 801f036:	6850      	ldr	r0, [r2, #4]
 801f038:	6812      	ldr	r2, [r2, #0]
 801f03a:	fb00 1303 	mla	r3, r0, r3, r1
 801f03e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f042:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f044:	689b      	ldr	r3, [r3, #8]
 801f046:	3301      	adds	r3, #1
 801f048:	f023 0301 	bic.w	r3, r3, #1
 801f04c:	930a      	str	r3, [sp, #40]	; 0x28
 801f04e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f050:	681f      	ldr	r7, [r3, #0]
 801f052:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f054:	2b00      	cmp	r3, #0
 801f056:	dc03      	bgt.n	801f060 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f058:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f05a:	2b00      	cmp	r3, #0
 801f05c:	f340 8287 	ble.w	801f56e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f060:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f062:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f066:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f06a:	1e48      	subs	r0, r1, #1
 801f06c:	f102 3cff 	add.w	ip, r2, #4294967295
 801f070:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f072:	2b00      	cmp	r3, #0
 801f074:	f340 80c4 	ble.w	801f200 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f078:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f07c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f080:	d406      	bmi.n	801f090 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f082:	4586      	cmp	lr, r0
 801f084:	da04      	bge.n	801f090 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f086:	2b00      	cmp	r3, #0
 801f088:	db02      	blt.n	801f090 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f08a:	4563      	cmp	r3, ip
 801f08c:	f2c0 80b9 	blt.w	801f202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f090:	f11e 0e01 	adds.w	lr, lr, #1
 801f094:	f100 80aa 	bmi.w	801f1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f098:	4571      	cmp	r1, lr
 801f09a:	f2c0 80a7 	blt.w	801f1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f09e:	3301      	adds	r3, #1
 801f0a0:	f100 80a4 	bmi.w	801f1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f0a4:	429a      	cmp	r2, r3
 801f0a6:	f2c0 80a1 	blt.w	801f1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f0aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0ac:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f0b0:	930e      	str	r3, [sp, #56]	; 0x38
 801f0b2:	46c8      	mov	r8, r9
 801f0b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f0b6:	2b00      	cmp	r3, #0
 801f0b8:	f340 80c3 	ble.w	801f242 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f0bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f0be:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f0c2:	1423      	asrs	r3, r4, #16
 801f0c4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f0c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f0cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f0d0:	f100 814d 	bmi.w	801f36e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f0d4:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f0d8:	455b      	cmp	r3, fp
 801f0da:	f280 8148 	bge.w	801f36e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f0de:	2800      	cmp	r0, #0
 801f0e0:	f2c0 8145 	blt.w	801f36e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f0e4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f0e8:	4558      	cmp	r0, fp
 801f0ea:	f280 8140 	bge.w	801f36e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f0ee:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f0f0:	fb00 3305 	mla	r3, r0, r5, r3
 801f0f4:	0858      	lsrs	r0, r3, #1
 801f0f6:	07dd      	lsls	r5, r3, #31
 801f0f8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f0fc:	bf54      	ite	pl
 801f0fe:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f102:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f106:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f10a:	fa5f fc8c 	uxtb.w	ip, ip
 801f10e:	2a00      	cmp	r2, #0
 801f110:	f000 80db 	beq.w	801f2ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f114:	1c58      	adds	r0, r3, #1
 801f116:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f11a:	07c0      	lsls	r0, r0, #31
 801f11c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f120:	bf54      	ite	pl
 801f122:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f126:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f12a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f12e:	fa5f f08e 	uxtb.w	r0, lr
 801f132:	9010      	str	r0, [sp, #64]	; 0x40
 801f134:	b1c9      	cbz	r1, 801f16a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f136:	4453      	add	r3, sl
 801f138:	0858      	lsrs	r0, r3, #1
 801f13a:	07dd      	lsls	r5, r3, #31
 801f13c:	5c38      	ldrb	r0, [r7, r0]
 801f13e:	bf54      	ite	pl
 801f140:	f000 000f 	andpl.w	r0, r0, #15
 801f144:	1100      	asrmi	r0, r0, #4
 801f146:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f14a:	3301      	adds	r3, #1
 801f14c:	b2c0      	uxtb	r0, r0
 801f14e:	900b      	str	r0, [sp, #44]	; 0x2c
 801f150:	0858      	lsrs	r0, r3, #1
 801f152:	07dd      	lsls	r5, r3, #31
 801f154:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f158:	bf54      	ite	pl
 801f15a:	f00e 030f 	andpl.w	r3, lr, #15
 801f15e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f162:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f166:	b2db      	uxtb	r3, r3
 801f168:	9311      	str	r3, [sp, #68]	; 0x44
 801f16a:	b292      	uxth	r2, r2
 801f16c:	b289      	uxth	r1, r1
 801f16e:	fb02 f301 	mul.w	r3, r2, r1
 801f172:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f176:	0112      	lsls	r2, r2, #4
 801f178:	b289      	uxth	r1, r1
 801f17a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f17e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f180:	1ad2      	subs	r2, r2, r3
 801f182:	1a40      	subs	r0, r0, r1
 801f184:	b292      	uxth	r2, r2
 801f186:	436a      	muls	r2, r5
 801f188:	b280      	uxth	r0, r0
 801f18a:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f18e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f190:	fb01 c102 	mla	r1, r1, r2, ip
 801f194:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f196:	fb03 1302 	mla	r3, r3, r2, r1
 801f19a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f19e:	b1db      	cbz	r3, 801f1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f1a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f1a2:	4353      	muls	r3, r2
 801f1a4:	1c5a      	adds	r2, r3, #1
 801f1a6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f1aa:	4ac6      	ldr	r2, [pc, #792]	; (801f4c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f1ac:	121b      	asrs	r3, r3, #8
 801f1ae:	6812      	ldr	r2, [r2, #0]
 801f1b0:	2bff      	cmp	r3, #255	; 0xff
 801f1b2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f1b6:	f040 8099 	bne.w	801f2ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f1ba:	0953      	lsrs	r3, r2, #5
 801f1bc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f1c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f1c4:	f02c 0c07 	bic.w	ip, ip, #7
 801f1c8:	ea43 0c0c 	orr.w	ip, r3, ip
 801f1cc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f1d0:	ea4c 0202 	orr.w	r2, ip, r2
 801f1d4:	f8a8 2000 	strh.w	r2, [r8]
 801f1d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f1da:	441c      	add	r4, r3
 801f1dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f1de:	441e      	add	r6, r3
 801f1e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f1e2:	3b01      	subs	r3, #1
 801f1e4:	f108 0802 	add.w	r8, r8, #2
 801f1e8:	930e      	str	r3, [sp, #56]	; 0x38
 801f1ea:	e763      	b.n	801f0b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f1ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f1ee:	441c      	add	r4, r3
 801f1f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f1f2:	441e      	add	r6, r3
 801f1f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f1f6:	3b01      	subs	r3, #1
 801f1f8:	9309      	str	r3, [sp, #36]	; 0x24
 801f1fa:	f109 0902 	add.w	r9, r9, #2
 801f1fe:	e737      	b.n	801f070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f200:	d024      	beq.n	801f24c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f202:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f204:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f206:	3b01      	subs	r3, #1
 801f208:	fb00 4003 	mla	r0, r0, r3, r4
 801f20c:	1400      	asrs	r0, r0, #16
 801f20e:	f53f af4c 	bmi.w	801f0aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f212:	3901      	subs	r1, #1
 801f214:	4288      	cmp	r0, r1
 801f216:	f6bf af48 	bge.w	801f0aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f21a:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f21c:	fb01 6303 	mla	r3, r1, r3, r6
 801f220:	141b      	asrs	r3, r3, #16
 801f222:	f53f af42 	bmi.w	801f0aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f226:	3a01      	subs	r2, #1
 801f228:	4293      	cmp	r3, r2
 801f22a:	f6bf af3e 	bge.w	801f0aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f22e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f232:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f236:	930e      	str	r3, [sp, #56]	; 0x38
 801f238:	46c8      	mov	r8, r9
 801f23a:	f1bb 0f00 	cmp.w	fp, #0
 801f23e:	f300 80b7 	bgt.w	801f3b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f242:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f244:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f248:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f24c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f24e:	2b00      	cmp	r3, #0
 801f250:	f340 818d 	ble.w	801f56e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f254:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f258:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f25c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f260:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f262:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f266:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f26a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f26e:	eef0 6a62 	vmov.f32	s13, s5
 801f272:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f276:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f27a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f27e:	ee16 4a90 	vmov	r4, s13
 801f282:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f286:	eef0 6a43 	vmov.f32	s13, s6
 801f28a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f28e:	ee12 2a90 	vmov	r2, s5
 801f292:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f296:	fb92 f3f3 	sdiv	r3, r2, r3
 801f29a:	ee13 2a10 	vmov	r2, s6
 801f29e:	9323      	str	r3, [sp, #140]	; 0x8c
 801f2a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f2a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2a6:	9324      	str	r3, [sp, #144]	; 0x90
 801f2a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f2aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f2ac:	3b01      	subs	r3, #1
 801f2ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2b2:	930d      	str	r3, [sp, #52]	; 0x34
 801f2b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f2b6:	bf08      	it	eq
 801f2b8:	4613      	moveq	r3, r2
 801f2ba:	ee16 6a90 	vmov	r6, s13
 801f2be:	9309      	str	r3, [sp, #36]	; 0x24
 801f2c0:	eeb0 3a67 	vmov.f32	s6, s15
 801f2c4:	eef0 2a47 	vmov.f32	s5, s14
 801f2c8:	e6c3      	b.n	801f052 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f2ca:	2900      	cmp	r1, #0
 801f2cc:	f43f af4d 	beq.w	801f16a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f2d0:	eb0a 0003 	add.w	r0, sl, r3
 801f2d4:	0843      	lsrs	r3, r0, #1
 801f2d6:	07c0      	lsls	r0, r0, #31
 801f2d8:	5cfb      	ldrb	r3, [r7, r3]
 801f2da:	bf54      	ite	pl
 801f2dc:	f003 030f 	andpl.w	r3, r3, #15
 801f2e0:	111b      	asrmi	r3, r3, #4
 801f2e2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f2e6:	b2db      	uxtb	r3, r3
 801f2e8:	930b      	str	r3, [sp, #44]	; 0x2c
 801f2ea:	e73e      	b.n	801f16a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f2ec:	f8b8 e000 	ldrh.w	lr, [r8]
 801f2f0:	fa1f fb83 	uxth.w	fp, r3
 801f2f4:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f2f8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f2fc:	43db      	mvns	r3, r3
 801f2fe:	b2db      	uxtb	r3, r3
 801f300:	fb11 f10b 	smulbb	r1, r1, fp
 801f304:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f308:	fb00 1003 	mla	r0, r0, r3, r1
 801f30c:	fa5f fc8c 	uxtb.w	ip, ip
 801f310:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f314:	b2d2      	uxtb	r2, r2
 801f316:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f31a:	b280      	uxth	r0, r0
 801f31c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f320:	fb1c fc0b 	smulbb	ip, ip, fp
 801f324:	fa5f fe8e 	uxtb.w	lr, lr
 801f328:	fb12 fb0b 	smulbb	fp, r2, fp
 801f32c:	fb01 cc03 	mla	ip, r1, r3, ip
 801f330:	fb0e bb03 	mla	fp, lr, r3, fp
 801f334:	1c43      	adds	r3, r0, #1
 801f336:	fa1f fc8c 	uxth.w	ip, ip
 801f33a:	fa1f fb8b 	uxth.w	fp, fp
 801f33e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f342:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f346:	f10c 0101 	add.w	r1, ip, #1
 801f34a:	f10b 0001 	add.w	r0, fp, #1
 801f34e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f352:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f356:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f35a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f35e:	4318      	orrs	r0, r3
 801f360:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f364:	ea40 000c 	orr.w	r0, r0, ip
 801f368:	f8a8 0000 	strh.w	r0, [r8]
 801f36c:	e734      	b.n	801f1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f36e:	f113 0b01 	adds.w	fp, r3, #1
 801f372:	f53f af31 	bmi.w	801f1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f376:	45dc      	cmp	ip, fp
 801f378:	f6ff af2e 	blt.w	801f1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f37c:	f110 0b01 	adds.w	fp, r0, #1
 801f380:	f53f af2a 	bmi.w	801f1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f384:	45de      	cmp	lr, fp
 801f386:	f6ff af27 	blt.w	801f1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f38a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f38c:	9302      	str	r3, [sp, #8]
 801f38e:	fa0f f38e 	sxth.w	r3, lr
 801f392:	9301      	str	r3, [sp, #4]
 801f394:	fa0f f38c 	sxth.w	r3, ip
 801f398:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f39c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f3a0:	9300      	str	r3, [sp, #0]
 801f3a2:	463a      	mov	r2, r7
 801f3a4:	4653      	mov	r3, sl
 801f3a6:	4641      	mov	r1, r8
 801f3a8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f3aa:	f7ff fd4d 	bl	801ee48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f3ae:	e713      	b.n	801f1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f3b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f3b2:	1422      	asrs	r2, r4, #16
 801f3b4:	1433      	asrs	r3, r6, #16
 801f3b6:	fb05 2303 	mla	r3, r5, r3, r2
 801f3ba:	085a      	lsrs	r2, r3, #1
 801f3bc:	07dd      	lsls	r5, r3, #31
 801f3be:	5cba      	ldrb	r2, [r7, r2]
 801f3c0:	bf54      	ite	pl
 801f3c2:	f002 020f 	andpl.w	r2, r2, #15
 801f3c6:	1112      	asrmi	r2, r2, #4
 801f3c8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f3cc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f3d0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f3d4:	b2d2      	uxtb	r2, r2
 801f3d6:	2900      	cmp	r1, #0
 801f3d8:	d076      	beq.n	801f4c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f3da:	f103 0e01 	add.w	lr, r3, #1
 801f3de:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f3e2:	f01e 0f01 	tst.w	lr, #1
 801f3e6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f3ea:	bf0c      	ite	eq
 801f3ec:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f3f0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f3f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f3f8:	fa5f f58c 	uxtb.w	r5, ip
 801f3fc:	9512      	str	r5, [sp, #72]	; 0x48
 801f3fe:	b300      	cbz	r0, 801f442 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f400:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f402:	442b      	add	r3, r5
 801f404:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f408:	07dd      	lsls	r5, r3, #31
 801f40a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f40e:	bf54      	ite	pl
 801f410:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f414:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f418:	3301      	adds	r3, #1
 801f41a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f41e:	fa5f f58c 	uxtb.w	r5, ip
 801f422:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f426:	950c      	str	r5, [sp, #48]	; 0x30
 801f428:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f42c:	07dd      	lsls	r5, r3, #31
 801f42e:	bf54      	ite	pl
 801f430:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f434:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f438:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f43c:	fa5f f38c 	uxtb.w	r3, ip
 801f440:	9313      	str	r3, [sp, #76]	; 0x4c
 801f442:	b289      	uxth	r1, r1
 801f444:	b280      	uxth	r0, r0
 801f446:	fb01 f300 	mul.w	r3, r1, r0
 801f44a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f44e:	0109      	lsls	r1, r1, #4
 801f450:	b280      	uxth	r0, r0
 801f452:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f456:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f458:	1ac9      	subs	r1, r1, r3
 801f45a:	ebac 0c00 	sub.w	ip, ip, r0
 801f45e:	b289      	uxth	r1, r1
 801f460:	4369      	muls	r1, r5
 801f462:	fa1f fc8c 	uxth.w	ip, ip
 801f466:	fb02 120c 	mla	r2, r2, ip, r1
 801f46a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f46c:	fb00 2001 	mla	r0, r0, r1, r2
 801f470:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f472:	fb03 0302 	mla	r3, r3, r2, r0
 801f476:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f47a:	b1d3      	cbz	r3, 801f4b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f47c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f47e:	4353      	muls	r3, r2
 801f480:	1c5a      	adds	r2, r3, #1
 801f482:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f486:	4a0f      	ldr	r2, [pc, #60]	; (801f4c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f488:	121b      	asrs	r3, r3, #8
 801f48a:	6812      	ldr	r2, [r2, #0]
 801f48c:	2bff      	cmp	r3, #255	; 0xff
 801f48e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f492:	d12d      	bne.n	801f4f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f494:	0953      	lsrs	r3, r2, #5
 801f496:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f49a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f49e:	f02c 0c07 	bic.w	ip, ip, #7
 801f4a2:	ea43 0c0c 	orr.w	ip, r3, ip
 801f4a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f4aa:	ea4c 0202 	orr.w	r2, ip, r2
 801f4ae:	f8a8 2000 	strh.w	r2, [r8]
 801f4b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f4b4:	441c      	add	r4, r3
 801f4b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f4b8:	f108 0802 	add.w	r8, r8, #2
 801f4bc:	441e      	add	r6, r3
 801f4be:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f4c2:	e6ba      	b.n	801f23a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f4c4:	20015498 	.word	0x20015498
 801f4c8:	2800      	cmp	r0, #0
 801f4ca:	d0ba      	beq.n	801f442 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f4cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f4ce:	442b      	add	r3, r5
 801f4d0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f4d4:	07db      	lsls	r3, r3, #31
 801f4d6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f4da:	bf54      	ite	pl
 801f4dc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f4e0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f4e4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f4e8:	fa5f f38c 	uxtb.w	r3, ip
 801f4ec:	930c      	str	r3, [sp, #48]	; 0x30
 801f4ee:	e7a8      	b.n	801f442 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f4f0:	f8b8 e000 	ldrh.w	lr, [r8]
 801f4f4:	fa1f fa83 	uxth.w	sl, r3
 801f4f8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f4fc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f500:	43db      	mvns	r3, r3
 801f502:	b2db      	uxtb	r3, r3
 801f504:	fb11 f10a 	smulbb	r1, r1, sl
 801f508:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f50c:	fb00 1003 	mla	r0, r0, r3, r1
 801f510:	b2d2      	uxtb	r2, r2
 801f512:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f516:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f51a:	fa5f fe8e 	uxtb.w	lr, lr
 801f51e:	fb12 f20a 	smulbb	r2, r2, sl
 801f522:	fb0e 2203 	mla	r2, lr, r3, r2
 801f526:	fa5f fc8c 	uxtb.w	ip, ip
 801f52a:	b280      	uxth	r0, r0
 801f52c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f530:	b292      	uxth	r2, r2
 801f532:	fb1c fc0a 	smulbb	ip, ip, sl
 801f536:	fb01 cc03 	mla	ip, r1, r3, ip
 801f53a:	1c43      	adds	r3, r0, #1
 801f53c:	1c51      	adds	r1, r2, #1
 801f53e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f542:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f546:	fa1f fc8c 	uxth.w	ip, ip
 801f54a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f54e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f552:	4308      	orrs	r0, r1
 801f554:	f10c 0101 	add.w	r1, ip, #1
 801f558:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f55c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f560:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f564:	ea40 000c 	orr.w	r0, r0, ip
 801f568:	f8a8 0000 	strh.w	r0, [r8]
 801f56c:	e7a1      	b.n	801f4b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f56e:	b017      	add	sp, #92	; 0x5c
 801f570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f574 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f574:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f578:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f57c:	2d00      	cmp	r5, #0
 801f57e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f582:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f586:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f58a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f58e:	fb05 0e03 	mla	lr, r5, r3, r0
 801f592:	f2c0 80b0 	blt.w	801f6f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f596:	45a9      	cmp	r9, r5
 801f598:	f340 80ad 	ble.w	801f6f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f59c:	2800      	cmp	r0, #0
 801f59e:	f2c0 80a8 	blt.w	801f6f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f5a2:	4580      	cmp	r8, r0
 801f5a4:	f340 80a5 	ble.w	801f6f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f5a8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f5ac:	f01e 0f01 	tst.w	lr, #1
 801f5b0:	5d16      	ldrb	r6, [r2, r4]
 801f5b2:	bf0c      	ite	eq
 801f5b4:	f006 060f 	andeq.w	r6, r6, #15
 801f5b8:	1136      	asrne	r6, r6, #4
 801f5ba:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f5be:	b2f6      	uxtb	r6, r6
 801f5c0:	1c44      	adds	r4, r0, #1
 801f5c2:	f100 809b 	bmi.w	801f6fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f5c6:	45a0      	cmp	r8, r4
 801f5c8:	f340 8098 	ble.w	801f6fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f5cc:	2f00      	cmp	r7, #0
 801f5ce:	f000 8097 	beq.w	801f700 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f5d2:	f10e 0a01 	add.w	sl, lr, #1
 801f5d6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f5da:	f01a 0f01 	tst.w	sl, #1
 801f5de:	5d14      	ldrb	r4, [r2, r4]
 801f5e0:	bf0c      	ite	eq
 801f5e2:	f004 040f 	andeq.w	r4, r4, #15
 801f5e6:	1124      	asrne	r4, r4, #4
 801f5e8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f5ec:	b2e4      	uxtb	r4, r4
 801f5ee:	3501      	adds	r5, #1
 801f5f0:	f100 808a 	bmi.w	801f708 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f5f4:	45a9      	cmp	r9, r5
 801f5f6:	f340 8087 	ble.w	801f708 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f5fa:	f1bc 0f00 	cmp.w	ip, #0
 801f5fe:	f000 8086 	beq.w	801f70e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f602:	2800      	cmp	r0, #0
 801f604:	db7e      	blt.n	801f704 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f606:	4580      	cmp	r8, r0
 801f608:	dd7c      	ble.n	801f704 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f60a:	eb03 090e 	add.w	r9, r3, lr
 801f60e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f612:	f019 0f01 	tst.w	r9, #1
 801f616:	5d55      	ldrb	r5, [r2, r5]
 801f618:	bf0c      	ite	eq
 801f61a:	f005 050f 	andeq.w	r5, r5, #15
 801f61e:	112d      	asrne	r5, r5, #4
 801f620:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f624:	b2ed      	uxtb	r5, r5
 801f626:	3001      	adds	r0, #1
 801f628:	d474      	bmi.n	801f714 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f62a:	4580      	cmp	r8, r0
 801f62c:	dd72      	ble.n	801f714 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f62e:	2f00      	cmp	r7, #0
 801f630:	d072      	beq.n	801f718 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f632:	3301      	adds	r3, #1
 801f634:	449e      	add	lr, r3
 801f636:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f63a:	f01e 0f01 	tst.w	lr, #1
 801f63e:	5cd0      	ldrb	r0, [r2, r3]
 801f640:	bf0c      	ite	eq
 801f642:	f000 000f 	andeq.w	r0, r0, #15
 801f646:	1100      	asrne	r0, r0, #4
 801f648:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f64c:	b2c3      	uxtb	r3, r0
 801f64e:	b2ba      	uxth	r2, r7
 801f650:	fa1f fc8c 	uxth.w	ip, ip
 801f654:	fb02 f00c 	mul.w	r0, r2, ip
 801f658:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f65c:	0112      	lsls	r2, r2, #4
 801f65e:	fa1f fc8c 	uxth.w	ip, ip
 801f662:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f666:	1a12      	subs	r2, r2, r0
 801f668:	eba7 070c 	sub.w	r7, r7, ip
 801f66c:	b292      	uxth	r2, r2
 801f66e:	b2bf      	uxth	r7, r7
 801f670:	4362      	muls	r2, r4
 801f672:	fb06 2207 	mla	r2, r6, r7, r2
 801f676:	fb0c 2505 	mla	r5, ip, r5, r2
 801f67a:	fb00 5303 	mla	r3, r0, r3, r5
 801f67e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f682:	b3a3      	cbz	r3, 801f6ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f684:	4a25      	ldr	r2, [pc, #148]	; (801f71c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f686:	880e      	ldrh	r6, [r1, #0]
 801f688:	6815      	ldr	r5, [r2, #0]
 801f68a:	1234      	asrs	r4, r6, #8
 801f68c:	b29a      	uxth	r2, r3
 801f68e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f692:	43db      	mvns	r3, r3
 801f694:	b2db      	uxtb	r3, r3
 801f696:	fb10 f002 	smulbb	r0, r0, r2
 801f69a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f69e:	fb04 0403 	mla	r4, r4, r3, r0
 801f6a2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f6a6:	10f0      	asrs	r0, r6, #3
 801f6a8:	b2ed      	uxtb	r5, r5
 801f6aa:	00f6      	lsls	r6, r6, #3
 801f6ac:	fb17 f702 	smulbb	r7, r7, r2
 801f6b0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f6b4:	fb15 f202 	smulbb	r2, r5, r2
 801f6b8:	b2f6      	uxtb	r6, r6
 801f6ba:	b2a4      	uxth	r4, r4
 801f6bc:	fb00 7003 	mla	r0, r0, r3, r7
 801f6c0:	fb06 2303 	mla	r3, r6, r3, r2
 801f6c4:	b29a      	uxth	r2, r3
 801f6c6:	1c63      	adds	r3, r4, #1
 801f6c8:	b280      	uxth	r0, r0
 801f6ca:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f6ce:	1c53      	adds	r3, r2, #1
 801f6d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f6d4:	1c42      	adds	r2, r0, #1
 801f6d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f6da:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f6de:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f6e2:	0940      	lsrs	r0, r0, #5
 801f6e4:	4323      	orrs	r3, r4
 801f6e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f6ea:	4303      	orrs	r3, r0
 801f6ec:	800b      	strh	r3, [r1, #0]
 801f6ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f6f2:	2600      	movs	r6, #0
 801f6f4:	e764      	b.n	801f5c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f6f6:	2400      	movs	r4, #0
 801f6f8:	4626      	mov	r6, r4
 801f6fa:	e778      	b.n	801f5ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f6fc:	2400      	movs	r4, #0
 801f6fe:	e776      	b.n	801f5ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f700:	463c      	mov	r4, r7
 801f702:	e774      	b.n	801f5ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f704:	2500      	movs	r5, #0
 801f706:	e78e      	b.n	801f626 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f708:	2300      	movs	r3, #0
 801f70a:	461d      	mov	r5, r3
 801f70c:	e79f      	b.n	801f64e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f70e:	4663      	mov	r3, ip
 801f710:	4665      	mov	r5, ip
 801f712:	e79c      	b.n	801f64e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f714:	2300      	movs	r3, #0
 801f716:	e79a      	b.n	801f64e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f718:	463b      	mov	r3, r7
 801f71a:	e798      	b.n	801f64e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f71c:	20015498 	.word	0x20015498

0801f720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f724:	b093      	sub	sp, #76	; 0x4c
 801f726:	461d      	mov	r5, r3
 801f728:	920c      	str	r2, [sp, #48]	; 0x30
 801f72a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f72c:	9107      	str	r1, [sp, #28]
 801f72e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f732:	9011      	str	r0, [sp, #68]	; 0x44
 801f734:	6850      	ldr	r0, [r2, #4]
 801f736:	6812      	ldr	r2, [r2, #0]
 801f738:	fb00 1303 	mla	r3, r0, r3, r1
 801f73c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f740:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f742:	689b      	ldr	r3, [r3, #8]
 801f744:	3301      	adds	r3, #1
 801f746:	f023 0301 	bic.w	r3, r3, #1
 801f74a:	9306      	str	r3, [sp, #24]
 801f74c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f74e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f752:	681f      	ldr	r7, [r3, #0]
 801f754:	9b07      	ldr	r3, [sp, #28]
 801f756:	2b00      	cmp	r3, #0
 801f758:	dc03      	bgt.n	801f762 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f75a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f75c:	2b00      	cmp	r3, #0
 801f75e:	f340 8267 	ble.w	801fc30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f762:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f764:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f768:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f76c:	1e48      	subs	r0, r1, #1
 801f76e:	f102 3cff 	add.w	ip, r2, #4294967295
 801f772:	2d00      	cmp	r5, #0
 801f774:	f340 80b8 	ble.w	801f8e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f778:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f77c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f780:	d406      	bmi.n	801f790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f782:	4586      	cmp	lr, r0
 801f784:	da04      	bge.n	801f790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f786:	2b00      	cmp	r3, #0
 801f788:	db02      	blt.n	801f790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f78a:	4563      	cmp	r3, ip
 801f78c:	f2c0 80ad 	blt.w	801f8ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801f790:	f11e 0e01 	adds.w	lr, lr, #1
 801f794:	f100 80a0 	bmi.w	801f8d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f798:	4571      	cmp	r1, lr
 801f79a:	f2c0 809d 	blt.w	801f8d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f79e:	3301      	adds	r3, #1
 801f7a0:	f100 809a 	bmi.w	801f8d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f7a4:	429a      	cmp	r2, r3
 801f7a6:	f2c0 8097 	blt.w	801f8d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f7aa:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801f7ae:	9509      	str	r5, [sp, #36]	; 0x24
 801f7b0:	46c8      	mov	r8, r9
 801f7b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7b4:	2b00      	cmp	r3, #0
 801f7b6:	f340 80b6 	ble.w	801f926 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801f7ba:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f7be:	9308      	str	r3, [sp, #32]
 801f7c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f7c2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f7c6:	1423      	asrs	r3, r4, #16
 801f7c8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f7cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f7d0:	f100 813e 	bmi.w	801fa50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f7d4:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f7d8:	455b      	cmp	r3, fp
 801f7da:	f280 8139 	bge.w	801fa50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f7de:	2800      	cmp	r0, #0
 801f7e0:	f2c0 8136 	blt.w	801fa50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f7e4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f7e8:	4558      	cmp	r0, fp
 801f7ea:	f280 8131 	bge.w	801fa50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f7ee:	9a06      	ldr	r2, [sp, #24]
 801f7f0:	fb00 3302 	mla	r3, r0, r2, r3
 801f7f4:	0858      	lsrs	r0, r3, #1
 801f7f6:	07da      	lsls	r2, r3, #31
 801f7f8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f7fc:	9a08      	ldr	r2, [sp, #32]
 801f7fe:	bf54      	ite	pl
 801f800:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f804:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f808:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f80c:	fa5f fc8c 	uxtb.w	ip, ip
 801f810:	2a00      	cmp	r2, #0
 801f812:	f000 80cb 	beq.w	801f9ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f816:	1c58      	adds	r0, r3, #1
 801f818:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f81c:	07c0      	lsls	r0, r0, #31
 801f81e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f822:	bf54      	ite	pl
 801f824:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f828:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f82c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f830:	fa5f fe8e 	uxtb.w	lr, lr
 801f834:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801f838:	b1b9      	cbz	r1, 801f86a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f83a:	4453      	add	r3, sl
 801f83c:	0858      	lsrs	r0, r3, #1
 801f83e:	07da      	lsls	r2, r3, #31
 801f840:	5c38      	ldrb	r0, [r7, r0]
 801f842:	bf54      	ite	pl
 801f844:	f000 000f 	andpl.w	r0, r0, #15
 801f848:	1100      	asrmi	r0, r0, #4
 801f84a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f84e:	b2c0      	uxtb	r0, r0
 801f850:	900a      	str	r0, [sp, #40]	; 0x28
 801f852:	1c58      	adds	r0, r3, #1
 801f854:	0843      	lsrs	r3, r0, #1
 801f856:	07c2      	lsls	r2, r0, #31
 801f858:	5cfb      	ldrb	r3, [r7, r3]
 801f85a:	bf54      	ite	pl
 801f85c:	f003 030f 	andpl.w	r3, r3, #15
 801f860:	111b      	asrmi	r3, r3, #4
 801f862:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f866:	b2db      	uxtb	r3, r3
 801f868:	930e      	str	r3, [sp, #56]	; 0x38
 801f86a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f86e:	b289      	uxth	r1, r1
 801f870:	fb02 f301 	mul.w	r3, r2, r1
 801f874:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f878:	0112      	lsls	r2, r2, #4
 801f87a:	b289      	uxth	r1, r1
 801f87c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f880:	1a40      	subs	r0, r0, r1
 801f882:	fa1f fe80 	uxth.w	lr, r0
 801f886:	1ad2      	subs	r2, r2, r3
 801f888:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f88a:	b292      	uxth	r2, r2
 801f88c:	4342      	muls	r2, r0
 801f88e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801f892:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f894:	fb01 c102 	mla	r1, r1, r2, ip
 801f898:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f89a:	fb03 1302 	mla	r3, r3, r2, r1
 801f89e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8a2:	2bff      	cmp	r3, #255	; 0xff
 801f8a4:	f040 8093 	bne.w	801f9ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f8a8:	4bbe      	ldr	r3, [pc, #760]	; (801fba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f8aa:	681a      	ldr	r2, [r3, #0]
 801f8ac:	4bbe      	ldr	r3, [pc, #760]	; (801fba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f8ae:	0951      	lsrs	r1, r2, #5
 801f8b0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f8b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f8b8:	430b      	orrs	r3, r1
 801f8ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f8be:	4313      	orrs	r3, r2
 801f8c0:	f8a8 3000 	strh.w	r3, [r8]
 801f8c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f8c6:	441c      	add	r4, r3
 801f8c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8ca:	441e      	add	r6, r3
 801f8cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8ce:	3b01      	subs	r3, #1
 801f8d0:	f108 0802 	add.w	r8, r8, #2
 801f8d4:	9309      	str	r3, [sp, #36]	; 0x24
 801f8d6:	e76c      	b.n	801f7b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f8da:	441c      	add	r4, r3
 801f8dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8de:	3d01      	subs	r5, #1
 801f8e0:	441e      	add	r6, r3
 801f8e2:	f109 0902 	add.w	r9, r9, #2
 801f8e6:	e744      	b.n	801f772 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f8e8:	d021      	beq.n	801f92e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f8ea:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f8ec:	1e6b      	subs	r3, r5, #1
 801f8ee:	fb00 4003 	mla	r0, r0, r3, r4
 801f8f2:	1400      	asrs	r0, r0, #16
 801f8f4:	f53f af59 	bmi.w	801f7aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f8f8:	3901      	subs	r1, #1
 801f8fa:	4288      	cmp	r0, r1
 801f8fc:	f6bf af55 	bge.w	801f7aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f900:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f902:	fb01 6303 	mla	r3, r1, r3, r6
 801f906:	141b      	asrs	r3, r3, #16
 801f908:	f53f af4f 	bmi.w	801f7aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f90c:	3a01      	subs	r2, #1
 801f90e:	4293      	cmp	r3, r2
 801f910:	f6bf af4b 	bge.w	801f7aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f914:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801f918:	9308      	str	r3, [sp, #32]
 801f91a:	46a8      	mov	r8, r5
 801f91c:	46ce      	mov	lr, r9
 801f91e:	f1b8 0f00 	cmp.w	r8, #0
 801f922:	f300 80b5 	bgt.w	801fa90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f926:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f92a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f92e:	9b07      	ldr	r3, [sp, #28]
 801f930:	2b00      	cmp	r3, #0
 801f932:	f340 817d 	ble.w	801fc30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f936:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f93a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f93e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f942:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f944:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f948:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f94c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f950:	eef0 6a62 	vmov.f32	s13, s5
 801f954:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f958:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f95c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f960:	ee16 4a90 	vmov	r4, s13
 801f964:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f968:	eef0 6a43 	vmov.f32	s13, s6
 801f96c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f970:	ee12 2a90 	vmov	r2, s5
 801f974:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f978:	fb92 f3f3 	sdiv	r3, r2, r3
 801f97c:	ee13 2a10 	vmov	r2, s6
 801f980:	931f      	str	r3, [sp, #124]	; 0x7c
 801f982:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f984:	fb92 f3f3 	sdiv	r3, r2, r3
 801f988:	9320      	str	r3, [sp, #128]	; 0x80
 801f98a:	9b07      	ldr	r3, [sp, #28]
 801f98c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f98e:	3b01      	subs	r3, #1
 801f990:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f994:	9307      	str	r3, [sp, #28]
 801f996:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f998:	ee16 6a90 	vmov	r6, s13
 801f99c:	bf14      	ite	ne
 801f99e:	461d      	movne	r5, r3
 801f9a0:	4615      	moveq	r5, r2
 801f9a2:	eeb0 3a67 	vmov.f32	s6, s15
 801f9a6:	eef0 2a47 	vmov.f32	s5, s14
 801f9aa:	e6d3      	b.n	801f754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f9ac:	2900      	cmp	r1, #0
 801f9ae:	f43f af5c 	beq.w	801f86a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f9b2:	eb0a 0003 	add.w	r0, sl, r3
 801f9b6:	0843      	lsrs	r3, r0, #1
 801f9b8:	07c0      	lsls	r0, r0, #31
 801f9ba:	5cfb      	ldrb	r3, [r7, r3]
 801f9bc:	bf54      	ite	pl
 801f9be:	f003 030f 	andpl.w	r3, r3, #15
 801f9c2:	111b      	asrmi	r3, r3, #4
 801f9c4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f9c8:	b2db      	uxtb	r3, r3
 801f9ca:	930a      	str	r3, [sp, #40]	; 0x28
 801f9cc:	e74d      	b.n	801f86a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f9ce:	2b00      	cmp	r3, #0
 801f9d0:	f43f af78 	beq.w	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f9d4:	4a73      	ldr	r2, [pc, #460]	; (801fba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f9d6:	f8b8 c000 	ldrh.w	ip, [r8]
 801f9da:	6810      	ldr	r0, [r2, #0]
 801f9dc:	fa1f fe83 	uxth.w	lr, r3
 801f9e0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801f9e4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801f9e8:	43db      	mvns	r3, r3
 801f9ea:	b2db      	uxtb	r3, r3
 801f9ec:	fb12 f20e 	smulbb	r2, r2, lr
 801f9f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f9f4:	fb01 2103 	mla	r1, r1, r3, r2
 801f9f8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801f9fc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fa00:	b2c0      	uxtb	r0, r0
 801fa02:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fa06:	fb1b fb0e 	smulbb	fp, fp, lr
 801fa0a:	b289      	uxth	r1, r1
 801fa0c:	fb10 fe0e 	smulbb	lr, r0, lr
 801fa10:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fa14:	fa5f fc8c 	uxtb.w	ip, ip
 801fa18:	fb02 b203 	mla	r2, r2, r3, fp
 801fa1c:	1c48      	adds	r0, r1, #1
 801fa1e:	fb0c e303 	mla	r3, ip, r3, lr
 801fa22:	b292      	uxth	r2, r2
 801fa24:	b29b      	uxth	r3, r3
 801fa26:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fa2a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fa2e:	f102 0b01 	add.w	fp, r2, #1
 801fa32:	1c59      	adds	r1, r3, #1
 801fa34:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fa38:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fa3c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fa40:	0952      	lsrs	r2, r2, #5
 801fa42:	4301      	orrs	r1, r0
 801fa44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fa48:	4311      	orrs	r1, r2
 801fa4a:	f8a8 1000 	strh.w	r1, [r8]
 801fa4e:	e739      	b.n	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa50:	f113 0b01 	adds.w	fp, r3, #1
 801fa54:	f53f af36 	bmi.w	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa58:	45dc      	cmp	ip, fp
 801fa5a:	f6ff af33 	blt.w	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa5e:	f110 0b01 	adds.w	fp, r0, #1
 801fa62:	f53f af2f 	bmi.w	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa66:	45de      	cmp	lr, fp
 801fa68:	f6ff af2c 	blt.w	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa6c:	9a08      	ldr	r2, [sp, #32]
 801fa6e:	9302      	str	r3, [sp, #8]
 801fa70:	fa0f f38e 	sxth.w	r3, lr
 801fa74:	9301      	str	r3, [sp, #4]
 801fa76:	fa0f f38c 	sxth.w	r3, ip
 801fa7a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fa7e:	9105      	str	r1, [sp, #20]
 801fa80:	9300      	str	r3, [sp, #0]
 801fa82:	463a      	mov	r2, r7
 801fa84:	4653      	mov	r3, sl
 801fa86:	4641      	mov	r1, r8
 801fa88:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fa8a:	f7ff fd73 	bl	801f574 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fa8e:	e719      	b.n	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa90:	9906      	ldr	r1, [sp, #24]
 801fa92:	1422      	asrs	r2, r4, #16
 801fa94:	1433      	asrs	r3, r6, #16
 801fa96:	fb01 2303 	mla	r3, r1, r3, r2
 801fa9a:	085a      	lsrs	r2, r3, #1
 801fa9c:	07d9      	lsls	r1, r3, #31
 801fa9e:	5cba      	ldrb	r2, [r7, r2]
 801faa0:	bf54      	ite	pl
 801faa2:	f002 020f 	andpl.w	r2, r2, #15
 801faa6:	1112      	asrmi	r2, r2, #4
 801faa8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801faac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fab0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fab4:	b2d2      	uxtb	r2, r2
 801fab6:	2800      	cmp	r0, #0
 801fab8:	d062      	beq.n	801fb80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801faba:	f103 0a01 	add.w	sl, r3, #1
 801fabe:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fac2:	f01a 0f01 	tst.w	sl, #1
 801fac6:	5c79      	ldrb	r1, [r7, r1]
 801fac8:	bf0c      	ite	eq
 801faca:	f001 010f 	andeq.w	r1, r1, #15
 801face:	1109      	asrne	r1, r1, #4
 801fad0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fad4:	b2c9      	uxtb	r1, r1
 801fad6:	910f      	str	r1, [sp, #60]	; 0x3c
 801fad8:	f1bc 0f00 	cmp.w	ip, #0
 801fadc:	d019      	beq.n	801fb12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fade:	9908      	ldr	r1, [sp, #32]
 801fae0:	440b      	add	r3, r1
 801fae2:	0859      	lsrs	r1, r3, #1
 801fae4:	f013 0f01 	tst.w	r3, #1
 801fae8:	5c79      	ldrb	r1, [r7, r1]
 801faea:	bf0c      	ite	eq
 801faec:	f001 010f 	andeq.w	r1, r1, #15
 801faf0:	1109      	asrne	r1, r1, #4
 801faf2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801faf6:	b2c9      	uxtb	r1, r1
 801faf8:	3301      	adds	r3, #1
 801fafa:	910b      	str	r1, [sp, #44]	; 0x2c
 801fafc:	0859      	lsrs	r1, r3, #1
 801fafe:	07db      	lsls	r3, r3, #31
 801fb00:	5c79      	ldrb	r1, [r7, r1]
 801fb02:	bf54      	ite	pl
 801fb04:	f001 010f 	andpl.w	r1, r1, #15
 801fb08:	1109      	asrmi	r1, r1, #4
 801fb0a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fb0e:	b2c9      	uxtb	r1, r1
 801fb10:	9110      	str	r1, [sp, #64]	; 0x40
 801fb12:	b280      	uxth	r0, r0
 801fb14:	fa1f fc8c 	uxth.w	ip, ip
 801fb18:	fb00 f30c 	mul.w	r3, r0, ip
 801fb1c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fb20:	0100      	lsls	r0, r0, #4
 801fb22:	fa1f fc8c 	uxth.w	ip, ip
 801fb26:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fb2a:	eba1 010c 	sub.w	r1, r1, ip
 801fb2e:	fa1f fa81 	uxth.w	sl, r1
 801fb32:	1ac0      	subs	r0, r0, r3
 801fb34:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fb36:	b280      	uxth	r0, r0
 801fb38:	4348      	muls	r0, r1
 801fb3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fb3c:	fb02 020a 	mla	r2, r2, sl, r0
 801fb40:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fb44:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fb46:	fb03 c302 	mla	r3, r3, r2, ip
 801fb4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb4e:	2bff      	cmp	r3, #255	; 0xff
 801fb50:	d12c      	bne.n	801fbac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fb52:	4b14      	ldr	r3, [pc, #80]	; (801fba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fb54:	681a      	ldr	r2, [r3, #0]
 801fb56:	4b14      	ldr	r3, [pc, #80]	; (801fba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fb58:	0951      	lsrs	r1, r2, #5
 801fb5a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fb5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fb62:	430b      	orrs	r3, r1
 801fb64:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb68:	4313      	orrs	r3, r2
 801fb6a:	f8ae 3000 	strh.w	r3, [lr]
 801fb6e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb70:	441c      	add	r4, r3
 801fb72:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb74:	f10e 0e02 	add.w	lr, lr, #2
 801fb78:	441e      	add	r6, r3
 801fb7a:	f108 38ff 	add.w	r8, r8, #4294967295
 801fb7e:	e6ce      	b.n	801f91e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fb80:	f1bc 0f00 	cmp.w	ip, #0
 801fb84:	d0c5      	beq.n	801fb12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fb86:	9908      	ldr	r1, [sp, #32]
 801fb88:	440b      	add	r3, r1
 801fb8a:	0859      	lsrs	r1, r3, #1
 801fb8c:	07db      	lsls	r3, r3, #31
 801fb8e:	5c79      	ldrb	r1, [r7, r1]
 801fb90:	bf54      	ite	pl
 801fb92:	f001 010f 	andpl.w	r1, r1, #15
 801fb96:	1109      	asrmi	r1, r1, #4
 801fb98:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fb9c:	b2c9      	uxtb	r1, r1
 801fb9e:	910b      	str	r1, [sp, #44]	; 0x2c
 801fba0:	e7b7      	b.n	801fb12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fba2:	bf00      	nop
 801fba4:	20015498 	.word	0x20015498
 801fba8:	fffff800 	.word	0xfffff800
 801fbac:	2b00      	cmp	r3, #0
 801fbae:	d0de      	beq.n	801fb6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fbb0:	4a21      	ldr	r2, [pc, #132]	; (801fc38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fbb2:	f8be c000 	ldrh.w	ip, [lr]
 801fbb6:	6810      	ldr	r0, [r2, #0]
 801fbb8:	fa1f fa83 	uxth.w	sl, r3
 801fbbc:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fbc0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fbc4:	43db      	mvns	r3, r3
 801fbc6:	b2db      	uxtb	r3, r3
 801fbc8:	fb12 f20a 	smulbb	r2, r2, sl
 801fbcc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fbd0:	fb01 2103 	mla	r1, r1, r3, r2
 801fbd4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fbd8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fbdc:	b2c0      	uxtb	r0, r0
 801fbde:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fbe2:	fa5f fc8c 	uxtb.w	ip, ip
 801fbe6:	fb10 f00a 	smulbb	r0, r0, sl
 801fbea:	fb0c 0003 	mla	r0, ip, r3, r0
 801fbee:	b289      	uxth	r1, r1
 801fbf0:	fb1b fb0a 	smulbb	fp, fp, sl
 801fbf4:	b280      	uxth	r0, r0
 801fbf6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fbfa:	fb02 b203 	mla	r2, r2, r3, fp
 801fbfe:	1c4b      	adds	r3, r1, #1
 801fc00:	f100 0b01 	add.w	fp, r0, #1
 801fc04:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fc08:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fc0c:	b292      	uxth	r2, r2
 801fc0e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fc12:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fc16:	ea4b 0101 	orr.w	r1, fp, r1
 801fc1a:	f102 0b01 	add.w	fp, r2, #1
 801fc1e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fc22:	0952      	lsrs	r2, r2, #5
 801fc24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fc28:	4311      	orrs	r1, r2
 801fc2a:	f8ae 1000 	strh.w	r1, [lr]
 801fc2e:	e79e      	b.n	801fb6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fc30:	b013      	add	sp, #76	; 0x4c
 801fc32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc36:	bf00      	nop
 801fc38:	20015498 	.word	0x20015498

0801fc3c <CRC_Lock>:
 801fc3c:	b530      	push	{r4, r5, lr}
 801fc3e:	4a20      	ldr	r2, [pc, #128]	; (801fcc0 <CRC_Lock+0x84>)
 801fc40:	6813      	ldr	r3, [r2, #0]
 801fc42:	f023 0301 	bic.w	r3, r3, #1
 801fc46:	6013      	str	r3, [r2, #0]
 801fc48:	4b1e      	ldr	r3, [pc, #120]	; (801fcc4 <CRC_Lock+0x88>)
 801fc4a:	681a      	ldr	r2, [r3, #0]
 801fc4c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801fc50:	4022      	ands	r2, r4
 801fc52:	f24c 2540 	movw	r5, #49728	; 0xc240
 801fc56:	42aa      	cmp	r2, r5
 801fc58:	d005      	beq.n	801fc66 <CRC_Lock+0x2a>
 801fc5a:	681b      	ldr	r3, [r3, #0]
 801fc5c:	f24c 2270 	movw	r2, #49776	; 0xc270
 801fc60:	4023      	ands	r3, r4
 801fc62:	4293      	cmp	r3, r2
 801fc64:	d124      	bne.n	801fcb0 <CRC_Lock+0x74>
 801fc66:	4b18      	ldr	r3, [pc, #96]	; (801fcc8 <CRC_Lock+0x8c>)
 801fc68:	681b      	ldr	r3, [r3, #0]
 801fc6a:	bb0b      	cbnz	r3, 801fcb0 <CRC_Lock+0x74>
 801fc6c:	4b17      	ldr	r3, [pc, #92]	; (801fccc <CRC_Lock+0x90>)
 801fc6e:	681a      	ldr	r2, [r3, #0]
 801fc70:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fc74:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801fc78:	d00d      	beq.n	801fc96 <CRC_Lock+0x5a>
 801fc7a:	681a      	ldr	r2, [r3, #0]
 801fc7c:	f240 4483 	movw	r4, #1155	; 0x483
 801fc80:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fc84:	42a2      	cmp	r2, r4
 801fc86:	d006      	beq.n	801fc96 <CRC_Lock+0x5a>
 801fc88:	681b      	ldr	r3, [r3, #0]
 801fc8a:	f240 4285 	movw	r2, #1157	; 0x485
 801fc8e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801fc92:	4293      	cmp	r3, r2
 801fc94:	d10c      	bne.n	801fcb0 <CRC_Lock+0x74>
 801fc96:	4b0e      	ldr	r3, [pc, #56]	; (801fcd0 <CRC_Lock+0x94>)
 801fc98:	2201      	movs	r2, #1
 801fc9a:	601a      	str	r2, [r3, #0]
 801fc9c:	681a      	ldr	r2, [r3, #0]
 801fc9e:	2a00      	cmp	r2, #0
 801fca0:	d1fc      	bne.n	801fc9c <CRC_Lock+0x60>
 801fca2:	4b0c      	ldr	r3, [pc, #48]	; (801fcd4 <CRC_Lock+0x98>)
 801fca4:	6018      	str	r0, [r3, #0]
 801fca6:	6818      	ldr	r0, [r3, #0]
 801fca8:	1a43      	subs	r3, r0, r1
 801fcaa:	4258      	negs	r0, r3
 801fcac:	4158      	adcs	r0, r3
 801fcae:	bd30      	pop	{r4, r5, pc}
 801fcb0:	4b09      	ldr	r3, [pc, #36]	; (801fcd8 <CRC_Lock+0x9c>)
 801fcb2:	2201      	movs	r2, #1
 801fcb4:	601a      	str	r2, [r3, #0]
 801fcb6:	681a      	ldr	r2, [r3, #0]
 801fcb8:	2a00      	cmp	r2, #0
 801fcba:	d1fc      	bne.n	801fcb6 <CRC_Lock+0x7a>
 801fcbc:	4b07      	ldr	r3, [pc, #28]	; (801fcdc <CRC_Lock+0xa0>)
 801fcbe:	e7f1      	b.n	801fca4 <CRC_Lock+0x68>
 801fcc0:	e0002000 	.word	0xe0002000
 801fcc4:	e000ed00 	.word	0xe000ed00
 801fcc8:	e0042000 	.word	0xe0042000
 801fccc:	5c001000 	.word	0x5c001000
 801fcd0:	58024c08 	.word	0x58024c08
 801fcd4:	58024c00 	.word	0x58024c00
 801fcd8:	40023008 	.word	0x40023008
 801fcdc:	40023000 	.word	0x40023000

0801fce0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801fce0:	6101      	str	r1, [r0, #16]
 801fce2:	4770      	bx	lr

0801fce4 <_ZN8touchgfx8Gestures4tickEv>:
 801fce4:	7b83      	ldrb	r3, [r0, #14]
 801fce6:	b14b      	cbz	r3, 801fcfc <_ZN8touchgfx8Gestures4tickEv+0x18>
 801fce8:	8903      	ldrh	r3, [r0, #8]
 801fcea:	3301      	adds	r3, #1
 801fcec:	b29b      	uxth	r3, r3
 801fcee:	2b07      	cmp	r3, #7
 801fcf0:	8103      	strh	r3, [r0, #8]
 801fcf2:	bf81      	itttt	hi
 801fcf4:	2300      	movhi	r3, #0
 801fcf6:	8143      	strhhi	r3, [r0, #10]
 801fcf8:	8183      	strhhi	r3, [r0, #12]
 801fcfa:	7383      	strbhi	r3, [r0, #14]
 801fcfc:	4770      	bx	lr
	...

0801fd00 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801fd00:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801fd04:	4698      	mov	r8, r3
 801fd06:	8883      	ldrh	r3, [r0, #4]
 801fd08:	f8ad 3006 	strh.w	r3, [sp, #6]
 801fd0c:	eba8 0303 	sub.w	r3, r8, r3
 801fd10:	b21b      	sxth	r3, r3
 801fd12:	4604      	mov	r4, r0
 801fd14:	2b00      	cmp	r3, #0
 801fd16:	4617      	mov	r7, r2
 801fd18:	4a18      	ldr	r2, [pc, #96]	; (801fd7c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801fd1a:	9200      	str	r2, [sp, #0]
 801fd1c:	bfb8      	it	lt
 801fd1e:	425b      	neglt	r3, r3
 801fd20:	8aa2      	ldrh	r2, [r4, #20]
 801fd22:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801fd26:	f8ad 800a 	strh.w	r8, [sp, #10]
 801fd2a:	b21b      	sxth	r3, r3
 801fd2c:	460e      	mov	r6, r1
 801fd2e:	4293      	cmp	r3, r2
 801fd30:	88c1      	ldrh	r1, [r0, #6]
 801fd32:	f8ad 1008 	strh.w	r1, [sp, #8]
 801fd36:	f04f 0000 	mov.w	r0, #0
 801fd3a:	f88d 0004 	strb.w	r0, [sp, #4]
 801fd3e:	f8ad 500c 	strh.w	r5, [sp, #12]
 801fd42:	dc07      	bgt.n	801fd54 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801fd44:	1a69      	subs	r1, r5, r1
 801fd46:	b209      	sxth	r1, r1
 801fd48:	2900      	cmp	r1, #0
 801fd4a:	bfb8      	it	lt
 801fd4c:	4249      	neglt	r1, r1
 801fd4e:	b209      	sxth	r1, r1
 801fd50:	428a      	cmp	r2, r1
 801fd52:	da10      	bge.n	801fd76 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801fd54:	6920      	ldr	r0, [r4, #16]
 801fd56:	6803      	ldr	r3, [r0, #0]
 801fd58:	4669      	mov	r1, sp
 801fd5a:	685b      	ldr	r3, [r3, #4]
 801fd5c:	4798      	blx	r3
 801fd5e:	eba8 0606 	sub.w	r6, r8, r6
 801fd62:	2300      	movs	r3, #0
 801fd64:	1bef      	subs	r7, r5, r7
 801fd66:	2001      	movs	r0, #1
 801fd68:	8123      	strh	r3, [r4, #8]
 801fd6a:	8166      	strh	r6, [r4, #10]
 801fd6c:	81a7      	strh	r7, [r4, #12]
 801fd6e:	f8a4 8004 	strh.w	r8, [r4, #4]
 801fd72:	80e5      	strh	r5, [r4, #6]
 801fd74:	73a0      	strb	r0, [r4, #14]
 801fd76:	b004      	add	sp, #16
 801fd78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fd7c:	080240e0 	.word	0x080240e0

0801fd80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801fd80:	b5f0      	push	{r4, r5, r6, r7, lr}
 801fd82:	461e      	mov	r6, r3
 801fd84:	1e4b      	subs	r3, r1, #1
 801fd86:	2b01      	cmp	r3, #1
 801fd88:	b085      	sub	sp, #20
 801fd8a:	4604      	mov	r4, r0
 801fd8c:	460d      	mov	r5, r1
 801fd8e:	4617      	mov	r7, r2
 801fd90:	d84b      	bhi.n	801fe2a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801fd92:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801fd96:	1cd3      	adds	r3, r2, #3
 801fd98:	b29b      	uxth	r3, r3
 801fd9a:	2b06      	cmp	r3, #6
 801fd9c:	d916      	bls.n	801fdcc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801fd9e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801fe40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801fda2:	f8cd c004 	str.w	ip, [sp, #4]
 801fda6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fdaa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fdae:	6900      	ldr	r0, [r0, #16]
 801fdb0:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fdb4:	f04f 0c00 	mov.w	ip, #0
 801fdb8:	f88d c008 	strb.w	ip, [sp, #8]
 801fdbc:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fdc0:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fdc4:	6803      	ldr	r3, [r0, #0]
 801fdc6:	a901      	add	r1, sp, #4
 801fdc8:	689b      	ldr	r3, [r3, #8]
 801fdca:	4798      	blx	r3
 801fdcc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801fdd0:	1cd3      	adds	r3, r2, #3
 801fdd2:	b29b      	uxth	r3, r3
 801fdd4:	2b06      	cmp	r3, #6
 801fdd6:	d916      	bls.n	801fe06 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fdd8:	f8df c064 	ldr.w	ip, [pc, #100]	; 801fe40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801fddc:	f8cd c004 	str.w	ip, [sp, #4]
 801fde0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fde4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fde8:	6920      	ldr	r0, [r4, #16]
 801fdea:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fdee:	f04f 0c01 	mov.w	ip, #1
 801fdf2:	f88d c008 	strb.w	ip, [sp, #8]
 801fdf6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fdfa:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fdfe:	6803      	ldr	r3, [r0, #0]
 801fe00:	a901      	add	r1, sp, #4
 801fe02:	689b      	ldr	r3, [r3, #8]
 801fe04:	4798      	blx	r3
 801fe06:	4b0d      	ldr	r3, [pc, #52]	; (801fe3c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801fe08:	9301      	str	r3, [sp, #4]
 801fe0a:	6920      	ldr	r0, [r4, #16]
 801fe0c:	f88d 5008 	strb.w	r5, [sp, #8]
 801fe10:	2300      	movs	r3, #0
 801fe12:	f8ad 700a 	strh.w	r7, [sp, #10]
 801fe16:	f8ad 600c 	strh.w	r6, [sp, #12]
 801fe1a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fe1e:	6803      	ldr	r3, [r0, #0]
 801fe20:	a901      	add	r1, sp, #4
 801fe22:	681b      	ldr	r3, [r3, #0]
 801fe24:	4798      	blx	r3
 801fe26:	b005      	add	sp, #20
 801fe28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801fe2a:	2900      	cmp	r1, #0
 801fe2c:	d1eb      	bne.n	801fe06 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fe2e:	80a2      	strh	r2, [r4, #4]
 801fe30:	80c6      	strh	r6, [r0, #6]
 801fe32:	60a1      	str	r1, [r4, #8]
 801fe34:	81a1      	strh	r1, [r4, #12]
 801fe36:	73a1      	strb	r1, [r4, #14]
 801fe38:	e7e5      	b.n	801fe06 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fe3a:	bf00      	nop
 801fe3c:	080240cc 	.word	0x080240cc
 801fe40:	080240f4 	.word	0x080240f4

0801fe44 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 801fe44:	10c9      	asrs	r1, r1, #3
 801fe46:	2900      	cmp	r1, #0
 801fe48:	bfb8      	it	lt
 801fe4a:	4249      	neglt	r1, r1
 801fe4c:	2801      	cmp	r0, #1
 801fe4e:	d108      	bne.n	801fe62 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801fe50:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801fe54:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801fe58:	4601      	mov	r1, r0
 801fe5a:	dd02      	ble.n	801fe62 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801fe5c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801fe60:	4770      	bx	lr
 801fe62:	29ff      	cmp	r1, #255	; 0xff
 801fe64:	bfa8      	it	ge
 801fe66:	21ff      	movge	r1, #255	; 0xff
 801fe68:	4608      	mov	r0, r1
 801fe6a:	4770      	bx	lr

0801fe6c <_ZN8touchgfx10Rasterizer6lineToEii>:
 801fe6c:	b410      	push	{r4}
 801fe6e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801fe72:	429c      	cmp	r4, r3
 801fe74:	d803      	bhi.n	801fe7e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 801fe76:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fe7a:	f7ef b97d 	b.w	800f178 <_ZN8touchgfx7Outline6lineToEii>
 801fe7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fe82:	4770      	bx	lr

0801fe84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 801fe84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe88:	b08b      	sub	sp, #44	; 0x2c
 801fe8a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801fe8e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801fe92:	9308      	str	r3, [sp, #32]
 801fe94:	4606      	mov	r6, r0
 801fe96:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801fe9a:	9309      	str	r3, [sp, #36]	; 0x24
 801fe9c:	468a      	mov	sl, r1
 801fe9e:	f7ef fad8 	bl	800f452 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801fea2:	68b5      	ldr	r5, [r6, #8]
 801fea4:	4604      	mov	r4, r0
 801fea6:	2d00      	cmp	r5, #0
 801fea8:	d044      	beq.n	801ff34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801feaa:	6873      	ldr	r3, [r6, #4]
 801feac:	42ab      	cmp	r3, r5
 801feae:	d33d      	bcc.n	801ff2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801feb0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801feb4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 801feb8:	eb02 0b03 	add.w	fp, r2, r3
 801febc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801fec0:	fb02 1203 	mla	r2, r2, r3, r1
 801fec4:	9205      	str	r2, [sp, #20]
 801fec6:	1e6a      	subs	r2, r5, #1
 801fec8:	9204      	str	r2, [sp, #16]
 801feca:	f04f 0800 	mov.w	r8, #0
 801fece:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801fed2:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fed6:	454b      	cmp	r3, r9
 801fed8:	463a      	mov	r2, r7
 801feda:	d008      	beq.n	801feee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 801fedc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 801fee0:	eb03 0b09 	add.w	fp, r3, r9
 801fee4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801fee8:	fb03 1309 	mla	r3, r3, r9, r1
 801feec:	9305      	str	r3, [sp, #20]
 801feee:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801fef2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801fef6:	4498      	add	r8, r3
 801fef8:	9b04      	ldr	r3, [sp, #16]
 801fefa:	3b01      	subs	r3, #1
 801fefc:	9304      	str	r3, [sp, #16]
 801fefe:	9b04      	ldr	r3, [sp, #16]
 801ff00:	3301      	adds	r3, #1
 801ff02:	d015      	beq.n	801ff30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 801ff04:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 801ff08:	42bb      	cmp	r3, r7
 801ff0a:	d117      	bne.n	801ff3c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 801ff0c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801ff10:	9b04      	ldr	r3, [sp, #16]
 801ff12:	4548      	cmp	r0, r9
 801ff14:	f103 33ff 	add.w	r3, r3, #4294967295
 801ff18:	d17f      	bne.n	802001a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 801ff1a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 801ff1e:	4401      	add	r1, r0
 801ff20:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ff24:	4480      	add	r8, r0
 801ff26:	e7e9      	b.n	801fefc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 801ff28:	461f      	mov	r7, r3
 801ff2a:	e044      	b.n	801ffb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 801ff2c:	2000      	movs	r0, #0
 801ff2e:	e002      	b.n	801ff36 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 801ff30:	2900      	cmp	r1, #0
 801ff32:	d16f      	bne.n	8020014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 801ff34:	2001      	movs	r0, #1
 801ff36:	b00b      	add	sp, #44	; 0x2c
 801ff38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff3c:	2900      	cmp	r1, #0
 801ff3e:	d030      	beq.n	801ffa2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 801ff40:	2f00      	cmp	r7, #0
 801ff42:	db29      	blt.n	801ff98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ff44:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801ff48:	42bb      	cmp	r3, r7
 801ff4a:	dd25      	ble.n	801ff98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ff4c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 801ff50:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801ff54:	f7ff ff76 	bl	801fe44 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801ff58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff5a:	fb10 f003 	smulbb	r0, r0, r3
 801ff5e:	b280      	uxth	r0, r0
 801ff60:	1c41      	adds	r1, r0, #1
 801ff62:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ff66:	1209      	asrs	r1, r1, #8
 801ff68:	f011 0fff 	tst.w	r1, #255	; 0xff
 801ff6c:	d014      	beq.n	801ff98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ff6e:	9808      	ldr	r0, [sp, #32]
 801ff70:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801ff72:	b2c9      	uxtb	r1, r1
 801ff74:	b2ba      	uxth	r2, r7
 801ff76:	9102      	str	r1, [sp, #8]
 801ff78:	2101      	movs	r1, #1
 801ff7a:	4413      	add	r3, r2
 801ff7c:	9101      	str	r1, [sp, #4]
 801ff7e:	4402      	add	r2, r0
 801ff80:	fa0f f18b 	sxth.w	r1, fp
 801ff84:	f8da 0000 	ldr.w	r0, [sl]
 801ff88:	9100      	str	r1, [sp, #0]
 801ff8a:	6941      	ldr	r1, [r0, #20]
 801ff8c:	b21b      	sxth	r3, r3
 801ff8e:	460d      	mov	r5, r1
 801ff90:	b212      	sxth	r2, r2
 801ff92:	9905      	ldr	r1, [sp, #20]
 801ff94:	4650      	mov	r0, sl
 801ff96:	47a8      	blx	r5
 801ff98:	9b04      	ldr	r3, [sp, #16]
 801ff9a:	3301      	adds	r3, #1
 801ff9c:	f107 0201 	add.w	r2, r7, #1
 801ffa0:	d0c8      	beq.n	801ff34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801ffa2:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ffa6:	1abb      	subs	r3, r7, r2
 801ffa8:	2b00      	cmp	r3, #0
 801ffaa:	dd31      	ble.n	8020010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ffac:	2a00      	cmp	r2, #0
 801ffae:	dabb      	bge.n	801ff28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 801ffb0:	2f00      	cmp	r7, #0
 801ffb2:	dd2d      	ble.n	8020010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ffb4:	2200      	movs	r2, #0
 801ffb6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801ffba:	19d1      	adds	r1, r2, r7
 801ffbc:	4299      	cmp	r1, r3
 801ffbe:	db02      	blt.n	801ffc6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 801ffc0:	1a9f      	subs	r7, r3, r2
 801ffc2:	2f00      	cmp	r7, #0
 801ffc4:	dd24      	ble.n	8020010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ffc6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 801ffca:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801ffce:	f7ff ff39 	bl	801fe44 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801ffd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ffd4:	fb10 f003 	smulbb	r0, r0, r3
 801ffd8:	b280      	uxth	r0, r0
 801ffda:	1c41      	adds	r1, r0, #1
 801ffdc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ffe0:	1209      	asrs	r1, r1, #8
 801ffe2:	f011 0fff 	tst.w	r1, #255	; 0xff
 801ffe6:	d013      	beq.n	8020010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ffe8:	9808      	ldr	r0, [sp, #32]
 801ffea:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801ffec:	b292      	uxth	r2, r2
 801ffee:	b2c9      	uxtb	r1, r1
 801fff0:	4413      	add	r3, r2
 801fff2:	9102      	str	r1, [sp, #8]
 801fff4:	4402      	add	r2, r0
 801fff6:	b23f      	sxth	r7, r7
 801fff8:	f8da 0000 	ldr.w	r0, [sl]
 801fffc:	9701      	str	r7, [sp, #4]
 801fffe:	fa0f f18b 	sxth.w	r1, fp
 8020002:	9100      	str	r1, [sp, #0]
 8020004:	6947      	ldr	r7, [r0, #20]
 8020006:	9905      	ldr	r1, [sp, #20]
 8020008:	b21b      	sxth	r3, r3
 802000a:	b212      	sxth	r2, r2
 802000c:	4650      	mov	r0, sl
 802000e:	47b8      	blx	r7
 8020010:	464b      	mov	r3, r9
 8020012:	e75c      	b.n	801fece <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020014:	2f00      	cmp	r7, #0
 8020016:	da95      	bge.n	801ff44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8020018:	e78c      	b.n	801ff34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802001a:	2900      	cmp	r1, #0
 802001c:	d0f8      	beq.n	8020010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802001e:	e78f      	b.n	801ff40 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020020 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020020:	4b4c      	ldr	r3, [pc, #304]	; (8020154 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020022:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8020026:	2500      	movs	r5, #0
 8020028:	f100 0620 	add.w	r6, r0, #32
 802002c:	4604      	mov	r4, r0
 802002e:	e9c0 3100 	strd	r3, r1, [r0]
 8020032:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8020036:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802003a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802003e:	f100 0718 	add.w	r7, r0, #24
 8020042:	4630      	mov	r0, r6
 8020044:	4690      	mov	r8, r2
 8020046:	f7ee fbcf 	bl	800e7e8 <_ZN8touchgfx7OutlineC1Ev>
 802004a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802004e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8020052:	2301      	movs	r3, #1
 8020054:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8020058:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802005c:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8020060:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8020064:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020068:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802006c:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8020070:	f9b8 2000 	ldrsh.w	r2, [r8]
 8020074:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8020078:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802007c:	9500      	str	r5, [sp, #0]
 802007e:	4410      	add	r0, r2
 8020080:	b280      	uxth	r0, r0
 8020082:	fa0f fa80 	sxth.w	sl, r0
 8020086:	45aa      	cmp	sl, r5
 8020088:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802008c:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8020090:	dd5c      	ble.n	802014c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020092:	4591      	cmp	r9, r2
 8020094:	dd5a      	ble.n	802014c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020096:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802009a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802009e:	440b      	add	r3, r1
 80200a0:	b29b      	uxth	r3, r3
 80200a2:	b21d      	sxth	r5, r3
 80200a4:	2d00      	cmp	r5, #0
 80200a6:	dd51      	ble.n	802014c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80200a8:	458e      	cmp	lr, r1
 80200aa:	dd4f      	ble.n	802014c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80200ac:	45d1      	cmp	r9, sl
 80200ae:	bfb8      	it	lt
 80200b0:	fa1f f089 	uxthlt.w	r0, r9
 80200b4:	45ae      	cmp	lr, r5
 80200b6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80200ba:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80200be:	bfb8      	it	lt
 80200c0:	fa1f f38e 	uxthlt.w	r3, lr
 80200c4:	1a80      	subs	r0, r0, r2
 80200c6:	1a5b      	subs	r3, r3, r1
 80200c8:	f8ad 0004 	strh.w	r0, [sp, #4]
 80200cc:	f8ad 3006 	strh.w	r3, [sp, #6]
 80200d0:	f8ad 2000 	strh.w	r2, [sp]
 80200d4:	f8ad 1002 	strh.w	r1, [sp, #2]
 80200d8:	466d      	mov	r5, sp
 80200da:	e895 0003 	ldmia.w	r5, {r0, r1}
 80200de:	e887 0003 	stmia.w	r7, {r0, r1}
 80200e2:	f8dc 3000 	ldr.w	r3, [ip]
 80200e6:	4660      	mov	r0, ip
 80200e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80200ea:	4639      	mov	r1, r7
 80200ec:	4798      	blx	r3
 80200ee:	6861      	ldr	r1, [r4, #4]
 80200f0:	4628      	mov	r0, r5
 80200f2:	3104      	adds	r1, #4
 80200f4:	f7f0 fd0c 	bl	8010b10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80200f8:	4638      	mov	r0, r7
 80200fa:	f7f0 fce1 	bl	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80200fe:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020102:	f8bd 2000 	ldrh.w	r2, [sp]
 8020106:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802010a:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 802010e:	4630      	mov	r0, r6
 8020110:	f7ee fb4e 	bl	800e7b0 <_ZN8touchgfx7Outline5resetEv>
 8020114:	f9bd 3000 	ldrsh.w	r3, [sp]
 8020118:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802011c:	015b      	lsls	r3, r3, #5
 802011e:	60a3      	str	r3, [r4, #8]
 8020120:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020124:	015b      	lsls	r3, r3, #5
 8020126:	60e3      	str	r3, [r4, #12]
 8020128:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802012c:	015b      	lsls	r3, r3, #5
 802012e:	6123      	str	r3, [r4, #16]
 8020130:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020134:	015b      	lsls	r3, r3, #5
 8020136:	6163      	str	r3, [r4, #20]
 8020138:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802013c:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020140:	4620      	mov	r0, r4
 8020142:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8020146:	b002      	add	sp, #8
 8020148:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802014c:	2300      	movs	r3, #0
 802014e:	9301      	str	r3, [sp, #4]
 8020150:	e7c2      	b.n	80200d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 8020152:	bf00      	nop
 8020154:	0802395c 	.word	0x0802395c

08020158 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8020158:	b510      	push	{r4, lr}
 802015a:	4b07      	ldr	r3, [pc, #28]	; (8020178 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802015c:	781b      	ldrb	r3, [r3, #0]
 802015e:	2b01      	cmp	r3, #1
 8020160:	d108      	bne.n	8020174 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8020162:	6843      	ldr	r3, [r0, #4]
 8020164:	6814      	ldr	r4, [r2, #0]
 8020166:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802016a:	680b      	ldr	r3, [r1, #0]
 802016c:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8020170:	6013      	str	r3, [r2, #0]
 8020172:	600c      	str	r4, [r1, #0]
 8020174:	bd10      	pop	{r4, pc}
 8020176:	bf00      	nop
 8020178:	20015480 	.word	0x20015480

0802017c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802017c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802017e:	ab02      	add	r3, sp, #8
 8020180:	4604      	mov	r4, r0
 8020182:	f843 2d08 	str.w	r2, [r3, #-8]!
 8020186:	9101      	str	r1, [sp, #4]
 8020188:	461a      	mov	r2, r3
 802018a:	a901      	add	r1, sp, #4
 802018c:	f7ff ffe4 	bl	8020158 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020190:	68a3      	ldr	r3, [r4, #8]
 8020192:	9901      	ldr	r1, [sp, #4]
 8020194:	9a00      	ldr	r2, [sp, #0]
 8020196:	1ac9      	subs	r1, r1, r3
 8020198:	68e3      	ldr	r3, [r4, #12]
 802019a:	9101      	str	r1, [sp, #4]
 802019c:	1ad2      	subs	r2, r2, r3
 802019e:	2a00      	cmp	r2, #0
 80201a0:	9200      	str	r2, [sp, #0]
 80201a2:	db1c      	blt.n	80201de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80201a4:	6963      	ldr	r3, [r4, #20]
 80201a6:	429a      	cmp	r2, r3
 80201a8:	bfac      	ite	ge
 80201aa:	2002      	movge	r0, #2
 80201ac:	2000      	movlt	r0, #0
 80201ae:	2900      	cmp	r1, #0
 80201b0:	db17      	blt.n	80201e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80201b2:	6923      	ldr	r3, [r4, #16]
 80201b4:	4299      	cmp	r1, r3
 80201b6:	bfac      	ite	ge
 80201b8:	2308      	movge	r3, #8
 80201ba:	2300      	movlt	r3, #0
 80201bc:	4303      	orrs	r3, r0
 80201be:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80201c2:	b2dd      	uxtb	r5, r3
 80201c4:	b978      	cbnz	r0, 80201e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80201c6:	f104 0020 	add.w	r0, r4, #32
 80201ca:	f7ff fe4f 	bl	801fe6c <_ZN8touchgfx10Rasterizer6lineToEii>
 80201ce:	9b01      	ldr	r3, [sp, #4]
 80201d0:	65e3      	str	r3, [r4, #92]	; 0x5c
 80201d2:	9b00      	ldr	r3, [sp, #0]
 80201d4:	6623      	str	r3, [r4, #96]	; 0x60
 80201d6:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80201da:	b002      	add	sp, #8
 80201dc:	bd70      	pop	{r4, r5, r6, pc}
 80201de:	2001      	movs	r0, #1
 80201e0:	e7e5      	b.n	80201ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80201e2:	2304      	movs	r3, #4
 80201e4:	e7ea      	b.n	80201bc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80201e6:	b113      	cbz	r3, 80201ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80201e8:	ea10 0305 	ands.w	r3, r0, r5
 80201ec:	d11d      	bne.n	802022a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 80201ee:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80201f2:	f104 0620 	add.w	r6, r4, #32
 80201f6:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80201fa:	b193      	cbz	r3, 8020222 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 80201fc:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020200:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020204:	4298      	cmp	r0, r3
 8020206:	d802      	bhi.n	802020e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8020208:	4630      	mov	r0, r6
 802020a:	f7ee ffcf 	bl	800f1ac <_ZN8touchgfx7Outline6moveToEii>
 802020e:	2300      	movs	r3, #0
 8020210:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020214:	2301      	movs	r3, #1
 8020216:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802021a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802021e:	4630      	mov	r0, r6
 8020220:	e7d3      	b.n	80201ca <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020222:	4630      	mov	r0, r6
 8020224:	f7ff fe22 	bl	801fe6c <_ZN8touchgfx10Rasterizer6lineToEii>
 8020228:	e7f7      	b.n	802021a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802022a:	461d      	mov	r5, r3
 802022c:	e7cf      	b.n	80201ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

0802022e <_ZN8touchgfx6Canvas5closeEv>:
 802022e:	b538      	push	{r3, r4, r5, lr}
 8020230:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020234:	4604      	mov	r4, r0
 8020236:	b993      	cbnz	r3, 802025e <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020238:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802023c:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020240:	4213      	tst	r3, r2
 8020242:	d10c      	bne.n	802025e <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020244:	f100 0520 	add.w	r5, r0, #32
 8020248:	b123      	cbz	r3, 8020254 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802024a:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802024e:	4628      	mov	r0, r5
 8020250:	f7ff fe0c 	bl	801fe6c <_ZN8touchgfx10Rasterizer6lineToEii>
 8020254:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8020258:	4628      	mov	r0, r5
 802025a:	f7ff fe07 	bl	801fe6c <_ZN8touchgfx10Rasterizer6lineToEii>
 802025e:	2300      	movs	r3, #0
 8020260:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020264:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8020268:	4298      	cmp	r0, r3
 802026a:	bf34      	ite	cc
 802026c:	2000      	movcc	r0, #0
 802026e:	2001      	movcs	r0, #1
 8020270:	bd38      	pop	{r3, r4, r5, pc}
	...

08020274 <_ZN8touchgfx6Canvas6renderEh>:
 8020274:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8020278:	4604      	mov	r4, r0
 802027a:	6840      	ldr	r0, [r0, #4]
 802027c:	6803      	ldr	r3, [r0, #0]
 802027e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8020280:	460d      	mov	r5, r1
 8020282:	4798      	blx	r3
 8020284:	fb10 f105 	smulbb	r1, r0, r5
 8020288:	b289      	uxth	r1, r1
 802028a:	1c4d      	adds	r5, r1, #1
 802028c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8020290:	122d      	asrs	r5, r5, #8
 8020292:	f000 8098 	beq.w	80203c6 <_ZN8touchgfx6Canvas6renderEh+0x152>
 8020296:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802029a:	2b00      	cmp	r3, #0
 802029c:	f000 8093 	beq.w	80203c6 <_ZN8touchgfx6Canvas6renderEh+0x152>
 80202a0:	4620      	mov	r0, r4
 80202a2:	f7ff ffc4 	bl	802022e <_ZN8touchgfx6Canvas5closeEv>
 80202a6:	4607      	mov	r7, r0
 80202a8:	2800      	cmp	r0, #0
 80202aa:	d043      	beq.n	8020334 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80202ac:	6863      	ldr	r3, [r4, #4]
 80202ae:	4e47      	ldr	r6, [pc, #284]	; (80203cc <_ZN8touchgfx6Canvas6renderEh+0x158>)
 80202b0:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80202b2:	6837      	ldr	r7, [r6, #0]
 80202b4:	6803      	ldr	r3, [r0, #0]
 80202b6:	689b      	ldr	r3, [r3, #8]
 80202b8:	4798      	blx	r3
 80202ba:	4601      	mov	r1, r0
 80202bc:	4638      	mov	r0, r7
 80202be:	f7eb fb03 	bl	800b8c8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80202c2:	4607      	mov	r7, r0
 80202c4:	f7e2 f90c 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 80202c8:	6803      	ldr	r3, [r0, #0]
 80202ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80202cc:	4798      	blx	r3
 80202ce:	4680      	mov	r8, r0
 80202d0:	f7e2 f906 	bl	80024e0 <_ZN8touchgfx3HAL3lcdEv>
 80202d4:	6803      	ldr	r3, [r0, #0]
 80202d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80202d8:	4798      	blx	r3
 80202da:	280b      	cmp	r0, #11
 80202dc:	d858      	bhi.n	8020390 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 80202de:	e8df f000 	tbb	[pc, r0]
 80202e2:	594e      	.short	0x594e
 80202e4:	2d570669 	.word	0x2d570669
 80202e8:	6262623d 	.word	0x6262623d
 80202ec:	6262      	.short	0x6262
 80202ee:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80202f2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80202f6:	2208      	movs	r2, #8
 80202f8:	fb91 f2f2 	sdiv	r2, r1, r2
 80202fc:	fb08 2303 	mla	r3, r8, r3, r2
 8020300:	441f      	add	r7, r3
 8020302:	424b      	negs	r3, r1
 8020304:	f003 0307 	and.w	r3, r3, #7
 8020308:	f001 0107 	and.w	r1, r1, #7
 802030c:	bf58      	it	pl
 802030e:	4259      	negpl	r1, r3
 8020310:	b2c9      	uxtb	r1, r1
 8020312:	b2ed      	uxtb	r5, r5
 8020314:	e9cd 1500 	strd	r1, r5, [sp]
 8020318:	6860      	ldr	r0, [r4, #4]
 802031a:	fa0f f388 	sxth.w	r3, r8
 802031e:	463a      	mov	r2, r7
 8020320:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020322:	f104 0020 	add.w	r0, r4, #32
 8020326:	f7ff fdad 	bl	801fe84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802032a:	4607      	mov	r7, r0
 802032c:	6830      	ldr	r0, [r6, #0]
 802032e:	6803      	ldr	r3, [r0, #0]
 8020330:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020332:	4798      	blx	r3
 8020334:	4638      	mov	r0, r7
 8020336:	b002      	add	sp, #8
 8020338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802033c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020340:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020344:	2204      	movs	r2, #4
 8020346:	fb91 f2f2 	sdiv	r2, r1, r2
 802034a:	fb08 2303 	mla	r3, r8, r3, r2
 802034e:	441f      	add	r7, r3
 8020350:	424b      	negs	r3, r1
 8020352:	f003 0303 	and.w	r3, r3, #3
 8020356:	f001 0103 	and.w	r1, r1, #3
 802035a:	e7d7      	b.n	802030c <_ZN8touchgfx6Canvas6renderEh+0x98>
 802035c:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020360:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020364:	2900      	cmp	r1, #0
 8020366:	f04f 0202 	mov.w	r2, #2
 802036a:	fb91 f2f2 	sdiv	r2, r1, r2
 802036e:	f001 0101 	and.w	r1, r1, #1
 8020372:	fb08 2303 	mla	r3, r8, r3, r2
 8020376:	441f      	add	r7, r3
 8020378:	bfb8      	it	lt
 802037a:	4249      	neglt	r1, r1
 802037c:	e7c8      	b.n	8020310 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802037e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020382:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020386:	fb08 f303 	mul.w	r3, r8, r3
 802038a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802038e:	441f      	add	r7, r3
 8020390:	2100      	movs	r1, #0
 8020392:	e7be      	b.n	8020312 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8020394:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020398:	fb08 f203 	mul.w	r2, r8, r3
 802039c:	8b23      	ldrh	r3, [r4, #24]
 802039e:	2103      	movs	r1, #3
 80203a0:	fb13 2301 	smlabb	r3, r3, r1, r2
 80203a4:	e7f3      	b.n	802038e <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80203a6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80203aa:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80203ae:	fb08 2303 	mla	r3, r8, r3, r2
 80203b2:	e7ec      	b.n	802038e <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80203b4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80203b8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80203bc:	fb08 f303 	mul.w	r3, r8, r3
 80203c0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80203c4:	e7e3      	b.n	802038e <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80203c6:	2701      	movs	r7, #1
 80203c8:	e7b4      	b.n	8020334 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80203ca:	bf00      	nop
 80203cc:	20015488 	.word	0x20015488

080203d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80203d0:	b513      	push	{r0, r1, r4, lr}
 80203d2:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80203d6:	4604      	mov	r4, r0
 80203d8:	e9cd 2100 	strd	r2, r1, [sp]
 80203dc:	b1a3      	cbz	r3, 8020408 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80203de:	466a      	mov	r2, sp
 80203e0:	a901      	add	r1, sp, #4
 80203e2:	4620      	mov	r0, r4
 80203e4:	f7ff feb8 	bl	8020158 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80203e8:	68a3      	ldr	r3, [r4, #8]
 80203ea:	9901      	ldr	r1, [sp, #4]
 80203ec:	9a00      	ldr	r2, [sp, #0]
 80203ee:	1ac9      	subs	r1, r1, r3
 80203f0:	68e3      	ldr	r3, [r4, #12]
 80203f2:	9101      	str	r1, [sp, #4]
 80203f4:	1ad2      	subs	r2, r2, r3
 80203f6:	2a00      	cmp	r2, #0
 80203f8:	9200      	str	r2, [sp, #0]
 80203fa:	da0b      	bge.n	8020414 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80203fc:	2301      	movs	r3, #1
 80203fe:	2900      	cmp	r1, #0
 8020400:	da0e      	bge.n	8020420 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020402:	f043 0304 	orr.w	r3, r3, #4
 8020406:	e013      	b.n	8020430 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8020408:	f7ff ff11 	bl	802022e <_ZN8touchgfx6Canvas5closeEv>
 802040c:	2800      	cmp	r0, #0
 802040e:	d1e6      	bne.n	80203de <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020410:	b002      	add	sp, #8
 8020412:	bd10      	pop	{r4, pc}
 8020414:	6963      	ldr	r3, [r4, #20]
 8020416:	429a      	cmp	r2, r3
 8020418:	bfac      	ite	ge
 802041a:	2302      	movge	r3, #2
 802041c:	2300      	movlt	r3, #0
 802041e:	e7ee      	b.n	80203fe <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020420:	6920      	ldr	r0, [r4, #16]
 8020422:	4281      	cmp	r1, r0
 8020424:	bfac      	ite	ge
 8020426:	2008      	movge	r0, #8
 8020428:	2000      	movlt	r0, #0
 802042a:	4318      	orrs	r0, r3
 802042c:	b2c3      	uxtb	r3, r0
 802042e:	b158      	cbz	r0, 8020448 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020430:	2201      	movs	r2, #1
 8020432:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8020436:	9901      	ldr	r1, [sp, #4]
 8020438:	9a00      	ldr	r2, [sp, #0]
 802043a:	66a1      	str	r1, [r4, #104]	; 0x68
 802043c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802043e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020442:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8020446:	e7e3      	b.n	8020410 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020448:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802044c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020450:	4298      	cmp	r0, r3
 8020452:	d803      	bhi.n	802045c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020454:	f104 0020 	add.w	r0, r4, #32
 8020458:	f7ee fea8 	bl	800f1ac <_ZN8touchgfx7Outline6moveToEii>
 802045c:	2300      	movs	r3, #0
 802045e:	2201      	movs	r2, #1
 8020460:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020464:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8020468:	e7e5      	b.n	8020436 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802046a <__aeabi_atexit>:
 802046a:	460b      	mov	r3, r1
 802046c:	4601      	mov	r1, r0
 802046e:	4618      	mov	r0, r3
 8020470:	f000 b8d8 	b.w	8020624 <__cxa_atexit>

08020474 <_ZdlPvj>:
 8020474:	f000 b812 	b.w	802049c <_ZdlPv>

08020478 <__cxa_guard_acquire>:
 8020478:	6803      	ldr	r3, [r0, #0]
 802047a:	07db      	lsls	r3, r3, #31
 802047c:	d406      	bmi.n	802048c <__cxa_guard_acquire+0x14>
 802047e:	7843      	ldrb	r3, [r0, #1]
 8020480:	b103      	cbz	r3, 8020484 <__cxa_guard_acquire+0xc>
 8020482:	deff      	udf	#255	; 0xff
 8020484:	2301      	movs	r3, #1
 8020486:	7043      	strb	r3, [r0, #1]
 8020488:	4618      	mov	r0, r3
 802048a:	4770      	bx	lr
 802048c:	2000      	movs	r0, #0
 802048e:	4770      	bx	lr

08020490 <__cxa_guard_release>:
 8020490:	2301      	movs	r3, #1
 8020492:	6003      	str	r3, [r0, #0]
 8020494:	4770      	bx	lr

08020496 <__cxa_pure_virtual>:
 8020496:	b508      	push	{r3, lr}
 8020498:	f000 f80e 	bl	80204b8 <_ZSt9terminatev>

0802049c <_ZdlPv>:
 802049c:	f000 ba0e 	b.w	80208bc <free>

080204a0 <_ZN10__cxxabiv111__terminateEPFvvE>:
 80204a0:	b508      	push	{r3, lr}
 80204a2:	4780      	blx	r0
 80204a4:	f000 f892 	bl	80205cc <abort>

080204a8 <_ZSt13get_terminatev>:
 80204a8:	4b02      	ldr	r3, [pc, #8]	; (80204b4 <_ZSt13get_terminatev+0xc>)
 80204aa:	6818      	ldr	r0, [r3, #0]
 80204ac:	f3bf 8f5b 	dmb	ish
 80204b0:	4770      	bx	lr
 80204b2:	bf00      	nop
 80204b4:	20000100 	.word	0x20000100

080204b8 <_ZSt9terminatev>:
 80204b8:	b508      	push	{r3, lr}
 80204ba:	f7ff fff5 	bl	80204a8 <_ZSt13get_terminatev>
 80204be:	f7ff ffef 	bl	80204a0 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080204c4 <ceilf>:
 80204c4:	ee10 3a10 	vmov	r3, s0
 80204c8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80204cc:	3a7f      	subs	r2, #127	; 0x7f
 80204ce:	2a16      	cmp	r2, #22
 80204d0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80204d4:	dc2a      	bgt.n	802052c <ceilf+0x68>
 80204d6:	2a00      	cmp	r2, #0
 80204d8:	da11      	bge.n	80204fe <ceilf+0x3a>
 80204da:	eddf 7a19 	vldr	s15, [pc, #100]	; 8020540 <ceilf+0x7c>
 80204de:	ee30 0a27 	vadd.f32	s0, s0, s15
 80204e2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80204e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80204ea:	dd05      	ble.n	80204f8 <ceilf+0x34>
 80204ec:	2b00      	cmp	r3, #0
 80204ee:	db23      	blt.n	8020538 <ceilf+0x74>
 80204f0:	2900      	cmp	r1, #0
 80204f2:	bf18      	it	ne
 80204f4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 80204f8:	ee00 3a10 	vmov	s0, r3
 80204fc:	4770      	bx	lr
 80204fe:	4911      	ldr	r1, [pc, #68]	; (8020544 <ceilf+0x80>)
 8020500:	4111      	asrs	r1, r2
 8020502:	420b      	tst	r3, r1
 8020504:	d0fa      	beq.n	80204fc <ceilf+0x38>
 8020506:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8020540 <ceilf+0x7c>
 802050a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802050e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020516:	ddef      	ble.n	80204f8 <ceilf+0x34>
 8020518:	2b00      	cmp	r3, #0
 802051a:	bfc2      	ittt	gt
 802051c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020520:	fa40 f202 	asrgt.w	r2, r0, r2
 8020524:	189b      	addgt	r3, r3, r2
 8020526:	ea23 0301 	bic.w	r3, r3, r1
 802052a:	e7e5      	b.n	80204f8 <ceilf+0x34>
 802052c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020530:	d3e4      	bcc.n	80204fc <ceilf+0x38>
 8020532:	ee30 0a00 	vadd.f32	s0, s0, s0
 8020536:	4770      	bx	lr
 8020538:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802053c:	e7dc      	b.n	80204f8 <ceilf+0x34>
 802053e:	bf00      	nop
 8020540:	7149f2ca 	.word	0x7149f2ca
 8020544:	007fffff 	.word	0x007fffff

08020548 <floorf>:
 8020548:	ee10 3a10 	vmov	r3, s0
 802054c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020550:	3a7f      	subs	r2, #127	; 0x7f
 8020552:	2a16      	cmp	r2, #22
 8020554:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020558:	dc2a      	bgt.n	80205b0 <floorf+0x68>
 802055a:	2a00      	cmp	r2, #0
 802055c:	da11      	bge.n	8020582 <floorf+0x3a>
 802055e:	eddf 7a18 	vldr	s15, [pc, #96]	; 80205c0 <floorf+0x78>
 8020562:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020566:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802056a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802056e:	dd05      	ble.n	802057c <floorf+0x34>
 8020570:	2b00      	cmp	r3, #0
 8020572:	da23      	bge.n	80205bc <floorf+0x74>
 8020574:	4a13      	ldr	r2, [pc, #76]	; (80205c4 <floorf+0x7c>)
 8020576:	2900      	cmp	r1, #0
 8020578:	bf18      	it	ne
 802057a:	4613      	movne	r3, r2
 802057c:	ee00 3a10 	vmov	s0, r3
 8020580:	4770      	bx	lr
 8020582:	4911      	ldr	r1, [pc, #68]	; (80205c8 <floorf+0x80>)
 8020584:	4111      	asrs	r1, r2
 8020586:	420b      	tst	r3, r1
 8020588:	d0fa      	beq.n	8020580 <floorf+0x38>
 802058a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80205c0 <floorf+0x78>
 802058e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020592:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802059a:	ddef      	ble.n	802057c <floorf+0x34>
 802059c:	2b00      	cmp	r3, #0
 802059e:	bfbe      	ittt	lt
 80205a0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80205a4:	fa40 f202 	asrlt.w	r2, r0, r2
 80205a8:	189b      	addlt	r3, r3, r2
 80205aa:	ea23 0301 	bic.w	r3, r3, r1
 80205ae:	e7e5      	b.n	802057c <floorf+0x34>
 80205b0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80205b4:	d3e4      	bcc.n	8020580 <floorf+0x38>
 80205b6:	ee30 0a00 	vadd.f32	s0, s0, s0
 80205ba:	4770      	bx	lr
 80205bc:	2300      	movs	r3, #0
 80205be:	e7dd      	b.n	802057c <floorf+0x34>
 80205c0:	7149f2ca 	.word	0x7149f2ca
 80205c4:	bf800000 	.word	0xbf800000
 80205c8:	007fffff 	.word	0x007fffff

080205cc <abort>:
 80205cc:	b508      	push	{r3, lr}
 80205ce:	2006      	movs	r0, #6
 80205d0:	f000 fe02 	bl	80211d8 <raise>
 80205d4:	2001      	movs	r0, #1
 80205d6:	f7e1 fd7d 	bl	80020d4 <_exit>
	...

080205dc <__assert_func>:
 80205dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80205de:	4614      	mov	r4, r2
 80205e0:	461a      	mov	r2, r3
 80205e2:	4b09      	ldr	r3, [pc, #36]	; (8020608 <__assert_func+0x2c>)
 80205e4:	681b      	ldr	r3, [r3, #0]
 80205e6:	4605      	mov	r5, r0
 80205e8:	68d8      	ldr	r0, [r3, #12]
 80205ea:	b14c      	cbz	r4, 8020600 <__assert_func+0x24>
 80205ec:	4b07      	ldr	r3, [pc, #28]	; (802060c <__assert_func+0x30>)
 80205ee:	9100      	str	r1, [sp, #0]
 80205f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80205f4:	4906      	ldr	r1, [pc, #24]	; (8020610 <__assert_func+0x34>)
 80205f6:	462b      	mov	r3, r5
 80205f8:	f000 f8fe 	bl	80207f8 <fiprintf>
 80205fc:	f7ff ffe6 	bl	80205cc <abort>
 8020600:	4b04      	ldr	r3, [pc, #16]	; (8020614 <__assert_func+0x38>)
 8020602:	461c      	mov	r4, r3
 8020604:	e7f3      	b.n	80205ee <__assert_func+0x12>
 8020606:	bf00      	nop
 8020608:	20000104 	.word	0x20000104
 802060c:	080243bc 	.word	0x080243bc
 8020610:	080243c9 	.word	0x080243c9
 8020614:	08023463 	.word	0x08023463

08020618 <atexit>:
 8020618:	2300      	movs	r3, #0
 802061a:	4601      	mov	r1, r0
 802061c:	461a      	mov	r2, r3
 802061e:	4618      	mov	r0, r3
 8020620:	f000 bf0c 	b.w	802143c <__register_exitproc>

08020624 <__cxa_atexit>:
 8020624:	b510      	push	{r4, lr}
 8020626:	4c05      	ldr	r4, [pc, #20]	; (802063c <__cxa_atexit+0x18>)
 8020628:	4613      	mov	r3, r2
 802062a:	b12c      	cbz	r4, 8020638 <__cxa_atexit+0x14>
 802062c:	460a      	mov	r2, r1
 802062e:	4601      	mov	r1, r0
 8020630:	2002      	movs	r0, #2
 8020632:	f000 ff03 	bl	802143c <__register_exitproc>
 8020636:	bd10      	pop	{r4, pc}
 8020638:	4620      	mov	r0, r4
 802063a:	e7fc      	b.n	8020636 <__cxa_atexit+0x12>
 802063c:	0802143d 	.word	0x0802143d

08020640 <__errno>:
 8020640:	4b01      	ldr	r3, [pc, #4]	; (8020648 <__errno+0x8>)
 8020642:	6818      	ldr	r0, [r3, #0]
 8020644:	4770      	bx	lr
 8020646:	bf00      	nop
 8020648:	20000104 	.word	0x20000104

0802064c <std>:
 802064c:	2300      	movs	r3, #0
 802064e:	b510      	push	{r4, lr}
 8020650:	4604      	mov	r4, r0
 8020652:	e9c0 3300 	strd	r3, r3, [r0]
 8020656:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802065a:	6083      	str	r3, [r0, #8]
 802065c:	8181      	strh	r1, [r0, #12]
 802065e:	6643      	str	r3, [r0, #100]	; 0x64
 8020660:	81c2      	strh	r2, [r0, #14]
 8020662:	6183      	str	r3, [r0, #24]
 8020664:	4619      	mov	r1, r3
 8020666:	2208      	movs	r2, #8
 8020668:	305c      	adds	r0, #92	; 0x5c
 802066a:	f000 f93d 	bl	80208e8 <memset>
 802066e:	4b05      	ldr	r3, [pc, #20]	; (8020684 <std+0x38>)
 8020670:	6263      	str	r3, [r4, #36]	; 0x24
 8020672:	4b05      	ldr	r3, [pc, #20]	; (8020688 <std+0x3c>)
 8020674:	62a3      	str	r3, [r4, #40]	; 0x28
 8020676:	4b05      	ldr	r3, [pc, #20]	; (802068c <std+0x40>)
 8020678:	62e3      	str	r3, [r4, #44]	; 0x2c
 802067a:	4b05      	ldr	r3, [pc, #20]	; (8020690 <std+0x44>)
 802067c:	6224      	str	r4, [r4, #32]
 802067e:	6323      	str	r3, [r4, #48]	; 0x30
 8020680:	bd10      	pop	{r4, pc}
 8020682:	bf00      	nop
 8020684:	08021211 	.word	0x08021211
 8020688:	08021233 	.word	0x08021233
 802068c:	0802126b 	.word	0x0802126b
 8020690:	0802128f 	.word	0x0802128f

08020694 <_cleanup_r>:
 8020694:	4901      	ldr	r1, [pc, #4]	; (802069c <_cleanup_r+0x8>)
 8020696:	f000 b8c1 	b.w	802081c <_fwalk_reent>
 802069a:	bf00      	nop
 802069c:	0802162d 	.word	0x0802162d

080206a0 <__sfmoreglue>:
 80206a0:	b570      	push	{r4, r5, r6, lr}
 80206a2:	2268      	movs	r2, #104	; 0x68
 80206a4:	1e4d      	subs	r5, r1, #1
 80206a6:	4355      	muls	r5, r2
 80206a8:	460e      	mov	r6, r1
 80206aa:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80206ae:	f000 f98f 	bl	80209d0 <_malloc_r>
 80206b2:	4604      	mov	r4, r0
 80206b4:	b140      	cbz	r0, 80206c8 <__sfmoreglue+0x28>
 80206b6:	2100      	movs	r1, #0
 80206b8:	e9c0 1600 	strd	r1, r6, [r0]
 80206bc:	300c      	adds	r0, #12
 80206be:	60a0      	str	r0, [r4, #8]
 80206c0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80206c4:	f000 f910 	bl	80208e8 <memset>
 80206c8:	4620      	mov	r0, r4
 80206ca:	bd70      	pop	{r4, r5, r6, pc}

080206cc <__sfp_lock_acquire>:
 80206cc:	4801      	ldr	r0, [pc, #4]	; (80206d4 <__sfp_lock_acquire+0x8>)
 80206ce:	f000 b8ea 	b.w	80208a6 <__retarget_lock_acquire_recursive>
 80206d2:	bf00      	nop
 80206d4:	2001558e 	.word	0x2001558e

080206d8 <__sfp_lock_release>:
 80206d8:	4801      	ldr	r0, [pc, #4]	; (80206e0 <__sfp_lock_release+0x8>)
 80206da:	f000 b8e6 	b.w	80208aa <__retarget_lock_release_recursive>
 80206de:	bf00      	nop
 80206e0:	2001558e 	.word	0x2001558e

080206e4 <__sinit_lock_acquire>:
 80206e4:	4801      	ldr	r0, [pc, #4]	; (80206ec <__sinit_lock_acquire+0x8>)
 80206e6:	f000 b8de 	b.w	80208a6 <__retarget_lock_acquire_recursive>
 80206ea:	bf00      	nop
 80206ec:	2001558f 	.word	0x2001558f

080206f0 <__sinit_lock_release>:
 80206f0:	4801      	ldr	r0, [pc, #4]	; (80206f8 <__sinit_lock_release+0x8>)
 80206f2:	f000 b8da 	b.w	80208aa <__retarget_lock_release_recursive>
 80206f6:	bf00      	nop
 80206f8:	2001558f 	.word	0x2001558f

080206fc <__sinit>:
 80206fc:	b510      	push	{r4, lr}
 80206fe:	4604      	mov	r4, r0
 8020700:	f7ff fff0 	bl	80206e4 <__sinit_lock_acquire>
 8020704:	69a3      	ldr	r3, [r4, #24]
 8020706:	b11b      	cbz	r3, 8020710 <__sinit+0x14>
 8020708:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802070c:	f7ff bff0 	b.w	80206f0 <__sinit_lock_release>
 8020710:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020714:	6523      	str	r3, [r4, #80]	; 0x50
 8020716:	4b13      	ldr	r3, [pc, #76]	; (8020764 <__sinit+0x68>)
 8020718:	4a13      	ldr	r2, [pc, #76]	; (8020768 <__sinit+0x6c>)
 802071a:	681b      	ldr	r3, [r3, #0]
 802071c:	62a2      	str	r2, [r4, #40]	; 0x28
 802071e:	42a3      	cmp	r3, r4
 8020720:	bf04      	itt	eq
 8020722:	2301      	moveq	r3, #1
 8020724:	61a3      	streq	r3, [r4, #24]
 8020726:	4620      	mov	r0, r4
 8020728:	f000 f820 	bl	802076c <__sfp>
 802072c:	6060      	str	r0, [r4, #4]
 802072e:	4620      	mov	r0, r4
 8020730:	f000 f81c 	bl	802076c <__sfp>
 8020734:	60a0      	str	r0, [r4, #8]
 8020736:	4620      	mov	r0, r4
 8020738:	f000 f818 	bl	802076c <__sfp>
 802073c:	2200      	movs	r2, #0
 802073e:	60e0      	str	r0, [r4, #12]
 8020740:	2104      	movs	r1, #4
 8020742:	6860      	ldr	r0, [r4, #4]
 8020744:	f7ff ff82 	bl	802064c <std>
 8020748:	68a0      	ldr	r0, [r4, #8]
 802074a:	2201      	movs	r2, #1
 802074c:	2109      	movs	r1, #9
 802074e:	f7ff ff7d 	bl	802064c <std>
 8020752:	68e0      	ldr	r0, [r4, #12]
 8020754:	2202      	movs	r2, #2
 8020756:	2112      	movs	r1, #18
 8020758:	f7ff ff78 	bl	802064c <std>
 802075c:	2301      	movs	r3, #1
 802075e:	61a3      	str	r3, [r4, #24]
 8020760:	e7d2      	b.n	8020708 <__sinit+0xc>
 8020762:	bf00      	nop
 8020764:	08024458 	.word	0x08024458
 8020768:	08020695 	.word	0x08020695

0802076c <__sfp>:
 802076c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802076e:	4607      	mov	r7, r0
 8020770:	f7ff ffac 	bl	80206cc <__sfp_lock_acquire>
 8020774:	4b1e      	ldr	r3, [pc, #120]	; (80207f0 <__sfp+0x84>)
 8020776:	681e      	ldr	r6, [r3, #0]
 8020778:	69b3      	ldr	r3, [r6, #24]
 802077a:	b913      	cbnz	r3, 8020782 <__sfp+0x16>
 802077c:	4630      	mov	r0, r6
 802077e:	f7ff ffbd 	bl	80206fc <__sinit>
 8020782:	3648      	adds	r6, #72	; 0x48
 8020784:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020788:	3b01      	subs	r3, #1
 802078a:	d503      	bpl.n	8020794 <__sfp+0x28>
 802078c:	6833      	ldr	r3, [r6, #0]
 802078e:	b30b      	cbz	r3, 80207d4 <__sfp+0x68>
 8020790:	6836      	ldr	r6, [r6, #0]
 8020792:	e7f7      	b.n	8020784 <__sfp+0x18>
 8020794:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020798:	b9d5      	cbnz	r5, 80207d0 <__sfp+0x64>
 802079a:	4b16      	ldr	r3, [pc, #88]	; (80207f4 <__sfp+0x88>)
 802079c:	60e3      	str	r3, [r4, #12]
 802079e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80207a2:	6665      	str	r5, [r4, #100]	; 0x64
 80207a4:	f000 f87e 	bl	80208a4 <__retarget_lock_init_recursive>
 80207a8:	f7ff ff96 	bl	80206d8 <__sfp_lock_release>
 80207ac:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80207b0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80207b4:	6025      	str	r5, [r4, #0]
 80207b6:	61a5      	str	r5, [r4, #24]
 80207b8:	2208      	movs	r2, #8
 80207ba:	4629      	mov	r1, r5
 80207bc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80207c0:	f000 f892 	bl	80208e8 <memset>
 80207c4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80207c8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80207cc:	4620      	mov	r0, r4
 80207ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80207d0:	3468      	adds	r4, #104	; 0x68
 80207d2:	e7d9      	b.n	8020788 <__sfp+0x1c>
 80207d4:	2104      	movs	r1, #4
 80207d6:	4638      	mov	r0, r7
 80207d8:	f7ff ff62 	bl	80206a0 <__sfmoreglue>
 80207dc:	4604      	mov	r4, r0
 80207de:	6030      	str	r0, [r6, #0]
 80207e0:	2800      	cmp	r0, #0
 80207e2:	d1d5      	bne.n	8020790 <__sfp+0x24>
 80207e4:	f7ff ff78 	bl	80206d8 <__sfp_lock_release>
 80207e8:	230c      	movs	r3, #12
 80207ea:	603b      	str	r3, [r7, #0]
 80207ec:	e7ee      	b.n	80207cc <__sfp+0x60>
 80207ee:	bf00      	nop
 80207f0:	08024458 	.word	0x08024458
 80207f4:	ffff0001 	.word	0xffff0001

080207f8 <fiprintf>:
 80207f8:	b40e      	push	{r1, r2, r3}
 80207fa:	b503      	push	{r0, r1, lr}
 80207fc:	4601      	mov	r1, r0
 80207fe:	ab03      	add	r3, sp, #12
 8020800:	4805      	ldr	r0, [pc, #20]	; (8020818 <fiprintf+0x20>)
 8020802:	f853 2b04 	ldr.w	r2, [r3], #4
 8020806:	6800      	ldr	r0, [r0, #0]
 8020808:	9301      	str	r3, [sp, #4]
 802080a:	f000 f97f 	bl	8020b0c <_vfiprintf_r>
 802080e:	b002      	add	sp, #8
 8020810:	f85d eb04 	ldr.w	lr, [sp], #4
 8020814:	b003      	add	sp, #12
 8020816:	4770      	bx	lr
 8020818:	20000104 	.word	0x20000104

0802081c <_fwalk_reent>:
 802081c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020820:	4606      	mov	r6, r0
 8020822:	4688      	mov	r8, r1
 8020824:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020828:	2700      	movs	r7, #0
 802082a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802082e:	f1b9 0901 	subs.w	r9, r9, #1
 8020832:	d505      	bpl.n	8020840 <_fwalk_reent+0x24>
 8020834:	6824      	ldr	r4, [r4, #0]
 8020836:	2c00      	cmp	r4, #0
 8020838:	d1f7      	bne.n	802082a <_fwalk_reent+0xe>
 802083a:	4638      	mov	r0, r7
 802083c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020840:	89ab      	ldrh	r3, [r5, #12]
 8020842:	2b01      	cmp	r3, #1
 8020844:	d907      	bls.n	8020856 <_fwalk_reent+0x3a>
 8020846:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802084a:	3301      	adds	r3, #1
 802084c:	d003      	beq.n	8020856 <_fwalk_reent+0x3a>
 802084e:	4629      	mov	r1, r5
 8020850:	4630      	mov	r0, r6
 8020852:	47c0      	blx	r8
 8020854:	4307      	orrs	r7, r0
 8020856:	3568      	adds	r5, #104	; 0x68
 8020858:	e7e9      	b.n	802082e <_fwalk_reent+0x12>
	...

0802085c <__libc_init_array>:
 802085c:	b570      	push	{r4, r5, r6, lr}
 802085e:	4d0d      	ldr	r5, [pc, #52]	; (8020894 <__libc_init_array+0x38>)
 8020860:	4c0d      	ldr	r4, [pc, #52]	; (8020898 <__libc_init_array+0x3c>)
 8020862:	1b64      	subs	r4, r4, r5
 8020864:	10a4      	asrs	r4, r4, #2
 8020866:	2600      	movs	r6, #0
 8020868:	42a6      	cmp	r6, r4
 802086a:	d109      	bne.n	8020880 <__libc_init_array+0x24>
 802086c:	4d0b      	ldr	r5, [pc, #44]	; (802089c <__libc_init_array+0x40>)
 802086e:	4c0c      	ldr	r4, [pc, #48]	; (80208a0 <__libc_init_array+0x44>)
 8020870:	f000 ffd0 	bl	8021814 <_init>
 8020874:	1b64      	subs	r4, r4, r5
 8020876:	10a4      	asrs	r4, r4, #2
 8020878:	2600      	movs	r6, #0
 802087a:	42a6      	cmp	r6, r4
 802087c:	d105      	bne.n	802088a <__libc_init_array+0x2e>
 802087e:	bd70      	pop	{r4, r5, r6, pc}
 8020880:	f855 3b04 	ldr.w	r3, [r5], #4
 8020884:	4798      	blx	r3
 8020886:	3601      	adds	r6, #1
 8020888:	e7ee      	b.n	8020868 <__libc_init_array+0xc>
 802088a:	f855 3b04 	ldr.w	r3, [r5], #4
 802088e:	4798      	blx	r3
 8020890:	3601      	adds	r6, #1
 8020892:	e7f2      	b.n	802087a <__libc_init_array+0x1e>
 8020894:	080a9080 	.word	0x080a9080
 8020898:	080a9080 	.word	0x080a9080
 802089c:	080a9080 	.word	0x080a9080
 80208a0:	080a9094 	.word	0x080a9094

080208a4 <__retarget_lock_init_recursive>:
 80208a4:	4770      	bx	lr

080208a6 <__retarget_lock_acquire_recursive>:
 80208a6:	4770      	bx	lr

080208a8 <__retarget_lock_release>:
 80208a8:	4770      	bx	lr

080208aa <__retarget_lock_release_recursive>:
 80208aa:	4770      	bx	lr

080208ac <malloc>:
 80208ac:	4b02      	ldr	r3, [pc, #8]	; (80208b8 <malloc+0xc>)
 80208ae:	4601      	mov	r1, r0
 80208b0:	6818      	ldr	r0, [r3, #0]
 80208b2:	f000 b88d 	b.w	80209d0 <_malloc_r>
 80208b6:	bf00      	nop
 80208b8:	20000104 	.word	0x20000104

080208bc <free>:
 80208bc:	4b02      	ldr	r3, [pc, #8]	; (80208c8 <free+0xc>)
 80208be:	4601      	mov	r1, r0
 80208c0:	6818      	ldr	r0, [r3, #0]
 80208c2:	f000 b819 	b.w	80208f8 <_free_r>
 80208c6:	bf00      	nop
 80208c8:	20000104 	.word	0x20000104

080208cc <memcpy>:
 80208cc:	440a      	add	r2, r1
 80208ce:	4291      	cmp	r1, r2
 80208d0:	f100 33ff 	add.w	r3, r0, #4294967295
 80208d4:	d100      	bne.n	80208d8 <memcpy+0xc>
 80208d6:	4770      	bx	lr
 80208d8:	b510      	push	{r4, lr}
 80208da:	f811 4b01 	ldrb.w	r4, [r1], #1
 80208de:	f803 4f01 	strb.w	r4, [r3, #1]!
 80208e2:	4291      	cmp	r1, r2
 80208e4:	d1f9      	bne.n	80208da <memcpy+0xe>
 80208e6:	bd10      	pop	{r4, pc}

080208e8 <memset>:
 80208e8:	4402      	add	r2, r0
 80208ea:	4603      	mov	r3, r0
 80208ec:	4293      	cmp	r3, r2
 80208ee:	d100      	bne.n	80208f2 <memset+0xa>
 80208f0:	4770      	bx	lr
 80208f2:	f803 1b01 	strb.w	r1, [r3], #1
 80208f6:	e7f9      	b.n	80208ec <memset+0x4>

080208f8 <_free_r>:
 80208f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80208fa:	2900      	cmp	r1, #0
 80208fc:	d044      	beq.n	8020988 <_free_r+0x90>
 80208fe:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020902:	9001      	str	r0, [sp, #4]
 8020904:	2b00      	cmp	r3, #0
 8020906:	f1a1 0404 	sub.w	r4, r1, #4
 802090a:	bfb8      	it	lt
 802090c:	18e4      	addlt	r4, r4, r3
 802090e:	f000 ff41 	bl	8021794 <__malloc_lock>
 8020912:	4a1e      	ldr	r2, [pc, #120]	; (802098c <_free_r+0x94>)
 8020914:	9801      	ldr	r0, [sp, #4]
 8020916:	6813      	ldr	r3, [r2, #0]
 8020918:	b933      	cbnz	r3, 8020928 <_free_r+0x30>
 802091a:	6063      	str	r3, [r4, #4]
 802091c:	6014      	str	r4, [r2, #0]
 802091e:	b003      	add	sp, #12
 8020920:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020924:	f000 bf3c 	b.w	80217a0 <__malloc_unlock>
 8020928:	42a3      	cmp	r3, r4
 802092a:	d908      	bls.n	802093e <_free_r+0x46>
 802092c:	6825      	ldr	r5, [r4, #0]
 802092e:	1961      	adds	r1, r4, r5
 8020930:	428b      	cmp	r3, r1
 8020932:	bf01      	itttt	eq
 8020934:	6819      	ldreq	r1, [r3, #0]
 8020936:	685b      	ldreq	r3, [r3, #4]
 8020938:	1949      	addeq	r1, r1, r5
 802093a:	6021      	streq	r1, [r4, #0]
 802093c:	e7ed      	b.n	802091a <_free_r+0x22>
 802093e:	461a      	mov	r2, r3
 8020940:	685b      	ldr	r3, [r3, #4]
 8020942:	b10b      	cbz	r3, 8020948 <_free_r+0x50>
 8020944:	42a3      	cmp	r3, r4
 8020946:	d9fa      	bls.n	802093e <_free_r+0x46>
 8020948:	6811      	ldr	r1, [r2, #0]
 802094a:	1855      	adds	r5, r2, r1
 802094c:	42a5      	cmp	r5, r4
 802094e:	d10b      	bne.n	8020968 <_free_r+0x70>
 8020950:	6824      	ldr	r4, [r4, #0]
 8020952:	4421      	add	r1, r4
 8020954:	1854      	adds	r4, r2, r1
 8020956:	42a3      	cmp	r3, r4
 8020958:	6011      	str	r1, [r2, #0]
 802095a:	d1e0      	bne.n	802091e <_free_r+0x26>
 802095c:	681c      	ldr	r4, [r3, #0]
 802095e:	685b      	ldr	r3, [r3, #4]
 8020960:	6053      	str	r3, [r2, #4]
 8020962:	4421      	add	r1, r4
 8020964:	6011      	str	r1, [r2, #0]
 8020966:	e7da      	b.n	802091e <_free_r+0x26>
 8020968:	d902      	bls.n	8020970 <_free_r+0x78>
 802096a:	230c      	movs	r3, #12
 802096c:	6003      	str	r3, [r0, #0]
 802096e:	e7d6      	b.n	802091e <_free_r+0x26>
 8020970:	6825      	ldr	r5, [r4, #0]
 8020972:	1961      	adds	r1, r4, r5
 8020974:	428b      	cmp	r3, r1
 8020976:	bf04      	itt	eq
 8020978:	6819      	ldreq	r1, [r3, #0]
 802097a:	685b      	ldreq	r3, [r3, #4]
 802097c:	6063      	str	r3, [r4, #4]
 802097e:	bf04      	itt	eq
 8020980:	1949      	addeq	r1, r1, r5
 8020982:	6021      	streq	r1, [r4, #0]
 8020984:	6054      	str	r4, [r2, #4]
 8020986:	e7ca      	b.n	802091e <_free_r+0x26>
 8020988:	b003      	add	sp, #12
 802098a:	bd30      	pop	{r4, r5, pc}
 802098c:	20015590 	.word	0x20015590

08020990 <sbrk_aligned>:
 8020990:	b570      	push	{r4, r5, r6, lr}
 8020992:	4e0e      	ldr	r6, [pc, #56]	; (80209cc <sbrk_aligned+0x3c>)
 8020994:	460c      	mov	r4, r1
 8020996:	6831      	ldr	r1, [r6, #0]
 8020998:	4605      	mov	r5, r0
 802099a:	b911      	cbnz	r1, 80209a2 <sbrk_aligned+0x12>
 802099c:	f000 fbe4 	bl	8021168 <_sbrk_r>
 80209a0:	6030      	str	r0, [r6, #0]
 80209a2:	4621      	mov	r1, r4
 80209a4:	4628      	mov	r0, r5
 80209a6:	f000 fbdf 	bl	8021168 <_sbrk_r>
 80209aa:	1c43      	adds	r3, r0, #1
 80209ac:	d00a      	beq.n	80209c4 <sbrk_aligned+0x34>
 80209ae:	1cc4      	adds	r4, r0, #3
 80209b0:	f024 0403 	bic.w	r4, r4, #3
 80209b4:	42a0      	cmp	r0, r4
 80209b6:	d007      	beq.n	80209c8 <sbrk_aligned+0x38>
 80209b8:	1a21      	subs	r1, r4, r0
 80209ba:	4628      	mov	r0, r5
 80209bc:	f000 fbd4 	bl	8021168 <_sbrk_r>
 80209c0:	3001      	adds	r0, #1
 80209c2:	d101      	bne.n	80209c8 <sbrk_aligned+0x38>
 80209c4:	f04f 34ff 	mov.w	r4, #4294967295
 80209c8:	4620      	mov	r0, r4
 80209ca:	bd70      	pop	{r4, r5, r6, pc}
 80209cc:	20015594 	.word	0x20015594

080209d0 <_malloc_r>:
 80209d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80209d4:	1ccd      	adds	r5, r1, #3
 80209d6:	f025 0503 	bic.w	r5, r5, #3
 80209da:	3508      	adds	r5, #8
 80209dc:	2d0c      	cmp	r5, #12
 80209de:	bf38      	it	cc
 80209e0:	250c      	movcc	r5, #12
 80209e2:	2d00      	cmp	r5, #0
 80209e4:	4607      	mov	r7, r0
 80209e6:	db01      	blt.n	80209ec <_malloc_r+0x1c>
 80209e8:	42a9      	cmp	r1, r5
 80209ea:	d905      	bls.n	80209f8 <_malloc_r+0x28>
 80209ec:	230c      	movs	r3, #12
 80209ee:	603b      	str	r3, [r7, #0]
 80209f0:	2600      	movs	r6, #0
 80209f2:	4630      	mov	r0, r6
 80209f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80209f8:	4e2e      	ldr	r6, [pc, #184]	; (8020ab4 <_malloc_r+0xe4>)
 80209fa:	f000 fecb 	bl	8021794 <__malloc_lock>
 80209fe:	6833      	ldr	r3, [r6, #0]
 8020a00:	461c      	mov	r4, r3
 8020a02:	bb34      	cbnz	r4, 8020a52 <_malloc_r+0x82>
 8020a04:	4629      	mov	r1, r5
 8020a06:	4638      	mov	r0, r7
 8020a08:	f7ff ffc2 	bl	8020990 <sbrk_aligned>
 8020a0c:	1c43      	adds	r3, r0, #1
 8020a0e:	4604      	mov	r4, r0
 8020a10:	d14d      	bne.n	8020aae <_malloc_r+0xde>
 8020a12:	6834      	ldr	r4, [r6, #0]
 8020a14:	4626      	mov	r6, r4
 8020a16:	2e00      	cmp	r6, #0
 8020a18:	d140      	bne.n	8020a9c <_malloc_r+0xcc>
 8020a1a:	6823      	ldr	r3, [r4, #0]
 8020a1c:	4631      	mov	r1, r6
 8020a1e:	4638      	mov	r0, r7
 8020a20:	eb04 0803 	add.w	r8, r4, r3
 8020a24:	f000 fba0 	bl	8021168 <_sbrk_r>
 8020a28:	4580      	cmp	r8, r0
 8020a2a:	d13a      	bne.n	8020aa2 <_malloc_r+0xd2>
 8020a2c:	6821      	ldr	r1, [r4, #0]
 8020a2e:	3503      	adds	r5, #3
 8020a30:	1a6d      	subs	r5, r5, r1
 8020a32:	f025 0503 	bic.w	r5, r5, #3
 8020a36:	3508      	adds	r5, #8
 8020a38:	2d0c      	cmp	r5, #12
 8020a3a:	bf38      	it	cc
 8020a3c:	250c      	movcc	r5, #12
 8020a3e:	4629      	mov	r1, r5
 8020a40:	4638      	mov	r0, r7
 8020a42:	f7ff ffa5 	bl	8020990 <sbrk_aligned>
 8020a46:	3001      	adds	r0, #1
 8020a48:	d02b      	beq.n	8020aa2 <_malloc_r+0xd2>
 8020a4a:	6823      	ldr	r3, [r4, #0]
 8020a4c:	442b      	add	r3, r5
 8020a4e:	6023      	str	r3, [r4, #0]
 8020a50:	e00e      	b.n	8020a70 <_malloc_r+0xa0>
 8020a52:	6822      	ldr	r2, [r4, #0]
 8020a54:	1b52      	subs	r2, r2, r5
 8020a56:	d41e      	bmi.n	8020a96 <_malloc_r+0xc6>
 8020a58:	2a0b      	cmp	r2, #11
 8020a5a:	d916      	bls.n	8020a8a <_malloc_r+0xba>
 8020a5c:	1961      	adds	r1, r4, r5
 8020a5e:	42a3      	cmp	r3, r4
 8020a60:	6025      	str	r5, [r4, #0]
 8020a62:	bf18      	it	ne
 8020a64:	6059      	strne	r1, [r3, #4]
 8020a66:	6863      	ldr	r3, [r4, #4]
 8020a68:	bf08      	it	eq
 8020a6a:	6031      	streq	r1, [r6, #0]
 8020a6c:	5162      	str	r2, [r4, r5]
 8020a6e:	604b      	str	r3, [r1, #4]
 8020a70:	4638      	mov	r0, r7
 8020a72:	f104 060b 	add.w	r6, r4, #11
 8020a76:	f000 fe93 	bl	80217a0 <__malloc_unlock>
 8020a7a:	f026 0607 	bic.w	r6, r6, #7
 8020a7e:	1d23      	adds	r3, r4, #4
 8020a80:	1af2      	subs	r2, r6, r3
 8020a82:	d0b6      	beq.n	80209f2 <_malloc_r+0x22>
 8020a84:	1b9b      	subs	r3, r3, r6
 8020a86:	50a3      	str	r3, [r4, r2]
 8020a88:	e7b3      	b.n	80209f2 <_malloc_r+0x22>
 8020a8a:	6862      	ldr	r2, [r4, #4]
 8020a8c:	42a3      	cmp	r3, r4
 8020a8e:	bf0c      	ite	eq
 8020a90:	6032      	streq	r2, [r6, #0]
 8020a92:	605a      	strne	r2, [r3, #4]
 8020a94:	e7ec      	b.n	8020a70 <_malloc_r+0xa0>
 8020a96:	4623      	mov	r3, r4
 8020a98:	6864      	ldr	r4, [r4, #4]
 8020a9a:	e7b2      	b.n	8020a02 <_malloc_r+0x32>
 8020a9c:	4634      	mov	r4, r6
 8020a9e:	6876      	ldr	r6, [r6, #4]
 8020aa0:	e7b9      	b.n	8020a16 <_malloc_r+0x46>
 8020aa2:	230c      	movs	r3, #12
 8020aa4:	603b      	str	r3, [r7, #0]
 8020aa6:	4638      	mov	r0, r7
 8020aa8:	f000 fe7a 	bl	80217a0 <__malloc_unlock>
 8020aac:	e7a1      	b.n	80209f2 <_malloc_r+0x22>
 8020aae:	6025      	str	r5, [r4, #0]
 8020ab0:	e7de      	b.n	8020a70 <_malloc_r+0xa0>
 8020ab2:	bf00      	nop
 8020ab4:	20015590 	.word	0x20015590

08020ab8 <__sfputc_r>:
 8020ab8:	6893      	ldr	r3, [r2, #8]
 8020aba:	3b01      	subs	r3, #1
 8020abc:	2b00      	cmp	r3, #0
 8020abe:	b410      	push	{r4}
 8020ac0:	6093      	str	r3, [r2, #8]
 8020ac2:	da08      	bge.n	8020ad6 <__sfputc_r+0x1e>
 8020ac4:	6994      	ldr	r4, [r2, #24]
 8020ac6:	42a3      	cmp	r3, r4
 8020ac8:	db01      	blt.n	8020ace <__sfputc_r+0x16>
 8020aca:	290a      	cmp	r1, #10
 8020acc:	d103      	bne.n	8020ad6 <__sfputc_r+0x1e>
 8020ace:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020ad2:	f000 bbe1 	b.w	8021298 <__swbuf_r>
 8020ad6:	6813      	ldr	r3, [r2, #0]
 8020ad8:	1c58      	adds	r0, r3, #1
 8020ada:	6010      	str	r0, [r2, #0]
 8020adc:	7019      	strb	r1, [r3, #0]
 8020ade:	4608      	mov	r0, r1
 8020ae0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020ae4:	4770      	bx	lr

08020ae6 <__sfputs_r>:
 8020ae6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020ae8:	4606      	mov	r6, r0
 8020aea:	460f      	mov	r7, r1
 8020aec:	4614      	mov	r4, r2
 8020aee:	18d5      	adds	r5, r2, r3
 8020af0:	42ac      	cmp	r4, r5
 8020af2:	d101      	bne.n	8020af8 <__sfputs_r+0x12>
 8020af4:	2000      	movs	r0, #0
 8020af6:	e007      	b.n	8020b08 <__sfputs_r+0x22>
 8020af8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020afc:	463a      	mov	r2, r7
 8020afe:	4630      	mov	r0, r6
 8020b00:	f7ff ffda 	bl	8020ab8 <__sfputc_r>
 8020b04:	1c43      	adds	r3, r0, #1
 8020b06:	d1f3      	bne.n	8020af0 <__sfputs_r+0xa>
 8020b08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020b0c <_vfiprintf_r>:
 8020b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b10:	460d      	mov	r5, r1
 8020b12:	b09d      	sub	sp, #116	; 0x74
 8020b14:	4614      	mov	r4, r2
 8020b16:	4698      	mov	r8, r3
 8020b18:	4606      	mov	r6, r0
 8020b1a:	b118      	cbz	r0, 8020b24 <_vfiprintf_r+0x18>
 8020b1c:	6983      	ldr	r3, [r0, #24]
 8020b1e:	b90b      	cbnz	r3, 8020b24 <_vfiprintf_r+0x18>
 8020b20:	f7ff fdec 	bl	80206fc <__sinit>
 8020b24:	4b89      	ldr	r3, [pc, #548]	; (8020d4c <_vfiprintf_r+0x240>)
 8020b26:	429d      	cmp	r5, r3
 8020b28:	d11b      	bne.n	8020b62 <_vfiprintf_r+0x56>
 8020b2a:	6875      	ldr	r5, [r6, #4]
 8020b2c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020b2e:	07d9      	lsls	r1, r3, #31
 8020b30:	d405      	bmi.n	8020b3e <_vfiprintf_r+0x32>
 8020b32:	89ab      	ldrh	r3, [r5, #12]
 8020b34:	059a      	lsls	r2, r3, #22
 8020b36:	d402      	bmi.n	8020b3e <_vfiprintf_r+0x32>
 8020b38:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020b3a:	f7ff feb4 	bl	80208a6 <__retarget_lock_acquire_recursive>
 8020b3e:	89ab      	ldrh	r3, [r5, #12]
 8020b40:	071b      	lsls	r3, r3, #28
 8020b42:	d501      	bpl.n	8020b48 <_vfiprintf_r+0x3c>
 8020b44:	692b      	ldr	r3, [r5, #16]
 8020b46:	b9eb      	cbnz	r3, 8020b84 <_vfiprintf_r+0x78>
 8020b48:	4629      	mov	r1, r5
 8020b4a:	4630      	mov	r0, r6
 8020b4c:	f000 fc08 	bl	8021360 <__swsetup_r>
 8020b50:	b1c0      	cbz	r0, 8020b84 <_vfiprintf_r+0x78>
 8020b52:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020b54:	07dc      	lsls	r4, r3, #31
 8020b56:	d50e      	bpl.n	8020b76 <_vfiprintf_r+0x6a>
 8020b58:	f04f 30ff 	mov.w	r0, #4294967295
 8020b5c:	b01d      	add	sp, #116	; 0x74
 8020b5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b62:	4b7b      	ldr	r3, [pc, #492]	; (8020d50 <_vfiprintf_r+0x244>)
 8020b64:	429d      	cmp	r5, r3
 8020b66:	d101      	bne.n	8020b6c <_vfiprintf_r+0x60>
 8020b68:	68b5      	ldr	r5, [r6, #8]
 8020b6a:	e7df      	b.n	8020b2c <_vfiprintf_r+0x20>
 8020b6c:	4b79      	ldr	r3, [pc, #484]	; (8020d54 <_vfiprintf_r+0x248>)
 8020b6e:	429d      	cmp	r5, r3
 8020b70:	bf08      	it	eq
 8020b72:	68f5      	ldreq	r5, [r6, #12]
 8020b74:	e7da      	b.n	8020b2c <_vfiprintf_r+0x20>
 8020b76:	89ab      	ldrh	r3, [r5, #12]
 8020b78:	0598      	lsls	r0, r3, #22
 8020b7a:	d4ed      	bmi.n	8020b58 <_vfiprintf_r+0x4c>
 8020b7c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020b7e:	f7ff fe94 	bl	80208aa <__retarget_lock_release_recursive>
 8020b82:	e7e9      	b.n	8020b58 <_vfiprintf_r+0x4c>
 8020b84:	2300      	movs	r3, #0
 8020b86:	9309      	str	r3, [sp, #36]	; 0x24
 8020b88:	2320      	movs	r3, #32
 8020b8a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020b8e:	f8cd 800c 	str.w	r8, [sp, #12]
 8020b92:	2330      	movs	r3, #48	; 0x30
 8020b94:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020d58 <_vfiprintf_r+0x24c>
 8020b98:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020b9c:	f04f 0901 	mov.w	r9, #1
 8020ba0:	4623      	mov	r3, r4
 8020ba2:	469a      	mov	sl, r3
 8020ba4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020ba8:	b10a      	cbz	r2, 8020bae <_vfiprintf_r+0xa2>
 8020baa:	2a25      	cmp	r2, #37	; 0x25
 8020bac:	d1f9      	bne.n	8020ba2 <_vfiprintf_r+0x96>
 8020bae:	ebba 0b04 	subs.w	fp, sl, r4
 8020bb2:	d00b      	beq.n	8020bcc <_vfiprintf_r+0xc0>
 8020bb4:	465b      	mov	r3, fp
 8020bb6:	4622      	mov	r2, r4
 8020bb8:	4629      	mov	r1, r5
 8020bba:	4630      	mov	r0, r6
 8020bbc:	f7ff ff93 	bl	8020ae6 <__sfputs_r>
 8020bc0:	3001      	adds	r0, #1
 8020bc2:	f000 80aa 	beq.w	8020d1a <_vfiprintf_r+0x20e>
 8020bc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020bc8:	445a      	add	r2, fp
 8020bca:	9209      	str	r2, [sp, #36]	; 0x24
 8020bcc:	f89a 3000 	ldrb.w	r3, [sl]
 8020bd0:	2b00      	cmp	r3, #0
 8020bd2:	f000 80a2 	beq.w	8020d1a <_vfiprintf_r+0x20e>
 8020bd6:	2300      	movs	r3, #0
 8020bd8:	f04f 32ff 	mov.w	r2, #4294967295
 8020bdc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020be0:	f10a 0a01 	add.w	sl, sl, #1
 8020be4:	9304      	str	r3, [sp, #16]
 8020be6:	9307      	str	r3, [sp, #28]
 8020be8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020bec:	931a      	str	r3, [sp, #104]	; 0x68
 8020bee:	4654      	mov	r4, sl
 8020bf0:	2205      	movs	r2, #5
 8020bf2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020bf6:	4858      	ldr	r0, [pc, #352]	; (8020d58 <_vfiprintf_r+0x24c>)
 8020bf8:	f7df fafa 	bl	80001f0 <memchr>
 8020bfc:	9a04      	ldr	r2, [sp, #16]
 8020bfe:	b9d8      	cbnz	r0, 8020c38 <_vfiprintf_r+0x12c>
 8020c00:	06d1      	lsls	r1, r2, #27
 8020c02:	bf44      	itt	mi
 8020c04:	2320      	movmi	r3, #32
 8020c06:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020c0a:	0713      	lsls	r3, r2, #28
 8020c0c:	bf44      	itt	mi
 8020c0e:	232b      	movmi	r3, #43	; 0x2b
 8020c10:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020c14:	f89a 3000 	ldrb.w	r3, [sl]
 8020c18:	2b2a      	cmp	r3, #42	; 0x2a
 8020c1a:	d015      	beq.n	8020c48 <_vfiprintf_r+0x13c>
 8020c1c:	9a07      	ldr	r2, [sp, #28]
 8020c1e:	4654      	mov	r4, sl
 8020c20:	2000      	movs	r0, #0
 8020c22:	f04f 0c0a 	mov.w	ip, #10
 8020c26:	4621      	mov	r1, r4
 8020c28:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020c2c:	3b30      	subs	r3, #48	; 0x30
 8020c2e:	2b09      	cmp	r3, #9
 8020c30:	d94e      	bls.n	8020cd0 <_vfiprintf_r+0x1c4>
 8020c32:	b1b0      	cbz	r0, 8020c62 <_vfiprintf_r+0x156>
 8020c34:	9207      	str	r2, [sp, #28]
 8020c36:	e014      	b.n	8020c62 <_vfiprintf_r+0x156>
 8020c38:	eba0 0308 	sub.w	r3, r0, r8
 8020c3c:	fa09 f303 	lsl.w	r3, r9, r3
 8020c40:	4313      	orrs	r3, r2
 8020c42:	9304      	str	r3, [sp, #16]
 8020c44:	46a2      	mov	sl, r4
 8020c46:	e7d2      	b.n	8020bee <_vfiprintf_r+0xe2>
 8020c48:	9b03      	ldr	r3, [sp, #12]
 8020c4a:	1d19      	adds	r1, r3, #4
 8020c4c:	681b      	ldr	r3, [r3, #0]
 8020c4e:	9103      	str	r1, [sp, #12]
 8020c50:	2b00      	cmp	r3, #0
 8020c52:	bfbb      	ittet	lt
 8020c54:	425b      	neglt	r3, r3
 8020c56:	f042 0202 	orrlt.w	r2, r2, #2
 8020c5a:	9307      	strge	r3, [sp, #28]
 8020c5c:	9307      	strlt	r3, [sp, #28]
 8020c5e:	bfb8      	it	lt
 8020c60:	9204      	strlt	r2, [sp, #16]
 8020c62:	7823      	ldrb	r3, [r4, #0]
 8020c64:	2b2e      	cmp	r3, #46	; 0x2e
 8020c66:	d10c      	bne.n	8020c82 <_vfiprintf_r+0x176>
 8020c68:	7863      	ldrb	r3, [r4, #1]
 8020c6a:	2b2a      	cmp	r3, #42	; 0x2a
 8020c6c:	d135      	bne.n	8020cda <_vfiprintf_r+0x1ce>
 8020c6e:	9b03      	ldr	r3, [sp, #12]
 8020c70:	1d1a      	adds	r2, r3, #4
 8020c72:	681b      	ldr	r3, [r3, #0]
 8020c74:	9203      	str	r2, [sp, #12]
 8020c76:	2b00      	cmp	r3, #0
 8020c78:	bfb8      	it	lt
 8020c7a:	f04f 33ff 	movlt.w	r3, #4294967295
 8020c7e:	3402      	adds	r4, #2
 8020c80:	9305      	str	r3, [sp, #20]
 8020c82:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020d68 <_vfiprintf_r+0x25c>
 8020c86:	7821      	ldrb	r1, [r4, #0]
 8020c88:	2203      	movs	r2, #3
 8020c8a:	4650      	mov	r0, sl
 8020c8c:	f7df fab0 	bl	80001f0 <memchr>
 8020c90:	b140      	cbz	r0, 8020ca4 <_vfiprintf_r+0x198>
 8020c92:	2340      	movs	r3, #64	; 0x40
 8020c94:	eba0 000a 	sub.w	r0, r0, sl
 8020c98:	fa03 f000 	lsl.w	r0, r3, r0
 8020c9c:	9b04      	ldr	r3, [sp, #16]
 8020c9e:	4303      	orrs	r3, r0
 8020ca0:	3401      	adds	r4, #1
 8020ca2:	9304      	str	r3, [sp, #16]
 8020ca4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020ca8:	482c      	ldr	r0, [pc, #176]	; (8020d5c <_vfiprintf_r+0x250>)
 8020caa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020cae:	2206      	movs	r2, #6
 8020cb0:	f7df fa9e 	bl	80001f0 <memchr>
 8020cb4:	2800      	cmp	r0, #0
 8020cb6:	d03f      	beq.n	8020d38 <_vfiprintf_r+0x22c>
 8020cb8:	4b29      	ldr	r3, [pc, #164]	; (8020d60 <_vfiprintf_r+0x254>)
 8020cba:	bb1b      	cbnz	r3, 8020d04 <_vfiprintf_r+0x1f8>
 8020cbc:	9b03      	ldr	r3, [sp, #12]
 8020cbe:	3307      	adds	r3, #7
 8020cc0:	f023 0307 	bic.w	r3, r3, #7
 8020cc4:	3308      	adds	r3, #8
 8020cc6:	9303      	str	r3, [sp, #12]
 8020cc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020cca:	443b      	add	r3, r7
 8020ccc:	9309      	str	r3, [sp, #36]	; 0x24
 8020cce:	e767      	b.n	8020ba0 <_vfiprintf_r+0x94>
 8020cd0:	fb0c 3202 	mla	r2, ip, r2, r3
 8020cd4:	460c      	mov	r4, r1
 8020cd6:	2001      	movs	r0, #1
 8020cd8:	e7a5      	b.n	8020c26 <_vfiprintf_r+0x11a>
 8020cda:	2300      	movs	r3, #0
 8020cdc:	3401      	adds	r4, #1
 8020cde:	9305      	str	r3, [sp, #20]
 8020ce0:	4619      	mov	r1, r3
 8020ce2:	f04f 0c0a 	mov.w	ip, #10
 8020ce6:	4620      	mov	r0, r4
 8020ce8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020cec:	3a30      	subs	r2, #48	; 0x30
 8020cee:	2a09      	cmp	r2, #9
 8020cf0:	d903      	bls.n	8020cfa <_vfiprintf_r+0x1ee>
 8020cf2:	2b00      	cmp	r3, #0
 8020cf4:	d0c5      	beq.n	8020c82 <_vfiprintf_r+0x176>
 8020cf6:	9105      	str	r1, [sp, #20]
 8020cf8:	e7c3      	b.n	8020c82 <_vfiprintf_r+0x176>
 8020cfa:	fb0c 2101 	mla	r1, ip, r1, r2
 8020cfe:	4604      	mov	r4, r0
 8020d00:	2301      	movs	r3, #1
 8020d02:	e7f0      	b.n	8020ce6 <_vfiprintf_r+0x1da>
 8020d04:	ab03      	add	r3, sp, #12
 8020d06:	9300      	str	r3, [sp, #0]
 8020d08:	462a      	mov	r2, r5
 8020d0a:	4b16      	ldr	r3, [pc, #88]	; (8020d64 <_vfiprintf_r+0x258>)
 8020d0c:	a904      	add	r1, sp, #16
 8020d0e:	4630      	mov	r0, r6
 8020d10:	f3af 8000 	nop.w
 8020d14:	4607      	mov	r7, r0
 8020d16:	1c78      	adds	r0, r7, #1
 8020d18:	d1d6      	bne.n	8020cc8 <_vfiprintf_r+0x1bc>
 8020d1a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020d1c:	07d9      	lsls	r1, r3, #31
 8020d1e:	d405      	bmi.n	8020d2c <_vfiprintf_r+0x220>
 8020d20:	89ab      	ldrh	r3, [r5, #12]
 8020d22:	059a      	lsls	r2, r3, #22
 8020d24:	d402      	bmi.n	8020d2c <_vfiprintf_r+0x220>
 8020d26:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020d28:	f7ff fdbf 	bl	80208aa <__retarget_lock_release_recursive>
 8020d2c:	89ab      	ldrh	r3, [r5, #12]
 8020d2e:	065b      	lsls	r3, r3, #25
 8020d30:	f53f af12 	bmi.w	8020b58 <_vfiprintf_r+0x4c>
 8020d34:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020d36:	e711      	b.n	8020b5c <_vfiprintf_r+0x50>
 8020d38:	ab03      	add	r3, sp, #12
 8020d3a:	9300      	str	r3, [sp, #0]
 8020d3c:	462a      	mov	r2, r5
 8020d3e:	4b09      	ldr	r3, [pc, #36]	; (8020d64 <_vfiprintf_r+0x258>)
 8020d40:	a904      	add	r1, sp, #16
 8020d42:	4630      	mov	r0, r6
 8020d44:	f000 f880 	bl	8020e48 <_printf_i>
 8020d48:	e7e4      	b.n	8020d14 <_vfiprintf_r+0x208>
 8020d4a:	bf00      	nop
 8020d4c:	08024418 	.word	0x08024418
 8020d50:	08024438 	.word	0x08024438
 8020d54:	080243f8 	.word	0x080243f8
 8020d58:	0802445c 	.word	0x0802445c
 8020d5c:	08024466 	.word	0x08024466
 8020d60:	00000000 	.word	0x00000000
 8020d64:	08020ae7 	.word	0x08020ae7
 8020d68:	08024462 	.word	0x08024462

08020d6c <_printf_common>:
 8020d6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020d70:	4616      	mov	r6, r2
 8020d72:	4699      	mov	r9, r3
 8020d74:	688a      	ldr	r2, [r1, #8]
 8020d76:	690b      	ldr	r3, [r1, #16]
 8020d78:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020d7c:	4293      	cmp	r3, r2
 8020d7e:	bfb8      	it	lt
 8020d80:	4613      	movlt	r3, r2
 8020d82:	6033      	str	r3, [r6, #0]
 8020d84:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020d88:	4607      	mov	r7, r0
 8020d8a:	460c      	mov	r4, r1
 8020d8c:	b10a      	cbz	r2, 8020d92 <_printf_common+0x26>
 8020d8e:	3301      	adds	r3, #1
 8020d90:	6033      	str	r3, [r6, #0]
 8020d92:	6823      	ldr	r3, [r4, #0]
 8020d94:	0699      	lsls	r1, r3, #26
 8020d96:	bf42      	ittt	mi
 8020d98:	6833      	ldrmi	r3, [r6, #0]
 8020d9a:	3302      	addmi	r3, #2
 8020d9c:	6033      	strmi	r3, [r6, #0]
 8020d9e:	6825      	ldr	r5, [r4, #0]
 8020da0:	f015 0506 	ands.w	r5, r5, #6
 8020da4:	d106      	bne.n	8020db4 <_printf_common+0x48>
 8020da6:	f104 0a19 	add.w	sl, r4, #25
 8020daa:	68e3      	ldr	r3, [r4, #12]
 8020dac:	6832      	ldr	r2, [r6, #0]
 8020dae:	1a9b      	subs	r3, r3, r2
 8020db0:	42ab      	cmp	r3, r5
 8020db2:	dc26      	bgt.n	8020e02 <_printf_common+0x96>
 8020db4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8020db8:	1e13      	subs	r3, r2, #0
 8020dba:	6822      	ldr	r2, [r4, #0]
 8020dbc:	bf18      	it	ne
 8020dbe:	2301      	movne	r3, #1
 8020dc0:	0692      	lsls	r2, r2, #26
 8020dc2:	d42b      	bmi.n	8020e1c <_printf_common+0xb0>
 8020dc4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8020dc8:	4649      	mov	r1, r9
 8020dca:	4638      	mov	r0, r7
 8020dcc:	47c0      	blx	r8
 8020dce:	3001      	adds	r0, #1
 8020dd0:	d01e      	beq.n	8020e10 <_printf_common+0xa4>
 8020dd2:	6823      	ldr	r3, [r4, #0]
 8020dd4:	68e5      	ldr	r5, [r4, #12]
 8020dd6:	6832      	ldr	r2, [r6, #0]
 8020dd8:	f003 0306 	and.w	r3, r3, #6
 8020ddc:	2b04      	cmp	r3, #4
 8020dde:	bf08      	it	eq
 8020de0:	1aad      	subeq	r5, r5, r2
 8020de2:	68a3      	ldr	r3, [r4, #8]
 8020de4:	6922      	ldr	r2, [r4, #16]
 8020de6:	bf0c      	ite	eq
 8020de8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8020dec:	2500      	movne	r5, #0
 8020dee:	4293      	cmp	r3, r2
 8020df0:	bfc4      	itt	gt
 8020df2:	1a9b      	subgt	r3, r3, r2
 8020df4:	18ed      	addgt	r5, r5, r3
 8020df6:	2600      	movs	r6, #0
 8020df8:	341a      	adds	r4, #26
 8020dfa:	42b5      	cmp	r5, r6
 8020dfc:	d11a      	bne.n	8020e34 <_printf_common+0xc8>
 8020dfe:	2000      	movs	r0, #0
 8020e00:	e008      	b.n	8020e14 <_printf_common+0xa8>
 8020e02:	2301      	movs	r3, #1
 8020e04:	4652      	mov	r2, sl
 8020e06:	4649      	mov	r1, r9
 8020e08:	4638      	mov	r0, r7
 8020e0a:	47c0      	blx	r8
 8020e0c:	3001      	adds	r0, #1
 8020e0e:	d103      	bne.n	8020e18 <_printf_common+0xac>
 8020e10:	f04f 30ff 	mov.w	r0, #4294967295
 8020e14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020e18:	3501      	adds	r5, #1
 8020e1a:	e7c6      	b.n	8020daa <_printf_common+0x3e>
 8020e1c:	18e1      	adds	r1, r4, r3
 8020e1e:	1c5a      	adds	r2, r3, #1
 8020e20:	2030      	movs	r0, #48	; 0x30
 8020e22:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8020e26:	4422      	add	r2, r4
 8020e28:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8020e2c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8020e30:	3302      	adds	r3, #2
 8020e32:	e7c7      	b.n	8020dc4 <_printf_common+0x58>
 8020e34:	2301      	movs	r3, #1
 8020e36:	4622      	mov	r2, r4
 8020e38:	4649      	mov	r1, r9
 8020e3a:	4638      	mov	r0, r7
 8020e3c:	47c0      	blx	r8
 8020e3e:	3001      	adds	r0, #1
 8020e40:	d0e6      	beq.n	8020e10 <_printf_common+0xa4>
 8020e42:	3601      	adds	r6, #1
 8020e44:	e7d9      	b.n	8020dfa <_printf_common+0x8e>
	...

08020e48 <_printf_i>:
 8020e48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8020e4c:	7e0f      	ldrb	r7, [r1, #24]
 8020e4e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020e50:	2f78      	cmp	r7, #120	; 0x78
 8020e52:	4691      	mov	r9, r2
 8020e54:	4680      	mov	r8, r0
 8020e56:	460c      	mov	r4, r1
 8020e58:	469a      	mov	sl, r3
 8020e5a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8020e5e:	d807      	bhi.n	8020e70 <_printf_i+0x28>
 8020e60:	2f62      	cmp	r7, #98	; 0x62
 8020e62:	d80a      	bhi.n	8020e7a <_printf_i+0x32>
 8020e64:	2f00      	cmp	r7, #0
 8020e66:	f000 80d8 	beq.w	802101a <_printf_i+0x1d2>
 8020e6a:	2f58      	cmp	r7, #88	; 0x58
 8020e6c:	f000 80a3 	beq.w	8020fb6 <_printf_i+0x16e>
 8020e70:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020e74:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8020e78:	e03a      	b.n	8020ef0 <_printf_i+0xa8>
 8020e7a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8020e7e:	2b15      	cmp	r3, #21
 8020e80:	d8f6      	bhi.n	8020e70 <_printf_i+0x28>
 8020e82:	a101      	add	r1, pc, #4	; (adr r1, 8020e88 <_printf_i+0x40>)
 8020e84:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8020e88:	08020ee1 	.word	0x08020ee1
 8020e8c:	08020ef5 	.word	0x08020ef5
 8020e90:	08020e71 	.word	0x08020e71
 8020e94:	08020e71 	.word	0x08020e71
 8020e98:	08020e71 	.word	0x08020e71
 8020e9c:	08020e71 	.word	0x08020e71
 8020ea0:	08020ef5 	.word	0x08020ef5
 8020ea4:	08020e71 	.word	0x08020e71
 8020ea8:	08020e71 	.word	0x08020e71
 8020eac:	08020e71 	.word	0x08020e71
 8020eb0:	08020e71 	.word	0x08020e71
 8020eb4:	08021001 	.word	0x08021001
 8020eb8:	08020f25 	.word	0x08020f25
 8020ebc:	08020fe3 	.word	0x08020fe3
 8020ec0:	08020e71 	.word	0x08020e71
 8020ec4:	08020e71 	.word	0x08020e71
 8020ec8:	08021023 	.word	0x08021023
 8020ecc:	08020e71 	.word	0x08020e71
 8020ed0:	08020f25 	.word	0x08020f25
 8020ed4:	08020e71 	.word	0x08020e71
 8020ed8:	08020e71 	.word	0x08020e71
 8020edc:	08020feb 	.word	0x08020feb
 8020ee0:	682b      	ldr	r3, [r5, #0]
 8020ee2:	1d1a      	adds	r2, r3, #4
 8020ee4:	681b      	ldr	r3, [r3, #0]
 8020ee6:	602a      	str	r2, [r5, #0]
 8020ee8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020eec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8020ef0:	2301      	movs	r3, #1
 8020ef2:	e0a3      	b.n	802103c <_printf_i+0x1f4>
 8020ef4:	6820      	ldr	r0, [r4, #0]
 8020ef6:	6829      	ldr	r1, [r5, #0]
 8020ef8:	0606      	lsls	r6, r0, #24
 8020efa:	f101 0304 	add.w	r3, r1, #4
 8020efe:	d50a      	bpl.n	8020f16 <_printf_i+0xce>
 8020f00:	680e      	ldr	r6, [r1, #0]
 8020f02:	602b      	str	r3, [r5, #0]
 8020f04:	2e00      	cmp	r6, #0
 8020f06:	da03      	bge.n	8020f10 <_printf_i+0xc8>
 8020f08:	232d      	movs	r3, #45	; 0x2d
 8020f0a:	4276      	negs	r6, r6
 8020f0c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020f10:	485e      	ldr	r0, [pc, #376]	; (802108c <_printf_i+0x244>)
 8020f12:	230a      	movs	r3, #10
 8020f14:	e019      	b.n	8020f4a <_printf_i+0x102>
 8020f16:	680e      	ldr	r6, [r1, #0]
 8020f18:	602b      	str	r3, [r5, #0]
 8020f1a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020f1e:	bf18      	it	ne
 8020f20:	b236      	sxthne	r6, r6
 8020f22:	e7ef      	b.n	8020f04 <_printf_i+0xbc>
 8020f24:	682b      	ldr	r3, [r5, #0]
 8020f26:	6820      	ldr	r0, [r4, #0]
 8020f28:	1d19      	adds	r1, r3, #4
 8020f2a:	6029      	str	r1, [r5, #0]
 8020f2c:	0601      	lsls	r1, r0, #24
 8020f2e:	d501      	bpl.n	8020f34 <_printf_i+0xec>
 8020f30:	681e      	ldr	r6, [r3, #0]
 8020f32:	e002      	b.n	8020f3a <_printf_i+0xf2>
 8020f34:	0646      	lsls	r6, r0, #25
 8020f36:	d5fb      	bpl.n	8020f30 <_printf_i+0xe8>
 8020f38:	881e      	ldrh	r6, [r3, #0]
 8020f3a:	4854      	ldr	r0, [pc, #336]	; (802108c <_printf_i+0x244>)
 8020f3c:	2f6f      	cmp	r7, #111	; 0x6f
 8020f3e:	bf0c      	ite	eq
 8020f40:	2308      	moveq	r3, #8
 8020f42:	230a      	movne	r3, #10
 8020f44:	2100      	movs	r1, #0
 8020f46:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8020f4a:	6865      	ldr	r5, [r4, #4]
 8020f4c:	60a5      	str	r5, [r4, #8]
 8020f4e:	2d00      	cmp	r5, #0
 8020f50:	bfa2      	ittt	ge
 8020f52:	6821      	ldrge	r1, [r4, #0]
 8020f54:	f021 0104 	bicge.w	r1, r1, #4
 8020f58:	6021      	strge	r1, [r4, #0]
 8020f5a:	b90e      	cbnz	r6, 8020f60 <_printf_i+0x118>
 8020f5c:	2d00      	cmp	r5, #0
 8020f5e:	d04d      	beq.n	8020ffc <_printf_i+0x1b4>
 8020f60:	4615      	mov	r5, r2
 8020f62:	fbb6 f1f3 	udiv	r1, r6, r3
 8020f66:	fb03 6711 	mls	r7, r3, r1, r6
 8020f6a:	5dc7      	ldrb	r7, [r0, r7]
 8020f6c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8020f70:	4637      	mov	r7, r6
 8020f72:	42bb      	cmp	r3, r7
 8020f74:	460e      	mov	r6, r1
 8020f76:	d9f4      	bls.n	8020f62 <_printf_i+0x11a>
 8020f78:	2b08      	cmp	r3, #8
 8020f7a:	d10b      	bne.n	8020f94 <_printf_i+0x14c>
 8020f7c:	6823      	ldr	r3, [r4, #0]
 8020f7e:	07de      	lsls	r6, r3, #31
 8020f80:	d508      	bpl.n	8020f94 <_printf_i+0x14c>
 8020f82:	6923      	ldr	r3, [r4, #16]
 8020f84:	6861      	ldr	r1, [r4, #4]
 8020f86:	4299      	cmp	r1, r3
 8020f88:	bfde      	ittt	le
 8020f8a:	2330      	movle	r3, #48	; 0x30
 8020f8c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8020f90:	f105 35ff 	addle.w	r5, r5, #4294967295
 8020f94:	1b52      	subs	r2, r2, r5
 8020f96:	6122      	str	r2, [r4, #16]
 8020f98:	f8cd a000 	str.w	sl, [sp]
 8020f9c:	464b      	mov	r3, r9
 8020f9e:	aa03      	add	r2, sp, #12
 8020fa0:	4621      	mov	r1, r4
 8020fa2:	4640      	mov	r0, r8
 8020fa4:	f7ff fee2 	bl	8020d6c <_printf_common>
 8020fa8:	3001      	adds	r0, #1
 8020faa:	d14c      	bne.n	8021046 <_printf_i+0x1fe>
 8020fac:	f04f 30ff 	mov.w	r0, #4294967295
 8020fb0:	b004      	add	sp, #16
 8020fb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020fb6:	4835      	ldr	r0, [pc, #212]	; (802108c <_printf_i+0x244>)
 8020fb8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8020fbc:	6829      	ldr	r1, [r5, #0]
 8020fbe:	6823      	ldr	r3, [r4, #0]
 8020fc0:	f851 6b04 	ldr.w	r6, [r1], #4
 8020fc4:	6029      	str	r1, [r5, #0]
 8020fc6:	061d      	lsls	r5, r3, #24
 8020fc8:	d514      	bpl.n	8020ff4 <_printf_i+0x1ac>
 8020fca:	07df      	lsls	r7, r3, #31
 8020fcc:	bf44      	itt	mi
 8020fce:	f043 0320 	orrmi.w	r3, r3, #32
 8020fd2:	6023      	strmi	r3, [r4, #0]
 8020fd4:	b91e      	cbnz	r6, 8020fde <_printf_i+0x196>
 8020fd6:	6823      	ldr	r3, [r4, #0]
 8020fd8:	f023 0320 	bic.w	r3, r3, #32
 8020fdc:	6023      	str	r3, [r4, #0]
 8020fde:	2310      	movs	r3, #16
 8020fe0:	e7b0      	b.n	8020f44 <_printf_i+0xfc>
 8020fe2:	6823      	ldr	r3, [r4, #0]
 8020fe4:	f043 0320 	orr.w	r3, r3, #32
 8020fe8:	6023      	str	r3, [r4, #0]
 8020fea:	2378      	movs	r3, #120	; 0x78
 8020fec:	4828      	ldr	r0, [pc, #160]	; (8021090 <_printf_i+0x248>)
 8020fee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8020ff2:	e7e3      	b.n	8020fbc <_printf_i+0x174>
 8020ff4:	0659      	lsls	r1, r3, #25
 8020ff6:	bf48      	it	mi
 8020ff8:	b2b6      	uxthmi	r6, r6
 8020ffa:	e7e6      	b.n	8020fca <_printf_i+0x182>
 8020ffc:	4615      	mov	r5, r2
 8020ffe:	e7bb      	b.n	8020f78 <_printf_i+0x130>
 8021000:	682b      	ldr	r3, [r5, #0]
 8021002:	6826      	ldr	r6, [r4, #0]
 8021004:	6961      	ldr	r1, [r4, #20]
 8021006:	1d18      	adds	r0, r3, #4
 8021008:	6028      	str	r0, [r5, #0]
 802100a:	0635      	lsls	r5, r6, #24
 802100c:	681b      	ldr	r3, [r3, #0]
 802100e:	d501      	bpl.n	8021014 <_printf_i+0x1cc>
 8021010:	6019      	str	r1, [r3, #0]
 8021012:	e002      	b.n	802101a <_printf_i+0x1d2>
 8021014:	0670      	lsls	r0, r6, #25
 8021016:	d5fb      	bpl.n	8021010 <_printf_i+0x1c8>
 8021018:	8019      	strh	r1, [r3, #0]
 802101a:	2300      	movs	r3, #0
 802101c:	6123      	str	r3, [r4, #16]
 802101e:	4615      	mov	r5, r2
 8021020:	e7ba      	b.n	8020f98 <_printf_i+0x150>
 8021022:	682b      	ldr	r3, [r5, #0]
 8021024:	1d1a      	adds	r2, r3, #4
 8021026:	602a      	str	r2, [r5, #0]
 8021028:	681d      	ldr	r5, [r3, #0]
 802102a:	6862      	ldr	r2, [r4, #4]
 802102c:	2100      	movs	r1, #0
 802102e:	4628      	mov	r0, r5
 8021030:	f7df f8de 	bl	80001f0 <memchr>
 8021034:	b108      	cbz	r0, 802103a <_printf_i+0x1f2>
 8021036:	1b40      	subs	r0, r0, r5
 8021038:	6060      	str	r0, [r4, #4]
 802103a:	6863      	ldr	r3, [r4, #4]
 802103c:	6123      	str	r3, [r4, #16]
 802103e:	2300      	movs	r3, #0
 8021040:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021044:	e7a8      	b.n	8020f98 <_printf_i+0x150>
 8021046:	6923      	ldr	r3, [r4, #16]
 8021048:	462a      	mov	r2, r5
 802104a:	4649      	mov	r1, r9
 802104c:	4640      	mov	r0, r8
 802104e:	47d0      	blx	sl
 8021050:	3001      	adds	r0, #1
 8021052:	d0ab      	beq.n	8020fac <_printf_i+0x164>
 8021054:	6823      	ldr	r3, [r4, #0]
 8021056:	079b      	lsls	r3, r3, #30
 8021058:	d413      	bmi.n	8021082 <_printf_i+0x23a>
 802105a:	68e0      	ldr	r0, [r4, #12]
 802105c:	9b03      	ldr	r3, [sp, #12]
 802105e:	4298      	cmp	r0, r3
 8021060:	bfb8      	it	lt
 8021062:	4618      	movlt	r0, r3
 8021064:	e7a4      	b.n	8020fb0 <_printf_i+0x168>
 8021066:	2301      	movs	r3, #1
 8021068:	4632      	mov	r2, r6
 802106a:	4649      	mov	r1, r9
 802106c:	4640      	mov	r0, r8
 802106e:	47d0      	blx	sl
 8021070:	3001      	adds	r0, #1
 8021072:	d09b      	beq.n	8020fac <_printf_i+0x164>
 8021074:	3501      	adds	r5, #1
 8021076:	68e3      	ldr	r3, [r4, #12]
 8021078:	9903      	ldr	r1, [sp, #12]
 802107a:	1a5b      	subs	r3, r3, r1
 802107c:	42ab      	cmp	r3, r5
 802107e:	dcf2      	bgt.n	8021066 <_printf_i+0x21e>
 8021080:	e7eb      	b.n	802105a <_printf_i+0x212>
 8021082:	2500      	movs	r5, #0
 8021084:	f104 0619 	add.w	r6, r4, #25
 8021088:	e7f5      	b.n	8021076 <_printf_i+0x22e>
 802108a:	bf00      	nop
 802108c:	0802446d 	.word	0x0802446d
 8021090:	0802447e 	.word	0x0802447e

08021094 <cleanup_glue>:
 8021094:	b538      	push	{r3, r4, r5, lr}
 8021096:	460c      	mov	r4, r1
 8021098:	6809      	ldr	r1, [r1, #0]
 802109a:	4605      	mov	r5, r0
 802109c:	b109      	cbz	r1, 80210a2 <cleanup_glue+0xe>
 802109e:	f7ff fff9 	bl	8021094 <cleanup_glue>
 80210a2:	4621      	mov	r1, r4
 80210a4:	4628      	mov	r0, r5
 80210a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80210aa:	f7ff bc25 	b.w	80208f8 <_free_r>
	...

080210b0 <_reclaim_reent>:
 80210b0:	4b2c      	ldr	r3, [pc, #176]	; (8021164 <_reclaim_reent+0xb4>)
 80210b2:	681b      	ldr	r3, [r3, #0]
 80210b4:	4283      	cmp	r3, r0
 80210b6:	b570      	push	{r4, r5, r6, lr}
 80210b8:	4604      	mov	r4, r0
 80210ba:	d051      	beq.n	8021160 <_reclaim_reent+0xb0>
 80210bc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80210be:	b143      	cbz	r3, 80210d2 <_reclaim_reent+0x22>
 80210c0:	68db      	ldr	r3, [r3, #12]
 80210c2:	2b00      	cmp	r3, #0
 80210c4:	d14a      	bne.n	802115c <_reclaim_reent+0xac>
 80210c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80210c8:	6819      	ldr	r1, [r3, #0]
 80210ca:	b111      	cbz	r1, 80210d2 <_reclaim_reent+0x22>
 80210cc:	4620      	mov	r0, r4
 80210ce:	f7ff fc13 	bl	80208f8 <_free_r>
 80210d2:	6961      	ldr	r1, [r4, #20]
 80210d4:	b111      	cbz	r1, 80210dc <_reclaim_reent+0x2c>
 80210d6:	4620      	mov	r0, r4
 80210d8:	f7ff fc0e 	bl	80208f8 <_free_r>
 80210dc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80210de:	b111      	cbz	r1, 80210e6 <_reclaim_reent+0x36>
 80210e0:	4620      	mov	r0, r4
 80210e2:	f7ff fc09 	bl	80208f8 <_free_r>
 80210e6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80210e8:	b111      	cbz	r1, 80210f0 <_reclaim_reent+0x40>
 80210ea:	4620      	mov	r0, r4
 80210ec:	f7ff fc04 	bl	80208f8 <_free_r>
 80210f0:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80210f2:	b111      	cbz	r1, 80210fa <_reclaim_reent+0x4a>
 80210f4:	4620      	mov	r0, r4
 80210f6:	f7ff fbff 	bl	80208f8 <_free_r>
 80210fa:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80210fc:	b111      	cbz	r1, 8021104 <_reclaim_reent+0x54>
 80210fe:	4620      	mov	r0, r4
 8021100:	f7ff fbfa 	bl	80208f8 <_free_r>
 8021104:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8021106:	b111      	cbz	r1, 802110e <_reclaim_reent+0x5e>
 8021108:	4620      	mov	r0, r4
 802110a:	f7ff fbf5 	bl	80208f8 <_free_r>
 802110e:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021110:	b111      	cbz	r1, 8021118 <_reclaim_reent+0x68>
 8021112:	4620      	mov	r0, r4
 8021114:	f7ff fbf0 	bl	80208f8 <_free_r>
 8021118:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802111a:	b111      	cbz	r1, 8021122 <_reclaim_reent+0x72>
 802111c:	4620      	mov	r0, r4
 802111e:	f7ff fbeb 	bl	80208f8 <_free_r>
 8021122:	69a3      	ldr	r3, [r4, #24]
 8021124:	b1e3      	cbz	r3, 8021160 <_reclaim_reent+0xb0>
 8021126:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8021128:	4620      	mov	r0, r4
 802112a:	4798      	blx	r3
 802112c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802112e:	b1b9      	cbz	r1, 8021160 <_reclaim_reent+0xb0>
 8021130:	4620      	mov	r0, r4
 8021132:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8021136:	f7ff bfad 	b.w	8021094 <cleanup_glue>
 802113a:	5949      	ldr	r1, [r1, r5]
 802113c:	b941      	cbnz	r1, 8021150 <_reclaim_reent+0xa0>
 802113e:	3504      	adds	r5, #4
 8021140:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021142:	2d80      	cmp	r5, #128	; 0x80
 8021144:	68d9      	ldr	r1, [r3, #12]
 8021146:	d1f8      	bne.n	802113a <_reclaim_reent+0x8a>
 8021148:	4620      	mov	r0, r4
 802114a:	f7ff fbd5 	bl	80208f8 <_free_r>
 802114e:	e7ba      	b.n	80210c6 <_reclaim_reent+0x16>
 8021150:	680e      	ldr	r6, [r1, #0]
 8021152:	4620      	mov	r0, r4
 8021154:	f7ff fbd0 	bl	80208f8 <_free_r>
 8021158:	4631      	mov	r1, r6
 802115a:	e7ef      	b.n	802113c <_reclaim_reent+0x8c>
 802115c:	2500      	movs	r5, #0
 802115e:	e7ef      	b.n	8021140 <_reclaim_reent+0x90>
 8021160:	bd70      	pop	{r4, r5, r6, pc}
 8021162:	bf00      	nop
 8021164:	20000104 	.word	0x20000104

08021168 <_sbrk_r>:
 8021168:	b538      	push	{r3, r4, r5, lr}
 802116a:	4d06      	ldr	r5, [pc, #24]	; (8021184 <_sbrk_r+0x1c>)
 802116c:	2300      	movs	r3, #0
 802116e:	4604      	mov	r4, r0
 8021170:	4608      	mov	r0, r1
 8021172:	602b      	str	r3, [r5, #0]
 8021174:	f7e0 ffdc 	bl	8002130 <_sbrk>
 8021178:	1c43      	adds	r3, r0, #1
 802117a:	d102      	bne.n	8021182 <_sbrk_r+0x1a>
 802117c:	682b      	ldr	r3, [r5, #0]
 802117e:	b103      	cbz	r3, 8021182 <_sbrk_r+0x1a>
 8021180:	6023      	str	r3, [r4, #0]
 8021182:	bd38      	pop	{r3, r4, r5, pc}
 8021184:	200156a0 	.word	0x200156a0

08021188 <_raise_r>:
 8021188:	291f      	cmp	r1, #31
 802118a:	b538      	push	{r3, r4, r5, lr}
 802118c:	4604      	mov	r4, r0
 802118e:	460d      	mov	r5, r1
 8021190:	d904      	bls.n	802119c <_raise_r+0x14>
 8021192:	2316      	movs	r3, #22
 8021194:	6003      	str	r3, [r0, #0]
 8021196:	f04f 30ff 	mov.w	r0, #4294967295
 802119a:	bd38      	pop	{r3, r4, r5, pc}
 802119c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802119e:	b112      	cbz	r2, 80211a6 <_raise_r+0x1e>
 80211a0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80211a4:	b94b      	cbnz	r3, 80211ba <_raise_r+0x32>
 80211a6:	4620      	mov	r0, r4
 80211a8:	f000 f830 	bl	802120c <_getpid_r>
 80211ac:	462a      	mov	r2, r5
 80211ae:	4601      	mov	r1, r0
 80211b0:	4620      	mov	r0, r4
 80211b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80211b6:	f000 b817 	b.w	80211e8 <_kill_r>
 80211ba:	2b01      	cmp	r3, #1
 80211bc:	d00a      	beq.n	80211d4 <_raise_r+0x4c>
 80211be:	1c59      	adds	r1, r3, #1
 80211c0:	d103      	bne.n	80211ca <_raise_r+0x42>
 80211c2:	2316      	movs	r3, #22
 80211c4:	6003      	str	r3, [r0, #0]
 80211c6:	2001      	movs	r0, #1
 80211c8:	e7e7      	b.n	802119a <_raise_r+0x12>
 80211ca:	2400      	movs	r4, #0
 80211cc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80211d0:	4628      	mov	r0, r5
 80211d2:	4798      	blx	r3
 80211d4:	2000      	movs	r0, #0
 80211d6:	e7e0      	b.n	802119a <_raise_r+0x12>

080211d8 <raise>:
 80211d8:	4b02      	ldr	r3, [pc, #8]	; (80211e4 <raise+0xc>)
 80211da:	4601      	mov	r1, r0
 80211dc:	6818      	ldr	r0, [r3, #0]
 80211de:	f7ff bfd3 	b.w	8021188 <_raise_r>
 80211e2:	bf00      	nop
 80211e4:	20000104 	.word	0x20000104

080211e8 <_kill_r>:
 80211e8:	b538      	push	{r3, r4, r5, lr}
 80211ea:	4d07      	ldr	r5, [pc, #28]	; (8021208 <_kill_r+0x20>)
 80211ec:	2300      	movs	r3, #0
 80211ee:	4604      	mov	r4, r0
 80211f0:	4608      	mov	r0, r1
 80211f2:	4611      	mov	r1, r2
 80211f4:	602b      	str	r3, [r5, #0]
 80211f6:	f7e0 ff65 	bl	80020c4 <_kill>
 80211fa:	1c43      	adds	r3, r0, #1
 80211fc:	d102      	bne.n	8021204 <_kill_r+0x1c>
 80211fe:	682b      	ldr	r3, [r5, #0]
 8021200:	b103      	cbz	r3, 8021204 <_kill_r+0x1c>
 8021202:	6023      	str	r3, [r4, #0]
 8021204:	bd38      	pop	{r3, r4, r5, pc}
 8021206:	bf00      	nop
 8021208:	200156a0 	.word	0x200156a0

0802120c <_getpid_r>:
 802120c:	f7e0 bf58 	b.w	80020c0 <_getpid>

08021210 <__sread>:
 8021210:	b510      	push	{r4, lr}
 8021212:	460c      	mov	r4, r1
 8021214:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021218:	f000 fac8 	bl	80217ac <_read_r>
 802121c:	2800      	cmp	r0, #0
 802121e:	bfab      	itete	ge
 8021220:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021222:	89a3      	ldrhlt	r3, [r4, #12]
 8021224:	181b      	addge	r3, r3, r0
 8021226:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802122a:	bfac      	ite	ge
 802122c:	6563      	strge	r3, [r4, #84]	; 0x54
 802122e:	81a3      	strhlt	r3, [r4, #12]
 8021230:	bd10      	pop	{r4, pc}

08021232 <__swrite>:
 8021232:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021236:	461f      	mov	r7, r3
 8021238:	898b      	ldrh	r3, [r1, #12]
 802123a:	05db      	lsls	r3, r3, #23
 802123c:	4605      	mov	r5, r0
 802123e:	460c      	mov	r4, r1
 8021240:	4616      	mov	r6, r2
 8021242:	d505      	bpl.n	8021250 <__swrite+0x1e>
 8021244:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021248:	2302      	movs	r3, #2
 802124a:	2200      	movs	r2, #0
 802124c:	f000 fa2a 	bl	80216a4 <_lseek_r>
 8021250:	89a3      	ldrh	r3, [r4, #12]
 8021252:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021256:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802125a:	81a3      	strh	r3, [r4, #12]
 802125c:	4632      	mov	r2, r6
 802125e:	463b      	mov	r3, r7
 8021260:	4628      	mov	r0, r5
 8021262:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021266:	f000 b869 	b.w	802133c <_write_r>

0802126a <__sseek>:
 802126a:	b510      	push	{r4, lr}
 802126c:	460c      	mov	r4, r1
 802126e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021272:	f000 fa17 	bl	80216a4 <_lseek_r>
 8021276:	1c43      	adds	r3, r0, #1
 8021278:	89a3      	ldrh	r3, [r4, #12]
 802127a:	bf15      	itete	ne
 802127c:	6560      	strne	r0, [r4, #84]	; 0x54
 802127e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8021282:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8021286:	81a3      	strheq	r3, [r4, #12]
 8021288:	bf18      	it	ne
 802128a:	81a3      	strhne	r3, [r4, #12]
 802128c:	bd10      	pop	{r4, pc}

0802128e <__sclose>:
 802128e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021292:	f000 b935 	b.w	8021500 <_close_r>
	...

08021298 <__swbuf_r>:
 8021298:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802129a:	460e      	mov	r6, r1
 802129c:	4614      	mov	r4, r2
 802129e:	4605      	mov	r5, r0
 80212a0:	b118      	cbz	r0, 80212aa <__swbuf_r+0x12>
 80212a2:	6983      	ldr	r3, [r0, #24]
 80212a4:	b90b      	cbnz	r3, 80212aa <__swbuf_r+0x12>
 80212a6:	f7ff fa29 	bl	80206fc <__sinit>
 80212aa:	4b21      	ldr	r3, [pc, #132]	; (8021330 <__swbuf_r+0x98>)
 80212ac:	429c      	cmp	r4, r3
 80212ae:	d12b      	bne.n	8021308 <__swbuf_r+0x70>
 80212b0:	686c      	ldr	r4, [r5, #4]
 80212b2:	69a3      	ldr	r3, [r4, #24]
 80212b4:	60a3      	str	r3, [r4, #8]
 80212b6:	89a3      	ldrh	r3, [r4, #12]
 80212b8:	071a      	lsls	r2, r3, #28
 80212ba:	d52f      	bpl.n	802131c <__swbuf_r+0x84>
 80212bc:	6923      	ldr	r3, [r4, #16]
 80212be:	b36b      	cbz	r3, 802131c <__swbuf_r+0x84>
 80212c0:	6923      	ldr	r3, [r4, #16]
 80212c2:	6820      	ldr	r0, [r4, #0]
 80212c4:	1ac0      	subs	r0, r0, r3
 80212c6:	6963      	ldr	r3, [r4, #20]
 80212c8:	b2f6      	uxtb	r6, r6
 80212ca:	4283      	cmp	r3, r0
 80212cc:	4637      	mov	r7, r6
 80212ce:	dc04      	bgt.n	80212da <__swbuf_r+0x42>
 80212d0:	4621      	mov	r1, r4
 80212d2:	4628      	mov	r0, r5
 80212d4:	f000 f9aa 	bl	802162c <_fflush_r>
 80212d8:	bb30      	cbnz	r0, 8021328 <__swbuf_r+0x90>
 80212da:	68a3      	ldr	r3, [r4, #8]
 80212dc:	3b01      	subs	r3, #1
 80212de:	60a3      	str	r3, [r4, #8]
 80212e0:	6823      	ldr	r3, [r4, #0]
 80212e2:	1c5a      	adds	r2, r3, #1
 80212e4:	6022      	str	r2, [r4, #0]
 80212e6:	701e      	strb	r6, [r3, #0]
 80212e8:	6963      	ldr	r3, [r4, #20]
 80212ea:	3001      	adds	r0, #1
 80212ec:	4283      	cmp	r3, r0
 80212ee:	d004      	beq.n	80212fa <__swbuf_r+0x62>
 80212f0:	89a3      	ldrh	r3, [r4, #12]
 80212f2:	07db      	lsls	r3, r3, #31
 80212f4:	d506      	bpl.n	8021304 <__swbuf_r+0x6c>
 80212f6:	2e0a      	cmp	r6, #10
 80212f8:	d104      	bne.n	8021304 <__swbuf_r+0x6c>
 80212fa:	4621      	mov	r1, r4
 80212fc:	4628      	mov	r0, r5
 80212fe:	f000 f995 	bl	802162c <_fflush_r>
 8021302:	b988      	cbnz	r0, 8021328 <__swbuf_r+0x90>
 8021304:	4638      	mov	r0, r7
 8021306:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021308:	4b0a      	ldr	r3, [pc, #40]	; (8021334 <__swbuf_r+0x9c>)
 802130a:	429c      	cmp	r4, r3
 802130c:	d101      	bne.n	8021312 <__swbuf_r+0x7a>
 802130e:	68ac      	ldr	r4, [r5, #8]
 8021310:	e7cf      	b.n	80212b2 <__swbuf_r+0x1a>
 8021312:	4b09      	ldr	r3, [pc, #36]	; (8021338 <__swbuf_r+0xa0>)
 8021314:	429c      	cmp	r4, r3
 8021316:	bf08      	it	eq
 8021318:	68ec      	ldreq	r4, [r5, #12]
 802131a:	e7ca      	b.n	80212b2 <__swbuf_r+0x1a>
 802131c:	4621      	mov	r1, r4
 802131e:	4628      	mov	r0, r5
 8021320:	f000 f81e 	bl	8021360 <__swsetup_r>
 8021324:	2800      	cmp	r0, #0
 8021326:	d0cb      	beq.n	80212c0 <__swbuf_r+0x28>
 8021328:	f04f 37ff 	mov.w	r7, #4294967295
 802132c:	e7ea      	b.n	8021304 <__swbuf_r+0x6c>
 802132e:	bf00      	nop
 8021330:	08024418 	.word	0x08024418
 8021334:	08024438 	.word	0x08024438
 8021338:	080243f8 	.word	0x080243f8

0802133c <_write_r>:
 802133c:	b538      	push	{r3, r4, r5, lr}
 802133e:	4d07      	ldr	r5, [pc, #28]	; (802135c <_write_r+0x20>)
 8021340:	4604      	mov	r4, r0
 8021342:	4608      	mov	r0, r1
 8021344:	4611      	mov	r1, r2
 8021346:	2200      	movs	r2, #0
 8021348:	602a      	str	r2, [r5, #0]
 802134a:	461a      	mov	r2, r3
 802134c:	f7e0 fed6 	bl	80020fc <_write>
 8021350:	1c43      	adds	r3, r0, #1
 8021352:	d102      	bne.n	802135a <_write_r+0x1e>
 8021354:	682b      	ldr	r3, [r5, #0]
 8021356:	b103      	cbz	r3, 802135a <_write_r+0x1e>
 8021358:	6023      	str	r3, [r4, #0]
 802135a:	bd38      	pop	{r3, r4, r5, pc}
 802135c:	200156a0 	.word	0x200156a0

08021360 <__swsetup_r>:
 8021360:	4b32      	ldr	r3, [pc, #200]	; (802142c <__swsetup_r+0xcc>)
 8021362:	b570      	push	{r4, r5, r6, lr}
 8021364:	681d      	ldr	r5, [r3, #0]
 8021366:	4606      	mov	r6, r0
 8021368:	460c      	mov	r4, r1
 802136a:	b125      	cbz	r5, 8021376 <__swsetup_r+0x16>
 802136c:	69ab      	ldr	r3, [r5, #24]
 802136e:	b913      	cbnz	r3, 8021376 <__swsetup_r+0x16>
 8021370:	4628      	mov	r0, r5
 8021372:	f7ff f9c3 	bl	80206fc <__sinit>
 8021376:	4b2e      	ldr	r3, [pc, #184]	; (8021430 <__swsetup_r+0xd0>)
 8021378:	429c      	cmp	r4, r3
 802137a:	d10f      	bne.n	802139c <__swsetup_r+0x3c>
 802137c:	686c      	ldr	r4, [r5, #4]
 802137e:	89a3      	ldrh	r3, [r4, #12]
 8021380:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021384:	0719      	lsls	r1, r3, #28
 8021386:	d42c      	bmi.n	80213e2 <__swsetup_r+0x82>
 8021388:	06dd      	lsls	r5, r3, #27
 802138a:	d411      	bmi.n	80213b0 <__swsetup_r+0x50>
 802138c:	2309      	movs	r3, #9
 802138e:	6033      	str	r3, [r6, #0]
 8021390:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8021394:	81a3      	strh	r3, [r4, #12]
 8021396:	f04f 30ff 	mov.w	r0, #4294967295
 802139a:	e03e      	b.n	802141a <__swsetup_r+0xba>
 802139c:	4b25      	ldr	r3, [pc, #148]	; (8021434 <__swsetup_r+0xd4>)
 802139e:	429c      	cmp	r4, r3
 80213a0:	d101      	bne.n	80213a6 <__swsetup_r+0x46>
 80213a2:	68ac      	ldr	r4, [r5, #8]
 80213a4:	e7eb      	b.n	802137e <__swsetup_r+0x1e>
 80213a6:	4b24      	ldr	r3, [pc, #144]	; (8021438 <__swsetup_r+0xd8>)
 80213a8:	429c      	cmp	r4, r3
 80213aa:	bf08      	it	eq
 80213ac:	68ec      	ldreq	r4, [r5, #12]
 80213ae:	e7e6      	b.n	802137e <__swsetup_r+0x1e>
 80213b0:	0758      	lsls	r0, r3, #29
 80213b2:	d512      	bpl.n	80213da <__swsetup_r+0x7a>
 80213b4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80213b6:	b141      	cbz	r1, 80213ca <__swsetup_r+0x6a>
 80213b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80213bc:	4299      	cmp	r1, r3
 80213be:	d002      	beq.n	80213c6 <__swsetup_r+0x66>
 80213c0:	4630      	mov	r0, r6
 80213c2:	f7ff fa99 	bl	80208f8 <_free_r>
 80213c6:	2300      	movs	r3, #0
 80213c8:	6363      	str	r3, [r4, #52]	; 0x34
 80213ca:	89a3      	ldrh	r3, [r4, #12]
 80213cc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80213d0:	81a3      	strh	r3, [r4, #12]
 80213d2:	2300      	movs	r3, #0
 80213d4:	6063      	str	r3, [r4, #4]
 80213d6:	6923      	ldr	r3, [r4, #16]
 80213d8:	6023      	str	r3, [r4, #0]
 80213da:	89a3      	ldrh	r3, [r4, #12]
 80213dc:	f043 0308 	orr.w	r3, r3, #8
 80213e0:	81a3      	strh	r3, [r4, #12]
 80213e2:	6923      	ldr	r3, [r4, #16]
 80213e4:	b94b      	cbnz	r3, 80213fa <__swsetup_r+0x9a>
 80213e6:	89a3      	ldrh	r3, [r4, #12]
 80213e8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80213ec:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80213f0:	d003      	beq.n	80213fa <__swsetup_r+0x9a>
 80213f2:	4621      	mov	r1, r4
 80213f4:	4630      	mov	r0, r6
 80213f6:	f000 f98d 	bl	8021714 <__smakebuf_r>
 80213fa:	89a0      	ldrh	r0, [r4, #12]
 80213fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021400:	f010 0301 	ands.w	r3, r0, #1
 8021404:	d00a      	beq.n	802141c <__swsetup_r+0xbc>
 8021406:	2300      	movs	r3, #0
 8021408:	60a3      	str	r3, [r4, #8]
 802140a:	6963      	ldr	r3, [r4, #20]
 802140c:	425b      	negs	r3, r3
 802140e:	61a3      	str	r3, [r4, #24]
 8021410:	6923      	ldr	r3, [r4, #16]
 8021412:	b943      	cbnz	r3, 8021426 <__swsetup_r+0xc6>
 8021414:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8021418:	d1ba      	bne.n	8021390 <__swsetup_r+0x30>
 802141a:	bd70      	pop	{r4, r5, r6, pc}
 802141c:	0781      	lsls	r1, r0, #30
 802141e:	bf58      	it	pl
 8021420:	6963      	ldrpl	r3, [r4, #20]
 8021422:	60a3      	str	r3, [r4, #8]
 8021424:	e7f4      	b.n	8021410 <__swsetup_r+0xb0>
 8021426:	2000      	movs	r0, #0
 8021428:	e7f7      	b.n	802141a <__swsetup_r+0xba>
 802142a:	bf00      	nop
 802142c:	20000104 	.word	0x20000104
 8021430:	08024418 	.word	0x08024418
 8021434:	08024438 	.word	0x08024438
 8021438:	080243f8 	.word	0x080243f8

0802143c <__register_exitproc>:
 802143c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021440:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80214fc <__register_exitproc+0xc0>
 8021444:	4606      	mov	r6, r0
 8021446:	f8d8 0000 	ldr.w	r0, [r8]
 802144a:	461f      	mov	r7, r3
 802144c:	460d      	mov	r5, r1
 802144e:	4691      	mov	r9, r2
 8021450:	f7ff fa29 	bl	80208a6 <__retarget_lock_acquire_recursive>
 8021454:	4b25      	ldr	r3, [pc, #148]	; (80214ec <__register_exitproc+0xb0>)
 8021456:	681c      	ldr	r4, [r3, #0]
 8021458:	b934      	cbnz	r4, 8021468 <__register_exitproc+0x2c>
 802145a:	4c25      	ldr	r4, [pc, #148]	; (80214f0 <__register_exitproc+0xb4>)
 802145c:	601c      	str	r4, [r3, #0]
 802145e:	4b25      	ldr	r3, [pc, #148]	; (80214f4 <__register_exitproc+0xb8>)
 8021460:	b113      	cbz	r3, 8021468 <__register_exitproc+0x2c>
 8021462:	681b      	ldr	r3, [r3, #0]
 8021464:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8021468:	6863      	ldr	r3, [r4, #4]
 802146a:	2b1f      	cmp	r3, #31
 802146c:	dd07      	ble.n	802147e <__register_exitproc+0x42>
 802146e:	f8d8 0000 	ldr.w	r0, [r8]
 8021472:	f7ff fa1a 	bl	80208aa <__retarget_lock_release_recursive>
 8021476:	f04f 30ff 	mov.w	r0, #4294967295
 802147a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802147e:	b34e      	cbz	r6, 80214d4 <__register_exitproc+0x98>
 8021480:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021484:	b988      	cbnz	r0, 80214aa <__register_exitproc+0x6e>
 8021486:	4b1c      	ldr	r3, [pc, #112]	; (80214f8 <__register_exitproc+0xbc>)
 8021488:	b923      	cbnz	r3, 8021494 <__register_exitproc+0x58>
 802148a:	f8d8 0000 	ldr.w	r0, [r8]
 802148e:	f7ff fa0b 	bl	80208a8 <__retarget_lock_release>
 8021492:	e7f0      	b.n	8021476 <__register_exitproc+0x3a>
 8021494:	f44f 7084 	mov.w	r0, #264	; 0x108
 8021498:	f7ff fa08 	bl	80208ac <malloc>
 802149c:	2800      	cmp	r0, #0
 802149e:	d0f4      	beq.n	802148a <__register_exitproc+0x4e>
 80214a0:	2300      	movs	r3, #0
 80214a2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80214a6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80214aa:	6863      	ldr	r3, [r4, #4]
 80214ac:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80214b0:	2201      	movs	r2, #1
 80214b2:	409a      	lsls	r2, r3
 80214b4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80214b8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80214bc:	4313      	orrs	r3, r2
 80214be:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80214c2:	2e02      	cmp	r6, #2
 80214c4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80214c8:	bf02      	ittt	eq
 80214ca:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80214ce:	4313      	orreq	r3, r2
 80214d0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80214d4:	6863      	ldr	r3, [r4, #4]
 80214d6:	f8d8 0000 	ldr.w	r0, [r8]
 80214da:	1c5a      	adds	r2, r3, #1
 80214dc:	3302      	adds	r3, #2
 80214de:	6062      	str	r2, [r4, #4]
 80214e0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80214e4:	f7ff f9e1 	bl	80208aa <__retarget_lock_release_recursive>
 80214e8:	2000      	movs	r0, #0
 80214ea:	e7c6      	b.n	802147a <__register_exitproc+0x3e>
 80214ec:	20015730 	.word	0x20015730
 80214f0:	200156a4 	.word	0x200156a4
 80214f4:	08024490 	.word	0x08024490
 80214f8:	080208ad 	.word	0x080208ad
 80214fc:	20000168 	.word	0x20000168

08021500 <_close_r>:
 8021500:	b538      	push	{r3, r4, r5, lr}
 8021502:	4d06      	ldr	r5, [pc, #24]	; (802151c <_close_r+0x1c>)
 8021504:	2300      	movs	r3, #0
 8021506:	4604      	mov	r4, r0
 8021508:	4608      	mov	r0, r1
 802150a:	602b      	str	r3, [r5, #0]
 802150c:	f7e0 fe04 	bl	8002118 <_close>
 8021510:	1c43      	adds	r3, r0, #1
 8021512:	d102      	bne.n	802151a <_close_r+0x1a>
 8021514:	682b      	ldr	r3, [r5, #0]
 8021516:	b103      	cbz	r3, 802151a <_close_r+0x1a>
 8021518:	6023      	str	r3, [r4, #0]
 802151a:	bd38      	pop	{r3, r4, r5, pc}
 802151c:	200156a0 	.word	0x200156a0

08021520 <__sflush_r>:
 8021520:	898a      	ldrh	r2, [r1, #12]
 8021522:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021526:	4605      	mov	r5, r0
 8021528:	0710      	lsls	r0, r2, #28
 802152a:	460c      	mov	r4, r1
 802152c:	d458      	bmi.n	80215e0 <__sflush_r+0xc0>
 802152e:	684b      	ldr	r3, [r1, #4]
 8021530:	2b00      	cmp	r3, #0
 8021532:	dc05      	bgt.n	8021540 <__sflush_r+0x20>
 8021534:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8021536:	2b00      	cmp	r3, #0
 8021538:	dc02      	bgt.n	8021540 <__sflush_r+0x20>
 802153a:	2000      	movs	r0, #0
 802153c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021540:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021542:	2e00      	cmp	r6, #0
 8021544:	d0f9      	beq.n	802153a <__sflush_r+0x1a>
 8021546:	2300      	movs	r3, #0
 8021548:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802154c:	682f      	ldr	r7, [r5, #0]
 802154e:	602b      	str	r3, [r5, #0]
 8021550:	d032      	beq.n	80215b8 <__sflush_r+0x98>
 8021552:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021554:	89a3      	ldrh	r3, [r4, #12]
 8021556:	075a      	lsls	r2, r3, #29
 8021558:	d505      	bpl.n	8021566 <__sflush_r+0x46>
 802155a:	6863      	ldr	r3, [r4, #4]
 802155c:	1ac0      	subs	r0, r0, r3
 802155e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021560:	b10b      	cbz	r3, 8021566 <__sflush_r+0x46>
 8021562:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021564:	1ac0      	subs	r0, r0, r3
 8021566:	2300      	movs	r3, #0
 8021568:	4602      	mov	r2, r0
 802156a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802156c:	6a21      	ldr	r1, [r4, #32]
 802156e:	4628      	mov	r0, r5
 8021570:	47b0      	blx	r6
 8021572:	1c43      	adds	r3, r0, #1
 8021574:	89a3      	ldrh	r3, [r4, #12]
 8021576:	d106      	bne.n	8021586 <__sflush_r+0x66>
 8021578:	6829      	ldr	r1, [r5, #0]
 802157a:	291d      	cmp	r1, #29
 802157c:	d82c      	bhi.n	80215d8 <__sflush_r+0xb8>
 802157e:	4a2a      	ldr	r2, [pc, #168]	; (8021628 <__sflush_r+0x108>)
 8021580:	40ca      	lsrs	r2, r1
 8021582:	07d6      	lsls	r6, r2, #31
 8021584:	d528      	bpl.n	80215d8 <__sflush_r+0xb8>
 8021586:	2200      	movs	r2, #0
 8021588:	6062      	str	r2, [r4, #4]
 802158a:	04d9      	lsls	r1, r3, #19
 802158c:	6922      	ldr	r2, [r4, #16]
 802158e:	6022      	str	r2, [r4, #0]
 8021590:	d504      	bpl.n	802159c <__sflush_r+0x7c>
 8021592:	1c42      	adds	r2, r0, #1
 8021594:	d101      	bne.n	802159a <__sflush_r+0x7a>
 8021596:	682b      	ldr	r3, [r5, #0]
 8021598:	b903      	cbnz	r3, 802159c <__sflush_r+0x7c>
 802159a:	6560      	str	r0, [r4, #84]	; 0x54
 802159c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802159e:	602f      	str	r7, [r5, #0]
 80215a0:	2900      	cmp	r1, #0
 80215a2:	d0ca      	beq.n	802153a <__sflush_r+0x1a>
 80215a4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80215a8:	4299      	cmp	r1, r3
 80215aa:	d002      	beq.n	80215b2 <__sflush_r+0x92>
 80215ac:	4628      	mov	r0, r5
 80215ae:	f7ff f9a3 	bl	80208f8 <_free_r>
 80215b2:	2000      	movs	r0, #0
 80215b4:	6360      	str	r0, [r4, #52]	; 0x34
 80215b6:	e7c1      	b.n	802153c <__sflush_r+0x1c>
 80215b8:	6a21      	ldr	r1, [r4, #32]
 80215ba:	2301      	movs	r3, #1
 80215bc:	4628      	mov	r0, r5
 80215be:	47b0      	blx	r6
 80215c0:	1c41      	adds	r1, r0, #1
 80215c2:	d1c7      	bne.n	8021554 <__sflush_r+0x34>
 80215c4:	682b      	ldr	r3, [r5, #0]
 80215c6:	2b00      	cmp	r3, #0
 80215c8:	d0c4      	beq.n	8021554 <__sflush_r+0x34>
 80215ca:	2b1d      	cmp	r3, #29
 80215cc:	d001      	beq.n	80215d2 <__sflush_r+0xb2>
 80215ce:	2b16      	cmp	r3, #22
 80215d0:	d101      	bne.n	80215d6 <__sflush_r+0xb6>
 80215d2:	602f      	str	r7, [r5, #0]
 80215d4:	e7b1      	b.n	802153a <__sflush_r+0x1a>
 80215d6:	89a3      	ldrh	r3, [r4, #12]
 80215d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80215dc:	81a3      	strh	r3, [r4, #12]
 80215de:	e7ad      	b.n	802153c <__sflush_r+0x1c>
 80215e0:	690f      	ldr	r7, [r1, #16]
 80215e2:	2f00      	cmp	r7, #0
 80215e4:	d0a9      	beq.n	802153a <__sflush_r+0x1a>
 80215e6:	0793      	lsls	r3, r2, #30
 80215e8:	680e      	ldr	r6, [r1, #0]
 80215ea:	bf08      	it	eq
 80215ec:	694b      	ldreq	r3, [r1, #20]
 80215ee:	600f      	str	r7, [r1, #0]
 80215f0:	bf18      	it	ne
 80215f2:	2300      	movne	r3, #0
 80215f4:	eba6 0807 	sub.w	r8, r6, r7
 80215f8:	608b      	str	r3, [r1, #8]
 80215fa:	f1b8 0f00 	cmp.w	r8, #0
 80215fe:	dd9c      	ble.n	802153a <__sflush_r+0x1a>
 8021600:	6a21      	ldr	r1, [r4, #32]
 8021602:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021604:	4643      	mov	r3, r8
 8021606:	463a      	mov	r2, r7
 8021608:	4628      	mov	r0, r5
 802160a:	47b0      	blx	r6
 802160c:	2800      	cmp	r0, #0
 802160e:	dc06      	bgt.n	802161e <__sflush_r+0xfe>
 8021610:	89a3      	ldrh	r3, [r4, #12]
 8021612:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021616:	81a3      	strh	r3, [r4, #12]
 8021618:	f04f 30ff 	mov.w	r0, #4294967295
 802161c:	e78e      	b.n	802153c <__sflush_r+0x1c>
 802161e:	4407      	add	r7, r0
 8021620:	eba8 0800 	sub.w	r8, r8, r0
 8021624:	e7e9      	b.n	80215fa <__sflush_r+0xda>
 8021626:	bf00      	nop
 8021628:	20400001 	.word	0x20400001

0802162c <_fflush_r>:
 802162c:	b538      	push	{r3, r4, r5, lr}
 802162e:	690b      	ldr	r3, [r1, #16]
 8021630:	4605      	mov	r5, r0
 8021632:	460c      	mov	r4, r1
 8021634:	b913      	cbnz	r3, 802163c <_fflush_r+0x10>
 8021636:	2500      	movs	r5, #0
 8021638:	4628      	mov	r0, r5
 802163a:	bd38      	pop	{r3, r4, r5, pc}
 802163c:	b118      	cbz	r0, 8021646 <_fflush_r+0x1a>
 802163e:	6983      	ldr	r3, [r0, #24]
 8021640:	b90b      	cbnz	r3, 8021646 <_fflush_r+0x1a>
 8021642:	f7ff f85b 	bl	80206fc <__sinit>
 8021646:	4b14      	ldr	r3, [pc, #80]	; (8021698 <_fflush_r+0x6c>)
 8021648:	429c      	cmp	r4, r3
 802164a:	d11b      	bne.n	8021684 <_fflush_r+0x58>
 802164c:	686c      	ldr	r4, [r5, #4]
 802164e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021652:	2b00      	cmp	r3, #0
 8021654:	d0ef      	beq.n	8021636 <_fflush_r+0xa>
 8021656:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8021658:	07d0      	lsls	r0, r2, #31
 802165a:	d404      	bmi.n	8021666 <_fflush_r+0x3a>
 802165c:	0599      	lsls	r1, r3, #22
 802165e:	d402      	bmi.n	8021666 <_fflush_r+0x3a>
 8021660:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021662:	f7ff f920 	bl	80208a6 <__retarget_lock_acquire_recursive>
 8021666:	4628      	mov	r0, r5
 8021668:	4621      	mov	r1, r4
 802166a:	f7ff ff59 	bl	8021520 <__sflush_r>
 802166e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021670:	07da      	lsls	r2, r3, #31
 8021672:	4605      	mov	r5, r0
 8021674:	d4e0      	bmi.n	8021638 <_fflush_r+0xc>
 8021676:	89a3      	ldrh	r3, [r4, #12]
 8021678:	059b      	lsls	r3, r3, #22
 802167a:	d4dd      	bmi.n	8021638 <_fflush_r+0xc>
 802167c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802167e:	f7ff f914 	bl	80208aa <__retarget_lock_release_recursive>
 8021682:	e7d9      	b.n	8021638 <_fflush_r+0xc>
 8021684:	4b05      	ldr	r3, [pc, #20]	; (802169c <_fflush_r+0x70>)
 8021686:	429c      	cmp	r4, r3
 8021688:	d101      	bne.n	802168e <_fflush_r+0x62>
 802168a:	68ac      	ldr	r4, [r5, #8]
 802168c:	e7df      	b.n	802164e <_fflush_r+0x22>
 802168e:	4b04      	ldr	r3, [pc, #16]	; (80216a0 <_fflush_r+0x74>)
 8021690:	429c      	cmp	r4, r3
 8021692:	bf08      	it	eq
 8021694:	68ec      	ldreq	r4, [r5, #12]
 8021696:	e7da      	b.n	802164e <_fflush_r+0x22>
 8021698:	08024418 	.word	0x08024418
 802169c:	08024438 	.word	0x08024438
 80216a0:	080243f8 	.word	0x080243f8

080216a4 <_lseek_r>:
 80216a4:	b538      	push	{r3, r4, r5, lr}
 80216a6:	4d07      	ldr	r5, [pc, #28]	; (80216c4 <_lseek_r+0x20>)
 80216a8:	4604      	mov	r4, r0
 80216aa:	4608      	mov	r0, r1
 80216ac:	4611      	mov	r1, r2
 80216ae:	2200      	movs	r2, #0
 80216b0:	602a      	str	r2, [r5, #0]
 80216b2:	461a      	mov	r2, r3
 80216b4:	f7e0 fd3a 	bl	800212c <_lseek>
 80216b8:	1c43      	adds	r3, r0, #1
 80216ba:	d102      	bne.n	80216c2 <_lseek_r+0x1e>
 80216bc:	682b      	ldr	r3, [r5, #0]
 80216be:	b103      	cbz	r3, 80216c2 <_lseek_r+0x1e>
 80216c0:	6023      	str	r3, [r4, #0]
 80216c2:	bd38      	pop	{r3, r4, r5, pc}
 80216c4:	200156a0 	.word	0x200156a0

080216c8 <__swhatbuf_r>:
 80216c8:	b570      	push	{r4, r5, r6, lr}
 80216ca:	460e      	mov	r6, r1
 80216cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80216d0:	2900      	cmp	r1, #0
 80216d2:	b096      	sub	sp, #88	; 0x58
 80216d4:	4614      	mov	r4, r2
 80216d6:	461d      	mov	r5, r3
 80216d8:	da08      	bge.n	80216ec <__swhatbuf_r+0x24>
 80216da:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80216de:	2200      	movs	r2, #0
 80216e0:	602a      	str	r2, [r5, #0]
 80216e2:	061a      	lsls	r2, r3, #24
 80216e4:	d410      	bmi.n	8021708 <__swhatbuf_r+0x40>
 80216e6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80216ea:	e00e      	b.n	802170a <__swhatbuf_r+0x42>
 80216ec:	466a      	mov	r2, sp
 80216ee:	f000 f86f 	bl	80217d0 <_fstat_r>
 80216f2:	2800      	cmp	r0, #0
 80216f4:	dbf1      	blt.n	80216da <__swhatbuf_r+0x12>
 80216f6:	9a01      	ldr	r2, [sp, #4]
 80216f8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80216fc:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021700:	425a      	negs	r2, r3
 8021702:	415a      	adcs	r2, r3
 8021704:	602a      	str	r2, [r5, #0]
 8021706:	e7ee      	b.n	80216e6 <__swhatbuf_r+0x1e>
 8021708:	2340      	movs	r3, #64	; 0x40
 802170a:	2000      	movs	r0, #0
 802170c:	6023      	str	r3, [r4, #0]
 802170e:	b016      	add	sp, #88	; 0x58
 8021710:	bd70      	pop	{r4, r5, r6, pc}
	...

08021714 <__smakebuf_r>:
 8021714:	898b      	ldrh	r3, [r1, #12]
 8021716:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021718:	079d      	lsls	r5, r3, #30
 802171a:	4606      	mov	r6, r0
 802171c:	460c      	mov	r4, r1
 802171e:	d507      	bpl.n	8021730 <__smakebuf_r+0x1c>
 8021720:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021724:	6023      	str	r3, [r4, #0]
 8021726:	6123      	str	r3, [r4, #16]
 8021728:	2301      	movs	r3, #1
 802172a:	6163      	str	r3, [r4, #20]
 802172c:	b002      	add	sp, #8
 802172e:	bd70      	pop	{r4, r5, r6, pc}
 8021730:	ab01      	add	r3, sp, #4
 8021732:	466a      	mov	r2, sp
 8021734:	f7ff ffc8 	bl	80216c8 <__swhatbuf_r>
 8021738:	9900      	ldr	r1, [sp, #0]
 802173a:	4605      	mov	r5, r0
 802173c:	4630      	mov	r0, r6
 802173e:	f7ff f947 	bl	80209d0 <_malloc_r>
 8021742:	b948      	cbnz	r0, 8021758 <__smakebuf_r+0x44>
 8021744:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021748:	059a      	lsls	r2, r3, #22
 802174a:	d4ef      	bmi.n	802172c <__smakebuf_r+0x18>
 802174c:	f023 0303 	bic.w	r3, r3, #3
 8021750:	f043 0302 	orr.w	r3, r3, #2
 8021754:	81a3      	strh	r3, [r4, #12]
 8021756:	e7e3      	b.n	8021720 <__smakebuf_r+0xc>
 8021758:	4b0d      	ldr	r3, [pc, #52]	; (8021790 <__smakebuf_r+0x7c>)
 802175a:	62b3      	str	r3, [r6, #40]	; 0x28
 802175c:	89a3      	ldrh	r3, [r4, #12]
 802175e:	6020      	str	r0, [r4, #0]
 8021760:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021764:	81a3      	strh	r3, [r4, #12]
 8021766:	9b00      	ldr	r3, [sp, #0]
 8021768:	6163      	str	r3, [r4, #20]
 802176a:	9b01      	ldr	r3, [sp, #4]
 802176c:	6120      	str	r0, [r4, #16]
 802176e:	b15b      	cbz	r3, 8021788 <__smakebuf_r+0x74>
 8021770:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021774:	4630      	mov	r0, r6
 8021776:	f000 f83d 	bl	80217f4 <_isatty_r>
 802177a:	b128      	cbz	r0, 8021788 <__smakebuf_r+0x74>
 802177c:	89a3      	ldrh	r3, [r4, #12]
 802177e:	f023 0303 	bic.w	r3, r3, #3
 8021782:	f043 0301 	orr.w	r3, r3, #1
 8021786:	81a3      	strh	r3, [r4, #12]
 8021788:	89a0      	ldrh	r0, [r4, #12]
 802178a:	4305      	orrs	r5, r0
 802178c:	81a5      	strh	r5, [r4, #12]
 802178e:	e7cd      	b.n	802172c <__smakebuf_r+0x18>
 8021790:	08020695 	.word	0x08020695

08021794 <__malloc_lock>:
 8021794:	4801      	ldr	r0, [pc, #4]	; (802179c <__malloc_lock+0x8>)
 8021796:	f7ff b886 	b.w	80208a6 <__retarget_lock_acquire_recursive>
 802179a:	bf00      	nop
 802179c:	2001558d 	.word	0x2001558d

080217a0 <__malloc_unlock>:
 80217a0:	4801      	ldr	r0, [pc, #4]	; (80217a8 <__malloc_unlock+0x8>)
 80217a2:	f7ff b882 	b.w	80208aa <__retarget_lock_release_recursive>
 80217a6:	bf00      	nop
 80217a8:	2001558d 	.word	0x2001558d

080217ac <_read_r>:
 80217ac:	b538      	push	{r3, r4, r5, lr}
 80217ae:	4d07      	ldr	r5, [pc, #28]	; (80217cc <_read_r+0x20>)
 80217b0:	4604      	mov	r4, r0
 80217b2:	4608      	mov	r0, r1
 80217b4:	4611      	mov	r1, r2
 80217b6:	2200      	movs	r2, #0
 80217b8:	602a      	str	r2, [r5, #0]
 80217ba:	461a      	mov	r2, r3
 80217bc:	f7e0 fc90 	bl	80020e0 <_read>
 80217c0:	1c43      	adds	r3, r0, #1
 80217c2:	d102      	bne.n	80217ca <_read_r+0x1e>
 80217c4:	682b      	ldr	r3, [r5, #0]
 80217c6:	b103      	cbz	r3, 80217ca <_read_r+0x1e>
 80217c8:	6023      	str	r3, [r4, #0]
 80217ca:	bd38      	pop	{r3, r4, r5, pc}
 80217cc:	200156a0 	.word	0x200156a0

080217d0 <_fstat_r>:
 80217d0:	b538      	push	{r3, r4, r5, lr}
 80217d2:	4d07      	ldr	r5, [pc, #28]	; (80217f0 <_fstat_r+0x20>)
 80217d4:	2300      	movs	r3, #0
 80217d6:	4604      	mov	r4, r0
 80217d8:	4608      	mov	r0, r1
 80217da:	4611      	mov	r1, r2
 80217dc:	602b      	str	r3, [r5, #0]
 80217de:	f7e0 fc9e 	bl	800211e <_fstat>
 80217e2:	1c43      	adds	r3, r0, #1
 80217e4:	d102      	bne.n	80217ec <_fstat_r+0x1c>
 80217e6:	682b      	ldr	r3, [r5, #0]
 80217e8:	b103      	cbz	r3, 80217ec <_fstat_r+0x1c>
 80217ea:	6023      	str	r3, [r4, #0]
 80217ec:	bd38      	pop	{r3, r4, r5, pc}
 80217ee:	bf00      	nop
 80217f0:	200156a0 	.word	0x200156a0

080217f4 <_isatty_r>:
 80217f4:	b538      	push	{r3, r4, r5, lr}
 80217f6:	4d06      	ldr	r5, [pc, #24]	; (8021810 <_isatty_r+0x1c>)
 80217f8:	2300      	movs	r3, #0
 80217fa:	4604      	mov	r4, r0
 80217fc:	4608      	mov	r0, r1
 80217fe:	602b      	str	r3, [r5, #0]
 8021800:	f7e0 fc92 	bl	8002128 <_isatty>
 8021804:	1c43      	adds	r3, r0, #1
 8021806:	d102      	bne.n	802180e <_isatty_r+0x1a>
 8021808:	682b      	ldr	r3, [r5, #0]
 802180a:	b103      	cbz	r3, 802180e <_isatty_r+0x1a>
 802180c:	6023      	str	r3, [r4, #0]
 802180e:	bd38      	pop	{r3, r4, r5, pc}
 8021810:	200156a0 	.word	0x200156a0

08021814 <_init>:
 8021814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021816:	bf00      	nop
 8021818:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802181a:	bc08      	pop	{r3}
 802181c:	469e      	mov	lr, r3
 802181e:	4770      	bx	lr

08021820 <_fini>:
 8021820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021822:	bf00      	nop
 8021824:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021826:	bc08      	pop	{r3}
 8021828:	469e      	mov	lr, r3
 802182a:	4770      	bx	lr
