
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00020608  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002950  080207b8  080207b8  000307b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00001552  08023108  08023108  00033108  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000004c  0802465c  0802465c  0003465c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000190  080246a8  080246a8  000346a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000833f8  08024838  08024838  00034838  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080a7c30  080a7c30  000c0168  2**0
                  CONTENTS
  8 .ARM          00000008  080a7c30  080a7c30  000b7c30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080a7c38  080a7c38  000c0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080a7c38  080a7c38  000b7c38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080a7c4c  080a7c4c  000b7c4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080a7c54  000c0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000176a8  20000168  080a7dbc  000c0168  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20017810  080a7dbc  000c7810  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000c0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000d0000  2**2
                  ALLOC
 17 .debug_line   0004e3c2  00000000  00000000  000c0198  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000e33f5  00000000  00000000  0010e55a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014e72  00000000  00000000  001f194f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002fa8  00000000  00000000  002067c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011817a  00000000  00000000  00209770  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00006270  00000000  00000000  003218f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0002fe17  00000000  00000000  00327b60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  000304f9  00000000  00000000  00357977  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  00387e70  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008be4  00000000  00000000  00387f40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080207a0 	.word	0x080207a0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	080207a0 	.word	0x080207a0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f004 fd91 	bl	80050e4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f01f f911 	bl	801f7e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 fef3 	bl	80013b0 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080a7c54 	.word	0x080a7c54
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005dc:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005e0:	20017810 	.word	0x20017810

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bca9 	b.w	8000f40 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f01e ff89 	bl	801f50c <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000184 	.word	0x20000184
 8000638:	20000050 	.word	0x20000050
 800063c:	20000186 	.word	0x20000186
 8000640:	20000188 	.word	0x20000188

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	20000188 	.word	0x20000188
 800070c:	20000186 	.word	0x20000186
 8000710:	20000184 	.word	0x20000184
 8000714:	2000018c 	.word	0x2000018c
 8000718:	20000190 	.word	0x20000190

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	20017563 	.word	0x20017563

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc77 	b.w	8001080 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f89c 	bl	80018f0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00a fac3 	bl	800ad54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc42 	b.w	8001064 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc46 	b.w	8001070 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc72 	b.w	80010cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc18 	b.w	800101c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc72 	b.w	80010d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7a 	b.w	80010e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1c 	b.w	8001030 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f009 bd20 	b.w	800a23c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01e fe83 	bl	801f50c <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	2001755c 	.word	0x2001755c
 800085c:	20017558 	.word	0x20017558
 8000860:	2001755a 	.word	0x2001755a

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01e fe77 	bl	801f568 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08020810 	.word	0x08020810
 8000898:	08020848 	.word	0x08020848
 800089c:	08020896 	.word	0x08020896
 80008a0:	20017562 	.word	0x20017562

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01e fe53 	bl	801f568 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	20017558 	.word	0x20017558
 80008d0:	2001755a 	.word	0x2001755a
 80008d4:	080208db 	.word	0x080208db
 80008d8:	0802093e 	.word	0x0802093e
 80008dc:	08020896 	.word	0x08020896
 80008e0:	2001755e 	.word	0x2001755e
 80008e4:	20017560 	.word	0x20017560

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 f8f8 	bl	8007ae4 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01e fe31 	bl	801f568 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 f9b0 	bl	8007c70 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	20000198 	.word	0x20000198
 8000924:	08020a5c 	.word	0x08020a5c
 8000928:	08020aa5 	.word	0x08020aa5
 800092c:	08020ad4 	.word	0x08020ad4
 8000930:	20000194 	.word	0x20000194
 8000934:	08020b22 	.word	0x08020b22

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 b926 	b.w	8007b90 <osSemaphoreAcquire>
 8000944:	20000198 	.word	0x20000198

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 b95a 	b.w	8007c04 <osSemaphoreRelease>
 8000950:	20000198 	.word	0x20000198

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 b919 	b.w	8007b90 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	20000198 	.word	0x20000198

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 b9c3 	b.w	8007cfc <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000194 	.word	0x20000194
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 f9f8 	bl	8007d80 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 f9f1 	bl	8007d80 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000194 	.word	0x20000194

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20002bbc 	.word	0x20002bbc
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08020cc0 	.word	0x08020cc0
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01e fd67 	bl	801f50c <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	20017564 	.word	0x20017564

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00a fac7 	bl	800b000 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08020cc0 	.word	0x08020cc0

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01e fd5b 	bl	801f568 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08020b64 	.word	0x08020b64
 8000ac0:	08020b7f 	.word	0x08020b7f
 8000ac4:	08020bc9 	.word	0x08020bc9

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01e fd3d 	bl	801f568 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08020b64 	.word	0x08020b64
 8000afc:	08020c15 	.word	0x08020c15
 8000b00:	08020bc9 	.word	0x08020bc9

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01e fcca 	bl	801f568 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08020c60 	.word	0x08020c60
 8000c48:	08020c7a 	.word	0x08020c7a
 8000c4c:	08020bc9 	.word	0x08020bc9
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f641 1038 	movw	r0, #6456	; 0x1938
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f641 1338 	movw	r3, #6456	; 0x1938
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f641 1338 	movw	r3, #6456	; 0x1938
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bbce 	b.w	8002528 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f008 ff9f 	bl	8009cd6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08020d78 	.word	0x08020d78

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01e fbae 	bl	801f50c <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f008 ff8b 	bl	8009cd6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08020d44 	.word	0x08020d44

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f44f 51ca 	mov.w	r1, #6464	; 0x1940
 8000dd6:	f01e fb99 	bl	801f50c <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f008 ff75 	bl	8009cd6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08020d10 	.word	0x08020d10

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01e fb84 	bl	801f50c <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 50cb 	add.w	r0, r0, #6496	; 0x1960
 8000e14:	300c      	adds	r0, #12
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08020dac 	.word	0x08020dac

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a0 	.word	0x200001a0

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f641 3108 	movw	r1, #6920	; 0x1b08
 8000e52:	f01e fb5b 	bl	801f50c <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f91c 	bl	800209c <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f91d 	bl	80020a4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f012 fa49 	bl	801330c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 fbe6 	bl	8004654 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f012 f9a7 	bl	80131dc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d437      	bmi.n	8000f08 <touchgfx_init+0xac>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01e fb39 	bl	801f510 <__cxa_guard_acquire>
 8000e9e:	b398      	cbz	r0, 8000f08 <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea2:	4b21      	ldr	r3, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
 8000ea4:	6023      	str	r3, [r4, #0]
 8000ea6:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eaa:	f508 57ca 	add.w	r7, r8, #6464	; 0x1940
 8000eae:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eb2:	f104 0014 	add.w	r0, r4, #20
 8000eb6:	6060      	str	r0, [r4, #4]
 8000eb8:	f8c4 8008 	str.w	r8, [r4, #8]
 8000ebc:	60e7      	str	r7, [r4, #12]
 8000ebe:	6126      	str	r6, [r4, #16]
 8000ec0:	f008 ff0a 	bl	8009cd8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec4:	4b19      	ldr	r3, [pc, #100]	; (8000f2c <touchgfx_init+0xd0>)
 8000ec6:	6163      	str	r3, [r4, #20]
 8000ec8:	4640      	mov	r0, r8
 8000eca:	f008 ff05 	bl	8009cd8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ece:	4b18      	ldr	r3, [pc, #96]	; (8000f30 <touchgfx_init+0xd4>)
 8000ed0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed2:	4638      	mov	r0, r7
 8000ed4:	f008 ff00 	bl	8009cd8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000edc:	4a15      	ldr	r2, [pc, #84]	; (8000f34 <touchgfx_init+0xd8>)
 8000ede:	f8c3 296c 	str.w	r2, [r3, #2412]	; 0x96c
 8000ee2:	f603 10ac 	addw	r0, r3, #2476	; 0x9ac
 8000ee6:	f003 fc31 	bl	800474c <_ZN5ModelC1Ev>
 8000eea:	4622      	mov	r2, r4
 8000eec:	f508 51cc 	add.w	r1, r8, #6528	; 0x1980
 8000ef0:	4630      	mov	r0, r6
 8000ef2:	f003 fc21 	bl	8004738 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef6:	4630      	mov	r0, r6
 8000ef8:	f001 fb16 	bl	8002528 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efc:	480e      	ldr	r0, [pc, #56]	; (8000f38 <touchgfx_init+0xdc>)
 8000efe:	f01e fb51 	bl	801f5a4 <atexit>
 8000f02:	4628      	mov	r0, r5
 8000f04:	f01e fb10 	bl	801f528 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f08:	480c      	ldr	r0, [pc, #48]	; (8000f3c <touchgfx_init+0xe0>)
}
 8000f0a:	b002      	add	sp, #8
 8000f0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f10:	f7ff bc3d 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f14:	200175c8 	.word	0x200175c8
 8000f18:	20002ac8 	.word	0x20002ac8
 8000f1c:	2000019c 	.word	0x2000019c
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a0 	.word	0x200001a0
 8000f28:	08020dac 	.word	0x08020dac
 8000f2c:	08020d10 	.word	0x08020d10
 8000f30:	08020d44 	.word	0x08020d44
 8000f34:	08020d78 	.word	0x08020d78
 8000f38:	08000e35 	.word	0x08000e35
 8000f3c:	20002a4c 	.word	0x20002a4c

08000f40 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f40:	4801      	ldr	r0, [pc, #4]	; (8000f48 <touchgfx_taskEntry+0x8>)
 8000f42:	f7ff bc26 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f46:	bf00      	nop
 8000f48:	20002a4c 	.word	0x20002a4c

08000f4c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f4c:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f4e:	4c23      	ldr	r4, [pc, #140]	; (8000fdc <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f50:	4e23      	ldr	r6, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f52:	4b24      	ldr	r3, [pc, #144]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f54:	4d24      	ldr	r5, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f56:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f58:	4630      	mov	r0, r6
 8000f5a:	f7ff fd7b 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f5e:	4628      	mov	r0, r5
 8000f60:	f015 fade 	bl	8016520 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f64:	4b21      	ldr	r3, [pc, #132]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f66:	4822      	ldr	r0, [pc, #136]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f68:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6a:	4c22      	ldr	r4, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f6c:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f6e:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f70:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f72:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f76:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f78:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7c:	4c1e      	ldr	r4, [pc, #120]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f7e:	491f      	ldr	r1, [pc, #124]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f82:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f86:	4c1e      	ldr	r4, [pc, #120]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f88:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8e:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f92:	6759      	str	r1, [r3, #116]	; 0x74
 8000f94:	2101      	movs	r1, #1
 8000f96:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9a:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f9e:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa2:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000fa6:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000faa:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fae:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb2:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fb6:	661a      	str	r2, [r3, #96]	; 0x60
 8000fb8:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fbc:	671a      	str	r2, [r3, #112]	; 0x70
 8000fbe:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc2:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fc6:	8020      	strh	r0, [r4, #0]
 8000fc8:	4c0e      	ldr	r4, [pc, #56]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fca:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fce:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd0:	480d      	ldr	r0, [pc, #52]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd2:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd4:	4a0d      	ldr	r2, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fd6:	601a      	str	r2, [r3, #0]
}
 8000fd8:	bd70      	pop	{r4, r5, r6, pc}
 8000fda:	bf00      	nop
 8000fdc:	20001ca8 	.word	0x20001ca8
 8000fe0:	20001cac 	.word	0x20001cac
 8000fe4:	08020800 	.word	0x08020800
 8000fe8:	20002acc 	.word	0x20002acc
 8000fec:	20002a4c 	.word	0x20002a4c
 8000ff0:	20017564 	.word	0x20017564
 8000ff4:	20017558 	.word	0x20017558
 8000ff8:	2001755e 	.word	0x2001755e
 8000ffc:	01000001 	.word	0x01000001
 8001000:	2001755a 	.word	0x2001755a
 8001004:	20017560 	.word	0x20017560
 8001008:	2001755c 	.word	0x2001755c
 800100c:	0802098c 	.word	0x0802098c

08001010 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001010:	4801      	ldr	r0, [pc, #4]	; (8001018 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001012:	f7ff bcfb 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 8001016:	bf00      	nop
 8001018:	20001cac 	.word	0x20001cac

0800101c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800101c:	4b03      	ldr	r3, [pc, #12]	; (800102c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 800101e:	2290      	movs	r2, #144	; 0x90
 8001020:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001024:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop
 800102c:	e000e100 	.word	0xe000e100

08001030 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001030:	4a09      	ldr	r2, [pc, #36]	; (8001058 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001032:	490a      	ldr	r1, [pc, #40]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001034:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001036:	480a      	ldr	r0, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001038:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800103c:	3b01      	subs	r3, #1
 800103e:	b29b      	uxth	r3, r3
 8001040:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001042:	6911      	ldr	r1, [r2, #16]
 8001044:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001048:	3901      	subs	r1, #1
 800104a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800104c:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800104e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001050:	f043 0301 	orr.w	r3, r3, #1
 8001054:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001056:	4770      	bx	lr
 8001058:	40016800 	.word	0x40016800
 800105c:	20002b48 	.word	0x20002b48
 8001060:	20002b46 	.word	0x20002b46

08001064 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001064:	4b01      	ldr	r3, [pc, #4]	; (800106c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001066:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106a:	4770      	bx	lr
 800106c:	40016800 	.word	0x40016800

08001070 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001070:	4b02      	ldr	r3, [pc, #8]	; (800107c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001072:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001078:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107a:	4770      	bx	lr
 800107c:	40016800 	.word	0x40016800

08001080 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001080:	b570      	push	{r4, r5, r6, lr}
 8001082:	4604      	mov	r4, r0
    HAL::initialize();
 8001084:	f009 f92f 	bl	800a2e6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001088:	6823      	ldr	r3, [r4, #0]
 800108a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800108c:	f00e ff22 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
 8001090:	4601      	mov	r1, r0
 8001092:	4620      	mov	r0, r4
 8001094:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001096:	6823      	ldr	r3, [r4, #0]
 8001098:	4a05      	ldr	r2, [pc, #20]	; (80010b0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800109e:	4620      	mov	r0, r4
 80010a0:	46ac      	mov	ip, r5
 80010a2:	2300      	movs	r3, #0
}
 80010a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010a8:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010ac:	4760      	bx	ip
 80010ae:	bf00      	nop
 80010b0:	d0025800 	.word	0xd0025800

080010b4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b4:	f009 b8fe 	b.w	800a2b4 <_ZN8touchgfx3HAL10beginFrameEv>

080010b8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010b8:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010bc:	b113      	cbz	r3, 80010c4 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010be:	4b02      	ldr	r3, [pc, #8]	; (80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c0:	2201      	movs	r2, #1
 80010c2:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c4:	f009 b902 	b.w	800a2cc <_ZN8touchgfx3HAL8endFrameEv>
 80010c8:	20002b44 	.word	0x20002b44

080010cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010cc:	f009 b8bc 	b.w	800a248 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d0:	f009 ba15 	b.w	800a4fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d4:	4b03      	ldr	r3, [pc, #12]	; (80010e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010d6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010da:	609a      	str	r2, [r3, #8]
 80010dc:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e0:	609a      	str	r2, [r3, #8]
}
 80010e2:	4770      	bx	lr
 80010e4:	e000e100 	.word	0xe000e100

080010e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010e8:	4b08      	ldr	r3, [pc, #32]	; (800110c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010f6:	f3bf 8f6f 	isb	sy
 80010fa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010fe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001102:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001106:	f3bf 8f6f 	isb	sy
}
 800110a:	4770      	bx	lr
 800110c:	e000e100 	.word	0xe000e100

08001110 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001110:	b510      	push	{r4, lr}
        return instance;
 8001112:	4c14      	ldr	r4, [pc, #80]	; (8001164 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001114:	6823      	ldr	r3, [r4, #0]
 8001116:	b323      	cbz	r3, 8001162 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001118:	4b13      	ldr	r3, [pc, #76]	; (8001168 <HAL_LTDC_LineEventCallback+0x58>)
 800111a:	4a14      	ldr	r2, [pc, #80]	; (800116c <HAL_LTDC_LineEventCallback+0x5c>)
 800111c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800111e:	8811      	ldrh	r1, [r2, #0]
 8001120:	428b      	cmp	r3, r1
 8001122:	d113      	bne.n	800114c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001124:	4b12      	ldr	r3, [pc, #72]	; (8001170 <HAL_LTDC_LineEventCallback+0x60>)
 8001126:	8819      	ldrh	r1, [r3, #0]
 8001128:	f005 faca 	bl	80066c0 <HAL_LTDC_ProgramLineEvent>
 800112c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800112e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001132:	3301      	adds	r3, #1
 8001134:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001138:	f7ff fc16 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800113c:	6820      	ldr	r0, [r4, #0]
 800113e:	f009 fe09 	bl	800ad54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001142:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001146:	2000      	movs	r0, #0
 8001148:	f7ff bafa 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800114c:	f005 fab8 	bl	80066c0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001150:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001152:	6803      	ldr	r3, [r0, #0]
 8001154:	6a1b      	ldr	r3, [r3, #32]
 8001156:	4798      	blx	r3
    }
 8001158:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800115c:	2000      	movs	r0, #0
 800115e:	f7ff baf0 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001162:	bd10      	pop	{r4, pc}
 8001164:	20017564 	.word	0x20017564
 8001168:	40016800 	.word	0x40016800
 800116c:	20002b48 	.word	0x20002b48
 8001170:	20002b46 	.word	0x20002b46

08001174 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001174:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001176:	4b06      	ldr	r3, [pc, #24]	; (8001190 <SPI5_Write+0x1c>)
{
 8001178:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117c:	681b      	ldr	r3, [r3, #0]
 800117e:	4805      	ldr	r0, [pc, #20]	; (8001194 <SPI5_Write+0x20>)
 8001180:	2201      	movs	r2, #1
 8001182:	f10d 0106 	add.w	r1, sp, #6
 8001186:	f005 ffac 	bl	80070e2 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118a:	b003      	add	sp, #12
 800118c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001190:	20000010 	.word	0x20000010
 8001194:	20002d2c 	.word	0x20002d2c

08001198 <CountAvgFrom10sec>:
			result+=ladowarka.PomiaryCoSec[i];
 8001198:	490c      	ldr	r1, [pc, #48]	; (80011cc <CountAvgFrom10sec+0x34>)
float CountAvgFrom10sec(){
 800119a:	b082      	sub	sp, #8
 800119c:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 800119e:	f603 6214 	addw	r2, r3, #3604	; 0xe14
 80011a2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011a6:	ed92 7a01 	vldr	s14, [r2, #4]
 80011aa:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<10;i++)
 80011ae:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b0:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<10;i++)
 80011b4:	2b0a      	cmp	r3, #10
			result+=ladowarka.PomiaryCoSec[i];
 80011b6:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<10;i++)
 80011ba:	d1f0      	bne.n	800119e <CountAvgFrom10sec+0x6>
	return result/10;
 80011bc:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011c0:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80011c4:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011c8:	b002      	add	sp, #8
 80011ca:	4770      	bx	lr
 80011cc:	20002dc4 	.word	0x20002dc4

080011d0 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	  static int liczbaPomiarow=0; // number of adc measurements. if 10 then clear
	  static volatile uint32_t value=0; //actual value of adc measurement

	  static int sec0to9=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011d4:	4c40      	ldr	r4, [pc, #256]	; (80012d8 <ZadanieDwa+0x108>)
 80011d6:	f504 5540 	add.w	r5, r4, #12288	; 0x3000
 80011da:	f8d5 3880 	ldr.w	r3, [r5, #2176]	; 0x880
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d069      	beq.n	80012b6 <ZadanieDwa+0xe6>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011e2:	2300      	movs	r3, #0

					//pomiar napiecia
					HAL_ADC_Start(&hadc1);
 80011e4:	483d      	ldr	r0, [pc, #244]	; (80012dc <ZadanieDwa+0x10c>)
			ladowarka.Minelo100ms=0; //kasuj flage
 80011e6:	f8c5 3880 	str.w	r3, [r5, #2176]	; 0x880
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
					value += HAL_ADC_GetValue(&hadc1);
					liczbaPomiarow++;
 80011ea:	4f3d      	ldr	r7, [pc, #244]	; (80012e0 <ZadanieDwa+0x110>)
					value += HAL_ADC_GetValue(&hadc1);
 80011ec:	4e3d      	ldr	r6, [pc, #244]	; (80012e4 <ZadanieDwa+0x114>)
					HAL_ADC_Start(&hadc1);
 80011ee:	f004 f86d 	bl	80052cc <HAL_ADC_Start>
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80011f2:	f04f 31ff 	mov.w	r1, #4294967295
 80011f6:	4839      	ldr	r0, [pc, #228]	; (80012dc <ZadanieDwa+0x10c>)
 80011f8:	f004 f8dc 	bl	80053b4 <HAL_ADC_PollForConversion>
					value += HAL_ADC_GetValue(&hadc1);
 80011fc:	4837      	ldr	r0, [pc, #220]	; (80012dc <ZadanieDwa+0x10c>)
 80011fe:	f004 f928 	bl	8005452 <HAL_ADC_GetValue>
					liczbaPomiarow++;
 8001202:	683a      	ldr	r2, [r7, #0]
					value += HAL_ADC_GetValue(&hadc1);
 8001204:	6833      	ldr	r3, [r6, #0]
					liczbaPomiarow++;
 8001206:	3201      	adds	r2, #1
 8001208:	210a      	movs	r1, #10
					value += HAL_ADC_GetValue(&hadc1);
 800120a:	4418      	add	r0, r3
					liczbaPomiarow++;
 800120c:	603a      	str	r2, [r7, #0]
 800120e:	fb92 f3f1 	sdiv	r3, r2, r1
 8001212:	fb01 2213 	mls	r2, r1, r3, r2
					value += HAL_ADC_GetValue(&hadc1);
 8001216:	6030      	str	r0, [r6, #0]

					/****** jesli minela sekunda ->10tickow co 100ms********/
					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 8001218:	2a00      	cmp	r2, #0
 800121a:	d14c      	bne.n	80012b6 <ZadanieDwa+0xe6>
						ladowarka.BatteryVoltage=(value/10) * 3.3f / 4096.0f;
 800121c:	6833      	ldr	r3, [r6, #0]
 800121e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001222:	ee07 3a90 	vmov	s15, r3
 8001226:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80012e8 <ZadanieDwa+0x118>
 800122a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800122e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001232:	ed9f 7a2e 	vldr	s14, [pc, #184]	; 80012ec <ZadanieDwa+0x11c>
 8001236:	ee67 7a87 	vmul.f32	s15, s15, s14
 800123a:	edc4 7a00 	vstr	s15, [r4]

						if (ladowarka.ChargeStarted){ //jesli zaczeto ladwowac
 800123e:	68e3      	ldr	r3, [r4, #12]
 8001240:	b3b3      	cbz	r3, 80012b0 <ZadanieDwa+0xe0>
							if (ladowarka.CzsasLadowaniaWSec<1) ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; //dla 0 pomiaru dodaj od razy do tablicy
 8001242:	f8d5 3888 	ldr.w	r3, [r5, #2184]	; 0x888
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie

							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to9++]=ladowarka.BatteryVoltage;
 8001246:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 80012f4 <ZadanieDwa+0x124>
							if (ladowarka.CzsasLadowaniaWSec<1) ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; //dla 0 pomiaru dodaj od razy do tablicy
 800124a:	2b00      	cmp	r3, #0
 800124c:	bfdc      	itt	le
 800124e:	6823      	ldrle	r3, [r4, #0]
 8001250:	6163      	strle	r3, [r4, #20]
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 8001252:	ed94 7a00 	vldr	s14, [r4]
 8001256:	edd4 7a01 	vldr	s15, [r4, #4]
 800125a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800125e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001262:	bfc4      	itt	gt
 8001264:	6823      	ldrgt	r3, [r4, #0]
 8001266:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 8001268:	f8d5 3888 	ldr.w	r3, [r5, #2184]	; 0x888
 800126c:	3301      	adds	r3, #1
 800126e:	f8c5 3888 	str.w	r3, [r5, #2184]	; 0x888
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 8001272:	2301      	movs	r3, #1
 8001274:	f8c5 3884 	str.w	r3, [r5, #2180]	; 0x884
							ladowarka.PomiaryCoSec[sec0to9++]=ladowarka.BatteryVoltage;
 8001278:	f8d8 3000 	ldr.w	r3, [r8]
 800127c:	6821      	ldr	r1, [r4, #0]
 800127e:	1c5a      	adds	r2, r3, #1
 8001280:	f603 6314 	addw	r3, r3, #3604	; 0xe14
 8001284:	eb04 0383 	add.w	r3, r4, r3, lsl #2
							if (sec0to9>9) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 8001288:	2a09      	cmp	r2, #9
							ladowarka.PomiaryCoSec[sec0to9++]=ladowarka.BatteryVoltage;
 800128a:	f8c8 2000 	str.w	r2, [r8]
 800128e:	6059      	str	r1, [r3, #4]
							if (sec0to9>9) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 8001290:	dd0e      	ble.n	80012b0 <ZadanieDwa+0xe0>
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/10]=CountAvgFrom10sec(); // TO DO srednia z 10 pomiarow
 8001292:	230a      	movs	r3, #10
 8001294:	f8d5 0888 	ldr.w	r0, [r5, #2184]	; 0x888
 8001298:	fb90 f0f3 	sdiv	r0, r0, r3
 800129c:	f7ff ff7c 	bl	8001198 <CountAvgFrom10sec>
 80012a0:	3004      	adds	r0, #4
 80012a2:	eb04 0080 	add.w	r0, r4, r0, lsl #2
								sec0to9=0;
 80012a6:	2300      	movs	r3, #0
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/10]=CountAvgFrom10sec(); // TO DO srednia z 10 pomiarow
 80012a8:	ed80 0a01 	vstr	s0, [r0, #4]
								sec0to9=0;
 80012ac:	f8c8 3000 	str.w	r3, [r8]
							}

						}
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 80012b0:	2300      	movs	r3, #0
 80012b2:	603b      	str	r3, [r7, #0]
						value=0;
 80012b4:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 80012b6:	68e6      	ldr	r6, [r4, #12]
 80012b8:	2e01      	cmp	r6, #1
 80012ba:	d108      	bne.n	80012ce <ZadanieDwa+0xfe>
 80012bc:	6922      	ldr	r2, [r4, #16]
 80012be:	b932      	cbnz	r2, 80012ce <ZadanieDwa+0xfe>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365);  //ustaw poprawne napiece tutaj (3V)
 80012c0:	480b      	ldr	r0, [pc, #44]	; (80012f0 <ZadanieDwa+0x120>)
 80012c2:	f240 5355 	movw	r3, #1365	; 0x555
 80012c6:	2110      	movs	r1, #16
 80012c8:	f004 fa25 	bl	8005716 <HAL_DAC_SetValue>
							ladowarka.UstawioneNapiecieNaopAmpie=1;
 80012cc:	6126      	str	r6, [r4, #16]
					}



    osDelay(1); //to chyba ma zostac?
 80012ce:	2001      	movs	r0, #1
 80012d0:	f006 fbee 	bl	8007ab0 <osDelay>
  {
 80012d4:	e781      	b.n	80011da <ZadanieDwa+0xa>
 80012d6:	bf00      	nop
 80012d8:	20002dc4 	.word	0x20002dc4
 80012dc:	20002b58 	.word	0x20002b58
 80012e0:	20006650 	.word	0x20006650
 80012e4:	20006658 	.word	0x20006658
 80012e8:	40533333 	.word	0x40533333
 80012ec:	39800000 	.word	0x39800000
 80012f0:	20002ba8 	.word	0x20002ba8
 80012f4:	20006654 	.word	0x20006654

080012f8 <SystemClock_Config>:
{
 80012f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012fa:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012fc:	2210      	movs	r2, #16
 80012fe:	2100      	movs	r1, #0
 8001300:	a80a      	add	r0, sp, #40	; 0x28
 8001302:	f01e fab7 	bl	801f874 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001306:	2214      	movs	r2, #20
 8001308:	2100      	movs	r1, #0
 800130a:	a803      	add	r0, sp, #12
 800130c:	f01e fab2 	bl	801f874 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001310:	2100      	movs	r1, #0
 8001312:	2230      	movs	r2, #48	; 0x30
 8001314:	a814      	add	r0, sp, #80	; 0x50
 8001316:	f01e faad 	bl	801f874 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800131a:	2400      	movs	r4, #0
 800131c:	4b22      	ldr	r3, [pc, #136]	; (80013a8 <SystemClock_Config+0xb0>)
 800131e:	9401      	str	r4, [sp, #4]
 8001320:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001322:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001326:	641a      	str	r2, [r3, #64]	; 0x40
 8001328:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800132a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800132e:	9301      	str	r3, [sp, #4]
 8001330:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001332:	4b1e      	ldr	r3, [pc, #120]	; (80013ac <SystemClock_Config+0xb4>)
 8001334:	9402      	str	r4, [sp, #8]
 8001336:	681a      	ldr	r2, [r3, #0]
 8001338:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800133c:	601a      	str	r2, [r3, #0]
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001344:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001346:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001348:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800134a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800134e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001352:	2502      	movs	r5, #2
 8001354:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001358:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800135c:	2708      	movs	r7, #8
 800135e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001362:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001364:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001366:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800136a:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800136c:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800136e:	f005 f9c5 	bl	80066fc <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001372:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001374:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001378:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 800137c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001380:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001384:	a803      	add	r0, sp, #12
 8001386:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001388:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800138a:	f005 fb8f 	bl	8006aac <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800138e:	23c0      	movs	r3, #192	; 0xc0
 8001390:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001392:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001394:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001398:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800139a:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800139c:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800139e:	f005 fc5f 	bl	8006c60 <HAL_RCCEx_PeriphCLKConfig>
}
 80013a2:	b021      	add	sp, #132	; 0x84
 80013a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013a6:	bf00      	nop
 80013a8:	40023800 	.word	0x40023800
 80013ac:	40007000 	.word	0x40007000

080013b0 <main>:
{
 80013b0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80013b4:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80013b6:	f003 fea3 	bl	8005100 <HAL_Init>
  SystemClock_Config();
 80013ba:	f7ff ff9d 	bl	80012f8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013be:	2214      	movs	r2, #20
 80013c0:	2100      	movs	r1, #0
 80013c2:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013c4:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013c6:	f01e fa55 	bl	801f874 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013ca:	4bc4      	ldr	r3, [pc, #784]	; (80016dc <main+0x32c>)
 80013cc:	9400      	str	r4, [sp, #0]
 80013ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013d0:	48c3      	ldr	r0, [pc, #780]	; (80016e0 <main+0x330>)
  hi2c3.Instance = I2C3;
 80013d2:	4dc4      	ldr	r5, [pc, #784]	; (80016e4 <main+0x334>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013d4:	f042 0220 	orr.w	r2, r2, #32
 80013d8:	631a      	str	r2, [r3, #48]	; 0x30
 80013da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013dc:	f002 0220 	and.w	r2, r2, #32
 80013e0:	9200      	str	r2, [sp, #0]
 80013e2:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013e4:	9401      	str	r4, [sp, #4]
 80013e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013e8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80013ec:	631a      	str	r2, [r3, #48]	; 0x30
 80013ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f0:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80013f4:	9201      	str	r2, [sp, #4]
 80013f6:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80013f8:	9402      	str	r4, [sp, #8]
 80013fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013fc:	f042 0204 	orr.w	r2, r2, #4
 8001400:	631a      	str	r2, [r3, #48]	; 0x30
 8001402:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001404:	f002 0204 	and.w	r2, r2, #4
 8001408:	9202      	str	r2, [sp, #8]
 800140a:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800140c:	9403      	str	r4, [sp, #12]
 800140e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001410:	f042 0201 	orr.w	r2, r2, #1
 8001414:	631a      	str	r2, [r3, #48]	; 0x30
 8001416:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001418:	f002 0201 	and.w	r2, r2, #1
 800141c:	9203      	str	r2, [sp, #12]
 800141e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001420:	9404      	str	r4, [sp, #16]
 8001422:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001424:	f042 0202 	orr.w	r2, r2, #2
 8001428:	631a      	str	r2, [r3, #48]	; 0x30
 800142a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800142c:	f002 0202 	and.w	r2, r2, #2
 8001430:	9204      	str	r2, [sp, #16]
 8001432:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001434:	9405      	str	r4, [sp, #20]
 8001436:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001438:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800143c:	631a      	str	r2, [r3, #48]	; 0x30
 800143e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001440:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001444:	9205      	str	r2, [sp, #20]
 8001446:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001448:	9406      	str	r4, [sp, #24]
 800144a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800144c:	f042 0210 	orr.w	r2, r2, #16
 8001450:	631a      	str	r2, [r3, #48]	; 0x30
 8001452:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001454:	f002 0210 	and.w	r2, r2, #16
 8001458:	9206      	str	r2, [sp, #24]
 800145a:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800145c:	9407      	str	r4, [sp, #28]
 800145e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001460:	f042 0208 	orr.w	r2, r2, #8
 8001464:	631a      	str	r2, [r3, #48]	; 0x30
 8001466:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001468:	f003 0308 	and.w	r3, r3, #8
 800146c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800146e:	4622      	mov	r2, r4
 8001470:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001472:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001474:	f004 fb46 	bl	8005b04 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001478:	489b      	ldr	r0, [pc, #620]	; (80016e8 <main+0x338>)
 800147a:	4622      	mov	r2, r4
 800147c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001480:	f004 fb40 	bl	8005b04 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001484:	4622      	mov	r2, r4
 8001486:	4899      	ldr	r0, [pc, #612]	; (80016ec <main+0x33c>)
 8001488:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800148c:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800148e:	f004 fb39 	bl	8005b04 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001492:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001494:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001498:	4891      	ldr	r0, [pc, #580]	; (80016e0 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800149a:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800149c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800149e:	e9cd b60d 	strd	fp, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014a2:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014a4:	f004 fa46 	bl	8005934 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80014a8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014ac:	488e      	ldr	r0, [pc, #568]	; (80016e8 <main+0x338>)
 80014ae:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014b0:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014b4:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014b8:	f004 fa3c 	bl	8005934 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014bc:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014be:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014c2:	488a      	ldr	r0, [pc, #552]	; (80016ec <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014c4:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014c8:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014cc:	f004 fa32 	bl	8005934 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80014d0:	4887      	ldr	r0, [pc, #540]	; (80016f0 <main+0x340>)
 80014d2:	4a88      	ldr	r2, [pc, #544]	; (80016f4 <main+0x344>)
 80014d4:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80014d6:	f004 f8ad 	bl	8005634 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80014da:	4b87      	ldr	r3, [pc, #540]	; (80016f8 <main+0x348>)
 80014dc:	4a87      	ldr	r2, [pc, #540]	; (80016fc <main+0x34c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014de:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80014e0:	e9c5 3200 	strd	r3, r2, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014e4:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014e6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80014ea:	e9c5 2404 	strd	r2, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80014ee:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80014f2:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014f6:	f004 fce7 	bl	8005ec8 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80014fa:	2110      	movs	r1, #16
 80014fc:	4628      	mov	r0, r5
 80014fe:	f004 ff23 	bl	8006348 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001502:	4621      	mov	r1, r4
 8001504:	4628      	mov	r0, r5
 8001506:	f004 ff3e 	bl	8006386 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800150a:	487d      	ldr	r0, [pc, #500]	; (8001700 <main+0x350>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800150c:	497d      	ldr	r1, [pc, #500]	; (8001704 <main+0x354>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800150e:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001510:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001514:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001518:	f44f 7500 	mov.w	r5, #512	; 0x200
 800151c:	2218      	movs	r2, #24
 800151e:	e9c0 5206 	strd	r5, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001522:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001524:	4d78      	ldr	r5, [pc, #480]	; (8001708 <main+0x358>)
  hspi5.Init.CRCPolynomial = 10;
 8001526:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001528:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800152c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001530:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001534:	f005 fd98 	bl	8007068 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001538:	4a74      	ldr	r2, [pc, #464]	; (800170c <main+0x35c>)
  SdramTiming.LoadToActiveDelay = 2;
 800153a:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800153c:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001540:	e9c5 2600 	strd	r2, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001544:	2240      	movs	r2, #64	; 0x40
 8001546:	e9c5 8204 	strd	r8, r2, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800154a:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800154e:	e9c5 2406 	strd	r2, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001552:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 8001556:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001558:	f04f 0907 	mov.w	r9, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800155c:	e9c5 2408 	strd	r2, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001560:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001562:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001566:	4628      	mov	r0, r5
  SdramTiming.RPDelay = 2;
 8001568:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800156c:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001570:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001574:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 8001576:	e9cd 9b0e 	strd	r9, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800157a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 800157e:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001580:	f005 fc98 	bl	8006eb4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001584:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001588:	a909      	add	r1, sp, #36	; 0x24
 800158a:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 800158c:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001590:	9609      	str	r6, [sp, #36]	; 0x24
 __IO uint32_t tmpmrd =0;
 8001592:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 8001594:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001596:	f005 fcad 	bl	8006ef4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800159a:	4630      	mov	r0, r6
 800159c:	f003 fddc 	bl	8005158 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015a4:	a909      	add	r1, sp, #36	; 0x24
 80015a6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015a8:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015ac:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015b0:	f005 fca0 	bl	8006ef4 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80015b4:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015ba:	a909      	add	r1, sp, #36	; 0x24
 80015bc:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015be:	e9cd 3a09 	strd	r3, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015c2:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015c6:	f005 fc95 	bl	8006ef4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80015ca:	f44f 720c 	mov.w	r2, #560	; 0x230
 80015ce:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80015d0:	9b08      	ldr	r3, [sp, #32]
 80015d2:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015d8:	a909      	add	r1, sp, #36	; 0x24
 80015da:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015dc:	e9cd ba09 	strd	fp, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80015e0:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015e2:	f005 fc87 	bl	8006ef4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80015e6:	f240 516a 	movw	r1, #1386	; 0x56a
 80015ea:	4628      	mov	r0, r5
 80015ec:	f005 fc99 	bl	8006f22 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80015f0:	2234      	movs	r2, #52	; 0x34
 80015f2:	4621      	mov	r1, r4
 80015f4:	eb0d 0002 	add.w	r0, sp, r2
 80015f8:	f01e f93c 	bl	801f874 <memset>
  hltdc.Instance = LTDC;
 80015fc:	4d44      	ldr	r5, [pc, #272]	; (8001710 <main+0x360>)
 80015fe:	4b45      	ldr	r3, [pc, #276]	; (8001714 <main+0x364>)
  hltdc.Init.Backcolor.Blue = 0;
 8001600:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001602:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001606:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 8001608:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 800160c:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedVBP = 3;
 8001610:	2303      	movs	r3, #3
 8001612:	e9c5 c307 	strd	ip, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001616:	f240 1e0d 	movw	lr, #269	; 0x10d
 800161a:	f240 1343 	movw	r3, #323	; 0x143
 800161e:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001622:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001624:	f240 1347 	movw	r3, #327	; 0x147
 8001628:	f240 1a17 	movw	sl, #279	; 0x117
 800162c:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001630:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001634:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 8001636:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800163a:	f004 ff49 	bl	80064d0 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800163e:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001640:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001642:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001646:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 800164a:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 800164c:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8001650:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001654:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 8001658:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800165c:	a90d      	add	r1, sp, #52	; 0x34
 800165e:	4622      	mov	r2, r4
 8001660:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001662:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 8001666:	4d2c      	ldr	r5, [pc, #176]	; (8001718 <main+0x368>)
  pLayerCfg.ImageHeight = 320;
 8001668:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 800166a:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 800166c:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001670:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001674:	f004 fff7 	bl	8006666 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001678:	4b28      	ldr	r3, [pc, #160]	; (800171c <main+0x36c>)
 800167a:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800167c:	681b      	ldr	r3, [r3, #0]
 800167e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001680:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001682:	4d27      	ldr	r5, [pc, #156]	; (8001720 <main+0x370>)
  LcdDrv->DisplayOff();
 8001684:	68db      	ldr	r3, [r3, #12]
 8001686:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001688:	4b26      	ldr	r3, [pc, #152]	; (8001724 <main+0x374>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800168a:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800168e:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001692:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001694:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001698:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800169c:	f004 f84d 	bl	800573a <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80016a0:	4631      	mov	r1, r6
 80016a2:	4628      	mov	r0, r5
 80016a4:	f004 f902 	bl	80058ac <HAL_DMA2D_ConfigLayer>
  ADC_ChannelConfTypeDef sConfig = {0};
 80016a8:	4621      	mov	r1, r4
 80016aa:	4642      	mov	r2, r8
 80016ac:	a80d      	add	r0, sp, #52	; 0x34
 80016ae:	f01e f8e1 	bl	801f874 <memset>
  hadc1.Instance = ADC1;
 80016b2:	4d1d      	ldr	r5, [pc, #116]	; (8001728 <main+0x378>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016b4:	4a1d      	ldr	r2, [pc, #116]	; (800172c <main+0x37c>)
  hadc1.Init.NbrOfConversion = 1;
 80016b6:	61ee      	str	r6, [r5, #28]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016b8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016bc:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80016c0:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80016c2:	4b1b      	ldr	r3, [pc, #108]	; (8001730 <main+0x380>)
 80016c4:	62ab      	str	r3, [r5, #40]	; 0x28
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80016c6:	616e      	str	r6, [r5, #20]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80016c8:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80016ca:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80016cc:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80016ce:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80016d2:	62ec      	str	r4, [r5, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80016d4:	60ec      	str	r4, [r5, #12]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80016d6:	f885 4030 	strb.w	r4, [r5, #48]	; 0x30
 80016da:	e02b      	b.n	8001734 <main+0x384>
 80016dc:	40023800 	.word	0x40023800
 80016e0:	40020800 	.word	0x40020800
 80016e4:	20002bfc 	.word	0x20002bfc
 80016e8:	40020400 	.word	0x40020400
 80016ec:	40020c00 	.word	0x40020c00
 80016f0:	20002ba0 	.word	0x20002ba0
 80016f4:	40023000 	.word	0x40023000
 80016f8:	40005c00 	.word	0x40005c00
 80016fc:	000186a0 	.word	0x000186a0
 8001700:	20002d2c 	.word	0x20002d2c
 8001704:	40015000 	.word	0x40015000
 8001708:	20002cf8 	.word	0x20002cf8
 800170c:	a0000140 	.word	0xa0000140
 8001710:	20002c50 	.word	0x20002c50
 8001714:	40016800 	.word	0x40016800
 8001718:	20002b50 	.word	0x20002b50
 800171c:	20000018 	.word	0x20000018
 8001720:	20002bbc 	.word	0x20002bbc
 8001724:	4002b000 	.word	0x4002b000
 8001728:	20002b58 	.word	0x20002b58
 800172c:	40012000 	.word	0x40012000
 8001730:	0f000001 	.word	0x0f000001
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001734:	f003 fd24 	bl	8005180 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001738:	a90d      	add	r1, sp, #52	; 0x34
 800173a:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 800173c:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 8001740:	4d25      	ldr	r5, [pc, #148]	; (80017d8 <main+0x428>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001742:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001746:	f003 fe87 	bl	8005458 <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 800174a:	4924      	ldr	r1, [pc, #144]	; (80017dc <main+0x42c>)
  hdac.Instance = DAC;
 800174c:	4e24      	ldr	r6, [pc, #144]	; (80017e0 <main+0x430>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800174e:	60ac      	str	r4, [r5, #8]
  htim7.Init.Prescaler = 8400-1;
 8001750:	f242 03cf 	movw	r3, #8399	; 0x20cf
 8001754:	e9c5 1300 	strd	r1, r3, [r5]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001758:	4628      	mov	r0, r5
  htim7.Init.Period = 1000-1;
 800175a:	f240 33e7 	movw	r3, #999	; 0x3e7
 800175e:	60eb      	str	r3, [r5, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001760:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001764:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001766:	f006 f819 	bl	800779c <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800176a:	a90d      	add	r1, sp, #52	; 0x34
 800176c:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800176e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001772:	f006 f82d 	bl	80077d0 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 8001776:	4b1b      	ldr	r3, [pc, #108]	; (80017e4 <main+0x434>)
 8001778:	6033      	str	r3, [r6, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800177a:	4630      	mov	r0, r6
  DAC_ChannelConfTypeDef sConfig = {0};
 800177c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001780:	f003 ff68 	bl	8005654 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001784:	4642      	mov	r2, r8
 8001786:	a90d      	add	r1, sp, #52	; 0x34
 8001788:	4630      	mov	r0, r6
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 800178a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 800178e:	f003 ffa1 	bl	80056d4 <HAL_DAC_ConfigChannel>
  MX_TouchGFX_Init();
 8001792:	f7fe ff28 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 8001796:	4628      	mov	r0, r5
 8001798:	f005 fee3 	bl	8007562 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 800179c:	4641      	mov	r1, r8
 800179e:	4630      	mov	r0, r6
 80017a0:	f003 ff6b 	bl	800567a <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80017a4:	f240 5355 	movw	r3, #1365	; 0x555
 80017a8:	4622      	mov	r2, r4
 80017aa:	4641      	mov	r1, r8
 80017ac:	4630      	mov	r0, r6
 80017ae:	f003 ffb2 	bl	8005716 <HAL_DAC_SetValue>
  osKernelInitialize();
 80017b2:	f006 f8ed 	bl	8007990 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017b6:	4a0c      	ldr	r2, [pc, #48]	; (80017e8 <main+0x438>)
 80017b8:	480c      	ldr	r0, [pc, #48]	; (80017ec <main+0x43c>)
 80017ba:	4621      	mov	r1, r4
 80017bc:	f006 f922 	bl	8007a04 <osThreadNew>
 80017c0:	4b0b      	ldr	r3, [pc, #44]	; (80017f0 <main+0x440>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017c2:	4a0c      	ldr	r2, [pc, #48]	; (80017f4 <main+0x444>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017c4:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017c6:	4621      	mov	r1, r4
 80017c8:	480b      	ldr	r0, [pc, #44]	; (80017f8 <main+0x448>)
 80017ca:	f006 f91b 	bl	8007a04 <osThreadNew>
 80017ce:	4b0b      	ldr	r3, [pc, #44]	; (80017fc <main+0x44c>)
 80017d0:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80017d2:	f006 f8f7 	bl	80079c4 <osKernelStart>
  while (1)
 80017d6:	e7fe      	b.n	80017d6 <main+0x426>
 80017d8:	20002d84 	.word	0x20002d84
 80017dc:	40001400 	.word	0x40001400
 80017e0:	20002ba8 	.word	0x20002ba8
 80017e4:	40007400 	.word	0x40007400
 80017e8:	08020dcc 	.word	0x08020dcc
 80017ec:	080005eb 	.word	0x080005eb
 80017f0:	20002b4c 	.word	0x20002b4c
 80017f4:	08020df0 	.word	0x08020df0
 80017f8:	080011d1 	.word	0x080011d1
 80017fc:	20002b54 	.word	0x20002b54

08001800 <IOE_Init>:
 8001800:	4770      	bx	lr

08001802 <IOE_ITConfig>:
 8001802:	4770      	bx	lr

08001804 <IOE_Write>:
{
 8001804:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001806:	4b09      	ldr	r3, [pc, #36]	; (800182c <IOE_Write+0x28>)
 8001808:	f88d 2017 	strb.w	r2, [sp, #23]
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	9302      	str	r3, [sp, #8]
 8001810:	f10d 0217 	add.w	r2, sp, #23
 8001814:	2301      	movs	r3, #1
 8001816:	9200      	str	r2, [sp, #0]
 8001818:	9301      	str	r3, [sp, #4]
 800181a:	460a      	mov	r2, r1
 800181c:	4601      	mov	r1, r0
 800181e:	4804      	ldr	r0, [pc, #16]	; (8001830 <IOE_Write+0x2c>)
 8001820:	f004 fbfa 	bl	8006018 <HAL_I2C_Mem_Write>
}
 8001824:	b007      	add	sp, #28
 8001826:	f85d fb04 	ldr.w	pc, [sp], #4
 800182a:	bf00      	nop
 800182c:	2000000c 	.word	0x2000000c
 8001830:	20002bfc 	.word	0x20002bfc

08001834 <IOE_Read>:
{
 8001834:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001836:	2300      	movs	r3, #0
 8001838:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800183c:	4b08      	ldr	r3, [pc, #32]	; (8001860 <IOE_Read+0x2c>)
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	9302      	str	r3, [sp, #8]
{
 8001842:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001844:	2301      	movs	r3, #1
 8001846:	f10d 0117 	add.w	r1, sp, #23
 800184a:	9100      	str	r1, [sp, #0]
 800184c:	9301      	str	r3, [sp, #4]
 800184e:	4601      	mov	r1, r0
 8001850:	4804      	ldr	r0, [pc, #16]	; (8001864 <IOE_Read+0x30>)
 8001852:	f004 fc71 	bl	8006138 <HAL_I2C_Mem_Read>
}
 8001856:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800185a:	b007      	add	sp, #28
 800185c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001860:	2000000c 	.word	0x2000000c
 8001864:	20002bfc 	.word	0x20002bfc

08001868 <IOE_ReadMultiple>:
{
 8001868:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800186a:	4c08      	ldr	r4, [pc, #32]	; (800188c <IOE_ReadMultiple+0x24>)
 800186c:	6824      	ldr	r4, [r4, #0]
 800186e:	9200      	str	r2, [sp, #0]
 8001870:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001874:	460a      	mov	r2, r1
 8001876:	2301      	movs	r3, #1
 8001878:	4601      	mov	r1, r0
 800187a:	4805      	ldr	r0, [pc, #20]	; (8001890 <IOE_ReadMultiple+0x28>)
 800187c:	f004 fc5c 	bl	8006138 <HAL_I2C_Mem_Read>
}
 8001880:	3800      	subs	r0, #0
 8001882:	bf18      	it	ne
 8001884:	2001      	movne	r0, #1
 8001886:	b004      	add	sp, #16
 8001888:	bd10      	pop	{r4, pc}
 800188a:	bf00      	nop
 800188c:	2000000c 	.word	0x2000000c
 8001890:	20002bfc 	.word	0x20002bfc

08001894 <IOE_Delay>:
 8001894:	f003 bc60 	b.w	8005158 <HAL_Delay>

08001898 <LCD_IO_Init>:
{
 8001898:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800189a:	4806      	ldr	r0, [pc, #24]	; (80018b4 <LCD_IO_Init+0x1c>)
 800189c:	2200      	movs	r2, #0
 800189e:	2104      	movs	r1, #4
 80018a0:	f004 f930 	bl	8005b04 <HAL_GPIO_WritePin>
}
 80018a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018a8:	4802      	ldr	r0, [pc, #8]	; (80018b4 <LCD_IO_Init+0x1c>)
 80018aa:	2201      	movs	r2, #1
 80018ac:	2104      	movs	r1, #4
 80018ae:	f004 b929 	b.w	8005b04 <HAL_GPIO_WritePin>
 80018b2:	bf00      	nop
 80018b4:	40020800 	.word	0x40020800

080018b8 <LCD_IO_WriteData>:
{
 80018b8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ba:	4d0b      	ldr	r5, [pc, #44]	; (80018e8 <LCD_IO_WriteData+0x30>)
{
 80018bc:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018be:	2201      	movs	r2, #1
 80018c0:	480a      	ldr	r0, [pc, #40]	; (80018ec <LCD_IO_WriteData+0x34>)
 80018c2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018c6:	f004 f91d 	bl	8005b04 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ca:	2200      	movs	r2, #0
 80018cc:	2104      	movs	r1, #4
 80018ce:	4628      	mov	r0, r5
 80018d0:	f004 f918 	bl	8005b04 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018d4:	4620      	mov	r0, r4
 80018d6:	f7ff fc4d 	bl	8001174 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018da:	4628      	mov	r0, r5
 80018dc:	2201      	movs	r2, #1
}
 80018de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018e2:	2104      	movs	r1, #4
 80018e4:	f004 b90e 	b.w	8005b04 <HAL_GPIO_WritePin>
 80018e8:	40020800 	.word	0x40020800
 80018ec:	40020c00 	.word	0x40020c00

080018f0 <LCD_IO_WriteReg>:
{
 80018f0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018f2:	4d0b      	ldr	r5, [pc, #44]	; (8001920 <LCD_IO_WriteReg+0x30>)
{
 80018f4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018f6:	2200      	movs	r2, #0
 80018f8:	480a      	ldr	r0, [pc, #40]	; (8001924 <LCD_IO_WriteReg+0x34>)
 80018fa:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018fe:	f004 f901 	bl	8005b04 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001902:	2200      	movs	r2, #0
 8001904:	2104      	movs	r1, #4
 8001906:	4628      	mov	r0, r5
 8001908:	f004 f8fc 	bl	8005b04 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 800190c:	4620      	mov	r0, r4
 800190e:	f7ff fc31 	bl	8001174 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001912:	4628      	mov	r0, r5
 8001914:	2201      	movs	r2, #1
}
 8001916:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800191a:	2104      	movs	r1, #4
 800191c:	f004 b8f2 	b.w	8005b04 <HAL_GPIO_WritePin>
 8001920:	40020800 	.word	0x40020800
 8001924:	40020c00 	.word	0x40020c00

08001928 <LCD_IO_ReadData>:
{
 8001928:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800192a:	4e14      	ldr	r6, [pc, #80]	; (800197c <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800192c:	4f14      	ldr	r7, [pc, #80]	; (8001980 <LCD_IO_ReadData+0x58>)
{
 800192e:	4605      	mov	r5, r0
 8001930:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001932:	4630      	mov	r0, r6
 8001934:	2200      	movs	r2, #0
 8001936:	2104      	movs	r1, #4
 8001938:	f004 f8e4 	bl	8005b04 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800193c:	2200      	movs	r2, #0
 800193e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001942:	4638      	mov	r0, r7
 8001944:	f004 f8de 	bl	8005b04 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001948:	4628      	mov	r0, r5
 800194a:	f7ff fc13 	bl	8001174 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800194e:	4b0d      	ldr	r3, [pc, #52]	; (8001984 <LCD_IO_ReadData+0x5c>)
 8001950:	480d      	ldr	r0, [pc, #52]	; (8001988 <LCD_IO_ReadData+0x60>)
 8001952:	681b      	ldr	r3, [r3, #0]
 8001954:	4622      	mov	r2, r4
 8001956:	a901      	add	r1, sp, #4
 8001958:	f005 fd61 	bl	800741e <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800195c:	4638      	mov	r0, r7
 800195e:	2201      	movs	r2, #1
 8001960:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001964:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001966:	f004 f8cd 	bl	8005b04 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800196a:	4630      	mov	r0, r6
 800196c:	2201      	movs	r2, #1
 800196e:	2104      	movs	r1, #4
 8001970:	f004 f8c8 	bl	8005b04 <HAL_GPIO_WritePin>
}
 8001974:	4620      	mov	r0, r4
 8001976:	b003      	add	sp, #12
 8001978:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800197a:	bf00      	nop
 800197c:	40020800 	.word	0x40020800
 8001980:	40020c00 	.word	0x40020c00
 8001984:	20000010 	.word	0x20000010
 8001988:	20002d2c 	.word	0x20002d2c

0800198c <LCD_Delay>:
  HAL_Delay(Delay);
 800198c:	f003 bbe4 	b.w	8005158 <HAL_Delay>

08001990 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001990:	6802      	ldr	r2, [r0, #0]
 8001992:	4b08      	ldr	r3, [pc, #32]	; (80019b4 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001994:	429a      	cmp	r2, r3
{
 8001996:	b510      	push	{r4, lr}
 8001998:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 800199a:	d101      	bne.n	80019a0 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 800199c:	f003 fbca 	bl	8005134 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 80019a0:	6822      	ldr	r2, [r4, #0]
 80019a2:	4b05      	ldr	r3, [pc, #20]	; (80019b8 <HAL_TIM_PeriodElapsedCallback+0x28>)
 80019a4:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 80019a6:	bf02      	ittt	eq
 80019a8:	4b04      	ldreq	r3, [pc, #16]	; (80019bc <HAL_TIM_PeriodElapsedCallback+0x2c>)
 80019aa:	2201      	moveq	r2, #1
 80019ac:	f8c3 2880 	streq.w	r2, [r3, #2176]	; 0x880
  }

  /* USER CODE END Callback 1 */
}
 80019b0:	bd10      	pop	{r4, pc}
 80019b2:	bf00      	nop
 80019b4:	40010400 	.word	0x40010400
 80019b8:	40001400 	.word	0x40001400
 80019bc:	20005dc4 	.word	0x20005dc4

080019c0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019c0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019c2:	4b0e      	ldr	r3, [pc, #56]	; (80019fc <HAL_MspInit+0x3c>)
 80019c4:	2200      	movs	r2, #0
 80019c6:	9200      	str	r2, [sp, #0]
 80019c8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ca:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019ce:	6459      	str	r1, [r3, #68]	; 0x44
 80019d0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019d2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019d6:	9100      	str	r1, [sp, #0]
 80019d8:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019da:	9201      	str	r2, [sp, #4]
 80019dc:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019de:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019e2:	6419      	str	r1, [r3, #64]	; 0x40
 80019e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019ea:	9301      	str	r3, [sp, #4]
 80019ec:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019ee:	210f      	movs	r1, #15
 80019f0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019f4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019f6:	f003 bddd 	b.w	80055b4 <HAL_NVIC_SetPriority>
 80019fa:	bf00      	nop
 80019fc:	40023800 	.word	0x40023800

08001a00 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a00:	b510      	push	{r4, lr}
 8001a02:	4604      	mov	r4, r0
 8001a04:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a06:	2214      	movs	r2, #20
 8001a08:	2100      	movs	r1, #0
 8001a0a:	a803      	add	r0, sp, #12
 8001a0c:	f01d ff32 	bl	801f874 <memset>
  if(hadc->Instance==ADC1)
 8001a10:	6822      	ldr	r2, [r4, #0]
 8001a12:	4b12      	ldr	r3, [pc, #72]	; (8001a5c <HAL_ADC_MspInit+0x5c>)
 8001a14:	429a      	cmp	r2, r3
 8001a16:	d11e      	bne.n	8001a56 <HAL_ADC_MspInit+0x56>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a18:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8001a1c:	2100      	movs	r1, #0
 8001a1e:	9101      	str	r1, [sp, #4]
 8001a20:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a22:	480f      	ldr	r0, [pc, #60]	; (8001a60 <HAL_ADC_MspInit+0x60>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a24:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001a28:	645a      	str	r2, [r3, #68]	; 0x44
 8001a2a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a2c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001a30:	9201      	str	r2, [sp, #4]
 8001a32:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a34:	9102      	str	r1, [sp, #8]
 8001a36:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a38:	f042 0201 	orr.w	r2, r2, #1
 8001a3c:	631a      	str	r2, [r3, #48]	; 0x30
 8001a3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a40:	f003 0301 	and.w	r3, r3, #1
 8001a44:	9302      	str	r3, [sp, #8]
 8001a46:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a48:	2280      	movs	r2, #128	; 0x80
 8001a4a:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a4c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a4e:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a52:	f003 ff6f 	bl	8005934 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001a56:	b008      	add	sp, #32
 8001a58:	bd10      	pop	{r4, pc}
 8001a5a:	bf00      	nop
 8001a5c:	40012000 	.word	0x40012000
 8001a60:	40020000 	.word	0x40020000

08001a64 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a64:	6802      	ldr	r2, [r0, #0]
 8001a66:	4b09      	ldr	r3, [pc, #36]	; (8001a8c <HAL_CRC_MspInit+0x28>)
 8001a68:	429a      	cmp	r2, r3
{
 8001a6a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a6c:	d10b      	bne.n	8001a86 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a6e:	2300      	movs	r3, #0
 8001a70:	9301      	str	r3, [sp, #4]
 8001a72:	4b07      	ldr	r3, [pc, #28]	; (8001a90 <HAL_CRC_MspInit+0x2c>)
 8001a74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a76:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001a7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a7e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a82:	9301      	str	r3, [sp, #4]
 8001a84:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a86:	b002      	add	sp, #8
 8001a88:	4770      	bx	lr
 8001a8a:	bf00      	nop
 8001a8c:	40023000 	.word	0x40023000
 8001a90:	40023800 	.word	0x40023800

08001a94 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001a94:	b510      	push	{r4, lr}
 8001a96:	4604      	mov	r4, r0
 8001a98:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a9a:	2214      	movs	r2, #20
 8001a9c:	2100      	movs	r1, #0
 8001a9e:	a803      	add	r0, sp, #12
 8001aa0:	f01d fee8 	bl	801f874 <memset>
  if(hdac->Instance==DAC)
 8001aa4:	6822      	ldr	r2, [r4, #0]
 8001aa6:	4b12      	ldr	r3, [pc, #72]	; (8001af0 <HAL_DAC_MspInit+0x5c>)
 8001aa8:	429a      	cmp	r2, r3
 8001aaa:	d11e      	bne.n	8001aea <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001aac:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001ab0:	2100      	movs	r1, #0
 8001ab2:	9101      	str	r1, [sp, #4]
 8001ab4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ab6:	480f      	ldr	r0, [pc, #60]	; (8001af4 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001ab8:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001abc:	641a      	str	r2, [r3, #64]	; 0x40
 8001abe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ac0:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001ac4:	9201      	str	r2, [sp, #4]
 8001ac6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ac8:	9102      	str	r1, [sp, #8]
 8001aca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001acc:	f042 0201 	orr.w	r2, r2, #1
 8001ad0:	631a      	str	r2, [r3, #48]	; 0x30
 8001ad2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ad4:	f003 0301 	and.w	r3, r3, #1
 8001ad8:	9302      	str	r3, [sp, #8]
 8001ada:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001adc:	2220      	movs	r2, #32
 8001ade:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ae0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001ae2:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ae6:	f003 ff25 	bl	8005934 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001aea:	b008      	add	sp, #32
 8001aec:	bd10      	pop	{r4, pc}
 8001aee:	bf00      	nop
 8001af0:	40007400 	.word	0x40007400
 8001af4:	40020000 	.word	0x40020000

08001af8 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001af8:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001afa:	4b0f      	ldr	r3, [pc, #60]	; (8001b38 <HAL_DMA2D_MspInit+0x40>)
 8001afc:	6802      	ldr	r2, [r0, #0]
 8001afe:	429a      	cmp	r2, r3
 8001b00:	d116      	bne.n	8001b30 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b02:	2200      	movs	r2, #0
 8001b04:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001b08:	9201      	str	r2, [sp, #4]
 8001b0a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b0c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001b10:	6319      	str	r1, [r3, #48]	; 0x30
 8001b12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b14:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b18:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b1a:	2105      	movs	r1, #5
 8001b1c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b1e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b20:	f003 fd48 	bl	80055b4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b24:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001b26:	b003      	add	sp, #12
 8001b28:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b2c:	f003 bd74 	b.w	8005618 <HAL_NVIC_EnableIRQ>
}
 8001b30:	b003      	add	sp, #12
 8001b32:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b36:	bf00      	nop
 8001b38:	4002b000 	.word	0x4002b000

08001b3c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001b40:	4604      	mov	r4, r0
 8001b42:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b44:	2214      	movs	r2, #20
 8001b46:	2100      	movs	r1, #0
 8001b48:	a803      	add	r0, sp, #12
 8001b4a:	f01d fe93 	bl	801f874 <memset>
  if(hi2c->Instance==I2C3)
 8001b4e:	6822      	ldr	r2, [r4, #0]
 8001b50:	4b24      	ldr	r3, [pc, #144]	; (8001be4 <HAL_I2C_MspInit+0xa8>)
 8001b52:	429a      	cmp	r2, r3
 8001b54:	d143      	bne.n	8001bde <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b56:	4c24      	ldr	r4, [pc, #144]	; (8001be8 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b58:	4824      	ldr	r0, [pc, #144]	; (8001bec <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b5a:	2500      	movs	r5, #0
 8001b5c:	9500      	str	r5, [sp, #0]
 8001b5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b60:	f043 0304 	orr.w	r3, r3, #4
 8001b64:	6323      	str	r3, [r4, #48]	; 0x30
 8001b66:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b68:	f003 0304 	and.w	r3, r3, #4
 8001b6c:	9300      	str	r3, [sp, #0]
 8001b6e:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b70:	9501      	str	r5, [sp, #4]
 8001b72:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b74:	f043 0301 	orr.w	r3, r3, #1
 8001b78:	6323      	str	r3, [r4, #48]	; 0x30
 8001b7a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b7c:	f003 0301 	and.w	r3, r3, #1
 8001b80:	9301      	str	r3, [sp, #4]
 8001b82:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b84:	f04f 0912 	mov.w	r9, #18
 8001b88:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b8c:	f04f 0801 	mov.w	r8, #1
 8001b90:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b92:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b94:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b96:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b9a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b9e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ba0:	f003 fec8 	bl	8005934 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ba4:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ba8:	4811      	ldr	r0, [pc, #68]	; (8001bf0 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001baa:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bac:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001bae:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bb2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb6:	f003 febd 	bl	8005934 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001bba:	9502      	str	r5, [sp, #8]
 8001bbc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bbe:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001bc2:	6423      	str	r3, [r4, #64]	; 0x40
 8001bc4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bc6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001bca:	9302      	str	r3, [sp, #8]
 8001bcc:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001bce:	6a23      	ldr	r3, [r4, #32]
 8001bd0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001bd4:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001bd6:	6a23      	ldr	r3, [r4, #32]
 8001bd8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001bdc:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001bde:	b009      	add	sp, #36	; 0x24
 8001be0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001be4:	40005c00 	.word	0x40005c00
 8001be8:	40023800 	.word	0x40023800
 8001bec:	40020800 	.word	0x40020800
 8001bf0:	40020000 	.word	0x40020000

08001bf4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001bf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bf6:	4604      	mov	r4, r0
 8001bf8:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bfa:	2214      	movs	r2, #20
 8001bfc:	2100      	movs	r1, #0
 8001bfe:	a807      	add	r0, sp, #28
 8001c00:	f01d fe38 	bl	801f874 <memset>
  if(hltdc->Instance==LTDC)
 8001c04:	6822      	ldr	r2, [r4, #0]
 8001c06:	4b57      	ldr	r3, [pc, #348]	; (8001d64 <HAL_LTDC_MspInit+0x170>)
 8001c08:	429a      	cmp	r2, r3
 8001c0a:	f040 80a8 	bne.w	8001d5e <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c0e:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001c12:	2500      	movs	r5, #0
 8001c14:	9500      	str	r5, [sp, #0]
 8001c16:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c18:	4853      	ldr	r0, [pc, #332]	; (8001d68 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c1a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c1e:	645a      	str	r2, [r3, #68]	; 0x44
 8001c20:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c22:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001c26:	9200      	str	r2, [sp, #0]
 8001c28:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c2a:	9501      	str	r5, [sp, #4]
 8001c2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c2e:	f042 0220 	orr.w	r2, r2, #32
 8001c32:	631a      	str	r2, [r3, #48]	; 0x30
 8001c34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c36:	f002 0220 	and.w	r2, r2, #32
 8001c3a:	9201      	str	r2, [sp, #4]
 8001c3c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c3e:	9502      	str	r5, [sp, #8]
 8001c40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c42:	f042 0201 	orr.w	r2, r2, #1
 8001c46:	631a      	str	r2, [r3, #48]	; 0x30
 8001c48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c4a:	f002 0201 	and.w	r2, r2, #1
 8001c4e:	9202      	str	r2, [sp, #8]
 8001c50:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c52:	9503      	str	r5, [sp, #12]
 8001c54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c56:	f042 0202 	orr.w	r2, r2, #2
 8001c5a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c5e:	f002 0202 	and.w	r2, r2, #2
 8001c62:	9203      	str	r2, [sp, #12]
 8001c64:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c66:	9504      	str	r5, [sp, #16]
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001c6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c72:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001c76:	9204      	str	r2, [sp, #16]
 8001c78:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c7a:	9505      	str	r5, [sp, #20]
 8001c7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c7e:	f042 0204 	orr.w	r2, r2, #4
 8001c82:	631a      	str	r2, [r3, #48]	; 0x30
 8001c84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c86:	f002 0204 	and.w	r2, r2, #4
 8001c8a:	9205      	str	r2, [sp, #20]
 8001c8c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c8e:	9506      	str	r5, [sp, #24]
 8001c90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c92:	f042 0208 	orr.w	r2, r2, #8
 8001c96:	631a      	str	r2, [r3, #48]	; 0x30
 8001c98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c9a:	f003 0308 	and.w	r3, r3, #8
 8001c9e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca0:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ca2:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ca4:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ca6:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca8:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cac:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cae:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cb2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb4:	f003 fe3e 	bl	8005934 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001cb8:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cbc:	482b      	ldr	r0, [pc, #172]	; (8001d6c <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cbe:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cc0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc2:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cc6:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cc8:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ccc:	f003 fe32 	bl	8005934 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001cd0:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cd2:	4827      	ldr	r0, [pc, #156]	; (8001d70 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cd4:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cd6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd8:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cdc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ce0:	f003 fe28 	bl	8005934 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001ce4:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ce8:	4821      	ldr	r0, [pc, #132]	; (8001d70 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cea:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cec:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cee:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cf2:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cf6:	f003 fe1d 	bl	8005934 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001cfa:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cfe:	481d      	ldr	r0, [pc, #116]	; (8001d74 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d00:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d02:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d04:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d08:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d0c:	f003 fe12 	bl	8005934 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001d10:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d12:	4819      	ldr	r0, [pc, #100]	; (8001d78 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d14:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d16:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d18:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d1c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d20:	f003 fe08 	bl	8005934 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001d24:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d26:	4815      	ldr	r0, [pc, #84]	; (8001d7c <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d28:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d2a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d2c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d30:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d34:	f003 fdfe 	bl	8005934 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001d38:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d3c:	480d      	ldr	r0, [pc, #52]	; (8001d74 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d3e:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d40:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d42:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d46:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d4a:	f003 fdf3 	bl	8005934 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001d4e:	2058      	movs	r0, #88	; 0x58
 8001d50:	462a      	mov	r2, r5
 8001d52:	2105      	movs	r1, #5
 8001d54:	f003 fc2e 	bl	80055b4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001d58:	2058      	movs	r0, #88	; 0x58
 8001d5a:	f003 fc5d 	bl	8005618 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d5e:	b00d      	add	sp, #52	; 0x34
 8001d60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d62:	bf00      	nop
 8001d64:	40016800 	.word	0x40016800
 8001d68:	40021400 	.word	0x40021400
 8001d6c:	40020000 	.word	0x40020000
 8001d70:	40020400 	.word	0x40020400
 8001d74:	40021800 	.word	0x40021800
 8001d78:	40020800 	.word	0x40020800
 8001d7c:	40020c00 	.word	0x40020c00

08001d80 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001d80:	b510      	push	{r4, lr}
 8001d82:	4604      	mov	r4, r0
 8001d84:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d86:	2214      	movs	r2, #20
 8001d88:	2100      	movs	r1, #0
 8001d8a:	a803      	add	r0, sp, #12
 8001d8c:	f01d fd72 	bl	801f874 <memset>
  if(hspi->Instance==SPI5)
 8001d90:	6822      	ldr	r2, [r4, #0]
 8001d92:	4b14      	ldr	r3, [pc, #80]	; (8001de4 <HAL_SPI_MspInit+0x64>)
 8001d94:	429a      	cmp	r2, r3
 8001d96:	d123      	bne.n	8001de0 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001d98:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001d9c:	2100      	movs	r1, #0
 8001d9e:	9101      	str	r1, [sp, #4]
 8001da0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001da2:	4811      	ldr	r0, [pc, #68]	; (8001de8 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001da4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001da8:	645a      	str	r2, [r3, #68]	; 0x44
 8001daa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001dac:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001db0:	9201      	str	r2, [sp, #4]
 8001db2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001db4:	9102      	str	r1, [sp, #8]
 8001db6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db8:	f042 0220 	orr.w	r2, r2, #32
 8001dbc:	631a      	str	r2, [r3, #48]	; 0x30
 8001dbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc0:	f003 0320 	and.w	r3, r3, #32
 8001dc4:	9302      	str	r3, [sp, #8]
 8001dc6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc8:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001dcc:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001dce:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd0:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001dd4:	2305      	movs	r3, #5
 8001dd6:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dda:	a903      	add	r1, sp, #12
 8001ddc:	f003 fdaa 	bl	8005934 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001de0:	b008      	add	sp, #32
 8001de2:	bd10      	pop	{r4, pc}
 8001de4:	40015000 	.word	0x40015000
 8001de8:	40021400 	.word	0x40021400

08001dec <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001dec:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001dee:	4b0f      	ldr	r3, [pc, #60]	; (8001e2c <HAL_TIM_Base_MspInit+0x40>)
 8001df0:	6802      	ldr	r2, [r0, #0]
 8001df2:	429a      	cmp	r2, r3
 8001df4:	d116      	bne.n	8001e24 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001df6:	2200      	movs	r2, #0
 8001df8:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001dfc:	9201      	str	r2, [sp, #4]
 8001dfe:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001e00:	f041 0120 	orr.w	r1, r1, #32
 8001e04:	6419      	str	r1, [r3, #64]	; 0x40
 8001e06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e08:	f003 0320 	and.w	r3, r3, #32
 8001e0c:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e0e:	2105      	movs	r1, #5
 8001e10:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001e12:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e14:	f003 fbce 	bl	80055b4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e18:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001e1a:	b003      	add	sp, #12
 8001e1c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e20:	f003 bbfa 	b.w	8005618 <HAL_NVIC_EnableIRQ>
}
 8001e24:	b003      	add	sp, #12
 8001e26:	f85d fb04 	ldr.w	pc, [sp], #4
 8001e2a:	bf00      	nop
 8001e2c:	40001400 	.word	0x40001400

08001e30 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001e30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e34:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001e36:	2300      	movs	r3, #0
 8001e38:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001e3a:	4b2b      	ldr	r3, [pc, #172]	; (8001ee8 <HAL_SDRAM_MspInit+0xb8>)
 8001e3c:	681c      	ldr	r4, [r3, #0]
 8001e3e:	2c00      	cmp	r4, #0
 8001e40:	d14f      	bne.n	8001ee2 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001e42:	f04f 0801 	mov.w	r8, #1
 8001e46:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e4a:	4b28      	ldr	r3, [pc, #160]	; (8001eec <HAL_SDRAM_MspInit+0xbc>)
 8001e4c:	9400      	str	r4, [sp, #0]
 8001e4e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e50:	4827      	ldr	r0, [pc, #156]	; (8001ef0 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e52:	ea42 0208 	orr.w	r2, r2, r8
 8001e56:	639a      	str	r2, [r3, #56]	; 0x38
 8001e58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001e5a:	ea03 0308 	and.w	r3, r3, r8
 8001e5e:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e60:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e62:	2603      	movs	r6, #3
 8001e64:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e66:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e68:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e6a:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001e6e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e72:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e76:	f003 fd5d 	bl	8005934 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e7a:	481e      	ldr	r0, [pc, #120]	; (8001ef4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e7c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e7e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e80:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e84:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e88:	f003 fd54 	bl	8005934 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001e8c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e90:	4819      	ldr	r0, [pc, #100]	; (8001ef8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e92:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e94:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e96:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e9a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e9e:	f003 fd49 	bl	8005934 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001ea2:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ea6:	4815      	ldr	r0, [pc, #84]	; (8001efc <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ea8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001eaa:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eac:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eb0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001eb4:	f003 fd3e 	bl	8005934 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001eb8:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ebc:	4810      	ldr	r0, [pc, #64]	; (8001f00 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ebe:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ec0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ec2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ec6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001eca:	f003 fd33 	bl	8005934 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001ece:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ed0:	480c      	ldr	r0, [pc, #48]	; (8001f04 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ed2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ed4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ed6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eda:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ede:	f003 fd29 	bl	8005934 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001ee2:	b006      	add	sp, #24
 8001ee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ee8:	2000665c 	.word	0x2000665c
 8001eec:	40023800 	.word	0x40023800
 8001ef0:	40021400 	.word	0x40021400
 8001ef4:	40020800 	.word	0x40020800
 8001ef8:	40021800 	.word	0x40021800
 8001efc:	40021000 	.word	0x40021000
 8001f00:	40020c00 	.word	0x40020c00
 8001f04:	40020400 	.word	0x40020400

08001f08 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001f08:	b530      	push	{r4, r5, lr}
 8001f0a:	4601      	mov	r1, r0
 8001f0c:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8001f0e:	2200      	movs	r2, #0
 8001f10:	202c      	movs	r0, #44	; 0x2c
 8001f12:	f003 fb4f 	bl	80055b4 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8001f16:	202c      	movs	r0, #44	; 0x2c
 8001f18:	f003 fb7e 	bl	8005618 <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f1c:	2500      	movs	r5, #0
 8001f1e:	4b15      	ldr	r3, [pc, #84]	; (8001f74 <HAL_InitTick+0x6c>)
 8001f20:	9502      	str	r5, [sp, #8]
 8001f22:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8001f24:	4c14      	ldr	r4, [pc, #80]	; (8001f78 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f26:	f042 0202 	orr.w	r2, r2, #2
 8001f2a:	645a      	str	r2, [r3, #68]	; 0x44
 8001f2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f2e:	f003 0302 	and.w	r3, r3, #2
 8001f32:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f34:	a901      	add	r1, sp, #4
 8001f36:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f38:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f3a:	f004 fe73 	bl	8006c24 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f3e:	f004 fe61 	bl	8006c04 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8001f42:	4b0e      	ldr	r3, [pc, #56]	; (8001f7c <HAL_InitTick+0x74>)
 8001f44:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 8001f46:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f4a:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f4c:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001f4e:	4b0c      	ldr	r3, [pc, #48]	; (8001f80 <HAL_InitTick+0x78>)
 8001f50:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f54:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 8001f56:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f58:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 8001f5a:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f5c:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f5e:	f005 fc1d 	bl	800779c <HAL_TIM_Base_Init>
 8001f62:	b920      	cbnz	r0, 8001f6e <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 8001f64:	4620      	mov	r0, r4
 8001f66:	f005 fafc 	bl	8007562 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f6a:	b009      	add	sp, #36	; 0x24
 8001f6c:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f6e:	2001      	movs	r0, #1
 8001f70:	e7fb      	b.n	8001f6a <HAL_InitTick+0x62>
 8001f72:	bf00      	nop
 8001f74:	40023800 	.word	0x40023800
 8001f78:	20006660 	.word	0x20006660
 8001f7c:	40010400 	.word	0x40010400
 8001f80:	000f4240 	.word	0x000f4240

08001f84 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f84:	4770      	bx	lr

08001f86 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f86:	e7fe      	b.n	8001f86 <HardFault_Handler>

08001f88 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f88:	e7fe      	b.n	8001f88 <MemManage_Handler>

08001f8a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f8a:	e7fe      	b.n	8001f8a <BusFault_Handler>

08001f8c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f8c:	e7fe      	b.n	8001f8c <UsageFault_Handler>

08001f8e <DebugMon_Handler>:
 8001f8e:	4770      	bx	lr

08001f90 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8001f90:	4801      	ldr	r0, [pc, #4]	; (8001f98 <TIM8_UP_TIM13_IRQHandler+0x8>)
 8001f92:	f005 bafa 	b.w	800758a <HAL_TIM_IRQHandler>
 8001f96:	bf00      	nop
 8001f98:	20006660 	.word	0x20006660

08001f9c <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001f9c:	4801      	ldr	r0, [pc, #4]	; (8001fa4 <TIM7_IRQHandler+0x8>)
 8001f9e:	f005 baf4 	b.w	800758a <HAL_TIM_IRQHandler>
 8001fa2:	bf00      	nop
 8001fa4:	20002d84 	.word	0x20002d84

08001fa8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001fa8:	4801      	ldr	r0, [pc, #4]	; (8001fb0 <LTDC_IRQHandler+0x8>)
 8001faa:	f004 baff 	b.w	80065ac <HAL_LTDC_IRQHandler>
 8001fae:	bf00      	nop
 8001fb0:	20002c50 	.word	0x20002c50

08001fb4 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001fb4:	4801      	ldr	r0, [pc, #4]	; (8001fbc <DMA2D_IRQHandler+0x8>)
 8001fb6:	f003 bbee 	b.w	8005796 <HAL_DMA2D_IRQHandler>
 8001fba:	bf00      	nop
 8001fbc:	20002bbc 	.word	0x20002bbc

08001fc0 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001fc0:	2001      	movs	r0, #1
 8001fc2:	4770      	bx	lr

08001fc4 <_kill>:

int _kill(int pid, int sig)
{
 8001fc4:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fc6:	f01d fb01 	bl	801f5cc <__errno>
 8001fca:	2316      	movs	r3, #22
 8001fcc:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001fce:	f04f 30ff 	mov.w	r0, #4294967295
 8001fd2:	bd08      	pop	{r3, pc}

08001fd4 <_exit>:

void _exit (int status)
{
 8001fd4:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fd6:	f01d faf9 	bl	801f5cc <__errno>
 8001fda:	2316      	movs	r3, #22
 8001fdc:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001fde:	e7fe      	b.n	8001fde <_exit+0xa>

08001fe0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001fe0:	b570      	push	{r4, r5, r6, lr}
 8001fe2:	460d      	mov	r5, r1
 8001fe4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fe6:	460e      	mov	r6, r1
 8001fe8:	1b73      	subs	r3, r6, r5
 8001fea:	429c      	cmp	r4, r3
 8001fec:	dc01      	bgt.n	8001ff2 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001fee:	4620      	mov	r0, r4
 8001ff0:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001ff2:	f3af 8000 	nop.w
 8001ff6:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ffa:	e7f5      	b.n	8001fe8 <_read+0x8>

08001ffc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001ffc:	b570      	push	{r4, r5, r6, lr}
 8001ffe:	460d      	mov	r5, r1
 8002000:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002002:	460e      	mov	r6, r1
 8002004:	1b73      	subs	r3, r6, r5
 8002006:	429c      	cmp	r4, r3
 8002008:	dc01      	bgt.n	800200e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800200a:	4620      	mov	r0, r4
 800200c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800200e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002012:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002016:	e7f5      	b.n	8002004 <_write+0x8>

08002018 <_close>:

int _close(int file)
{
	return -1;
}
 8002018:	f04f 30ff 	mov.w	r0, #4294967295
 800201c:	4770      	bx	lr

0800201e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800201e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002022:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002024:	2000      	movs	r0, #0
 8002026:	4770      	bx	lr

08002028 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002028:	2001      	movs	r0, #1
 800202a:	4770      	bx	lr

0800202c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 800202c:	2000      	movs	r0, #0
 800202e:	4770      	bx	lr

08002030 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002030:	4a0a      	ldr	r2, [pc, #40]	; (800205c <_sbrk+0x2c>)
 8002032:	6811      	ldr	r1, [r2, #0]
{
 8002034:	b508      	push	{r3, lr}
 8002036:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002038:	b909      	cbnz	r1, 800203e <_sbrk+0xe>
		heap_end = &end;
 800203a:	4909      	ldr	r1, [pc, #36]	; (8002060 <_sbrk+0x30>)
 800203c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800203e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002040:	4669      	mov	r1, sp
 8002042:	4403      	add	r3, r0
 8002044:	428b      	cmp	r3, r1
 8002046:	d906      	bls.n	8002056 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002048:	f01d fac0 	bl	801f5cc <__errno>
 800204c:	230c      	movs	r3, #12
 800204e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002050:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002054:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002056:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002058:	e7fc      	b.n	8002054 <_sbrk+0x24>
 800205a:	bf00      	nop
 800205c:	200066a0 	.word	0x200066a0
 8002060:	20017810 	.word	0x20017810

08002064 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002064:	4770      	bx	lr

08002066 <_ZN23ApplicationFontProviderD0Ev>:
 8002066:	b510      	push	{r4, lr}
 8002068:	2104      	movs	r1, #4
 800206a:	4604      	mov	r4, r0
 800206c:	f01d fa4e 	bl	801f50c <_ZdlPvj>
 8002070:	4620      	mov	r0, r4
 8002072:	bd10      	pop	{r4, pc}

08002074 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002074:	2901      	cmp	r1, #1
{
 8002076:	b508      	push	{r3, lr}
    switch (typography)
 8002078:	d006      	beq.n	8002088 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800207a:	2902      	cmp	r1, #2
 800207c:	d008      	beq.n	8002090 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800207e:	b959      	cbnz	r1, 8002098 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002080:	f002 fb34 	bl	80046ec <_ZN17TypedTextDatabase8getFontsEv>
 8002084:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002086:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002088:	f002 fb30 	bl	80046ec <_ZN17TypedTextDatabase8getFontsEv>
 800208c:	6840      	ldr	r0, [r0, #4]
 800208e:	e7fa      	b.n	8002086 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002090:	f002 fb2c 	bl	80046ec <_ZN17TypedTextDatabase8getFontsEv>
 8002094:	6880      	ldr	r0, [r0, #8]
 8002096:	e7f6      	b.n	8002086 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002098:	2000      	movs	r0, #0
 800209a:	e7f4      	b.n	8002086 <_ZN23ApplicationFontProvider7getFontEt+0x12>

0800209c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800209c:	4800      	ldr	r0, [pc, #0]	; (80020a0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800209e:	4770      	bx	lr
 80020a0:	08020e28 	.word	0x08020e28

080020a4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80020a4:	2009      	movs	r0, #9
 80020a6:	4770      	bx	lr

080020a8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80020a8:	b513      	push	{r0, r1, r4, lr}
 80020aa:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80020ac:	b151      	cbz	r1, 80020c4 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020ae:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80020b0:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80020b2:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020b6:	aa01      	add	r2, sp, #4
 80020b8:	689c      	ldr	r4, [r3, #8]
 80020ba:	f10d 0303 	add.w	r3, sp, #3
 80020be:	47a0      	blx	r4
        return glyph;
    }
 80020c0:	b002      	add	sp, #8
 80020c2:	bd10      	pop	{r4, pc}
            return 0;
 80020c4:	4608      	mov	r0, r1
 80020c6:	e7fb      	b.n	80020c0 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080020c8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80020c8:	8940      	ldrh	r0, [r0, #10]
 80020ca:	4770      	bx	lr

080020cc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80020cc:	8980      	ldrh	r0, [r0, #12]
 80020ce:	4770      	bx	lr

080020d0 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80020d0:	8880      	ldrh	r0, [r0, #4]
 80020d2:	4770      	bx	lr

080020d4 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80020d4:	7983      	ldrb	r3, [r0, #6]
 80020d6:	8880      	ldrh	r0, [r0, #4]
 80020d8:	4418      	add	r0, r3
    }
 80020da:	b280      	uxth	r0, r0
 80020dc:	4770      	bx	lr

080020de <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80020de:	79c0      	ldrb	r0, [r0, #7]
    }
 80020e0:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80020e4:	4770      	bx	lr

080020e6 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80020e6:	79c0      	ldrb	r0, [r0, #7]
    }
 80020e8:	09c0      	lsrs	r0, r0, #7
 80020ea:	4770      	bx	lr

080020ec <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80020ec:	4770      	bx	lr

080020ee <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80020ee:	b510      	push	{r4, lr}
    }
 80020f0:	2108      	movs	r1, #8
    virtual ~TypedText()
 80020f2:	4604      	mov	r4, r0
    }
 80020f4:	f01d fa0a 	bl	801f50c <_ZdlPvj>
 80020f8:	4620      	mov	r0, r4
 80020fa:	bd10      	pop	{r4, pc}

080020fc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80020fc:	4770      	bx	lr

080020fe <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80020fe:	4770      	bx	lr

08002100 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002100:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002104:	6808      	ldr	r0, [r1, #0]
 8002106:	6849      	ldr	r1, [r1, #4]
 8002108:	c303      	stmia	r3!, {r0, r1}
    }
 800210a:	4770      	bx	lr

0800210c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800210c:	2000      	movs	r0, #0
 800210e:	4770      	bx	lr

08002110 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002110:	8081      	strh	r1, [r0, #4]
    }
 8002112:	4770      	bx	lr

08002114 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002114:	80c1      	strh	r1, [r0, #6]
    }
 8002116:	4770      	bx	lr

08002118 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002118:	8101      	strh	r1, [r0, #8]
    }
 800211a:	4770      	bx	lr

0800211c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800211c:	8141      	strh	r1, [r0, #10]
    }
 800211e:	4770      	bx	lr

08002120 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002120:	4770      	bx	lr

08002122 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002122:	4770      	bx	lr

08002124 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002124:	4770      	bx	lr

08002126 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002126:	4770      	bx	lr

08002128 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002128:	4770      	bx	lr

0800212a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800212a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800212c:	88c4      	ldrh	r4, [r0, #6]
 800212e:	6803      	ldr	r3, [r0, #0]
 8002130:	1b12      	subs	r2, r2, r4
 8002132:	8884      	ldrh	r4, [r0, #4]
 8002134:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002136:	1b09      	subs	r1, r1, r4
 8002138:	b212      	sxth	r2, r2
    }
 800213a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800213e:	b209      	sxth	r1, r1
 8002140:	4718      	bx	r3

08002142 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002142:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002146:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002148:	f04f 33ff 	mov.w	r3, #4294967295
 800214c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800214e:	6813      	ldr	r3, [r2, #0]
 8002150:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002152:	6010      	str	r0, [r2, #0]
    }
 8002154:	4770      	bx	lr

08002156 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002156:	4770      	bx	lr

08002158 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002158:	4770      	bx	lr

0800215a <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800215a:	6041      	str	r1, [r0, #4]
    }
 800215c:	4770      	bx	lr

0800215e <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800215e:	4770      	bx	lr

08002160 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002160:	4b06      	ldr	r3, [pc, #24]	; (800217c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002162:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002166:	2300      	movs	r3, #0
 8002168:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800216c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002170:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002174:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002178:	4770      	bx	lr
 800217a:	bf00      	nop
 800217c:	08002291 	.word	0x08002291

08002180 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002180:	2301      	movs	r3, #1
 8002182:	7203      	strb	r3, [r0, #8]
    }
 8002184:	4770      	bx	lr

08002186 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002186:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800218a:	b11a      	cbz	r2, 8002194 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800218c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002190:	b102      	cbz	r2, 8002194 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002192:	6018      	str	r0, [r3, #0]
        }
    }
 8002194:	4770      	bx	lr

08002196 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 8002196:	4770      	bx	lr

08002198 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 8002198:	4770      	bx	lr

0800219a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800219a:	4770      	bx	lr

0800219c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800219c:	4770      	bx	lr

0800219e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 800219e:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80021a0:	6840      	ldr	r0, [r0, #4]
 80021a2:	6803      	ldr	r3, [r0, #0]
 80021a4:	3110      	adds	r1, #16
 80021a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80021a8:	4718      	bx	r3

080021aa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80021aa:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80021ac:	6840      	ldr	r0, [r0, #4]
 80021ae:	6803      	ldr	r3, [r0, #0]
 80021b0:	3110      	adds	r1, #16
 80021b2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80021b4:	4718      	bx	r3

080021b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80021b6:	4770      	bx	lr

080021b8 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 80021b8:	4770      	bx	lr

080021ba <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 80021ba:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80021bc:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 80021be:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80021c2:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80021c6:	8002      	strh	r2, [r0, #0]
 80021c8:	8042      	strh	r2, [r0, #2]
 80021ca:	8084      	strh	r4, [r0, #4]
 80021cc:	80c1      	strh	r1, [r0, #6]
        }
 80021ce:	bd10      	pop	{r4, pc}

080021d0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80021d0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80021d2:	68c2      	ldr	r2, [r0, #12]
 80021d4:	6841      	ldr	r1, [r0, #4]
 80021d6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80021d8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80021da:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80021de:	07d2      	lsls	r2, r2, #31
 80021e0:	bf48      	it	mi
 80021e2:	590a      	ldrmi	r2, [r1, r4]
 80021e4:	689b      	ldr	r3, [r3, #8]
    }
 80021e6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80021ea:	bf48      	it	mi
 80021ec:	58d3      	ldrmi	r3, [r2, r3]
 80021ee:	4718      	bx	r3

080021f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80021f0:	6843      	ldr	r3, [r0, #4]
 80021f2:	b12b      	cbz	r3, 8002200 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80021f4:	6883      	ldr	r3, [r0, #8]
 80021f6:	b92b      	cbnz	r3, 8002204 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80021f8:	68c0      	ldr	r0, [r0, #12]
 80021fa:	f000 0001 	and.w	r0, r0, #1
 80021fe:	4770      	bx	lr
 8002200:	4618      	mov	r0, r3
 8002202:	4770      	bx	lr
 8002204:	2001      	movs	r0, #1
    }
 8002206:	4770      	bx	lr

08002208 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002208:	b510      	push	{r4, lr}
 800220a:	210c      	movs	r1, #12
 800220c:	4604      	mov	r4, r0
 800220e:	f01d f97d 	bl	801f50c <_ZdlPvj>
 8002212:	4620      	mov	r0, r4
 8002214:	bd10      	pop	{r4, pc}

08002216 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002216:	b510      	push	{r4, lr}
 8002218:	2110      	movs	r1, #16
 800221a:	4604      	mov	r4, r0
 800221c:	f01d f976 	bl	801f50c <_ZdlPvj>
 8002220:	4620      	mov	r0, r4
 8002222:	bd10      	pop	{r4, pc}

08002224 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002224:	b510      	push	{r4, lr}
 8002226:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800222a:	4604      	mov	r4, r0
 800222c:	f01d f96e 	bl	801f50c <_ZdlPvj>
 8002230:	4620      	mov	r0, r4
 8002232:	bd10      	pop	{r4, pc}

08002234 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002234:	b510      	push	{r4, lr}
 8002236:	2138      	movs	r1, #56	; 0x38
 8002238:	4604      	mov	r4, r0
 800223a:	f01d f967 	bl	801f50c <_ZdlPvj>
 800223e:	4620      	mov	r0, r4
 8002240:	bd10      	pop	{r4, pc}

08002242 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002242:	b510      	push	{r4, lr}
 8002244:	2128      	movs	r1, #40	; 0x28
 8002246:	4604      	mov	r4, r0
 8002248:	f01d f960 	bl	801f50c <_ZdlPvj>
 800224c:	4620      	mov	r0, r4
 800224e:	bd10      	pop	{r4, pc}

08002250 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002250:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002252:	f00d fe3f 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002256:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800225a:	f00e b9df 	b.w	801061c <_ZN8touchgfx11Application10invalidateEv>

0800225e <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800225e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002262:	b112      	cbz	r2, 800226a <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002264:	6803      	ldr	r3, [r0, #0]
 8002266:	695b      	ldr	r3, [r3, #20]
 8002268:	4718      	bx	r3
    }
 800226a:	4770      	bx	lr

0800226c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800226c:	b510      	push	{r4, lr}
 800226e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002270:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002274:	b158      	cbz	r0, 800228e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002276:	6803      	ldr	r3, [r0, #0]
 8002278:	68db      	ldr	r3, [r3, #12]
 800227a:	4798      	blx	r3
 800227c:	b138      	cbz	r0, 800228e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800227e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002282:	6803      	ldr	r3, [r0, #0]
 8002284:	689b      	ldr	r3, [r3, #8]
 8002286:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002288:	2300      	movs	r3, #0
 800228a:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800228e:	bd10      	pop	{r4, pc}

08002290 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002290:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002294:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002298:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800229a:	68a8      	ldr	r0, [r5, #8]
 800229c:	6803      	ldr	r3, [r0, #0]
 800229e:	6a1b      	ldr	r3, [r3, #32]
 80022a0:	4798      	blx	r3
 80022a2:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 80022a6:	d205      	bcs.n	80022b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80022a8:	4b45      	ldr	r3, [pc, #276]	; (80023c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80022aa:	4a46      	ldr	r2, [pc, #280]	; (80023c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022ac:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022ae:	4846      	ldr	r0, [pc, #280]	; (80023c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80022b0:	f01d f95a 	bl	801f568 <__assert_func>
 80022b4:	6868      	ldr	r0, [r5, #4]
 80022b6:	6803      	ldr	r3, [r0, #0]
 80022b8:	6a1b      	ldr	r3, [r3, #32]
 80022ba:	4798      	blx	r3
 80022bc:	280f      	cmp	r0, #15
 80022be:	d803      	bhi.n	80022c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80022c0:	4b42      	ldr	r3, [pc, #264]	; (80023cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80022c2:	4a40      	ldr	r2, [pc, #256]	; (80023c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022c4:	21a4      	movs	r1, #164	; 0xa4
 80022c6:	e7f2      	b.n	80022ae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022c8:	68e8      	ldr	r0, [r5, #12]
 80022ca:	6803      	ldr	r3, [r0, #0]
 80022cc:	6a1b      	ldr	r3, [r3, #32]
 80022ce:	4798      	blx	r3
 80022d0:	280b      	cmp	r0, #11
 80022d2:	d803      	bhi.n	80022dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80022d4:	4b3e      	ldr	r3, [pc, #248]	; (80023d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 80022d6:	4a3b      	ldr	r2, [pc, #236]	; (80023c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022d8:	21a5      	movs	r1, #165	; 0xa5
 80022da:	e7e8      	b.n	80022ae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80022dc:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80022e0:	f00d fdf8 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
 80022e4:	f00d fdfc 	bl	800fee0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80022e8:	f8d9 0000 	ldr.w	r0, [r9]
 80022ec:	b110      	cbz	r0, 80022f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80022ee:	6803      	ldr	r3, [r0, #0]
 80022f0:	68db      	ldr	r3, [r3, #12]
 80022f2:	4798      	blx	r3
    if (*currentTrans)
 80022f4:	f8d9 0000 	ldr.w	r0, [r9]
 80022f8:	b110      	cbz	r0, 8002300 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80022fa:	6803      	ldr	r3, [r0, #0]
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	4798      	blx	r3
    if (*currentScreen)
 8002300:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80023dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002304:	f8d8 0000 	ldr.w	r0, [r8]
 8002308:	b110      	cbz	r0, 8002310 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800230a:	6803      	ldr	r3, [r0, #0]
 800230c:	695b      	ldr	r3, [r3, #20]
 800230e:	4798      	blx	r3
    if (*currentPresenter)
 8002310:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002314:	b110      	cbz	r0, 800231c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002316:	6803      	ldr	r3, [r0, #0]
 8002318:	685b      	ldr	r3, [r3, #4]
 800231a:	4798      	blx	r3
    if (*currentScreen)
 800231c:	f8d8 0000 	ldr.w	r0, [r8]
 8002320:	b110      	cbz	r0, 8002328 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002322:	6803      	ldr	r3, [r0, #0]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	4798      	blx	r3
    if (*currentPresenter)
 8002328:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800232c:	b110      	cbz	r0, 8002334 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800232e:	6803      	ldr	r3, [r0, #0]
 8002330:	689b      	ldr	r3, [r3, #8]
 8002332:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002334:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	2100      	movs	r1, #0
 800233a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800233c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800233e:	f04f 0b00 	mov.w	fp, #0
 8002342:	4b24      	ldr	r3, [pc, #144]	; (80023d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002344:	6003      	str	r3, [r0, #0]
 8002346:	4604      	mov	r4, r0
 8002348:	f8c0 b004 	str.w	fp, [r0, #4]
 800234c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002350:	68a8      	ldr	r0, [r5, #8]
 8002352:	6803      	ldr	r3, [r0, #0]
 8002354:	4659      	mov	r1, fp
 8002356:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002358:	4798      	blx	r3
 800235a:	4606      	mov	r6, r0
 800235c:	f002 faa6 	bl	80048ac <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002360:	6868      	ldr	r0, [r5, #4]
 8002362:	6803      	ldr	r3, [r0, #0]
 8002364:	4659      	mov	r1, fp
 8002366:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002368:	4798      	blx	r3
 800236a:	4631      	mov	r1, r6
 800236c:	4605      	mov	r5, r0
 800236e:	f002 fa29 	bl	80047c4 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002372:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002376:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800237a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800237e:	b1e5      	cbz	r5, 80023ba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002380:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002382:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002386:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayLastAndMaxVlt() {} ;
    virtual void DisplayRunningTime() {} ;

    void bind(Model* m)
    {
        model = m;
 8002388:	f8c5 a008 	str.w	sl, [r5, #8]
 800238c:	4630      	mov	r0, r6
 800238e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002390:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002392:	4798      	blx	r3
    newPresenter->activate();
 8002394:	682b      	ldr	r3, [r5, #0]
 8002396:	4628      	mov	r0, r5
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800239c:	4621      	mov	r1, r4
 800239e:	4630      	mov	r0, r6
 80023a0:	f00f fa46 	bl	8011830 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023a4:	6823      	ldr	r3, [r4, #0]
 80023a6:	4620      	mov	r0, r4
 80023a8:	691b      	ldr	r3, [r3, #16]
 80023aa:	4798      	blx	r3
    newTransition->invalidate();
 80023ac:	6823      	ldr	r3, [r4, #0]
 80023ae:	695b      	ldr	r3, [r3, #20]
 80023b0:	4620      	mov	r0, r4
}
 80023b2:	b001      	add	sp, #4
 80023b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023b8:	4718      	bx	r3
    model->bind(newPresenter);
 80023ba:	462b      	mov	r3, r5
 80023bc:	e7e1      	b.n	8002382 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 80023be:	bf00      	nop
 80023c0:	08020eec 	.word	0x08020eec
 80023c4:	08020f7a 	.word	0x08020f7a
 80023c8:	0802107e 	.word	0x0802107e
 80023cc:	080210c5 	.word	0x080210c5
 80023d0:	08021168 	.word	0x08021168
 80023d4:	080214ac 	.word	0x080214ac
 80023d8:	200175ac 	.word	0x200175ac
 80023dc:	200175a8 	.word	0x200175a8

080023e0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80023e0:	4b04      	ldr	r3, [pc, #16]	; (80023f4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80023e2:	681b      	ldr	r3, [r3, #0]
 80023e4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80023e8:	b10a      	cbz	r2, 80023ee <_ZN8touchgfx3HAL3lcdEv+0xe>
 80023ea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80023ec:	b900      	cbnz	r0, 80023f0 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80023ee:	6898      	ldr	r0, [r3, #8]
    }
 80023f0:	4770      	bx	lr
 80023f2:	bf00      	nop
 80023f4:	20017564 	.word	0x20017564

080023f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80023f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023fa:	4604      	mov	r4, r0
        animationCounter++;
 80023fc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 80023fe:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002400:	3001      	adds	r0, #1
 8002402:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002404:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 8002406:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002408:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800240a:	d850      	bhi.n	80024ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800240c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002410:	2100      	movs	r1, #0
 8002412:	f00f fa13 	bl	801183c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002416:	f010 0201 	ands.w	r2, r0, #1
 800241a:	b283      	uxth	r3, r0
 800241c:	d04d      	beq.n	80024ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800241e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002422:	2800      	cmp	r0, #0
 8002424:	bfd8      	it	le
 8002426:	460a      	movle	r2, r1
 8002428:	4413      	add	r3, r2
 800242a:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800242c:	4e24      	ldr	r6, [pc, #144]	; (80024c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800242e:	4f25      	ldr	r7, [pc, #148]	; (80024c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002430:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002432:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002436:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002438:	f9b7 0000 	ldrsh.w	r0, [r7]
 800243c:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002440:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002442:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002444:	4463      	add	r3, ip
 8002446:	1a5b      	subs	r3, r3, r1
 8002448:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 800244c:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800244e:	b212      	sxth	r2, r2
 8002450:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 8002452:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002454:	8322      	strh	r2, [r4, #24]
 8002456:	f8ad 2018 	strh.w	r2, [sp, #24]
 800245a:	f8ad 501a 	strh.w	r5, [sp, #26]
 800245e:	a906      	add	r1, sp, #24
 8002460:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002462:	7aa3      	ldrb	r3, [r4, #10]
 8002464:	2b01      	cmp	r3, #1
 8002466:	d126      	bne.n	80024b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002468:	4b17      	ldr	r3, [pc, #92]	; (80024c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 800246a:	781b      	ldrb	r3, [r3, #0]
 800246c:	b31b      	cbz	r3, 80024b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 800246e:	69a1      	ldr	r1, [r4, #24]
 8002470:	6960      	ldr	r0, [r4, #20]
 8002472:	ab04      	add	r3, sp, #16
 8002474:	c303      	stmia	r3!, {r0, r1}
        return instance;
 8002476:	4b15      	ldr	r3, [pc, #84]	; (80024cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8002478:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800247a:	6803      	ldr	r3, [r0, #0]
 800247c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800247e:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002480:	8833      	ldrh	r3, [r6, #0]
 8002482:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 8002486:	883b      	ldrh	r3, [r7, #0]
 8002488:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800248c:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 800248e:	f8ad 5018 	strh.w	r5, [sp, #24]
 8002492:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 8002496:	f7ff ffa3 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800249a:	22ff      	movs	r2, #255	; 0xff
 800249c:	6803      	ldr	r3, [r0, #0]
 800249e:	9200      	str	r2, [sp, #0]
 80024a0:	9501      	str	r5, [sp, #4]
 80024a2:	68dc      	ldr	r4, [r3, #12]
 80024a4:	9903      	ldr	r1, [sp, #12]
 80024a6:	ab04      	add	r3, sp, #16
 80024a8:	aa06      	add	r2, sp, #24
 80024aa:	47a0      	blx	r4
 80024ac:	e003      	b.n	80024b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80024ae:	2301      	movs	r3, #1
 80024b0:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80024b2:	2300      	movs	r3, #0
 80024b4:	72a3      	strb	r3, [r4, #10]
    }
 80024b6:	b009      	add	sp, #36	; 0x24
 80024b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80024ba:	81e0      	strh	r0, [r4, #14]
 80024bc:	e7b6      	b.n	800242c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80024be:	bf00      	nop
 80024c0:	20017558 	.word	0x20017558
 80024c4:	2001755a 	.word	0x2001755a
 80024c8:	20017562 	.word	0x20017562
 80024cc:	20017564 	.word	0x20017564

080024d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80024d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024d2:	4604      	mov	r4, r0
 80024d4:	4617      	mov	r7, r2
 80024d6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80024d8:	f00d fd1c 	bl	800ff14 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80024dc:	4b0e      	ldr	r3, [pc, #56]	; (8002518 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80024de:	601c      	str	r4, [r3, #0]
      model(m)
 80024e0:	4b0e      	ldr	r3, [pc, #56]	; (800251c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80024e2:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80024e4:	4b0e      	ldr	r3, [pc, #56]	; (8002520 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80024e6:	2500      	movs	r5, #0
 80024e8:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80024ec:	4b0d      	ldr	r3, [pc, #52]	; (8002524 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80024ee:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80024f2:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024f4:	6803      	ldr	r3, [r0, #0]
 80024f6:	4629      	mov	r1, r5
 80024f8:	689b      	ldr	r3, [r3, #8]
 80024fa:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 80024fe:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002502:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002504:	4628      	mov	r0, r5
 8002506:	f002 f8a5 	bl	8004654 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800250a:	f7ff ff69 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800250e:	f015 fdee 	bl	80180ee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002512:	4620      	mov	r0, r4
 8002514:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002516:	bf00      	nop
 8002518:	200175b8 	.word	0x200175b8
 800251c:	08021460 	.word	0x08021460
 8002520:	08021448 	.word	0x08021448
 8002524:	20017564 	.word	0x20017564

08002528 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002528:	4b06      	ldr	r3, [pc, #24]	; (8002544 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800252a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800252e:	2300      	movs	r3, #0
 8002530:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002534:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002538:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800253c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002540:	4770      	bx	lr
 8002542:	bf00      	nop
 8002544:	08002291 	.word	0x08002291

08002548 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 8002548:	4b06      	ldr	r3, [pc, #24]	; (8002564 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 800254a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800254e:	2300      	movs	r3, #0
 8002550:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002554:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002558:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800255c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002560:	4770      	bx	lr
 8002562:	bf00      	nop
 8002564:	0800272d 	.word	0x0800272d

08002568 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002568:	4b06      	ldr	r3, [pc, #24]	; (8002584 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 800256a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800256e:	2300      	movs	r3, #0
 8002570:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// ScreenGraph

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002574:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002578:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800257c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002580:	4770      	bx	lr
 8002582:	bf00      	nop
 8002584:	080025ed 	.word	0x080025ed

08002588 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
    WipeTransition(const uint8_t transitionSteps = 20)
 8002588:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800258a:	4604      	mov	r4, r0
 800258c:	2300      	movs	r3, #0
          solid()
 800258e:	4a13      	ldr	r2, [pc, #76]	; (80025dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 8002590:	6002      	str	r2, [r0, #0]
 8002592:	6043      	str	r3, [r0, #4]
 8002594:	7203      	strb	r3, [r0, #8]
 8002596:	7241      	strb	r1, [r0, #9]
 8002598:	7283      	strb	r3, [r0, #10]
 800259a:	e9c4 3305 	strd	r3, r3, [r4, #20]
 800259e:	e9c4 3307 	strd	r3, r3, [r4, #28]
 80025a2:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
 80025a6:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80025aa:	81e3      	strh	r3, [r4, #14]
 80025ac:	f44f 7380 	mov.w	r3, #256	; 0x100
 80025b0:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 80025b2:	4b0b      	ldr	r3, [pc, #44]	; (80025e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
 80025b4:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 80025b6:	4b0b      	ldr	r3, [pc, #44]	; (80025e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 80025b8:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025bc:	4b0a      	ldr	r3, [pc, #40]	; (80025e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
            targetValue = HAL::DISPLAY_WIDTH;
 80025be:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025c0:	f9b3 5000 	ldrsh.w	r5, [r3]
          solid()
 80025c4:	3010      	adds	r0, #16
        setWidth(width);
 80025c6:	9001      	str	r0, [sp, #4]
 80025c8:	f7ff fda6 	bl	8002118 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80025cc:	9801      	ldr	r0, [sp, #4]
 80025ce:	4629      	mov	r1, r5
 80025d0:	f7ff fda4 	bl	800211c <_ZN8touchgfx8Drawable9setHeightEs>
    }
 80025d4:	4620      	mov	r0, r4
 80025d6:	b003      	add	sp, #12
 80025d8:	bd30      	pop	{r4, r5, pc}
 80025da:	bf00      	nop
 80025dc:	08021538 	.word	0x08021538
 80025e0:	080214d0 	.word	0x080214d0
 80025e4:	20017558 	.word	0x20017558
 80025e8:	2001755a 	.word	0x2001755a

080025ec <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 80025ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80025f0:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80025f4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80025f6:	68a0      	ldr	r0, [r4, #8]
 80025f8:	6803      	ldr	r3, [r0, #0]
 80025fa:	6a1b      	ldr	r3, [r3, #32]
 80025fc:	4798      	blx	r3
 80025fe:	f641 1337 	movw	r3, #6455	; 0x1937
 8002602:	4298      	cmp	r0, r3
 8002604:	d805      	bhi.n	8002612 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x26>
 8002606:	4b42      	ldr	r3, [pc, #264]	; (8002710 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x124>)
 8002608:	4a42      	ldr	r2, [pc, #264]	; (8002714 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800260a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800260c:	4842      	ldr	r0, [pc, #264]	; (8002718 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x12c>)
 800260e:	f01c ffab 	bl	801f568 <__assert_func>
 8002612:	6860      	ldr	r0, [r4, #4]
 8002614:	6803      	ldr	r3, [r0, #0]
 8002616:	6a1b      	ldr	r3, [r3, #32]
 8002618:	4798      	blx	r3
 800261a:	280f      	cmp	r0, #15
 800261c:	d803      	bhi.n	8002626 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3a>
 800261e:	4b3f      	ldr	r3, [pc, #252]	; (800271c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x130>)
 8002620:	4a3c      	ldr	r2, [pc, #240]	; (8002714 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 8002622:	21a4      	movs	r1, #164	; 0xa4
 8002624:	e7f2      	b.n	800260c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002626:	68e0      	ldr	r0, [r4, #12]
 8002628:	6803      	ldr	r3, [r0, #0]
 800262a:	6a1b      	ldr	r3, [r3, #32]
 800262c:	4798      	blx	r3
 800262e:	2837      	cmp	r0, #55	; 0x37
 8002630:	d803      	bhi.n	800263a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x4e>
 8002632:	4b3b      	ldr	r3, [pc, #236]	; (8002720 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x134>)
 8002634:	4a37      	ldr	r2, [pc, #220]	; (8002714 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 8002636:	21a5      	movs	r1, #165	; 0xa5
 8002638:	e7e8      	b.n	800260c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 800263a:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002724 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 800263e:	f00d fc49 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
 8002642:	f00d fc4d 	bl	800fee0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002646:	f8d9 0000 	ldr.w	r0, [r9]
 800264a:	b110      	cbz	r0, 8002652 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800264c:	6803      	ldr	r3, [r0, #0]
 800264e:	68db      	ldr	r3, [r3, #12]
 8002650:	4798      	blx	r3
    if (*currentTrans)
 8002652:	f8d9 0000 	ldr.w	r0, [r9]
 8002656:	b110      	cbz	r0, 800265e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8002658:	6803      	ldr	r3, [r0, #0]
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	4798      	blx	r3
    if (*currentScreen)
 800265e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002728 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 8002662:	f8d8 0000 	ldr.w	r0, [r8]
 8002666:	b110      	cbz	r0, 800266e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002668:	6803      	ldr	r3, [r0, #0]
 800266a:	695b      	ldr	r3, [r3, #20]
 800266c:	4798      	blx	r3
    if (*currentPresenter)
 800266e:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002672:	b110      	cbz	r0, 800267a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002674:	6803      	ldr	r3, [r0, #0]
 8002676:	685b      	ldr	r3, [r3, #4]
 8002678:	4798      	blx	r3
    if (*currentScreen)
 800267a:	f8d8 0000 	ldr.w	r0, [r8]
 800267e:	b110      	cbz	r0, 8002686 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002680:	6803      	ldr	r3, [r0, #0]
 8002682:	681b      	ldr	r3, [r3, #0]
 8002684:	4798      	blx	r3
    if (*currentPresenter)
 8002686:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800268a:	b110      	cbz	r0, 8002692 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800268c:	6803      	ldr	r3, [r0, #0]
 800268e:	689b      	ldr	r3, [r3, #8]
 8002690:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002692:	68e0      	ldr	r0, [r4, #12]
 8002694:	6803      	ldr	r3, [r0, #0]
 8002696:	2100      	movs	r1, #0
 8002698:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800269a:	4798      	blx	r3
 800269c:	2114      	movs	r1, #20
 800269e:	4605      	mov	r5, r0
 80026a0:	f7ff ff72 	bl	8002588 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026a4:	68a0      	ldr	r0, [r4, #8]
 80026a6:	6803      	ldr	r3, [r0, #0]
 80026a8:	2100      	movs	r1, #0
 80026aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026ac:	4798      	blx	r3
 80026ae:	4606      	mov	r6, r0
 80026b0:	f002 fa6e 	bl	8004b90 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80026b4:	6860      	ldr	r0, [r4, #4]
 80026b6:	6803      	ldr	r3, [r0, #0]
 80026b8:	2100      	movs	r1, #0
 80026ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026bc:	4798      	blx	r3
 80026be:	4631      	mov	r1, r6
 80026c0:	4604      	mov	r4, r0
 80026c2:	f002 f935 	bl	8004930 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 80026c6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80026ca:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80026ce:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80026d2:	b1dc      	cbz	r4, 800270c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x120>
 80026d4:	1d23      	adds	r3, r4, #4
 80026d6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80026da:	6833      	ldr	r3, [r6, #0]
 80026dc:	f8c4 a008 	str.w	sl, [r4, #8]
 80026e0:	4630      	mov	r0, r6
 80026e2:	68db      	ldr	r3, [r3, #12]
 80026e4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80026e6:	4798      	blx	r3
    newPresenter->activate();
 80026e8:	6823      	ldr	r3, [r4, #0]
 80026ea:	4620      	mov	r0, r4
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80026f0:	4629      	mov	r1, r5
 80026f2:	4630      	mov	r0, r6
 80026f4:	f00f f89c 	bl	8011830 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80026f8:	682b      	ldr	r3, [r5, #0]
 80026fa:	4628      	mov	r0, r5
 80026fc:	691b      	ldr	r3, [r3, #16]
 80026fe:	4798      	blx	r3
    newTransition->invalidate();
 8002700:	682b      	ldr	r3, [r5, #0]
 8002702:	4628      	mov	r0, r5
 8002704:	695b      	ldr	r3, [r3, #20]
}
 8002706:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800270a:	4718      	bx	r3
    model->bind(newPresenter);
 800270c:	4623      	mov	r3, r4
 800270e:	e7e2      	b.n	80026d6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xea>
 8002710:	08020eec 	.word	0x08020eec
 8002714:	0802120b 	.word	0x0802120b
 8002718:	0802107e 	.word	0x0802107e
 800271c:	080210c5 	.word	0x080210c5
 8002720:	08021168 	.word	0x08021168
 8002724:	200175ac 	.word	0x200175ac
 8002728:	200175a8 	.word	0x200175a8

0800272c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 800272c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002730:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002734:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002736:	68a0      	ldr	r0, [r4, #8]
 8002738:	6803      	ldr	r3, [r0, #0]
 800273a:	6a1b      	ldr	r3, [r3, #32]
 800273c:	4798      	blx	r3
 800273e:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 8002742:	d205      	bcs.n	8002750 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 8002744:	4b42      	ldr	r3, [pc, #264]	; (8002850 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 8002746:	4a43      	ldr	r2, [pc, #268]	; (8002854 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002748:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800274a:	4843      	ldr	r0, [pc, #268]	; (8002858 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 800274c:	f01c ff0c 	bl	801f568 <__assert_func>
 8002750:	6860      	ldr	r0, [r4, #4]
 8002752:	6803      	ldr	r3, [r0, #0]
 8002754:	6a1b      	ldr	r3, [r3, #32]
 8002756:	4798      	blx	r3
 8002758:	280f      	cmp	r0, #15
 800275a:	d803      	bhi.n	8002764 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 800275c:	4b3f      	ldr	r3, [pc, #252]	; (800285c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 800275e:	4a3d      	ldr	r2, [pc, #244]	; (8002854 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002760:	21a4      	movs	r1, #164	; 0xa4
 8002762:	e7f2      	b.n	800274a <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002764:	68e0      	ldr	r0, [r4, #12]
 8002766:	6803      	ldr	r3, [r0, #0]
 8002768:	6a1b      	ldr	r3, [r3, #32]
 800276a:	4798      	blx	r3
 800276c:	2837      	cmp	r0, #55	; 0x37
 800276e:	d803      	bhi.n	8002778 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 8002770:	4b3b      	ldr	r3, [pc, #236]	; (8002860 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 8002772:	4a38      	ldr	r2, [pc, #224]	; (8002854 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002774:	21a5      	movs	r1, #165	; 0xa5
 8002776:	e7e8      	b.n	800274a <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8002778:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002864 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 800277c:	f00d fbaa 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
 8002780:	f00d fbae 	bl	800fee0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002784:	f8d9 0000 	ldr.w	r0, [r9]
 8002788:	b110      	cbz	r0, 8002790 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 800278a:	6803      	ldr	r3, [r0, #0]
 800278c:	68db      	ldr	r3, [r3, #12]
 800278e:	4798      	blx	r3
    if (*currentTrans)
 8002790:	f8d9 0000 	ldr.w	r0, [r9]
 8002794:	b110      	cbz	r0, 800279c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 8002796:	6803      	ldr	r3, [r0, #0]
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	4798      	blx	r3
    if (*currentScreen)
 800279c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002868 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 80027a0:	f8d8 0000 	ldr.w	r0, [r8]
 80027a4:	b110      	cbz	r0, 80027ac <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80027a6:	6803      	ldr	r3, [r0, #0]
 80027a8:	695b      	ldr	r3, [r3, #20]
 80027aa:	4798      	blx	r3
    if (*currentPresenter)
 80027ac:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027b0:	b110      	cbz	r0, 80027b8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80027b2:	6803      	ldr	r3, [r0, #0]
 80027b4:	685b      	ldr	r3, [r3, #4]
 80027b6:	4798      	blx	r3
    if (*currentScreen)
 80027b8:	f8d8 0000 	ldr.w	r0, [r8]
 80027bc:	b110      	cbz	r0, 80027c4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 80027be:	6803      	ldr	r3, [r0, #0]
 80027c0:	681b      	ldr	r3, [r3, #0]
 80027c2:	4798      	blx	r3
    if (*currentPresenter)
 80027c4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027c8:	b110      	cbz	r0, 80027d0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80027ca:	6803      	ldr	r3, [r0, #0]
 80027cc:	689b      	ldr	r3, [r3, #8]
 80027ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80027d0:	68e0      	ldr	r0, [r4, #12]
 80027d2:	6803      	ldr	r3, [r0, #0]
 80027d4:	2100      	movs	r1, #0
 80027d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027d8:	4798      	blx	r3
 80027da:	2114      	movs	r1, #20
 80027dc:	4605      	mov	r5, r0
 80027de:	f7ff fed3 	bl	8002588 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80027e2:	68a0      	ldr	r0, [r4, #8]
 80027e4:	6803      	ldr	r3, [r0, #0]
 80027e6:	2100      	movs	r1, #0
 80027e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ea:	4798      	blx	r3
 80027ec:	4606      	mov	r6, r0
 80027ee:	f002 f85d 	bl	80048ac <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80027f2:	6860      	ldr	r0, [r4, #4]
 80027f4:	6803      	ldr	r3, [r0, #0]
 80027f6:	2100      	movs	r1, #0
 80027f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027fa:	4798      	blx	r3
 80027fc:	4631      	mov	r1, r6
 80027fe:	4604      	mov	r4, r0
 8002800:	f001 ffe0 	bl	80047c4 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002804:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002808:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800280c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002810:	b1dc      	cbz	r4, 800284a <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 8002812:	1d23      	adds	r3, r4, #4
 8002814:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002818:	6833      	ldr	r3, [r6, #0]
 800281a:	f8c4 a008 	str.w	sl, [r4, #8]
 800281e:	4630      	mov	r0, r6
 8002820:	68db      	ldr	r3, [r3, #12]
 8002822:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002824:	4798      	blx	r3
    newPresenter->activate();
 8002826:	6823      	ldr	r3, [r4, #0]
 8002828:	4620      	mov	r0, r4
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800282e:	4629      	mov	r1, r5
 8002830:	4630      	mov	r0, r6
 8002832:	f00e fffd 	bl	8011830 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002836:	682b      	ldr	r3, [r5, #0]
 8002838:	4628      	mov	r0, r5
 800283a:	691b      	ldr	r3, [r3, #16]
 800283c:	4798      	blx	r3
    newTransition->invalidate();
 800283e:	682b      	ldr	r3, [r5, #0]
 8002840:	4628      	mov	r0, r5
 8002842:	695b      	ldr	r3, [r3, #20]
}
 8002844:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002848:	4718      	bx	r3
    model->bind(newPresenter);
 800284a:	4623      	mov	r3, r4
 800284c:	e7e2      	b.n	8002814 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 800284e:	bf00      	nop
 8002850:	08020eec 	.word	0x08020eec
 8002854:	08021329 	.word	0x08021329
 8002858:	0802107e 	.word	0x0802107e
 800285c:	080210c5 	.word	0x080210c5
 8002860:	08021168 	.word	0x08021168
 8002864:	200175ac 	.word	0x200175ac
 8002868:	200175a8 	.word	0x200175a8

0800286c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800286c:	6a00      	ldr	r0, [r0, #32]
 800286e:	4770      	bx	lr

08002870 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002870:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002872:	4770      	bx	lr

08002874 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002874:	4770      	bx	lr

08002876 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002876:	888b      	ldrh	r3, [r1, #4]
 8002878:	6980      	ldr	r0, [r0, #24]
 800287a:	680a      	ldr	r2, [r1, #0]
 800287c:	0adb      	lsrs	r3, r3, #11
 800287e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002882:	4410      	add	r0, r2
 8002884:	4770      	bx	lr

08002886 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002886:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002888:	b1c2      	cbz	r2, 80028bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800288a:	7b13      	ldrb	r3, [r2, #12]
 800288c:	b1b3      	cbz	r3, 80028bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800288e:	7b54      	ldrb	r4, [r2, #13]
 8002890:	7ad2      	ldrb	r2, [r2, #11]
 8002892:	0224      	lsls	r4, r4, #8
 8002894:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002898:	4314      	orrs	r4, r2
 800289a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800289c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800289e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80028a2:	8813      	ldrh	r3, [r2, #0]
 80028a4:	428b      	cmp	r3, r1
 80028a6:	d102      	bne.n	80028ae <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80028a8:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80028ac:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80028ae:	d805      	bhi.n	80028bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028b0:	3801      	subs	r0, #1
 80028b2:	b280      	uxth	r0, r0
 80028b4:	3204      	adds	r2, #4
 80028b6:	2800      	cmp	r0, #0
 80028b8:	d1f3      	bne.n	80028a2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80028ba:	e7f7      	b.n	80028ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80028bc:	2000      	movs	r0, #0
 80028be:	e7f5      	b.n	80028ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080028c0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80028c0:	b510      	push	{r4, lr}
 80028c2:	2128      	movs	r1, #40	; 0x28
 80028c4:	4604      	mov	r4, r0
 80028c6:	f01c fe21 	bl	801f50c <_ZdlPvj>
 80028ca:	4620      	mov	r0, r4
 80028cc:	bd10      	pop	{r4, pc}
	...

080028d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80028d0:	b530      	push	{r4, r5, lr}
 80028d2:	b089      	sub	sp, #36	; 0x24
 80028d4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80028d6:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80028da:	9506      	str	r5, [sp, #24]
 80028dc:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80028e0:	9505      	str	r5, [sp, #20]
 80028e2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80028e6:	9504      	str	r5, [sp, #16]
 80028e8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80028ec:	9503      	str	r5, [sp, #12]
 80028ee:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80028f2:	9502      	str	r5, [sp, #8]
 80028f4:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80028f8:	9501      	str	r5, [sp, #4]
 80028fa:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80028fe:	9500      	str	r5, [sp, #0]
 8002900:	f00e fb2c 	bl	8010f5c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002904:	4b06      	ldr	r3, [pc, #24]	; (8002920 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002906:	6023      	str	r3, [r4, #0]
 8002908:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800290a:	61a3      	str	r3, [r4, #24]
 800290c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800290e:	61e3      	str	r3, [r4, #28]
 8002910:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002912:	6223      	str	r3, [r4, #32]
 8002914:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002916:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002918:	4620      	mov	r0, r4
 800291a:	b009      	add	sp, #36	; 0x24
 800291c:	bd30      	pop	{r4, r5, pc}
 800291e:	bf00      	nop
 8002920:	0802155c 	.word	0x0802155c

08002924 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002924:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002926:	4770      	bx	lr

08002928 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002928:	4770      	bx	lr

0800292a <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800292a:	4770      	bx	lr

0800292c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800292c:	4770      	bx	lr

0800292e <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800292e:	4770      	bx	lr

08002930 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002930:	4770      	bx	lr

08002932 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002932:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002934:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002936:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002938:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800293a:	466d      	mov	r5, sp
 800293c:	4601      	mov	r1, r0
 800293e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002942:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002944:	4628      	mov	r0, r5
 8002946:	4798      	blx	r3
 8002948:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800294c:	343c      	adds	r4, #60	; 0x3c
 800294e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002952:	b005      	add	sp, #20
 8002954:	bd30      	pop	{r4, r5, pc}

08002956 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002956:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002958:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800295a:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 800295c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800295e:	466d      	mov	r5, sp
 8002960:	4601      	mov	r1, r0
 8002962:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002966:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002968:	4628      	mov	r0, r5
 800296a:	4798      	blx	r3
 800296c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002970:	343c      	adds	r4, #60	; 0x3c
 8002972:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002976:	b005      	add	sp, #20
 8002978:	bd30      	pop	{r4, r5, pc}

0800297a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800297a:	2200      	movs	r2, #0
 800297c:	8002      	strh	r2, [r0, #0]
 800297e:	8042      	strh	r2, [r0, #2]
 8002980:	8082      	strh	r2, [r0, #4]
 8002982:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002984:	4770      	bx	lr

08002986 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002986:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800298a:	4770      	bx	lr

0800298c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800298c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800298e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002990:	4604      	mov	r4, r0
        setX(x);
 8002992:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002994:	4615      	mov	r5, r2
        setX(x);
 8002996:	4798      	blx	r3
        setBaselineY(baselineY);
 8002998:	6823      	ldr	r3, [r4, #0]
 800299a:	4629      	mov	r1, r5
 800299c:	4620      	mov	r0, r4
 800299e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80029a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80029a4:	4718      	bx	r3

080029a6 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80029a6:	2000      	movs	r0, #0
 80029a8:	4770      	bx	lr

080029aa <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80029aa:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029ac:	4770      	bx	lr

080029ae <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80029ae:	4770      	bx	lr

080029b0 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 80029b0:	4770      	bx	lr

080029b2 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 80029b2:	4770      	bx	lr

080029b4 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 80029b4:	4770      	bx	lr

080029b6 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80029b6:	4770      	bx	lr

080029b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80029b8:	4770      	bx	lr

080029ba <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80029ba:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80029be:	b14b      	cbz	r3, 80029d4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80029c0:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80029c4:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029c6:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029c8:	b13b      	cbz	r3, 80029da <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80029ca:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80029ce:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80029d0:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 80029d2:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80029d4:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80029d8:	e7f4      	b.n	80029c4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029da:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80029de:	e7f6      	b.n	80029ce <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080029e0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029e0:	4770      	bx	lr

080029e2 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80029e2:	4770      	bx	lr

080029e4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 80029e4:	4770      	bx	lr

080029e6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80029e6:	4770      	bx	lr

080029e8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029e8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029ea:	68c2      	ldr	r2, [r0, #12]
 80029ec:	6844      	ldr	r4, [r0, #4]
 80029ee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80029f0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80029f2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80029f6:	07d2      	lsls	r2, r2, #31
 80029f8:	bf48      	it	mi
 80029fa:	5962      	ldrmi	r2, [r4, r5]
 80029fc:	689b      	ldr	r3, [r3, #8]
    }
 80029fe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a00:	bf48      	it	mi
 8002a02:	58d3      	ldrmi	r3, [r2, r3]
 8002a04:	4718      	bx	r3

08002a06 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a06:	6843      	ldr	r3, [r0, #4]
 8002a08:	b12b      	cbz	r3, 8002a16 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002a0a:	6883      	ldr	r3, [r0, #8]
 8002a0c:	b92b      	cbnz	r3, 8002a1a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002a0e:	68c0      	ldr	r0, [r0, #12]
 8002a10:	f000 0001 	and.w	r0, r0, #1
 8002a14:	4770      	bx	lr
 8002a16:	4618      	mov	r0, r3
 8002a18:	4770      	bx	lr
 8002a1a:	2001      	movs	r0, #1
    }
 8002a1c:	4770      	bx	lr

08002a1e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a1e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a20:	68c2      	ldr	r2, [r0, #12]
 8002a22:	6844      	ldr	r4, [r0, #4]
 8002a24:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a26:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a28:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a2c:	07d2      	lsls	r2, r2, #31
 8002a2e:	bf48      	it	mi
 8002a30:	5962      	ldrmi	r2, [r4, r5]
 8002a32:	689b      	ldr	r3, [r3, #8]
    }
 8002a34:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a36:	bf48      	it	mi
 8002a38:	58d3      	ldrmi	r3, [r2, r3]
 8002a3a:	4718      	bx	r3

08002a3c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a3c:	6843      	ldr	r3, [r0, #4]
 8002a3e:	b12b      	cbz	r3, 8002a4c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a40:	6883      	ldr	r3, [r0, #8]
 8002a42:	b92b      	cbnz	r3, 8002a50 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a44:	68c0      	ldr	r0, [r0, #12]
 8002a46:	f000 0001 	and.w	r0, r0, #1
 8002a4a:	4770      	bx	lr
 8002a4c:	4618      	mov	r0, r3
 8002a4e:	4770      	bx	lr
 8002a50:	2001      	movs	r0, #1
    }
 8002a52:	4770      	bx	lr

08002a54 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002a54:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a58:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a5c:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a60:	4770      	bx	lr

08002a62 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002a62:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002a66:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a6a:	4770      	bx	lr

08002a6c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a6c:	b510      	push	{r4, lr}
 8002a6e:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a70:	307c      	adds	r0, #124	; 0x7c
 8002a72:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002a76:	b13b      	cbz	r3, 8002a88 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002a78:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a7c:	f00a fd7c 	bl	800d578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a80:	4620      	mov	r0, r4
 8002a82:	f7ff ff9a 	bl	80029ba <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002a86:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a88:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002a8c:	e7f6      	b.n	8002a7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002a8e <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002a8e:	b510      	push	{r4, lr}
 8002a90:	214c      	movs	r1, #76	; 0x4c
 8002a92:	4604      	mov	r4, r0
 8002a94:	f01c fd3a 	bl	801f50c <_ZdlPvj>
 8002a98:	4620      	mov	r0, r4
 8002a9a:	bd10      	pop	{r4, pc}

08002a9c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002a9c:	b510      	push	{r4, lr}
 8002a9e:	2178      	movs	r1, #120	; 0x78
 8002aa0:	4604      	mov	r4, r0
 8002aa2:	f01c fd33 	bl	801f50c <_ZdlPvj>
 8002aa6:	4620      	mov	r0, r4
 8002aa8:	bd10      	pop	{r4, pc}

08002aaa <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002aaa:	b510      	push	{r4, lr}
 8002aac:	21a8      	movs	r1, #168	; 0xa8
 8002aae:	4604      	mov	r4, r0
 8002ab0:	f01c fd2c 	bl	801f50c <_ZdlPvj>
 8002ab4:	4620      	mov	r0, r4
 8002ab6:	bd10      	pop	{r4, pc}

08002ab8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ab8:	b510      	push	{r4, lr}
 8002aba:	2110      	movs	r1, #16
 8002abc:	4604      	mov	r4, r0
 8002abe:	f01c fd25 	bl	801f50c <_ZdlPvj>
 8002ac2:	4620      	mov	r0, r4
 8002ac4:	bd10      	pop	{r4, pc}

08002ac6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002ac6:	b510      	push	{r4, lr}
 8002ac8:	2110      	movs	r1, #16
 8002aca:	4604      	mov	r4, r0
 8002acc:	f01c fd1e 	bl	801f50c <_ZdlPvj>
 8002ad0:	4620      	mov	r0, r4
 8002ad2:	bd10      	pop	{r4, pc}

08002ad4 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002ad4:	b510      	push	{r4, lr}
 8002ad6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8002ada:	4604      	mov	r4, r0
 8002adc:	f01c fd16 	bl	801f50c <_ZdlPvj>
 8002ae0:	4620      	mov	r0, r4
 8002ae2:	bd10      	pop	{r4, pc}

08002ae4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002ae4:	b510      	push	{r4, lr}
 8002ae6:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002ae8:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002aea:	b150      	cbz	r0, 8002b02 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002aec:	6803      	ldr	r3, [r0, #0]
 8002aee:	68db      	ldr	r3, [r3, #12]
 8002af0:	4798      	blx	r3
 8002af2:	b130      	cbz	r0, 8002b02 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002af4:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002af6:	6803      	ldr	r3, [r0, #0]
 8002af8:	4621      	mov	r1, r4
 8002afa:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002afc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002b00:	4718      	bx	r3
    }
 8002b02:	bd10      	pop	{r4, pc}

08002b04 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002b04:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002b08:	4291      	cmp	r1, r2
 8002b0a:	d102      	bne.n	8002b12 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002b0c:	6803      	ldr	r3, [r0, #0]
 8002b0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUp)
    {
        //ButtownDownInteraction
        //When ButtonUp clicked call virtual function
        //Call ButtonUpClicked
        ButtonUpClicked();
 8002b10:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002b12:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002b16:	4291      	cmp	r1, r2
 8002b18:	d102      	bne.n	8002b20 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002b1a:	6803      	ldr	r3, [r0, #0]
 8002b1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b1e:	e7f7      	b.n	8002b10 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b20:	4770      	bx	lr

08002b22 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002b22:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002b24:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002b26:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002b2a:	4604      	mov	r4, r0
 8002b2c:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b2e:	b99b      	cbnz	r3, 8002b58 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002b30:	b98e      	cbnz	r6, 8002b56 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002b32:	fab3 f383 	clz	r3, r3
 8002b36:	095b      	lsrs	r3, r3, #5
 8002b38:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002b3c:	6823      	ldr	r3, [r4, #0]
 8002b3e:	4620      	mov	r0, r4
 8002b40:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b44:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002b46:	6823      	ldr	r3, [r4, #0]
 8002b48:	4620      	mov	r0, r4
 8002b4a:	695b      	ldr	r3, [r3, #20]
 8002b4c:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002b4e:	b116      	cbz	r6, 8002b56 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b50:	792b      	ldrb	r3, [r5, #4]
 8002b52:	2b01      	cmp	r3, #1
 8002b54:	d003      	beq.n	8002b5e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002b56:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b58:	2e00      	cmp	r6, #0
 8002b5a:	d0fc      	beq.n	8002b56 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b5c:	e7e9      	b.n	8002b32 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002b5e:	6823      	ldr	r3, [r4, #0]
 8002b60:	4620      	mov	r0, r4
 8002b62:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002b66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002b6a:	4718      	bx	r3

08002b6c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b6c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b6e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b70:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b72:	4b12      	ldr	r3, [pc, #72]	; (8002bbc <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002b74:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b76:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b78:	b28d      	uxth	r5, r1
 8002b7a:	b92b      	cbnz	r3, 8002b88 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002b7c:	4b10      	ldr	r3, [pc, #64]	; (8002bc0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002b7e:	4a11      	ldr	r2, [pc, #68]	; (8002bc4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b80:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b82:	4811      	ldr	r0, [pc, #68]	; (8002bc8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002b84:	f01c fcf0 	bl	801f568 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b88:	4910      	ldr	r1, [pc, #64]	; (8002bcc <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002b8a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b8c:	8809      	ldrh	r1, [r1, #0]
 8002b8e:	4291      	cmp	r1, r2
 8002b90:	d803      	bhi.n	8002b9a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002b92:	4b0f      	ldr	r3, [pc, #60]	; (8002bd0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002b94:	4a0b      	ldr	r2, [pc, #44]	; (8002bc4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b96:	216d      	movs	r1, #109	; 0x6d
 8002b98:	e7f3      	b.n	8002b82 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002b9a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002b9e:	4b0d      	ldr	r3, [pc, #52]	; (8002bd4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002ba6:	6803      	ldr	r3, [r0, #0]
 8002ba8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002baa:	4798      	blx	r3
 8002bac:	1a28      	subs	r0, r5, r0
 8002bae:	b201      	sxth	r1, r0
 8002bb0:	4633      	mov	r3, r6
 8002bb2:	4620      	mov	r0, r4
    }
 8002bb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bb8:	4718      	bx	r3
 8002bba:	bf00      	nop
 8002bbc:	200175bc 	.word	0x200175bc
 8002bc0:	080215ac 	.word	0x080215ac
 8002bc4:	080215ee 	.word	0x080215ee
 8002bc8:	08021629 	.word	0x08021629
 8002bcc:	200175c0 	.word	0x200175c0
 8002bd0:	08021670 	.word	0x08021670
 8002bd4:	200175c4 	.word	0x200175c4

08002bd8 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002bd8:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002bdc:	428b      	cmp	r3, r1
{
 8002bde:	b510      	push	{r4, lr}
 8002be0:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002be2:	d109      	bne.n	8002bf8 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002be4:	f00d f976 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002be8:	f7ff fcbe 	bl	8002568 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002bec:	6823      	ldr	r3, [r4, #0]
 8002bee:	4620      	mov	r0, r4
 8002bf0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002bf2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002bf6:	4718      	bx	r3
}
 8002bf8:	bd10      	pop	{r4, pc}

08002bfa <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002bfa:	2200      	movs	r2, #0
 8002bfc:	f04f 31ff 	mov.w	r1, #4294967295
 8002c00:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002c04:	6082      	str	r2, [r0, #8]
    }
 8002c06:	4770      	bx	lr

08002c08 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002c08:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002c0a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002c0c:	4604      	mov	r4, r0
        setX(x);
 8002c0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002c10:	4615      	mov	r5, r2
        setX(x);
 8002c12:	4798      	blx	r3
        setY(y);
 8002c14:	6823      	ldr	r3, [r4, #0]
 8002c16:	4629      	mov	r1, r5
 8002c18:	4620      	mov	r0, r4
 8002c1a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002c1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002c20:	4718      	bx	r3

08002c22 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002c22:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002c28:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002c2c:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c2e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002c32:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c36:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c38:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c3a:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c3c:	f010 fb7a 	bl	8013334 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002c40:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002c44:	4607      	mov	r7, r0
 8002c46:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002c4a:	4640      	mov	r0, r8
 8002c4c:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002c50:	f010 fba4 	bl	801339c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002c54:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002c58:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002c5c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c60:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002c64:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002c68:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002c6c:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002c70:	b239      	sxth	r1, r7
 8002c72:	b212      	sxth	r2, r2
 8002c74:	f7ff ffc8 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002c78:	6823      	ldr	r3, [r4, #0]
 8002c7a:	4620      	mov	r0, r4
 8002c7c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002c80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002c84:	4718      	bx	r3

08002c86 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002c86:	b570      	push	{r4, r5, r6, lr}
 8002c88:	4604      	mov	r4, r0
 8002c8a:	461d      	mov	r5, r3
 8002c8c:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002c90:	f7ff ffba 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002c94:	6823      	ldr	r3, [r4, #0]
 8002c96:	4629      	mov	r1, r5
 8002c98:	4620      	mov	r0, r4
 8002c9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c9c:	4798      	blx	r3
        setHeight(height);
 8002c9e:	6823      	ldr	r3, [r4, #0]
 8002ca0:	4631      	mov	r1, r6
 8002ca2:	4620      	mov	r0, r4
 8002ca4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002ca6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002caa:	4718      	bx	r3

08002cac <_ZN8touchgfx6WidgetC1Ev>:
 8002cac:	2200      	movs	r2, #0
 8002cae:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002cb2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002cb6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002cba:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002cbe:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002cc2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002cc4:	4a01      	ldr	r2, [pc, #4]	; (8002ccc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002cc6:	6002      	str	r2, [r0, #0]
 8002cc8:	4770      	bx	lr
 8002cca:	bf00      	nop
 8002ccc:	080216b8 	.word	0x080216b8

08002cd0 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002cd0:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002cd2:	2226      	movs	r2, #38	; 0x26
    Box()
 8002cd4:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002cd6:	2100      	movs	r1, #0
 8002cd8:	f01c fdcc 	bl	801f874 <memset>
 8002cdc:	4620      	mov	r0, r4
 8002cde:	f7ff ffe5 	bl	8002cac <_ZN8touchgfx6WidgetC1Ev>
 8002ce2:	4b04      	ldr	r3, [pc, #16]	; (8002cf4 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002ce4:	6023      	str	r3, [r4, #0]
 8002ce6:	23ff      	movs	r3, #255	; 0xff
 8002ce8:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002cec:	2300      	movs	r3, #0
 8002cee:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	bd10      	pop	{r4, pc}
 8002cf4:	08022a68 	.word	0x08022a68

08002cf8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002cf8:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002cfa:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002cfc:	4604      	mov	r4, r0
 8002cfe:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002d00:	2100      	movs	r1, #0
 8002d02:	f01c fdb7 	bl	801f874 <memset>
 8002d06:	4620      	mov	r0, r4
 8002d08:	f7ff ffd0 	bl	8002cac <_ZN8touchgfx6WidgetC1Ev>
 8002d0c:	4b06      	ldr	r3, [pc, #24]	; (8002d28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002d0e:	6023      	str	r3, [r4, #0]
 8002d10:	882b      	ldrh	r3, [r5, #0]
 8002d12:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002d14:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002d16:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002d18:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002d1c:	4629      	mov	r1, r5
 8002d1e:	f00a fc2b 	bl	800d578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d22:	4620      	mov	r0, r4
 8002d24:	bd38      	pop	{r3, r4, r5, pc}
 8002d26:	bf00      	nop
 8002d28:	08022bac 	.word	0x08022bac

08002d2c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d2c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d2e:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002d30:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d32:	2100      	movs	r1, #0
 8002d34:	f01c fd9e 	bl	801f874 <memset>
 8002d38:	4620      	mov	r0, r4
 8002d3a:	f7ff ffb7 	bl	8002cac <_ZN8touchgfx6WidgetC1Ev>
 8002d3e:	4b0a      	ldr	r3, [pc, #40]	; (8002d68 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d40:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002d42:	4b0a      	ldr	r3, [pc, #40]	; (8002d6c <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002d44:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d46:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d4a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002d4c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002d50:	2300      	movs	r3, #0
 8002d52:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d56:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002d5a:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d5e:	8723      	strh	r3, [r4, #56]	; 0x38
 8002d60:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002d62:	4620      	mov	r0, r4
 8002d64:	bd10      	pop	{r4, pc}
 8002d66:	bf00      	nop
 8002d68:	080229d8 	.word	0x080229d8
 8002d6c:	08020ee4 	.word	0x08020ee4

08002d70 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002d70:	4b1b      	ldr	r3, [pc, #108]	; (8002de0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002d72:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002d74:	881b      	ldrh	r3, [r3, #0]
 8002d76:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002d78:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002d7a:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002d7c:	d92b      	bls.n	8002dd6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d7e:	4b19      	ldr	r3, [pc, #100]	; (8002de4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	b92b      	cbnz	r3, 8002d90 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002d84:	4b18      	ldr	r3, [pc, #96]	; (8002de8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002d86:	4a19      	ldr	r2, [pc, #100]	; (8002dec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002d88:	4819      	ldr	r0, [pc, #100]	; (8002df0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002d8a:	216c      	movs	r1, #108	; 0x6c
 8002d8c:	f01c fbec 	bl	801f568 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002d90:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002d94:	4b17      	ldr	r3, [pc, #92]	; (8002df4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002d9c:	4b16      	ldr	r3, [pc, #88]	; (8002df8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002d9e:	6818      	ldr	r0, [r3, #0]
 8002da0:	f001 fc94 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002da4:	682b      	ldr	r3, [r5, #0]
 8002da6:	9001      	str	r0, [sp, #4]
 8002da8:	4601      	mov	r1, r0
 8002daa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002dac:	4628      	mov	r0, r5
 8002dae:	4798      	blx	r3
 8002db0:	682b      	ldr	r3, [r5, #0]
 8002db2:	9901      	ldr	r1, [sp, #4]
 8002db4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002db6:	4604      	mov	r4, r0
 8002db8:	4628      	mov	r0, r5
 8002dba:	4798      	blx	r3
 8002dbc:	682b      	ldr	r3, [r5, #0]
 8002dbe:	9901      	ldr	r1, [sp, #4]
 8002dc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dc2:	fb14 f400 	smulbb	r4, r4, r0
 8002dc6:	4628      	mov	r0, r5
 8002dc8:	4798      	blx	r3
 8002dca:	b2e4      	uxtb	r4, r4
 8002dcc:	4404      	add	r4, r0
 8002dce:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002dd2:	b002      	add	sp, #8
 8002dd4:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002ddc:	e7f9      	b.n	8002dd2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002dde:	bf00      	nop
 8002de0:	200175c0 	.word	0x200175c0
 8002de4:	200175bc 	.word	0x200175bc
 8002de8:	080215ac 	.word	0x080215ac
 8002dec:	080215ee 	.word	0x080215ee
 8002df0:	08021629 	.word	0x08021629
 8002df4:	200175c4 	.word	0x200175c4
 8002df8:	200175c8 	.word	0x200175c8

08002dfc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002dfc:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002e00:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002e02:	4606      	mov	r6, r0
 8002e04:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002e06:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002e0a:	2500      	movs	r5, #0
 8002e0c:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e0e:	4b1d      	ldr	r3, [pc, #116]	; (8002e84 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002e10:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002e12:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e16:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002e1a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002e1e:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e22:	6305      	str	r5, [r0, #48]	; 0x30
 8002e24:	f846 3b34 	str.w	r3, [r6], #52
 8002e28:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e2a:	4630      	mov	r0, r6
 8002e2c:	f7ff ff50 	bl	8002cd0 <_ZN8touchgfx3BoxC1Ev>
 8002e30:	4b15      	ldr	r3, [pc, #84]	; (8002e88 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002e32:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002e34:	462a      	mov	r2, r5
        : color(0)
 8002e36:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002e3a:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002e3e:	6625      	str	r5, [r4, #96]	; 0x60
 8002e40:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002e44:	4629      	mov	r1, r5
 8002e46:	4630      	mov	r0, r6
 8002e48:	f7ff fede 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e4c:	4631      	mov	r1, r6
 8002e4e:	4620      	mov	r0, r4
 8002e50:	f006 ff54 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002e54:	4b0d      	ldr	r3, [pc, #52]	; (8002e8c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002e56:	6023      	str	r3, [r4, #0]
 8002e58:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e5c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e60:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002e64:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002e68:	a901      	add	r1, sp, #4
 8002e6a:	4628      	mov	r0, r5
 8002e6c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e70:	f7ff ff42 	bl	8002cf8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002e74:	4620      	mov	r0, r4
 8002e76:	4629      	mov	r1, r5
 8002e78:	f006 ff40 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	b002      	add	sp, #8
 8002e80:	bd70      	pop	{r4, r5, r6, pc}
 8002e82:	bf00      	nop
 8002e84:	080217b0 	.word	0x080217b0
 8002e88:	08022b44 	.word	0x08022b44
 8002e8c:	0802184c 	.word	0x0802184c

08002e90 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e94:	ed2d 8b08 	vpush	{d8-d11}
 8002e98:	4604      	mov	r4, r0
 8002e9a:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002e9c:	f00e fb1c 	bl	80114d8 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002ea0:	4622      	mov	r2, r4
 8002ea2:	2500      	movs	r5, #0
 8002ea4:	4be4      	ldr	r3, [pc, #912]	; (8003238 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 8002ea6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ea8:	f842 3b40 	str.w	r3, [r2], #64
 8002eac:	4610      	mov	r0, r2
 8002eae:	ee08 2a10 	vmov	s16, r2
 8002eb2:	f7ff ff0d 	bl	8002cd0 <_ZN8touchgfx3BoxC1Ev>
 8002eb6:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002eba:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002ebe:	a90a      	add	r1, sp, #40	; 0x28
 8002ec0:	4618      	mov	r0, r3
 8002ec2:	ee0a 3a10 	vmov	s20, r3
 8002ec6:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002eca:	f7ff ff15 	bl	8002cf8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ece:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002ed2:	a90a      	add	r1, sp, #40	; 0x28
 8002ed4:	4618      	mov	r0, r3
 8002ed6:	ee0a 3a90 	vmov	s21, r3
 8002eda:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ede:	f7ff ff0b 	bl	8002cf8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ee2:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002ee6:	4618      	mov	r0, r3
 8002ee8:	ee08 3a90 	vmov	s17, r3
 8002eec:	f7ff ff86 	bl	8002dfc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002ef0:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002ef4:	4618      	mov	r0, r3
 8002ef6:	ee09 3a10 	vmov	s18, r3
 8002efa:	f7ff ff7f 	bl	8002dfc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002efe:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002f02:	f504 7917 	add.w	r9, r4, #604	; 0x25c
 8002f06:	4618      	mov	r0, r3
 8002f08:	ee09 3a90 	vmov	s19, r3
 8002f0c:	f504 782a 	add.w	r8, r4, #680	; 0x2a8
 8002f10:	f7ff ff0c 	bl	8002d2c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f14:	4fc9      	ldr	r7, [pc, #804]	; (800323c <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
        : TextArea()
 8002f16:	4648      	mov	r0, r9
 8002f18:	f7ff ff08 	bl	8002d2c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f1c:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002f20:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002f24:	4640      	mov	r0, r8
 8002f26:	f00a fc59 	bl	800d7dc <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f2a:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002f2e:	f504 7b47 	add.w	fp, r4, #796	; 0x31c
 8002f32:	a90a      	add	r1, sp, #40	; 0x28
 8002f34:	4618      	mov	r0, r3
 8002f36:	ee0b 3a10 	vmov	s22, r3
 8002f3a:	f504 7a59 	add.w	sl, r4, #868	; 0x364
 8002f3e:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f42:	f7ff fed9 	bl	8002cf8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f46:	4658      	mov	r0, fp
 8002f48:	f7ff fef0 	bl	8002d2c <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8002f4c:	4650      	mov	r0, sl
 8002f4e:	f7ff feed 	bl	8002d2c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002f52:	4bbb      	ldr	r3, [pc, #748]	; (8003240 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextAreaWithWildcardBase(), wc1(0)
 8002f54:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002f58:	e9c4 34f6 	strd	r3, r4, [r4, #984]	; 0x3d8
 8002f5c:	4bb9      	ldr	r3, [pc, #740]	; (8003244 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002f5e:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002f62:	e9c4 35f8 	strd	r3, r5, [r4, #992]	; 0x3e0
 8002f66:	4bb8      	ldr	r3, [pc, #736]	; (8003248 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002f68:	e9c4 34fa 	strd	r3, r4, [r4, #1000]	; 0x3e8
 8002f6c:	4bb7      	ldr	r3, [pc, #732]	; (800324c <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002f6e:	e9c4 35fc 	strd	r3, r5, [r4, #1008]	; 0x3f0
    __background.setPosition(0, 0, 320, 240);
 8002f72:	23f0      	movs	r3, #240	; 0xf0
 8002f74:	ee18 0a10 	vmov	r0, s16
 8002f78:	9300      	str	r3, [sp, #0]
 8002f7a:	462a      	mov	r2, r5
 8002f7c:	4629      	mov	r1, r5
 8002f7e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f82:	f7ff fe80 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002f86:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f8a:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8002f8c:	462a      	mov	r2, r5
 8002f8e:	ee1a 0a10 	vmov	r0, s20
 8002f92:	4629      	mov	r1, r5
 8002f94:	f7ff fe38 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002f98:	ee1a 0a10 	vmov	r0, s20
 8002f9c:	a90a      	add	r1, sp, #40	; 0x28
 8002f9e:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8002fa2:	f00a fae9 	bl	800d578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8002fa6:	ee1a 0a90 	vmov	r0, s21
 8002faa:	2219      	movs	r2, #25
 8002fac:	2176      	movs	r1, #118	; 0x76
 8002fae:	f7ff fe2b 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
        borderBox.setPosition(x, y, width, height);
 8002fb2:	2717      	movs	r7, #23
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8002fb4:	ee1a 0a90 	vmov	r0, s21
 8002fb8:	f04f 0303 	mov.w	r3, #3
 8002fbc:	a90a      	add	r1, sp, #40	; 0x28
 8002fbe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002fc2:	f00a fad9 	bl	800d578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fc6:	9700      	str	r7, [sp, #0]
 8002fc8:	462a      	mov	r2, r5
 8002fca:	4629      	mov	r1, r5
 8002fcc:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8002fd0:	232b      	movs	r3, #43	; 0x2b
 8002fd2:	f7ff fe58 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002fd6:	4a9e      	ldr	r2, [pc, #632]	; (8003250 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002fd8:	4b9e      	ldr	r3, [pc, #632]	; (8003254 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
        borderDown = borderColorPressed;
 8002fda:	499f      	ldr	r1, [pc, #636]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8002fdc:	489f      	ldr	r0, [pc, #636]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
        down = colorPressed;
 8002fde:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        handlePressedUpdated();
 8002fe2:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002fe6:	2605      	movs	r6, #5
        borderDown = borderColorPressed;
 8002fe8:	e9c4 104d 	strd	r1, r0, [r4, #308]	; 0x134
        handlePressedUpdated();
 8002fec:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002ff0:	f8a4 6128 	strh.w	r6, [r4, #296]	; 0x128
 8002ff4:	ee18 0a90 	vmov	r0, s17
 8002ff8:	4798      	blx	r3
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 8002ffa:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8002ffe:	4662      	mov	r2, ip
 8003000:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
 8003004:	4661      	mov	r1, ip
 8003006:	ee18 0a90 	vmov	r0, s17
 800300a:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800300e:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003012:	f7ff fe06 	bl	8002c22 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 8003016:	ee18 0a90 	vmov	r0, s17
        rect.x = x;
 800301a:	f8c4 6144 	str.w	r6, [r4, #324]	; 0x144
 800301e:	9700      	str	r7, [sp, #0]
 8003020:	232b      	movs	r3, #43	; 0x2b
 8003022:	2231      	movs	r2, #49	; 0x31
 8003024:	f240 1111 	movw	r1, #273	; 0x111
 8003028:	f7ff fe2d 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 800302c:	f504 7c7a 	add.w	ip, r4, #1000	; 0x3e8
        action = &callback;
 8003030:	f8c4 c0f4 	str.w	ip, [r4, #244]	; 0xf4
        borderBox.setPosition(x, y, width, height);
 8003034:	9700      	str	r7, [sp, #0]
 8003036:	462a      	mov	r2, r5
 8003038:	4629      	mov	r1, r5
 800303a:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 800303e:	232b      	movs	r3, #43	; 0x2b
 8003040:	f8cd c00c 	str.w	ip, [sp, #12]
 8003044:	f7ff fe1f 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8003048:	4a81      	ldr	r2, [pc, #516]	; (8003250 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 800304a:	4b82      	ldr	r3, [pc, #520]	; (8003254 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
        borderDown = borderColorPressed;
 800304c:	4982      	ldr	r1, [pc, #520]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 800304e:	4883      	ldr	r0, [pc, #524]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003050:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        down = colorPressed;
 8003054:	e9c4 3275 	strd	r3, r2, [r4, #468]	; 0x1d4
        handlePressedUpdated();
 8003058:	f8d4 316c 	ldr.w	r3, [r4, #364]	; 0x16c
        borderDown = borderColorPressed;
 800305c:	e9c4 1077 	strd	r1, r0, [r4, #476]	; 0x1dc
        handlePressedUpdated();
 8003060:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003064:	ee19 0a10 	vmov	r0, s18
 8003068:	4798      	blx	r3
 800306a:	2606      	movs	r6, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 800306c:	ee19 0a10 	vmov	r0, s18
 8003070:	aa0a      	add	r2, sp, #40	; 0x28
 8003072:	a909      	add	r1, sp, #36	; 0x24
 8003074:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8003078:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800307c:	f7ff fdd1 	bl	8002c22 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonUp.setPosition(273, 25, 43, 23);
 8003080:	ee19 0a10 	vmov	r0, s18
 8003084:	f8c4 61ec 	str.w	r6, [r4, #492]	; 0x1ec
 8003088:	9700      	str	r7, [sp, #0]
 800308a:	232b      	movs	r3, #43	; 0x2b
 800308c:	2219      	movs	r2, #25
 800308e:	f240 1111 	movw	r1, #273	; 0x111
 8003092:	f7ff fdf8 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003096:	9b03      	ldr	r3, [sp, #12]
 8003098:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800309c:	ae04      	add	r6, sp, #16
        color = newColor;
 800309e:	f04f 37ff 	mov.w	r7, #4294967295
    LabelPradLadowania.setXY(25, 28);
 80030a2:	ee19 0a90 	vmov	r0, s19
 80030a6:	221c      	movs	r2, #28
 80030a8:	2119      	movs	r1, #25
 80030aa:	f7ff fdad 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80030ae:	ee19 1a90 	vmov	r1, s19
        linespace = space;
 80030b2:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 80030b6:	4630      	mov	r0, r6
        color = newColor;
 80030b8:	f8c4 7244 	str.w	r7, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 80030bc:	f009 fd4e 	bl	800cb5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030c0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80030c4:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80030c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80030cc:	4b64      	ldr	r3, [pc, #400]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80030ce:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 80030d0:	ee19 0a90 	vmov	r0, s19
 80030d4:	230c      	movs	r3, #12
 80030d6:	a90a      	add	r1, sp, #40	; 0x28
 80030d8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030dc:	f009 ffce 	bl	800d07c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 80030e0:	2218      	movs	r2, #24
 80030e2:	9200      	str	r2, [sp, #0]
 80030e4:	4648      	mov	r0, r9
 80030e6:	2224      	movs	r2, #36	; 0x24
 80030e8:	237c      	movs	r3, #124	; 0x7c
 80030ea:	218f      	movs	r1, #143	; 0x8f
 80030ec:	f7ff fdcb 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 80030f0:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 80030f4:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        boundingArea = calculateBoundingArea();
 80030f8:	4649      	mov	r1, r9
 80030fa:	4630      	mov	r0, r6
 80030fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003100:	f8c4 728c 	str.w	r7, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 8003104:	4798      	blx	r3
 8003106:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800310a:	f504 7326 	add.w	r3, r4, #664	; 0x298
 800310e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 8003112:	f504 736c 	add.w	r3, r4, #944	; 0x3b0
        wc1 = value;
 8003116:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 800311a:	4b51      	ldr	r3, [pc, #324]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
    txtPradLadowaniaBuffer[0] = 0;
 800311c:	f8a4 53b0 	strh.w	r5, [r4, #944]	; 0x3b0
 8003120:	930a      	str	r3, [sp, #40]	; 0x28
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 8003122:	a90a      	add	r1, sp, #40	; 0x28
 8003124:	230b      	movs	r3, #11
 8003126:	4648      	mov	r0, r9
 8003128:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800312c:	f009 ffa6 	bl	800d07c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 8003130:	4640      	mov	r0, r8
 8003132:	22b4      	movs	r2, #180	; 0xb4
 8003134:	214e      	movs	r1, #78	; 0x4e
 8003136:	f7ff fd67 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
 800313a:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 800313c:	aa0a      	add	r2, sp, #40	; 0x28
 800313e:	a909      	add	r1, sp, #36	; 0x24
 8003140:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003144:	4640      	mov	r0, r8
 8003146:	2302      	movs	r3, #2
 8003148:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800314c:	f009 fff1 	bl	800d132 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003150:	230a      	movs	r3, #10
 8003152:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
        updateTextPosition();
 8003156:	4640      	mov	r0, r8
 8003158:	f7ff fe0a 	bl	8002d70 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 800315c:	f504 7376 	add.w	r3, r4, #984	; 0x3d8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003160:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 79);
 8003164:	ee1b 0a10 	vmov	r0, s22
        colorPressed = col;
 8003168:	e9c4 77b9 	strd	r7, r7, [r4, #740]	; 0x2e4
 800316c:	224f      	movs	r2, #79	; 0x4f
 800316e:	2176      	movs	r1, #118	; 0x76
 8003170:	f7ff fd4a 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003174:	ee1b 0a10 	vmov	r0, s22
 8003178:	f04f 0203 	mov.w	r2, #3
 800317c:	a90a      	add	r1, sp, #40	; 0x28
 800317e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8003182:	f00a f9f9 	bl	800d578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 82);
 8003186:	2252      	movs	r2, #82	; 0x52
 8003188:	4658      	mov	r0, fp
 800318a:	2129      	movs	r1, #41	; 0x29
 800318c:	f7ff fd3c 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8003190:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 8003194:	4659      	mov	r1, fp
 8003196:	4630      	mov	r0, r6
        color = newColor;
 8003198:	f8c4 734c 	str.w	r7, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 800319c:	f009 fcde 	bl	800cb5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80031a0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031a4:	f504 7356 	add.w	r3, r4, #856	; 0x358
 80031a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80031ac:	4b2c      	ldr	r3, [pc, #176]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80031ae:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 80031b0:	a90a      	add	r1, sp, #40	; 0x28
 80031b2:	2309      	movs	r3, #9
 80031b4:	4658      	mov	r0, fp
 80031b6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80031ba:	f009 ff5f 	bl	800d07c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 88, 124, 24);
 80031be:	2218      	movs	r2, #24
 80031c0:	9200      	str	r2, [sp, #0]
 80031c2:	4650      	mov	r0, sl
 80031c4:	2258      	movs	r2, #88	; 0x58
 80031c6:	237c      	movs	r3, #124	; 0x7c
 80031c8:	218f      	movs	r1, #143	; 0x8f
 80031ca:	f7ff fd5c 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 80031ce:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80031d2:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 80031d6:	4651      	mov	r1, sl
 80031d8:	4630      	mov	r0, r6
 80031da:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80031de:	f8c4 7394 	str.w	r7, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80031e2:	4798      	blx	r3
 80031e4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031e8:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80031ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80031f0:	f504 7371 	add.w	r3, r4, #964	; 0x3c4
 80031f4:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
 80031f8:	4b19      	ldr	r3, [pc, #100]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
    txtNapiecieBateriiBuffer[0] = 0;
 80031fa:	f8a4 53c4 	strh.w	r5, [r4, #964]	; 0x3c4
 80031fe:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003200:	1d25      	adds	r5, r4, #4
 8003202:	2308      	movs	r3, #8
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 8003204:	a90a      	add	r1, sp, #40	; 0x28
 8003206:	4650      	mov	r0, sl
 8003208:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800320c:	f009 ff36 	bl	800d07c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003210:	ee18 1a10 	vmov	r1, s16
 8003214:	4628      	mov	r0, r5
 8003216:	f006 fd71 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800321a:	ee1a 1a10 	vmov	r1, s20
 800321e:	4628      	mov	r0, r5
 8003220:	f006 fd6c 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003224:	ee1a 1a90 	vmov	r1, s21
 8003228:	4628      	mov	r0, r5
 800322a:	f006 fd67 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800322e:	ee18 1a90 	vmov	r1, s17
 8003232:	4628      	mov	r0, r5
 8003234:	e016      	b.n	8003264 <_ZN15Screen1ViewBaseC1Ev+0x3d4>
 8003236:	bf00      	nop
 8003238:	0802191c 	.word	0x0802191c
 800323c:	08021720 	.word	0x08021720
 8003240:	080218ec 	.word	0x080218ec
 8003244:	08002bd9 	.word	0x08002bd9
 8003248:	08021904 	.word	0x08021904
 800324c:	08002b05 	.word	0x08002b05
 8003250:	ff0099cc 	.word	0xff0099cc
 8003254:	ff006699 	.word	0xff006699
 8003258:	ff003366 	.word	0xff003366
 800325c:	ff336699 	.word	0xff336699
 8003260:	08020ee4 	.word	0x08020ee4
 8003264:	f006 fd4a 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003268:	ee19 1a10 	vmov	r1, s18
 800326c:	4628      	mov	r0, r5
 800326e:	f006 fd45 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003272:	ee19 1a90 	vmov	r1, s19
 8003276:	4628      	mov	r0, r5
 8003278:	f006 fd40 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800327c:	4649      	mov	r1, r9
 800327e:	4628      	mov	r0, r5
 8003280:	f006 fd3c 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003284:	4641      	mov	r1, r8
 8003286:	4628      	mov	r0, r5
 8003288:	f006 fd38 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800328c:	ee1b 1a10 	vmov	r1, s22
 8003290:	4628      	mov	r0, r5
 8003292:	f006 fd33 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003296:	4659      	mov	r1, fp
 8003298:	4628      	mov	r0, r5
 800329a:	f006 fd2f 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800329e:	4628      	mov	r0, r5
 80032a0:	4651      	mov	r1, sl
 80032a2:	f006 fd2b 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80032a6:	4620      	mov	r0, r4
 80032a8:	b00d      	add	sp, #52	; 0x34
 80032aa:	ecbd 8b08 	vpop	{d8-d11}
 80032ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032b2:	bf00      	nop

080032b4 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80032b4:	2000      	movs	r0, #0
 80032b6:	4770      	bx	lr

080032b8 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80032b8:	888b      	ldrh	r3, [r1, #4]
 80032ba:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80032bc:	2001      	movs	r0, #1
 80032be:	4770      	bx	lr

080032c0 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80032c0:	4770      	bx	lr

080032c2 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80032c2:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80032c6:	4770      	bx	lr

080032c8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80032c8:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032ca:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80032cc:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032ce:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80032d2:	4362      	muls	r2, r4
 80032d4:	4361      	muls	r1, r4
    }
 80032d6:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032da:	4718      	bx	r3

080032dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80032dc:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032e0:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80032e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032e6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80032ea:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80032ee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80032f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80032f6:	db17      	blt.n	8003328 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80032f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80032fc:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003300:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003304:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003308:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 800330c:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003310:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003314:	db1c      	blt.n	8003350 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 8003316:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800331a:	ee70 0aa7 	vadd.f32	s1, s1, s15
 800331e:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003322:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003326:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003328:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 800332c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003330:	ee17 2a10 	vmov	r2, s14
 8003334:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003338:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800333c:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003340:	1e51      	subs	r1, r2, #1
 8003342:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003346:	ee10 2a10 	vmov	r2, s0
 800334a:	440a      	add	r2, r1
 800334c:	4611      	mov	r1, r2
 800334e:	e7db      	b.n	8003308 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8003350:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003354:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003358:	ee17 2a90 	vmov	r2, s15
 800335c:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003360:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003364:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003368:	3a01      	subs	r2, #1
 800336a:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800336e:	ee10 ca90 	vmov	ip, s1
 8003372:	4494      	add	ip, r2
 8003374:	4662      	mov	r2, ip
 8003376:	e7d6      	b.n	8003326 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003378 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003378:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800337a:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 800337c:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800337e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8003382:	4362      	muls	r2, r4
    }
 8003384:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003388:	4718      	bx	r3

0800338a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 800338a:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800338e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003390:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003394:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003398:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800339c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80033a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033a4:	db08      	blt.n	80033b8 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80033a6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80033aa:	ee30 0a27 	vadd.f32	s0, s0, s15
 80033ae:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80033b2:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80033b6:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80033b8:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80033bc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80033c0:	ee17 2a90 	vmov	r2, s15
 80033c4:	ee30 0a47 	vsub.f32	s0, s0, s14
 80033c8:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80033cc:	ee30 0a07 	vadd.f32	s0, s0, s14
 80033d0:	3a01      	subs	r2, #1
 80033d2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80033d6:	ee10 ca10 	vmov	ip, s0
 80033da:	4494      	add	ip, r2
 80033dc:	4662      	mov	r2, ip
 80033de:	e7ea      	b.n	80033b6 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080033e0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80033e0:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033e2:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80033e4:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033e6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80033ea:	4362      	muls	r2, r4
 80033ec:	4361      	muls	r1, r4
    }
 80033ee:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033f2:	4718      	bx	r3

080033f4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80033f4:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80033f8:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80033fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80033fe:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 8003402:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8003406:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800340a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800340e:	db17      	blt.n	8003440 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 8003410:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003414:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003418:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 800341c:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003420:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003424:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003428:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800342c:	db1c      	blt.n	8003468 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 800342e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003432:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003436:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800343a:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800343e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003440:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003444:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003448:	ee17 2a10 	vmov	r2, s14
 800344c:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003450:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003454:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003458:	1e51      	subs	r1, r2, #1
 800345a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800345e:	ee10 2a10 	vmov	r2, s0
 8003462:	440a      	add	r2, r1
 8003464:	4611      	mov	r1, r2
 8003466:	e7db      	b.n	8003420 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003468:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800346c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003470:	ee17 2a90 	vmov	r2, s15
 8003474:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003478:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800347c:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003480:	3a01      	subs	r2, #1
 8003482:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003486:	ee10 ca90 	vmov	ip, s1
 800348a:	4494      	add	ip, r2
 800348c:	4662      	mov	r2, ip
 800348e:	e7d6      	b.n	800343e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003490 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003490:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003492:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003494:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003496:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800349a:	4362      	muls	r2, r4
    }
 800349c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80034a0:	4718      	bx	r3

080034a2 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 80034a2:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034a6:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80034a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034ac:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 80034b0:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80034b4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80034b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80034bc:	db08      	blt.n	80034d0 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80034be:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80034c2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80034c6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80034ca:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034ce:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80034d0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80034d4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80034d8:	ee17 2a90 	vmov	r2, s15
 80034dc:	ee30 0a47 	vsub.f32	s0, s0, s14
 80034e0:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80034e4:	ee30 0a07 	vadd.f32	s0, s0, s14
 80034e8:	3a01      	subs	r2, #1
 80034ea:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80034ee:	ee10 ca10 	vmov	ip, s0
 80034f2:	4494      	add	ip, r2
 80034f4:	4662      	mov	r2, ip
 80034f6:	e7ea      	b.n	80034ce <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080034f8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80034f8:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80034fc:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80034fe:	2b00      	cmp	r3, #0
 8003500:	db07      	blt.n	8003512 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003502:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003506:	fb93 f0f2 	sdiv	r0, r3, r2
 800350a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800350e:	1040      	asrs	r0, r0, #1
 8003510:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003512:	f06f 0001 	mvn.w	r0, #1
 8003516:	fb00 2003 	mla	r0, r0, r3, r2
 800351a:	3801      	subs	r0, #1
 800351c:	fb90 f0f2 	sdiv	r0, r0, r2
 8003520:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003524:	1040      	asrs	r0, r0, #1
 8003526:	4240      	negs	r0, r0
    }
 8003528:	4770      	bx	lr

0800352a <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 800352a:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 800352e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003532:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003536:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800353a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800353e:	4770      	bx	lr

08003540 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8003540:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003544:	4770      	bx	lr

08003546 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8003546:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 800354a:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 800354c:	2b00      	cmp	r3, #0
 800354e:	db07      	blt.n	8003560 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003550:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003554:	fb93 f0f2 	sdiv	r0, r3, r2
 8003558:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800355c:	1040      	asrs	r0, r0, #1
 800355e:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003560:	f06f 0001 	mvn.w	r0, #1
 8003564:	fb00 2003 	mla	r0, r0, r3, r2
 8003568:	3801      	subs	r0, #1
 800356a:	fb90 f0f2 	sdiv	r0, r0, r2
 800356e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003572:	1040      	asrs	r0, r0, #1
 8003574:	4240      	negs	r0, r0
    }
 8003576:	4770      	bx	lr

08003578 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003578:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 800357c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003580:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003588:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800358c:	4770      	bx	lr

0800358e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800358e:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8003592:	4770      	bx	lr

08003594 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003594:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003598:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 800359a:	2b00      	cmp	r3, #0
 800359c:	db07      	blt.n	80035ae <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800359e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80035a2:	fb93 f0f2 	sdiv	r0, r3, r2
 80035a6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035aa:	1040      	asrs	r0, r0, #1
 80035ac:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80035ae:	f06f 0001 	mvn.w	r0, #1
 80035b2:	fb00 2003 	mla	r0, r0, r3, r2
 80035b6:	3801      	subs	r0, #1
 80035b8:	fb90 f0f2 	sdiv	r0, r0, r2
 80035bc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035c0:	1040      	asrs	r0, r0, #1
 80035c2:	4240      	negs	r0, r0
    }
 80035c4:	4770      	bx	lr

080035c6 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80035c6:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80035ca:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80035ce:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80035d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80035d6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80035da:	4770      	bx	lr

080035dc <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80035dc:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80035e0:	4770      	bx	lr

080035e2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80035e2:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80035e6:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80035e8:	2b00      	cmp	r3, #0
 80035ea:	db07      	blt.n	80035fc <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80035ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80035f0:	fb93 f0f2 	sdiv	r0, r3, r2
 80035f4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035f8:	1040      	asrs	r0, r0, #1
 80035fa:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80035fc:	f06f 0001 	mvn.w	r0, #1
 8003600:	fb00 2003 	mla	r0, r0, r3, r2
 8003604:	3801      	subs	r0, #1
 8003606:	fb90 f0f2 	sdiv	r0, r0, r2
 800360a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800360e:	1040      	asrs	r0, r0, #1
 8003610:	4240      	negs	r0, r0
    }
 8003612:	4770      	bx	lr

08003614 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003614:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 8003618:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800361c:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003620:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003624:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003628:	4770      	bx	lr

0800362a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 800362a:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 800362e:	4770      	bx	lr

08003630 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 8003630:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 8003632:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003634:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8003636:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 800363a:	460d      	mov	r5, r1
 800363c:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 800363e:	4798      	blx	r3
        setScaleY(scale, updateData);
 8003640:	6823      	ldr	r3, [r4, #0]
 8003642:	4632      	mov	r2, r6
 8003644:	4629      	mov	r1, r5
 8003646:	4620      	mov	r0, r4
 8003648:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 800364c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003650:	4718      	bx	r3

08003652 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8003652:	6803      	ldr	r3, [r0, #0]
 8003654:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003658:	4718      	bx	r3

0800365a <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 800365a:	6803      	ldr	r3, [r0, #0]
 800365c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003660:	4718      	bx	r3

08003662 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8003662:	6803      	ldr	r3, [r0, #0]
 8003664:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003668:	4718      	bx	r3

0800366a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800366a:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 800366c:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 800366e:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003670:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003674:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003676:	db0e      	blt.n	8003696 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003678:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800367c:	fb92 f1f4 	sdiv	r1, r2, r4
 8003680:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003684:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003686:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 800368a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800368e:	3a01      	subs	r2, #1
 8003690:	440a      	add	r2, r1
 8003692:	4249      	negs	r1, r1
 8003694:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003696:	f06f 0101 	mvn.w	r1, #1
 800369a:	fb01 4102 	mla	r1, r1, r2, r4
 800369e:	3901      	subs	r1, #1
 80036a0:	fb91 f1f4 	sdiv	r1, r1, r4
 80036a4:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80036a8:	1049      	asrs	r1, r1, #1
 80036aa:	4249      	negs	r1, r1
 80036ac:	e7eb      	b.n	8003686 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

080036ae <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 80036ae:	6803      	ldr	r3, [r0, #0]
 80036b0:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 80036b4:	4718      	bx	r3

080036b6 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 80036b6:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 80036b8:	6803      	ldr	r3, [r0, #0]
 80036ba:	4351      	muls	r1, r2
 80036bc:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 80036c0:	4718      	bx	r3

080036c2 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 80036c2:	6803      	ldr	r3, [r0, #0]
 80036c4:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 80036c8:	4718      	bx	r3

080036ca <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 80036ca:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 80036ce:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80036d4:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 80036d8:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80036dc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036e4:	db08      	blt.n	80036f8 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 80036e6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036ea:	ee30 0a27 	vadd.f32	s0, s0, s15
 80036ee:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80036f2:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80036f6:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80036f8:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80036fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003700:	ee17 2a90 	vmov	r2, s15
 8003704:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003708:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800370c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003710:	1e51      	subs	r1, r2, #1
 8003712:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003716:	ee10 2a10 	vmov	r2, s0
 800371a:	440a      	add	r2, r1
 800371c:	4611      	mov	r1, r2
 800371e:	e7ea      	b.n	80036f6 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003720 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003720:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003724:	4770      	bx	lr

08003726 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8003726:	6803      	ldr	r3, [r0, #0]
 8003728:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 800372c:	4718      	bx	r3

0800372e <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 800372e:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003730:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003732:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003736:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003738:	4798      	blx	r3
        if (i >= 0)
 800373a:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 800373c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 800373e:	db07      	blt.n	8003750 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003740:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003744:	fb90 f0f3 	sdiv	r0, r0, r3
 8003748:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800374c:	1040      	asrs	r0, r0, #1
    }
 800374e:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003750:	f06f 0201 	mvn.w	r2, #1
 8003754:	fb02 3000 	mla	r0, r2, r0, r3
 8003758:	3801      	subs	r0, #1
 800375a:	fb90 f0f3 	sdiv	r0, r0, r3
 800375e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003762:	1040      	asrs	r0, r0, #1
 8003764:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003766:	e7f2      	b.n	800374e <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003768 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003768:	6803      	ldr	r3, [r0, #0]
 800376a:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800376e:	4718      	bx	r3

08003770 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003770:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003772:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003774:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003778:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 800377a:	4798      	blx	r3
        return (float)i / (float)scale;
 800377c:	ee07 0a90 	vmov	s15, r0
 8003780:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003784:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003788:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800378c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003790:	bd10      	pop	{r4, pc}

08003792 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003792:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003796:	4770      	bx	lr

08003798 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003798:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 800379a:	6803      	ldr	r3, [r0, #0]
 800379c:	4351      	muls	r1, r2
 800379e:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 80037a2:	4718      	bx	r3

080037a4 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 80037a4:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 80037a8:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80037aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 80037ae:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 80037b2:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80037b6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80037ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037be:	db08      	blt.n	80037d2 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 80037c0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80037c4:	ee30 0a27 	vadd.f32	s0, s0, s15
 80037c8:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037cc:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 80037d0:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80037d2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037da:	ee17 2a90 	vmov	r2, s15
 80037de:	ee30 0a47 	vsub.f32	s0, s0, s14
 80037e2:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80037e6:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037ea:	1e51      	subs	r1, r2, #1
 80037ec:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80037f0:	ee10 2a10 	vmov	r2, s0
 80037f4:	440a      	add	r2, r1
 80037f6:	4611      	mov	r1, r2
 80037f8:	e7ea      	b.n	80037d0 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

080037fa <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 80037fa:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 80037fe:	4770      	bx	lr

08003800 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003800:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003802:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003804:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003808:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 800380a:	4798      	blx	r3
        if (i >= 0)
 800380c:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 800380e:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003810:	db07      	blt.n	8003822 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003812:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003816:	fb90 f0f3 	sdiv	r0, r0, r3
 800381a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800381e:	1040      	asrs	r0, r0, #1
    }
 8003820:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003822:	f06f 0201 	mvn.w	r2, #1
 8003826:	fb02 3000 	mla	r0, r2, r0, r3
 800382a:	3801      	subs	r0, #1
 800382c:	fb90 f0f3 	sdiv	r0, r0, r3
 8003830:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003834:	1040      	asrs	r0, r0, #1
 8003836:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003838:	e7f2      	b.n	8003820 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

0800383a <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 800383a:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 800383c:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 800383e:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003842:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003844:	4798      	blx	r3
        return (float)i / (float)scale;
 8003846:	ee07 0a90 	vmov	s15, r0
 800384a:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800384e:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003852:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003856:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800385a:	bd10      	pop	{r4, pc}

0800385c <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 800385c:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003860:	4770      	bx	lr

08003862 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003862:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003864:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003866:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 800386a:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 800386c:	b510      	push	{r4, lr}
 800386e:	4604      	mov	r4, r0
        if (i >= 0)
 8003870:	db0e      	blt.n	8003890 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003872:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003876:	fb91 f1f2 	sdiv	r1, r1, r2
 800387a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800387e:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003880:	b209      	sxth	r1, r1
 8003882:	4620      	mov	r0, r4
 8003884:	4798      	blx	r3
 8003886:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 800388a:	fb02 3000 	mla	r0, r2, r0, r3
 800388e:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003890:	f06f 0001 	mvn.w	r0, #1
 8003894:	fb00 2101 	mla	r1, r0, r1, r2
 8003898:	3901      	subs	r1, #1
 800389a:	fb91 f1f2 	sdiv	r1, r1, r2
 800389e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80038a2:	1049      	asrs	r1, r1, #1
 80038a4:	4249      	negs	r1, r1
 80038a6:	e7eb      	b.n	8003880 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

080038a8 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 80038a8:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80038aa:	4770      	bx	lr

080038ac <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 80038ac:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80038ae:	4770      	bx	lr

080038b0 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 80038b0:	6803      	ldr	r3, [r0, #0]
 80038b2:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 80038b6:	4718      	bx	r3

080038b8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 80038b8:	6803      	ldr	r3, [r0, #0]
 80038ba:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 80038be:	4718      	bx	r3

080038c0 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 80038c0:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 80038c2:	6803      	ldr	r3, [r0, #0]
 80038c4:	4351      	muls	r1, r2
 80038c6:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80038ca:	4718      	bx	r3

080038cc <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038cc:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 80038ce:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038d0:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 80038d4:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80038d8:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 80038dc:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038de:	4798      	blx	r3
 80038e0:	462b      	mov	r3, r5
 80038e2:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 80038e6:	4620      	mov	r0, r4
    }
 80038e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038ec:	4718      	bx	r3

080038ee <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 80038ee:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 80038f2:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 80038f6:	4293      	cmp	r3, r2
 80038f8:	db07      	blt.n	800390a <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 80038fa:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 80038fe:	4419      	add	r1, r3
 8003900:	fb91 f0f2 	sdiv	r0, r1, r2
 8003904:	fb02 1110 	mls	r1, r2, r0, r1
 8003908:	b209      	sxth	r1, r1
    }
 800390a:	4608      	mov	r0, r1
 800390c:	4770      	bx	lr

0800390e <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 800390e:	0148      	lsls	r0, r1, #5
 8003910:	4770      	bx	lr

08003912 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003912:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003916:	4770      	bx	lr

08003918 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003918:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800391c:	4770      	bx	lr

0800391e <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 800391e:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003920:	2200      	movs	r2, #0
        return rect.width;
 8003922:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003926:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800392a:	8002      	strh	r2, [r0, #0]
 800392c:	8042      	strh	r2, [r0, #2]
 800392e:	8084      	strh	r4, [r0, #4]
 8003930:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003932:	bd10      	pop	{r4, pc}

08003934 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003934:	2200      	movs	r2, #0
 8003936:	8002      	strh	r2, [r0, #0]
 8003938:	8042      	strh	r2, [r0, #2]
 800393a:	8082      	strh	r2, [r0, #4]
 800393c:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800393e:	4770      	bx	lr

08003940 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003940:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003942:	4770      	bx	lr

08003944 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003944:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003946:	4770      	bx	lr

08003948 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003948:	2001      	movs	r0, #1
 800394a:	4770      	bx	lr

0800394c <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 800394c:	4770      	bx	lr

0800394e <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 800394e:	4770      	bx	lr

08003950 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003950:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003952:	b118      	cbz	r0, 800395c <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003954:	6803      	ldr	r3, [r0, #0]
 8003956:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800395a:	4718      	bx	r3
    }
 800395c:	4770      	bx	lr

0800395e <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 800395e:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003960:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003964:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003968:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800396c:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003970:	8044      	strh	r4, [r0, #2]
 8003972:	4421      	add	r1, r4
 8003974:	1a52      	subs	r2, r2, r1
 8003976:	2100      	movs	r1, #0
 8003978:	8001      	strh	r1, [r0, #0]
 800397a:	8085      	strh	r5, [r0, #4]
 800397c:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 800397e:	bd30      	pop	{r4, r5, pc}

08003980 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003980:	b510      	push	{r4, lr}
 8003982:	8042      	strh	r2, [r0, #2]
 8003984:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003988:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800398c:	8004      	strh	r4, [r0, #0]
 800398e:	8082      	strh	r2, [r0, #4]
 8003990:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003992:	bd10      	pop	{r4, pc}

08003994 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003994:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003996:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003998:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800399c:	4718      	bx	r3

0800399e <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 800399e:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 80039a0:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 80039a2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80039a6:	4718      	bx	r3

080039a8 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80039a8:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80039ac:	4770      	bx	lr

080039ae <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80039ae:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80039b2:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80039b6:	4403      	add	r3, r0
 80039b8:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80039bc:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80039be:	b200      	sxth	r0, r0
 80039c0:	4770      	bx	lr

080039c2 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80039c2:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80039c6:	4770      	bx	lr

080039c8 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80039c8:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80039cc:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80039d0:	4403      	add	r3, r0
 80039d2:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80039d6:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80039d8:	b200      	sxth	r0, r0
 80039da:	4770      	bx	lr

080039dc <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 80039dc:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 80039de:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 80039e0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80039e4:	4611      	mov	r1, r2
 80039e6:	4718      	bx	r3

080039e8 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 80039e8:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 80039ec:	b530      	push	{r4, r5, lr}
        return leftPadding;
 80039ee:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 80039f2:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80039f4:	186c      	adds	r4, r5, r1
 80039f6:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 80039fa:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 80039fe:	80c2      	strh	r2, [r0, #6]
 8003a00:	1b09      	subs	r1, r1, r4
 8003a02:	2400      	movs	r4, #0
 8003a04:	8044      	strh	r4, [r0, #2]
 8003a06:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003a08:	bd30      	pop	{r4, r5, pc}

08003a0a <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003a0a:	8002      	strh	r2, [r0, #0]
 8003a0c:	8083      	strh	r3, [r0, #4]
 8003a0e:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003a12:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003a16:	8042      	strh	r2, [r0, #2]
 8003a18:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003a1a:	4770      	bx	lr

08003a1c <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003a1c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003a1e:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003a20:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003a24:	4718      	bx	r3

08003a26 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003a26:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003a28:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003a2a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003a2e:	4718      	bx	r3

08003a30 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003a30:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003a34:	4770      	bx	lr

08003a36 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003a36:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003a3a:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003a3e:	4403      	add	r3, r0
 8003a40:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003a44:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003a46:	b200      	sxth	r0, r0
 8003a48:	4770      	bx	lr

08003a4a <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003a4a:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003a4e:	4770      	bx	lr

08003a50 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003a50:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003a54:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003a58:	4403      	add	r3, r0
 8003a5a:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003a5e:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003a60:	b200      	sxth	r0, r0
 8003a62:	4770      	bx	lr

08003a64 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003a64:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003a66:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003a68:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003a6c:	4611      	mov	r1, r2
 8003a6e:	4718      	bx	r3

08003a70 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003a70:	4770      	bx	lr

08003a72 <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003a72:	4770      	bx	lr

08003a74 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a74:	4770      	bx	lr

08003a76 <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003a76:	4770      	bx	lr

08003a78 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003a78:	4770      	bx	lr

08003a7a <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003a7a:	4770      	bx	lr

08003a7c <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003a7c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a7e:	68c2      	ldr	r2, [r0, #12]
 8003a80:	6844      	ldr	r4, [r0, #4]
 8003a82:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003a84:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003a86:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003a8a:	07d2      	lsls	r2, r2, #31
 8003a8c:	bf48      	it	mi
 8003a8e:	5962      	ldrmi	r2, [r4, r5]
 8003a90:	689b      	ldr	r3, [r3, #8]
    }
 8003a92:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a94:	bf48      	it	mi
 8003a96:	58d3      	ldrmi	r3, [r2, r3]
 8003a98:	4718      	bx	r3

08003a9a <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003a9a:	6843      	ldr	r3, [r0, #4]
 8003a9c:	b12b      	cbz	r3, 8003aaa <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003a9e:	6883      	ldr	r3, [r0, #8]
 8003aa0:	b92b      	cbnz	r3, 8003aae <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003aa2:	68c0      	ldr	r0, [r0, #12]
 8003aa4:	f000 0001 	and.w	r0, r0, #1
 8003aa8:	4770      	bx	lr
 8003aaa:	4618      	mov	r0, r3
 8003aac:	4770      	bx	lr
 8003aae:	2001      	movs	r0, #1
    }
 8003ab0:	4770      	bx	lr

08003ab2 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003ab2:	b510      	push	{r4, lr}
 8003ab4:	2140      	movs	r1, #64	; 0x40
 8003ab6:	4604      	mov	r4, r0
 8003ab8:	f01b fd28 	bl	801f50c <_ZdlPvj>
 8003abc:	4620      	mov	r0, r4
 8003abe:	bd10      	pop	{r4, pc}

08003ac0 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003ac0:	b510      	push	{r4, lr}
 8003ac2:	2140      	movs	r1, #64	; 0x40
 8003ac4:	4604      	mov	r4, r0
 8003ac6:	f01b fd21 	bl	801f50c <_ZdlPvj>
 8003aca:	4620      	mov	r0, r4
 8003acc:	bd10      	pop	{r4, pc}

08003ace <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003ace:	b510      	push	{r4, lr}
 8003ad0:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003ad4:	4604      	mov	r4, r0
 8003ad6:	f01b fd19 	bl	801f50c <_ZdlPvj>
 8003ada:	4620      	mov	r0, r4
 8003adc:	bd10      	pop	{r4, pc}

08003ade <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003ade:	b510      	push	{r4, lr}
 8003ae0:	2110      	movs	r1, #16
 8003ae2:	4604      	mov	r4, r0
 8003ae4:	f01b fd12 	bl	801f50c <_ZdlPvj>
 8003ae8:	4620      	mov	r0, r4
 8003aea:	bd10      	pop	{r4, pc}

08003aec <_ZN19ScreenGraphViewBaseD0Ev>:
 8003aec:	b510      	push	{r4, lr}
 8003aee:	f641 1138 	movw	r1, #6456	; 0x1938
 8003af2:	4604      	mov	r4, r0
 8003af4:	f01b fd0a 	bl	801f50c <_ZdlPvj>
 8003af8:	4620      	mov	r0, r4
 8003afa:	bd10      	pop	{r4, pc}

08003afc <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003afc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003b00:	b10b      	cbz	r3, 8003b06 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003b02:	f006 b934 	b.w	8009d6e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003b06:	4770      	bx	lr

08003b08 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003b08:	b513      	push	{r0, r1, r4, lr}
 8003b0a:	4603      	mov	r3, r0
 8003b0c:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003b0e:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b12:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003b14:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b16:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003b1a:	4798      	blx	r3
 8003b1c:	9901      	ldr	r1, [sp, #4]
 8003b1e:	4602      	mov	r2, r0
 8003b20:	4620      	mov	r0, r4
    }
 8003b22:	b002      	add	sp, #8
 8003b24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b28:	f007 bf58 	b.w	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003b2c <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003b2c:	b513      	push	{r0, r1, r4, lr}
 8003b2e:	4603      	mov	r3, r0
 8003b30:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003b32:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b36:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003b38:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b3a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003b3e:	4798      	blx	r3
 8003b40:	9901      	ldr	r1, [sp, #4]
 8003b42:	4602      	mov	r2, r0
 8003b44:	4620      	mov	r0, r4
    }
 8003b46:	b002      	add	sp, #8
 8003b48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b4c:	f007 bf46 	b.w	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003b50 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003b50:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003b52:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003b54:	db03      	blt.n	8003b5e <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003b56:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003b5a:	4294      	cmp	r4, r2
 8003b5c:	dc06      	bgt.n	8003b6c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003b5e:	4b08      	ldr	r3, [pc, #32]	; (8003b80 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003b60:	4a08      	ldr	r2, [pc, #32]	; (8003b84 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003b62:	4809      	ldr	r0, [pc, #36]	; (8003b88 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003b64:	f240 6133 	movw	r1, #1587	; 0x633
 8003b68:	f01b fcfe 	bl	801f568 <__assert_func>
        return yValues[dataIndex(index)];
 8003b6c:	6803      	ldr	r3, [r0, #0]
 8003b6e:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003b72:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003b76:	4798      	blx	r3
    }
 8003b78:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003b7c:	bd10      	pop	{r4, pc}
 8003b7e:	bf00      	nop
 8003b80:	08021954 	.word	0x08021954
 8003b84:	08021977 	.word	0x08021977
 8003b88:	080219c6 	.word	0x080219c6

08003b8c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003b8c:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003b8e:	b510      	push	{r4, lr}
 8003b90:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003b92:	db03      	blt.n	8003b9c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003b94:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003b98:	429a      	cmp	r2, r3
 8003b9a:	dc06      	bgt.n	8003baa <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003b9c:	4b07      	ldr	r3, [pc, #28]	; (8003bbc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003b9e:	4a08      	ldr	r2, [pc, #32]	; (8003bc0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003ba0:	4808      	ldr	r0, [pc, #32]	; (8003bc4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003ba2:	f240 612d 	movw	r1, #1581	; 0x62d
 8003ba6:	f01b fcdf 	bl	801f568 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003baa:	6803      	ldr	r3, [r0, #0]
 8003bac:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003bb0:	4798      	blx	r3
 8003bb2:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003bb6:	fb02 3000 	mla	r0, r2, r0, r3
 8003bba:	bd10      	pop	{r4, pc}
 8003bbc:	08021954 	.word	0x08021954
 8003bc0:	08021a23 	.word	0x08021a23
 8003bc4:	080219c6 	.word	0x080219c6

08003bc8 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003bc8:	30cc      	adds	r0, #204	; 0xcc
 8003bca:	4288      	cmp	r0, r1
{
 8003bcc:	b508      	push	{r3, lr}
    if (&src == &button1)
 8003bce:	d105      	bne.n	8003bdc <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
     */
    virtual void action1();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003bd0:	f00c f980 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When button1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenWipeTransitionEast();
    }
}
 8003bd4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003bd8:	f7fe bcb6 	b.w	8002548 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
}
 8003bdc:	bd08      	pop	{r3, pc}
	...

08003be0 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8003be0:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8003be2:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8003be4:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8003be6:	2100      	movs	r1, #0
 8003be8:	f01b fe44 	bl	801f874 <memset>
 8003bec:	4620      	mov	r0, r4
 8003bee:	f7ff f85d 	bl	8002cac <_ZN8touchgfx6WidgetC1Ev>
 8003bf2:	4b05      	ldr	r3, [pc, #20]	; (8003c08 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8003bf4:	6023      	str	r3, [r4, #0]
 8003bf6:	2300      	movs	r3, #0
 8003bf8:	62a3      	str	r3, [r4, #40]	; 0x28
 8003bfa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8003bfe:	2301      	movs	r3, #1
 8003c00:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8003c04:	4620      	mov	r0, r4
 8003c06:	bd10      	pop	{r4, pc}
 8003c08:	080228f4 	.word	0x080228f4

08003c0c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003c0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003c0e:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003c10:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003c12:	f00d fa98 	bl	8011146 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003c16:	2800      	cmp	r0, #0
 8003c18:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c1c:	9901      	ldr	r1, [sp, #4]
 8003c1e:	462a      	mov	r2, r5
 8003c20:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003c24:	db04      	blt.n	8003c30 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c26:	f00d faad 	bl	8011184 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003c2a:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003c2c:	b003      	add	sp, #12
 8003c2e:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c30:	f00d faa8 	bl	8011184 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003c34:	1a20      	subs	r0, r4, r0
 8003c36:	e7f9      	b.n	8003c2c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003c38 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003c38:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c3a:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003c3e:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003c42:	1963      	adds	r3, r4, r5
 8003c44:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003c48:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003c4a:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003c4e:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003c50:	b22d      	sxth	r5, r5
 8003c52:	1ad2      	subs	r2, r2, r3
 8003c54:	1e69      	subs	r1, r5, #1
 8003c56:	1af0      	subs	r0, r6, r3
 8003c58:	f7ff ffd8 	bl	8003c0c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003c5c:	442c      	add	r4, r5
 8003c5e:	3c01      	subs	r4, #1
    }
 8003c60:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003c64:	bd70      	pop	{r4, r5, r6, pc}

08003c66 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003c66:	b538      	push	{r3, r4, r5, lr}
 8003c68:	4604      	mov	r4, r0
 8003c6a:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003c6c:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003c70:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003c74:	440b      	add	r3, r1
 8003c76:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003c7a:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003c7e:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003c80:	b209      	sxth	r1, r1
 8003c82:	1b52      	subs	r2, r2, r5
 8003c84:	3901      	subs	r1, #1
 8003c86:	1b40      	subs	r0, r0, r5
 8003c88:	f7ff ffc0 	bl	8003c0c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003c8c:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003c90:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003c94:	bd38      	pop	{r3, r4, r5, pc}
	...

08003c98 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003c98:	b510      	push	{r4, lr}
 8003c9a:	4604      	mov	r4, r0
        : CanvasWidget()
 8003c9c:	f007 fa98 	bl	800b1d0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003ca0:	4a06      	ldr	r2, [pc, #24]	; (8003cbc <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003ca2:	6022      	str	r2, [r4, #0]
        : color(col)
 8003ca4:	2300      	movs	r3, #0
 8003ca6:	2201      	movs	r2, #1
 8003ca8:	210a      	movs	r1, #10
 8003caa:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003cae:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003cb0:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003cb4:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003cb6:	4620      	mov	r0, r4
 8003cb8:	bd10      	pop	{r4, pc}
 8003cba:	bf00      	nop
 8003cbc:	0802279c 	.word	0x0802279c

08003cc0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003cc0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003cc2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003cc4:	4e12      	ldr	r6, [pc, #72]	; (8003d10 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003cc6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003cc8:	4b12      	ldr	r3, [pc, #72]	; (8003d14 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003cca:	6003      	str	r3, [r0, #0]
 8003ccc:	6833      	ldr	r3, [r6, #0]
 8003cce:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003cd2:	4605      	mov	r5, r0
 8003cd4:	b10a      	cbz	r2, 8003cda <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003cd6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003cd8:	b900      	cbnz	r0, 8003cdc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003cda:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003cdc:	6803      	ldr	r3, [r0, #0]
 8003cde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003ce0:	4798      	blx	r3
        return auxiliaryLCD;
 8003ce2:	6833      	ldr	r3, [r6, #0]
 8003ce4:	fab0 f480 	clz	r4, r0
 8003ce8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003cea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003cec:	b130      	cbz	r0, 8003cfc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003cee:	6803      	ldr	r3, [r0, #0]
 8003cf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003cf2:	4798      	blx	r3
 8003cf4:	2800      	cmp	r0, #0
 8003cf6:	bf08      	it	eq
 8003cf8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003cfc:	b92c      	cbnz	r4, 8003d0a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003cfe:	4b06      	ldr	r3, [pc, #24]	; (8003d18 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003d00:	4a06      	ldr	r2, [pc, #24]	; (8003d1c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003d02:	4807      	ldr	r0, [pc, #28]	; (8003d20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003d04:	212c      	movs	r1, #44	; 0x2c
 8003d06:	f01b fc2f 	bl	801f568 <__assert_func>
    }
 8003d0a:	4628      	mov	r0, r5
 8003d0c:	bd70      	pop	{r4, r5, r6, pc}
 8003d0e:	bf00      	nop
 8003d10:	20017564 	.word	0x20017564
 8003d14:	08021d20 	.word	0x08021d20
 8003d18:	08021a72 	.word	0x08021a72
 8003d1c:	08021ad0 	.word	0x08021ad0
 8003d20:	08021b09 	.word	0x08021b09

08003d24 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8003d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d28:	ed2d 8b0c 	vpush	{d8-d13}
 8003d2c:	4604      	mov	r4, r0
 8003d2e:	b08d      	sub	sp, #52	; 0x34
 8003d30:	f00d fbd2 	bl	80114d8 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8003d34:	4622      	mov	r2, r4
 8003d36:	2500      	movs	r5, #0
 8003d38:	4bee      	ldr	r3, [pc, #952]	; (80040f4 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8003d3a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003d3c:	f842 3b40 	str.w	r3, [r2], #64
 8003d40:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8003d44:	4610      	mov	r0, r2
 8003d46:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8003d4a:	ee08 2a90 	vmov	s17, r2
 8003d4e:	f7fe ffbf 	bl	8002cd0 <_ZN8touchgfx3BoxC1Ev>
        : Widget(), bitmap(bmp), alpha(255)
 8003d52:	2226      	movs	r2, #38	; 0x26
 8003d54:	4629      	mov	r1, r5
 8003d56:	4658      	mov	r0, fp
 8003d58:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003d5c:	f01b fd8a 	bl	801f874 <memset>
 8003d60:	4658      	mov	r0, fp
 8003d62:	f7fe ffa3 	bl	8002cac <_ZN8touchgfx6WidgetC1Ev>
 8003d66:	4be4      	ldr	r3, [pc, #912]	; (80040f8 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8003d68:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003d6a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003d6e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003d72:	a90a      	add	r1, sp, #40	; 0x28
        : Widget(), bitmap(bmp), alpha(255)
 8003d74:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003d78:	4658      	mov	r0, fp
 8003d7a:	f009 fbfd 	bl	800d578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d7e:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 8003d82:	4618      	mov	r0, r3
 8003d84:	ee0a 3a90 	vmov	s21, r3
 8003d88:	f7fe ffa2 	bl	8002cd0 <_ZN8touchgfx3BoxC1Ev>
 8003d8c:	4bdb      	ldr	r3, [pc, #876]	; (80040fc <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8003d8e:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003d92:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003d96:	4618      	mov	r0, r3
 8003d98:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 8003d9c:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 8003da0:	f504 7780 	add.w	r7, r4, #256	; 0x100
 8003da4:	ee09 3a90 	vmov	s19, r3
 8003da8:	f7ff ff1a 	bl	8003be0 <_ZN8touchgfx14AbstractButtonC1Ev>
 8003dac:	4bd4      	ldr	r3, [pc, #848]	; (8004100 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 8003dae:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8003db2:	f8a4 60fa 	strh.w	r6, [r4, #250]	; 0xfa
 8003db6:	f8a4 60fc 	strh.w	r6, [r4, #252]	; 0xfc
 8003dba:	f884 60fe 	strb.w	r6, [r4, #254]	; 0xfe
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003dbe:	213c      	movs	r1, #60	; 0x3c
 8003dc0:	4638      	mov	r0, r7
 8003dc2:	f007 fda7 	bl	800b914 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003dc6:	4bcf      	ldr	r3, [pc, #828]	; (8004104 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8003dc8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003dcc:	2301      	movs	r3, #1
 8003dce:	e9c4 358f 	strd	r3, r5, [r4, #572]	; 0x23c
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8003dd2:	f504 7314 	add.w	r3, r4, #592	; 0x250
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003dd6:	4629      	mov	r1, r5
 8003dd8:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003dda:	e9c4 3591 	strd	r3, r5, [r4, #580]	; 0x244
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003dde:	4638      	mov	r0, r7
 8003de0:	f7ff fa72 	bl	80032c8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003de4:	4bc8      	ldr	r3, [pc, #800]	; (8004108 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 8003de6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003dea:	f504 7350 	add.w	r3, r4, #832	; 0x340
        : CanvasWidget()
 8003dee:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8003df0:	f8a4 524c 	strh.w	r5, [r4, #588]	; 0x24c
 8003df4:	ee0c 3a10 	vmov	s24, r3
 8003df8:	f007 f9ea 	bl	800b1d0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8003dfc:	4bc3      	ldr	r3, [pc, #780]	; (800410c <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8003dfe:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
 8003e02:	f04f 0a02 	mov.w	sl, #2
 8003e06:	f504 735c 	add.w	r3, r4, #880	; 0x370
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003e0a:	4618      	mov	r0, r3
 8003e0c:	f884 a36c 	strb.w	sl, [r4, #876]	; 0x36c
 8003e10:	9303      	str	r3, [sp, #12]
 8003e12:	f7ff ff55 	bl	8003cc0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e16:	4bbe      	ldr	r3, [pc, #760]	; (8004110 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8003e18:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
 8003e1c:	3324      	adds	r3, #36	; 0x24
 8003e1e:	f8c4 3378 	str.w	r3, [r4, #888]	; 0x378
 8003e22:	f504 7361 	add.w	r3, r4, #900	; 0x384
class GraphElementGridX : public GraphElementGridBase
 8003e26:	4618      	mov	r0, r3
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003e28:	f8c4 537c 	str.w	r5, [r4, #892]	; 0x37c
 8003e2c:	ee0c 3a90 	vmov	s25, r3
 8003e30:	f8df 92fc 	ldr.w	r9, [pc, #764]	; 8004130 <_ZN19ScreenGraphViewBaseC1Ev+0x40c>
class GraphElementGridY : public GraphElementGridBase
 8003e34:	f8df 82fc 	ldr.w	r8, [pc, #764]	; 8004134 <_ZN19ScreenGraphViewBaseC1Ev+0x410>
class GraphElementGridX : public GraphElementGridBase
 8003e38:	f7ff ff2e 	bl	8003c98 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003e3c:	f504 7371 	add.w	r3, r4, #964	; 0x3c4
 8003e40:	f8c4 9384 	str.w	r9, [r4, #900]	; 0x384
class GraphElementGridY : public GraphElementGridBase
 8003e44:	4618      	mov	r0, r3
 8003e46:	ee0d 3a10 	vmov	s26, r3
 8003e4a:	f7ff ff25 	bl	8003c98 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003e4e:	f204 4304 	addw	r3, r4, #1028	; 0x404
 8003e52:	f8c4 83c4 	str.w	r8, [r4, #964]	; 0x3c4
class GraphElementGridX : public GraphElementGridBase
 8003e56:	4618      	mov	r0, r3
 8003e58:	ee0b 3a10 	vmov	s22, r3
 8003e5c:	f7ff ff1c 	bl	8003c98 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003e60:	f204 4344 	addw	r3, r4, #1092	; 0x444
 8003e64:	f8c4 9404 	str.w	r9, [r4, #1028]	; 0x404
class GraphElementGridY : public GraphElementGridBase
 8003e68:	4618      	mov	r0, r3
 8003e6a:	ee0b 3a90 	vmov	s23, r3
 8003e6e:	f7ff ff13 	bl	8003c98 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003e72:	f204 4384 	addw	r3, r4, #1156	; 0x484
 8003e76:	f8c4 8444 	str.w	r8, [r4, #1092]	; 0x444
        : CanvasWidget()
 8003e7a:	4618      	mov	r0, r3
 8003e7c:	ee0d 3a90 	vmov	s27, r3
 8003e80:	f007 f9a6 	bl	800b1d0 <_ZN8touchgfx12CanvasWidgetC1Ev>
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003e84:	2301      	movs	r3, #1
 8003e86:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8003e8a:	4ba2      	ldr	r3, [pc, #648]	; (8004114 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8003e8c:	f8c4 34bc 	str.w	r3, [r4, #1212]	; 0x4bc
 8003e90:	232e      	movs	r3, #46	; 0x2e
 8003e92:	f504 629a 	add.w	r2, r4, #1232	; 0x4d0
 8003e96:	f8a4 34c8 	strh.w	r3, [r4, #1224]	; 0x4c8

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003e9a:	4b9f      	ldr	r3, [pc, #636]	; (8004118 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 8003e9c:	f8a4 64c0 	strh.w	r6, [r4, #1216]	; 0x4c0
 8003ea0:	f8c4 3484 	str.w	r3, [r4, #1156]	; 0x484
 8003ea4:	4610      	mov	r0, r2
 8003ea6:	f8c4 54b0 	str.w	r5, [r4, #1200]	; 0x4b0
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003eaa:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8003eae:	f884 54c4 	strb.w	r5, [r4, #1220]	; 0x4c4
 8003eb2:	f8a4 54c6 	strh.w	r5, [r4, #1222]	; 0x4c6
 8003eb6:	f8c4 54cc 	str.w	r5, [r4, #1228]	; 0x4cc
 8003eba:	ee0a 2a10 	vmov	s20, r2
 8003ebe:	f7ff fe8f 	bl	8003be0 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8003ec2:	4b96      	ldr	r3, [pc, #600]	; (800411c <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>)
 8003ec4:	f8c4 34d0 	str.w	r3, [r4, #1232]	; 0x4d0
 8003ec8:	f504 62a1 	add.w	r2, r4, #1288	; 0x508
 8003ecc:	4610      	mov	r0, r2
 8003ece:	f504 69aa 	add.w	r9, r4, #1360	; 0x550
 8003ed2:	f8a4 64fe 	strh.w	r6, [r4, #1278]	; 0x4fe
 8003ed6:	f8a4 6500 	strh.w	r6, [r4, #1280]	; 0x500
 8003eda:	f884 6502 	strb.w	r6, [r4, #1282]	; 0x502
 8003ede:	f8a4 6504 	strh.w	r6, [r4, #1284]	; 0x504
 8003ee2:	ee09 2a10 	vmov	s18, r2
 8003ee6:	f7fe ff21 	bl	8002d2c <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8003eea:	4648      	mov	r0, r9
 8003eec:	f7fe ff1e 	bl	8002d2c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003ef0:	4e8b      	ldr	r6, [pc, #556]	; (8004120 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>)
 8003ef2:	f8c4 6550 	str.w	r6, [r4, #1360]	; 0x550
 8003ef6:	f204 529c 	addw	r2, r4, #1436	; 0x59c
        : TextArea()
 8003efa:	4610      	mov	r0, r2
        : TextAreaWithWildcardBase(), wc1(0)
 8003efc:	f8c4 5598 	str.w	r5, [r4, #1432]	; 0x598
 8003f00:	f504 68bd 	add.w	r8, r4, #1512	; 0x5e8
 8003f04:	ee08 2a10 	vmov	s16, r2
        : TextArea()
 8003f08:	f7fe ff10 	bl	8002d2c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003f0c:	f8c4 659c 	str.w	r6, [r4, #1436]	; 0x59c
 8003f10:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
        : TextArea()
 8003f14:	4640      	mov	r0, r8
 8003f16:	f7fe ff09 	bl	8002d2c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003f1a:	4b82      	ldr	r3, [pc, #520]	; (8004124 <_ZN19ScreenGraphViewBaseC1Ev+0x400>)
 8003f1c:	f8c4 3668 	str.w	r3, [r4, #1640]	; 0x668
 8003f20:	4b81      	ldr	r3, [pc, #516]	; (8004128 <_ZN19ScreenGraphViewBaseC1Ev+0x404>)
        : TextAreaWithWildcardBase(), wc1(0)
 8003f22:	f8c4 65e8 	str.w	r6, [r4, #1512]	; 0x5e8
 8003f26:	f8c4 3670 	str.w	r3, [r4, #1648]	; 0x670
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003f2a:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8003f2e:	f504 60cf 	add.w	r0, r4, #1656	; 0x678
 8003f32:	f8c4 5630 	str.w	r5, [r4, #1584]	; 0x630
 8003f36:	f8c4 466c 	str.w	r4, [r4, #1644]	; 0x66c
 8003f3a:	f8c4 5674 	str.w	r5, [r4, #1652]	; 0x674
 8003f3e:	f00a fb09 	bl	800e554 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8003f42:	23f0      	movs	r3, #240	; 0xf0
 8003f44:	ee18 0a90 	vmov	r0, s17
 8003f48:	9300      	str	r3, [sp, #0]
 8003f4a:	462a      	mov	r2, r5
 8003f4c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003f50:	4629      	mov	r1, r5
 8003f52:	f7fe fe98 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f56:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003f5a:	66a2      	str	r2, [r4, #104]	; 0x68
    Background.setXY(-109, -23);
 8003f5c:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 8003f60:	f06f 0216 	mvn.w	r2, #22
 8003f64:	4658      	mov	r0, fp
 8003f66:	f7fe fe4f 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 8003f6a:	26a6      	movs	r6, #166	; 0xa6
 8003f6c:	f04f 0204 	mov.w	r2, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 8003f70:	a90a      	add	r1, sp, #40	; 0x28
 8003f72:	4658      	mov	r0, fp
 8003f74:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8003f78:	f009 fafe 	bl	800d578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 8003f7c:	ee1a 0a90 	vmov	r0, s21
 8003f80:	9600      	str	r6, [sp, #0]
 8003f82:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003f86:	462a      	mov	r2, r5
 8003f88:	4629      	mov	r1, r5
 8003f8a:	f7fe fe7c 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8003f8e:	f04f 33ff 	mov.w	r3, #4294967295
 8003f92:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003f96:	e9c4 3230 	strd	r3, r2, [r4, #192]	; 0xc0
        borderSize = size;
 8003f9a:	f04f 0201 	mov.w	r2, #1
    button1.setXY(187, 189);
 8003f9e:	ee19 0a90 	vmov	r0, s19
 8003fa2:	f8a4 20c8 	strh.w	r2, [r4, #200]	; 0xc8
 8003fa6:	21bb      	movs	r1, #187	; 0xbb
 8003fa8:	22bd      	movs	r2, #189	; 0xbd
 8003faa:	f7fe fe2d 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
 8003fae:	f04f 0201 	mov.w	r2, #1
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8003fb2:	ee19 0a90 	vmov	r0, s19
 8003fb6:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8003fba:	a909      	add	r1, sp, #36	; 0x24
 8003fbc:	aa0a      	add	r2, sp, #40	; 0x28
 8003fbe:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8003fc2:	f009 f8b6 	bl	800d132 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8003fc6:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
        action = &callback;
 8003fca:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
    dynamicGraph1.setScale(1000);
 8003fce:	462a      	mov	r2, r5
 8003fd0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003fd4:	4638      	mov	r0, r7
 8003fd6:	f7ff fb2b 	bl	8003630 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 8003fda:	9600      	str	r6, [sp, #0]
 8003fdc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003fe0:	462a      	mov	r2, r5
 8003fe2:	4629      	mov	r1, r5
 8003fe4:	4638      	mov	r0, r7
 8003fe6:	f7fe fe4e 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 20, 0, 15);
 8003fea:	230f      	movs	r3, #15
 8003fec:	9300      	str	r3, [sp, #0]
 8003fee:	2214      	movs	r2, #20
 8003ff0:	462b      	mov	r3, r5
 8003ff2:	2106      	movs	r1, #6
 8003ff4:	4638      	mov	r0, r7
 8003ff6:	f007 fc3f 	bl	800b878 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8003ffa:	462b      	mov	r3, r5
 8003ffc:	462a      	mov	r2, r5
 8003ffe:	4629      	mov	r1, r5
 8004000:	4638      	mov	r0, r7
 8004002:	9500      	str	r5, [sp, #0]
 8004004:	f007 fb4d 	bl	800b6a2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 8004008:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800400c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004010:	4638      	mov	r0, r7
 8004012:	f7ff f9ef 	bl	80033f4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004016:	e9d4 10ed 	ldrd	r1, r0, [r4, #948]	; 0x3b4
 800401a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800401e:	f007 fcdd 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8004022:	4b42      	ldr	r3, [pc, #264]	; (800412c <_ZN19ScreenGraphViewBaseC1Ev+0x408>)
        majorGrid = &major;
 8004024:	ed84 baf0 	vstr	s22, [r4, #960]	; 0x3c0
        color = newColor;
 8004028:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 800402c:	e9c4 36ec 	strd	r3, r6, [r4, #944]	; 0x3b0
        lineWidth = width;
 8004030:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004034:	f241 3388 	movw	r3, #5000	; 0x1388
 8004038:	f8c4 33b8 	str.w	r3, [r4, #952]	; 0x3b8
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 800403c:	ee1c 1a90 	vmov	r1, s25
        lineWidth = width;
 8004040:	f884 23bc 	strb.w	r2, [r4, #956]	; 0x3bc
 8004044:	4638      	mov	r0, r7
 8004046:	f007 fb37 	bl	800b6b8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800404a:	4632      	mov	r2, r6
 800404c:	e9d4 10fd 	ldrd	r1, r0, [r4, #1012]	; 0x3f4
 8004050:	f007 fcc4 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004054:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 8004058:	4b34      	ldr	r3, [pc, #208]	; (800412c <_ZN19ScreenGraphViewBaseC1Ev+0x408>)
        lineWidth = width;
 800405a:	f884 23fc 	strb.w	r2, [r4, #1020]	; 0x3fc
        majorGrid = &major;
 800405e:	ee1b 2a90 	vmov	r2, s23
        color = newColor;
 8004062:	f8c4 33f0 	str.w	r3, [r4, #1008]	; 0x3f0
        gridInterval = abs(interval);
 8004066:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800406a:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 800406e:	ee1d 1a10 	vmov	r1, s26
        dataScale = scale;
 8004072:	f8c4 63f4 	str.w	r6, [r4, #1012]	; 0x3f4
        majorGrid = &major;
 8004076:	f8c4 2400 	str.w	r2, [r4, #1024]	; 0x400
 800407a:	4638      	mov	r0, r7
 800407c:	f007 fb1c 	bl	800b6b8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004080:	4632      	mov	r2, r6
 8004082:	f8d4 1434 	ldr.w	r1, [r4, #1076]	; 0x434
 8004086:	f8d4 0438 	ldr.w	r0, [r4, #1080]	; 0x438
 800408a:	f007 fca7 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 800408e:	4b27      	ldr	r3, [pc, #156]	; (800412c <_ZN19ScreenGraphViewBaseC1Ev+0x408>)
 8004090:	f8c4 3430 	str.w	r3, [r4, #1072]	; 0x430
        gridInterval = abs(interval);
 8004094:	f242 7310 	movw	r3, #10000	; 0x2710
 8004098:	f8c4 3438 	str.w	r3, [r4, #1080]	; 0x438
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800409c:	ee1b 1a10 	vmov	r1, s22
        dataScale = scale;
 80040a0:	f8c4 6434 	str.w	r6, [r4, #1076]	; 0x434
 80040a4:	4638      	mov	r0, r7
        lineWidth = width;
 80040a6:	f884 a43c 	strb.w	sl, [r4, #1084]	; 0x43c
 80040aa:	f007 fb05 	bl	800b6b8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80040ae:	4632      	mov	r2, r6
 80040b0:	f8d4 1474 	ldr.w	r1, [r4, #1140]	; 0x474
 80040b4:	f8d4 0478 	ldr.w	r0, [r4, #1144]	; 0x478
 80040b8:	f007 fc90 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 80040bc:	4b1b      	ldr	r3, [pc, #108]	; (800412c <_ZN19ScreenGraphViewBaseC1Ev+0x408>)
 80040be:	f8c4 3470 	str.w	r3, [r4, #1136]	; 0x470
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 80040c2:	ee1b 1a90 	vmov	r1, s23
        dataScale = scale;
 80040c6:	f8c4 6474 	str.w	r6, [r4, #1140]	; 0x474
        gridInterval = abs(interval);
 80040ca:	f8c4 6478 	str.w	r6, [r4, #1144]	; 0x478
 80040ce:	4638      	mov	r0, r7
        lineWidth = width;
 80040d0:	f884 a47c 	strb.w	sl, [r4, #1148]	; 0x47c
 80040d4:	f007 faf0 	bl	800b6b8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80040d8:	4632      	mov	r2, r6
 80040da:	f8d4 14b4 	ldr.w	r1, [r4, #1204]	; 0x4b4
 80040de:	f8d4 04b8 	ldr.w	r0, [r4, #1208]	; 0x4b8
 80040e2:	f007 fc7b 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80040e6:	2396      	movs	r3, #150	; 0x96
        labelDecimals = decimals;
 80040e8:	f04f 0201 	mov.w	r2, #1
        dataScale = scale;
 80040ec:	f8c4 64b4 	str.w	r6, [r4, #1204]	; 0x4b4
 80040f0:	e022      	b.n	8004138 <_ZN19ScreenGraphViewBaseC1Ev+0x414>
 80040f2:	bf00      	nop
 80040f4:	08021ef4 	.word	0x08021ef4
 80040f8:	08022bac 	.word	0x08022bac
 80040fc:	08022b44 	.word	0x08022b44
 8004100:	08022ad0 	.word	0x08022ad0
 8004104:	08022448 	.word	0x08022448
 8004108:	08021d40 	.word	0x08021d40
 800410c:	08022720 	.word	0x08022720
 8004110:	08022398 	.word	0x08022398
 8004114:	08020ee4 	.word	0x08020ee4
 8004118:	08022854 	.word	0x08022854
 800411c:	08022964 	.word	0x08022964
 8004120:	08021720 	.word	0x08021720
 8004124:	08021edc 	.word	0x08021edc
 8004128:	08003bc9 	.word	0x08003bc9
 800412c:	ff1497c5 	.word	0xff1497c5
 8004130:	08021bb0 	.word	0x08021bb0
 8004134:	08021c68 	.word	0x08021c68
        labelInterval = abs(interval);
 8004138:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
class TypedText
 800413c:	2607      	movs	r6, #7
        color = newColor;
 800413e:	4ba7      	ldr	r3, [pc, #668]	; (80043dc <_ZN19ScreenGraphViewBaseC1Ev+0x6b8>)
 8004140:	f8c4 34b0 	str.w	r3, [r4, #1200]	; 0x4b0
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 8004144:	ee1d 1a90 	vmov	r1, s27
 8004148:	f8a4 64c0 	strh.w	r6, [r4, #1216]	; 0x4c0
        labelDecimals = decimals;
 800414c:	f8a4 24c6 	strh.w	r2, [r4, #1222]	; 0x4c6
 8004150:	4638      	mov	r0, r7
 8004152:	f007 fac3 	bl	800b6dc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 8004156:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800415a:	f8c4 237c 	str.w	r2, [r4, #892]	; 0x37c
        canvasPainter = &painter;
 800415e:	9a03      	ldr	r2, [sp, #12]
 8004160:	f8c4 2368 	str.w	r2, [r4, #872]	; 0x368
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8004164:	ee1c 1a10 	vmov	r1, s24
 8004168:	4638      	mov	r0, r7
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800416a:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 800416e:	f884 a36c 	strb.w	sl, [r4, #876]	; 0x36c
 8004172:	f007 faa1 	bl	800b6b8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(85, 211);
 8004176:	ee1a 0a10 	vmov	r0, s20
 800417a:	22d3      	movs	r2, #211	; 0xd3
 800417c:	2155      	movs	r1, #85	; 0x55
 800417e:	f7fe fd43 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
 8004182:	f04f 0208 	mov.w	r2, #8
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004186:	ee1a 0a10 	vmov	r0, s20
 800418a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
        originalPressed = bitmapPressed;
 800418e:	f8a4 2504 	strh.w	r2, [r4, #1284]	; 0x504
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004192:	a909      	add	r1, sp, #36	; 0x24
 8004194:	aa0a      	add	r2, sp, #40	; 0x28
 8004196:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800419a:	f008 ffca 	bl	800d132 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    txtShowWholeGraph.setXY(2, 218);
 800419e:	ee19 0a10 	vmov	r0, s18
 80041a2:	22da      	movs	r2, #218	; 0xda
 80041a4:	4651      	mov	r1, sl
 80041a6:	f7fe fd2f 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
 80041aa:	ae04      	add	r6, sp, #16
        color = newColor;
 80041ac:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 80041b0:	ee19 1a10 	vmov	r1, s18
        color = newColor;
 80041b4:	f8c4 2538 	str.w	r2, [r4, #1336]	; 0x538
        boundingArea = calculateBoundingArea();
 80041b8:	4630      	mov	r0, r6
        linespace = space;
 80041ba:	f8a4 553c 	strh.w	r5, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 80041be:	f008 fccd 	bl	800cb5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80041c2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80041c6:	f204 5344 	addw	r3, r4, #1348	; 0x544
 80041ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80041ce:	4b84      	ldr	r3, [pc, #528]	; (80043e0 <_ZN19ScreenGraphViewBaseC1Ev+0x6bc>)
 80041d0:	930a      	str	r3, [sp, #40]	; 0x28
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 80041d2:	ee19 0a10 	vmov	r0, s18
 80041d6:	2306      	movs	r3, #6
 80041d8:	a90a      	add	r1, sp, #40	; 0x28
 80041da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80041de:	f008 ff4d 	bl	800d07c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setXY(2, 168);
 80041e2:	22a8      	movs	r2, #168	; 0xa8
 80041e4:	4651      	mov	r1, sl
 80041e6:	4648      	mov	r0, r9
 80041e8:	f7fe fd0e 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80041ec:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80041f0:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
        boundingArea = calculateBoundingArea();
 80041f4:	f8d4 3550 	ldr.w	r3, [r4, #1360]	; 0x550
        linespace = space;
 80041f8:	f8a4 5584 	strh.w	r5, [r4, #1412]	; 0x584
        boundingArea = calculateBoundingArea();
 80041fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004200:	4649      	mov	r1, r9
 8004202:	4630      	mov	r0, r6
 8004204:	4798      	blx	r3
 8004206:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800420a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 800420e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 8004212:	f204 6334 	addw	r3, r4, #1588	; 0x634
 8004216:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004218:	4b72      	ldr	r3, [pc, #456]	; (80043e4 <_ZN19ScreenGraphViewBaseC1Ev+0x6c0>)
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	b92b      	cbnz	r3, 800422a <_ZN19ScreenGraphViewBaseC1Ev+0x506>
 800421e:	4b72      	ldr	r3, [pc, #456]	; (80043e8 <_ZN19ScreenGraphViewBaseC1Ev+0x6c4>)
 8004220:	4a72      	ldr	r2, [pc, #456]	; (80043ec <_ZN19ScreenGraphViewBaseC1Ev+0x6c8>)
 8004222:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004224:	4872      	ldr	r0, [pc, #456]	; (80043f0 <_ZN19ScreenGraphViewBaseC1Ev+0x6cc>)
 8004226:	f01b f99f 	bl	801f568 <__assert_func>
 800422a:	4b72      	ldr	r3, [pc, #456]	; (80043f4 <_ZN19ScreenGraphViewBaseC1Ev+0x6d0>)
 800422c:	881b      	ldrh	r3, [r3, #0]
 800422e:	2b03      	cmp	r3, #3
 8004230:	d803      	bhi.n	800423a <_ZN19ScreenGraphViewBaseC1Ev+0x516>
 8004232:	4b71      	ldr	r3, [pc, #452]	; (80043f8 <_ZN19ScreenGraphViewBaseC1Ev+0x6d4>)
 8004234:	4a6d      	ldr	r2, [pc, #436]	; (80043ec <_ZN19ScreenGraphViewBaseC1Ev+0x6c8>)
 8004236:	2161      	movs	r1, #97	; 0x61
 8004238:	e7f4      	b.n	8004224 <_ZN19ScreenGraphViewBaseC1Ev+0x500>
        return texts->getText(typedTextId);
 800423a:	4b70      	ldr	r3, [pc, #448]	; (80043fc <_ZN19ScreenGraphViewBaseC1Ev+0x6d8>)
 800423c:	2103      	movs	r1, #3
 800423e:	6818      	ldr	r0, [r3, #0]
 8004240:	f000 fa44 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 8004244:	2108      	movs	r1, #8
 8004246:	4603      	mov	r3, r0
 8004248:	4a6d      	ldr	r2, [pc, #436]	; (8004400 <_ZN19ScreenGraphViewBaseC1Ev+0x6dc>)
 800424a:	9803      	ldr	r0, [sp, #12]
 800424c:	f00e fe00 	bl	8012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8004250:	9a03      	ldr	r2, [sp, #12]
 8004252:	f8c4 2598 	str.w	r2, [r4, #1432]	; 0x598
    txtLastValue.resizeToCurrentText();
 8004256:	4648      	mov	r0, r9
 8004258:	f008 fef0 	bl	800d03c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800425c:	2305      	movs	r3, #5
 800425e:	4a60      	ldr	r2, [pc, #384]	; (80043e0 <_ZN19ScreenGraphViewBaseC1Ev+0x6bc>)
 8004260:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 8004264:	a90a      	add	r1, sp, #40	; 0x28
 8004266:	4648      	mov	r0, r9
 8004268:	920a      	str	r2, [sp, #40]	; 0x28
 800426a:	f008 ff07 	bl	800d07c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setXY(2, 183);
 800426e:	22b7      	movs	r2, #183	; 0xb7
 8004270:	ee18 0a10 	vmov	r0, s16
 8004274:	4651      	mov	r1, sl
 8004276:	f7fe fcc7 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
 800427a:	f8d4 359c 	ldr.w	r3, [r4, #1436]	; 0x59c
        linespace = space;
 800427e:	f8a4 55d0 	strh.w	r5, [r4, #1488]	; 0x5d0
        color = newColor;
 8004282:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004286:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800428a:	f8c4 15cc 	str.w	r1, [r4, #1484]	; 0x5cc
        boundingArea = calculateBoundingArea();
 800428e:	4630      	mov	r0, r6
 8004290:	ee18 1a10 	vmov	r1, s16
 8004294:	4798      	blx	r3
 8004296:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800429a:	f504 63bb 	add.w	r3, r4, #1496	; 0x5d8
 800429e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 80042a2:	f204 6144 	addw	r1, r4, #1604	; 0x644
 80042a6:	9103      	str	r1, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80042a8:	494e      	ldr	r1, [pc, #312]	; (80043e4 <_ZN19ScreenGraphViewBaseC1Ev+0x6c0>)
 80042aa:	680b      	ldr	r3, [r1, #0]
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	d0b6      	beq.n	800421e <_ZN19ScreenGraphViewBaseC1Ev+0x4fa>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80042b0:	4850      	ldr	r0, [pc, #320]	; (80043f4 <_ZN19ScreenGraphViewBaseC1Ev+0x6d0>)
 80042b2:	8803      	ldrh	r3, [r0, #0]
 80042b4:	2b02      	cmp	r3, #2
 80042b6:	d9bc      	bls.n	8004232 <_ZN19ScreenGraphViewBaseC1Ev+0x50e>
        return texts->getText(typedTextId);
 80042b8:	4b50      	ldr	r3, [pc, #320]	; (80043fc <_ZN19ScreenGraphViewBaseC1Ev+0x6d8>)
 80042ba:	4651      	mov	r1, sl
 80042bc:	6818      	ldr	r0, [r3, #0]
 80042be:	f000 fa05 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 80042c2:	2108      	movs	r1, #8
 80042c4:	4603      	mov	r3, r0
 80042c6:	4a4e      	ldr	r2, [pc, #312]	; (8004400 <_ZN19ScreenGraphViewBaseC1Ev+0x6dc>)
 80042c8:	9803      	ldr	r0, [sp, #12]
 80042ca:	f00e fdc1 	bl	8012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80042ce:	9a03      	ldr	r2, [sp, #12]
 80042d0:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
    txtMaxValue.resizeToCurrentText();
 80042d4:	ee18 0a10 	vmov	r0, s16
 80042d8:	f008 feb0 	bl	800d03c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80042dc:	f04f 0c04 	mov.w	ip, #4
 80042e0:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 80042e4:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 80042e8:	4661      	mov	r1, ip
 80042ea:	4a3d      	ldr	r2, [pc, #244]	; (80043e0 <_ZN19ScreenGraphViewBaseC1Ev+0x6bc>)
 80042ec:	920a      	str	r2, [sp, #40]	; 0x28
 80042ee:	ee18 0a10 	vmov	r0, s16
 80042f2:	f008 fec3 	bl	800d07c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setXY(2, 198);
 80042f6:	22c6      	movs	r2, #198	; 0xc6
 80042f8:	4651      	mov	r1, sl
 80042fa:	4640      	mov	r0, r8
 80042fc:	f7fe fc84 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
 8004300:	f8d4 35e8 	ldr.w	r3, [r4, #1512]	; 0x5e8
        linespace = space;
 8004304:	f8a4 561c 	strh.w	r5, [r4, #1564]	; 0x61c
        color = newColor;
 8004308:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 800430c:	4630      	mov	r0, r6
 800430e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004312:	f8c4 c618 	str.w	ip, [r4, #1560]	; 0x618
        boundingArea = calculateBoundingArea();
 8004316:	4641      	mov	r1, r8
 8004318:	4798      	blx	r3
 800431a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800431e:	f204 6324 	addw	r3, r4, #1572	; 0x624
 8004322:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004326:	492f      	ldr	r1, [pc, #188]	; (80043e4 <_ZN19ScreenGraphViewBaseC1Ev+0x6c0>)
 8004328:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 800432a:	f204 6654 	addw	r6, r4, #1620	; 0x654
 800432e:	2b00      	cmp	r3, #0
 8004330:	f43f af75 	beq.w	800421e <_ZN19ScreenGraphViewBaseC1Ev+0x4fa>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004334:	482f      	ldr	r0, [pc, #188]	; (80043f4 <_ZN19ScreenGraphViewBaseC1Ev+0x6d0>)
 8004336:	8803      	ldrh	r3, [r0, #0]
 8004338:	2b00      	cmp	r3, #0
 800433a:	f43f af7a 	beq.w	8004232 <_ZN19ScreenGraphViewBaseC1Ev+0x50e>
        return texts->getText(typedTextId);
 800433e:	4b2f      	ldr	r3, [pc, #188]	; (80043fc <_ZN19ScreenGraphViewBaseC1Ev+0x6d8>)
 8004340:	4629      	mov	r1, r5
 8004342:	6818      	ldr	r0, [r3, #0]
 8004344:	f000 f9c2 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 8004348:	4a2d      	ldr	r2, [pc, #180]	; (8004400 <_ZN19ScreenGraphViewBaseC1Ev+0x6dc>)
 800434a:	4603      	mov	r3, r0
 800434c:	210a      	movs	r1, #10
 800434e:	4630      	mov	r0, r6
 8004350:	f00e fd7e 	bl	8012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.resizeToCurrentText();
 8004354:	4640      	mov	r0, r8
 8004356:	f8c4 6630 	str.w	r6, [r4, #1584]	; 0x630
 800435a:	1d25      	adds	r5, r4, #4
 800435c:	f008 fe6e 	bl	800d03c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004360:	4a1f      	ldr	r2, [pc, #124]	; (80043e0 <_ZN19ScreenGraphViewBaseC1Ev+0x6bc>)
 8004362:	920a      	str	r2, [sp, #40]	; 0x28
 8004364:	f04f 0301 	mov.w	r3, #1
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 8004368:	a90a      	add	r1, sp, #40	; 0x28
 800436a:	4640      	mov	r0, r8
 800436c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004370:	f008 fe84 	bl	800d07c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004374:	ee18 1a90 	vmov	r1, s17
 8004378:	4628      	mov	r0, r5
 800437a:	f005 fcbf 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800437e:	4659      	mov	r1, fp
 8004380:	4628      	mov	r0, r5
 8004382:	f005 fcbb 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004386:	ee1a 1a90 	vmov	r1, s21
 800438a:	4628      	mov	r0, r5
 800438c:	f005 fcb6 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004390:	ee19 1a90 	vmov	r1, s19
 8004394:	4628      	mov	r0, r5
 8004396:	f005 fcb1 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800439a:	4639      	mov	r1, r7
 800439c:	4628      	mov	r0, r5
 800439e:	f005 fcad 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80043a2:	ee1a 1a10 	vmov	r1, s20
 80043a6:	4628      	mov	r0, r5
 80043a8:	f005 fca8 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80043ac:	ee19 1a10 	vmov	r1, s18
 80043b0:	4628      	mov	r0, r5
 80043b2:	f005 fca3 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80043b6:	4649      	mov	r1, r9
 80043b8:	4628      	mov	r0, r5
 80043ba:	f005 fc9f 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80043be:	ee18 1a10 	vmov	r1, s16
 80043c2:	4628      	mov	r0, r5
 80043c4:	f005 fc9a 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80043c8:	4628      	mov	r0, r5
 80043ca:	4641      	mov	r1, r8
 80043cc:	f005 fc96 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80043d0:	4620      	mov	r0, r4
 80043d2:	b00d      	add	sp, #52	; 0x34
 80043d4:	ecbd 8b0c 	vpop	{d8-d13}
 80043d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043dc:	ff1497c5 	.word	0xff1497c5
 80043e0:	08020ee4 	.word	0x08020ee4
 80043e4:	200175bc 	.word	0x200175bc
 80043e8:	080215ac 	.word	0x080215ac
 80043ec:	08021b6b 	.word	0x08021b6b
 80043f0:	08021629 	.word	0x08021629
 80043f4:	200175c0 	.word	0x200175c0
 80043f8:	08021670 	.word	0x08021670
 80043fc:	200175c8 	.word	0x200175c8
 8004400:	08021ba3 	.word	0x08021ba3

08004404 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004404:	4770      	bx	lr
	...

08004408 <_Z23getFont_verdana_10_4bppv>:
{
 8004408:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800440a:	4d16      	ldr	r5, [pc, #88]	; (8004464 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800440c:	782c      	ldrb	r4, [r5, #0]
 800440e:	f3bf 8f5b 	dmb	ish
 8004412:	f014 0401 	ands.w	r4, r4, #1
{
 8004416:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004418:	d120      	bne.n	800445c <_Z23getFont_verdana_10_4bppv+0x54>
 800441a:	4628      	mov	r0, r5
 800441c:	f01b f878 	bl	801f510 <__cxa_guard_acquire>
 8004420:	b1e0      	cbz	r0, 800445c <_Z23getFont_verdana_10_4bppv+0x54>
 8004422:	233f      	movs	r3, #63	; 0x3f
 8004424:	9307      	str	r3, [sp, #28]
 8004426:	4b10      	ldr	r3, [pc, #64]	; (8004468 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004428:	9306      	str	r3, [sp, #24]
 800442a:	4b10      	ldr	r3, [pc, #64]	; (800446c <_Z23getFont_verdana_10_4bppv+0x64>)
 800442c:	9305      	str	r3, [sp, #20]
 800442e:	2301      	movs	r3, #1
 8004430:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8004434:	9302      	str	r3, [sp, #8]
 8004436:	2204      	movs	r2, #4
 8004438:	2302      	movs	r3, #2
 800443a:	e9cd 3200 	strd	r3, r2, [sp]
 800443e:	490c      	ldr	r1, [pc, #48]	; (8004470 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004440:	480c      	ldr	r0, [pc, #48]	; (8004474 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004442:	9408      	str	r4, [sp, #32]
 8004444:	230a      	movs	r3, #10
 8004446:	2228      	movs	r2, #40	; 0x28
 8004448:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800444c:	f7fe fa40 	bl	80028d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004450:	4809      	ldr	r0, [pc, #36]	; (8004478 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004452:	f01b f8a7 	bl	801f5a4 <atexit>
 8004456:	4628      	mov	r0, r5
 8004458:	f01b f866 	bl	801f528 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800445c:	4805      	ldr	r0, [pc, #20]	; (8004474 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800445e:	b00d      	add	sp, #52	; 0x34
 8004460:	bd30      	pop	{r4, r5, pc}
 8004462:	bf00      	nop
 8004464:	200066a4 	.word	0x200066a4
 8004468:	0802465c 	.word	0x0802465c
 800446c:	0802469c 	.word	0x0802469c
 8004470:	080241dc 	.word	0x080241dc
 8004474:	200066a8 	.word	0x200066a8
 8004478:	08004405 	.word	0x08004405

0800447c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 800447c:	4770      	bx	lr
	...

08004480 <_Z23getFont_verdana_15_4bppv>:
{
 8004480:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004482:	4d16      	ldr	r5, [pc, #88]	; (80044dc <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004484:	782c      	ldrb	r4, [r5, #0]
 8004486:	f3bf 8f5b 	dmb	ish
 800448a:	f014 0401 	ands.w	r4, r4, #1
{
 800448e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004490:	d120      	bne.n	80044d4 <_Z23getFont_verdana_15_4bppv+0x54>
 8004492:	4628      	mov	r0, r5
 8004494:	f01b f83c 	bl	801f510 <__cxa_guard_acquire>
 8004498:	b1e0      	cbz	r0, 80044d4 <_Z23getFont_verdana_15_4bppv+0x54>
 800449a:	233f      	movs	r3, #63	; 0x3f
 800449c:	9307      	str	r3, [sp, #28]
 800449e:	4b10      	ldr	r3, [pc, #64]	; (80044e0 <_Z23getFont_verdana_15_4bppv+0x60>)
 80044a0:	9306      	str	r3, [sp, #24]
 80044a2:	4b10      	ldr	r3, [pc, #64]	; (80044e4 <_Z23getFont_verdana_15_4bppv+0x64>)
 80044a4:	9305      	str	r3, [sp, #20]
 80044a6:	2301      	movs	r3, #1
 80044a8:	e9cd 4303 	strd	r4, r3, [sp, #12]
 80044ac:	9302      	str	r3, [sp, #8]
 80044ae:	2204      	movs	r2, #4
 80044b0:	2303      	movs	r3, #3
 80044b2:	e9cd 3200 	strd	r3, r2, [sp]
 80044b6:	490c      	ldr	r1, [pc, #48]	; (80044e8 <_Z23getFont_verdana_15_4bppv+0x68>)
 80044b8:	480c      	ldr	r0, [pc, #48]	; (80044ec <_Z23getFont_verdana_15_4bppv+0x6c>)
 80044ba:	9408      	str	r4, [sp, #32]
 80044bc:	230f      	movs	r3, #15
 80044be:	2225      	movs	r2, #37	; 0x25
 80044c0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80044c4:	f7fe fa04 	bl	80028d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80044c8:	4809      	ldr	r0, [pc, #36]	; (80044f0 <_Z23getFont_verdana_15_4bppv+0x70>)
 80044ca:	f01b f86b 	bl	801f5a4 <atexit>
 80044ce:	4628      	mov	r0, r5
 80044d0:	f01b f82a 	bl	801f528 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 80044d4:	4805      	ldr	r0, [pc, #20]	; (80044ec <_Z23getFont_verdana_15_4bppv+0x6c>)
 80044d6:	b00d      	add	sp, #52	; 0x34
 80044d8:	bd30      	pop	{r4, r5, pc}
 80044da:	bf00      	nop
 80044dc:	200066d0 	.word	0x200066d0
 80044e0:	08024674 	.word	0x08024674
 80044e4:	080246a0 	.word	0x080246a0
 80044e8:	0802440c 	.word	0x0802440c
 80044ec:	200066d4 	.word	0x200066d4
 80044f0:	0800447d 	.word	0x0800447d

080044f4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80044f4:	4770      	bx	lr
	...

080044f8 <_Z23getFont_verdana_40_4bppv>:
{
 80044f8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80044fa:	4d15      	ldr	r5, [pc, #84]	; (8004550 <_Z23getFont_verdana_40_4bppv+0x58>)
 80044fc:	782c      	ldrb	r4, [r5, #0]
 80044fe:	f3bf 8f5b 	dmb	ish
 8004502:	f014 0401 	ands.w	r4, r4, #1
{
 8004506:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004508:	d11f      	bne.n	800454a <_Z23getFont_verdana_40_4bppv+0x52>
 800450a:	4628      	mov	r0, r5
 800450c:	f01b f800 	bl	801f510 <__cxa_guard_acquire>
 8004510:	b1d8      	cbz	r0, 800454a <_Z23getFont_verdana_40_4bppv+0x52>
 8004512:	233f      	movs	r3, #63	; 0x3f
 8004514:	9307      	str	r3, [sp, #28]
 8004516:	4b0f      	ldr	r3, [pc, #60]	; (8004554 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004518:	9306      	str	r3, [sp, #24]
 800451a:	4b0f      	ldr	r3, [pc, #60]	; (8004558 <_Z23getFont_verdana_40_4bppv+0x60>)
 800451c:	490f      	ldr	r1, [pc, #60]	; (800455c <_Z23getFont_verdana_40_4bppv+0x64>)
 800451e:	4810      	ldr	r0, [pc, #64]	; (8004560 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004520:	9408      	str	r4, [sp, #32]
 8004522:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004526:	2204      	movs	r2, #4
 8004528:	2301      	movs	r3, #1
 800452a:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800452e:	9300      	str	r3, [sp, #0]
 8004530:	2205      	movs	r2, #5
 8004532:	2328      	movs	r3, #40	; 0x28
 8004534:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004538:	9403      	str	r4, [sp, #12]
 800453a:	f7fe f9c9 	bl	80028d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800453e:	4809      	ldr	r0, [pc, #36]	; (8004564 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004540:	f01b f830 	bl	801f5a4 <atexit>
 8004544:	4628      	mov	r0, r5
 8004546:	f01a ffef 	bl	801f528 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800454a:	4805      	ldr	r0, [pc, #20]	; (8004560 <_Z23getFont_verdana_40_4bppv+0x68>)
 800454c:	b00d      	add	sp, #52	; 0x34
 800454e:	bd30      	pop	{r4, r5, pc}
 8004550:	200066fc 	.word	0x200066fc
 8004554:	08024688 	.word	0x08024688
 8004558:	080246a4 	.word	0x080246a4
 800455c:	08024614 	.word	0x08024614
 8004560:	20006700 	.word	0x20006700
 8004564:	080044f5 	.word	0x080044f5

08004568 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004568:	2000      	movs	r0, #0
 800456a:	4770      	bx	lr

0800456c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800456c:	2000      	movs	r0, #0
 800456e:	4770      	bx	lr

08004570 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004570:	b40e      	push	{r1, r2, r3}
 8004572:	b503      	push	{r0, r1, lr}
 8004574:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004576:	2100      	movs	r1, #0
{
 8004578:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800457c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800457e:	f00c fb1f 	bl	8010bc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004582:	b002      	add	sp, #8
 8004584:	f85d eb04 	ldr.w	lr, [sp], #4
 8004588:	b003      	add	sp, #12
 800458a:	4770      	bx	lr

0800458c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800458c:	b40c      	push	{r2, r3}
 800458e:	b507      	push	{r0, r1, r2, lr}
 8004590:	ab04      	add	r3, sp, #16
 8004592:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004596:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004598:	f00c fb12 	bl	8010bc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800459c:	b003      	add	sp, #12
 800459e:	f85d eb04 	ldr.w	lr, [sp], #4
 80045a2:	b002      	add	sp, #8
 80045a4:	4770      	bx	lr
	...

080045a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80045a8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80045aa:	b510      	push	{r4, lr}
 80045ac:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80045ae:	b373      	cbz	r3, 800460e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80045b0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80045b2:	b92b      	cbnz	r3, 80045c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80045b4:	4b18      	ldr	r3, [pc, #96]	; (8004618 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80045b6:	4a19      	ldr	r2, [pc, #100]	; (800461c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80045b8:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80045ba:	4819      	ldr	r0, [pc, #100]	; (8004620 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80045bc:	f01a ffd4 	bl	801f568 <__assert_func>
            return buffer[pos];
 80045c0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80045c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80045c6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80045c8:	b30b      	cbz	r3, 800460e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80045ca:	f00d fe92 	bl	80122f2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80045ce:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80045d0:	2b01      	cmp	r3, #1
 80045d2:	d803      	bhi.n	80045dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80045d4:	4b13      	ldr	r3, [pc, #76]	; (8004624 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80045d6:	4a14      	ldr	r2, [pc, #80]	; (8004628 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80045d8:	21c5      	movs	r1, #197	; 0xc5
 80045da:	e7ee      	b.n	80045ba <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80045dc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80045de:	1c53      	adds	r3, r2, #1
 80045e0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80045e2:	2b09      	cmp	r3, #9
 80045e4:	4619      	mov	r1, r3
 80045e6:	bf88      	it	hi
 80045e8:	f1a3 010a 	subhi.w	r1, r3, #10
 80045ec:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80045f0:	f640 103f 	movw	r0, #2367	; 0x93f
 80045f4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80045f6:	4281      	cmp	r1, r0
 80045f8:	d109      	bne.n	800460e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80045fa:	2b0a      	cmp	r3, #10
 80045fc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004600:	bf28      	it	cs
 8004602:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004604:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004608:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800460a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800460c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800460e:	4620      	mov	r0, r4
}
 8004610:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004614:	f00d bd70 	b.w	80120f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004618:	08021f24 	.word	0x08021f24
 800461c:	08021f2d 	.word	0x08021f2d
 8004620:	08021fd8 	.word	0x08021fd8
 8004624:	08022022 	.word	0x08022022
 8004628:	08022030 	.word	0x08022030

0800462c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800462c:	f00d bd2b 	b.w	8012086 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004630 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004630:	b510      	push	{r4, lr}
 8004632:	b086      	sub	sp, #24
 8004634:	ac02      	add	r4, sp, #8
 8004636:	e884 0006 	stmia.w	r4, {r1, r2}
 800463a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800463c:	ab0a      	add	r3, sp, #40	; 0x28
 800463e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004640:	9301      	str	r3, [sp, #4]
 8004642:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004644:	9300      	str	r3, [sp, #0]
 8004646:	4621      	mov	r1, r4
 8004648:	9b08      	ldr	r3, [sp, #32]
 800464a:	f00a ffbe 	bl	800f5ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800464e:	b006      	add	sp, #24
 8004650:	bd10      	pop	{r4, pc}
	...

08004654 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004654:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004656:	bb18      	cbnz	r0, 80046a0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004658:	4b12      	ldr	r3, [pc, #72]	; (80046a4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800465a:	4813      	ldr	r0, [pc, #76]	; (80046a8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	4913      	ldr	r1, [pc, #76]	; (80046ac <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004660:	b1b3      	cbz	r3, 8004690 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004662:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004664:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004666:	441a      	add	r2, r3
 8004668:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800466a:	685a      	ldr	r2, [r3, #4]
 800466c:	441a      	add	r2, r3
 800466e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004670:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004672:	4b0f      	ldr	r3, [pc, #60]	; (80046b0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004674:	2200      	movs	r2, #0
 8004676:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004678:	f000 f838 	bl	80046ec <_ZN17TypedTextDatabase8getFontsEv>
 800467c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800467e:	f000 f833 	bl	80046e8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004682:	4b0c      	ldr	r3, [pc, #48]	; (80046b4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004684:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004686:	4b0c      	ldr	r3, [pc, #48]	; (80046b8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004688:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800468a:	4b0c      	ldr	r3, [pc, #48]	; (80046bc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800468c:	8018      	strh	r0, [r3, #0]
    }
}
 800468e:	e007      	b.n	80046a0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004690:	4b0b      	ldr	r3, [pc, #44]	; (80046c0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004692:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004694:	4b0b      	ldr	r3, [pc, #44]	; (80046c4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004696:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004698:	4b0b      	ldr	r3, [pc, #44]	; (80046c8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800469a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800469c:	2c00      	cmp	r4, #0
 800469e:	d1e8      	bne.n	8004672 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80046a0:	bd38      	pop	{r3, r4, r5, pc}
 80046a2:	bf00      	nop
 80046a4:	20006728 	.word	0x20006728
 80046a8:	2000672c 	.word	0x2000672c
 80046ac:	20006730 	.word	0x20006730
 80046b0:	20006734 	.word	0x20006734
 80046b4:	200175bc 	.word	0x200175bc
 80046b8:	200175c4 	.word	0x200175c4
 80046bc:	200175c0 	.word	0x200175c0
 80046c0:	080246dc 	.word	0x080246dc
 80046c4:	080246a8 	.word	0x080246a8
 80046c8:	08024834 	.word	0x08024834

080046cc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80046cc:	4b04      	ldr	r3, [pc, #16]	; (80046e0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80046ce:	681b      	ldr	r3, [r3, #0]
 80046d0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80046d4:	4b03      	ldr	r3, [pc, #12]	; (80046e4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80046d6:	681b      	ldr	r3, [r3, #0]
}
 80046d8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80046dc:	4770      	bx	lr
 80046de:	bf00      	nop
 80046e0:	20006730 	.word	0x20006730
 80046e4:	2000672c 	.word	0x2000672c

080046e8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80046e8:	200d      	movs	r0, #13
 80046ea:	4770      	bx	lr

080046ec <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80046ec:	4800      	ldr	r0, [pc, #0]	; (80046f0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80046ee:	4770      	bx	lr
 80046f0:	20006738 	.word	0x20006738

080046f4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80046f4:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 80046f6:	f7ff fec3 	bl	8004480 <_Z23getFont_verdana_15_4bppv>
};
 80046fa:	4c04      	ldr	r4, [pc, #16]	; (800470c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80046fc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80046fe:	f7ff fefb 	bl	80044f8 <_Z23getFont_verdana_40_4bppv>
};
 8004702:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004704:	f7ff fe80 	bl	8004408 <_Z23getFont_verdana_10_4bppv>
};
 8004708:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800470a:	bd10      	pop	{r4, pc}
 800470c:	20006738 	.word	0x20006738

08004710 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004710:	4770      	bx	lr

08004712 <_ZN19FrontendApplicationD0Ev>:
 8004712:	b510      	push	{r4, lr}
 8004714:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004718:	4604      	mov	r4, r0
 800471a:	f01a fef7 	bl	801f50c <_ZdlPvj>
 800471e:	4620      	mov	r0, r4
 8004720:	bd10      	pop	{r4, pc}

08004722 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004722:	b510      	push	{r4, lr}
 8004724:	4604      	mov	r4, r0
    {
        model.tick();
 8004726:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800472a:	f000 f813 	bl	8004754 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800472e:	4620      	mov	r0, r4
    }
 8004730:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004734:	f00b bac2 	b.w	800fcbc <_ZN8touchgfx11Application15handleTickEventEv>

08004738 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004738:	b510      	push	{r4, lr}
 800473a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800473c:	f7fd fec8 	bl	80024d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004740:	4b01      	ldr	r3, [pc, #4]	; (8004748 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004742:	6023      	str	r3, [r4, #0]
{

}
 8004744:	4620      	mov	r0, r4
 8004746:	bd10      	pop	{r4, pc}
 8004748:	0802210c 	.word	0x0802210c

0800474c <_ZN5ModelC1Ev>:
#include "Charger.h"
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //ustawienie na sztywno pradu ladowania
int licznik;
Model::Model() : modelListener(0)
 800474c:	2200      	movs	r2, #0
 800474e:	6002      	str	r2, [r0, #0]
{

}
 8004750:	4770      	bx	lr
	...

08004754 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004754:	b570      	push	{r4, r5, r6, lr}
 8004756:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004758:	6800      	ldr	r0, [r0, #0]
#ifndef SIMULATOR
if(ladowarka.narysujPunktNaWykresie){
 800475a:	4d0c      	ldr	r5, [pc, #48]	; (800478c <_ZN5Model4tickEv+0x38>)
modelListener->UpdateBatteryVoltage();
 800475c:	6803      	ldr	r3, [r0, #0]
 800475e:	689b      	ldr	r3, [r3, #8]
 8004760:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004762:	f8d5 3884 	ldr.w	r3, [r5, #2180]	; 0x884
 8004766:	b133      	cbz	r3, 8004776 <_ZN5Model4tickEv+0x22>
	modelListener->DrawPoint();
 8004768:	6820      	ldr	r0, [r4, #0]
 800476a:	6803      	ldr	r3, [r0, #0]
 800476c:	68db      	ldr	r3, [r3, #12]
 800476e:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004770:	2300      	movs	r3, #0
 8004772:	f8c5 3884 	str.w	r3, [r5, #2180]	; 0x884
#endif



/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004776:	6820      	ldr	r0, [r4, #0]
 8004778:	6803      	ldr	r3, [r0, #0]
 800477a:	691b      	ldr	r3, [r3, #16]
 800477c:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 800477e:	6820      	ldr	r0, [r4, #0]
 8004780:	6803      	ldr	r3, [r0, #0]
}
 8004782:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayRunningTime();
 8004786:	695b      	ldr	r3, [r3, #20]
 8004788:	4718      	bx	r3
 800478a:	bf00      	nop
 800478c:	20005dc4 	.word	0x20005dc4

08004790 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004790:	4770      	bx	lr

08004792 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004792:	4770      	bx	lr

08004794 <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004794:	4770      	bx	lr

08004796 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004796:	4770      	bx	lr

08004798 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004798:	3804      	subs	r0, #4
 800479a:	4770      	bx	lr

0800479c <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 800479c:	4770      	bx	lr

0800479e <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 800479e:	68c0      	ldr	r0, [r0, #12]
 80047a0:	6803      	ldr	r3, [r0, #0]
 80047a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80047a4:	4718      	bx	r3

080047a6 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 80047a6:	f1a0 0004 	sub.w	r0, r0, #4
 80047aa:	f7ff bff8 	b.w	800479e <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

080047ae <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 80047ae:	b510      	push	{r4, lr}
 80047b0:	2110      	movs	r1, #16
 80047b2:	4604      	mov	r4, r0
 80047b4:	f01a feaa 	bl	801f50c <_ZdlPvj>
 80047b8:	4620      	mov	r0, r4
 80047ba:	bd10      	pop	{r4, pc}

080047bc <_ZThn4_N16Screen1PresenterD0Ev>:
 80047bc:	f1a0 0004 	sub.w	r0, r0, #4
 80047c0:	e7f5      	b.n	80047ae <_ZN16Screen1PresenterD0Ev>
	...

080047c4 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 80047c4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80047c6:	2200      	movs	r2, #0
 80047c8:	6082      	str	r2, [r0, #8]
    : view(v)
 80047ca:	4a04      	ldr	r2, [pc, #16]	; (80047dc <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 80047cc:	60c1      	str	r1, [r0, #12]
 80047ce:	f102 0408 	add.w	r4, r2, #8
 80047d2:	3224      	adds	r2, #36	; 0x24
 80047d4:	6004      	str	r4, [r0, #0]
 80047d6:	6042      	str	r2, [r0, #4]
}
 80047d8:	bd10      	pop	{r4, pc}
 80047da:	bf00      	nop
 80047dc:	08022150 	.word	0x08022150

080047e0 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80047e0:	4770      	bx	lr

080047e2 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 80047e2:	4770      	bx	lr

080047e4 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 80047e4:	4b03      	ldr	r3, [pc, #12]	; (80047f4 <_ZN11Screen1View18ButtonStartClickedEv+0x10>)
 80047e6:	681a      	ldr	r2, [r3, #0]
 80047e8:	4b03      	ldr	r3, [pc, #12]	; (80047f8 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 80047ea:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 80047ec:	2201      	movs	r2, #1
 80047ee:	60da      	str	r2, [r3, #12]
#endif
}
 80047f0:	4770      	bx	lr
 80047f2:	bf00      	nop
 80047f4:	20000014 	.word	0x20000014
 80047f8:	20002dc4 	.word	0x20002dc4

080047fc <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+10;
 80047fc:	4b0b      	ldr	r3, [pc, #44]	; (800482c <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 80047fe:	681a      	ldr	r2, [r3, #0]
{
 8004800:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+10;
 8004802:	320a      	adds	r2, #10
	if (PradLadowania >400){
 8004804:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004808:	bfc8      	it	gt
 800480a:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 800480e:	601a      	str	r2, [r3, #0]
{
 8004810:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004812:	681b      	ldr	r3, [r3, #0]
 8004814:	4a06      	ldr	r2, [pc, #24]	; (8004830 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004816:	210a      	movs	r1, #10
 8004818:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 800481c:	f00e fb18 	bl	8012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004820:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004824:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004828:	f00c baeb 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800482c:	20000014 	.word	0x20000014
 8004830:	0802218c 	.word	0x0802218c

08004834 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-10;
 8004834:	4b0a      	ldr	r3, [pc, #40]	; (8004860 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004836:	681a      	ldr	r2, [r3, #0]
{
 8004838:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-10;
 800483a:	3a0a      	subs	r2, #10
    if (PradLadowania <10){
 800483c:	2a09      	cmp	r2, #9
	PradLadowania=10;}
 800483e:	bfd8      	it	le
 8004840:	220a      	movle	r2, #10
 8004842:	601a      	str	r2, [r3, #0]
{
 8004844:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	4a06      	ldr	r2, [pc, #24]	; (8004864 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 800484a:	210a      	movs	r1, #10
 800484c:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8004850:	f00e fafe 	bl	8012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004854:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004858:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 800485c:	f00c bad1 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004860:	20000014 	.word	0x20000014
 8004864:	0802218c 	.word	0x0802218c

08004868 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004868:	f7fe b8a5 	b.w	80029b6 <_ZN15Screen1ViewBase11setupScreenEv>

0800486c <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 800486c:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 800486e:	4b09      	ldr	r3, [pc, #36]	; (8004894 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8004870:	4a09      	ldr	r2, [pc, #36]	; (8004898 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8004876:	4604      	mov	r4, r0
 8004878:	ab01      	add	r3, sp, #4
 800487a:	210a      	movs	r1, #10
 800487c:	f500 7071 	add.w	r0, r0, #964	; 0x3c4
 8004880:	f00e fca2 	bl	80131c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8004884:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8004888:	b002      	add	sp, #8
 800488a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 800488e:	f00c bab8 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004892:	bf00      	nop
 8004894:	20002dc4 	.word	0x20002dc4
 8004898:	0802218f 	.word	0x0802218f

0800489c <_ZN11Screen1ViewD0Ev>:
 800489c:	b510      	push	{r4, lr}
 800489e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80048a2:	4604      	mov	r4, r0
 80048a4:	f01a fe32 	bl	801f50c <_ZdlPvj>
 80048a8:	4620      	mov	r0, r4
 80048aa:	bd10      	pop	{r4, pc}

080048ac <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 80048ac:	b510      	push	{r4, lr}
 80048ae:	4604      	mov	r4, r0
 80048b0:	f7fe faee 	bl	8002e90 <_ZN15Screen1ViewBaseC1Ev>
 80048b4:	4b07      	ldr	r3, [pc, #28]	; (80048d4 <_ZN11Screen1ViewC1Ev+0x28>)
 80048b6:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 80048b8:	4b07      	ldr	r3, [pc, #28]	; (80048d8 <_ZN11Screen1ViewC1Ev+0x2c>)
 80048ba:	4a08      	ldr	r2, [pc, #32]	; (80048dc <_ZN11Screen1ViewC1Ev+0x30>)
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	210a      	movs	r1, #10
 80048c0:	f504 706c 	add.w	r0, r4, #944	; 0x3b0
 80048c4:	f00e fac4 	bl	8012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80048c8:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 80048cc:	f00c fa99 	bl	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80048d0:	4620      	mov	r0, r4
 80048d2:	bd10      	pop	{r4, pc}
 80048d4:	0802219c 	.word	0x0802219c
 80048d8:	20000014 	.word	0x20000014
 80048dc:	0802218c 	.word	0x0802218c

080048e0 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 80048e0:	4770      	bx	lr

080048e2 <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 80048e2:	4770      	bx	lr

080048e4 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 80048e4:	3804      	subs	r0, #4
 80048e6:	4770      	bx	lr

080048e8 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 80048e8:	4770      	bx	lr

080048ea <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 80048ea:	68c0      	ldr	r0, [r0, #12]
 80048ec:	6803      	ldr	r3, [r0, #0]
 80048ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80048f0:	4718      	bx	r3

080048f2 <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 80048f2:	f1a0 0004 	sub.w	r0, r0, #4
 80048f6:	f7ff bff8 	b.w	80048ea <_ZN20ScreenGraphPresenter9DrawPointEv>

080048fa <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 80048fa:	68c0      	ldr	r0, [r0, #12]
 80048fc:	6803      	ldr	r3, [r0, #0]
 80048fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004900:	4718      	bx	r3

08004902 <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 8004902:	f1a0 0004 	sub.w	r0, r0, #4
 8004906:	f7ff bff8 	b.w	80048fa <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

0800490a <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 800490a:	68c0      	ldr	r0, [r0, #12]
 800490c:	6803      	ldr	r3, [r0, #0]
 800490e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004910:	4718      	bx	r3

08004912 <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 8004912:	f1a0 0004 	sub.w	r0, r0, #4
 8004916:	f7ff bff8 	b.w	800490a <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

0800491a <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 800491a:	b510      	push	{r4, lr}
 800491c:	2110      	movs	r1, #16
 800491e:	4604      	mov	r4, r0
 8004920:	f01a fdf4 	bl	801f50c <_ZdlPvj>
 8004924:	4620      	mov	r0, r4
 8004926:	bd10      	pop	{r4, pc}

08004928 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8004928:	f1a0 0004 	sub.w	r0, r0, #4
 800492c:	e7f5      	b.n	800491a <_ZN20ScreenGraphPresenterD0Ev>
	...

08004930 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8004930:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004932:	2200      	movs	r2, #0
 8004934:	6082      	str	r2, [r0, #8]
    : view(v)
 8004936:	4a04      	ldr	r2, [pc, #16]	; (8004948 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8004938:	60c1      	str	r1, [r0, #12]
 800493a:	f102 0408 	add.w	r4, r2, #8
 800493e:	322c      	adds	r2, #44	; 0x2c
 8004940:	6004      	str	r4, [r0, #0]
 8004942:	6042      	str	r2, [r0, #4]
}
 8004944:	bd10      	pop	{r4, pc}
 8004946:	bf00      	nop
 8004948:	080221d8 	.word	0x080221d8

0800494c <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 800494c:	4770      	bx	lr

0800494e <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 800494e:	4770      	bx	lr

08004950 <_ZN15ScreenGraphView10DrawPoint2Ev>:

void ScreenGraphView::DrawPoint2(){
 8004950:	4603      	mov	r3, r0
#ifndef SIMULATOR
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8004952:	4a17      	ldr	r2, [pc, #92]	; (80049b0 <_ZN15ScreenGraphView10DrawPoint2Ev+0x60>)
        const float fs = f * (float)scale;
 8004954:	edd3 7a4d 	vldr	s15, [r3, #308]	; 0x134
 8004958:	ed92 7a00 	vldr	s14, [r2]
 800495c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004960:	f500 7080 	add.w	r0, r0, #256	; 0x100
 8004964:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004968:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800496c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004970:	db09      	blt.n	8004986 <_ZN15ScreenGraphView10DrawPoint2Ev+0x36>
            return (int)(fs + 0.5f);
 8004972:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004976:	ee77 7a87 	vadd.f32	s15, s15, s14
 800497a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800497e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004982:	f007 b885 	b.w	800ba90 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8004986:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800498a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800498e:	ee17 3a10 	vmov	r3, s14
 8004992:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004996:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800499a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800499e:	1e59      	subs	r1, r3, #1
 80049a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049a4:	ee17 3a90 	vmov	r3, s15
 80049a8:	440b      	add	r3, r1
 80049aa:	4619      	mov	r1, r3
 80049ac:	e7e9      	b.n	8004982 <_ZN15ScreenGraphView10DrawPoint2Ev+0x32>
 80049ae:	bf00      	nop
 80049b0:	20002dc4 	.word	0x20002dc4

080049b4 <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
}

void ScreenGraphView::DisplayRunningTime2(){
#ifndef SIMULATOR
	int sec, h, m, s;
	sec=ladowarka.CzsasLadowaniaWSec;
 80049b4:	4b10      	ldr	r3, [pc, #64]	; (80049f8 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x44>)
void ScreenGraphView::DisplayRunningTime2(){
 80049b6:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 80049b8:	f8d3 2888 	ldr.w	r2, [r3, #2184]	; 0x888
	h = (sec/3600);
	m = (sec -(3600*h))/60;
 80049bc:	490f      	ldr	r1, [pc, #60]	; (80049fc <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 80049be:	4604      	mov	r4, r0
	h = (sec/3600);
 80049c0:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 80049c4:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 80049c8:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 80049cc:	fb01 2203 	mla	r2, r1, r3, r2
 80049d0:	213c      	movs	r1, #60	; 0x3c
 80049d2:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 80049d6:	fb00 2201 	mla	r2, r0, r1, r2

	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 80049da:	e9cd 1200 	strd	r1, r2, [sp]
 80049de:	f204 6054 	addw	r0, r4, #1620	; 0x654
 80049e2:	4a07      	ldr	r2, [pc, #28]	; (8004a00 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
 80049e4:	210a      	movs	r1, #10
 80049e6:	f00e fa33 	bl	8012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 80049ea:	f504 60bd 	add.w	r0, r4, #1512	; 0x5e8
#endif
}
 80049ee:	b002      	add	sp, #8
 80049f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 80049f4:	f00c ba05 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 80049f8:	20005dc4 	.word	0x20005dc4
 80049fc:	fffff1f0 	.word	0xfffff1f0
 8004a00:	0802221c 	.word	0x0802221c

08004a04 <_ZN15ScreenGraphViewD0Ev>:
 8004a04:	b510      	push	{r4, lr}
 8004a06:	f641 1138 	movw	r1, #6456	; 0x1938
 8004a0a:	4604      	mov	r4, r0
 8004a0c:	f01a fd7e 	bl	801f50c <_ZdlPvj>
 8004a10:	4620      	mov	r0, r4
 8004a12:	bd10      	pop	{r4, pc}

08004a14 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8004a14:	b510      	push	{r4, lr}
 8004a16:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8004a18:	f7ff f82b 	bl	8003a72 <_ZN19ScreenGraphViewBase11setupScreenEv>
        const float fs = f * (float)scale;
 8004a1c:	f8d4 34b4 	ldr.w	r3, [r4, #1204]	; 0x4b4
 8004a20:	ed9f 6a47 	vldr	s12, [pc, #284]	; 8004b40 <_ZN15ScreenGraphView11setupScreenEv+0x12c>
 8004a24:	ee07 3a90 	vmov	s15, r3
 8004a28:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8004a2c:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8004a30:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004a34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a38:	db46      	blt.n	8004ac8 <_ZN15ScreenGraphView11setupScreenEv+0xb4>
            return (int)(fs + 0.5f);
 8004a3a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8004a3e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004a42:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8004a46:	ee17 3a90 	vmov	r3, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8004a4a:	2b00      	cmp	r3, #0
 8004a4c:	bfb8      	it	lt
 8004a4e:	425b      	neglt	r3, r3
        labelInterval = abs(interval);
 8004a50:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        const float fs = f * (float)scale;
 8004a54:	f8d4 3474 	ldr.w	r3, [r4, #1140]	; 0x474
 8004a58:	ee07 3a90 	vmov	s15, r3
 8004a5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a60:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 8004a64:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a6c:	db40      	blt.n	8004af0 <_ZN15ScreenGraphView11setupScreenEv+0xdc>
            return (int)(fs + 0.5f);
 8004a6e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a72:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a7a:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8004a7e:	edd4 7afd 	vldr	s15, [r4, #1012]	; 0x3f4
 8004a82:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8004b44 <_ZN15ScreenGraphView11setupScreenEv+0x130>
 8004a86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004a90:	bfb8      	it	lt
 8004a92:	425b      	neglt	r3, r3
        if (fs >= 0)
 8004a94:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8004a9c:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
 8004aa0:	db3a      	blt.n	8004b18 <_ZN15ScreenGraphView11setupScreenEv+0x104>
            return (int)(fs + 0.5f);
 8004aa2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004aa6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004aaa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004aae:	ee17 3a90 	vmov	r3, s15
 8004ab2:	2b00      	cmp	r3, #0
 8004ab4:	bfb8      	it	lt
 8004ab6:	425b      	neglt	r3, r3
 8004ab8:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
     dynamicGraph1.invalidate();
 8004abc:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 8004ac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph1.invalidate();
 8004ac4:	f00c b99d 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8004ac8:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8004acc:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8004ad0:	ee16 3a90 	vmov	r3, s13
 8004ad4:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004ad8:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8004adc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004ae0:	3b01      	subs	r3, #1
 8004ae2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8004ae6:	ee17 2a10 	vmov	r2, s14
 8004aea:	441a      	add	r2, r3
 8004aec:	4613      	mov	r3, r2
 8004aee:	e7ac      	b.n	8004a4a <_ZN15ScreenGraphView11setupScreenEv+0x36>
 8004af0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004af4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004af8:	ee17 3a10 	vmov	r3, s14
 8004afc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004b00:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004b04:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004b08:	3b01      	subs	r3, #1
 8004b0a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b0e:	ee17 2a90 	vmov	r2, s15
 8004b12:	441a      	add	r2, r3
 8004b14:	4613      	mov	r3, r2
 8004b16:	e7b2      	b.n	8004a7e <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 8004b18:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004b1c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004b20:	ee17 3a10 	vmov	r3, s14
 8004b24:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004b28:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004b2c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004b30:	3b01      	subs	r3, #1
 8004b32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b36:	ee17 2a90 	vmov	r2, s15
 8004b3a:	441a      	add	r2, r3
 8004b3c:	4613      	mov	r3, r2
 8004b3e:	e7b8      	b.n	8004ab2 <_ZN15ScreenGraphView11setupScreenEv+0x9e>
 8004b40:	3dcccccd 	.word	0x3dcccccd
 8004b44:	3d4ccccd 	.word	0x3d4ccccd

08004b48 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8004b48:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8004b4a:	4d0f      	ldr	r5, [pc, #60]	; (8004b88 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x40>)
 8004b4c:	4a0f      	ldr	r2, [pc, #60]	; (8004b8c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x44>)
 8004b4e:	682b      	ldr	r3, [r5, #0]
 8004b50:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8004b52:	4604      	mov	r4, r0
 8004b54:	ab01      	add	r3, sp, #4
 8004b56:	2108      	movs	r1, #8
 8004b58:	f200 6034 	addw	r0, r0, #1588	; 0x634
 8004b5c:	f00e fb34 	bl	80131c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 8004b60:	686b      	ldr	r3, [r5, #4]
 8004b62:	4a0a      	ldr	r2, [pc, #40]	; (8004b8c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x44>)
 8004b64:	9301      	str	r3, [sp, #4]
 8004b66:	2108      	movs	r1, #8
 8004b68:	ab01      	add	r3, sp, #4
 8004b6a:	f204 6044 	addw	r0, r4, #1604	; 0x644
 8004b6e:	f00e fb2b 	bl	80131c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8004b72:	f204 509c 	addw	r0, r4, #1436	; 0x59c
 8004b76:	f00c f944 	bl	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 8004b7a:	f504 60aa 	add.w	r0, r4, #1360	; 0x550
}
 8004b7e:	b003      	add	sp, #12
 8004b80:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 8004b84:	f00c b93d 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004b88:	20002dc4 	.word	0x20002dc4
 8004b8c:	0802218f 	.word	0x0802218f

08004b90 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8004b90:	b510      	push	{r4, lr}
 8004b92:	4604      	mov	r4, r0
 8004b94:	f7ff f8c6 	bl	8003d24 <_ZN19ScreenGraphViewBaseC1Ev>
 8004b98:	4b01      	ldr	r3, [pc, #4]	; (8004ba0 <_ZN15ScreenGraphViewC1Ev+0x10>)
 8004b9a:	6023      	str	r3, [r4, #0]
}
 8004b9c:	4620      	mov	r0, r4
 8004b9e:	bd10      	pop	{r4, pc}
 8004ba0:	08022234 	.word	0x08022234

08004ba4 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8004ba4:	20f0      	movs	r0, #240	; 0xf0
 8004ba6:	4770      	bx	lr

08004ba8 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8004ba8:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8004bac:	4770      	bx	lr

08004bae <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8004bae:	2029      	movs	r0, #41	; 0x29
 8004bb0:	f7fc be9e 	b.w	80018f0 <LCD_IO_WriteReg>

08004bb4 <ili9341_DisplayOff>:
 8004bb4:	2028      	movs	r0, #40	; 0x28
 8004bb6:	f7fc be9b 	b.w	80018f0 <LCD_IO_WriteReg>

08004bba <ili9341_Init>:
{
 8004bba:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004bbc:	f7fc fe6c 	bl	8001898 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8004bc0:	20ca      	movs	r0, #202	; 0xca
 8004bc2:	f7fc fe95 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004bc6:	20c3      	movs	r0, #195	; 0xc3
 8004bc8:	f7fc fe76 	bl	80018b8 <LCD_IO_WriteData>
 8004bcc:	2008      	movs	r0, #8
 8004bce:	f7fc fe73 	bl	80018b8 <LCD_IO_WriteData>
 8004bd2:	2050      	movs	r0, #80	; 0x50
 8004bd4:	f7fc fe70 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004bd8:	20cf      	movs	r0, #207	; 0xcf
 8004bda:	f7fc fe89 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004bde:	2000      	movs	r0, #0
 8004be0:	f7fc fe6a 	bl	80018b8 <LCD_IO_WriteData>
 8004be4:	20c1      	movs	r0, #193	; 0xc1
 8004be6:	f7fc fe67 	bl	80018b8 <LCD_IO_WriteData>
 8004bea:	2030      	movs	r0, #48	; 0x30
 8004bec:	f7fc fe64 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004bf0:	20ed      	movs	r0, #237	; 0xed
 8004bf2:	f7fc fe7d 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004bf6:	2064      	movs	r0, #100	; 0x64
 8004bf8:	f7fc fe5e 	bl	80018b8 <LCD_IO_WriteData>
 8004bfc:	2003      	movs	r0, #3
 8004bfe:	f7fc fe5b 	bl	80018b8 <LCD_IO_WriteData>
 8004c02:	2012      	movs	r0, #18
 8004c04:	f7fc fe58 	bl	80018b8 <LCD_IO_WriteData>
 8004c08:	2081      	movs	r0, #129	; 0x81
 8004c0a:	f7fc fe55 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c0e:	20e8      	movs	r0, #232	; 0xe8
 8004c10:	f7fc fe6e 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c14:	2085      	movs	r0, #133	; 0x85
 8004c16:	f7fc fe4f 	bl	80018b8 <LCD_IO_WriteData>
 8004c1a:	2000      	movs	r0, #0
 8004c1c:	f7fc fe4c 	bl	80018b8 <LCD_IO_WriteData>
 8004c20:	2078      	movs	r0, #120	; 0x78
 8004c22:	f7fc fe49 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c26:	20cb      	movs	r0, #203	; 0xcb
 8004c28:	f7fc fe62 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c2c:	2039      	movs	r0, #57	; 0x39
 8004c2e:	f7fc fe43 	bl	80018b8 <LCD_IO_WriteData>
 8004c32:	202c      	movs	r0, #44	; 0x2c
 8004c34:	f7fc fe40 	bl	80018b8 <LCD_IO_WriteData>
 8004c38:	2000      	movs	r0, #0
 8004c3a:	f7fc fe3d 	bl	80018b8 <LCD_IO_WriteData>
 8004c3e:	2034      	movs	r0, #52	; 0x34
 8004c40:	f7fc fe3a 	bl	80018b8 <LCD_IO_WriteData>
 8004c44:	2002      	movs	r0, #2
 8004c46:	f7fc fe37 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c4a:	20f7      	movs	r0, #247	; 0xf7
 8004c4c:	f7fc fe50 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c50:	2020      	movs	r0, #32
 8004c52:	f7fc fe31 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c56:	20ea      	movs	r0, #234	; 0xea
 8004c58:	f7fc fe4a 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c5c:	2000      	movs	r0, #0
 8004c5e:	f7fc fe2b 	bl	80018b8 <LCD_IO_WriteData>
 8004c62:	2000      	movs	r0, #0
 8004c64:	f7fc fe28 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c68:	20b1      	movs	r0, #177	; 0xb1
 8004c6a:	f7fc fe41 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c6e:	2000      	movs	r0, #0
 8004c70:	f7fc fe22 	bl	80018b8 <LCD_IO_WriteData>
 8004c74:	201b      	movs	r0, #27
 8004c76:	f7fc fe1f 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c7a:	20b6      	movs	r0, #182	; 0xb6
 8004c7c:	f7fc fe38 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c80:	200a      	movs	r0, #10
 8004c82:	f7fc fe19 	bl	80018b8 <LCD_IO_WriteData>
 8004c86:	20a2      	movs	r0, #162	; 0xa2
 8004c88:	f7fc fe16 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c8c:	20c0      	movs	r0, #192	; 0xc0
 8004c8e:	f7fc fe2f 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c92:	2010      	movs	r0, #16
 8004c94:	f7fc fe10 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c98:	20c1      	movs	r0, #193	; 0xc1
 8004c9a:	f7fc fe29 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c9e:	2010      	movs	r0, #16
 8004ca0:	f7fc fe0a 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004ca4:	20c5      	movs	r0, #197	; 0xc5
 8004ca6:	f7fc fe23 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004caa:	2045      	movs	r0, #69	; 0x45
 8004cac:	f7fc fe04 	bl	80018b8 <LCD_IO_WriteData>
 8004cb0:	2015      	movs	r0, #21
 8004cb2:	f7fc fe01 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004cb6:	20c7      	movs	r0, #199	; 0xc7
 8004cb8:	f7fc fe1a 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004cbc:	2090      	movs	r0, #144	; 0x90
 8004cbe:	f7fc fdfb 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004cc2:	2036      	movs	r0, #54	; 0x36
 8004cc4:	f7fc fe14 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004cc8:	20c8      	movs	r0, #200	; 0xc8
 8004cca:	f7fc fdf5 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004cce:	20f2      	movs	r0, #242	; 0xf2
 8004cd0:	f7fc fe0e 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004cd4:	2000      	movs	r0, #0
 8004cd6:	f7fc fdef 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004cda:	20b0      	movs	r0, #176	; 0xb0
 8004cdc:	f7fc fe08 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004ce0:	20c2      	movs	r0, #194	; 0xc2
 8004ce2:	f7fc fde9 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004ce6:	20b6      	movs	r0, #182	; 0xb6
 8004ce8:	f7fc fe02 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004cec:	200a      	movs	r0, #10
 8004cee:	f7fc fde3 	bl	80018b8 <LCD_IO_WriteData>
 8004cf2:	20a7      	movs	r0, #167	; 0xa7
 8004cf4:	f7fc fde0 	bl	80018b8 <LCD_IO_WriteData>
 8004cf8:	2027      	movs	r0, #39	; 0x27
 8004cfa:	f7fc fddd 	bl	80018b8 <LCD_IO_WriteData>
 8004cfe:	2004      	movs	r0, #4
 8004d00:	f7fc fdda 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d04:	202a      	movs	r0, #42	; 0x2a
 8004d06:	f7fc fdf3 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d0a:	2000      	movs	r0, #0
 8004d0c:	f7fc fdd4 	bl	80018b8 <LCD_IO_WriteData>
 8004d10:	2000      	movs	r0, #0
 8004d12:	f7fc fdd1 	bl	80018b8 <LCD_IO_WriteData>
 8004d16:	2000      	movs	r0, #0
 8004d18:	f7fc fdce 	bl	80018b8 <LCD_IO_WriteData>
 8004d1c:	20ef      	movs	r0, #239	; 0xef
 8004d1e:	f7fc fdcb 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d22:	202b      	movs	r0, #43	; 0x2b
 8004d24:	f7fc fde4 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d28:	2000      	movs	r0, #0
 8004d2a:	f7fc fdc5 	bl	80018b8 <LCD_IO_WriteData>
 8004d2e:	2000      	movs	r0, #0
 8004d30:	f7fc fdc2 	bl	80018b8 <LCD_IO_WriteData>
 8004d34:	2001      	movs	r0, #1
 8004d36:	f7fc fdbf 	bl	80018b8 <LCD_IO_WriteData>
 8004d3a:	203f      	movs	r0, #63	; 0x3f
 8004d3c:	f7fc fdbc 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d40:	20f6      	movs	r0, #246	; 0xf6
 8004d42:	f7fc fdd5 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d46:	2001      	movs	r0, #1
 8004d48:	f7fc fdb6 	bl	80018b8 <LCD_IO_WriteData>
 8004d4c:	2000      	movs	r0, #0
 8004d4e:	f7fc fdb3 	bl	80018b8 <LCD_IO_WriteData>
 8004d52:	2006      	movs	r0, #6
 8004d54:	f7fc fdb0 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d58:	202c      	movs	r0, #44	; 0x2c
 8004d5a:	f7fc fdc9 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004d5e:	20c8      	movs	r0, #200	; 0xc8
 8004d60:	f7fc fe14 	bl	800198c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004d64:	2026      	movs	r0, #38	; 0x26
 8004d66:	f7fc fdc3 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d6a:	2001      	movs	r0, #1
 8004d6c:	f7fc fda4 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d70:	20e0      	movs	r0, #224	; 0xe0
 8004d72:	f7fc fdbd 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d76:	200f      	movs	r0, #15
 8004d78:	f7fc fd9e 	bl	80018b8 <LCD_IO_WriteData>
 8004d7c:	2029      	movs	r0, #41	; 0x29
 8004d7e:	f7fc fd9b 	bl	80018b8 <LCD_IO_WriteData>
 8004d82:	2024      	movs	r0, #36	; 0x24
 8004d84:	f7fc fd98 	bl	80018b8 <LCD_IO_WriteData>
 8004d88:	200c      	movs	r0, #12
 8004d8a:	f7fc fd95 	bl	80018b8 <LCD_IO_WriteData>
 8004d8e:	200e      	movs	r0, #14
 8004d90:	f7fc fd92 	bl	80018b8 <LCD_IO_WriteData>
 8004d94:	2009      	movs	r0, #9
 8004d96:	f7fc fd8f 	bl	80018b8 <LCD_IO_WriteData>
 8004d9a:	204e      	movs	r0, #78	; 0x4e
 8004d9c:	f7fc fd8c 	bl	80018b8 <LCD_IO_WriteData>
 8004da0:	2078      	movs	r0, #120	; 0x78
 8004da2:	f7fc fd89 	bl	80018b8 <LCD_IO_WriteData>
 8004da6:	203c      	movs	r0, #60	; 0x3c
 8004da8:	f7fc fd86 	bl	80018b8 <LCD_IO_WriteData>
 8004dac:	2009      	movs	r0, #9
 8004dae:	f7fc fd83 	bl	80018b8 <LCD_IO_WriteData>
 8004db2:	2013      	movs	r0, #19
 8004db4:	f7fc fd80 	bl	80018b8 <LCD_IO_WriteData>
 8004db8:	2005      	movs	r0, #5
 8004dba:	f7fc fd7d 	bl	80018b8 <LCD_IO_WriteData>
 8004dbe:	2017      	movs	r0, #23
 8004dc0:	f7fc fd7a 	bl	80018b8 <LCD_IO_WriteData>
 8004dc4:	2011      	movs	r0, #17
 8004dc6:	f7fc fd77 	bl	80018b8 <LCD_IO_WriteData>
 8004dca:	2000      	movs	r0, #0
 8004dcc:	f7fc fd74 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004dd0:	20e1      	movs	r0, #225	; 0xe1
 8004dd2:	f7fc fd8d 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004dd6:	2000      	movs	r0, #0
 8004dd8:	f7fc fd6e 	bl	80018b8 <LCD_IO_WriteData>
 8004ddc:	2016      	movs	r0, #22
 8004dde:	f7fc fd6b 	bl	80018b8 <LCD_IO_WriteData>
 8004de2:	201b      	movs	r0, #27
 8004de4:	f7fc fd68 	bl	80018b8 <LCD_IO_WriteData>
 8004de8:	2004      	movs	r0, #4
 8004dea:	f7fc fd65 	bl	80018b8 <LCD_IO_WriteData>
 8004dee:	2011      	movs	r0, #17
 8004df0:	f7fc fd62 	bl	80018b8 <LCD_IO_WriteData>
 8004df4:	2007      	movs	r0, #7
 8004df6:	f7fc fd5f 	bl	80018b8 <LCD_IO_WriteData>
 8004dfa:	2031      	movs	r0, #49	; 0x31
 8004dfc:	f7fc fd5c 	bl	80018b8 <LCD_IO_WriteData>
 8004e00:	2033      	movs	r0, #51	; 0x33
 8004e02:	f7fc fd59 	bl	80018b8 <LCD_IO_WriteData>
 8004e06:	2042      	movs	r0, #66	; 0x42
 8004e08:	f7fc fd56 	bl	80018b8 <LCD_IO_WriteData>
 8004e0c:	2005      	movs	r0, #5
 8004e0e:	f7fc fd53 	bl	80018b8 <LCD_IO_WriteData>
 8004e12:	200c      	movs	r0, #12
 8004e14:	f7fc fd50 	bl	80018b8 <LCD_IO_WriteData>
 8004e18:	200a      	movs	r0, #10
 8004e1a:	f7fc fd4d 	bl	80018b8 <LCD_IO_WriteData>
 8004e1e:	2028      	movs	r0, #40	; 0x28
 8004e20:	f7fc fd4a 	bl	80018b8 <LCD_IO_WriteData>
 8004e24:	202f      	movs	r0, #47	; 0x2f
 8004e26:	f7fc fd47 	bl	80018b8 <LCD_IO_WriteData>
 8004e2a:	200f      	movs	r0, #15
 8004e2c:	f7fc fd44 	bl	80018b8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004e30:	2011      	movs	r0, #17
 8004e32:	f7fc fd5d 	bl	80018f0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004e36:	20c8      	movs	r0, #200	; 0xc8
 8004e38:	f7fc fda8 	bl	800198c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004e3c:	2029      	movs	r0, #41	; 0x29
 8004e3e:	f7fc fd57 	bl	80018f0 <LCD_IO_WriteReg>
}
 8004e42:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8004e46:	202c      	movs	r0, #44	; 0x2c
 8004e48:	f7fc bd52 	b.w	80018f0 <LCD_IO_WriteReg>

08004e4c <ili9341_ReadID>:
{
 8004e4c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004e4e:	f7fc fd23 	bl	8001898 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8004e52:	2103      	movs	r1, #3
 8004e54:	20d3      	movs	r0, #211	; 0xd3
 8004e56:	f7fc fd67 	bl	8001928 <LCD_IO_ReadData>
}
 8004e5a:	b280      	uxth	r0, r0
 8004e5c:	bd08      	pop	{r3, pc}

08004e5e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8004e5e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8004e60:	b2c4      	uxtb	r4, r0
 8004e62:	2202      	movs	r2, #2
 8004e64:	2103      	movs	r1, #3
 8004e66:	4620      	mov	r0, r4
 8004e68:	f7fc fccc 	bl	8001804 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8004e6c:	200a      	movs	r0, #10
 8004e6e:	f7fc fd11 	bl	8001894 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8004e72:	4620      	mov	r0, r4
 8004e74:	2200      	movs	r2, #0
 8004e76:	2103      	movs	r1, #3
 8004e78:	f7fc fcc4 	bl	8001804 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8004e7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8004e80:	2002      	movs	r0, #2
 8004e82:	f7fc bd07 	b.w	8001894 <IOE_Delay>

08004e86 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8004e86:	b538      	push	{r3, r4, r5, lr}
 8004e88:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004e8a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8004e8c:	f7fc fcb8 	bl	8001800 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004e90:	2100      	movs	r1, #0
 8004e92:	4620      	mov	r0, r4
 8004e94:	f7fc fcce 	bl	8001834 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004e98:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004e9a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004e9c:	4620      	mov	r0, r4
 8004e9e:	f7fc fcc9 	bl	8001834 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004ea2:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8004ea6:	b280      	uxth	r0, r0
 8004ea8:	bd38      	pop	{r3, r4, r5, pc}

08004eaa <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8004eaa:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8004eac:	b2c4      	uxtb	r4, r0
 8004eae:	2140      	movs	r1, #64	; 0x40
 8004eb0:	4620      	mov	r0, r4
 8004eb2:	f7fc fcbf 	bl	8001834 <IOE_Read>
  
  if(state > 0)
 8004eb6:	0603      	lsls	r3, r0, #24
 8004eb8:	d507      	bpl.n	8004eca <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8004eba:	214c      	movs	r1, #76	; 0x4c
 8004ebc:	4620      	mov	r0, r4
 8004ebe:	f7fc fcb9 	bl	8001834 <IOE_Read>
    {
      ret = 1;
 8004ec2:	3800      	subs	r0, #0
 8004ec4:	bf18      	it	ne
 8004ec6:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8004ec8:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004eca:	2201      	movs	r2, #1
 8004ecc:	214b      	movs	r1, #75	; 0x4b
 8004ece:	4620      	mov	r0, r4
 8004ed0:	f7fc fc98 	bl	8001804 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004ed4:	4620      	mov	r0, r4
 8004ed6:	2200      	movs	r2, #0
 8004ed8:	214b      	movs	r1, #75	; 0x4b
 8004eda:	f7fc fc93 	bl	8001804 <IOE_Write>
  uint8_t ret = 0;
 8004ede:	2000      	movs	r0, #0
 8004ee0:	e7f2      	b.n	8004ec8 <stmpe811_TS_DetectTouch+0x1e>

08004ee2 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8004ee2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004ee4:	2304      	movs	r3, #4
 8004ee6:	b2c4      	uxtb	r4, r0
{
 8004ee8:	460e      	mov	r6, r1
 8004eea:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004eec:	21d7      	movs	r1, #215	; 0xd7
 8004eee:	eb0d 0203 	add.w	r2, sp, r3
 8004ef2:	4620      	mov	r0, r4
 8004ef4:	f7fc fcb8 	bl	8001868 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8004ef8:	9b01      	ldr	r3, [sp, #4]
 8004efa:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004efc:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004efe:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004f02:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004f04:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004f06:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004f08:	2201      	movs	r2, #1
 8004f0a:	214b      	movs	r1, #75	; 0x4b
 8004f0c:	f7fc fc7a 	bl	8001804 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004f10:	2200      	movs	r2, #0
 8004f12:	214b      	movs	r1, #75	; 0x4b
 8004f14:	4620      	mov	r0, r4
 8004f16:	f7fc fc75 	bl	8001804 <IOE_Write>
}
 8004f1a:	b002      	add	sp, #8
 8004f1c:	bd70      	pop	{r4, r5, r6, pc}
	...

08004f20 <stmpe811_Init>:
{
 8004f20:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8004f22:	4b0a      	ldr	r3, [pc, #40]	; (8004f4c <stmpe811_Init+0x2c>)
 8004f24:	781a      	ldrb	r2, [r3, #0]
 8004f26:	4290      	cmp	r0, r2
{
 8004f28:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8004f2a:	d00d      	beq.n	8004f48 <stmpe811_Init+0x28>
 8004f2c:	7859      	ldrb	r1, [r3, #1]
 8004f2e:	4288      	cmp	r0, r1
 8004f30:	d00a      	beq.n	8004f48 <stmpe811_Init+0x28>
 8004f32:	b10a      	cbz	r2, 8004f38 <stmpe811_Init+0x18>
 8004f34:	b941      	cbnz	r1, 8004f48 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8004f36:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8004f38:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8004f3a:	f7fc fc61 	bl	8001800 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8004f3e:	4620      	mov	r0, r4
}
 8004f40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8004f44:	f7ff bf8b 	b.w	8004e5e <stmpe811_Reset>
}
 8004f48:	bd10      	pop	{r4, pc}
 8004f4a:	bf00      	nop
 8004f4c:	20006744 	.word	0x20006744

08004f50 <stmpe811_EnableGlobalIT>:
{
 8004f50:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004f52:	b2c4      	uxtb	r4, r0
 8004f54:	2109      	movs	r1, #9
 8004f56:	4620      	mov	r0, r4
 8004f58:	f7fc fc6c 	bl	8001834 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8004f5c:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004f60:	b2c2      	uxtb	r2, r0
 8004f62:	2109      	movs	r1, #9
 8004f64:	4620      	mov	r0, r4
}
 8004f66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004f6a:	f7fc bc4b 	b.w	8001804 <IOE_Write>

08004f6e <stmpe811_DisableGlobalIT>:
{
 8004f6e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004f70:	b2c4      	uxtb	r4, r0
 8004f72:	2109      	movs	r1, #9
 8004f74:	4620      	mov	r0, r4
 8004f76:	f7fc fc5d 	bl	8001834 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004f7a:	2109      	movs	r1, #9
 8004f7c:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8004f80:	4620      	mov	r0, r4
}
 8004f82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004f86:	f7fc bc3d 	b.w	8001804 <IOE_Write>

08004f8a <stmpe811_EnableITSource>:
{
 8004f8a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004f8c:	b2c4      	uxtb	r4, r0
{
 8004f8e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004f90:	4620      	mov	r0, r4
 8004f92:	210a      	movs	r1, #10
 8004f94:	f7fc fc4e 	bl	8001834 <IOE_Read>
  tmp |= Source; 
 8004f98:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004f9a:	b2c2      	uxtb	r2, r0
 8004f9c:	210a      	movs	r1, #10
 8004f9e:	4620      	mov	r0, r4
}
 8004fa0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004fa4:	f7fc bc2e 	b.w	8001804 <IOE_Write>

08004fa8 <stmpe811_TS_EnableIT>:
{
 8004fa8:	b507      	push	{r0, r1, r2, lr}
 8004faa:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8004fac:	f7fc fc29 	bl	8001802 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004fb0:	9801      	ldr	r0, [sp, #4]
 8004fb2:	211f      	movs	r1, #31
 8004fb4:	f7ff ffe9 	bl	8004f8a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004fb8:	9801      	ldr	r0, [sp, #4]
}
 8004fba:	b003      	add	sp, #12
 8004fbc:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004fc0:	f7ff bfc6 	b.w	8004f50 <stmpe811_EnableGlobalIT>

08004fc4 <stmpe811_DisableITSource>:
{
 8004fc4:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004fc6:	b2c4      	uxtb	r4, r0
{
 8004fc8:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004fca:	4620      	mov	r0, r4
 8004fcc:	210a      	movs	r1, #10
 8004fce:	f7fc fc31 	bl	8001834 <IOE_Read>
  tmp &= ~Source; 
 8004fd2:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004fd6:	b2c2      	uxtb	r2, r0
 8004fd8:	210a      	movs	r1, #10
 8004fda:	4620      	mov	r0, r4
}
 8004fdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004fe0:	f7fc bc10 	b.w	8001804 <IOE_Write>

08004fe4 <stmpe811_TS_DisableIT>:
{
 8004fe4:	b510      	push	{r4, lr}
 8004fe6:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8004fe8:	f7ff ffc1 	bl	8004f6e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004fec:	4620      	mov	r0, r4
 8004fee:	211f      	movs	r1, #31
}
 8004ff0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004ff4:	f7ff bfe6 	b.w	8004fc4 <stmpe811_DisableITSource>

08004ff8 <stmpe811_ReadGITStatus>:
{
 8004ff8:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004ffa:	b2c0      	uxtb	r0, r0
{
 8004ffc:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004ffe:	210b      	movs	r1, #11
 8005000:	f7fc fc18 	bl	8001834 <IOE_Read>
}
 8005004:	4020      	ands	r0, r4
 8005006:	bd10      	pop	{r4, pc}

08005008 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005008:	211f      	movs	r1, #31
 800500a:	f7ff bff5 	b.w	8004ff8 <stmpe811_ReadGITStatus>

0800500e <stmpe811_ClearGlobalIT>:
{
 800500e:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005010:	b2c0      	uxtb	r0, r0
 8005012:	210b      	movs	r1, #11
 8005014:	f7fc bbf6 	b.w	8001804 <IOE_Write>

08005018 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005018:	211f      	movs	r1, #31
 800501a:	f7ff bff8 	b.w	800500e <stmpe811_ClearGlobalIT>

0800501e <stmpe811_IO_EnableAF>:
{
 800501e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005020:	b2c4      	uxtb	r4, r0
{
 8005022:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005024:	4620      	mov	r0, r4
 8005026:	2117      	movs	r1, #23
 8005028:	f7fc fc04 	bl	8001834 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800502c:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005030:	b2c2      	uxtb	r2, r0
 8005032:	2117      	movs	r1, #23
 8005034:	4620      	mov	r0, r4
}
 8005036:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800503a:	f7fc bbe3 	b.w	8001804 <IOE_Write>

0800503e <stmpe811_TS_Start>:
{
 800503e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005040:	b2c4      	uxtb	r4, r0
{
 8005042:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005044:	2104      	movs	r1, #4
 8005046:	4620      	mov	r0, r4
 8005048:	f7fc fbf4 	bl	8001834 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800504c:	2104      	movs	r1, #4
 800504e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005052:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005054:	4620      	mov	r0, r4
 8005056:	f7fc fbd5 	bl	8001804 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800505a:	4630      	mov	r0, r6
 800505c:	21f0      	movs	r1, #240	; 0xf0
 800505e:	f7ff ffde 	bl	800501e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005062:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005066:	4620      	mov	r0, r4
 8005068:	2104      	movs	r1, #4
 800506a:	f7fc fbcb 	bl	8001804 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800506e:	2249      	movs	r2, #73	; 0x49
 8005070:	2120      	movs	r1, #32
 8005072:	4620      	mov	r0, r4
 8005074:	f7fc fbc6 	bl	8001804 <IOE_Write>
  IOE_Delay(2); 
 8005078:	2002      	movs	r0, #2
 800507a:	f7fc fc0b 	bl	8001894 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800507e:	4620      	mov	r0, r4
 8005080:	2201      	movs	r2, #1
 8005082:	2121      	movs	r1, #33	; 0x21
 8005084:	f7fc fbbe 	bl	8001804 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005088:	4620      	mov	r0, r4
 800508a:	229a      	movs	r2, #154	; 0x9a
 800508c:	2141      	movs	r1, #65	; 0x41
 800508e:	f7fc fbb9 	bl	8001804 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005092:	4620      	mov	r0, r4
 8005094:	2201      	movs	r2, #1
 8005096:	214a      	movs	r1, #74	; 0x4a
 8005098:	f7fc fbb4 	bl	8001804 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800509c:	4620      	mov	r0, r4
 800509e:	2201      	movs	r2, #1
 80050a0:	214b      	movs	r1, #75	; 0x4b
 80050a2:	f7fc fbaf 	bl	8001804 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80050a6:	4620      	mov	r0, r4
 80050a8:	2200      	movs	r2, #0
 80050aa:	214b      	movs	r1, #75	; 0x4b
 80050ac:	f7fc fbaa 	bl	8001804 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80050b0:	4620      	mov	r0, r4
 80050b2:	2201      	movs	r2, #1
 80050b4:	2156      	movs	r1, #86	; 0x56
 80050b6:	f7fc fba5 	bl	8001804 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80050ba:	4620      	mov	r0, r4
 80050bc:	2201      	movs	r2, #1
 80050be:	2158      	movs	r1, #88	; 0x58
 80050c0:	f7fc fba0 	bl	8001804 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80050c4:	4620      	mov	r0, r4
 80050c6:	2201      	movs	r2, #1
 80050c8:	2140      	movs	r1, #64	; 0x40
 80050ca:	f7fc fb9b 	bl	8001804 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80050ce:	4620      	mov	r0, r4
 80050d0:	22ff      	movs	r2, #255	; 0xff
 80050d2:	210b      	movs	r1, #11
 80050d4:	f7fc fb96 	bl	8001804 <IOE_Write>
}
 80050d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80050dc:	2002      	movs	r0, #2
 80050de:	f7fc bbd9 	b.w	8001894 <IOE_Delay>
	...

080050e4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80050e4:	4b05      	ldr	r3, [pc, #20]	; (80050fc <SystemInit+0x18>)
 80050e6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80050ea:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80050ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80050f2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80050f6:	609a      	str	r2, [r3, #8]
#endif
}
 80050f8:	4770      	bx	lr
 80050fa:	bf00      	nop
 80050fc:	e000ed00 	.word	0xe000ed00

08005100 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005100:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005102:	4b0b      	ldr	r3, [pc, #44]	; (8005130 <HAL_Init+0x30>)
 8005104:	681a      	ldr	r2, [r3, #0]
 8005106:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800510a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800510c:	681a      	ldr	r2, [r3, #0]
 800510e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005112:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005114:	681a      	ldr	r2, [r3, #0]
 8005116:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800511a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800511c:	2003      	movs	r0, #3
 800511e:	f000 fa37 	bl	8005590 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005122:	2000      	movs	r0, #0
 8005124:	f7fc fef0 	bl	8001f08 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005128:	f7fc fc4a 	bl	80019c0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800512c:	2000      	movs	r0, #0
 800512e:	bd08      	pop	{r3, pc}
 8005130:	40023c00 	.word	0x40023c00

08005134 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005134:	4a03      	ldr	r2, [pc, #12]	; (8005144 <HAL_IncTick+0x10>)
 8005136:	4b04      	ldr	r3, [pc, #16]	; (8005148 <HAL_IncTick+0x14>)
 8005138:	6811      	ldr	r1, [r2, #0]
 800513a:	781b      	ldrb	r3, [r3, #0]
 800513c:	440b      	add	r3, r1
 800513e:	6013      	str	r3, [r2, #0]
}
 8005140:	4770      	bx	lr
 8005142:	bf00      	nop
 8005144:	20006748 	.word	0x20006748
 8005148:	2000007c 	.word	0x2000007c

0800514c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800514c:	4b01      	ldr	r3, [pc, #4]	; (8005154 <HAL_GetTick+0x8>)
 800514e:	6818      	ldr	r0, [r3, #0]
}
 8005150:	4770      	bx	lr
 8005152:	bf00      	nop
 8005154:	20006748 	.word	0x20006748

08005158 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005158:	b538      	push	{r3, r4, r5, lr}
 800515a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800515c:	f7ff fff6 	bl	800514c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005160:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005162:	bf1c      	itt	ne
 8005164:	4b05      	ldrne	r3, [pc, #20]	; (800517c <HAL_Delay+0x24>)
 8005166:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005168:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800516a:	bf18      	it	ne
 800516c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800516e:	f7ff ffed 	bl	800514c <HAL_GetTick>
 8005172:	1b43      	subs	r3, r0, r5
 8005174:	42a3      	cmp	r3, r4
 8005176:	d3fa      	bcc.n	800516e <HAL_Delay+0x16>
  {
  }
}
 8005178:	bd38      	pop	{r3, r4, r5, pc}
 800517a:	bf00      	nop
 800517c:	2000007c 	.word	0x2000007c

08005180 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005180:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005182:	4604      	mov	r4, r0
 8005184:	2800      	cmp	r0, #0
 8005186:	f000 809b 	beq.w	80052c0 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800518a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800518c:	b925      	cbnz	r5, 8005198 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800518e:	f7fc fc37 	bl	8001a00 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005192:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005194:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005198:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800519a:	06db      	lsls	r3, r3, #27
 800519c:	f100 808e 	bmi.w	80052bc <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80051a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80051a2:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80051a6:	f023 0302 	bic.w	r3, r3, #2
 80051aa:	f043 0302 	orr.w	r3, r3, #2
 80051ae:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 80051b0:	4b44      	ldr	r3, [pc, #272]	; (80052c4 <HAL_ADC_Init+0x144>)
 80051b2:	685a      	ldr	r2, [r3, #4]
 80051b4:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 80051b8:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80051ba:	685a      	ldr	r2, [r3, #4]
 80051bc:	6861      	ldr	r1, [r4, #4]
 80051be:	430a      	orrs	r2, r1
 80051c0:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80051c2:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80051c4:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80051c6:	685a      	ldr	r2, [r3, #4]
 80051c8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80051cc:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80051ce:	685a      	ldr	r2, [r3, #4]
 80051d0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80051d4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80051d6:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80051d8:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80051da:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80051de:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80051e0:	685a      	ldr	r2, [r3, #4]
 80051e2:	430a      	orrs	r2, r1
 80051e4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80051e6:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80051e8:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80051ea:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80051ee:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80051f0:	689a      	ldr	r2, [r3, #8]
 80051f2:	430a      	orrs	r2, r1
 80051f4:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80051f6:	4934      	ldr	r1, [pc, #208]	; (80052c8 <HAL_ADC_Init+0x148>)
 80051f8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80051fa:	428a      	cmp	r2, r1
 80051fc:	d052      	beq.n	80052a4 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80051fe:	6899      	ldr	r1, [r3, #8]
 8005200:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005204:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005206:	6899      	ldr	r1, [r3, #8]
 8005208:	430a      	orrs	r2, r1
 800520a:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800520c:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800520e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005210:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005214:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005216:	689a      	ldr	r2, [r3, #8]
 8005218:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800521a:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800521c:	689a      	ldr	r2, [r3, #8]
 800521e:	f022 0202 	bic.w	r2, r2, #2
 8005222:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005224:	689a      	ldr	r2, [r3, #8]
 8005226:	7e21      	ldrb	r1, [r4, #24]
 8005228:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 800522c:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800522e:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005232:	2a00      	cmp	r2, #0
 8005234:	d03e      	beq.n	80052b4 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005236:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005238:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800523a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800523e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005240:	685a      	ldr	r2, [r3, #4]
 8005242:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005246:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005248:	685a      	ldr	r2, [r3, #4]
 800524a:	3901      	subs	r1, #1
 800524c:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005250:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005252:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005254:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005256:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800525a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800525c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800525e:	3901      	subs	r1, #1
 8005260:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005264:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005266:	689a      	ldr	r2, [r3, #8]
 8005268:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800526c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800526e:	689a      	ldr	r2, [r3, #8]
 8005270:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005274:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005278:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800527a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800527c:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800527e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005282:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005284:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005286:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005288:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 800528c:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800528e:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005290:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005292:	f023 0303 	bic.w	r3, r3, #3
 8005296:	f043 0301 	orr.w	r3, r3, #1
 800529a:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 800529c:	2300      	movs	r3, #0
 800529e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 80052a2:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80052a4:	689a      	ldr	r2, [r3, #8]
 80052a6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80052aa:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80052ac:	689a      	ldr	r2, [r3, #8]
 80052ae:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80052b2:	e7b2      	b.n	800521a <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80052b4:	685a      	ldr	r2, [r3, #4]
 80052b6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80052ba:	e7c9      	b.n	8005250 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 80052bc:	2001      	movs	r0, #1
 80052be:	e7ed      	b.n	800529c <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 80052c0:	2001      	movs	r0, #1
 80052c2:	e7ee      	b.n	80052a2 <HAL_ADC_Init+0x122>
 80052c4:	40012300 	.word	0x40012300
 80052c8:	0f000001 	.word	0x0f000001

080052cc <HAL_ADC_Start>:
{
 80052cc:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 80052ce:	2300      	movs	r3, #0
 80052d0:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 80052d2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80052d6:	2b01      	cmp	r3, #1
 80052d8:	d060      	beq.n	800539c <HAL_ADC_Start+0xd0>
 80052da:	2301      	movs	r3, #1
 80052dc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80052e0:	6803      	ldr	r3, [r0, #0]
 80052e2:	689a      	ldr	r2, [r3, #8]
 80052e4:	07d2      	lsls	r2, r2, #31
 80052e6:	d505      	bpl.n	80052f4 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80052e8:	689a      	ldr	r2, [r3, #8]
 80052ea:	07d1      	lsls	r1, r2, #31
 80052ec:	d414      	bmi.n	8005318 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 80052ee:	2000      	movs	r0, #0
}
 80052f0:	b002      	add	sp, #8
 80052f2:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 80052f4:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80052f6:	492a      	ldr	r1, [pc, #168]	; (80053a0 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 80052f8:	f042 0201 	orr.w	r2, r2, #1
 80052fc:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80052fe:	4a29      	ldr	r2, [pc, #164]	; (80053a4 <HAL_ADC_Start+0xd8>)
 8005300:	6812      	ldr	r2, [r2, #0]
 8005302:	fbb2 f2f1 	udiv	r2, r2, r1
 8005306:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 800530a:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 800530c:	9a01      	ldr	r2, [sp, #4]
 800530e:	2a00      	cmp	r2, #0
 8005310:	d0ea      	beq.n	80052e8 <HAL_ADC_Start+0x1c>
      counter--;
 8005312:	9a01      	ldr	r2, [sp, #4]
 8005314:	3a01      	subs	r2, #1
 8005316:	e7f8      	b.n	800530a <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005318:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800531a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800531e:	f022 0201 	bic.w	r2, r2, #1
 8005322:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005326:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005328:	685a      	ldr	r2, [r3, #4]
 800532a:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 800532c:	bf41      	itttt	mi
 800532e:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005330:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005334:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005338:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800533a:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800533c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005340:	bf1c      	itt	ne
 8005342:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005344:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005348:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 800534a:	2200      	movs	r2, #0
 800534c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005350:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005354:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005356:	4a14      	ldr	r2, [pc, #80]	; (80053a8 <HAL_ADC_Start+0xdc>)
 8005358:	6851      	ldr	r1, [r2, #4]
 800535a:	f011 0f1f 	tst.w	r1, #31
 800535e:	4913      	ldr	r1, [pc, #76]	; (80053ac <HAL_ADC_Start+0xe0>)
 8005360:	d119      	bne.n	8005396 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005362:	428b      	cmp	r3, r1
 8005364:	d007      	beq.n	8005376 <HAL_ADC_Start+0xaa>
 8005366:	f501 7180 	add.w	r1, r1, #256	; 0x100
 800536a:	428b      	cmp	r3, r1
 800536c:	d10c      	bne.n	8005388 <HAL_ADC_Start+0xbc>
 800536e:	6852      	ldr	r2, [r2, #4]
 8005370:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005374:	d1bb      	bne.n	80052ee <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005376:	6898      	ldr	r0, [r3, #8]
 8005378:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 800537c:	d1b7      	bne.n	80052ee <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800537e:	689a      	ldr	r2, [r3, #8]
 8005380:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005384:	609a      	str	r2, [r3, #8]
 8005386:	e7b3      	b.n	80052f0 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005388:	4909      	ldr	r1, [pc, #36]	; (80053b0 <HAL_ADC_Start+0xe4>)
 800538a:	428b      	cmp	r3, r1
 800538c:	d1af      	bne.n	80052ee <HAL_ADC_Start+0x22>
 800538e:	6852      	ldr	r2, [r2, #4]
 8005390:	f012 0f10 	tst.w	r2, #16
 8005394:	e7ee      	b.n	8005374 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005396:	428b      	cmp	r3, r1
 8005398:	d1a9      	bne.n	80052ee <HAL_ADC_Start+0x22>
 800539a:	e7ec      	b.n	8005376 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 800539c:	2002      	movs	r0, #2
 800539e:	e7a7      	b.n	80052f0 <HAL_ADC_Start+0x24>
 80053a0:	000f4240 	.word	0x000f4240
 80053a4:	20000078 	.word	0x20000078
 80053a8:	40012300 	.word	0x40012300
 80053ac:	40012000 	.word	0x40012000
 80053b0:	40012200 	.word	0x40012200

080053b4 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80053b4:	6803      	ldr	r3, [r0, #0]
 80053b6:	689a      	ldr	r2, [r3, #8]
 80053b8:	0552      	lsls	r2, r2, #21
{
 80053ba:	b570      	push	{r4, r5, r6, lr}
 80053bc:	4604      	mov	r4, r0
 80053be:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80053c0:	d50b      	bpl.n	80053da <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 80053c2:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80053c4:	05de      	lsls	r6, r3, #23
 80053c6:	d508      	bpl.n	80053da <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80053c8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80053ca:	f043 0320 	orr.w	r3, r3, #32
 80053ce:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 80053d0:	2300      	movs	r3, #0
 80053d2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 80053d6:	2001      	movs	r0, #1
}
 80053d8:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 80053da:	f7ff feb7 	bl	800514c <HAL_GetTick>
 80053de:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 80053e0:	6823      	ldr	r3, [r4, #0]
 80053e2:	681a      	ldr	r2, [r3, #0]
 80053e4:	0791      	lsls	r1, r2, #30
 80053e6:	d50c      	bpl.n	8005402 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 80053e8:	f06f 0212 	mvn.w	r2, #18
 80053ec:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80053ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80053f0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80053f4:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80053f6:	689a      	ldr	r2, [r3, #8]
 80053f8:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 80053fc:	d013      	beq.n	8005426 <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 80053fe:	2000      	movs	r0, #0
 8005400:	e7ea      	b.n	80053d8 <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 8005402:	1c68      	adds	r0, r5, #1
 8005404:	d0ed      	beq.n	80053e2 <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8005406:	b945      	cbnz	r5, 800541a <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8005408:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800540a:	f043 0304 	orr.w	r3, r3, #4
 800540e:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 8005410:	2300      	movs	r3, #0
 8005412:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 8005416:	2003      	movs	r0, #3
 8005418:	e7de      	b.n	80053d8 <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 800541a:	f7ff fe97 	bl	800514c <HAL_GetTick>
 800541e:	1b80      	subs	r0, r0, r6
 8005420:	42a8      	cmp	r0, r5
 8005422:	d9dd      	bls.n	80053e0 <HAL_ADC_PollForConversion+0x2c>
 8005424:	e7f0      	b.n	8005408 <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8005426:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8005428:	2800      	cmp	r0, #0
 800542a:	d1e8      	bne.n	80053fe <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800542c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800542e:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 8005432:	d002      	beq.n	800543a <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8005434:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8005436:	055a      	lsls	r2, r3, #21
 8005438:	d4e1      	bmi.n	80053fe <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 800543a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800543c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005440:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005442:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005444:	04db      	lsls	r3, r3, #19
 8005446:	d4da      	bmi.n	80053fe <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8005448:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800544a:	f043 0301 	orr.w	r3, r3, #1
 800544e:	6423      	str	r3, [r4, #64]	; 0x40
 8005450:	e7c2      	b.n	80053d8 <HAL_ADC_PollForConversion+0x24>

08005452 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8005452:	6803      	ldr	r3, [r0, #0]
 8005454:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005456:	4770      	bx	lr

08005458 <HAL_ADC_ConfigChannel>:
{
 8005458:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800545a:	2300      	movs	r3, #0
 800545c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800545e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005462:	2b01      	cmp	r3, #1
 8005464:	d069      	beq.n	800553a <HAL_ADC_ConfigChannel+0xe2>
 8005466:	2301      	movs	r3, #1
 8005468:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 800546c:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800546e:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005470:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005472:	2d09      	cmp	r5, #9
 8005474:	b2ac      	uxth	r4, r5
 8005476:	d934      	bls.n	80054e2 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005478:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 800547c:	68df      	ldr	r7, [r3, #12]
 800547e:	3a1e      	subs	r2, #30
 8005480:	f04f 0c07 	mov.w	ip, #7
 8005484:	fa0c fc02 	lsl.w	ip, ip, r2
 8005488:	ea27 070c 	bic.w	r7, r7, ip
 800548c:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800548e:	68df      	ldr	r7, [r3, #12]
 8005490:	fa06 f202 	lsl.w	r2, r6, r2
 8005494:	433a      	orrs	r2, r7
 8005496:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8005498:	6849      	ldr	r1, [r1, #4]
 800549a:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800549c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 80054a0:	d82f      	bhi.n	8005502 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80054a2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80054a4:	3a05      	subs	r2, #5
 80054a6:	261f      	movs	r6, #31
 80054a8:	4096      	lsls	r6, r2
 80054aa:	ea21 0106 	bic.w	r1, r1, r6
 80054ae:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80054b0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80054b2:	fa04 f202 	lsl.w	r2, r4, r2
 80054b6:	430a      	orrs	r2, r1
 80054b8:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80054ba:	4a30      	ldr	r2, [pc, #192]	; (800557c <HAL_ADC_ConfigChannel+0x124>)
 80054bc:	4293      	cmp	r3, r2
 80054be:	d10a      	bne.n	80054d6 <HAL_ADC_ConfigChannel+0x7e>
 80054c0:	2d12      	cmp	r5, #18
 80054c2:	d13c      	bne.n	800553e <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 80054c4:	4b2e      	ldr	r3, [pc, #184]	; (8005580 <HAL_ADC_ConfigChannel+0x128>)
 80054c6:	685a      	ldr	r2, [r3, #4]
 80054c8:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80054cc:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80054ce:	685a      	ldr	r2, [r3, #4]
 80054d0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80054d4:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 80054d6:	2300      	movs	r3, #0
 80054d8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80054dc:	4618      	mov	r0, r3
}
 80054de:	b003      	add	sp, #12
 80054e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80054e2:	691f      	ldr	r7, [r3, #16]
 80054e4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80054e8:	f04f 0c07 	mov.w	ip, #7
 80054ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80054f0:	ea27 070c 	bic.w	r7, r7, ip
 80054f4:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80054f6:	691f      	ldr	r7, [r3, #16]
 80054f8:	fa06 f202 	lsl.w	r2, r6, r2
 80054fc:	433a      	orrs	r2, r7
 80054fe:	611a      	str	r2, [r3, #16]
 8005500:	e7ca      	b.n	8005498 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8005502:	290c      	cmp	r1, #12
 8005504:	f04f 011f 	mov.w	r1, #31
 8005508:	d80b      	bhi.n	8005522 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800550a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800550c:	3a23      	subs	r2, #35	; 0x23
 800550e:	4091      	lsls	r1, r2
 8005510:	ea26 0101 	bic.w	r1, r6, r1
 8005514:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8005516:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005518:	fa04 f202 	lsl.w	r2, r4, r2
 800551c:	430a      	orrs	r2, r1
 800551e:	631a      	str	r2, [r3, #48]	; 0x30
 8005520:	e7cb      	b.n	80054ba <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8005522:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005524:	3a41      	subs	r2, #65	; 0x41
 8005526:	4091      	lsls	r1, r2
 8005528:	ea26 0101 	bic.w	r1, r6, r1
 800552c:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800552e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005530:	fa04 f202 	lsl.w	r2, r4, r2
 8005534:	430a      	orrs	r2, r1
 8005536:	62da      	str	r2, [r3, #44]	; 0x2c
 8005538:	e7bf      	b.n	80054ba <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800553a:	2002      	movs	r0, #2
 800553c:	e7cf      	b.n	80054de <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800553e:	4b11      	ldr	r3, [pc, #68]	; (8005584 <HAL_ADC_ConfigChannel+0x12c>)
 8005540:	429d      	cmp	r5, r3
 8005542:	d001      	beq.n	8005548 <HAL_ADC_ConfigChannel+0xf0>
 8005544:	2d11      	cmp	r5, #17
 8005546:	d1c6      	bne.n	80054d6 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8005548:	4b0d      	ldr	r3, [pc, #52]	; (8005580 <HAL_ADC_ConfigChannel+0x128>)
 800554a:	685a      	ldr	r2, [r3, #4]
 800554c:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8005550:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8005552:	685a      	ldr	r2, [r3, #4]
 8005554:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8005558:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800555a:	4b0a      	ldr	r3, [pc, #40]	; (8005584 <HAL_ADC_ConfigChannel+0x12c>)
 800555c:	429d      	cmp	r5, r3
 800555e:	d1ba      	bne.n	80054d6 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8005560:	4b09      	ldr	r3, [pc, #36]	; (8005588 <HAL_ADC_ConfigChannel+0x130>)
 8005562:	4a0a      	ldr	r2, [pc, #40]	; (800558c <HAL_ADC_ConfigChannel+0x134>)
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	fbb3 f3f2 	udiv	r3, r3, r2
 800556a:	220a      	movs	r2, #10
 800556c:	4353      	muls	r3, r2
        counter--;
 800556e:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8005570:	9b01      	ldr	r3, [sp, #4]
 8005572:	2b00      	cmp	r3, #0
 8005574:	d0af      	beq.n	80054d6 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 8005576:	9b01      	ldr	r3, [sp, #4]
 8005578:	3b01      	subs	r3, #1
 800557a:	e7f8      	b.n	800556e <HAL_ADC_ConfigChannel+0x116>
 800557c:	40012000 	.word	0x40012000
 8005580:	40012300 	.word	0x40012300
 8005584:	10000012 	.word	0x10000012
 8005588:	20000078 	.word	0x20000078
 800558c:	000f4240 	.word	0x000f4240

08005590 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005590:	4907      	ldr	r1, [pc, #28]	; (80055b0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8005592:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005594:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005598:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800559a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800559c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80055a0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80055a2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80055a4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80055a8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80055ac:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80055ae:	4770      	bx	lr
 80055b0:	e000ed00 	.word	0xe000ed00

080055b4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80055b4:	4b16      	ldr	r3, [pc, #88]	; (8005610 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80055b6:	b530      	push	{r4, r5, lr}
 80055b8:	68dc      	ldr	r4, [r3, #12]
 80055ba:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80055be:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80055c2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80055c4:	2d04      	cmp	r5, #4
 80055c6:	bf28      	it	cs
 80055c8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80055ca:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80055cc:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80055d0:	bf8c      	ite	hi
 80055d2:	3c03      	subhi	r4, #3
 80055d4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80055d6:	fa03 f505 	lsl.w	r5, r3, r5
 80055da:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80055de:	40a3      	lsls	r3, r4
 80055e0:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80055e4:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80055e6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80055e8:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80055ec:	bfac      	ite	ge
 80055ee:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80055f2:	4a08      	ldrlt	r2, [pc, #32]	; (8005614 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80055f4:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80055f8:	bfb8      	it	lt
 80055fa:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80055fe:	b2db      	uxtb	r3, r3
 8005600:	bfaa      	itet	ge
 8005602:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005606:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005608:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800560c:	bd30      	pop	{r4, r5, pc}
 800560e:	bf00      	nop
 8005610:	e000ed00 	.word	0xe000ed00
 8005614:	e000ed14 	.word	0xe000ed14

08005618 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005618:	2800      	cmp	r0, #0
 800561a:	db08      	blt.n	800562e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800561c:	0942      	lsrs	r2, r0, #5
 800561e:	2301      	movs	r3, #1
 8005620:	f000 001f 	and.w	r0, r0, #31
 8005624:	fa03 f000 	lsl.w	r0, r3, r0
 8005628:	4b01      	ldr	r3, [pc, #4]	; (8005630 <HAL_NVIC_EnableIRQ+0x18>)
 800562a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800562e:	4770      	bx	lr
 8005630:	e000e100 	.word	0xe000e100

08005634 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005634:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8005636:	4604      	mov	r4, r0
 8005638:	b150      	cbz	r0, 8005650 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800563a:	7943      	ldrb	r3, [r0, #5]
 800563c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005640:	b913      	cbnz	r3, 8005648 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8005642:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8005644:	f7fc fa0e 	bl	8001a64 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8005648:	2301      	movs	r3, #1
 800564a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800564c:	2000      	movs	r0, #0
}
 800564e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005650:	2001      	movs	r0, #1
 8005652:	e7fc      	b.n	800564e <HAL_CRC_Init+0x1a>

08005654 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8005654:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8005656:	4604      	mov	r4, r0
 8005658:	b168      	cbz	r0, 8005676 <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800565a:	7903      	ldrb	r3, [r0, #4]
 800565c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005660:	b913      	cbnz	r3, 8005668 <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8005662:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8005664:	f7fc fa16 	bl	8001a94 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8005668:	2302      	movs	r3, #2
 800566a:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800566c:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 800566e:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8005670:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 8005672:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8005674:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8005676:	2001      	movs	r0, #1
 8005678:	e7fc      	b.n	8005674 <HAL_DAC_Init+0x20>

0800567a <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 800567a:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 800567c:	7943      	ldrb	r3, [r0, #5]
 800567e:	2b01      	cmp	r3, #1
 8005680:	f04f 0302 	mov.w	r3, #2
 8005684:	d017      	beq.n	80056b6 <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 8005686:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 8005688:	6803      	ldr	r3, [r0, #0]
 800568a:	2201      	movs	r2, #1
 800568c:	681c      	ldr	r4, [r3, #0]
 800568e:	408a      	lsls	r2, r1
 8005690:	4322      	orrs	r2, r4
 8005692:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 8005694:	b989      	cbnz	r1, 80056ba <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 8005696:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8005698:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 800569a:	074c      	lsls	r4, r1, #29
 800569c:	d507      	bpl.n	80056ae <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 800569e:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80056a2:	2a38      	cmp	r2, #56	; 0x38
 80056a4:	d103      	bne.n	80056ae <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 80056a6:	685a      	ldr	r2, [r3, #4]
 80056a8:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80056ac:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80056ae:	2301      	movs	r3, #1
 80056b0:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80056b2:	2300      	movs	r3, #0
 80056b4:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80056b6:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80056b8:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80056ba:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80056bc:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80056be:	0349      	lsls	r1, r1, #13
 80056c0:	d5f5      	bpl.n	80056ae <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80056c2:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80056c6:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80056ca:	d1f0      	bne.n	80056ae <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80056cc:	685a      	ldr	r2, [r3, #4]
 80056ce:	f042 0202 	orr.w	r2, r2, #2
 80056d2:	e7eb      	b.n	80056ac <HAL_DAC_Start+0x32>

080056d4 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80056d4:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80056d6:	7943      	ldrb	r3, [r0, #5]
 80056d8:	2b01      	cmp	r3, #1
 80056da:	f04f 0302 	mov.w	r3, #2
 80056de:	d018      	beq.n	8005712 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 80056e0:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 80056e2:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 80056e4:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 80056e6:	f640 75fe 	movw	r5, #4094	; 0xffe
 80056ea:	4095      	lsls	r5, r2
 80056ec:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 80056f0:	e9d1 3100 	ldrd	r3, r1, [r1]
 80056f4:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 80056f6:	4093      	lsls	r3, r2
 80056f8:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 80056fa:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80056fc:	6823      	ldr	r3, [r4, #0]
 80056fe:	21c0      	movs	r1, #192	; 0xc0
 8005700:	fa01 f202 	lsl.w	r2, r1, r2
 8005704:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8005708:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 800570a:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 800570c:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 800570e:	2300      	movs	r3, #0
 8005710:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8005712:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8005714:	bd30      	pop	{r4, r5, pc}

08005716 <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8005716:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8005718:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 800571a:	2400      	movs	r4, #0
 800571c:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 800571e:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8005720:	b941      	cbnz	r1, 8005734 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8005722:	9901      	ldr	r1, [sp, #4]
 8005724:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8005726:	440a      	add	r2, r1
 8005728:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800572a:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 800572c:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 800572e:	6013      	str	r3, [r2, #0]
}
 8005730:	b002      	add	sp, #8
 8005732:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8005734:	9901      	ldr	r1, [sp, #4]
 8005736:	3114      	adds	r1, #20
 8005738:	e7f5      	b.n	8005726 <HAL_DAC_SetValue+0x10>

0800573a <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800573a:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800573c:	4604      	mov	r4, r0
 800573e:	b330      	cbz	r0, 800578e <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005740:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8005744:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005748:	b91b      	cbnz	r3, 8005752 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800574a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800574e:	f7fc f9d3 	bl	8001af8 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005752:	6822      	ldr	r2, [r4, #0]
 8005754:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005756:	2302      	movs	r3, #2
 8005758:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800575c:	6813      	ldr	r3, [r2, #0]
 800575e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005762:	430b      	orrs	r3, r1
 8005764:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8005766:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005768:	68a1      	ldr	r1, [r4, #8]
 800576a:	f023 0307 	bic.w	r3, r3, #7
 800576e:	430b      	orrs	r3, r1
 8005770:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005772:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005774:	68e1      	ldr	r1, [r4, #12]
 8005776:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800577a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800577e:	430b      	orrs	r3, r1
 8005780:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005782:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005784:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005786:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005788:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800578c:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800578e:	2001      	movs	r0, #1
 8005790:	e7fc      	b.n	800578c <HAL_DMA2D_Init+0x52>

08005792 <HAL_DMA2D_LineEventCallback>:
 8005792:	4770      	bx	lr

08005794 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8005794:	4770      	bx	lr

08005796 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005796:	6803      	ldr	r3, [r0, #0]
{
 8005798:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800579a:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800579c:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800579e:	07f2      	lsls	r2, r6, #31
{
 80057a0:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80057a2:	d514      	bpl.n	80057ce <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80057a4:	05e9      	lsls	r1, r5, #23
 80057a6:	d512      	bpl.n	80057ce <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80057a8:	681a      	ldr	r2, [r3, #0]
 80057aa:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80057ae:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80057b0:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80057b2:	f042 0201 	orr.w	r2, r2, #1
 80057b6:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80057b8:	2201      	movs	r2, #1
 80057ba:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80057bc:	2304      	movs	r3, #4
 80057be:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80057c2:	2300      	movs	r3, #0
 80057c4:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80057c8:	6943      	ldr	r3, [r0, #20]
 80057ca:	b103      	cbz	r3, 80057ce <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80057cc:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80057ce:	06b2      	lsls	r2, r6, #26
 80057d0:	d516      	bpl.n	8005800 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80057d2:	04ab      	lsls	r3, r5, #18
 80057d4:	d514      	bpl.n	8005800 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80057d6:	6823      	ldr	r3, [r4, #0]
 80057d8:	681a      	ldr	r2, [r3, #0]
 80057da:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80057de:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80057e0:	2220      	movs	r2, #32
 80057e2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80057e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80057e6:	f043 0302 	orr.w	r3, r3, #2
 80057ea:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80057ec:	2304      	movs	r3, #4
 80057ee:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80057f2:	2300      	movs	r3, #0
 80057f4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80057f8:	6963      	ldr	r3, [r4, #20]
 80057fa:	b10b      	cbz	r3, 8005800 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80057fc:	4620      	mov	r0, r4
 80057fe:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005800:	0730      	lsls	r0, r6, #28
 8005802:	d516      	bpl.n	8005832 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005804:	0529      	lsls	r1, r5, #20
 8005806:	d514      	bpl.n	8005832 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005808:	6823      	ldr	r3, [r4, #0]
 800580a:	681a      	ldr	r2, [r3, #0]
 800580c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005810:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005812:	2208      	movs	r2, #8
 8005814:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8005816:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005818:	f043 0304 	orr.w	r3, r3, #4
 800581c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800581e:	2304      	movs	r3, #4
 8005820:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005824:	2300      	movs	r3, #0
 8005826:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800582a:	6963      	ldr	r3, [r4, #20]
 800582c:	b10b      	cbz	r3, 8005832 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800582e:	4620      	mov	r0, r4
 8005830:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005832:	0772      	lsls	r2, r6, #29
 8005834:	d50b      	bpl.n	800584e <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8005836:	056b      	lsls	r3, r5, #21
 8005838:	d509      	bpl.n	800584e <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800583a:	6823      	ldr	r3, [r4, #0]
 800583c:	681a      	ldr	r2, [r3, #0]
 800583e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005842:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8005844:	2204      	movs	r2, #4
 8005846:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005848:	4620      	mov	r0, r4
 800584a:	f7ff ffa2 	bl	8005792 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800584e:	07b0      	lsls	r0, r6, #30
 8005850:	d514      	bpl.n	800587c <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005852:	05a9      	lsls	r1, r5, #22
 8005854:	d512      	bpl.n	800587c <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8005856:	6823      	ldr	r3, [r4, #0]
 8005858:	681a      	ldr	r2, [r3, #0]
 800585a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800585e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005860:	2202      	movs	r2, #2
 8005862:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005864:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005866:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005868:	2301      	movs	r3, #1
 800586a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800586e:	2300      	movs	r3, #0
 8005870:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8005874:	6923      	ldr	r3, [r4, #16]
 8005876:	b10b      	cbz	r3, 800587c <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8005878:	4620      	mov	r0, r4
 800587a:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800587c:	06f2      	lsls	r2, r6, #27
 800587e:	d513      	bpl.n	80058a8 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8005880:	04eb      	lsls	r3, r5, #19
 8005882:	d511      	bpl.n	80058a8 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005884:	6823      	ldr	r3, [r4, #0]
 8005886:	681a      	ldr	r2, [r3, #0]
 8005888:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800588c:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800588e:	2210      	movs	r2, #16
 8005890:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005892:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005894:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005896:	2301      	movs	r3, #1
 8005898:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800589c:	2300      	movs	r3, #0
 800589e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80058a2:	4620      	mov	r0, r4
 80058a4:	f7ff ff76 	bl	8005794 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80058a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080058ac <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80058ac:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80058ae:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80058b2:	2b01      	cmp	r3, #1
 80058b4:	f04f 0302 	mov.w	r3, #2
 80058b8:	d02b      	beq.n	8005912 <HAL_DMA2D_ConfigLayer+0x66>
 80058ba:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80058bc:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80058c0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80058c4:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80058c8:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80058cc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80058ce:	4f18      	ldr	r7, [pc, #96]	; (8005930 <HAL_DMA2D_ConfigLayer+0x84>)
 80058d0:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80058d4:	3c09      	subs	r4, #9
 80058d6:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80058d8:	bf9c      	itt	ls
 80058da:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80058de:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80058e0:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80058e4:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80058e6:	bf88      	it	hi
 80058e8:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80058ec:	b999      	cbnz	r1, 8005916 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80058ee:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80058f0:	4039      	ands	r1, r7
 80058f2:	430a      	orrs	r2, r1
 80058f4:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80058f6:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80058f8:	6982      	ldr	r2, [r0, #24]
 80058fa:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80058fc:	d803      	bhi.n	8005906 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80058fe:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8005900:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8005904:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005906:	2301      	movs	r3, #1
 8005908:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800590c:	2300      	movs	r3, #0
 800590e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8005912:	4618      	mov	r0, r3

  return HAL_OK;
}
 8005914:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005916:	69d9      	ldr	r1, [r3, #28]
 8005918:	4039      	ands	r1, r7
 800591a:	430a      	orrs	r2, r1
 800591c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800591e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005920:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005922:	6992      	ldr	r2, [r2, #24]
 8005924:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8005926:	bf9c      	itt	ls
 8005928:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800592c:	621d      	strls	r5, [r3, #32]
 800592e:	e7ea      	b.n	8005906 <HAL_DMA2D_ConfigLayer+0x5a>
 8005930:	00fcfff0 	.word	0x00fcfff0

08005934 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005934:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005938:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8005afc <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800593c:	4a6d      	ldr	r2, [pc, #436]	; (8005af4 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800593e:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8005b00 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005942:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005944:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8005946:	2401      	movs	r4, #1
 8005948:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800594a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800594e:	43ac      	bics	r4, r5
 8005950:	f040 80b7 	bne.w	8005ac2 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005954:	684c      	ldr	r4, [r1, #4]
 8005956:	f024 0c10 	bic.w	ip, r4, #16
 800595a:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800595e:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005960:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005964:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005968:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800596a:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800596e:	d811      	bhi.n	8005994 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8005970:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005972:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005976:	68cf      	ldr	r7, [r1, #12]
 8005978:	fa07 f70e 	lsl.w	r7, r7, lr
 800597c:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8005980:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005982:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005984:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8005988:	f3c4 1700 	ubfx	r7, r4, #4, #1
 800598c:	409f      	lsls	r7, r3
 800598e:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8005992:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8005994:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005996:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800599a:	688f      	ldr	r7, [r1, #8]
 800599c:	fa07 f70e 	lsl.w	r7, r7, lr
 80059a0:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80059a4:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80059a8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80059aa:	d116      	bne.n	80059da <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80059ac:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80059b0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80059b4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80059b8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80059bc:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80059c0:	f04f 0c0f 	mov.w	ip, #15
 80059c4:	fa0c fc0b 	lsl.w	ip, ip, fp
 80059c8:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80059cc:	690f      	ldr	r7, [r1, #16]
 80059ce:	fa07 f70b 	lsl.w	r7, r7, fp
 80059d2:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80059d6:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80059da:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80059dc:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80059de:	f004 0703 	and.w	r7, r4, #3
 80059e2:	fa07 f70e 	lsl.w	r7, r7, lr
 80059e6:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 80059e8:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80059ea:	00e5      	lsls	r5, r4, #3
 80059ec:	d569      	bpl.n	8005ac2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80059ee:	f04f 0b00 	mov.w	fp, #0
 80059f2:	f8cd b004 	str.w	fp, [sp, #4]
 80059f6:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80059fa:	4d3f      	ldr	r5, [pc, #252]	; (8005af8 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80059fc:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8005a00:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8005a04:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8005a08:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8005a0c:	9701      	str	r7, [sp, #4]
 8005a0e:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005a10:	f023 0703 	bic.w	r7, r3, #3
 8005a14:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8005a18:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005a1c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8005a20:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005a24:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8005a28:	f04f 0c0f 	mov.w	ip, #15
 8005a2c:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005a30:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005a32:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005a36:	d04b      	beq.n	8005ad0 <HAL_GPIO_Init+0x19c>
 8005a38:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005a3c:	42a8      	cmp	r0, r5
 8005a3e:	d049      	beq.n	8005ad4 <HAL_GPIO_Init+0x1a0>
 8005a40:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005a44:	42a8      	cmp	r0, r5
 8005a46:	d047      	beq.n	8005ad8 <HAL_GPIO_Init+0x1a4>
 8005a48:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005a4c:	42a8      	cmp	r0, r5
 8005a4e:	d045      	beq.n	8005adc <HAL_GPIO_Init+0x1a8>
 8005a50:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005a54:	42a8      	cmp	r0, r5
 8005a56:	d043      	beq.n	8005ae0 <HAL_GPIO_Init+0x1ac>
 8005a58:	4548      	cmp	r0, r9
 8005a5a:	d043      	beq.n	8005ae4 <HAL_GPIO_Init+0x1b0>
 8005a5c:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8005a60:	42a8      	cmp	r0, r5
 8005a62:	d041      	beq.n	8005ae8 <HAL_GPIO_Init+0x1b4>
 8005a64:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005a68:	42a8      	cmp	r0, r5
 8005a6a:	d03f      	beq.n	8005aec <HAL_GPIO_Init+0x1b8>
 8005a6c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005a70:	42a8      	cmp	r0, r5
 8005a72:	d03d      	beq.n	8005af0 <HAL_GPIO_Init+0x1bc>
 8005a74:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005a78:	42a8      	cmp	r0, r5
 8005a7a:	bf0c      	ite	eq
 8005a7c:	2509      	moveq	r5, #9
 8005a7e:	250a      	movne	r5, #10
 8005a80:	fa05 f50e 	lsl.w	r5, r5, lr
 8005a84:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005a88:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8005a8a:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8005a8c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8005a8e:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8005a92:	bf0c      	ite	eq
 8005a94:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8005a96:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8005a98:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8005a9a:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8005a9c:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8005aa0:	bf0c      	ite	eq
 8005aa2:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8005aa4:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8005aa6:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005aa8:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8005aaa:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8005aae:	bf0c      	ite	eq
 8005ab0:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8005ab2:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8005ab4:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8005ab6:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8005ab8:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8005aba:	bf54      	ite	pl
 8005abc:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8005abe:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8005ac0:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005ac2:	3301      	adds	r3, #1
 8005ac4:	2b10      	cmp	r3, #16
 8005ac6:	f47f af3d 	bne.w	8005944 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8005aca:	b003      	add	sp, #12
 8005acc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005ad0:	465d      	mov	r5, fp
 8005ad2:	e7d5      	b.n	8005a80 <HAL_GPIO_Init+0x14c>
 8005ad4:	2501      	movs	r5, #1
 8005ad6:	e7d3      	b.n	8005a80 <HAL_GPIO_Init+0x14c>
 8005ad8:	2502      	movs	r5, #2
 8005ada:	e7d1      	b.n	8005a80 <HAL_GPIO_Init+0x14c>
 8005adc:	2503      	movs	r5, #3
 8005ade:	e7cf      	b.n	8005a80 <HAL_GPIO_Init+0x14c>
 8005ae0:	2504      	movs	r5, #4
 8005ae2:	e7cd      	b.n	8005a80 <HAL_GPIO_Init+0x14c>
 8005ae4:	2505      	movs	r5, #5
 8005ae6:	e7cb      	b.n	8005a80 <HAL_GPIO_Init+0x14c>
 8005ae8:	2506      	movs	r5, #6
 8005aea:	e7c9      	b.n	8005a80 <HAL_GPIO_Init+0x14c>
 8005aec:	2507      	movs	r5, #7
 8005aee:	e7c7      	b.n	8005a80 <HAL_GPIO_Init+0x14c>
 8005af0:	2508      	movs	r5, #8
 8005af2:	e7c5      	b.n	8005a80 <HAL_GPIO_Init+0x14c>
 8005af4:	40013c00 	.word	0x40013c00
 8005af8:	40020000 	.word	0x40020000
 8005afc:	40023800 	.word	0x40023800
 8005b00:	40021400 	.word	0x40021400

08005b04 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005b04:	b10a      	cbz	r2, 8005b0a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005b06:	6181      	str	r1, [r0, #24]
  }
}
 8005b08:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005b0a:	0409      	lsls	r1, r1, #16
 8005b0c:	e7fb      	b.n	8005b06 <HAL_GPIO_WritePin+0x2>

08005b0e <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005b0e:	6801      	ldr	r1, [r0, #0]
 8005b10:	694b      	ldr	r3, [r1, #20]
 8005b12:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8005b16:	f04f 0200 	mov.w	r2, #0
 8005b1a:	d010      	beq.n	8005b3e <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005b1c:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005b20:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8005b22:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8005b24:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005b26:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005b2a:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005b2e:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005b30:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005b34:	f043 0304 	orr.w	r3, r3, #4
 8005b38:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8005b3a:	2001      	movs	r0, #1
 8005b3c:	4770      	bx	lr
  }
  return HAL_OK;
 8005b3e:	4618      	mov	r0, r3
}
 8005b40:	4770      	bx	lr

08005b42 <I2C_WaitOnFlagUntilTimeout>:
{
 8005b42:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8005b46:	4606      	mov	r6, r0
 8005b48:	460f      	mov	r7, r1
 8005b4a:	4691      	mov	r9, r2
 8005b4c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005b4e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8005b52:	6833      	ldr	r3, [r6, #0]
 8005b54:	f1ba 0f01 	cmp.w	sl, #1
 8005b58:	bf0c      	ite	eq
 8005b5a:	695c      	ldreq	r4, [r3, #20]
 8005b5c:	699c      	ldrne	r4, [r3, #24]
 8005b5e:	ea27 0404 	bic.w	r4, r7, r4
 8005b62:	b2a4      	uxth	r4, r4
 8005b64:	fab4 f484 	clz	r4, r4
 8005b68:	0964      	lsrs	r4, r4, #5
 8005b6a:	45a1      	cmp	r9, r4
 8005b6c:	d001      	beq.n	8005b72 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005b6e:	2000      	movs	r0, #0
 8005b70:	e017      	b.n	8005ba2 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8005b72:	1c6a      	adds	r2, r5, #1
 8005b74:	d0ee      	beq.n	8005b54 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005b76:	f7ff fae9 	bl	800514c <HAL_GetTick>
 8005b7a:	9b08      	ldr	r3, [sp, #32]
 8005b7c:	1ac0      	subs	r0, r0, r3
 8005b7e:	42a8      	cmp	r0, r5
 8005b80:	d801      	bhi.n	8005b86 <I2C_WaitOnFlagUntilTimeout+0x44>
 8005b82:	2d00      	cmp	r5, #0
 8005b84:	d1e5      	bne.n	8005b52 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005b86:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005b88:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005b8a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005b8c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005b90:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005b94:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005b96:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005b9a:	f042 0220 	orr.w	r2, r2, #32
 8005b9e:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8005ba0:	2001      	movs	r0, #1
}
 8005ba2:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08005ba6 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8005ba6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005baa:	4604      	mov	r4, r0
 8005bac:	460f      	mov	r7, r1
 8005bae:	4616      	mov	r6, r2
 8005bb0:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005bb2:	6825      	ldr	r5, [r4, #0]
 8005bb4:	6968      	ldr	r0, [r5, #20]
 8005bb6:	ea27 0000 	bic.w	r0, r7, r0
 8005bba:	b280      	uxth	r0, r0
 8005bbc:	b1b8      	cbz	r0, 8005bee <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005bbe:	696b      	ldr	r3, [r5, #20]
 8005bc0:	055a      	lsls	r2, r3, #21
 8005bc2:	d516      	bpl.n	8005bf2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005bc4:	682b      	ldr	r3, [r5, #0]
 8005bc6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005bca:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005bcc:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005bd0:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005bd2:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005bd4:	2300      	movs	r3, #0
 8005bd6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005bd8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005bdc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005be0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005be2:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005be6:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005be8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8005bec:	2001      	movs	r0, #1
}
 8005bee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8005bf2:	1c73      	adds	r3, r6, #1
 8005bf4:	d0de      	beq.n	8005bb4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005bf6:	f7ff faa9 	bl	800514c <HAL_GetTick>
 8005bfa:	eba0 0008 	sub.w	r0, r0, r8
 8005bfe:	42b0      	cmp	r0, r6
 8005c00:	d801      	bhi.n	8005c06 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8005c02:	2e00      	cmp	r6, #0
 8005c04:	d1d5      	bne.n	8005bb2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005c06:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005c08:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005c0a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005c0c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005c10:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005c14:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005c16:	f042 0220 	orr.w	r2, r2, #32
 8005c1a:	e7e4      	b.n	8005be6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08005c1c <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8005c1c:	b570      	push	{r4, r5, r6, lr}
 8005c1e:	4604      	mov	r4, r0
 8005c20:	460d      	mov	r5, r1
 8005c22:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005c24:	6821      	ldr	r1, [r4, #0]
 8005c26:	694b      	ldr	r3, [r1, #20]
 8005c28:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8005c2c:	d001      	beq.n	8005c32 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8005c2e:	2000      	movs	r0, #0
 8005c30:	e010      	b.n	8005c54 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005c32:	694a      	ldr	r2, [r1, #20]
 8005c34:	06d2      	lsls	r2, r2, #27
 8005c36:	d50e      	bpl.n	8005c56 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005c38:	f06f 0210 	mvn.w	r2, #16
 8005c3c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005c3e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005c40:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005c42:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005c46:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005c4a:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005c4c:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8005c4e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8005c52:	2001      	movs	r0, #1
}
 8005c54:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005c56:	f7ff fa79 	bl	800514c <HAL_GetTick>
 8005c5a:	1b80      	subs	r0, r0, r6
 8005c5c:	42a8      	cmp	r0, r5
 8005c5e:	d801      	bhi.n	8005c64 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8005c60:	2d00      	cmp	r5, #0
 8005c62:	d1df      	bne.n	8005c24 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005c64:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8005c66:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005c68:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005c6a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005c6e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005c72:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005c74:	f042 0220 	orr.w	r2, r2, #32
 8005c78:	e7e8      	b.n	8005c4c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08005c7a <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005c7a:	b570      	push	{r4, r5, r6, lr}
 8005c7c:	4604      	mov	r4, r0
 8005c7e:	460d      	mov	r5, r1
 8005c80:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005c82:	6823      	ldr	r3, [r4, #0]
 8005c84:	695b      	ldr	r3, [r3, #20]
 8005c86:	075b      	lsls	r3, r3, #29
 8005c88:	d501      	bpl.n	8005c8e <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005c8a:	2000      	movs	r0, #0
}
 8005c8c:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005c8e:	4620      	mov	r0, r4
 8005c90:	f7ff ff3d 	bl	8005b0e <I2C_IsAcknowledgeFailed>
 8005c94:	b9a8      	cbnz	r0, 8005cc2 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005c96:	1c6a      	adds	r2, r5, #1
 8005c98:	d0f3      	beq.n	8005c82 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005c9a:	f7ff fa57 	bl	800514c <HAL_GetTick>
 8005c9e:	1b80      	subs	r0, r0, r6
 8005ca0:	42a8      	cmp	r0, r5
 8005ca2:	d801      	bhi.n	8005ca8 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8005ca4:	2d00      	cmp	r5, #0
 8005ca6:	d1ec      	bne.n	8005c82 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005ca8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005caa:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005cac:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005cae:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005cb2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005cb6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005cb8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005cbc:	f042 0220 	orr.w	r2, r2, #32
 8005cc0:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005cc2:	2001      	movs	r0, #1
 8005cc4:	e7e2      	b.n	8005c8c <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08005cc6 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005cc6:	b570      	push	{r4, r5, r6, lr}
 8005cc8:	4604      	mov	r4, r0
 8005cca:	460d      	mov	r5, r1
 8005ccc:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005cce:	6823      	ldr	r3, [r4, #0]
 8005cd0:	695b      	ldr	r3, [r3, #20]
 8005cd2:	061b      	lsls	r3, r3, #24
 8005cd4:	d501      	bpl.n	8005cda <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005cd6:	2000      	movs	r0, #0
}
 8005cd8:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005cda:	4620      	mov	r0, r4
 8005cdc:	f7ff ff17 	bl	8005b0e <I2C_IsAcknowledgeFailed>
 8005ce0:	b9a8      	cbnz	r0, 8005d0e <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005ce2:	1c6a      	adds	r2, r5, #1
 8005ce4:	d0f3      	beq.n	8005cce <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005ce6:	f7ff fa31 	bl	800514c <HAL_GetTick>
 8005cea:	1b80      	subs	r0, r0, r6
 8005cec:	42a8      	cmp	r0, r5
 8005cee:	d801      	bhi.n	8005cf4 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005cf0:	2d00      	cmp	r5, #0
 8005cf2:	d1ec      	bne.n	8005cce <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005cf4:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005cf6:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005cf8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005cfa:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005cfe:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005d02:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005d04:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005d08:	f042 0220 	orr.w	r2, r2, #32
 8005d0c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005d0e:	2001      	movs	r0, #1
 8005d10:	e7e2      	b.n	8005cd8 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08005d14 <I2C_RequestMemoryWrite>:
{
 8005d14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005d18:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005d1a:	6802      	ldr	r2, [r0, #0]
{
 8005d1c:	b085      	sub	sp, #20
 8005d1e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8005d22:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005d24:	6813      	ldr	r3, [r2, #0]
 8005d26:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005d2a:	6013      	str	r3, [r2, #0]
{
 8005d2c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005d2e:	463b      	mov	r3, r7
 8005d30:	f8cd 8000 	str.w	r8, [sp]
 8005d34:	2200      	movs	r2, #0
 8005d36:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005d3a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005d3c:	f7ff ff01 	bl	8005b42 <I2C_WaitOnFlagUntilTimeout>
 8005d40:	6823      	ldr	r3, [r4, #0]
 8005d42:	b138      	cbz	r0, 8005d54 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	05db      	lsls	r3, r3, #23
 8005d48:	d502      	bpl.n	8005d50 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005d4a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005d4e:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005d50:	2003      	movs	r0, #3
 8005d52:	e00a      	b.n	8005d6a <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005d54:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005d58:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005d5a:	4919      	ldr	r1, [pc, #100]	; (8005dc0 <I2C_RequestMemoryWrite+0xac>)
 8005d5c:	4643      	mov	r3, r8
 8005d5e:	463a      	mov	r2, r7
 8005d60:	4620      	mov	r0, r4
 8005d62:	f7ff ff20 	bl	8005ba6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005d66:	b118      	cbz	r0, 8005d70 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8005d68:	2001      	movs	r0, #1
}
 8005d6a:	b005      	add	sp, #20
 8005d6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005d70:	6823      	ldr	r3, [r4, #0]
 8005d72:	9003      	str	r0, [sp, #12]
 8005d74:	695a      	ldr	r2, [r3, #20]
 8005d76:	9203      	str	r2, [sp, #12]
 8005d78:	699b      	ldr	r3, [r3, #24]
 8005d7a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005d7c:	4642      	mov	r2, r8
 8005d7e:	4639      	mov	r1, r7
 8005d80:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005d82:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005d84:	f7ff ff9f 	bl	8005cc6 <I2C_WaitOnTXEFlagUntilTimeout>
 8005d88:	b140      	cbz	r0, 8005d9c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005d8a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d8c:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005d8e:	bf01      	itttt	eq
 8005d90:	6822      	ldreq	r2, [r4, #0]
 8005d92:	6813      	ldreq	r3, [r2, #0]
 8005d94:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005d98:	6013      	streq	r3, [r2, #0]
 8005d9a:	e7e5      	b.n	8005d68 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005d9c:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005da0:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005da2:	d102      	bne.n	8005daa <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005da4:	b2ed      	uxtb	r5, r5
 8005da6:	611d      	str	r5, [r3, #16]
 8005da8:	e7df      	b.n	8005d6a <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005daa:	0a2a      	lsrs	r2, r5, #8
 8005dac:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005dae:	4639      	mov	r1, r7
 8005db0:	4642      	mov	r2, r8
 8005db2:	4620      	mov	r0, r4
 8005db4:	f7ff ff87 	bl	8005cc6 <I2C_WaitOnTXEFlagUntilTimeout>
 8005db8:	2800      	cmp	r0, #0
 8005dba:	d1e6      	bne.n	8005d8a <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005dbc:	6823      	ldr	r3, [r4, #0]
 8005dbe:	e7f1      	b.n	8005da4 <I2C_RequestMemoryWrite+0x90>
 8005dc0:	00010002 	.word	0x00010002

08005dc4 <I2C_RequestMemoryRead>:
{
 8005dc4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005dc8:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005dca:	6803      	ldr	r3, [r0, #0]
{
 8005dcc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005dce:	681a      	ldr	r2, [r3, #0]
 8005dd0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005dd4:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005dd6:	681a      	ldr	r2, [r3, #0]
{
 8005dd8:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005ddc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005de0:	601a      	str	r2, [r3, #0]
{
 8005de2:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005de4:	463b      	mov	r3, r7
 8005de6:	f8cd 8000 	str.w	r8, [sp]
 8005dea:	2200      	movs	r2, #0
 8005dec:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005df0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005df2:	f7ff fea6 	bl	8005b42 <I2C_WaitOnFlagUntilTimeout>
 8005df6:	6823      	ldr	r3, [r4, #0]
 8005df8:	b148      	cbz	r0, 8005e0e <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005dfa:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005dfc:	05db      	lsls	r3, r3, #23
 8005dfe:	d502      	bpl.n	8005e06 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005e00:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005e04:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005e06:	2003      	movs	r0, #3
}
 8005e08:	b004      	add	sp, #16
 8005e0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005e0e:	fa5f f986 	uxtb.w	r9, r6
 8005e12:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005e16:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005e18:	492a      	ldr	r1, [pc, #168]	; (8005ec4 <I2C_RequestMemoryRead+0x100>)
 8005e1a:	4643      	mov	r3, r8
 8005e1c:	463a      	mov	r2, r7
 8005e1e:	4620      	mov	r0, r4
 8005e20:	f7ff fec1 	bl	8005ba6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005e24:	b108      	cbz	r0, 8005e2a <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8005e26:	2001      	movs	r0, #1
 8005e28:	e7ee      	b.n	8005e08 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005e2a:	6823      	ldr	r3, [r4, #0]
 8005e2c:	9003      	str	r0, [sp, #12]
 8005e2e:	695a      	ldr	r2, [r3, #20]
 8005e30:	9203      	str	r2, [sp, #12]
 8005e32:	699b      	ldr	r3, [r3, #24]
 8005e34:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005e36:	4642      	mov	r2, r8
 8005e38:	4639      	mov	r1, r7
 8005e3a:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005e3c:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005e3e:	f7ff ff42 	bl	8005cc6 <I2C_WaitOnTXEFlagUntilTimeout>
 8005e42:	b140      	cbz	r0, 8005e56 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005e44:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e46:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005e48:	bf01      	itttt	eq
 8005e4a:	6822      	ldreq	r2, [r4, #0]
 8005e4c:	6813      	ldreq	r3, [r2, #0]
 8005e4e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005e52:	6013      	streq	r3, [r2, #0]
 8005e54:	e7e7      	b.n	8005e26 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005e56:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005e5a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005e5c:	d11a      	bne.n	8005e94 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005e5e:	b2ed      	uxtb	r5, r5
 8005e60:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005e62:	4642      	mov	r2, r8
 8005e64:	4639      	mov	r1, r7
 8005e66:	4620      	mov	r0, r4
 8005e68:	f7ff ff2d 	bl	8005cc6 <I2C_WaitOnTXEFlagUntilTimeout>
 8005e6c:	2800      	cmp	r0, #0
 8005e6e:	d1e9      	bne.n	8005e44 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005e70:	6822      	ldr	r2, [r4, #0]
 8005e72:	6813      	ldr	r3, [r2, #0]
 8005e74:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005e78:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005e7a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005e7e:	4602      	mov	r2, r0
 8005e80:	f8cd 8000 	str.w	r8, [sp]
 8005e84:	463b      	mov	r3, r7
 8005e86:	4620      	mov	r0, r4
 8005e88:	f7ff fe5b 	bl	8005b42 <I2C_WaitOnFlagUntilTimeout>
 8005e8c:	6822      	ldr	r2, [r4, #0]
 8005e8e:	b160      	cbz	r0, 8005eaa <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005e90:	6813      	ldr	r3, [r2, #0]
 8005e92:	e7b3      	b.n	8005dfc <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005e94:	0a2a      	lsrs	r2, r5, #8
 8005e96:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005e98:	4639      	mov	r1, r7
 8005e9a:	4642      	mov	r2, r8
 8005e9c:	4620      	mov	r0, r4
 8005e9e:	f7ff ff12 	bl	8005cc6 <I2C_WaitOnTXEFlagUntilTimeout>
 8005ea2:	2800      	cmp	r0, #0
 8005ea4:	d1ce      	bne.n	8005e44 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005ea6:	6823      	ldr	r3, [r4, #0]
 8005ea8:	e7d9      	b.n	8005e5e <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005eaa:	f049 0301 	orr.w	r3, r9, #1
 8005eae:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005eb0:	4904      	ldr	r1, [pc, #16]	; (8005ec4 <I2C_RequestMemoryRead+0x100>)
 8005eb2:	4643      	mov	r3, r8
 8005eb4:	463a      	mov	r2, r7
 8005eb6:	4620      	mov	r0, r4
 8005eb8:	f7ff fe75 	bl	8005ba6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005ebc:	3800      	subs	r0, #0
 8005ebe:	bf18      	it	ne
 8005ec0:	2001      	movne	r0, #1
 8005ec2:	e7a1      	b.n	8005e08 <I2C_RequestMemoryRead+0x44>
 8005ec4:	00010002 	.word	0x00010002

08005ec8 <HAL_I2C_Init>:
{
 8005ec8:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005eca:	4604      	mov	r4, r0
 8005ecc:	b908      	cbnz	r0, 8005ed2 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005ece:	2001      	movs	r0, #1
}
 8005ed0:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005ed2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005ed6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005eda:	b91b      	cbnz	r3, 8005ee4 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005edc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005ee0:	f7fb fe2c 	bl	8001b3c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005ee4:	2324      	movs	r3, #36	; 0x24
 8005ee6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005eea:	6823      	ldr	r3, [r4, #0]
 8005eec:	681a      	ldr	r2, [r3, #0]
 8005eee:	f022 0201 	bic.w	r2, r2, #1
 8005ef2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005ef4:	681a      	ldr	r2, [r3, #0]
 8005ef6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005efa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005efc:	681a      	ldr	r2, [r3, #0]
 8005efe:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005f02:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005f04:	f000 fe6e 	bl	8006be4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005f08:	4b3f      	ldr	r3, [pc, #252]	; (8006008 <HAL_I2C_Init+0x140>)
 8005f0a:	6865      	ldr	r5, [r4, #4]
 8005f0c:	429d      	cmp	r5, r3
 8005f0e:	bf94      	ite	ls
 8005f10:	4b3e      	ldrls	r3, [pc, #248]	; (800600c <HAL_I2C_Init+0x144>)
 8005f12:	4b3f      	ldrhi	r3, [pc, #252]	; (8006010 <HAL_I2C_Init+0x148>)
 8005f14:	4298      	cmp	r0, r3
 8005f16:	bf8c      	ite	hi
 8005f18:	2300      	movhi	r3, #0
 8005f1a:	2301      	movls	r3, #1
 8005f1c:	2b00      	cmp	r3, #0
 8005f1e:	d1d6      	bne.n	8005ece <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005f20:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005f22:	4e39      	ldr	r6, [pc, #228]	; (8006008 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005f24:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005f26:	493b      	ldr	r1, [pc, #236]	; (8006014 <HAL_I2C_Init+0x14c>)
 8005f28:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005f2c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005f30:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005f32:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005f34:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005f36:	bf88      	it	hi
 8005f38:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8005f3c:	6a13      	ldr	r3, [r2, #32]
 8005f3e:	bf88      	it	hi
 8005f40:	4371      	mulhi	r1, r6
 8005f42:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005f46:	bf84      	itt	hi
 8005f48:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8005f4c:	fbb1 f1f6 	udivhi	r1, r1, r6
 8005f50:	3101      	adds	r1, #1
 8005f52:	4319      	orrs	r1, r3
 8005f54:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005f56:	69d1      	ldr	r1, [r2, #28]
 8005f58:	1e43      	subs	r3, r0, #1
 8005f5a:	482b      	ldr	r0, [pc, #172]	; (8006008 <HAL_I2C_Init+0x140>)
 8005f5c:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005f60:	4285      	cmp	r5, r0
 8005f62:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005f66:	d832      	bhi.n	8005fce <HAL_I2C_Init+0x106>
 8005f68:	006d      	lsls	r5, r5, #1
 8005f6a:	f640 70fc 	movw	r0, #4092	; 0xffc
 8005f6e:	fbb3 f3f5 	udiv	r3, r3, r5
 8005f72:	3301      	adds	r3, #1
 8005f74:	4203      	tst	r3, r0
 8005f76:	d042      	beq.n	8005ffe <HAL_I2C_Init+0x136>
 8005f78:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f7c:	430b      	orrs	r3, r1
 8005f7e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005f80:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005f84:	6811      	ldr	r1, [r2, #0]
 8005f86:	4303      	orrs	r3, r0
 8005f88:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005f8c:	430b      	orrs	r3, r1
 8005f8e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005f90:	6891      	ldr	r1, [r2, #8]
 8005f92:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005f96:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8005f9a:	4303      	orrs	r3, r0
 8005f9c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005fa0:	430b      	orrs	r3, r1
 8005fa2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005fa4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005fa8:	68d1      	ldr	r1, [r2, #12]
 8005faa:	4303      	orrs	r3, r0
 8005fac:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005fb0:	430b      	orrs	r3, r1
 8005fb2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005fb4:	6813      	ldr	r3, [r2, #0]
 8005fb6:	f043 0301 	orr.w	r3, r3, #1
 8005fba:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005fbc:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8005fbe:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005fc0:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8005fc2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005fc6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005fc8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005fcc:	e780      	b.n	8005ed0 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005fce:	68a0      	ldr	r0, [r4, #8]
 8005fd0:	b950      	cbnz	r0, 8005fe8 <HAL_I2C_Init+0x120>
 8005fd2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005fd6:	fbb3 f3f5 	udiv	r3, r3, r5
 8005fda:	3301      	adds	r3, #1
 8005fdc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005fe0:	b17b      	cbz	r3, 8006002 <HAL_I2C_Init+0x13a>
 8005fe2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005fe6:	e7c9      	b.n	8005f7c <HAL_I2C_Init+0xb4>
 8005fe8:	2019      	movs	r0, #25
 8005fea:	4345      	muls	r5, r0
 8005fec:	fbb3 f3f5 	udiv	r3, r3, r5
 8005ff0:	3301      	adds	r3, #1
 8005ff2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ff6:	b123      	cbz	r3, 8006002 <HAL_I2C_Init+0x13a>
 8005ff8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005ffc:	e7be      	b.n	8005f7c <HAL_I2C_Init+0xb4>
 8005ffe:	2304      	movs	r3, #4
 8006000:	e7bc      	b.n	8005f7c <HAL_I2C_Init+0xb4>
 8006002:	2301      	movs	r3, #1
 8006004:	e7ba      	b.n	8005f7c <HAL_I2C_Init+0xb4>
 8006006:	bf00      	nop
 8006008:	000186a0 	.word	0x000186a0
 800600c:	001e847f 	.word	0x001e847f
 8006010:	003d08ff 	.word	0x003d08ff
 8006014:	000f4240 	.word	0x000f4240

08006018 <HAL_I2C_Mem_Write>:
{
 8006018:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800601c:	4604      	mov	r4, r0
 800601e:	4699      	mov	r9, r3
 8006020:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006022:	460f      	mov	r7, r1
 8006024:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006026:	f7ff f891 	bl	800514c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800602a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800602e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006030:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006032:	d003      	beq.n	800603c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006034:	2002      	movs	r0, #2
}
 8006036:	b003      	add	sp, #12
 8006038:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800603c:	9000      	str	r0, [sp, #0]
 800603e:	493c      	ldr	r1, [pc, #240]	; (8006130 <HAL_I2C_Mem_Write+0x118>)
 8006040:	2319      	movs	r3, #25
 8006042:	2201      	movs	r2, #1
 8006044:	4620      	mov	r0, r4
 8006046:	f7ff fd7c 	bl	8005b42 <I2C_WaitOnFlagUntilTimeout>
 800604a:	2800      	cmp	r0, #0
 800604c:	d1f2      	bne.n	8006034 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800604e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006052:	2b01      	cmp	r3, #1
 8006054:	d0ee      	beq.n	8006034 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006056:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006058:	2301      	movs	r3, #1
 800605a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800605e:	6803      	ldr	r3, [r0, #0]
 8006060:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006062:	bf5e      	ittt	pl
 8006064:	6803      	ldrpl	r3, [r0, #0]
 8006066:	f043 0301 	orrpl.w	r3, r3, #1
 800606a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800606c:	6803      	ldr	r3, [r0, #0]
 800606e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006072:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006074:	2321      	movs	r3, #33	; 0x21
 8006076:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800607a:	2340      	movs	r3, #64	; 0x40
 800607c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006080:	2300      	movs	r3, #0
 8006082:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006084:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006086:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006088:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800608c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800608e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006090:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006092:	4b28      	ldr	r3, [pc, #160]	; (8006134 <HAL_I2C_Mem_Write+0x11c>)
 8006094:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006096:	e9cd 6500 	strd	r6, r5, [sp]
 800609a:	464b      	mov	r3, r9
 800609c:	4642      	mov	r2, r8
 800609e:	4639      	mov	r1, r7
 80060a0:	4620      	mov	r0, r4
 80060a2:	f7ff fe37 	bl	8005d14 <I2C_RequestMemoryWrite>
 80060a6:	2800      	cmp	r0, #0
 80060a8:	d02a      	beq.n	8006100 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80060aa:	2001      	movs	r0, #1
 80060ac:	e7c3      	b.n	8006036 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80060ae:	f7ff fe0a 	bl	8005cc6 <I2C_WaitOnTXEFlagUntilTimeout>
 80060b2:	b140      	cbz	r0, 80060c6 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80060b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80060b6:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80060b8:	bf01      	itttt	eq
 80060ba:	6822      	ldreq	r2, [r4, #0]
 80060bc:	6813      	ldreq	r3, [r2, #0]
 80060be:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80060c2:	6013      	streq	r3, [r2, #0]
 80060c4:	e7f1      	b.n	80060aa <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80060c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80060c8:	6827      	ldr	r7, [r4, #0]
 80060ca:	461a      	mov	r2, r3
 80060cc:	f812 1b01 	ldrb.w	r1, [r2], #1
 80060d0:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80060d2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80060d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80060d6:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80060d8:	3a01      	subs	r2, #1
 80060da:	b292      	uxth	r2, r2
 80060dc:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80060de:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80060e0:	1e48      	subs	r0, r1, #1
 80060e2:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80060e4:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80060e6:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80060e8:	d50a      	bpl.n	8006100 <HAL_I2C_Mem_Write+0xe8>
 80060ea:	b148      	cbz	r0, 8006100 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80060ec:	785a      	ldrb	r2, [r3, #1]
 80060ee:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80060f0:	3302      	adds	r3, #2
 80060f2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80060f4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80060f6:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80060f8:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80060fa:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80060fc:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80060fe:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006100:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006102:	462a      	mov	r2, r5
 8006104:	4631      	mov	r1, r6
 8006106:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006108:	2b00      	cmp	r3, #0
 800610a:	d1d0      	bne.n	80060ae <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800610c:	f7ff fdb5 	bl	8005c7a <I2C_WaitOnBTFFlagUntilTimeout>
 8006110:	2800      	cmp	r0, #0
 8006112:	d1cf      	bne.n	80060b4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006114:	6822      	ldr	r2, [r4, #0]
 8006116:	6813      	ldr	r3, [r2, #0]
 8006118:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800611c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800611e:	2320      	movs	r3, #32
 8006120:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006124:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006128:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800612c:	e783      	b.n	8006036 <HAL_I2C_Mem_Write+0x1e>
 800612e:	bf00      	nop
 8006130:	00100002 	.word	0x00100002
 8006134:	ffff0000 	.word	0xffff0000

08006138 <HAL_I2C_Mem_Read>:
{
 8006138:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800613c:	4604      	mov	r4, r0
 800613e:	b087      	sub	sp, #28
 8006140:	4699      	mov	r9, r3
 8006142:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006144:	460d      	mov	r5, r1
 8006146:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006148:	f7ff f800 	bl	800514c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800614c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006150:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006152:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006154:	d004      	beq.n	8006160 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006156:	2502      	movs	r5, #2
}
 8006158:	4628      	mov	r0, r5
 800615a:	b007      	add	sp, #28
 800615c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006160:	9000      	str	r0, [sp, #0]
 8006162:	4976      	ldr	r1, [pc, #472]	; (800633c <HAL_I2C_Mem_Read+0x204>)
 8006164:	2319      	movs	r3, #25
 8006166:	2201      	movs	r2, #1
 8006168:	4620      	mov	r0, r4
 800616a:	f7ff fcea 	bl	8005b42 <I2C_WaitOnFlagUntilTimeout>
 800616e:	2800      	cmp	r0, #0
 8006170:	d1f1      	bne.n	8006156 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006172:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006176:	2b01      	cmp	r3, #1
 8006178:	d0ed      	beq.n	8006156 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800617a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800617c:	2301      	movs	r3, #1
 800617e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006182:	6803      	ldr	r3, [r0, #0]
 8006184:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006186:	bf5e      	ittt	pl
 8006188:	6803      	ldrpl	r3, [r0, #0]
 800618a:	f043 0301 	orrpl.w	r3, r3, #1
 800618e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006190:	6803      	ldr	r3, [r0, #0]
 8006192:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006196:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006198:	2322      	movs	r3, #34	; 0x22
 800619a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800619e:	2340      	movs	r3, #64	; 0x40
 80061a0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80061a4:	2300      	movs	r3, #0
 80061a6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80061a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80061aa:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80061ac:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80061b0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80061b2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80061b4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80061b6:	4b62      	ldr	r3, [pc, #392]	; (8006340 <HAL_I2C_Mem_Read+0x208>)
 80061b8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80061ba:	4629      	mov	r1, r5
 80061bc:	e9cd 7600 	strd	r7, r6, [sp]
 80061c0:	464b      	mov	r3, r9
 80061c2:	4642      	mov	r2, r8
 80061c4:	4620      	mov	r0, r4
 80061c6:	f7ff fdfd 	bl	8005dc4 <I2C_RequestMemoryRead>
 80061ca:	4605      	mov	r5, r0
 80061cc:	b108      	cbz	r0, 80061d2 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80061ce:	2501      	movs	r5, #1
 80061d0:	e7c2      	b.n	8006158 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80061d2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80061d4:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80061d6:	b9b2      	cbnz	r2, 8006206 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80061d8:	9002      	str	r0, [sp, #8]
 80061da:	695a      	ldr	r2, [r3, #20]
 80061dc:	9202      	str	r2, [sp, #8]
 80061de:	699a      	ldr	r2, [r3, #24]
 80061e0:	9202      	str	r2, [sp, #8]
 80061e2:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80061e4:	681a      	ldr	r2, [r3, #0]
 80061e6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80061ea:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80061ec:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006344 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 80061f0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80061f2:	2b00      	cmp	r3, #0
 80061f4:	d12c      	bne.n	8006250 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80061f6:	2220      	movs	r2, #32
 80061f8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80061fc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006200:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006204:	e7a8      	b.n	8006158 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006206:	2a01      	cmp	r2, #1
 8006208:	d10a      	bne.n	8006220 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800620a:	681a      	ldr	r2, [r3, #0]
 800620c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006210:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006212:	9003      	str	r0, [sp, #12]
 8006214:	695a      	ldr	r2, [r3, #20]
 8006216:	9203      	str	r2, [sp, #12]
 8006218:	699a      	ldr	r2, [r3, #24]
 800621a:	9203      	str	r2, [sp, #12]
 800621c:	9a03      	ldr	r2, [sp, #12]
 800621e:	e7e1      	b.n	80061e4 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006220:	2a02      	cmp	r2, #2
 8006222:	d10e      	bne.n	8006242 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006224:	681a      	ldr	r2, [r3, #0]
 8006226:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800622a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800622c:	681a      	ldr	r2, [r3, #0]
 800622e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006232:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006234:	9004      	str	r0, [sp, #16]
 8006236:	695a      	ldr	r2, [r3, #20]
 8006238:	9204      	str	r2, [sp, #16]
 800623a:	699b      	ldr	r3, [r3, #24]
 800623c:	9304      	str	r3, [sp, #16]
 800623e:	9b04      	ldr	r3, [sp, #16]
 8006240:	e7d4      	b.n	80061ec <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006242:	9005      	str	r0, [sp, #20]
 8006244:	695a      	ldr	r2, [r3, #20]
 8006246:	9205      	str	r2, [sp, #20]
 8006248:	699b      	ldr	r3, [r3, #24]
 800624a:	9305      	str	r3, [sp, #20]
 800624c:	9b05      	ldr	r3, [sp, #20]
 800624e:	e7cd      	b.n	80061ec <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006250:	2b03      	cmp	r3, #3
 8006252:	d856      	bhi.n	8006302 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006254:	2b01      	cmp	r3, #1
 8006256:	d115      	bne.n	8006284 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006258:	4632      	mov	r2, r6
 800625a:	4639      	mov	r1, r7
 800625c:	4620      	mov	r0, r4
 800625e:	f7ff fcdd 	bl	8005c1c <I2C_WaitOnRXNEFlagUntilTimeout>
 8006262:	2800      	cmp	r0, #0
 8006264:	d1b3      	bne.n	80061ce <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006266:	6823      	ldr	r3, [r4, #0]
 8006268:	691a      	ldr	r2, [r3, #16]
 800626a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800626c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800626e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006270:	3301      	adds	r3, #1
 8006272:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006274:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006276:	3b01      	subs	r3, #1
 8006278:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800627a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800627c:	3b01      	subs	r3, #1
 800627e:	b29b      	uxth	r3, r3
 8006280:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006282:	e7b5      	b.n	80061f0 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006284:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006286:	9600      	str	r6, [sp, #0]
 8006288:	463b      	mov	r3, r7
 800628a:	f04f 0200 	mov.w	r2, #0
 800628e:	4641      	mov	r1, r8
 8006290:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006292:	d119      	bne.n	80062c8 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006294:	f7ff fc55 	bl	8005b42 <I2C_WaitOnFlagUntilTimeout>
 8006298:	2800      	cmp	r0, #0
 800629a:	d198      	bne.n	80061ce <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800629c:	6823      	ldr	r3, [r4, #0]
 800629e:	681a      	ldr	r2, [r3, #0]
 80062a0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80062a4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80062a6:	691a      	ldr	r2, [r3, #16]
 80062a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80062aa:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80062ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80062ae:	1c53      	adds	r3, r2, #1
 80062b0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80062b2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80062b4:	3b01      	subs	r3, #1
 80062b6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80062b8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80062ba:	3b01      	subs	r3, #1
 80062bc:	b29b      	uxth	r3, r3
 80062be:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80062c0:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80062c2:	691b      	ldr	r3, [r3, #16]
 80062c4:	7053      	strb	r3, [r2, #1]
 80062c6:	e7d2      	b.n	800626e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80062c8:	f7ff fc3b 	bl	8005b42 <I2C_WaitOnFlagUntilTimeout>
 80062cc:	2800      	cmp	r0, #0
 80062ce:	f47f af7e 	bne.w	80061ce <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80062d2:	6823      	ldr	r3, [r4, #0]
 80062d4:	681a      	ldr	r2, [r3, #0]
 80062d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80062da:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80062dc:	691a      	ldr	r2, [r3, #16]
 80062de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80062e0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80062e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80062e4:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80062e6:	3301      	adds	r3, #1
 80062e8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80062ea:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80062ec:	3b01      	subs	r3, #1
 80062ee:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80062f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80062f2:	3b01      	subs	r3, #1
 80062f4:	b29b      	uxth	r3, r3
 80062f6:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80062f8:	4602      	mov	r2, r0
 80062fa:	463b      	mov	r3, r7
 80062fc:	4641      	mov	r1, r8
 80062fe:	4620      	mov	r0, r4
 8006300:	e7c8      	b.n	8006294 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006302:	4632      	mov	r2, r6
 8006304:	4639      	mov	r1, r7
 8006306:	4620      	mov	r0, r4
 8006308:	f7ff fc88 	bl	8005c1c <I2C_WaitOnRXNEFlagUntilTimeout>
 800630c:	2800      	cmp	r0, #0
 800630e:	f47f af5e 	bne.w	80061ce <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006312:	6823      	ldr	r3, [r4, #0]
 8006314:	691a      	ldr	r2, [r3, #16]
 8006316:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006318:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800631a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800631c:	1c53      	adds	r3, r2, #1
 800631e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006320:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006322:	3b01      	subs	r3, #1
 8006324:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006326:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006328:	3b01      	subs	r3, #1
 800632a:	b29b      	uxth	r3, r3
 800632c:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800632e:	6823      	ldr	r3, [r4, #0]
 8006330:	6959      	ldr	r1, [r3, #20]
 8006332:	0749      	lsls	r1, r1, #29
 8006334:	f57f af5c 	bpl.w	80061f0 <HAL_I2C_Mem_Read+0xb8>
 8006338:	e7c3      	b.n	80062c2 <HAL_I2C_Mem_Read+0x18a>
 800633a:	bf00      	nop
 800633c:	00100002 	.word	0x00100002
 8006340:	ffff0000 	.word	0xffff0000
 8006344:	00010004 	.word	0x00010004

08006348 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006348:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800634a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800634e:	2b20      	cmp	r3, #32
 8006350:	b2dc      	uxtb	r4, r3
 8006352:	d116      	bne.n	8006382 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006354:	2324      	movs	r3, #36	; 0x24
 8006356:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800635a:	6803      	ldr	r3, [r0, #0]
 800635c:	681a      	ldr	r2, [r3, #0]
 800635e:	f022 0201 	bic.w	r2, r2, #1
 8006362:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006364:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006366:	f022 0210 	bic.w	r2, r2, #16
 800636a:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 800636c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800636e:	4311      	orrs	r1, r2
 8006370:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006372:	681a      	ldr	r2, [r3, #0]
 8006374:	f042 0201 	orr.w	r2, r2, #1
 8006378:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800637a:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 800637e:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006380:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006382:	2002      	movs	r0, #2
 8006384:	e7fc      	b.n	8006380 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006386 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006386:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006388:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800638c:	2b20      	cmp	r3, #32
 800638e:	b2dc      	uxtb	r4, r3
 8006390:	d116      	bne.n	80063c0 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006392:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006394:	2324      	movs	r3, #36	; 0x24
 8006396:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800639a:	6813      	ldr	r3, [r2, #0]
 800639c:	f023 0301 	bic.w	r3, r3, #1
 80063a0:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80063a2:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80063a4:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 80063a8:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80063aa:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80063ac:	b29b      	uxth	r3, r3
 80063ae:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80063b0:	6813      	ldr	r3, [r2, #0]
 80063b2:	f043 0301 	orr.w	r3, r3, #1
 80063b6:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80063b8:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80063bc:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80063be:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80063c0:	2002      	movs	r0, #2
 80063c2:	e7fc      	b.n	80063be <HAL_I2CEx_ConfigDigitalFilter+0x38>

080063c4 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80063c4:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80063c6:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80063ca:	01d2      	lsls	r2, r2, #7
 80063cc:	3284      	adds	r2, #132	; 0x84
 80063ce:	1883      	adds	r3, r0, r2
{
 80063d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80063d4:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80063d6:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80063d8:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80063da:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80063de:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80063e2:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80063e4:	68c5      	ldr	r5, [r0, #12]
 80063e6:	f10c 0701 	add.w	r7, ip, #1
 80063ea:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80063ee:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80063f2:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80063f4:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80063f6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80063fa:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80063fc:	68c5      	ldr	r5, [r0, #12]
 80063fe:	68ce      	ldr	r6, [r1, #12]
 8006400:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006404:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006406:	689d      	ldr	r5, [r3, #8]
 8006408:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800640c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800640e:	68c7      	ldr	r7, [r0, #12]
 8006410:	688d      	ldr	r5, [r1, #8]
 8006412:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006416:	3501      	adds	r5, #1
 8006418:	443d      	add	r5, r7
 800641a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800641e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006420:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006422:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006424:	f025 0507 	bic.w	r5, r5, #7
 8006428:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800642a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800642e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006430:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006432:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006436:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800643a:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800643e:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006442:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006446:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800644a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800644e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006450:	695d      	ldr	r5, [r3, #20]
 8006452:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006456:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006458:	694d      	ldr	r5, [r1, #20]
 800645a:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800645c:	69dd      	ldr	r5, [r3, #28]
 800645e:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006462:	f025 0507 	bic.w	r5, r5, #7
 8006466:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006468:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800646c:	433d      	orrs	r5, r7
 800646e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006470:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006472:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006474:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006478:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800647a:	b31e      	cbz	r6, 80064c4 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800647c:	2e01      	cmp	r6, #1
 800647e:	d023      	beq.n	80064c8 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006480:	1eb5      	subs	r5, r6, #2
 8006482:	2d02      	cmp	r5, #2
 8006484:	d922      	bls.n	80064cc <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006486:	2e07      	cmp	r6, #7
 8006488:	bf0c      	ite	eq
 800648a:	2502      	moveq	r5, #2
 800648c:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800648e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006490:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006494:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006496:	eba4 040c 	sub.w	r4, r4, ip
 800649a:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800649c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800649e:	436c      	muls	r4, r5
 80064a0:	436e      	muls	r6, r5
 80064a2:	3403      	adds	r4, #3
 80064a4:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80064a8:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80064aa:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80064ac:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80064b0:	f024 0407 	bic.w	r4, r4, #7
 80064b4:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80064b6:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80064b8:	5883      	ldr	r3, [r0, r2]
 80064ba:	f043 0301 	orr.w	r3, r3, #1
 80064be:	5083      	str	r3, [r0, r2]
}
 80064c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80064c4:	2504      	movs	r5, #4
 80064c6:	e7e2      	b.n	800648e <LTDC_SetConfig+0xca>
    tmp = 3U;
 80064c8:	2503      	movs	r5, #3
 80064ca:	e7e0      	b.n	800648e <LTDC_SetConfig+0xca>
    tmp = 2U;
 80064cc:	2502      	movs	r5, #2
 80064ce:	e7de      	b.n	800648e <LTDC_SetConfig+0xca>

080064d0 <HAL_LTDC_Init>:
{
 80064d0:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80064d2:	4604      	mov	r4, r0
 80064d4:	2800      	cmp	r0, #0
 80064d6:	d063      	beq.n	80065a0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80064d8:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80064dc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80064e0:	b91b      	cbnz	r3, 80064ea <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80064e2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80064e6:	f7fb fb85 	bl	8001bf4 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80064ea:	2302      	movs	r3, #2
 80064ec:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80064f0:	6823      	ldr	r3, [r4, #0]
 80064f2:	699a      	ldr	r2, [r3, #24]
 80064f4:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80064f8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80064fa:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80064fe:	4302      	orrs	r2, r0
 8006500:	68e0      	ldr	r0, [r4, #12]
 8006502:	6999      	ldr	r1, [r3, #24]
 8006504:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006506:	6920      	ldr	r0, [r4, #16]
 8006508:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800650a:	430a      	orrs	r2, r1
 800650c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800650e:	689a      	ldr	r2, [r3, #8]
 8006510:	4924      	ldr	r1, [pc, #144]	; (80065a4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006512:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006514:	400a      	ands	r2, r1
 8006516:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006518:	689a      	ldr	r2, [r3, #8]
 800651a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800651e:	69a0      	ldr	r0, [r4, #24]
 8006520:	4302      	orrs	r2, r0
 8006522:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006524:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8006526:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006528:	400a      	ands	r2, r1
 800652a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800652c:	68da      	ldr	r2, [r3, #12]
 800652e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006532:	6a20      	ldr	r0, [r4, #32]
 8006534:	4302      	orrs	r2, r0
 8006536:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006538:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800653a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800653c:	400a      	ands	r2, r1
 800653e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8006540:	691a      	ldr	r2, [r3, #16]
 8006542:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006546:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006548:	4302      	orrs	r2, r0
 800654a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800654c:	695a      	ldr	r2, [r3, #20]
 800654e:	4011      	ands	r1, r2
 8006550:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006552:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006554:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006556:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800655a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800655c:	430a      	orrs	r2, r1
 800655e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006560:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006562:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006566:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800656a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800656e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006570:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006572:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8006576:	430a      	orrs	r2, r1
 8006578:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800657c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006580:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006582:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006584:	f042 0206 	orr.w	r2, r2, #6
 8006588:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800658a:	699a      	ldr	r2, [r3, #24]
 800658c:	f042 0201 	orr.w	r2, r2, #1
 8006590:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006592:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006594:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006596:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800659a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800659e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80065a0:	2001      	movs	r0, #1
 80065a2:	e7fc      	b.n	800659e <HAL_LTDC_Init+0xce>
 80065a4:	f000f800 	.word	0xf000f800

080065a8 <HAL_LTDC_ErrorCallback>:
 80065a8:	4770      	bx	lr

080065aa <HAL_LTDC_ReloadEventCallback>:
 80065aa:	4770      	bx	lr

080065ac <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80065ac:	6803      	ldr	r3, [r0, #0]
{
 80065ae:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80065b0:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80065b2:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80065b4:	0772      	lsls	r2, r6, #29
{
 80065b6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80065b8:	d514      	bpl.n	80065e4 <HAL_LTDC_IRQHandler+0x38>
 80065ba:	0769      	lsls	r1, r5, #29
 80065bc:	d512      	bpl.n	80065e4 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80065be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80065c0:	f022 0204 	bic.w	r2, r2, #4
 80065c4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80065c6:	2204      	movs	r2, #4
 80065c8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80065ca:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80065ce:	f043 0301 	orr.w	r3, r3, #1
 80065d2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80065d6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80065d8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80065dc:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80065e0:	f7ff ffe2 	bl	80065a8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80065e4:	07b2      	lsls	r2, r6, #30
 80065e6:	d516      	bpl.n	8006616 <HAL_LTDC_IRQHandler+0x6a>
 80065e8:	07ab      	lsls	r3, r5, #30
 80065ea:	d514      	bpl.n	8006616 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80065ec:	6823      	ldr	r3, [r4, #0]
 80065ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80065f0:	f022 0202 	bic.w	r2, r2, #2
 80065f4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80065f6:	2202      	movs	r2, #2
 80065f8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80065fa:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80065fe:	4313      	orrs	r3, r2
 8006600:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006604:	2304      	movs	r3, #4
 8006606:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800660a:	2300      	movs	r3, #0
 800660c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006610:	4620      	mov	r0, r4
 8006612:	f7ff ffc9 	bl	80065a8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006616:	07f0      	lsls	r0, r6, #31
 8006618:	d510      	bpl.n	800663c <HAL_LTDC_IRQHandler+0x90>
 800661a:	07e9      	lsls	r1, r5, #31
 800661c:	d50e      	bpl.n	800663c <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800661e:	6823      	ldr	r3, [r4, #0]
 8006620:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006622:	f022 0201 	bic.w	r2, r2, #1
 8006626:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8006628:	2201      	movs	r2, #1
 800662a:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800662c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800662e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006632:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8006636:	4620      	mov	r0, r4
 8006638:	f7fa fd6a 	bl	8001110 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800663c:	0732      	lsls	r2, r6, #28
 800663e:	d511      	bpl.n	8006664 <HAL_LTDC_IRQHandler+0xb8>
 8006640:	072b      	lsls	r3, r5, #28
 8006642:	d50f      	bpl.n	8006664 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006644:	6823      	ldr	r3, [r4, #0]
 8006646:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006648:	f022 0208 	bic.w	r2, r2, #8
 800664c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800664e:	2208      	movs	r2, #8
 8006650:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006652:	2301      	movs	r3, #1
 8006654:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006658:	2300      	movs	r3, #0
 800665a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800665e:	4620      	mov	r0, r4
 8006660:	f7ff ffa3 	bl	80065aa <HAL_LTDC_ReloadEventCallback>
}
 8006664:	bd70      	pop	{r4, r5, r6, pc}

08006666 <HAL_LTDC_ConfigLayer>:
{
 8006666:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800666a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800666e:	2b01      	cmp	r3, #1
{
 8006670:	4606      	mov	r6, r0
 8006672:	460f      	mov	r7, r1
 8006674:	4694      	mov	ip, r2
 8006676:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800667a:	d01f      	beq.n	80066bc <HAL_LTDC_ConfigLayer+0x56>
 800667c:	f04f 0801 	mov.w	r8, #1
 8006680:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006684:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006688:	2434      	movs	r4, #52	; 0x34
 800668a:	460d      	mov	r5, r1
 800668c:	fb04 6402 	mla	r4, r4, r2, r6
 8006690:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006692:	3438      	adds	r4, #56	; 0x38
 8006694:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006696:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006698:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800669a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800669c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800669e:	682b      	ldr	r3, [r5, #0]
 80066a0:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80066a2:	4630      	mov	r0, r6
 80066a4:	4662      	mov	r2, ip
 80066a6:	4639      	mov	r1, r7
 80066a8:	f7ff fe8c 	bl	80063c4 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80066ac:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80066ae:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80066b0:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80066b4:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80066b8:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80066bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080066c0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80066c0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80066c4:	2b01      	cmp	r3, #1
 80066c6:	f04f 0302 	mov.w	r3, #2
 80066ca:	d012      	beq.n	80066f2 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80066cc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80066d0:	6803      	ldr	r3, [r0, #0]
 80066d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80066d4:	f022 0201 	bic.w	r2, r2, #1
 80066d8:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80066da:	4a07      	ldr	r2, [pc, #28]	; (80066f8 <HAL_LTDC_ProgramLineEvent+0x38>)
 80066dc:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80066de:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80066e0:	f042 0201 	orr.w	r2, r2, #1
 80066e4:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80066e6:	2301      	movs	r3, #1
 80066e8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80066ec:	2300      	movs	r3, #0
 80066ee:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80066f2:	4618      	mov	r0, r3
}
 80066f4:	4770      	bx	lr
 80066f6:	bf00      	nop
 80066f8:	40016800 	.word	0x40016800

080066fc <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80066fc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006700:	4604      	mov	r4, r0
 8006702:	b340      	cbz	r0, 8006756 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006704:	6803      	ldr	r3, [r0, #0]
 8006706:	07dd      	lsls	r5, r3, #31
 8006708:	d410      	bmi.n	800672c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800670a:	6823      	ldr	r3, [r4, #0]
 800670c:	0798      	lsls	r0, r3, #30
 800670e:	d45e      	bmi.n	80067ce <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006710:	6823      	ldr	r3, [r4, #0]
 8006712:	071a      	lsls	r2, r3, #28
 8006714:	f100 80a0 	bmi.w	8006858 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006718:	6823      	ldr	r3, [r4, #0]
 800671a:	075b      	lsls	r3, r3, #29
 800671c:	f100 80c0 	bmi.w	80068a0 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006720:	69a0      	ldr	r0, [r4, #24]
 8006722:	2800      	cmp	r0, #0
 8006724:	f040 8128 	bne.w	8006978 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006728:	2000      	movs	r0, #0
 800672a:	e02b      	b.n	8006784 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800672c:	4b8f      	ldr	r3, [pc, #572]	; (800696c <HAL_RCC_OscConfig+0x270>)
 800672e:	689a      	ldr	r2, [r3, #8]
 8006730:	f002 020c 	and.w	r2, r2, #12
 8006734:	2a04      	cmp	r2, #4
 8006736:	d007      	beq.n	8006748 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006738:	689a      	ldr	r2, [r3, #8]
 800673a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800673e:	2a08      	cmp	r2, #8
 8006740:	d10b      	bne.n	800675a <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006742:	685a      	ldr	r2, [r3, #4]
 8006744:	0251      	lsls	r1, r2, #9
 8006746:	d508      	bpl.n	800675a <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006748:	4b88      	ldr	r3, [pc, #544]	; (800696c <HAL_RCC_OscConfig+0x270>)
 800674a:	681b      	ldr	r3, [r3, #0]
 800674c:	039a      	lsls	r2, r3, #14
 800674e:	d5dc      	bpl.n	800670a <HAL_RCC_OscConfig+0xe>
 8006750:	6863      	ldr	r3, [r4, #4]
 8006752:	2b00      	cmp	r3, #0
 8006754:	d1d9      	bne.n	800670a <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8006756:	2001      	movs	r0, #1
 8006758:	e014      	b.n	8006784 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800675a:	6862      	ldr	r2, [r4, #4]
 800675c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006760:	d113      	bne.n	800678a <HAL_RCC_OscConfig+0x8e>
 8006762:	681a      	ldr	r2, [r3, #0]
 8006764:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006768:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800676a:	f7fe fcef 	bl	800514c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800676e:	4e7f      	ldr	r6, [pc, #508]	; (800696c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006770:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006772:	6833      	ldr	r3, [r6, #0]
 8006774:	039b      	lsls	r3, r3, #14
 8006776:	d4c8      	bmi.n	800670a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006778:	f7fe fce8 	bl	800514c <HAL_GetTick>
 800677c:	1b40      	subs	r0, r0, r5
 800677e:	2864      	cmp	r0, #100	; 0x64
 8006780:	d9f7      	bls.n	8006772 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8006782:	2003      	movs	r0, #3
}
 8006784:	b002      	add	sp, #8
 8006786:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800678a:	4d78      	ldr	r5, [pc, #480]	; (800696c <HAL_RCC_OscConfig+0x270>)
 800678c:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006790:	682b      	ldr	r3, [r5, #0]
 8006792:	d107      	bne.n	80067a4 <HAL_RCC_OscConfig+0xa8>
 8006794:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006798:	602b      	str	r3, [r5, #0]
 800679a:	682b      	ldr	r3, [r5, #0]
 800679c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80067a0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80067a2:	e7e2      	b.n	800676a <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80067a4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80067a8:	602b      	str	r3, [r5, #0]
 80067aa:	682b      	ldr	r3, [r5, #0]
 80067ac:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80067b0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80067b2:	2a00      	cmp	r2, #0
 80067b4:	d1d9      	bne.n	800676a <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80067b6:	f7fe fcc9 	bl	800514c <HAL_GetTick>
 80067ba:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80067bc:	682b      	ldr	r3, [r5, #0]
 80067be:	039f      	lsls	r7, r3, #14
 80067c0:	d5a3      	bpl.n	800670a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80067c2:	f7fe fcc3 	bl	800514c <HAL_GetTick>
 80067c6:	1b80      	subs	r0, r0, r6
 80067c8:	2864      	cmp	r0, #100	; 0x64
 80067ca:	d9f7      	bls.n	80067bc <HAL_RCC_OscConfig+0xc0>
 80067cc:	e7d9      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80067ce:	4b67      	ldr	r3, [pc, #412]	; (800696c <HAL_RCC_OscConfig+0x270>)
 80067d0:	689a      	ldr	r2, [r3, #8]
 80067d2:	f012 0f0c 	tst.w	r2, #12
 80067d6:	d007      	beq.n	80067e8 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80067d8:	689a      	ldr	r2, [r3, #8]
 80067da:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80067de:	2a08      	cmp	r2, #8
 80067e0:	d111      	bne.n	8006806 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80067e2:	685b      	ldr	r3, [r3, #4]
 80067e4:	025e      	lsls	r6, r3, #9
 80067e6:	d40e      	bmi.n	8006806 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80067e8:	4a60      	ldr	r2, [pc, #384]	; (800696c <HAL_RCC_OscConfig+0x270>)
 80067ea:	6813      	ldr	r3, [r2, #0]
 80067ec:	079d      	lsls	r5, r3, #30
 80067ee:	d502      	bpl.n	80067f6 <HAL_RCC_OscConfig+0xfa>
 80067f0:	68e3      	ldr	r3, [r4, #12]
 80067f2:	2b01      	cmp	r3, #1
 80067f4:	d1af      	bne.n	8006756 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80067f6:	6813      	ldr	r3, [r2, #0]
 80067f8:	6921      	ldr	r1, [r4, #16]
 80067fa:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80067fe:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006802:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006804:	e784      	b.n	8006710 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006806:	68e2      	ldr	r2, [r4, #12]
 8006808:	4b59      	ldr	r3, [pc, #356]	; (8006970 <HAL_RCC_OscConfig+0x274>)
 800680a:	b1b2      	cbz	r2, 800683a <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800680c:	2201      	movs	r2, #1
 800680e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006810:	f7fe fc9c 	bl	800514c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006814:	4d55      	ldr	r5, [pc, #340]	; (800696c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006816:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006818:	682b      	ldr	r3, [r5, #0]
 800681a:	0798      	lsls	r0, r3, #30
 800681c:	d507      	bpl.n	800682e <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800681e:	682b      	ldr	r3, [r5, #0]
 8006820:	6922      	ldr	r2, [r4, #16]
 8006822:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006826:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800682a:	602b      	str	r3, [r5, #0]
 800682c:	e770      	b.n	8006710 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800682e:	f7fe fc8d 	bl	800514c <HAL_GetTick>
 8006832:	1b80      	subs	r0, r0, r6
 8006834:	2802      	cmp	r0, #2
 8006836:	d9ef      	bls.n	8006818 <HAL_RCC_OscConfig+0x11c>
 8006838:	e7a3      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800683a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800683c:	f7fe fc86 	bl	800514c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006840:	4e4a      	ldr	r6, [pc, #296]	; (800696c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006842:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006844:	6833      	ldr	r3, [r6, #0]
 8006846:	0799      	lsls	r1, r3, #30
 8006848:	f57f af62 	bpl.w	8006710 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800684c:	f7fe fc7e 	bl	800514c <HAL_GetTick>
 8006850:	1b40      	subs	r0, r0, r5
 8006852:	2802      	cmp	r0, #2
 8006854:	d9f6      	bls.n	8006844 <HAL_RCC_OscConfig+0x148>
 8006856:	e794      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006858:	6962      	ldr	r2, [r4, #20]
 800685a:	4b45      	ldr	r3, [pc, #276]	; (8006970 <HAL_RCC_OscConfig+0x274>)
 800685c:	b182      	cbz	r2, 8006880 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800685e:	2201      	movs	r2, #1
 8006860:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006864:	f7fe fc72 	bl	800514c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006868:	4e40      	ldr	r6, [pc, #256]	; (800696c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800686a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800686c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800686e:	079f      	lsls	r7, r3, #30
 8006870:	f53f af52 	bmi.w	8006718 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006874:	f7fe fc6a 	bl	800514c <HAL_GetTick>
 8006878:	1b40      	subs	r0, r0, r5
 800687a:	2802      	cmp	r0, #2
 800687c:	d9f6      	bls.n	800686c <HAL_RCC_OscConfig+0x170>
 800687e:	e780      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006880:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006884:	f7fe fc62 	bl	800514c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006888:	4e38      	ldr	r6, [pc, #224]	; (800696c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800688a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800688c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800688e:	0798      	lsls	r0, r3, #30
 8006890:	f57f af42 	bpl.w	8006718 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006894:	f7fe fc5a 	bl	800514c <HAL_GetTick>
 8006898:	1b40      	subs	r0, r0, r5
 800689a:	2802      	cmp	r0, #2
 800689c:	d9f6      	bls.n	800688c <HAL_RCC_OscConfig+0x190>
 800689e:	e770      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80068a0:	4b32      	ldr	r3, [pc, #200]	; (800696c <HAL_RCC_OscConfig+0x270>)
 80068a2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80068a4:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80068a8:	d128      	bne.n	80068fc <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80068aa:	9201      	str	r2, [sp, #4]
 80068ac:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80068ae:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80068b2:	641a      	str	r2, [r3, #64]	; 0x40
 80068b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80068b6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80068ba:	9301      	str	r3, [sp, #4]
 80068bc:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80068be:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80068c0:	4d2c      	ldr	r5, [pc, #176]	; (8006974 <HAL_RCC_OscConfig+0x278>)
 80068c2:	682b      	ldr	r3, [r5, #0]
 80068c4:	05d9      	lsls	r1, r3, #23
 80068c6:	d51b      	bpl.n	8006900 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80068c8:	68a3      	ldr	r3, [r4, #8]
 80068ca:	4d28      	ldr	r5, [pc, #160]	; (800696c <HAL_RCC_OscConfig+0x270>)
 80068cc:	2b01      	cmp	r3, #1
 80068ce:	d127      	bne.n	8006920 <HAL_RCC_OscConfig+0x224>
 80068d0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80068d2:	f043 0301 	orr.w	r3, r3, #1
 80068d6:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80068d8:	f7fe fc38 	bl	800514c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80068dc:	4e23      	ldr	r6, [pc, #140]	; (800696c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80068de:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80068e0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80068e4:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80068e6:	079b      	lsls	r3, r3, #30
 80068e8:	d539      	bpl.n	800695e <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 80068ea:	2f00      	cmp	r7, #0
 80068ec:	f43f af18 	beq.w	8006720 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80068f0:	4a1e      	ldr	r2, [pc, #120]	; (800696c <HAL_RCC_OscConfig+0x270>)
 80068f2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80068f4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80068f8:	6413      	str	r3, [r2, #64]	; 0x40
 80068fa:	e711      	b.n	8006720 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80068fc:	2700      	movs	r7, #0
 80068fe:	e7df      	b.n	80068c0 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006900:	682b      	ldr	r3, [r5, #0]
 8006902:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006906:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006908:	f7fe fc20 	bl	800514c <HAL_GetTick>
 800690c:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800690e:	682b      	ldr	r3, [r5, #0]
 8006910:	05da      	lsls	r2, r3, #23
 8006912:	d4d9      	bmi.n	80068c8 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006914:	f7fe fc1a 	bl	800514c <HAL_GetTick>
 8006918:	1b80      	subs	r0, r0, r6
 800691a:	2802      	cmp	r0, #2
 800691c:	d9f7      	bls.n	800690e <HAL_RCC_OscConfig+0x212>
 800691e:	e730      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006920:	2b05      	cmp	r3, #5
 8006922:	d104      	bne.n	800692e <HAL_RCC_OscConfig+0x232>
 8006924:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006926:	f043 0304 	orr.w	r3, r3, #4
 800692a:	672b      	str	r3, [r5, #112]	; 0x70
 800692c:	e7d0      	b.n	80068d0 <HAL_RCC_OscConfig+0x1d4>
 800692e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006930:	f022 0201 	bic.w	r2, r2, #1
 8006934:	672a      	str	r2, [r5, #112]	; 0x70
 8006936:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006938:	f022 0204 	bic.w	r2, r2, #4
 800693c:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800693e:	2b00      	cmp	r3, #0
 8006940:	d1ca      	bne.n	80068d8 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8006942:	f7fe fc03 	bl	800514c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006946:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800694a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800694c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800694e:	0798      	lsls	r0, r3, #30
 8006950:	d5cb      	bpl.n	80068ea <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006952:	f7fe fbfb 	bl	800514c <HAL_GetTick>
 8006956:	1b80      	subs	r0, r0, r6
 8006958:	4540      	cmp	r0, r8
 800695a:	d9f7      	bls.n	800694c <HAL_RCC_OscConfig+0x250>
 800695c:	e711      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800695e:	f7fe fbf5 	bl	800514c <HAL_GetTick>
 8006962:	1b40      	subs	r0, r0, r5
 8006964:	4540      	cmp	r0, r8
 8006966:	d9bd      	bls.n	80068e4 <HAL_RCC_OscConfig+0x1e8>
 8006968:	e70b      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
 800696a:	bf00      	nop
 800696c:	40023800 	.word	0x40023800
 8006970:	42470000 	.word	0x42470000
 8006974:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006978:	4d33      	ldr	r5, [pc, #204]	; (8006a48 <HAL_RCC_OscConfig+0x34c>)
 800697a:	68ab      	ldr	r3, [r5, #8]
 800697c:	f003 030c 	and.w	r3, r3, #12
 8006980:	2b08      	cmp	r3, #8
 8006982:	d03d      	beq.n	8006a00 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006984:	4b31      	ldr	r3, [pc, #196]	; (8006a4c <HAL_RCC_OscConfig+0x350>)
 8006986:	2200      	movs	r2, #0
 8006988:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800698a:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800698c:	d12b      	bne.n	80069e6 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 800698e:	f7fe fbdd 	bl	800514c <HAL_GetTick>
 8006992:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006994:	682b      	ldr	r3, [r5, #0]
 8006996:	0199      	lsls	r1, r3, #6
 8006998:	d41f      	bmi.n	80069da <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800699a:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800699e:	4313      	orrs	r3, r2
 80069a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80069a2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80069a6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80069a8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80069ac:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80069ae:	0852      	lsrs	r2, r2, #1
 80069b0:	3a01      	subs	r2, #1
 80069b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80069b6:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80069b8:	4b24      	ldr	r3, [pc, #144]	; (8006a4c <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80069ba:	4d23      	ldr	r5, [pc, #140]	; (8006a48 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80069bc:	2201      	movs	r2, #1
 80069be:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80069c0:	f7fe fbc4 	bl	800514c <HAL_GetTick>
 80069c4:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80069c6:	682b      	ldr	r3, [r5, #0]
 80069c8:	019a      	lsls	r2, r3, #6
 80069ca:	f53f aead 	bmi.w	8006728 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80069ce:	f7fe fbbd 	bl	800514c <HAL_GetTick>
 80069d2:	1b00      	subs	r0, r0, r4
 80069d4:	2802      	cmp	r0, #2
 80069d6:	d9f6      	bls.n	80069c6 <HAL_RCC_OscConfig+0x2ca>
 80069d8:	e6d3      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80069da:	f7fe fbb7 	bl	800514c <HAL_GetTick>
 80069de:	1b80      	subs	r0, r0, r6
 80069e0:	2802      	cmp	r0, #2
 80069e2:	d9d7      	bls.n	8006994 <HAL_RCC_OscConfig+0x298>
 80069e4:	e6cd      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80069e6:	f7fe fbb1 	bl	800514c <HAL_GetTick>
 80069ea:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80069ec:	682b      	ldr	r3, [r5, #0]
 80069ee:	019b      	lsls	r3, r3, #6
 80069f0:	f57f ae9a 	bpl.w	8006728 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80069f4:	f7fe fbaa 	bl	800514c <HAL_GetTick>
 80069f8:	1b00      	subs	r0, r0, r4
 80069fa:	2802      	cmp	r0, #2
 80069fc:	d9f6      	bls.n	80069ec <HAL_RCC_OscConfig+0x2f0>
 80069fe:	e6c0      	b.n	8006782 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006a00:	2801      	cmp	r0, #1
 8006a02:	f43f aebf 	beq.w	8006784 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8006a06:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006a08:	69e2      	ldr	r2, [r4, #28]
 8006a0a:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8006a0e:	4291      	cmp	r1, r2
 8006a10:	f47f aea1 	bne.w	8006756 <HAL_RCC_OscConfig+0x5a>
 8006a14:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006a16:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006a1a:	428a      	cmp	r2, r1
 8006a1c:	f47f ae9b 	bne.w	8006756 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006a20:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006a22:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006a26:	401a      	ands	r2, r3
 8006a28:	428a      	cmp	r2, r1
 8006a2a:	f47f ae94 	bne.w	8006756 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8006a2e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006a30:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8006a34:	428a      	cmp	r2, r1
 8006a36:	f47f ae8e 	bne.w	8006756 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006a3a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8006a3c:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006a40:	4293      	cmp	r3, r2
 8006a42:	f43f ae71 	beq.w	8006728 <HAL_RCC_OscConfig+0x2c>
 8006a46:	e686      	b.n	8006756 <HAL_RCC_OscConfig+0x5a>
 8006a48:	40023800 	.word	0x40023800
 8006a4c:	42470000 	.word	0x42470000

08006a50 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006a50:	4913      	ldr	r1, [pc, #76]	; (8006aa0 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006a52:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006a54:	688b      	ldr	r3, [r1, #8]
 8006a56:	f003 030c 	and.w	r3, r3, #12
 8006a5a:	2b04      	cmp	r3, #4
 8006a5c:	d01c      	beq.n	8006a98 <HAL_RCC_GetSysClockFreq+0x48>
 8006a5e:	2b08      	cmp	r3, #8
 8006a60:	d11c      	bne.n	8006a9c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006a62:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006a64:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a66:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006a68:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a6c:	bf14      	ite	ne
 8006a6e:	480d      	ldrne	r0, [pc, #52]	; (8006aa4 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a70:	480d      	ldreq	r0, [pc, #52]	; (8006aa8 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a72:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006a76:	bf18      	it	ne
 8006a78:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006a7a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a7e:	fba1 0100 	umull	r0, r1, r1, r0
 8006a82:	f7f9 fc05 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006a86:	4b06      	ldr	r3, [pc, #24]	; (8006aa0 <HAL_RCC_GetSysClockFreq+0x50>)
 8006a88:	685b      	ldr	r3, [r3, #4]
 8006a8a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006a8e:	3301      	adds	r3, #1
 8006a90:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8006a92:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006a96:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006a98:	4802      	ldr	r0, [pc, #8]	; (8006aa4 <HAL_RCC_GetSysClockFreq+0x54>)
 8006a9a:	e7fc      	b.n	8006a96 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006a9c:	4802      	ldr	r0, [pc, #8]	; (8006aa8 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006a9e:	e7fa      	b.n	8006a96 <HAL_RCC_GetSysClockFreq+0x46>
 8006aa0:	40023800 	.word	0x40023800
 8006aa4:	007a1200 	.word	0x007a1200
 8006aa8:	00f42400 	.word	0x00f42400

08006aac <HAL_RCC_ClockConfig>:
{
 8006aac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ab0:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006ab2:	4604      	mov	r4, r0
 8006ab4:	b910      	cbnz	r0, 8006abc <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006ab6:	2001      	movs	r0, #1
}
 8006ab8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006abc:	4b44      	ldr	r3, [pc, #272]	; (8006bd0 <HAL_RCC_ClockConfig+0x124>)
 8006abe:	681a      	ldr	r2, [r3, #0]
 8006ac0:	f002 020f 	and.w	r2, r2, #15
 8006ac4:	428a      	cmp	r2, r1
 8006ac6:	d328      	bcc.n	8006b1a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006ac8:	6822      	ldr	r2, [r4, #0]
 8006aca:	0797      	lsls	r7, r2, #30
 8006acc:	d42d      	bmi.n	8006b2a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006ace:	07d0      	lsls	r0, r2, #31
 8006ad0:	d441      	bmi.n	8006b56 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006ad2:	4b3f      	ldr	r3, [pc, #252]	; (8006bd0 <HAL_RCC_ClockConfig+0x124>)
 8006ad4:	681a      	ldr	r2, [r3, #0]
 8006ad6:	f002 020f 	and.w	r2, r2, #15
 8006ada:	42aa      	cmp	r2, r5
 8006adc:	d866      	bhi.n	8006bac <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006ade:	6822      	ldr	r2, [r4, #0]
 8006ae0:	0751      	lsls	r1, r2, #29
 8006ae2:	d46c      	bmi.n	8006bbe <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006ae4:	0713      	lsls	r3, r2, #28
 8006ae6:	d507      	bpl.n	8006af8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006ae8:	4a3a      	ldr	r2, [pc, #232]	; (8006bd4 <HAL_RCC_ClockConfig+0x128>)
 8006aea:	6921      	ldr	r1, [r4, #16]
 8006aec:	6893      	ldr	r3, [r2, #8]
 8006aee:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8006af2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006af6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006af8:	f7ff ffaa 	bl	8006a50 <HAL_RCC_GetSysClockFreq>
 8006afc:	4b35      	ldr	r3, [pc, #212]	; (8006bd4 <HAL_RCC_ClockConfig+0x128>)
 8006afe:	4a36      	ldr	r2, [pc, #216]	; (8006bd8 <HAL_RCC_ClockConfig+0x12c>)
 8006b00:	689b      	ldr	r3, [r3, #8]
 8006b02:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006b06:	5cd3      	ldrb	r3, [r2, r3]
 8006b08:	40d8      	lsrs	r0, r3
 8006b0a:	4b34      	ldr	r3, [pc, #208]	; (8006bdc <HAL_RCC_ClockConfig+0x130>)
 8006b0c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006b0e:	4b34      	ldr	r3, [pc, #208]	; (8006be0 <HAL_RCC_ClockConfig+0x134>)
 8006b10:	6818      	ldr	r0, [r3, #0]
 8006b12:	f7fb f9f9 	bl	8001f08 <HAL_InitTick>
  return HAL_OK;
 8006b16:	2000      	movs	r0, #0
 8006b18:	e7ce      	b.n	8006ab8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006b1a:	b2ca      	uxtb	r2, r1
 8006b1c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006b1e:	681b      	ldr	r3, [r3, #0]
 8006b20:	f003 030f 	and.w	r3, r3, #15
 8006b24:	428b      	cmp	r3, r1
 8006b26:	d1c6      	bne.n	8006ab6 <HAL_RCC_ClockConfig+0xa>
 8006b28:	e7ce      	b.n	8006ac8 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006b2a:	4b2a      	ldr	r3, [pc, #168]	; (8006bd4 <HAL_RCC_ClockConfig+0x128>)
 8006b2c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006b30:	bf1e      	ittt	ne
 8006b32:	6899      	ldrne	r1, [r3, #8]
 8006b34:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8006b38:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006b3a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006b3c:	bf42      	ittt	mi
 8006b3e:	6899      	ldrmi	r1, [r3, #8]
 8006b40:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8006b44:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006b46:	4923      	ldr	r1, [pc, #140]	; (8006bd4 <HAL_RCC_ClockConfig+0x128>)
 8006b48:	68a0      	ldr	r0, [r4, #8]
 8006b4a:	688b      	ldr	r3, [r1, #8]
 8006b4c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006b50:	4303      	orrs	r3, r0
 8006b52:	608b      	str	r3, [r1, #8]
 8006b54:	e7bb      	b.n	8006ace <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006b56:	6862      	ldr	r2, [r4, #4]
 8006b58:	4b1e      	ldr	r3, [pc, #120]	; (8006bd4 <HAL_RCC_ClockConfig+0x128>)
 8006b5a:	2a01      	cmp	r2, #1
 8006b5c:	d11c      	bne.n	8006b98 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006b64:	d0a7      	beq.n	8006ab6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006b66:	4e1b      	ldr	r6, [pc, #108]	; (8006bd4 <HAL_RCC_ClockConfig+0x128>)
 8006b68:	68b3      	ldr	r3, [r6, #8]
 8006b6a:	f023 0303 	bic.w	r3, r3, #3
 8006b6e:	4313      	orrs	r3, r2
 8006b70:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006b72:	f7fe faeb 	bl	800514c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006b76:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8006b7a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006b7c:	68b3      	ldr	r3, [r6, #8]
 8006b7e:	6862      	ldr	r2, [r4, #4]
 8006b80:	f003 030c 	and.w	r3, r3, #12
 8006b84:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006b88:	d0a3      	beq.n	8006ad2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006b8a:	f7fe fadf 	bl	800514c <HAL_GetTick>
 8006b8e:	1bc0      	subs	r0, r0, r7
 8006b90:	4540      	cmp	r0, r8
 8006b92:	d9f3      	bls.n	8006b7c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006b94:	2003      	movs	r0, #3
 8006b96:	e78f      	b.n	8006ab8 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006b98:	1e91      	subs	r1, r2, #2
 8006b9a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006b9c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006b9e:	d802      	bhi.n	8006ba6 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006ba0:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006ba4:	e7de      	b.n	8006b64 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006ba6:	f013 0f02 	tst.w	r3, #2
 8006baa:	e7db      	b.n	8006b64 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006bac:	b2ea      	uxtb	r2, r5
 8006bae:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006bb0:	681b      	ldr	r3, [r3, #0]
 8006bb2:	f003 030f 	and.w	r3, r3, #15
 8006bb6:	42ab      	cmp	r3, r5
 8006bb8:	f47f af7d 	bne.w	8006ab6 <HAL_RCC_ClockConfig+0xa>
 8006bbc:	e78f      	b.n	8006ade <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006bbe:	4905      	ldr	r1, [pc, #20]	; (8006bd4 <HAL_RCC_ClockConfig+0x128>)
 8006bc0:	68e0      	ldr	r0, [r4, #12]
 8006bc2:	688b      	ldr	r3, [r1, #8]
 8006bc4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006bc8:	4303      	orrs	r3, r0
 8006bca:	608b      	str	r3, [r1, #8]
 8006bcc:	e78a      	b.n	8006ae4 <HAL_RCC_ClockConfig+0x38>
 8006bce:	bf00      	nop
 8006bd0:	40023c00 	.word	0x40023c00
 8006bd4:	40023800 	.word	0x40023800
 8006bd8:	08022270 	.word	0x08022270
 8006bdc:	20000078 	.word	0x20000078
 8006be0:	20000080 	.word	0x20000080

08006be4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006be4:	4b04      	ldr	r3, [pc, #16]	; (8006bf8 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006be6:	4a05      	ldr	r2, [pc, #20]	; (8006bfc <HAL_RCC_GetPCLK1Freq+0x18>)
 8006be8:	689b      	ldr	r3, [r3, #8]
 8006bea:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006bee:	5cd3      	ldrb	r3, [r2, r3]
 8006bf0:	4a03      	ldr	r2, [pc, #12]	; (8006c00 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006bf2:	6810      	ldr	r0, [r2, #0]
}
 8006bf4:	40d8      	lsrs	r0, r3
 8006bf6:	4770      	bx	lr
 8006bf8:	40023800 	.word	0x40023800
 8006bfc:	08022280 	.word	0x08022280
 8006c00:	20000078 	.word	0x20000078

08006c04 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8006c04:	4b04      	ldr	r3, [pc, #16]	; (8006c18 <HAL_RCC_GetPCLK2Freq+0x14>)
 8006c06:	4a05      	ldr	r2, [pc, #20]	; (8006c1c <HAL_RCC_GetPCLK2Freq+0x18>)
 8006c08:	689b      	ldr	r3, [r3, #8]
 8006c0a:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8006c0e:	5cd3      	ldrb	r3, [r2, r3]
 8006c10:	4a03      	ldr	r2, [pc, #12]	; (8006c20 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006c12:	6810      	ldr	r0, [r2, #0]
}
 8006c14:	40d8      	lsrs	r0, r3
 8006c16:	4770      	bx	lr
 8006c18:	40023800 	.word	0x40023800
 8006c1c:	08022280 	.word	0x08022280
 8006c20:	20000078 	.word	0x20000078

08006c24 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006c24:	230f      	movs	r3, #15
 8006c26:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006c28:	4b0b      	ldr	r3, [pc, #44]	; (8006c58 <HAL_RCC_GetClockConfig+0x34>)
 8006c2a:	689a      	ldr	r2, [r3, #8]
 8006c2c:	f002 0203 	and.w	r2, r2, #3
 8006c30:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006c32:	689a      	ldr	r2, [r3, #8]
 8006c34:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8006c38:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006c3a:	689a      	ldr	r2, [r3, #8]
 8006c3c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8006c40:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006c42:	689b      	ldr	r3, [r3, #8]
 8006c44:	08db      	lsrs	r3, r3, #3
 8006c46:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8006c4a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006c4c:	4b03      	ldr	r3, [pc, #12]	; (8006c5c <HAL_RCC_GetClockConfig+0x38>)
 8006c4e:	681b      	ldr	r3, [r3, #0]
 8006c50:	f003 030f 	and.w	r3, r3, #15
 8006c54:	600b      	str	r3, [r1, #0]
}
 8006c56:	4770      	bx	lr
 8006c58:	40023800 	.word	0x40023800
 8006c5c:	40023c00 	.word	0x40023c00

08006c60 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006c60:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006c62:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8006c66:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c68:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006c6a:	f040 808c 	bne.w	8006d86 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006c6e:	6823      	ldr	r3, [r4, #0]
 8006c70:	f013 0f0c 	tst.w	r3, #12
 8006c74:	d045      	beq.n	8006d02 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006c76:	4b8b      	ldr	r3, [pc, #556]	; (8006ea4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006c78:	4d8b      	ldr	r5, [pc, #556]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006c7a:	2200      	movs	r2, #0
 8006c7c:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006c7e:	f7fe fa65 	bl	800514c <HAL_GetTick>
 8006c82:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006c84:	682b      	ldr	r3, [r5, #0]
 8006c86:	009f      	lsls	r7, r3, #2
 8006c88:	f100 80cf 	bmi.w	8006e2a <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006c8c:	6821      	ldr	r1, [r4, #0]
 8006c8e:	074e      	lsls	r6, r1, #29
 8006c90:	d515      	bpl.n	8006cbe <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006c92:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006c96:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006c9a:	061b      	lsls	r3, r3, #24
 8006c9c:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8006ca0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006ca4:	4313      	orrs	r3, r2
 8006ca6:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006caa:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8006cae:	6a22      	ldr	r2, [r4, #32]
 8006cb0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006cb4:	3a01      	subs	r2, #1
 8006cb6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006cba:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006cbe:	070d      	lsls	r5, r1, #28
 8006cc0:	d514      	bpl.n	8006cec <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006cc2:	4a79      	ldr	r2, [pc, #484]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006cc4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006cc6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006cca:	6920      	ldr	r0, [r4, #16]
 8006ccc:	071b      	lsls	r3, r3, #28
 8006cce:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8006cd2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006cd6:	430b      	orrs	r3, r1
 8006cd8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006cdc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006ce0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006ce2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006ce6:	430b      	orrs	r3, r1
 8006ce8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006cec:	4b6d      	ldr	r3, [pc, #436]	; (8006ea4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006cee:	4e6e      	ldr	r6, [pc, #440]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006cf0:	2201      	movs	r2, #1
 8006cf2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006cf4:	f7fe fa2a 	bl	800514c <HAL_GetTick>
 8006cf8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006cfa:	6833      	ldr	r3, [r6, #0]
 8006cfc:	0098      	lsls	r0, r3, #2
 8006cfe:	f140 809b 	bpl.w	8006e38 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006d02:	6823      	ldr	r3, [r4, #0]
 8006d04:	069b      	lsls	r3, r3, #26
 8006d06:	d533      	bpl.n	8006d70 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006d08:	2300      	movs	r3, #0
 8006d0a:	9301      	str	r3, [sp, #4]
 8006d0c:	4b66      	ldr	r3, [pc, #408]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006d0e:	4d67      	ldr	r5, [pc, #412]	; (8006eac <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006d10:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006d12:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006d16:	641a      	str	r2, [r3, #64]	; 0x40
 8006d18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d1a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006d1e:	9301      	str	r3, [sp, #4]
 8006d20:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006d22:	682b      	ldr	r3, [r5, #0]
 8006d24:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006d28:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006d2a:	f7fe fa0f 	bl	800514c <HAL_GetTick>
 8006d2e:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006d30:	682b      	ldr	r3, [r5, #0]
 8006d32:	05d9      	lsls	r1, r3, #23
 8006d34:	f140 8087 	bpl.w	8006e46 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006d38:	4d5b      	ldr	r5, [pc, #364]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006d3a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006d3c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006d40:	f040 8088 	bne.w	8006e54 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006d44:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006d46:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8006d4a:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006d4e:	4a56      	ldr	r2, [pc, #344]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006d50:	f040 80a4 	bne.w	8006e9c <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8006d54:	6891      	ldr	r1, [r2, #8]
 8006d56:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8006d5a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006d5e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8006d62:	4301      	orrs	r1, r0
 8006d64:	6091      	str	r1, [r2, #8]
 8006d66:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006d68:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006d6c:	430b      	orrs	r3, r1
 8006d6e:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006d70:	6820      	ldr	r0, [r4, #0]
 8006d72:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006d76:	bf1f      	itttt	ne
 8006d78:	4b4d      	ldrne	r3, [pc, #308]	; (8006eb0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8006d7a:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8006d7e:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8006d82:	2000      	movne	r0, #0
 8006d84:	e04f      	b.n	8006e26 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8006d86:	4b47      	ldr	r3, [pc, #284]	; (8006ea4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006d88:	4e47      	ldr	r6, [pc, #284]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006d8a:	2200      	movs	r2, #0
 8006d8c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006d8e:	f7fe f9dd 	bl	800514c <HAL_GetTick>
 8006d92:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006d94:	6833      	ldr	r3, [r6, #0]
 8006d96:	011f      	lsls	r7, r3, #4
 8006d98:	d43f      	bmi.n	8006e1a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006d9a:	6821      	ldr	r1, [r4, #0]
 8006d9c:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006d9e:	bf41      	itttt	mi
 8006da0:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006da4:	071b      	lslmi	r3, r3, #28
 8006da6:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006daa:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006dae:	0788      	lsls	r0, r1, #30
 8006db0:	d515      	bpl.n	8006dde <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006db2:	4a3d      	ldr	r2, [pc, #244]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006db4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006db6:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006dba:	6865      	ldr	r5, [r4, #4]
 8006dbc:	061b      	lsls	r3, r3, #24
 8006dbe:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8006dc2:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8006dc6:	4303      	orrs	r3, r0
 8006dc8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006dcc:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006dd0:	69e3      	ldr	r3, [r4, #28]
 8006dd2:	f020 001f 	bic.w	r0, r0, #31
 8006dd6:	3b01      	subs	r3, #1
 8006dd8:	4303      	orrs	r3, r0
 8006dda:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006dde:	0649      	lsls	r1, r1, #25
 8006de0:	d50a      	bpl.n	8006df8 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006de2:	68e3      	ldr	r3, [r4, #12]
 8006de4:	6862      	ldr	r2, [r4, #4]
 8006de6:	061b      	lsls	r3, r3, #24
 8006de8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006dec:	68a2      	ldr	r2, [r4, #8]
 8006dee:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006df2:	4a2d      	ldr	r2, [pc, #180]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006df4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006df8:	4b2a      	ldr	r3, [pc, #168]	; (8006ea4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006dfa:	4e2b      	ldr	r6, [pc, #172]	; (8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006dfc:	2201      	movs	r2, #1
 8006dfe:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006e00:	f7fe f9a4 	bl	800514c <HAL_GetTick>
 8006e04:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006e06:	6833      	ldr	r3, [r6, #0]
 8006e08:	011a      	lsls	r2, r3, #4
 8006e0a:	f53f af30 	bmi.w	8006c6e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006e0e:	f7fe f99d 	bl	800514c <HAL_GetTick>
 8006e12:	1b40      	subs	r0, r0, r5
 8006e14:	2802      	cmp	r0, #2
 8006e16:	d9f6      	bls.n	8006e06 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8006e18:	e004      	b.n	8006e24 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006e1a:	f7fe f997 	bl	800514c <HAL_GetTick>
 8006e1e:	1b40      	subs	r0, r0, r5
 8006e20:	2802      	cmp	r0, #2
 8006e22:	d9b7      	bls.n	8006d94 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8006e24:	2003      	movs	r0, #3
}
 8006e26:	b003      	add	sp, #12
 8006e28:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006e2a:	f7fe f98f 	bl	800514c <HAL_GetTick>
 8006e2e:	1b80      	subs	r0, r0, r6
 8006e30:	2802      	cmp	r0, #2
 8006e32:	f67f af27 	bls.w	8006c84 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8006e36:	e7f5      	b.n	8006e24 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006e38:	f7fe f988 	bl	800514c <HAL_GetTick>
 8006e3c:	1b40      	subs	r0, r0, r5
 8006e3e:	2802      	cmp	r0, #2
 8006e40:	f67f af5b 	bls.w	8006cfa <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8006e44:	e7ee      	b.n	8006e24 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006e46:	f7fe f981 	bl	800514c <HAL_GetTick>
 8006e4a:	1b80      	subs	r0, r0, r6
 8006e4c:	2802      	cmp	r0, #2
 8006e4e:	f67f af6f 	bls.w	8006d30 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8006e52:	e7e7      	b.n	8006e24 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006e54:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006e56:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006e5a:	4293      	cmp	r3, r2
 8006e5c:	f43f af72 	beq.w	8006d44 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006e60:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006e62:	4a10      	ldr	r2, [pc, #64]	; (8006ea4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8006e64:	2101      	movs	r1, #1
 8006e66:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006e6a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006e6e:	2100      	movs	r1, #0
 8006e70:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8006e74:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006e76:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006e78:	07da      	lsls	r2, r3, #31
 8006e7a:	f57f af63 	bpl.w	8006d44 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8006e7e:	f7fe f965 	bl	800514c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006e82:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006e86:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006e88:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006e8a:	079b      	lsls	r3, r3, #30
 8006e8c:	f53f af5a 	bmi.w	8006d44 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006e90:	f7fe f95c 	bl	800514c <HAL_GetTick>
 8006e94:	1b80      	subs	r0, r0, r6
 8006e96:	42b8      	cmp	r0, r7
 8006e98:	d9f6      	bls.n	8006e88 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8006e9a:	e7c3      	b.n	8006e24 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006e9c:	6891      	ldr	r1, [r2, #8]
 8006e9e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006ea2:	e75f      	b.n	8006d64 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8006ea4:	42470000 	.word	0x42470000
 8006ea8:	40023800 	.word	0x40023800
 8006eac:	40007000 	.word	0x40007000
 8006eb0:	42471000 	.word	0x42471000

08006eb4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8006eb4:	b538      	push	{r3, r4, r5, lr}
 8006eb6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8006eb8:	4604      	mov	r4, r0
 8006eba:	b1c8      	cbz	r0, 8006ef0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8006ebc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006ec0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006ec4:	b91b      	cbnz	r3, 8006ece <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006ec6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006eca:	f7fa ffb1 	bl	8001e30 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006ece:	2302      	movs	r3, #2
 8006ed0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006ed4:	1d21      	adds	r1, r4, #4
 8006ed6:	6820      	ldr	r0, [r4, #0]
 8006ed8:	f000 fcba 	bl	8007850 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006edc:	6862      	ldr	r2, [r4, #4]
 8006ede:	6820      	ldr	r0, [r4, #0]
 8006ee0:	4629      	mov	r1, r5
 8006ee2:	f000 fceb 	bl	80078bc <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006ee6:	2301      	movs	r3, #1
 8006ee8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8006eec:	2000      	movs	r0, #0
}
 8006eee:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006ef0:	2001      	movs	r0, #1
 8006ef2:	e7fc      	b.n	8006eee <HAL_SDRAM_Init+0x3a>

08006ef4 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006ef4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006ef6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006efa:	2b02      	cmp	r3, #2
{
 8006efc:	4604      	mov	r4, r0
 8006efe:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006f00:	b2d8      	uxtb	r0, r3
 8006f02:	d00d      	beq.n	8006f20 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006f04:	2302      	movs	r3, #2
 8006f06:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006f0a:	6820      	ldr	r0, [r4, #0]
 8006f0c:	f000 fd12 	bl	8007934 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006f10:	682b      	ldr	r3, [r5, #0]
 8006f12:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006f14:	bf0c      	ite	eq
 8006f16:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006f18:	2301      	movne	r3, #1
 8006f1a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8006f1e:	2000      	movs	r0, #0
}
 8006f20:	bd38      	pop	{r3, r4, r5, pc}

08006f22 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006f22:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006f24:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006f28:	2b02      	cmp	r3, #2
{
 8006f2a:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006f2c:	b2d8      	uxtb	r0, r3
 8006f2e:	d009      	beq.n	8006f44 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006f30:	2302      	movs	r3, #2
 8006f32:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8006f36:	6820      	ldr	r0, [r4, #0]
 8006f38:	f000 fd23 	bl	8007982 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006f3c:	2301      	movs	r3, #1
 8006f3e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8006f42:	2000      	movs	r0, #0
}
 8006f44:	bd10      	pop	{r4, pc}

08006f46 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8006f46:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006f48:	4604      	mov	r4, r0
 8006f4a:	460e      	mov	r6, r1
 8006f4c:	4615      	mov	r5, r2
 8006f4e:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006f50:	6822      	ldr	r2, [r4, #0]
 8006f52:	6893      	ldr	r3, [r2, #8]
 8006f54:	ea36 0303 	bics.w	r3, r6, r3
 8006f58:	d001      	beq.n	8006f5e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006f5a:	2000      	movs	r0, #0
 8006f5c:	e02d      	b.n	8006fba <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8006f5e:	1c6b      	adds	r3, r5, #1
 8006f60:	d0f7      	beq.n	8006f52 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8006f62:	f7fe f8f3 	bl	800514c <HAL_GetTick>
 8006f66:	1bc0      	subs	r0, r0, r7
 8006f68:	4285      	cmp	r5, r0
 8006f6a:	d8f1      	bhi.n	8006f50 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006f6c:	6823      	ldr	r3, [r4, #0]
 8006f6e:	685a      	ldr	r2, [r3, #4]
 8006f70:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006f74:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006f76:	6862      	ldr	r2, [r4, #4]
 8006f78:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006f7c:	d10a      	bne.n	8006f94 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8006f7e:	68a2      	ldr	r2, [r4, #8]
 8006f80:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006f84:	d002      	beq.n	8006f8c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006f86:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006f8a:	d103      	bne.n	8006f94 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8006f8c:	681a      	ldr	r2, [r3, #0]
 8006f8e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006f92:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006f94:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006f96:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8006f9a:	d107      	bne.n	8006fac <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8006f9c:	681a      	ldr	r2, [r3, #0]
 8006f9e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006fa2:	601a      	str	r2, [r3, #0]
 8006fa4:	681a      	ldr	r2, [r3, #0]
 8006fa6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006faa:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8006fac:	2301      	movs	r3, #1
 8006fae:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8006fb2:	2300      	movs	r3, #0
 8006fb4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8006fb8:	2003      	movs	r0, #3
}
 8006fba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006fbc <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006fbc:	b538      	push	{r3, r4, r5, lr}
 8006fbe:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006fc0:	6842      	ldr	r2, [r0, #4]
 8006fc2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8006fc6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006fc8:	d11f      	bne.n	800700a <SPI_EndRxTransaction+0x4e>
 8006fca:	6882      	ldr	r2, [r0, #8]
 8006fcc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006fd0:	d002      	beq.n	8006fd8 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006fd2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006fd6:	d107      	bne.n	8006fe8 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006fd8:	6825      	ldr	r5, [r4, #0]
 8006fda:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006fdc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8006fe0:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8006fe4:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006fe6:	d007      	beq.n	8006ff8 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006fe8:	460a      	mov	r2, r1
 8006fea:	2180      	movs	r1, #128	; 0x80
 8006fec:	4620      	mov	r0, r4
 8006fee:	f7ff ffaa 	bl	8006f46 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006ff2:	b920      	cbnz	r0, 8006ffe <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8006ff4:	2000      	movs	r0, #0
}
 8006ff6:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006ff8:	460a      	mov	r2, r1
 8006ffa:	2101      	movs	r1, #1
 8006ffc:	e7f6      	b.n	8006fec <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006ffe:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007000:	f043 0320 	orr.w	r3, r3, #32
 8007004:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007006:	2003      	movs	r0, #3
 8007008:	e7f5      	b.n	8006ff6 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800700a:	460a      	mov	r2, r1
 800700c:	2101      	movs	r1, #1
 800700e:	e7ee      	b.n	8006fee <SPI_EndRxTransaction+0x32>

08007010 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007010:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007012:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007014:	4a12      	ldr	r2, [pc, #72]	; (8007060 <SPI_EndRxTxTransaction+0x50>)
 8007016:	6815      	ldr	r5, [r2, #0]
 8007018:	4a12      	ldr	r2, [pc, #72]	; (8007064 <SPI_EndRxTxTransaction+0x54>)
 800701a:	fbb5 f5f2 	udiv	r5, r5, r2
 800701e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007022:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007024:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007026:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007028:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800702c:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800702e:	d10b      	bne.n	8007048 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007030:	460a      	mov	r2, r1
 8007032:	2180      	movs	r1, #128	; 0x80
 8007034:	f7ff ff87 	bl	8006f46 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007038:	b178      	cbz	r0, 800705a <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800703a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800703c:	f043 0320 	orr.w	r3, r3, #32
 8007040:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007042:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007044:	b003      	add	sp, #12
 8007046:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007048:	9b01      	ldr	r3, [sp, #4]
 800704a:	b133      	cbz	r3, 800705a <SPI_EndRxTxTransaction+0x4a>
      count--;
 800704c:	9b01      	ldr	r3, [sp, #4]
 800704e:	3b01      	subs	r3, #1
 8007050:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007052:	6823      	ldr	r3, [r4, #0]
 8007054:	689b      	ldr	r3, [r3, #8]
 8007056:	061b      	lsls	r3, r3, #24
 8007058:	d4f6      	bmi.n	8007048 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800705a:	2000      	movs	r0, #0
 800705c:	e7f2      	b.n	8007044 <SPI_EndRxTxTransaction+0x34>
 800705e:	bf00      	nop
 8007060:	20000078 	.word	0x20000078
 8007064:	016e3600 	.word	0x016e3600

08007068 <HAL_SPI_Init>:
{
 8007068:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800706a:	4604      	mov	r4, r0
 800706c:	2800      	cmp	r0, #0
 800706e:	d036      	beq.n	80070de <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007070:	2300      	movs	r3, #0
 8007072:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007074:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007078:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800707c:	b91b      	cbnz	r3, 8007086 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 800707e:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007082:	f7fa fe7d 	bl	8001d80 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007086:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007088:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800708a:	2302      	movs	r3, #2
 800708c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007090:	680b      	ldr	r3, [r1, #0]
 8007092:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007096:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007098:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 800709c:	4303      	orrs	r3, r0
 800709e:	68e0      	ldr	r0, [r4, #12]
 80070a0:	4303      	orrs	r3, r0
 80070a2:	6920      	ldr	r0, [r4, #16]
 80070a4:	4303      	orrs	r3, r0
 80070a6:	6960      	ldr	r0, [r4, #20]
 80070a8:	4303      	orrs	r3, r0
 80070aa:	69e0      	ldr	r0, [r4, #28]
 80070ac:	4303      	orrs	r3, r0
 80070ae:	6a20      	ldr	r0, [r4, #32]
 80070b0:	4303      	orrs	r3, r0
 80070b2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80070b4:	4303      	orrs	r3, r0
 80070b6:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80070ba:	4303      	orrs	r3, r0
 80070bc:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80070be:	0c12      	lsrs	r2, r2, #16
 80070c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80070c2:	f002 0204 	and.w	r2, r2, #4
 80070c6:	431a      	orrs	r2, r3
 80070c8:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80070ca:	69cb      	ldr	r3, [r1, #28]
 80070cc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80070d0:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80070d2:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80070d4:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80070d6:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80070d8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80070dc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80070de:	2001      	movs	r0, #1
 80070e0:	e7fc      	b.n	80070dc <HAL_SPI_Init+0x74>

080070e2 <HAL_SPI_Transmit>:
{
 80070e2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80070e6:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80070e8:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80070ec:	2b01      	cmp	r3, #1
{
 80070ee:	4604      	mov	r4, r0
 80070f0:	460d      	mov	r5, r1
 80070f2:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 80070f4:	f000 809d 	beq.w	8007232 <HAL_SPI_Transmit+0x150>
 80070f8:	2301      	movs	r3, #1
 80070fa:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80070fe:	f7fe f825 	bl	800514c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007102:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007106:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007108:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800710a:	b2d8      	uxtb	r0, r3
 800710c:	f040 808f 	bne.w	800722e <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007110:	2d00      	cmp	r5, #0
 8007112:	d05a      	beq.n	80071ca <HAL_SPI_Transmit+0xe8>
 8007114:	2f00      	cmp	r7, #0
 8007116:	d058      	beq.n	80071ca <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007118:	2303      	movs	r3, #3
 800711a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800711e:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007120:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007122:	2300      	movs	r3, #0
 8007124:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007126:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 800712a:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800712c:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 800712e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007130:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007132:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007134:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007136:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 800713a:	bf08      	it	eq
 800713c:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800713e:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007140:	bf04      	itt	eq
 8007142:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007146:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007148:	681a      	ldr	r2, [r3, #0]
 800714a:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800714c:	bf5e      	ittt	pl
 800714e:	681a      	ldrpl	r2, [r3, #0]
 8007150:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007154:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007156:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800715a:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800715c:	d141      	bne.n	80071e2 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800715e:	b10a      	cbz	r2, 8007164 <HAL_SPI_Transmit+0x82>
 8007160:	2f01      	cmp	r7, #1
 8007162:	d107      	bne.n	8007174 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007164:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007168:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800716a:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800716c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800716e:	3b01      	subs	r3, #1
 8007170:	b29b      	uxth	r3, r3
 8007172:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007174:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007176:	b29b      	uxth	r3, r3
 8007178:	b9a3      	cbnz	r3, 80071a4 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800717a:	4642      	mov	r2, r8
 800717c:	4631      	mov	r1, r6
 800717e:	4620      	mov	r0, r4
 8007180:	f7ff ff46 	bl	8007010 <SPI_EndRxTxTransaction>
 8007184:	2800      	cmp	r0, #0
 8007186:	d14f      	bne.n	8007228 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007188:	68a3      	ldr	r3, [r4, #8]
 800718a:	b933      	cbnz	r3, 800719a <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800718c:	9301      	str	r3, [sp, #4]
 800718e:	6823      	ldr	r3, [r4, #0]
 8007190:	68da      	ldr	r2, [r3, #12]
 8007192:	9201      	str	r2, [sp, #4]
 8007194:	689b      	ldr	r3, [r3, #8]
 8007196:	9301      	str	r3, [sp, #4]
 8007198:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800719a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800719c:	3800      	subs	r0, #0
 800719e:	bf18      	it	ne
 80071a0:	2001      	movne	r0, #1
error:
 80071a2:	e012      	b.n	80071ca <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80071a4:	6822      	ldr	r2, [r4, #0]
 80071a6:	6893      	ldr	r3, [r2, #8]
 80071a8:	0798      	lsls	r0, r3, #30
 80071aa:	d505      	bpl.n	80071b8 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80071ac:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80071ae:	f833 1b02 	ldrh.w	r1, [r3], #2
 80071b2:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80071b4:	6323      	str	r3, [r4, #48]	; 0x30
 80071b6:	e7d9      	b.n	800716c <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80071b8:	f7fd ffc8 	bl	800514c <HAL_GetTick>
 80071bc:	eba0 0008 	sub.w	r0, r0, r8
 80071c0:	42b0      	cmp	r0, r6
 80071c2:	d30b      	bcc.n	80071dc <HAL_SPI_Transmit+0xfa>
 80071c4:	1c71      	adds	r1, r6, #1
 80071c6:	d0d5      	beq.n	8007174 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 80071c8:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80071ca:	2301      	movs	r3, #1
 80071cc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80071d0:	2300      	movs	r3, #0
 80071d2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80071d6:	b002      	add	sp, #8
 80071d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80071dc:	2e00      	cmp	r6, #0
 80071de:	d1c9      	bne.n	8007174 <HAL_SPI_Transmit+0x92>
 80071e0:	e7f2      	b.n	80071c8 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80071e2:	b10a      	cbz	r2, 80071e8 <HAL_SPI_Transmit+0x106>
 80071e4:	2f01      	cmp	r7, #1
 80071e6:	d108      	bne.n	80071fa <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80071e8:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80071ea:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80071ec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80071ee:	3301      	adds	r3, #1
 80071f0:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80071f2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80071f4:	3b01      	subs	r3, #1
 80071f6:	b29b      	uxth	r3, r3
 80071f8:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80071fa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80071fc:	b29b      	uxth	r3, r3
 80071fe:	2b00      	cmp	r3, #0
 8007200:	d0bb      	beq.n	800717a <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007202:	6823      	ldr	r3, [r4, #0]
 8007204:	689a      	ldr	r2, [r3, #8]
 8007206:	0792      	lsls	r2, r2, #30
 8007208:	d502      	bpl.n	8007210 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800720a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800720c:	7812      	ldrb	r2, [r2, #0]
 800720e:	e7ec      	b.n	80071ea <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007210:	f7fd ff9c 	bl	800514c <HAL_GetTick>
 8007214:	eba0 0008 	sub.w	r0, r0, r8
 8007218:	42b0      	cmp	r0, r6
 800721a:	d302      	bcc.n	8007222 <HAL_SPI_Transmit+0x140>
 800721c:	1c73      	adds	r3, r6, #1
 800721e:	d0ec      	beq.n	80071fa <HAL_SPI_Transmit+0x118>
 8007220:	e7d2      	b.n	80071c8 <HAL_SPI_Transmit+0xe6>
 8007222:	2e00      	cmp	r6, #0
 8007224:	d1e9      	bne.n	80071fa <HAL_SPI_Transmit+0x118>
 8007226:	e7cf      	b.n	80071c8 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007228:	2320      	movs	r3, #32
 800722a:	6563      	str	r3, [r4, #84]	; 0x54
 800722c:	e7ac      	b.n	8007188 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 800722e:	2002      	movs	r0, #2
 8007230:	e7cb      	b.n	80071ca <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007232:	2002      	movs	r0, #2
 8007234:	e7cf      	b.n	80071d6 <HAL_SPI_Transmit+0xf4>

08007236 <HAL_SPI_TransmitReceive>:
{
 8007236:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800723a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800723c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007240:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007242:	2b01      	cmp	r3, #1
{
 8007244:	4604      	mov	r4, r0
 8007246:	460d      	mov	r5, r1
 8007248:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 800724a:	f000 80e6 	beq.w	800741a <HAL_SPI_TransmitReceive+0x1e4>
 800724e:	2301      	movs	r3, #1
 8007250:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007254:	f7fd ff7a 	bl	800514c <HAL_GetTick>
  tmp_state           = hspi->State;
 8007258:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800725c:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800725e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007260:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007262:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007264:	d00a      	beq.n	800727c <HAL_SPI_TransmitReceive+0x46>
 8007266:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800726a:	f040 80d4 	bne.w	8007416 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800726e:	68a3      	ldr	r3, [r4, #8]
 8007270:	2b00      	cmp	r3, #0
 8007272:	f040 80d0 	bne.w	8007416 <HAL_SPI_TransmitReceive+0x1e0>
 8007276:	2904      	cmp	r1, #4
 8007278:	f040 80cd 	bne.w	8007416 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800727c:	2d00      	cmp	r5, #0
 800727e:	d040      	beq.n	8007302 <HAL_SPI_TransmitReceive+0xcc>
 8007280:	f1b9 0f00 	cmp.w	r9, #0
 8007284:	d03d      	beq.n	8007302 <HAL_SPI_TransmitReceive+0xcc>
 8007286:	2e00      	cmp	r6, #0
 8007288:	d03b      	beq.n	8007302 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800728a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800728e:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007292:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007294:	bf1c      	itt	ne
 8007296:	2305      	movne	r3, #5
 8007298:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800729c:	2300      	movs	r3, #0
 800729e:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 80072a0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80072a4:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80072a6:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 80072a8:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80072aa:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 80072ac:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80072ae:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 80072b0:	bf58      	it	pl
 80072b2:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80072b4:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 80072b6:	bf58      	it	pl
 80072b8:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 80072bc:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 80072be:	bf58      	it	pl
 80072c0:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80072c2:	68e1      	ldr	r1, [r4, #12]
 80072c4:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 80072c8:	d152      	bne.n	8007370 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80072ca:	b10a      	cbz	r2, 80072d0 <HAL_SPI_TransmitReceive+0x9a>
 80072cc:	2e01      	cmp	r6, #1
 80072ce:	d107      	bne.n	80072e0 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80072d0:	f835 2b02 	ldrh.w	r2, [r5], #2
 80072d4:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80072d6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80072d8:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80072da:	3b01      	subs	r3, #1
 80072dc:	b29b      	uxth	r3, r3
 80072de:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80072e0:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80072e2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80072e4:	b29b      	uxth	r3, r3
 80072e6:	b973      	cbnz	r3, 8007306 <HAL_SPI_TransmitReceive+0xd0>
 80072e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80072ea:	b29b      	uxth	r3, r3
 80072ec:	b95b      	cbnz	r3, 8007306 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80072ee:	4642      	mov	r2, r8
 80072f0:	4639      	mov	r1, r7
 80072f2:	4620      	mov	r0, r4
 80072f4:	f7ff fe8c 	bl	8007010 <SPI_EndRxTxTransaction>
 80072f8:	2800      	cmp	r0, #0
 80072fa:	f000 8081 	beq.w	8007400 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80072fe:	2320      	movs	r3, #32
 8007300:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007302:	2001      	movs	r0, #1
 8007304:	e02b      	b.n	800735e <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007306:	6821      	ldr	r1, [r4, #0]
 8007308:	688b      	ldr	r3, [r1, #8]
 800730a:	079e      	lsls	r6, r3, #30
 800730c:	d50d      	bpl.n	800732a <HAL_SPI_TransmitReceive+0xf4>
 800730e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007310:	b29b      	uxth	r3, r3
 8007312:	b153      	cbz	r3, 800732a <HAL_SPI_TransmitReceive+0xf4>
 8007314:	b14d      	cbz	r5, 800732a <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007316:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007318:	f833 2b02 	ldrh.w	r2, [r3], #2
 800731c:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800731e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007320:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007322:	3b01      	subs	r3, #1
 8007324:	b29b      	uxth	r3, r3
 8007326:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007328:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800732a:	688a      	ldr	r2, [r1, #8]
 800732c:	f012 0201 	ands.w	r2, r2, #1
 8007330:	d00c      	beq.n	800734c <HAL_SPI_TransmitReceive+0x116>
 8007332:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007334:	b29b      	uxth	r3, r3
 8007336:	b14b      	cbz	r3, 800734c <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007338:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800733a:	68c9      	ldr	r1, [r1, #12]
 800733c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007340:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007342:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007344:	3b01      	subs	r3, #1
 8007346:	b29b      	uxth	r3, r3
 8007348:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800734a:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800734c:	f7fd fefe 	bl	800514c <HAL_GetTick>
 8007350:	eba0 0008 	sub.w	r0, r0, r8
 8007354:	42b8      	cmp	r0, r7
 8007356:	d3c4      	bcc.n	80072e2 <HAL_SPI_TransmitReceive+0xac>
 8007358:	1c78      	adds	r0, r7, #1
 800735a:	d0c2      	beq.n	80072e2 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 800735c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800735e:	2301      	movs	r3, #1
 8007360:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007364:	2300      	movs	r3, #0
 8007366:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800736a:	b003      	add	sp, #12
 800736c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007370:	b10a      	cbz	r2, 8007376 <HAL_SPI_TransmitReceive+0x140>
 8007372:	2e01      	cmp	r6, #1
 8007374:	d108      	bne.n	8007388 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007376:	782a      	ldrb	r2, [r5, #0]
 8007378:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800737a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800737c:	3301      	adds	r3, #1
 800737e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007380:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007382:	3b01      	subs	r3, #1
 8007384:	b29b      	uxth	r3, r3
 8007386:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007388:	2501      	movs	r5, #1
 800738a:	e02d      	b.n	80073e8 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800738c:	6822      	ldr	r2, [r4, #0]
 800738e:	6893      	ldr	r3, [r2, #8]
 8007390:	0799      	lsls	r1, r3, #30
 8007392:	d50e      	bpl.n	80073b2 <HAL_SPI_TransmitReceive+0x17c>
 8007394:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007396:	b29b      	uxth	r3, r3
 8007398:	b15b      	cbz	r3, 80073b2 <HAL_SPI_TransmitReceive+0x17c>
 800739a:	b155      	cbz	r5, 80073b2 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800739c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800739e:	781b      	ldrb	r3, [r3, #0]
 80073a0:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 80073a2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80073a4:	3301      	adds	r3, #1
 80073a6:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80073a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80073aa:	3b01      	subs	r3, #1
 80073ac:	b29b      	uxth	r3, r3
 80073ae:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80073b0:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80073b2:	6822      	ldr	r2, [r4, #0]
 80073b4:	6891      	ldr	r1, [r2, #8]
 80073b6:	f011 0101 	ands.w	r1, r1, #1
 80073ba:	d00d      	beq.n	80073d8 <HAL_SPI_TransmitReceive+0x1a2>
 80073bc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80073be:	b29b      	uxth	r3, r3
 80073c0:	b153      	cbz	r3, 80073d8 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80073c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80073c4:	68d2      	ldr	r2, [r2, #12]
 80073c6:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80073c8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80073ca:	3301      	adds	r3, #1
 80073cc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80073ce:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80073d0:	3b01      	subs	r3, #1
 80073d2:	b29b      	uxth	r3, r3
 80073d4:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80073d6:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80073d8:	f7fd feb8 	bl	800514c <HAL_GetTick>
 80073dc:	eba0 0008 	sub.w	r0, r0, r8
 80073e0:	42b8      	cmp	r0, r7
 80073e2:	d30a      	bcc.n	80073fa <HAL_SPI_TransmitReceive+0x1c4>
 80073e4:	1c7b      	adds	r3, r7, #1
 80073e6:	d1b9      	bne.n	800735c <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80073e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80073ea:	b29b      	uxth	r3, r3
 80073ec:	2b00      	cmp	r3, #0
 80073ee:	d1cd      	bne.n	800738c <HAL_SPI_TransmitReceive+0x156>
 80073f0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80073f2:	b29b      	uxth	r3, r3
 80073f4:	2b00      	cmp	r3, #0
 80073f6:	d1c9      	bne.n	800738c <HAL_SPI_TransmitReceive+0x156>
 80073f8:	e779      	b.n	80072ee <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80073fa:	2f00      	cmp	r7, #0
 80073fc:	d1f4      	bne.n	80073e8 <HAL_SPI_TransmitReceive+0x1b2>
 80073fe:	e7ad      	b.n	800735c <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007400:	68a3      	ldr	r3, [r4, #8]
 8007402:	2b00      	cmp	r3, #0
 8007404:	d1ab      	bne.n	800735e <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007406:	6823      	ldr	r3, [r4, #0]
 8007408:	9001      	str	r0, [sp, #4]
 800740a:	68da      	ldr	r2, [r3, #12]
 800740c:	9201      	str	r2, [sp, #4]
 800740e:	689b      	ldr	r3, [r3, #8]
 8007410:	9301      	str	r3, [sp, #4]
 8007412:	9b01      	ldr	r3, [sp, #4]
 8007414:	e7a3      	b.n	800735e <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007416:	2002      	movs	r0, #2
 8007418:	e7a1      	b.n	800735e <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 800741a:	2002      	movs	r0, #2
 800741c:	e7a5      	b.n	800736a <HAL_SPI_TransmitReceive+0x134>

0800741e <HAL_SPI_Receive>:
{
 800741e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007422:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007424:	6843      	ldr	r3, [r0, #4]
 8007426:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800742a:	4604      	mov	r4, r0
 800742c:	4689      	mov	r9, r1
 800742e:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007430:	d10c      	bne.n	800744c <HAL_SPI_Receive+0x2e>
 8007432:	6883      	ldr	r3, [r0, #8]
 8007434:	b953      	cbnz	r3, 800744c <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007436:	2304      	movs	r3, #4
 8007438:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800743c:	4613      	mov	r3, r2
 800743e:	9500      	str	r5, [sp, #0]
 8007440:	460a      	mov	r2, r1
 8007442:	f7ff fef8 	bl	8007236 <HAL_SPI_TransmitReceive>
}
 8007446:	b003      	add	sp, #12
 8007448:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 800744c:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8007450:	2b01      	cmp	r3, #1
 8007452:	f000 8084 	beq.w	800755e <HAL_SPI_Receive+0x140>
 8007456:	2301      	movs	r3, #1
 8007458:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800745c:	f7fd fe76 	bl	800514c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007460:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007464:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007466:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007468:	b2d8      	uxtb	r0, r3
 800746a:	d176      	bne.n	800755a <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 800746c:	f1b9 0f00 	cmp.w	r9, #0
 8007470:	d05a      	beq.n	8007528 <HAL_SPI_Receive+0x10a>
 8007472:	2f00      	cmp	r7, #0
 8007474:	d058      	beq.n	8007528 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007476:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007478:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800747c:	2304      	movs	r3, #4
 800747e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007482:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8007484:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007486:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007488:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 800748c:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800748e:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8007490:	bf08      	it	eq
 8007492:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007494:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8007496:	bf08      	it	eq
 8007498:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 800749c:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 80074a0:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 80074a2:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 80074a4:	bf08      	it	eq
 80074a6:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80074a8:	681a      	ldr	r2, [r3, #0]
 80074aa:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80074ac:	bf5e      	ittt	pl
 80074ae:	681a      	ldrpl	r2, [r3, #0]
 80074b0:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80074b4:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80074b6:	68e3      	ldr	r3, [r4, #12]
 80074b8:	b1f3      	cbz	r3, 80074f8 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 80074ba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80074bc:	b29b      	uxth	r3, r3
 80074be:	b1fb      	cbz	r3, 8007500 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80074c0:	6823      	ldr	r3, [r4, #0]
 80074c2:	689a      	ldr	r2, [r3, #8]
 80074c4:	07d2      	lsls	r2, r2, #31
 80074c6:	d539      	bpl.n	800753c <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80074c8:	68da      	ldr	r2, [r3, #12]
 80074ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80074cc:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80074d0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80074d2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80074d4:	3b01      	subs	r3, #1
 80074d6:	b29b      	uxth	r3, r3
 80074d8:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80074da:	e7ee      	b.n	80074ba <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80074dc:	6823      	ldr	r3, [r4, #0]
 80074de:	689a      	ldr	r2, [r3, #8]
 80074e0:	07d0      	lsls	r0, r2, #31
 80074e2:	d518      	bpl.n	8007516 <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80074e4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80074e6:	7b1b      	ldrb	r3, [r3, #12]
 80074e8:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80074ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80074ec:	3301      	adds	r3, #1
 80074ee:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80074f0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80074f2:	3b01      	subs	r3, #1
 80074f4:	b29b      	uxth	r3, r3
 80074f6:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 80074f8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80074fa:	b29b      	uxth	r3, r3
 80074fc:	2b00      	cmp	r3, #0
 80074fe:	d1ed      	bne.n	80074dc <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007500:	4642      	mov	r2, r8
 8007502:	4629      	mov	r1, r5
 8007504:	4620      	mov	r0, r4
 8007506:	f7ff fd59 	bl	8006fbc <SPI_EndRxTransaction>
 800750a:	bb18      	cbnz	r0, 8007554 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800750c:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800750e:	3800      	subs	r0, #0
 8007510:	bf18      	it	ne
 8007512:	2001      	movne	r0, #1
error :
 8007514:	e008      	b.n	8007528 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007516:	f7fd fe19 	bl	800514c <HAL_GetTick>
 800751a:	eba0 0008 	sub.w	r0, r0, r8
 800751e:	42a8      	cmp	r0, r5
 8007520:	d309      	bcc.n	8007536 <HAL_SPI_Receive+0x118>
 8007522:	1c69      	adds	r1, r5, #1
 8007524:	d0e8      	beq.n	80074f8 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 8007526:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007528:	2301      	movs	r3, #1
 800752a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800752e:	2300      	movs	r3, #0
 8007530:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8007534:	e787      	b.n	8007446 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007536:	2d00      	cmp	r5, #0
 8007538:	d1de      	bne.n	80074f8 <HAL_SPI_Receive+0xda>
 800753a:	e7f4      	b.n	8007526 <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800753c:	f7fd fe06 	bl	800514c <HAL_GetTick>
 8007540:	eba0 0008 	sub.w	r0, r0, r8
 8007544:	42a8      	cmp	r0, r5
 8007546:	d302      	bcc.n	800754e <HAL_SPI_Receive+0x130>
 8007548:	1c6b      	adds	r3, r5, #1
 800754a:	d0b6      	beq.n	80074ba <HAL_SPI_Receive+0x9c>
 800754c:	e7eb      	b.n	8007526 <HAL_SPI_Receive+0x108>
 800754e:	2d00      	cmp	r5, #0
 8007550:	d1b3      	bne.n	80074ba <HAL_SPI_Receive+0x9c>
 8007552:	e7e8      	b.n	8007526 <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007554:	2320      	movs	r3, #32
 8007556:	6563      	str	r3, [r4, #84]	; 0x54
 8007558:	e7d8      	b.n	800750c <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800755a:	2002      	movs	r0, #2
 800755c:	e7e4      	b.n	8007528 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 800755e:	2002      	movs	r0, #2
 8007560:	e771      	b.n	8007446 <HAL_SPI_Receive+0x28>

08007562 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007562:	6803      	ldr	r3, [r0, #0]
 8007564:	68da      	ldr	r2, [r3, #12]
 8007566:	f042 0201 	orr.w	r2, r2, #1
 800756a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800756c:	689a      	ldr	r2, [r3, #8]
 800756e:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007572:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8007574:	bf1e      	ittt	ne
 8007576:	681a      	ldrne	r2, [r3, #0]
 8007578:	f042 0201 	orrne.w	r2, r2, #1
 800757c:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 800757e:	2000      	movs	r0, #0
 8007580:	4770      	bx	lr

08007582 <HAL_TIM_OC_DelayElapsedCallback>:
 8007582:	4770      	bx	lr

08007584 <HAL_TIM_IC_CaptureCallback>:
 8007584:	4770      	bx	lr

08007586 <HAL_TIM_PWM_PulseFinishedCallback>:
 8007586:	4770      	bx	lr

08007588 <HAL_TIM_TriggerCallback>:
 8007588:	4770      	bx	lr

0800758a <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800758a:	6803      	ldr	r3, [r0, #0]
 800758c:	691a      	ldr	r2, [r3, #16]
 800758e:	0791      	lsls	r1, r2, #30
{
 8007590:	b510      	push	{r4, lr}
 8007592:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007594:	d50e      	bpl.n	80075b4 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007596:	68da      	ldr	r2, [r3, #12]
 8007598:	0792      	lsls	r2, r2, #30
 800759a:	d50b      	bpl.n	80075b4 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800759c:	f06f 0202 	mvn.w	r2, #2
 80075a0:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80075a2:	2201      	movs	r2, #1
 80075a4:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80075a6:	699b      	ldr	r3, [r3, #24]
 80075a8:	079b      	lsls	r3, r3, #30
 80075aa:	d077      	beq.n	800769c <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80075ac:	f7ff ffea 	bl	8007584 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80075b0:	2300      	movs	r3, #0
 80075b2:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80075b4:	6823      	ldr	r3, [r4, #0]
 80075b6:	691a      	ldr	r2, [r3, #16]
 80075b8:	0750      	lsls	r0, r2, #29
 80075ba:	d510      	bpl.n	80075de <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80075bc:	68da      	ldr	r2, [r3, #12]
 80075be:	0751      	lsls	r1, r2, #29
 80075c0:	d50d      	bpl.n	80075de <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80075c2:	f06f 0204 	mvn.w	r2, #4
 80075c6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80075c8:	2202      	movs	r2, #2
 80075ca:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80075cc:	699b      	ldr	r3, [r3, #24]
 80075ce:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80075d2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80075d4:	d068      	beq.n	80076a8 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80075d6:	f7ff ffd5 	bl	8007584 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80075da:	2300      	movs	r3, #0
 80075dc:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80075de:	6823      	ldr	r3, [r4, #0]
 80075e0:	691a      	ldr	r2, [r3, #16]
 80075e2:	0712      	lsls	r2, r2, #28
 80075e4:	d50f      	bpl.n	8007606 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80075e6:	68da      	ldr	r2, [r3, #12]
 80075e8:	0710      	lsls	r0, r2, #28
 80075ea:	d50c      	bpl.n	8007606 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80075ec:	f06f 0208 	mvn.w	r2, #8
 80075f0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80075f2:	2204      	movs	r2, #4
 80075f4:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80075f6:	69db      	ldr	r3, [r3, #28]
 80075f8:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80075fa:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80075fc:	d05a      	beq.n	80076b4 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80075fe:	f7ff ffc1 	bl	8007584 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007602:	2300      	movs	r3, #0
 8007604:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007606:	6823      	ldr	r3, [r4, #0]
 8007608:	691a      	ldr	r2, [r3, #16]
 800760a:	06d2      	lsls	r2, r2, #27
 800760c:	d510      	bpl.n	8007630 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800760e:	68da      	ldr	r2, [r3, #12]
 8007610:	06d0      	lsls	r0, r2, #27
 8007612:	d50d      	bpl.n	8007630 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007614:	f06f 0210 	mvn.w	r2, #16
 8007618:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800761a:	2208      	movs	r2, #8
 800761c:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800761e:	69db      	ldr	r3, [r3, #28]
 8007620:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007624:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007626:	d04b      	beq.n	80076c0 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8007628:	f7ff ffac 	bl	8007584 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800762c:	2300      	movs	r3, #0
 800762e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8007630:	6823      	ldr	r3, [r4, #0]
 8007632:	691a      	ldr	r2, [r3, #16]
 8007634:	07d1      	lsls	r1, r2, #31
 8007636:	d508      	bpl.n	800764a <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8007638:	68da      	ldr	r2, [r3, #12]
 800763a:	07d2      	lsls	r2, r2, #31
 800763c:	d505      	bpl.n	800764a <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800763e:	f06f 0201 	mvn.w	r2, #1
 8007642:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8007644:	4620      	mov	r0, r4
 8007646:	f7fa f9a3 	bl	8001990 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800764a:	6823      	ldr	r3, [r4, #0]
 800764c:	691a      	ldr	r2, [r3, #16]
 800764e:	0610      	lsls	r0, r2, #24
 8007650:	d508      	bpl.n	8007664 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8007652:	68da      	ldr	r2, [r3, #12]
 8007654:	0611      	lsls	r1, r2, #24
 8007656:	d505      	bpl.n	8007664 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8007658:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800765c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800765e:	4620      	mov	r0, r4
 8007660:	f000 f8f5 	bl	800784e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8007664:	6823      	ldr	r3, [r4, #0]
 8007666:	691a      	ldr	r2, [r3, #16]
 8007668:	0652      	lsls	r2, r2, #25
 800766a:	d508      	bpl.n	800767e <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800766c:	68da      	ldr	r2, [r3, #12]
 800766e:	0650      	lsls	r0, r2, #25
 8007670:	d505      	bpl.n	800767e <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007672:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8007676:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8007678:	4620      	mov	r0, r4
 800767a:	f7ff ff85 	bl	8007588 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800767e:	6823      	ldr	r3, [r4, #0]
 8007680:	691a      	ldr	r2, [r3, #16]
 8007682:	0691      	lsls	r1, r2, #26
 8007684:	d522      	bpl.n	80076cc <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007686:	68da      	ldr	r2, [r3, #12]
 8007688:	0692      	lsls	r2, r2, #26
 800768a:	d51f      	bpl.n	80076cc <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800768c:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8007690:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007692:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007698:	f000 b8d8 	b.w	800784c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800769c:	f7ff ff71 	bl	8007582 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80076a0:	4620      	mov	r0, r4
 80076a2:	f7ff ff70 	bl	8007586 <HAL_TIM_PWM_PulseFinishedCallback>
 80076a6:	e783      	b.n	80075b0 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80076a8:	f7ff ff6b 	bl	8007582 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80076ac:	4620      	mov	r0, r4
 80076ae:	f7ff ff6a 	bl	8007586 <HAL_TIM_PWM_PulseFinishedCallback>
 80076b2:	e792      	b.n	80075da <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80076b4:	f7ff ff65 	bl	8007582 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80076b8:	4620      	mov	r0, r4
 80076ba:	f7ff ff64 	bl	8007586 <HAL_TIM_PWM_PulseFinishedCallback>
 80076be:	e7a0      	b.n	8007602 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80076c0:	f7ff ff5f 	bl	8007582 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80076c4:	4620      	mov	r0, r4
 80076c6:	f7ff ff5e 	bl	8007586 <HAL_TIM_PWM_PulseFinishedCallback>
 80076ca:	e7af      	b.n	800762c <HAL_TIM_IRQHandler+0xa2>
}
 80076cc:	bd10      	pop	{r4, pc}
	...

080076d0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80076d0:	4a30      	ldr	r2, [pc, #192]	; (8007794 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80076d2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80076d4:	4290      	cmp	r0, r2
 80076d6:	d012      	beq.n	80076fe <TIM_Base_SetConfig+0x2e>
 80076d8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80076dc:	d00f      	beq.n	80076fe <TIM_Base_SetConfig+0x2e>
 80076de:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80076e2:	4290      	cmp	r0, r2
 80076e4:	d00b      	beq.n	80076fe <TIM_Base_SetConfig+0x2e>
 80076e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80076ea:	4290      	cmp	r0, r2
 80076ec:	d007      	beq.n	80076fe <TIM_Base_SetConfig+0x2e>
 80076ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80076f2:	4290      	cmp	r0, r2
 80076f4:	d003      	beq.n	80076fe <TIM_Base_SetConfig+0x2e>
 80076f6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80076fa:	4290      	cmp	r0, r2
 80076fc:	d119      	bne.n	8007732 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80076fe:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007700:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007704:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007706:	4a23      	ldr	r2, [pc, #140]	; (8007794 <TIM_Base_SetConfig+0xc4>)
 8007708:	4290      	cmp	r0, r2
 800770a:	d029      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 800770c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007710:	d026      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 8007712:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007716:	4290      	cmp	r0, r2
 8007718:	d022      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 800771a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800771e:	4290      	cmp	r0, r2
 8007720:	d01e      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 8007722:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007726:	4290      	cmp	r0, r2
 8007728:	d01a      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 800772a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800772e:	4290      	cmp	r0, r2
 8007730:	d016      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 8007732:	4a19      	ldr	r2, [pc, #100]	; (8007798 <TIM_Base_SetConfig+0xc8>)
 8007734:	4290      	cmp	r0, r2
 8007736:	d013      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 8007738:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800773c:	4290      	cmp	r0, r2
 800773e:	d00f      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 8007740:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007744:	4290      	cmp	r0, r2
 8007746:	d00b      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 8007748:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800774c:	4290      	cmp	r0, r2
 800774e:	d007      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 8007750:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007754:	4290      	cmp	r0, r2
 8007756:	d003      	beq.n	8007760 <TIM_Base_SetConfig+0x90>
 8007758:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800775c:	4290      	cmp	r0, r2
 800775e:	d103      	bne.n	8007768 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007760:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8007762:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007766:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007768:	694a      	ldr	r2, [r1, #20]
 800776a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800776e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007770:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007772:	688b      	ldr	r3, [r1, #8]
 8007774:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007776:	680b      	ldr	r3, [r1, #0]
 8007778:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800777a:	4b06      	ldr	r3, [pc, #24]	; (8007794 <TIM_Base_SetConfig+0xc4>)
 800777c:	4298      	cmp	r0, r3
 800777e:	d003      	beq.n	8007788 <TIM_Base_SetConfig+0xb8>
 8007780:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007784:	4298      	cmp	r0, r3
 8007786:	d101      	bne.n	800778c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007788:	690b      	ldr	r3, [r1, #16]
 800778a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800778c:	2301      	movs	r3, #1
 800778e:	6143      	str	r3, [r0, #20]
}
 8007790:	4770      	bx	lr
 8007792:	bf00      	nop
 8007794:	40010000 	.word	0x40010000
 8007798:	40014000 	.word	0x40014000

0800779c <HAL_TIM_Base_Init>:
{
 800779c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800779e:	4604      	mov	r4, r0
 80077a0:	b1a0      	cbz	r0, 80077cc <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80077a2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80077a6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80077aa:	b91b      	cbnz	r3, 80077b4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80077ac:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80077b0:	f7fa fb1c 	bl	8001dec <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80077b4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80077b6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80077b8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80077bc:	1d21      	adds	r1, r4, #4
 80077be:	f7ff ff87 	bl	80076d0 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80077c2:	2301      	movs	r3, #1
 80077c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80077c8:	2000      	movs	r0, #0
}
 80077ca:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80077cc:	2001      	movs	r0, #1
 80077ce:	e7fc      	b.n	80077ca <HAL_TIM_Base_Init+0x2e>

080077d0 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80077d0:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80077d2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80077d6:	2b01      	cmp	r3, #1
 80077d8:	f04f 0302 	mov.w	r3, #2
 80077dc:	d032      	beq.n	8007844 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80077de:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80077e2:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80077e4:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80077e6:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80077e8:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80077ea:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80077ee:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80077f0:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80077f2:	4c15      	ldr	r4, [pc, #84]	; (8007848 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 80077f4:	42a3      	cmp	r3, r4
 80077f6:	d01a      	beq.n	800782e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80077f8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80077fc:	d017      	beq.n	800782e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80077fe:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8007802:	42a3      	cmp	r3, r4
 8007804:	d013      	beq.n	800782e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007806:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800780a:	42a3      	cmp	r3, r4
 800780c:	d00f      	beq.n	800782e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800780e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007812:	42a3      	cmp	r3, r4
 8007814:	d00b      	beq.n	800782e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007816:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800781a:	42a3      	cmp	r3, r4
 800781c:	d007      	beq.n	800782e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800781e:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8007822:	42a3      	cmp	r3, r4
 8007824:	d003      	beq.n	800782e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007826:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800782a:	42a3      	cmp	r3, r4
 800782c:	d104      	bne.n	8007838 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800782e:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007830:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007834:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007836:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007838:	2301      	movs	r3, #1
 800783a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800783e:	2300      	movs	r3, #0
 8007840:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8007844:	4618      	mov	r0, r3

  return HAL_OK;
}
 8007846:	bd30      	pop	{r4, r5, pc}
 8007848:	40010000 	.word	0x40010000

0800784c <HAL_TIMEx_CommutCallback>:
 800784c:	4770      	bx	lr

0800784e <HAL_TIMEx_BreakCallback>:
 800784e:	4770      	bx	lr

08007850 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007850:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8007854:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8007856:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800785a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800785e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8007862:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007866:	6809      	ldr	r1, [r1, #0]
 8007868:	2901      	cmp	r1, #1
 800786a:	ea43 0304 	orr.w	r3, r3, r4
 800786e:	4912      	ldr	r1, [pc, #72]	; (80078b8 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007870:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007872:	d00f      	beq.n	8007894 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007874:	431a      	orrs	r2, r3
 8007876:	432a      	orrs	r2, r5
 8007878:	ea42 0308 	orr.w	r3, r2, r8
 800787c:	ea43 030e 	orr.w	r3, r3, lr
 8007880:	ea43 030c 	orr.w	r3, r3, ip
 8007884:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007886:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007888:	4333      	orrs	r3, r6
 800788a:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800788c:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800788e:	2000      	movs	r0, #0
 8007890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007894:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8007896:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007898:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800789a:	ea45 0208 	orr.w	r2, r5, r8
 800789e:	ea42 020e 	orr.w	r2, r2, lr
 80078a2:	ea42 020c 	orr.w	r2, r2, ip
 80078a6:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80078a8:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80078ac:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80078ae:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80078b0:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80078b2:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80078b4:	6042      	str	r2, [r0, #4]
 80078b6:	e7ea      	b.n	800788e <FMC_SDRAM_Init+0x3e>
 80078b8:	ffff8000 	.word	0xffff8000

080078bc <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80078bc:	68cb      	ldr	r3, [r1, #12]
{
 80078be:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80078c0:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80078c2:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80078c4:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80078c6:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80078c8:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80078ca:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80078ce:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80078d0:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80078d2:	3b01      	subs	r3, #1
 80078d4:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80078d6:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80078d8:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80078da:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 80078dc:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80078de:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80078e0:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80078e4:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80078e8:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 80078ec:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80078f0:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 80078f4:	d00c      	beq.n	8007910 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80078f6:	ea43 030c 	orr.w	r3, r3, ip
 80078fa:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80078fc:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80078fe:	4333      	orrs	r3, r6
 8007900:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007902:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007906:	430b      	orrs	r3, r1
 8007908:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800790a:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 800790c:	2000      	movs	r0, #0
 800790e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007910:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007912:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8007916:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800791a:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800791c:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800791e:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007922:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007924:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007926:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007928:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800792c:	430a      	orrs	r2, r1
 800792e:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8007930:	60c2      	str	r2, [r0, #12]
 8007932:	e7eb      	b.n	800790c <FMC_SDRAM_Timing_Init+0x50>

08007934 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007934:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8007936:	2300      	movs	r3, #0
 8007938:	9301      	str	r3, [sp, #4]
{
 800793a:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800793c:	e9d1 3200 	ldrd	r3, r2, [r1]
 8007940:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8007942:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007944:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007948:	688a      	ldr	r2, [r1, #8]
 800794a:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800794c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007950:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8007952:	9b01      	ldr	r3, [sp, #4]
 8007954:	6103      	str	r3, [r0, #16]
{
 8007956:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007958:	f7fd fbf8 	bl	800514c <HAL_GetTick>
 800795c:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800795e:	69a3      	ldr	r3, [r4, #24]
 8007960:	f013 0320 	ands.w	r3, r3, #32
 8007964:	d101      	bne.n	800796a <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007966:	4618      	mov	r0, r3
 8007968:	e003      	b.n	8007972 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800796a:	1c6b      	adds	r3, r5, #1
 800796c:	d0f7      	beq.n	800795e <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800796e:	b915      	cbnz	r5, 8007976 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8007970:	2003      	movs	r0, #3
}
 8007972:	b002      	add	sp, #8
 8007974:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007976:	f7fd fbe9 	bl	800514c <HAL_GetTick>
 800797a:	1b80      	subs	r0, r0, r6
 800797c:	42a8      	cmp	r0, r5
 800797e:	d9ee      	bls.n	800795e <FMC_SDRAM_SendCommand+0x2a>
 8007980:	e7f6      	b.n	8007970 <FMC_SDRAM_SendCommand+0x3c>

08007982 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007982:	6943      	ldr	r3, [r0, #20]
 8007984:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8007988:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800798a:	2000      	movs	r0, #0
 800798c:	4770      	bx	lr
	...

08007990 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007990:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007994:	b113      	cbz	r3, 800799c <osKernelInitialize+0xc>
    stat = osErrorISR;
 8007996:	f06f 0005 	mvn.w	r0, #5
 800799a:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800799c:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80079a0:	4b07      	ldr	r3, [pc, #28]	; (80079c0 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80079a2:	b912      	cbnz	r2, 80079aa <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80079a4:	f3ef 8211 	mrs	r2, BASEPRI
 80079a8:	b112      	cbz	r2, 80079b0 <osKernelInitialize+0x20>
 80079aa:	681a      	ldr	r2, [r3, #0]
 80079ac:	2a02      	cmp	r2, #2
 80079ae:	d0f2      	beq.n	8007996 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80079b0:	6818      	ldr	r0, [r3, #0]
 80079b2:	b910      	cbnz	r0, 80079ba <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80079b4:	2201      	movs	r2, #1
 80079b6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80079b8:	4770      	bx	lr
    } else {
      stat = osError;
 80079ba:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80079be:	4770      	bx	lr
 80079c0:	20006a0c 	.word	0x20006a0c

080079c4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80079c4:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80079c6:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80079ca:	b113      	cbz	r3, 80079d2 <osKernelStart+0xe>
    stat = osErrorISR;
 80079cc:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80079d0:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80079d2:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80079d6:	4b0a      	ldr	r3, [pc, #40]	; (8007a00 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80079d8:	b912      	cbnz	r2, 80079e0 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80079da:	f3ef 8211 	mrs	r2, BASEPRI
 80079de:	b112      	cbz	r2, 80079e6 <osKernelStart+0x22>
 80079e0:	681a      	ldr	r2, [r3, #0]
 80079e2:	2a02      	cmp	r2, #2
 80079e4:	d0f2      	beq.n	80079cc <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80079e6:	681a      	ldr	r2, [r3, #0]
 80079e8:	2a01      	cmp	r2, #1
 80079ea:	d105      	bne.n	80079f8 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80079ec:	2202      	movs	r2, #2
 80079ee:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80079f0:	f001 fbd8 	bl	80091a4 <vTaskStartScheduler>
      stat = osOK;
 80079f4:	2000      	movs	r0, #0
 80079f6:	e7eb      	b.n	80079d0 <osKernelStart+0xc>
      stat = osError;
 80079f8:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80079fc:	e7e8      	b.n	80079d0 <osKernelStart+0xc>
 80079fe:	bf00      	nop
 8007a00:	20006a0c 	.word	0x20006a0c

08007a04 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007a04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007a06:	b087      	sub	sp, #28
 8007a08:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007a0a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007a0c:	460b      	mov	r3, r1
  hTask = NULL;
 8007a0e:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007a10:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007a14:	bb22      	cbnz	r2, 8007a60 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007a16:	f3ef 8210 	mrs	r2, PRIMASK
 8007a1a:	b912      	cbnz	r2, 8007a22 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007a1c:	f3ef 8211 	mrs	r2, BASEPRI
 8007a20:	b11a      	cbz	r2, 8007a2a <osThreadNew+0x26>
 8007a22:	4a22      	ldr	r2, [pc, #136]	; (8007aac <osThreadNew+0xa8>)
 8007a24:	6812      	ldr	r2, [r2, #0]
 8007a26:	2a02      	cmp	r2, #2
 8007a28:	d01a      	beq.n	8007a60 <osThreadNew+0x5c>
 8007a2a:	b1c8      	cbz	r0, 8007a60 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007a2c:	2c00      	cmp	r4, #0
 8007a2e:	d02f      	beq.n	8007a90 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007a30:	69a5      	ldr	r5, [r4, #24]
 8007a32:	2d00      	cmp	r5, #0
 8007a34:	bf08      	it	eq
 8007a36:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007a38:	1e6a      	subs	r2, r5, #1
 8007a3a:	2a37      	cmp	r2, #55	; 0x37
 8007a3c:	46ac      	mov	ip, r5
 8007a3e:	d82b      	bhi.n	8007a98 <osThreadNew+0x94>
 8007a40:	6862      	ldr	r2, [r4, #4]
 8007a42:	07d2      	lsls	r2, r2, #31
 8007a44:	d428      	bmi.n	8007a98 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007a46:	6966      	ldr	r6, [r4, #20]
 8007a48:	b16e      	cbz	r6, 8007a66 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007a4a:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007a4c:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8007a50:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007a52:	b157      	cbz	r7, 8007a6a <osThreadNew+0x66>
 8007a54:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8007a58:	d902      	bls.n	8007a60 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007a5a:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007a5c:	b104      	cbz	r4, 8007a60 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007a5e:	b9ee      	cbnz	r6, 8007a9c <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007a60:	9805      	ldr	r0, [sp, #20]
}
 8007a62:	b007      	add	sp, #28
 8007a64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007a66:	2280      	movs	r2, #128	; 0x80
 8007a68:	e7f0      	b.n	8007a4c <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007a6a:	f1be 0f00 	cmp.w	lr, #0
 8007a6e:	d1f7      	bne.n	8007a60 <osThreadNew+0x5c>
      if (mem == 0) {
 8007a70:	6924      	ldr	r4, [r4, #16]
 8007a72:	2c00      	cmp	r4, #0
 8007a74:	d1f4      	bne.n	8007a60 <osThreadNew+0x5c>
 8007a76:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007a78:	a905      	add	r1, sp, #20
 8007a7a:	e9cd c100 	strd	ip, r1, [sp]
 8007a7e:	b292      	uxth	r2, r2
 8007a80:	4621      	mov	r1, r4
 8007a82:	f001 fb61 	bl	8009148 <xTaskCreate>
 8007a86:	2801      	cmp	r0, #1
          hTask = NULL;
 8007a88:	bf1c      	itt	ne
 8007a8a:	2300      	movne	r3, #0
 8007a8c:	9305      	strne	r3, [sp, #20]
 8007a8e:	e7e7      	b.n	8007a60 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8007a90:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007a94:	2280      	movs	r2, #128	; 0x80
 8007a96:	e7ef      	b.n	8007a78 <osThreadNew+0x74>
        return (NULL);
 8007a98:	2000      	movs	r0, #0
 8007a9a:	e7e2      	b.n	8007a62 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007a9c:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007aa0:	9500      	str	r5, [sp, #0]
 8007aa2:	f001 fb19 	bl	80090d8 <xTaskCreateStatic>
 8007aa6:	9005      	str	r0, [sp, #20]
 8007aa8:	e7da      	b.n	8007a60 <osThreadNew+0x5c>
 8007aaa:	bf00      	nop
 8007aac:	20006a0c 	.word	0x20006a0c

08007ab0 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8007ab0:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007ab2:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007ab6:	b113      	cbz	r3, 8007abe <osDelay+0xe>
    stat = osErrorISR;
 8007ab8:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8007abc:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007abe:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007ac2:	b913      	cbnz	r3, 8007aca <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007ac4:	f3ef 8311 	mrs	r3, BASEPRI
 8007ac8:	b11b      	cbz	r3, 8007ad2 <osDelay+0x22>
 8007aca:	4b05      	ldr	r3, [pc, #20]	; (8007ae0 <osDelay+0x30>)
 8007acc:	681b      	ldr	r3, [r3, #0]
 8007ace:	2b02      	cmp	r3, #2
 8007ad0:	d0f2      	beq.n	8007ab8 <osDelay+0x8>
    if (ticks != 0U) {
 8007ad2:	2800      	cmp	r0, #0
 8007ad4:	d0f2      	beq.n	8007abc <osDelay+0xc>
      vTaskDelay(ticks);
 8007ad6:	f001 fccd 	bl	8009474 <vTaskDelay>
    stat = osOK;
 8007ada:	2000      	movs	r0, #0
 8007adc:	e7ee      	b.n	8007abc <osDelay+0xc>
 8007ade:	bf00      	nop
 8007ae0:	20006a0c 	.word	0x20006a0c

08007ae4 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007ae4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007ae6:	460e      	mov	r6, r1
 8007ae8:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007aea:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007aee:	b11b      	cbz	r3, 8007af8 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8007af0:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007af2:	4620      	mov	r0, r4
 8007af4:	b002      	add	sp, #8
 8007af6:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007af8:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007afc:	b913      	cbnz	r3, 8007b04 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007afe:	f3ef 8311 	mrs	r3, BASEPRI
 8007b02:	b11b      	cbz	r3, 8007b0c <osSemaphoreNew+0x28>
 8007b04:	4b21      	ldr	r3, [pc, #132]	; (8007b8c <osSemaphoreNew+0xa8>)
 8007b06:	681b      	ldr	r3, [r3, #0]
 8007b08:	2b02      	cmp	r3, #2
 8007b0a:	d0f1      	beq.n	8007af0 <osSemaphoreNew+0xc>
 8007b0c:	2800      	cmp	r0, #0
 8007b0e:	d0ef      	beq.n	8007af0 <osSemaphoreNew+0xc>
 8007b10:	42b0      	cmp	r0, r6
 8007b12:	d3ed      	bcc.n	8007af0 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8007b14:	b1ed      	cbz	r5, 8007b52 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007b16:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8007b1a:	b1c3      	cbz	r3, 8007b4e <osSemaphoreNew+0x6a>
 8007b1c:	2a4f      	cmp	r2, #79	; 0x4f
 8007b1e:	d9e7      	bls.n	8007af0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8007b20:	2801      	cmp	r0, #1
 8007b22:	d129      	bne.n	8007b78 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007b24:	2203      	movs	r2, #3
 8007b26:	9200      	str	r2, [sp, #0]
 8007b28:	2200      	movs	r2, #0
 8007b2a:	4611      	mov	r1, r2
 8007b2c:	f000 fd2b 	bl	8008586 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8007b30:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007b32:	2800      	cmp	r0, #0
 8007b34:	d0dc      	beq.n	8007af0 <osSemaphoreNew+0xc>
 8007b36:	b1ce      	cbz	r6, 8007b6c <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007b38:	2300      	movs	r3, #0
 8007b3a:	461a      	mov	r2, r3
 8007b3c:	4619      	mov	r1, r3
 8007b3e:	f000 fdd7 	bl	80086f0 <xQueueGenericSend>
 8007b42:	2801      	cmp	r0, #1
 8007b44:	d012      	beq.n	8007b6c <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8007b46:	4620      	mov	r0, r4
 8007b48:	f001 f912 	bl	8008d70 <vQueueDelete>
 8007b4c:	e7d0      	b.n	8007af0 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007b4e:	2a00      	cmp	r2, #0
 8007b50:	d1ce      	bne.n	8007af0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8007b52:	2801      	cmp	r0, #1
 8007b54:	d104      	bne.n	8007b60 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8007b56:	2203      	movs	r2, #3
 8007b58:	2100      	movs	r1, #0
 8007b5a:	f000 fd62 	bl	8008622 <xQueueGenericCreate>
 8007b5e:	e7e7      	b.n	8007b30 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007b60:	4631      	mov	r1, r6
 8007b62:	f000 fda7 	bl	80086b4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007b66:	4604      	mov	r4, r0
 8007b68:	2800      	cmp	r0, #0
 8007b6a:	d0c1      	beq.n	8007af0 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8007b6c:	b95d      	cbnz	r5, 8007b86 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8007b6e:	4629      	mov	r1, r5
 8007b70:	4620      	mov	r0, r4
 8007b72:	f001 f8d7 	bl	8008d24 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007b76:	e7bc      	b.n	8007af2 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007b78:	461a      	mov	r2, r3
 8007b7a:	4631      	mov	r1, r6
 8007b7c:	f000 fd78 	bl	8008670 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007b80:	4604      	mov	r4, r0
 8007b82:	2800      	cmp	r0, #0
 8007b84:	d0b4      	beq.n	8007af0 <osSemaphoreNew+0xc>
          name = attr->name;
 8007b86:	682d      	ldr	r5, [r5, #0]
 8007b88:	e7f1      	b.n	8007b6e <osSemaphoreNew+0x8a>
 8007b8a:	bf00      	nop
 8007b8c:	20006a0c 	.word	0x20006a0c

08007b90 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007b90:	b513      	push	{r0, r1, r4, lr}
 8007b92:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007b94:	b918      	cbnz	r0, 8007b9e <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8007b96:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007b9a:	b002      	add	sp, #8
 8007b9c:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007b9e:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8007ba2:	b163      	cbz	r3, 8007bbe <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8007ba4:	2c00      	cmp	r4, #0
 8007ba6:	d1f6      	bne.n	8007b96 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007ba8:	aa01      	add	r2, sp, #4
 8007baa:	4621      	mov	r1, r4
      yield = pdFALSE;
 8007bac:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007bae:	f001 f869 	bl	8008c84 <xQueueReceiveFromISR>
 8007bb2:	2801      	cmp	r0, #1
 8007bb4:	d113      	bne.n	8007bde <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8007bb6:	9b01      	ldr	r3, [sp, #4]
 8007bb8:	b9a3      	cbnz	r3, 8007be4 <osSemaphoreAcquire+0x54>
  stat = osOK;
 8007bba:	2000      	movs	r0, #0
 8007bbc:	e7ed      	b.n	8007b9a <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007bbe:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007bc2:	b913      	cbnz	r3, 8007bca <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007bc4:	f3ef 8311 	mrs	r3, BASEPRI
 8007bc8:	b11b      	cbz	r3, 8007bd2 <osSemaphoreAcquire+0x42>
 8007bca:	4b0d      	ldr	r3, [pc, #52]	; (8007c00 <osSemaphoreAcquire+0x70>)
 8007bcc:	681b      	ldr	r3, [r3, #0]
 8007bce:	2b02      	cmp	r3, #2
 8007bd0:	d0e8      	beq.n	8007ba4 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007bd2:	4621      	mov	r1, r4
 8007bd4:	f000 ff93 	bl	8008afe <xQueueSemaphoreTake>
 8007bd8:	2801      	cmp	r0, #1
 8007bda:	d0ee      	beq.n	8007bba <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8007bdc:	b96c      	cbnz	r4, 8007bfa <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 8007bde:	f06f 0002 	mvn.w	r0, #2
 8007be2:	e7da      	b.n	8007b9a <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007be4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007be8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007bec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007bf0:	f3bf 8f4f 	dsb	sy
 8007bf4:	f3bf 8f6f 	isb	sy
 8007bf8:	e7df      	b.n	8007bba <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8007bfa:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007bfe:	e7cc      	b.n	8007b9a <osSemaphoreAcquire+0xa>
 8007c00:	20006a0c 	.word	0x20006a0c

08007c04 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007c04:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007c06:	b370      	cbz	r0, 8007c66 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007c08:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007c0c:	b14b      	cbz	r3, 8007c22 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8007c0e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007c10:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007c12:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007c14:	f000 fe80 	bl	8008918 <xQueueGiveFromISR>
 8007c18:	2801      	cmp	r0, #1
 8007c1a:	d014      	beq.n	8007c46 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007c1c:	f06f 0002 	mvn.w	r0, #2
 8007c20:	e014      	b.n	8007c4c <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007c22:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007c26:	b913      	cbnz	r3, 8007c2e <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007c28:	f3ef 8311 	mrs	r3, BASEPRI
 8007c2c:	b11b      	cbz	r3, 8007c36 <osSemaphoreRelease+0x32>
 8007c2e:	4b0f      	ldr	r3, [pc, #60]	; (8007c6c <osSemaphoreRelease+0x68>)
 8007c30:	681b      	ldr	r3, [r3, #0]
 8007c32:	2b02      	cmp	r3, #2
 8007c34:	d0eb      	beq.n	8007c0e <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007c36:	2300      	movs	r3, #0
 8007c38:	461a      	mov	r2, r3
 8007c3a:	4619      	mov	r1, r3
 8007c3c:	f000 fd58 	bl	80086f0 <xQueueGenericSend>
 8007c40:	2801      	cmp	r0, #1
 8007c42:	d002      	beq.n	8007c4a <osSemaphoreRelease+0x46>
 8007c44:	e7ea      	b.n	8007c1c <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8007c46:	9b01      	ldr	r3, [sp, #4]
 8007c48:	b913      	cbnz	r3, 8007c50 <osSemaphoreRelease+0x4c>
  stat = osOK;
 8007c4a:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007c4c:	b002      	add	sp, #8
 8007c4e:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8007c50:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007c54:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007c58:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007c5c:	f3bf 8f4f 	dsb	sy
 8007c60:	f3bf 8f6f 	isb	sy
 8007c64:	e7f1      	b.n	8007c4a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8007c66:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007c6a:	e7ef      	b.n	8007c4c <osSemaphoreRelease+0x48>
 8007c6c:	20006a0c 	.word	0x20006a0c

08007c70 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007c70:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007c72:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007c74:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007c78:	b11b      	cbz	r3, 8007c82 <osMessageQueueNew+0x12>
  hQueue = NULL;
 8007c7a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007c7c:	4628      	mov	r0, r5
 8007c7e:	b002      	add	sp, #8
 8007c80:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007c82:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007c86:	b913      	cbnz	r3, 8007c8e <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007c88:	f3ef 8311 	mrs	r3, BASEPRI
 8007c8c:	b11b      	cbz	r3, 8007c96 <osMessageQueueNew+0x26>
 8007c8e:	4b1a      	ldr	r3, [pc, #104]	; (8007cf8 <osMessageQueueNew+0x88>)
 8007c90:	681b      	ldr	r3, [r3, #0]
 8007c92:	2b02      	cmp	r3, #2
 8007c94:	d0f1      	beq.n	8007c7a <osMessageQueueNew+0xa>
 8007c96:	2800      	cmp	r0, #0
 8007c98:	d0ef      	beq.n	8007c7a <osMessageQueueNew+0xa>
 8007c9a:	2900      	cmp	r1, #0
 8007c9c:	d0ed      	beq.n	8007c7a <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8007c9e:	b1ec      	cbz	r4, 8007cdc <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007ca0:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8007ca4:	b193      	cbz	r3, 8007ccc <osMessageQueueNew+0x5c>
 8007ca6:	2a4f      	cmp	r2, #79	; 0x4f
 8007ca8:	d9e7      	bls.n	8007c7a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007caa:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007cac:	2a00      	cmp	r2, #0
 8007cae:	d0e4      	beq.n	8007c7a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007cb0:	6966      	ldr	r6, [r4, #20]
 8007cb2:	fb01 f500 	mul.w	r5, r1, r0
 8007cb6:	42ae      	cmp	r6, r5
 8007cb8:	d3df      	bcc.n	8007c7a <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007cba:	2500      	movs	r5, #0
 8007cbc:	9500      	str	r5, [sp, #0]
 8007cbe:	f000 fc62 	bl	8008586 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007cc2:	4605      	mov	r5, r0
 8007cc4:	2800      	cmp	r0, #0
 8007cc6:	d0d8      	beq.n	8007c7a <osMessageQueueNew+0xa>
        name = attr->name;
 8007cc8:	6824      	ldr	r4, [r4, #0]
 8007cca:	e00f      	b.n	8007cec <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007ccc:	2a00      	cmp	r2, #0
 8007cce:	d1d4      	bne.n	8007c7a <osMessageQueueNew+0xa>
 8007cd0:	6923      	ldr	r3, [r4, #16]
 8007cd2:	2b00      	cmp	r3, #0
 8007cd4:	d1d1      	bne.n	8007c7a <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007cd6:	6963      	ldr	r3, [r4, #20]
 8007cd8:	2b00      	cmp	r3, #0
 8007cda:	d1ce      	bne.n	8007c7a <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8007cdc:	2200      	movs	r2, #0
 8007cde:	f000 fca0 	bl	8008622 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007ce2:	4605      	mov	r5, r0
 8007ce4:	2800      	cmp	r0, #0
 8007ce6:	d0c8      	beq.n	8007c7a <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8007ce8:	2c00      	cmp	r4, #0
 8007cea:	d1ed      	bne.n	8007cc8 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8007cec:	4621      	mov	r1, r4
 8007cee:	4628      	mov	r0, r5
 8007cf0:	f001 f818 	bl	8008d24 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007cf4:	e7c2      	b.n	8007c7c <osMessageQueueNew+0xc>
 8007cf6:	bf00      	nop
 8007cf8:	20006a0c 	.word	0x20006a0c

08007cfc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007cfc:	b513      	push	{r0, r1, r4, lr}
 8007cfe:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007d00:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007d04:	b123      	cbz	r3, 8007d10 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007d06:	b9d8      	cbnz	r0, 8007d40 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8007d08:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007d0c:	b002      	add	sp, #8
 8007d0e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007d10:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007d14:	b913      	cbnz	r3, 8007d1c <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007d16:	f3ef 8311 	mrs	r3, BASEPRI
 8007d1a:	b11b      	cbz	r3, 8007d24 <osMessageQueuePut+0x28>
 8007d1c:	4b17      	ldr	r3, [pc, #92]	; (8007d7c <osMessageQueuePut+0x80>)
 8007d1e:	681b      	ldr	r3, [r3, #0]
 8007d20:	2b02      	cmp	r3, #2
 8007d22:	d0f0      	beq.n	8007d06 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007d24:	2800      	cmp	r0, #0
 8007d26:	d0ef      	beq.n	8007d08 <osMessageQueuePut+0xc>
 8007d28:	2900      	cmp	r1, #0
 8007d2a:	d0ed      	beq.n	8007d08 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007d2c:	2300      	movs	r3, #0
 8007d2e:	4622      	mov	r2, r4
 8007d30:	f000 fcde 	bl	80086f0 <xQueueGenericSend>
 8007d34:	2801      	cmp	r0, #1
 8007d36:	d010      	beq.n	8007d5a <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8007d38:	b9e4      	cbnz	r4, 8007d74 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 8007d3a:	f06f 0002 	mvn.w	r0, #2
 8007d3e:	e7e5      	b.n	8007d0c <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007d40:	2900      	cmp	r1, #0
 8007d42:	d0e1      	beq.n	8007d08 <osMessageQueuePut+0xc>
 8007d44:	2c00      	cmp	r4, #0
 8007d46:	d1df      	bne.n	8007d08 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007d48:	4623      	mov	r3, r4
 8007d4a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007d4c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007d4e:	f000 fd82 	bl	8008856 <xQueueGenericSendFromISR>
 8007d52:	2801      	cmp	r0, #1
 8007d54:	d1f1      	bne.n	8007d3a <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8007d56:	9b01      	ldr	r3, [sp, #4]
 8007d58:	b90b      	cbnz	r3, 8007d5e <osMessageQueuePut+0x62>
  stat = osOK;
 8007d5a:	2000      	movs	r0, #0
 8007d5c:	e7d6      	b.n	8007d0c <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8007d5e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007d62:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007d66:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007d6a:	f3bf 8f4f 	dsb	sy
 8007d6e:	f3bf 8f6f 	isb	sy
 8007d72:	e7f2      	b.n	8007d5a <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8007d74:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007d78:	e7c8      	b.n	8007d0c <osMessageQueuePut+0x10>
 8007d7a:	bf00      	nop
 8007d7c:	20006a0c 	.word	0x20006a0c

08007d80 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007d80:	b513      	push	{r0, r1, r4, lr}
 8007d82:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007d84:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007d88:	b123      	cbz	r3, 8007d94 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007d8a:	b9d0      	cbnz	r0, 8007dc2 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8007d8c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007d90:	b002      	add	sp, #8
 8007d92:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007d94:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007d98:	b913      	cbnz	r3, 8007da0 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007d9a:	f3ef 8311 	mrs	r3, BASEPRI
 8007d9e:	b11b      	cbz	r3, 8007da8 <osMessageQueueGet+0x28>
 8007da0:	4b16      	ldr	r3, [pc, #88]	; (8007dfc <osMessageQueueGet+0x7c>)
 8007da2:	681b      	ldr	r3, [r3, #0]
 8007da4:	2b02      	cmp	r3, #2
 8007da6:	d0f0      	beq.n	8007d8a <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007da8:	2800      	cmp	r0, #0
 8007daa:	d0ef      	beq.n	8007d8c <osMessageQueueGet+0xc>
 8007dac:	2900      	cmp	r1, #0
 8007dae:	d0ed      	beq.n	8007d8c <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007db0:	4622      	mov	r2, r4
 8007db2:	f000 fe05 	bl	80089c0 <xQueueReceive>
 8007db6:	2801      	cmp	r0, #1
 8007db8:	d00f      	beq.n	8007dda <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 8007dba:	b9dc      	cbnz	r4, 8007df4 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 8007dbc:	f06f 0002 	mvn.w	r0, #2
 8007dc0:	e7e6      	b.n	8007d90 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007dc2:	2900      	cmp	r1, #0
 8007dc4:	d0e2      	beq.n	8007d8c <osMessageQueueGet+0xc>
 8007dc6:	2c00      	cmp	r4, #0
 8007dc8:	d1e0      	bne.n	8007d8c <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007dca:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007dcc:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007dce:	f000 ff59 	bl	8008c84 <xQueueReceiveFromISR>
 8007dd2:	2801      	cmp	r0, #1
 8007dd4:	d1f2      	bne.n	8007dbc <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8007dd6:	9b01      	ldr	r3, [sp, #4]
 8007dd8:	b90b      	cbnz	r3, 8007dde <osMessageQueueGet+0x5e>
  stat = osOK;
 8007dda:	2000      	movs	r0, #0
 8007ddc:	e7d8      	b.n	8007d90 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8007dde:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007de2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007de6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007dea:	f3bf 8f4f 	dsb	sy
 8007dee:	f3bf 8f6f 	isb	sy
 8007df2:	e7f2      	b.n	8007dda <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8007df4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007df8:	e7ca      	b.n	8007d90 <osMessageQueueGet+0x10>
 8007dfa:	bf00      	nop
 8007dfc:	20006a0c 	.word	0x20006a0c

08007e00 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007e00:	4b03      	ldr	r3, [pc, #12]	; (8007e10 <vApplicationGetIdleTaskMemory+0x10>)
 8007e02:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007e04:	4b03      	ldr	r3, [pc, #12]	; (8007e14 <vApplicationGetIdleTaskMemory+0x14>)
 8007e06:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007e08:	2380      	movs	r3, #128	; 0x80
 8007e0a:	6013      	str	r3, [r2, #0]
}
 8007e0c:	4770      	bx	lr
 8007e0e:	bf00      	nop
 8007e10:	2000694c 	.word	0x2000694c
 8007e14:	2000674c 	.word	0x2000674c

08007e18 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007e18:	4b03      	ldr	r3, [pc, #12]	; (8007e28 <vApplicationGetTimerTaskMemory+0x10>)
 8007e1a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007e1c:	4b03      	ldr	r3, [pc, #12]	; (8007e2c <vApplicationGetTimerTaskMemory+0x14>)
 8007e1e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007e20:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007e24:	6013      	str	r3, [r2, #0]
}
 8007e26:	4770      	bx	lr
 8007e28:	20006e10 	.word	0x20006e10
 8007e2c:	20006a10 	.word	0x20006a10

08007e30 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007e30:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007e32:	4b0f      	ldr	r3, [pc, #60]	; (8007e70 <prvInsertBlockIntoFreeList+0x40>)
 8007e34:	461a      	mov	r2, r3
 8007e36:	681b      	ldr	r3, [r3, #0]
 8007e38:	4283      	cmp	r3, r0
 8007e3a:	d3fb      	bcc.n	8007e34 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007e3c:	6854      	ldr	r4, [r2, #4]
 8007e3e:	1911      	adds	r1, r2, r4
 8007e40:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007e42:	bf01      	itttt	eq
 8007e44:	6841      	ldreq	r1, [r0, #4]
 8007e46:	4610      	moveq	r0, r2
 8007e48:	1909      	addeq	r1, r1, r4
 8007e4a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007e4c:	6844      	ldr	r4, [r0, #4]
 8007e4e:	1901      	adds	r1, r0, r4
 8007e50:	428b      	cmp	r3, r1
 8007e52:	d107      	bne.n	8007e64 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007e54:	4907      	ldr	r1, [pc, #28]	; (8007e74 <prvInsertBlockIntoFreeList+0x44>)
 8007e56:	6809      	ldr	r1, [r1, #0]
 8007e58:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007e5a:	bf1f      	itttt	ne
 8007e5c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007e5e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007e60:	1909      	addne	r1, r1, r4
 8007e62:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007e64:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8007e66:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007e68:	bf18      	it	ne
 8007e6a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007e6c:	bd10      	pop	{r4, pc}
 8007e6e:	bf00      	nop
 8007e70:	20016ee0 	.word	0x20016ee0
 8007e74:	20006ed0 	.word	0x20006ed0

08007e78 <pvPortMalloc>:
{
 8007e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007e7c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007e7e:	f001 f9e1 	bl	8009244 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007e82:	4840      	ldr	r0, [pc, #256]	; (8007f84 <pvPortMalloc+0x10c>)
 8007e84:	4d40      	ldr	r5, [pc, #256]	; (8007f88 <pvPortMalloc+0x110>)
 8007e86:	6803      	ldr	r3, [r0, #0]
 8007e88:	bb0b      	cbnz	r3, 8007ece <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8007e8a:	4940      	ldr	r1, [pc, #256]	; (8007f8c <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007e8c:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007e8e:	bf1f      	itttt	ne
 8007e90:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007e92:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007e96:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 8007e9a:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007e9c:	bf14      	ite	ne
 8007e9e:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007ea0:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007ea4:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007ea6:	4e3a      	ldr	r6, [pc, #232]	; (8007f90 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8007ea8:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007eaa:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007eae:	2300      	movs	r3, #0
 8007eb0:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007eb2:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007eb4:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007eb8:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007eba:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8007ebe:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007ec0:	4a34      	ldr	r2, [pc, #208]	; (8007f94 <pvPortMalloc+0x11c>)
 8007ec2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007ec4:	4a34      	ldr	r2, [pc, #208]	; (8007f98 <pvPortMalloc+0x120>)
 8007ec6:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007ec8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007ecc:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007ece:	682f      	ldr	r7, [r5, #0]
 8007ed0:	4227      	tst	r7, r4
 8007ed2:	d151      	bne.n	8007f78 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8007ed4:	2c00      	cmp	r4, #0
 8007ed6:	d042      	beq.n	8007f5e <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8007ed8:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007edc:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007ede:	bf1c      	itt	ne
 8007ee0:	f023 0307 	bicne.w	r3, r3, #7
 8007ee4:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007ee6:	2b00      	cmp	r3, #0
 8007ee8:	d046      	beq.n	8007f78 <pvPortMalloc+0x100>
 8007eea:	4c2b      	ldr	r4, [pc, #172]	; (8007f98 <pvPortMalloc+0x120>)
 8007eec:	6826      	ldr	r6, [r4, #0]
 8007eee:	429e      	cmp	r6, r3
 8007ef0:	d342      	bcc.n	8007f78 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8007ef2:	4a27      	ldr	r2, [pc, #156]	; (8007f90 <pvPortMalloc+0x118>)
 8007ef4:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007ef6:	6869      	ldr	r1, [r5, #4]
 8007ef8:	4299      	cmp	r1, r3
 8007efa:	d204      	bcs.n	8007f06 <pvPortMalloc+0x8e>
 8007efc:	f8d5 c000 	ldr.w	ip, [r5]
 8007f00:	f1bc 0f00 	cmp.w	ip, #0
 8007f04:	d115      	bne.n	8007f32 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8007f06:	6800      	ldr	r0, [r0, #0]
 8007f08:	42a8      	cmp	r0, r5
 8007f0a:	d035      	beq.n	8007f78 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007f0c:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007f0e:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007f10:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007f14:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007f16:	2910      	cmp	r1, #16
 8007f18:	d912      	bls.n	8007f40 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007f1a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007f1c:	0742      	lsls	r2, r0, #29
 8007f1e:	d00b      	beq.n	8007f38 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007f20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f24:	f383 8811 	msr	BASEPRI, r3
 8007f28:	f3bf 8f6f 	isb	sy
 8007f2c:	f3bf 8f4f 	dsb	sy
 8007f30:	e7fe      	b.n	8007f30 <pvPortMalloc+0xb8>
 8007f32:	462a      	mov	r2, r5
 8007f34:	4665      	mov	r5, ip
 8007f36:	e7de      	b.n	8007ef6 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007f38:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007f3a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007f3c:	f7ff ff78 	bl	8007e30 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007f40:	4914      	ldr	r1, [pc, #80]	; (8007f94 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007f42:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007f44:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007f46:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007f48:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007f4a:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8007f4c:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007f50:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007f52:	bf38      	it	cc
 8007f54:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007f56:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007f5a:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007f5c:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8007f5e:	f001 fa15 	bl	800938c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007f62:	0763      	lsls	r3, r4, #29
 8007f64:	d00a      	beq.n	8007f7c <pvPortMalloc+0x104>
 8007f66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f6a:	f383 8811 	msr	BASEPRI, r3
 8007f6e:	f3bf 8f6f 	isb	sy
 8007f72:	f3bf 8f4f 	dsb	sy
 8007f76:	e7fe      	b.n	8007f76 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8007f78:	2400      	movs	r4, #0
 8007f7a:	e7f0      	b.n	8007f5e <pvPortMalloc+0xe6>
}
 8007f7c:	4620      	mov	r0, r4
 8007f7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007f82:	bf00      	nop
 8007f84:	20006ed0 	.word	0x20006ed0
 8007f88:	20016ed4 	.word	0x20016ed4
 8007f8c:	20006ed4 	.word	0x20006ed4
 8007f90:	20016ee0 	.word	0x20016ee0
 8007f94:	20016edc 	.word	0x20016edc
 8007f98:	20016ed8 	.word	0x20016ed8

08007f9c <vPortFree>:
{
 8007f9c:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007f9e:	4604      	mov	r4, r0
 8007fa0:	b370      	cbz	r0, 8008000 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007fa2:	4a18      	ldr	r2, [pc, #96]	; (8008004 <vPortFree+0x68>)
 8007fa4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007fa8:	6812      	ldr	r2, [r2, #0]
 8007faa:	4213      	tst	r3, r2
 8007fac:	d108      	bne.n	8007fc0 <vPortFree+0x24>
 8007fae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fb2:	f383 8811 	msr	BASEPRI, r3
 8007fb6:	f3bf 8f6f 	isb	sy
 8007fba:	f3bf 8f4f 	dsb	sy
 8007fbe:	e7fe      	b.n	8007fbe <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007fc0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007fc4:	b141      	cbz	r1, 8007fd8 <vPortFree+0x3c>
 8007fc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fca:	f383 8811 	msr	BASEPRI, r3
 8007fce:	f3bf 8f6f 	isb	sy
 8007fd2:	f3bf 8f4f 	dsb	sy
 8007fd6:	e7fe      	b.n	8007fd6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007fd8:	ea23 0302 	bic.w	r3, r3, r2
 8007fdc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007fe0:	f001 f930 	bl	8009244 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007fe4:	4a08      	ldr	r2, [pc, #32]	; (8008008 <vPortFree+0x6c>)
 8007fe6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007fea:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007fec:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007ff0:	440b      	add	r3, r1
 8007ff2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007ff4:	f7ff ff1c 	bl	8007e30 <prvInsertBlockIntoFreeList>
}
 8007ff8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8007ffc:	f001 b9c6 	b.w	800938c <xTaskResumeAll>
}
 8008000:	bd10      	pop	{r4, pc}
 8008002:	bf00      	nop
 8008004:	20016ed4 	.word	0x20016ed4
 8008008:	20016ed8 	.word	0x20016ed8

0800800c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800800c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008010:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008014:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008018:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800801a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800801c:	2300      	movs	r3, #0
 800801e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008020:	4770      	bx	lr

08008022 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008022:	2300      	movs	r3, #0
 8008024:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008026:	4770      	bx	lr

08008028 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008028:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800802a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800802c:	689a      	ldr	r2, [r3, #8]
 800802e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008030:	689a      	ldr	r2, [r3, #8]
 8008032:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008034:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008036:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008038:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800803a:	3301      	adds	r3, #1
 800803c:	6003      	str	r3, [r0, #0]
}
 800803e:	4770      	bx	lr

08008040 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008040:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008042:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008044:	1c63      	adds	r3, r4, #1
 8008046:	d10a      	bne.n	800805e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008048:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800804a:	685a      	ldr	r2, [r3, #4]
 800804c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800804e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008050:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008052:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008054:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008056:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008058:	3301      	adds	r3, #1
 800805a:	6003      	str	r3, [r0, #0]
}
 800805c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800805e:	f100 0208 	add.w	r2, r0, #8
 8008062:	4613      	mov	r3, r2
 8008064:	6852      	ldr	r2, [r2, #4]
 8008066:	6815      	ldr	r5, [r2, #0]
 8008068:	42a5      	cmp	r5, r4
 800806a:	d9fa      	bls.n	8008062 <vListInsert+0x22>
 800806c:	e7ed      	b.n	800804a <vListInsert+0xa>

0800806e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800806e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008072:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008074:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008076:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008078:	6859      	ldr	r1, [r3, #4]
 800807a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800807c:	bf08      	it	eq
 800807e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008080:	2200      	movs	r2, #0
 8008082:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008084:	681a      	ldr	r2, [r3, #0]
 8008086:	3a01      	subs	r2, #1
 8008088:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800808a:	6818      	ldr	r0, [r3, #0]
}
 800808c:	4770      	bx	lr
	...

08008090 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008090:	4808      	ldr	r0, [pc, #32]	; (80080b4 <prvPortStartFirstTask+0x24>)
 8008092:	6800      	ldr	r0, [r0, #0]
 8008094:	6800      	ldr	r0, [r0, #0]
 8008096:	f380 8808 	msr	MSP, r0
 800809a:	f04f 0000 	mov.w	r0, #0
 800809e:	f380 8814 	msr	CONTROL, r0
 80080a2:	b662      	cpsie	i
 80080a4:	b661      	cpsie	f
 80080a6:	f3bf 8f4f 	dsb	sy
 80080aa:	f3bf 8f6f 	isb	sy
 80080ae:	df00      	svc	0
 80080b0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80080b2:	0000      	.short	0x0000
 80080b4:	e000ed08 	.word	0xe000ed08

080080b8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80080b8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80080c8 <vPortEnableVFP+0x10>
 80080bc:	6801      	ldr	r1, [r0, #0]
 80080be:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80080c2:	6001      	str	r1, [r0, #0]
 80080c4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80080c6:	0000      	.short	0x0000
 80080c8:	e000ed88 	.word	0xe000ed88

080080cc <prvTaskExitError>:
{
 80080cc:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80080ce:	2300      	movs	r3, #0
 80080d0:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80080d2:	4b0d      	ldr	r3, [pc, #52]	; (8008108 <prvTaskExitError+0x3c>)
 80080d4:	681b      	ldr	r3, [r3, #0]
 80080d6:	3301      	adds	r3, #1
 80080d8:	d008      	beq.n	80080ec <prvTaskExitError+0x20>
 80080da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080de:	f383 8811 	msr	BASEPRI, r3
 80080e2:	f3bf 8f6f 	isb	sy
 80080e6:	f3bf 8f4f 	dsb	sy
 80080ea:	e7fe      	b.n	80080ea <prvTaskExitError+0x1e>
 80080ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080f0:	f383 8811 	msr	BASEPRI, r3
 80080f4:	f3bf 8f6f 	isb	sy
 80080f8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80080fc:	9b01      	ldr	r3, [sp, #4]
 80080fe:	2b00      	cmp	r3, #0
 8008100:	d0fc      	beq.n	80080fc <prvTaskExitError+0x30>
}
 8008102:	b002      	add	sp, #8
 8008104:	4770      	bx	lr
 8008106:	bf00      	nop
 8008108:	20000084 	.word	0x20000084

0800810c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800810c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008110:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008114:	4b07      	ldr	r3, [pc, #28]	; (8008134 <pxPortInitialiseStack+0x28>)
 8008116:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800811a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800811e:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008122:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008126:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800812a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800812e:	3844      	subs	r0, #68	; 0x44
 8008130:	4770      	bx	lr
 8008132:	bf00      	nop
 8008134:	080080cd 	.word	0x080080cd
	...

08008140 <SVC_Handler>:
	__asm volatile (
 8008140:	4b07      	ldr	r3, [pc, #28]	; (8008160 <pxCurrentTCBConst2>)
 8008142:	6819      	ldr	r1, [r3, #0]
 8008144:	6808      	ldr	r0, [r1, #0]
 8008146:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800814a:	f380 8809 	msr	PSP, r0
 800814e:	f3bf 8f6f 	isb	sy
 8008152:	f04f 0000 	mov.w	r0, #0
 8008156:	f380 8811 	msr	BASEPRI, r0
 800815a:	4770      	bx	lr
 800815c:	f3af 8000 	nop.w

08008160 <pxCurrentTCBConst2>:
 8008160:	20016f30 	.word	0x20016f30

08008164 <vPortEnterCritical>:
 8008164:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008168:	f383 8811 	msr	BASEPRI, r3
 800816c:	f3bf 8f6f 	isb	sy
 8008170:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008174:	4a0a      	ldr	r2, [pc, #40]	; (80081a0 <vPortEnterCritical+0x3c>)
 8008176:	6813      	ldr	r3, [r2, #0]
 8008178:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800817a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800817c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800817e:	d10e      	bne.n	800819e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008180:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008184:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008188:	b2db      	uxtb	r3, r3
 800818a:	b143      	cbz	r3, 800819e <vPortEnterCritical+0x3a>
 800818c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008190:	f383 8811 	msr	BASEPRI, r3
 8008194:	f3bf 8f6f 	isb	sy
 8008198:	f3bf 8f4f 	dsb	sy
 800819c:	e7fe      	b.n	800819c <vPortEnterCritical+0x38>
}
 800819e:	4770      	bx	lr
 80081a0:	20000084 	.word	0x20000084

080081a4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80081a4:	4a08      	ldr	r2, [pc, #32]	; (80081c8 <vPortExitCritical+0x24>)
 80081a6:	6813      	ldr	r3, [r2, #0]
 80081a8:	b943      	cbnz	r3, 80081bc <vPortExitCritical+0x18>
 80081aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081ae:	f383 8811 	msr	BASEPRI, r3
 80081b2:	f3bf 8f6f 	isb	sy
 80081b6:	f3bf 8f4f 	dsb	sy
 80081ba:	e7fe      	b.n	80081ba <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80081bc:	3b01      	subs	r3, #1
 80081be:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80081c0:	b90b      	cbnz	r3, 80081c6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80081c2:	f383 8811 	msr	BASEPRI, r3
}
 80081c6:	4770      	bx	lr
 80081c8:	20000084 	.word	0x20000084
 80081cc:	00000000 	.word	0x00000000

080081d0 <PendSV_Handler>:
	__asm volatile
 80081d0:	f3ef 8009 	mrs	r0, PSP
 80081d4:	f3bf 8f6f 	isb	sy
 80081d8:	4b15      	ldr	r3, [pc, #84]	; (8008230 <pxCurrentTCBConst>)
 80081da:	681a      	ldr	r2, [r3, #0]
 80081dc:	f01e 0f10 	tst.w	lr, #16
 80081e0:	bf08      	it	eq
 80081e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80081e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80081ea:	6010      	str	r0, [r2, #0]
 80081ec:	e92d 0009 	stmdb	sp!, {r0, r3}
 80081f0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80081f4:	f380 8811 	msr	BASEPRI, r0
 80081f8:	f3bf 8f4f 	dsb	sy
 80081fc:	f3bf 8f6f 	isb	sy
 8008200:	f001 f95c 	bl	80094bc <vTaskSwitchContext>
 8008204:	f04f 0000 	mov.w	r0, #0
 8008208:	f380 8811 	msr	BASEPRI, r0
 800820c:	bc09      	pop	{r0, r3}
 800820e:	6819      	ldr	r1, [r3, #0]
 8008210:	6808      	ldr	r0, [r1, #0]
 8008212:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008216:	f01e 0f10 	tst.w	lr, #16
 800821a:	bf08      	it	eq
 800821c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008220:	f380 8809 	msr	PSP, r0
 8008224:	f3bf 8f6f 	isb	sy
 8008228:	4770      	bx	lr
 800822a:	bf00      	nop
 800822c:	f3af 8000 	nop.w

08008230 <pxCurrentTCBConst>:
 8008230:	20016f30 	.word	0x20016f30

08008234 <SysTick_Handler>:
{
 8008234:	b508      	push	{r3, lr}
	__asm volatile
 8008236:	f04f 0350 	mov.w	r3, #80	; 0x50
 800823a:	f383 8811 	msr	BASEPRI, r3
 800823e:	f3bf 8f6f 	isb	sy
 8008242:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008246:	f001 f80b 	bl	8009260 <xTaskIncrementTick>
 800824a:	b128      	cbz	r0, 8008258 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800824c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008250:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008254:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008258:	2300      	movs	r3, #0
 800825a:	f383 8811 	msr	BASEPRI, r3
}
 800825e:	bd08      	pop	{r3, pc}

08008260 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008260:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008264:	2300      	movs	r3, #0
 8008266:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008268:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800826a:	4b05      	ldr	r3, [pc, #20]	; (8008280 <vPortSetupTimerInterrupt+0x20>)
 800826c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008270:	681b      	ldr	r3, [r3, #0]
 8008272:	fbb3 f3f1 	udiv	r3, r3, r1
 8008276:	3b01      	subs	r3, #1
 8008278:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800827a:	2307      	movs	r3, #7
 800827c:	6113      	str	r3, [r2, #16]
}
 800827e:	4770      	bx	lr
 8008280:	20000078 	.word	0x20000078

08008284 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008284:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008288:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800828a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800828e:	4a3a      	ldr	r2, [pc, #232]	; (8008378 <xPortStartScheduler+0xf4>)
 8008290:	4291      	cmp	r1, r2
 8008292:	d108      	bne.n	80082a6 <xPortStartScheduler+0x22>
	__asm volatile
 8008294:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008298:	f383 8811 	msr	BASEPRI, r3
 800829c:	f3bf 8f6f 	isb	sy
 80082a0:	f3bf 8f4f 	dsb	sy
 80082a4:	e7fe      	b.n	80082a4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80082a6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 80082aa:	4b34      	ldr	r3, [pc, #208]	; (800837c <xPortStartScheduler+0xf8>)
 80082ac:	429a      	cmp	r2, r3
 80082ae:	d108      	bne.n	80082c2 <xPortStartScheduler+0x3e>
 80082b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082b4:	f383 8811 	msr	BASEPRI, r3
 80082b8:	f3bf 8f6f 	isb	sy
 80082bc:	f3bf 8f4f 	dsb	sy
 80082c0:	e7fe      	b.n	80082c0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80082c2:	4b2f      	ldr	r3, [pc, #188]	; (8008380 <xPortStartScheduler+0xfc>)
 80082c4:	781a      	ldrb	r2, [r3, #0]
 80082c6:	b2d2      	uxtb	r2, r2
 80082c8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80082ca:	22ff      	movs	r2, #255	; 0xff
 80082cc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80082ce:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80082d0:	4a2c      	ldr	r2, [pc, #176]	; (8008384 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80082d2:	b2db      	uxtb	r3, r3
 80082d4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80082d8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80082dc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80082e0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80082e2:	4a29      	ldr	r2, [pc, #164]	; (8008388 <xPortStartScheduler+0x104>)
 80082e4:	2307      	movs	r3, #7
 80082e6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80082e8:	2100      	movs	r1, #0
 80082ea:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80082ee:	0600      	lsls	r0, r0, #24
 80082f0:	f103 34ff 	add.w	r4, r3, #4294967295
 80082f4:	d40c      	bmi.n	8008310 <xPortStartScheduler+0x8c>
 80082f6:	b111      	cbz	r1, 80082fe <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80082f8:	2b03      	cmp	r3, #3
 80082fa:	6013      	str	r3, [r2, #0]
 80082fc:	d011      	beq.n	8008322 <xPortStartScheduler+0x9e>
 80082fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008302:	f383 8811 	msr	BASEPRI, r3
 8008306:	f3bf 8f6f 	isb	sy
 800830a:	f3bf 8f4f 	dsb	sy
 800830e:	e7fe      	b.n	800830e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008310:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008314:	005b      	lsls	r3, r3, #1
 8008316:	b2db      	uxtb	r3, r3
 8008318:	f88d 3003 	strb.w	r3, [sp, #3]
 800831c:	2101      	movs	r1, #1
 800831e:	4623      	mov	r3, r4
 8008320:	e7e3      	b.n	80082ea <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008322:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008326:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008328:	9b01      	ldr	r3, [sp, #4]
 800832a:	4a15      	ldr	r2, [pc, #84]	; (8008380 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800832c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008330:	b2db      	uxtb	r3, r3
 8008332:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008334:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008338:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800833c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008340:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008344:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008348:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800834c:	f7ff ff88 	bl	8008260 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008350:	4b0e      	ldr	r3, [pc, #56]	; (800838c <xPortStartScheduler+0x108>)
 8008352:	2500      	movs	r5, #0
 8008354:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008356:	f7ff feaf 	bl	80080b8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800835a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800835e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008362:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008366:	f7ff fe93 	bl	8008090 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800836a:	f001 f8a7 	bl	80094bc <vTaskSwitchContext>
	prvTaskExitError();
 800836e:	f7ff fead 	bl	80080cc <prvTaskExitError>
}
 8008372:	4628      	mov	r0, r5
 8008374:	b003      	add	sp, #12
 8008376:	bd30      	pop	{r4, r5, pc}
 8008378:	410fc271 	.word	0x410fc271
 800837c:	410fc270 	.word	0x410fc270
 8008380:	e000e400 	.word	0xe000e400
 8008384:	20016ee8 	.word	0x20016ee8
 8008388:	20016eec 	.word	0x20016eec
 800838c:	20000084 	.word	0x20000084

08008390 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008390:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008394:	2b0f      	cmp	r3, #15
 8008396:	d90e      	bls.n	80083b6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008398:	4a11      	ldr	r2, [pc, #68]	; (80083e0 <vPortValidateInterruptPriority+0x50>)
 800839a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800839c:	4a11      	ldr	r2, [pc, #68]	; (80083e4 <vPortValidateInterruptPriority+0x54>)
 800839e:	7812      	ldrb	r2, [r2, #0]
 80083a0:	429a      	cmp	r2, r3
 80083a2:	d908      	bls.n	80083b6 <vPortValidateInterruptPriority+0x26>
 80083a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083a8:	f383 8811 	msr	BASEPRI, r3
 80083ac:	f3bf 8f6f 	isb	sy
 80083b0:	f3bf 8f4f 	dsb	sy
 80083b4:	e7fe      	b.n	80083b4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80083b6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80083ba:	4a0b      	ldr	r2, [pc, #44]	; (80083e8 <vPortValidateInterruptPriority+0x58>)
 80083bc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80083c0:	6812      	ldr	r2, [r2, #0]
 80083c2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80083c6:	4293      	cmp	r3, r2
 80083c8:	d908      	bls.n	80083dc <vPortValidateInterruptPriority+0x4c>
 80083ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083ce:	f383 8811 	msr	BASEPRI, r3
 80083d2:	f3bf 8f6f 	isb	sy
 80083d6:	f3bf 8f4f 	dsb	sy
 80083da:	e7fe      	b.n	80083da <vPortValidateInterruptPriority+0x4a>
	}
 80083dc:	4770      	bx	lr
 80083de:	bf00      	nop
 80083e0:	e000e3f0 	.word	0xe000e3f0
 80083e4:	20016ee8 	.word	0x20016ee8
 80083e8:	20016eec 	.word	0x20016eec

080083ec <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80083ec:	b510      	push	{r4, lr}
 80083ee:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80083f0:	f7ff feb8 	bl	8008164 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80083f4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80083f6:	f7ff fed5 	bl	80081a4 <vPortExitCritical>

	return xReturn;
}
 80083fa:	fab4 f084 	clz	r0, r4
 80083fe:	0940      	lsrs	r0, r0, #5
 8008400:	bd10      	pop	{r4, pc}

08008402 <prvCopyDataToQueue>:
{
 8008402:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008404:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008406:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008408:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800840a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800840c:	b952      	cbnz	r2, 8008424 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800840e:	6807      	ldr	r7, [r0, #0]
 8008410:	bb47      	cbnz	r7, 8008464 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008412:	6880      	ldr	r0, [r0, #8]
 8008414:	f001 f9ae 	bl	8009774 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008418:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800841a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800841c:	3601      	adds	r6, #1
 800841e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008420:	4628      	mov	r0, r5
 8008422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008424:	b965      	cbnz	r5, 8008440 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008426:	6840      	ldr	r0, [r0, #4]
 8008428:	f017 fa16 	bl	801f858 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800842c:	6863      	ldr	r3, [r4, #4]
 800842e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008430:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008432:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008434:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008436:	4293      	cmp	r3, r2
 8008438:	d3f0      	bcc.n	800841c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800843a:	6823      	ldr	r3, [r4, #0]
 800843c:	6063      	str	r3, [r4, #4]
 800843e:	e7ed      	b.n	800841c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008440:	68c0      	ldr	r0, [r0, #12]
 8008442:	f017 fa09 	bl	801f858 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008446:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008448:	68e3      	ldr	r3, [r4, #12]
 800844a:	4251      	negs	r1, r2
 800844c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800844e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008450:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008452:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008454:	bf3e      	ittt	cc
 8008456:	68a3      	ldrcc	r3, [r4, #8]
 8008458:	185b      	addcc	r3, r3, r1
 800845a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800845c:	2d02      	cmp	r5, #2
 800845e:	d101      	bne.n	8008464 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008460:	b116      	cbz	r6, 8008468 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008462:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008464:	2500      	movs	r5, #0
 8008466:	e7d9      	b.n	800841c <prvCopyDataToQueue+0x1a>
 8008468:	4635      	mov	r5, r6
 800846a:	e7d7      	b.n	800841c <prvCopyDataToQueue+0x1a>

0800846c <prvCopyDataFromQueue>:
{
 800846c:	4603      	mov	r3, r0
 800846e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008470:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008472:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008474:	b16a      	cbz	r2, 8008492 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008476:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008478:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800847a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800847c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800847e:	bf28      	it	cs
 8008480:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008482:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008484:	bf28      	it	cs
 8008486:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008488:	68d9      	ldr	r1, [r3, #12]
}
 800848a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800848e:	f017 b9e3 	b.w	801f858 <memcpy>
}
 8008492:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008496:	4770      	bx	lr

08008498 <prvUnlockQueue>:
{
 8008498:	b570      	push	{r4, r5, r6, lr}
 800849a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800849c:	f7ff fe62 	bl	8008164 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80084a0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80084a4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80084a8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80084aa:	2d00      	cmp	r5, #0
 80084ac:	dc14      	bgt.n	80084d8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80084ae:	23ff      	movs	r3, #255	; 0xff
 80084b0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80084b4:	f7ff fe76 	bl	80081a4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80084b8:	f7ff fe54 	bl	8008164 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80084bc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80084c0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80084c4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80084c6:	2d00      	cmp	r5, #0
 80084c8:	dc12      	bgt.n	80084f0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80084ca:	23ff      	movs	r3, #255	; 0xff
 80084cc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80084d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80084d4:	f7ff be66 	b.w	80081a4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80084d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d0e7      	beq.n	80084ae <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80084de:	4630      	mov	r0, r6
 80084e0:	f001 f864 	bl	80095ac <xTaskRemoveFromEventList>
 80084e4:	b108      	cbz	r0, 80084ea <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80084e6:	f001 f8ed 	bl	80096c4 <vTaskMissedYield>
			--cTxLock;
 80084ea:	3d01      	subs	r5, #1
 80084ec:	b26d      	sxtb	r5, r5
 80084ee:	e7dc      	b.n	80084aa <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80084f0:	6923      	ldr	r3, [r4, #16]
 80084f2:	2b00      	cmp	r3, #0
 80084f4:	d0e9      	beq.n	80084ca <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80084f6:	4630      	mov	r0, r6
 80084f8:	f001 f858 	bl	80095ac <xTaskRemoveFromEventList>
 80084fc:	b108      	cbz	r0, 8008502 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80084fe:	f001 f8e1 	bl	80096c4 <vTaskMissedYield>
				--cRxLock;
 8008502:	3d01      	subs	r5, #1
 8008504:	b26d      	sxtb	r5, r5
 8008506:	e7de      	b.n	80084c6 <prvUnlockQueue+0x2e>

08008508 <xQueueGenericReset>:
{
 8008508:	b538      	push	{r3, r4, r5, lr}
 800850a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800850c:	4604      	mov	r4, r0
 800850e:	b940      	cbnz	r0, 8008522 <xQueueGenericReset+0x1a>
 8008510:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008514:	f383 8811 	msr	BASEPRI, r3
 8008518:	f3bf 8f6f 	isb	sy
 800851c:	f3bf 8f4f 	dsb	sy
 8008520:	e7fe      	b.n	8008520 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008522:	f7ff fe1f 	bl	8008164 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008526:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800852a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800852c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800852e:	434b      	muls	r3, r1
 8008530:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008532:	1a5b      	subs	r3, r3, r1
 8008534:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008536:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008538:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800853a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800853c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800853e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008540:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008544:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008548:	b9a5      	cbnz	r5, 8008574 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800854a:	6923      	ldr	r3, [r4, #16]
 800854c:	b173      	cbz	r3, 800856c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800854e:	f104 0010 	add.w	r0, r4, #16
 8008552:	f001 f82b 	bl	80095ac <xTaskRemoveFromEventList>
 8008556:	b148      	cbz	r0, 800856c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008558:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800855c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008560:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008564:	f3bf 8f4f 	dsb	sy
 8008568:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800856c:	f7ff fe1a 	bl	80081a4 <vPortExitCritical>
}
 8008570:	2001      	movs	r0, #1
 8008572:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008574:	f104 0010 	add.w	r0, r4, #16
 8008578:	f7ff fd48 	bl	800800c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800857c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008580:	f7ff fd44 	bl	800800c <vListInitialise>
 8008584:	e7f2      	b.n	800856c <xQueueGenericReset+0x64>

08008586 <xQueueGenericCreateStatic>:
	{
 8008586:	b513      	push	{r0, r1, r4, lr}
 8008588:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800858a:	b940      	cbnz	r0, 800859e <xQueueGenericCreateStatic+0x18>
 800858c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008590:	f383 8811 	msr	BASEPRI, r3
 8008594:	f3bf 8f6f 	isb	sy
 8008598:	f3bf 8f4f 	dsb	sy
 800859c:	e7fe      	b.n	800859c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800859e:	b943      	cbnz	r3, 80085b2 <xQueueGenericCreateStatic+0x2c>
 80085a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085a4:	f383 8811 	msr	BASEPRI, r3
 80085a8:	f3bf 8f6f 	isb	sy
 80085ac:	f3bf 8f4f 	dsb	sy
 80085b0:	e7fe      	b.n	80085b0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80085b2:	b14a      	cbz	r2, 80085c8 <xQueueGenericCreateStatic+0x42>
 80085b4:	b991      	cbnz	r1, 80085dc <xQueueGenericCreateStatic+0x56>
 80085b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085ba:	f383 8811 	msr	BASEPRI, r3
 80085be:	f3bf 8f6f 	isb	sy
 80085c2:	f3bf 8f4f 	dsb	sy
 80085c6:	e7fe      	b.n	80085c6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80085c8:	b141      	cbz	r1, 80085dc <xQueueGenericCreateStatic+0x56>
 80085ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085ce:	f383 8811 	msr	BASEPRI, r3
 80085d2:	f3bf 8f6f 	isb	sy
 80085d6:	f3bf 8f4f 	dsb	sy
 80085da:	e7fe      	b.n	80085da <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80085dc:	2350      	movs	r3, #80	; 0x50
 80085de:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80085e0:	9b01      	ldr	r3, [sp, #4]
 80085e2:	2b50      	cmp	r3, #80	; 0x50
 80085e4:	d008      	beq.n	80085f8 <xQueueGenericCreateStatic+0x72>
 80085e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085ea:	f383 8811 	msr	BASEPRI, r3
 80085ee:	f3bf 8f6f 	isb	sy
 80085f2:	f3bf 8f4f 	dsb	sy
 80085f6:	e7fe      	b.n	80085f6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80085f8:	2900      	cmp	r1, #0
 80085fa:	bf08      	it	eq
 80085fc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80085fe:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008600:	6022      	str	r2, [r4, #0]
 8008602:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008604:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008608:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800860c:	4619      	mov	r1, r3
 800860e:	4620      	mov	r0, r4
 8008610:	f7ff ff7a 	bl	8008508 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008614:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8008618:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800861c:	4620      	mov	r0, r4
 800861e:	b002      	add	sp, #8
 8008620:	bd10      	pop	{r4, pc}

08008622 <xQueueGenericCreate>:
	{
 8008622:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008624:	460d      	mov	r5, r1
 8008626:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008628:	4606      	mov	r6, r0
 800862a:	b940      	cbnz	r0, 800863e <xQueueGenericCreate+0x1c>
 800862c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008630:	f383 8811 	msr	BASEPRI, r3
 8008634:	f3bf 8f6f 	isb	sy
 8008638:	f3bf 8f4f 	dsb	sy
 800863c:	e7fe      	b.n	800863c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800863e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008640:	3050      	adds	r0, #80	; 0x50
 8008642:	f7ff fc19 	bl	8007e78 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008646:	4604      	mov	r4, r0
 8008648:	b170      	cbz	r0, 8008668 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800864a:	2300      	movs	r3, #0
 800864c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008650:	b165      	cbz	r5, 800866c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008652:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8008656:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800865a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800865c:	2101      	movs	r1, #1
 800865e:	4620      	mov	r0, r4
 8008660:	f7ff ff52 	bl	8008508 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008664:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8008668:	4620      	mov	r0, r4
 800866a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800866c:	4603      	mov	r3, r0
 800866e:	e7f2      	b.n	8008656 <xQueueGenericCreate+0x34>

08008670 <xQueueCreateCountingSemaphoreStatic>:
	{
 8008670:	b513      	push	{r0, r1, r4, lr}
 8008672:	4613      	mov	r3, r2
 8008674:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008676:	b940      	cbnz	r0, 800868a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008678:	f04f 0350 	mov.w	r3, #80	; 0x50
 800867c:	f383 8811 	msr	BASEPRI, r3
 8008680:	f3bf 8f6f 	isb	sy
 8008684:	f3bf 8f4f 	dsb	sy
 8008688:	e7fe      	b.n	8008688 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800868a:	4288      	cmp	r0, r1
 800868c:	d208      	bcs.n	80086a0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800868e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008692:	f383 8811 	msr	BASEPRI, r3
 8008696:	f3bf 8f6f 	isb	sy
 800869a:	f3bf 8f4f 	dsb	sy
 800869e:	e7fe      	b.n	800869e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80086a0:	2202      	movs	r2, #2
 80086a2:	9200      	str	r2, [sp, #0]
 80086a4:	2200      	movs	r2, #0
 80086a6:	4611      	mov	r1, r2
 80086a8:	f7ff ff6d 	bl	8008586 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80086ac:	b100      	cbz	r0, 80086b0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80086ae:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80086b0:	b002      	add	sp, #8
 80086b2:	bd10      	pop	{r4, pc}

080086b4 <xQueueCreateCountingSemaphore>:
	{
 80086b4:	b510      	push	{r4, lr}
 80086b6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80086b8:	b940      	cbnz	r0, 80086cc <xQueueCreateCountingSemaphore+0x18>
 80086ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086be:	f383 8811 	msr	BASEPRI, r3
 80086c2:	f3bf 8f6f 	isb	sy
 80086c6:	f3bf 8f4f 	dsb	sy
 80086ca:	e7fe      	b.n	80086ca <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80086cc:	4288      	cmp	r0, r1
 80086ce:	d208      	bcs.n	80086e2 <xQueueCreateCountingSemaphore+0x2e>
 80086d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086d4:	f383 8811 	msr	BASEPRI, r3
 80086d8:	f3bf 8f6f 	isb	sy
 80086dc:	f3bf 8f4f 	dsb	sy
 80086e0:	e7fe      	b.n	80086e0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80086e2:	2202      	movs	r2, #2
 80086e4:	2100      	movs	r1, #0
 80086e6:	f7ff ff9c 	bl	8008622 <xQueueGenericCreate>
		if( xHandle != NULL )
 80086ea:	b100      	cbz	r0, 80086ee <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80086ec:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80086ee:	bd10      	pop	{r4, pc}

080086f0 <xQueueGenericSend>:
{
 80086f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80086f4:	b085      	sub	sp, #20
 80086f6:	4688      	mov	r8, r1
 80086f8:	9201      	str	r2, [sp, #4]
 80086fa:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80086fc:	4604      	mov	r4, r0
 80086fe:	b940      	cbnz	r0, 8008712 <xQueueGenericSend+0x22>
 8008700:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008704:	f383 8811 	msr	BASEPRI, r3
 8008708:	f3bf 8f6f 	isb	sy
 800870c:	f3bf 8f4f 	dsb	sy
 8008710:	e7fe      	b.n	8008710 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008712:	b951      	cbnz	r1, 800872a <xQueueGenericSend+0x3a>
 8008714:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008716:	b143      	cbz	r3, 800872a <xQueueGenericSend+0x3a>
 8008718:	f04f 0350 	mov.w	r3, #80	; 0x50
 800871c:	f383 8811 	msr	BASEPRI, r3
 8008720:	f3bf 8f6f 	isb	sy
 8008724:	f3bf 8f4f 	dsb	sy
 8008728:	e7fe      	b.n	8008728 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800872a:	2f02      	cmp	r7, #2
 800872c:	d10b      	bne.n	8008746 <xQueueGenericSend+0x56>
 800872e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008730:	2b01      	cmp	r3, #1
 8008732:	d008      	beq.n	8008746 <xQueueGenericSend+0x56>
 8008734:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008738:	f383 8811 	msr	BASEPRI, r3
 800873c:	f3bf 8f6f 	isb	sy
 8008740:	f3bf 8f4f 	dsb	sy
 8008744:	e7fe      	b.n	8008744 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008746:	f000 ffc3 	bl	80096d0 <xTaskGetSchedulerState>
 800874a:	4606      	mov	r6, r0
 800874c:	b950      	cbnz	r0, 8008764 <xQueueGenericSend+0x74>
 800874e:	9b01      	ldr	r3, [sp, #4]
 8008750:	b14b      	cbz	r3, 8008766 <xQueueGenericSend+0x76>
 8008752:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008756:	f383 8811 	msr	BASEPRI, r3
 800875a:	f3bf 8f6f 	isb	sy
 800875e:	f3bf 8f4f 	dsb	sy
 8008762:	e7fe      	b.n	8008762 <xQueueGenericSend+0x72>
 8008764:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008766:	f04f 0900 	mov.w	r9, #0
 800876a:	e037      	b.n	80087dc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800876c:	9d01      	ldr	r5, [sp, #4]
 800876e:	b91d      	cbnz	r5, 8008778 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8008770:	f7ff fd18 	bl	80081a4 <vPortExitCritical>
			return errQUEUE_FULL;
 8008774:	2000      	movs	r0, #0
 8008776:	e052      	b.n	800881e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8008778:	b916      	cbnz	r6, 8008780 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800877a:	a802      	add	r0, sp, #8
 800877c:	f000 ff5a 	bl	8009634 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008780:	f7ff fd10 	bl	80081a4 <vPortExitCritical>
		vTaskSuspendAll();
 8008784:	f000 fd5e 	bl	8009244 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008788:	f7ff fcec 	bl	8008164 <vPortEnterCritical>
 800878c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008790:	2bff      	cmp	r3, #255	; 0xff
 8008792:	bf08      	it	eq
 8008794:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008798:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800879c:	2bff      	cmp	r3, #255	; 0xff
 800879e:	bf08      	it	eq
 80087a0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80087a4:	f7ff fcfe 	bl	80081a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80087a8:	a901      	add	r1, sp, #4
 80087aa:	a802      	add	r0, sp, #8
 80087ac:	f000 ff4e 	bl	800964c <xTaskCheckForTimeOut>
 80087b0:	2800      	cmp	r0, #0
 80087b2:	d14a      	bne.n	800884a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80087b4:	f7ff fcd6 	bl	8008164 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80087b8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80087ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80087bc:	429a      	cmp	r2, r3
 80087be:	d131      	bne.n	8008824 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80087c0:	f7ff fcf0 	bl	80081a4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80087c4:	9901      	ldr	r1, [sp, #4]
 80087c6:	f104 0010 	add.w	r0, r4, #16
 80087ca:	f000 feb7 	bl	800953c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80087ce:	4620      	mov	r0, r4
 80087d0:	f7ff fe62 	bl	8008498 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80087d4:	f000 fdda 	bl	800938c <xTaskResumeAll>
 80087d8:	b360      	cbz	r0, 8008834 <xQueueGenericSend+0x144>
 80087da:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80087dc:	f7ff fcc2 	bl	8008164 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80087e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80087e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80087e4:	429a      	cmp	r2, r3
 80087e6:	d301      	bcc.n	80087ec <xQueueGenericSend+0xfc>
 80087e8:	2f02      	cmp	r7, #2
 80087ea:	d1bf      	bne.n	800876c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80087ec:	463a      	mov	r2, r7
 80087ee:	4641      	mov	r1, r8
 80087f0:	4620      	mov	r0, r4
 80087f2:	f7ff fe06 	bl	8008402 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80087f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80087f8:	b11b      	cbz	r3, 8008802 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80087fa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80087fe:	f000 fed5 	bl	80095ac <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008802:	b148      	cbz	r0, 8008818 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008804:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008808:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800880c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008810:	f3bf 8f4f 	dsb	sy
 8008814:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008818:	f7ff fcc4 	bl	80081a4 <vPortExitCritical>
				return pdPASS;
 800881c:	2001      	movs	r0, #1
}
 800881e:	b005      	add	sp, #20
 8008820:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008824:	f7ff fcbe 	bl	80081a4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008828:	4620      	mov	r0, r4
 800882a:	f7ff fe35 	bl	8008498 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800882e:	f000 fdad 	bl	800938c <xTaskResumeAll>
 8008832:	e7d2      	b.n	80087da <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008834:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008838:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800883c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008840:	f3bf 8f4f 	dsb	sy
 8008844:	f3bf 8f6f 	isb	sy
 8008848:	e7c7      	b.n	80087da <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800884a:	4620      	mov	r0, r4
 800884c:	f7ff fe24 	bl	8008498 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008850:	f000 fd9c 	bl	800938c <xTaskResumeAll>
 8008854:	e78e      	b.n	8008774 <xQueueGenericSend+0x84>

08008856 <xQueueGenericSendFromISR>:
{
 8008856:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800885a:	4689      	mov	r9, r1
 800885c:	4690      	mov	r8, r2
 800885e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008860:	4604      	mov	r4, r0
 8008862:	b940      	cbnz	r0, 8008876 <xQueueGenericSendFromISR+0x20>
 8008864:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008868:	f383 8811 	msr	BASEPRI, r3
 800886c:	f3bf 8f6f 	isb	sy
 8008870:	f3bf 8f4f 	dsb	sy
 8008874:	e7fe      	b.n	8008874 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008876:	b951      	cbnz	r1, 800888e <xQueueGenericSendFromISR+0x38>
 8008878:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800887a:	b143      	cbz	r3, 800888e <xQueueGenericSendFromISR+0x38>
 800887c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008880:	f383 8811 	msr	BASEPRI, r3
 8008884:	f3bf 8f6f 	isb	sy
 8008888:	f3bf 8f4f 	dsb	sy
 800888c:	e7fe      	b.n	800888c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800888e:	2f02      	cmp	r7, #2
 8008890:	d10b      	bne.n	80088aa <xQueueGenericSendFromISR+0x54>
 8008892:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008894:	2b01      	cmp	r3, #1
 8008896:	d008      	beq.n	80088aa <xQueueGenericSendFromISR+0x54>
 8008898:	f04f 0350 	mov.w	r3, #80	; 0x50
 800889c:	f383 8811 	msr	BASEPRI, r3
 80088a0:	f3bf 8f6f 	isb	sy
 80088a4:	f3bf 8f4f 	dsb	sy
 80088a8:	e7fe      	b.n	80088a8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80088aa:	f7ff fd71 	bl	8008390 <vPortValidateInterruptPriority>
	__asm volatile
 80088ae:	f3ef 8611 	mrs	r6, BASEPRI
 80088b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088b6:	f383 8811 	msr	BASEPRI, r3
 80088ba:	f3bf 8f6f 	isb	sy
 80088be:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80088c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80088c4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80088c6:	429a      	cmp	r2, r3
 80088c8:	d301      	bcc.n	80088ce <xQueueGenericSendFromISR+0x78>
 80088ca:	2f02      	cmp	r7, #2
 80088cc:	d122      	bne.n	8008914 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80088ce:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80088d2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80088d4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80088d6:	4649      	mov	r1, r9
 80088d8:	4620      	mov	r0, r4
 80088da:	f7ff fd92 	bl	8008402 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80088de:	1c6b      	adds	r3, r5, #1
 80088e0:	d113      	bne.n	800890a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80088e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80088e4:	b90b      	cbnz	r3, 80088ea <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80088e6:	2001      	movs	r0, #1
 80088e8:	e00b      	b.n	8008902 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80088ea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80088ee:	f000 fe5d 	bl	80095ac <xTaskRemoveFromEventList>
 80088f2:	2800      	cmp	r0, #0
 80088f4:	d0f7      	beq.n	80088e6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80088f6:	f1b8 0f00 	cmp.w	r8, #0
 80088fa:	d0f4      	beq.n	80088e6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80088fc:	2001      	movs	r0, #1
 80088fe:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008902:	f386 8811 	msr	BASEPRI, r6
}
 8008906:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800890a:	3501      	adds	r5, #1
 800890c:	b26d      	sxtb	r5, r5
 800890e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008912:	e7e8      	b.n	80088e6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8008914:	2000      	movs	r0, #0
 8008916:	e7f4      	b.n	8008902 <xQueueGenericSendFromISR+0xac>

08008918 <xQueueGiveFromISR>:
{
 8008918:	b570      	push	{r4, r5, r6, lr}
 800891a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800891c:	4604      	mov	r4, r0
 800891e:	b940      	cbnz	r0, 8008932 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008920:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008924:	f383 8811 	msr	BASEPRI, r3
 8008928:	f3bf 8f6f 	isb	sy
 800892c:	f3bf 8f4f 	dsb	sy
 8008930:	e7fe      	b.n	8008930 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008932:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008934:	b143      	cbz	r3, 8008948 <xQueueGiveFromISR+0x30>
 8008936:	f04f 0350 	mov.w	r3, #80	; 0x50
 800893a:	f383 8811 	msr	BASEPRI, r3
 800893e:	f3bf 8f6f 	isb	sy
 8008942:	f3bf 8f4f 	dsb	sy
 8008946:	e7fe      	b.n	8008946 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008948:	6803      	ldr	r3, [r0, #0]
 800894a:	b953      	cbnz	r3, 8008962 <xQueueGiveFromISR+0x4a>
 800894c:	6883      	ldr	r3, [r0, #8]
 800894e:	b143      	cbz	r3, 8008962 <xQueueGiveFromISR+0x4a>
 8008950:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008954:	f383 8811 	msr	BASEPRI, r3
 8008958:	f3bf 8f6f 	isb	sy
 800895c:	f3bf 8f4f 	dsb	sy
 8008960:	e7fe      	b.n	8008960 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008962:	f7ff fd15 	bl	8008390 <vPortValidateInterruptPriority>
	__asm volatile
 8008966:	f3ef 8611 	mrs	r6, BASEPRI
 800896a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800896e:	f383 8811 	msr	BASEPRI, r3
 8008972:	f3bf 8f6f 	isb	sy
 8008976:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800897a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800897c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800897e:	4293      	cmp	r3, r2
 8008980:	d91c      	bls.n	80089bc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008982:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008986:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008988:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800898a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800898c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800898e:	d110      	bne.n	80089b2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008990:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008992:	b90b      	cbnz	r3, 8008998 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008994:	2001      	movs	r0, #1
 8008996:	e009      	b.n	80089ac <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008998:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800899c:	f000 fe06 	bl	80095ac <xTaskRemoveFromEventList>
 80089a0:	2800      	cmp	r0, #0
 80089a2:	d0f7      	beq.n	8008994 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80089a4:	2d00      	cmp	r5, #0
 80089a6:	d0f5      	beq.n	8008994 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80089a8:	2001      	movs	r0, #1
 80089aa:	6028      	str	r0, [r5, #0]
	__asm volatile
 80089ac:	f386 8811 	msr	BASEPRI, r6
}
 80089b0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80089b2:	3301      	adds	r3, #1
 80089b4:	b25b      	sxtb	r3, r3
 80089b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80089ba:	e7eb      	b.n	8008994 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80089bc:	2000      	movs	r0, #0
 80089be:	e7f5      	b.n	80089ac <xQueueGiveFromISR+0x94>

080089c0 <xQueueReceive>:
{
 80089c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80089c4:	460f      	mov	r7, r1
 80089c6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80089c8:	4604      	mov	r4, r0
 80089ca:	b940      	cbnz	r0, 80089de <xQueueReceive+0x1e>
	__asm volatile
 80089cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089d0:	f383 8811 	msr	BASEPRI, r3
 80089d4:	f3bf 8f6f 	isb	sy
 80089d8:	f3bf 8f4f 	dsb	sy
 80089dc:	e7fe      	b.n	80089dc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80089de:	b951      	cbnz	r1, 80089f6 <xQueueReceive+0x36>
 80089e0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80089e2:	b143      	cbz	r3, 80089f6 <xQueueReceive+0x36>
 80089e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089e8:	f383 8811 	msr	BASEPRI, r3
 80089ec:	f3bf 8f6f 	isb	sy
 80089f0:	f3bf 8f4f 	dsb	sy
 80089f4:	e7fe      	b.n	80089f4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80089f6:	f000 fe6b 	bl	80096d0 <xTaskGetSchedulerState>
 80089fa:	4606      	mov	r6, r0
 80089fc:	b950      	cbnz	r0, 8008a14 <xQueueReceive+0x54>
 80089fe:	9b01      	ldr	r3, [sp, #4]
 8008a00:	b14b      	cbz	r3, 8008a16 <xQueueReceive+0x56>
 8008a02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a06:	f383 8811 	msr	BASEPRI, r3
 8008a0a:	f3bf 8f6f 	isb	sy
 8008a0e:	f3bf 8f4f 	dsb	sy
 8008a12:	e7fe      	b.n	8008a12 <xQueueReceive+0x52>
 8008a14:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008a16:	f04f 0800 	mov.w	r8, #0
 8008a1a:	e03d      	b.n	8008a98 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008a1c:	9d01      	ldr	r5, [sp, #4]
 8008a1e:	b91d      	cbnz	r5, 8008a28 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8008a20:	f7ff fbc0 	bl	80081a4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008a24:	2000      	movs	r0, #0
 8008a26:	e056      	b.n	8008ad6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8008a28:	b916      	cbnz	r6, 8008a30 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008a2a:	a802      	add	r0, sp, #8
 8008a2c:	f000 fe02 	bl	8009634 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008a30:	f7ff fbb8 	bl	80081a4 <vPortExitCritical>
		vTaskSuspendAll();
 8008a34:	f000 fc06 	bl	8009244 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008a38:	f7ff fb94 	bl	8008164 <vPortEnterCritical>
 8008a3c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008a40:	2bff      	cmp	r3, #255	; 0xff
 8008a42:	bf08      	it	eq
 8008a44:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8008a48:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008a4c:	2bff      	cmp	r3, #255	; 0xff
 8008a4e:	bf08      	it	eq
 8008a50:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8008a54:	f7ff fba6 	bl	80081a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008a58:	a901      	add	r1, sp, #4
 8008a5a:	a802      	add	r0, sp, #8
 8008a5c:	f000 fdf6 	bl	800964c <xTaskCheckForTimeOut>
 8008a60:	2800      	cmp	r0, #0
 8008a62:	d141      	bne.n	8008ae8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008a64:	4620      	mov	r0, r4
 8008a66:	f7ff fcc1 	bl	80083ec <prvIsQueueEmpty>
 8008a6a:	b3b8      	cbz	r0, 8008adc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008a6c:	9901      	ldr	r1, [sp, #4]
 8008a6e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008a72:	f000 fd63 	bl	800953c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008a76:	4620      	mov	r0, r4
 8008a78:	f7ff fd0e 	bl	8008498 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008a7c:	f000 fc86 	bl	800938c <xTaskResumeAll>
 8008a80:	b948      	cbnz	r0, 8008a96 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8008a82:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008a86:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a8a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008a8e:	f3bf 8f4f 	dsb	sy
 8008a92:	f3bf 8f6f 	isb	sy
 8008a96:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008a98:	f7ff fb64 	bl	8008164 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008a9c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008a9e:	2d00      	cmp	r5, #0
 8008aa0:	d0bc      	beq.n	8008a1c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008aa2:	4639      	mov	r1, r7
 8008aa4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008aa6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008aa8:	f7ff fce0 	bl	800846c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008aac:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008aae:	6923      	ldr	r3, [r4, #16]
 8008ab0:	b173      	cbz	r3, 8008ad0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008ab2:	f104 0010 	add.w	r0, r4, #16
 8008ab6:	f000 fd79 	bl	80095ac <xTaskRemoveFromEventList>
 8008aba:	b148      	cbz	r0, 8008ad0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8008abc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008ac0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008ac4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008ac8:	f3bf 8f4f 	dsb	sy
 8008acc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008ad0:	f7ff fb68 	bl	80081a4 <vPortExitCritical>
				return pdPASS;
 8008ad4:	2001      	movs	r0, #1
}
 8008ad6:	b004      	add	sp, #16
 8008ad8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8008adc:	4620      	mov	r0, r4
 8008ade:	f7ff fcdb 	bl	8008498 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008ae2:	f000 fc53 	bl	800938c <xTaskResumeAll>
 8008ae6:	e7d6      	b.n	8008a96 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8008ae8:	4620      	mov	r0, r4
 8008aea:	f7ff fcd5 	bl	8008498 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008aee:	f000 fc4d 	bl	800938c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008af2:	4620      	mov	r0, r4
 8008af4:	f7ff fc7a 	bl	80083ec <prvIsQueueEmpty>
 8008af8:	2800      	cmp	r0, #0
 8008afa:	d0cc      	beq.n	8008a96 <xQueueReceive+0xd6>
 8008afc:	e792      	b.n	8008a24 <xQueueReceive+0x64>

08008afe <xQueueSemaphoreTake>:
{
 8008afe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b00:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008b02:	4604      	mov	r4, r0
{
 8008b04:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008b06:	b940      	cbnz	r0, 8008b1a <xQueueSemaphoreTake+0x1c>
 8008b08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b0c:	f383 8811 	msr	BASEPRI, r3
 8008b10:	f3bf 8f6f 	isb	sy
 8008b14:	f3bf 8f4f 	dsb	sy
 8008b18:	e7fe      	b.n	8008b18 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008b1a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8008b1c:	b145      	cbz	r5, 8008b30 <xQueueSemaphoreTake+0x32>
 8008b1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b22:	f383 8811 	msr	BASEPRI, r3
 8008b26:	f3bf 8f6f 	isb	sy
 8008b2a:	f3bf 8f4f 	dsb	sy
 8008b2e:	e7fe      	b.n	8008b2e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008b30:	f000 fdce 	bl	80096d0 <xTaskGetSchedulerState>
 8008b34:	4606      	mov	r6, r0
 8008b36:	b950      	cbnz	r0, 8008b4e <xQueueSemaphoreTake+0x50>
 8008b38:	9b01      	ldr	r3, [sp, #4]
 8008b3a:	b15b      	cbz	r3, 8008b54 <xQueueSemaphoreTake+0x56>
 8008b3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b40:	f383 8811 	msr	BASEPRI, r3
 8008b44:	f3bf 8f6f 	isb	sy
 8008b48:	f3bf 8f4f 	dsb	sy
 8008b4c:	e7fe      	b.n	8008b4c <xQueueSemaphoreTake+0x4e>
 8008b4e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008b50:	2700      	movs	r7, #0
 8008b52:	e053      	b.n	8008bfc <xQueueSemaphoreTake+0xfe>
 8008b54:	4605      	mov	r5, r0
 8008b56:	e7fb      	b.n	8008b50 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008b58:	9b01      	ldr	r3, [sp, #4]
 8008b5a:	b963      	cbnz	r3, 8008b76 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008b5c:	b145      	cbz	r5, 8008b70 <xQueueSemaphoreTake+0x72>
 8008b5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b62:	f383 8811 	msr	BASEPRI, r3
 8008b66:	f3bf 8f6f 	isb	sy
 8008b6a:	f3bf 8f4f 	dsb	sy
 8008b6e:	e7fe      	b.n	8008b6e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8008b70:	f7ff fb18 	bl	80081a4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008b74:	e062      	b.n	8008c3c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8008b76:	b916      	cbnz	r6, 8008b7e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008b78:	a802      	add	r0, sp, #8
 8008b7a:	f000 fd5b 	bl	8009634 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008b7e:	f7ff fb11 	bl	80081a4 <vPortExitCritical>
		vTaskSuspendAll();
 8008b82:	f000 fb5f 	bl	8009244 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008b86:	f7ff faed 	bl	8008164 <vPortEnterCritical>
 8008b8a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008b8e:	2bff      	cmp	r3, #255	; 0xff
 8008b90:	bf08      	it	eq
 8008b92:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8008b96:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008b9a:	2bff      	cmp	r3, #255	; 0xff
 8008b9c:	bf08      	it	eq
 8008b9e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8008ba2:	f7ff faff 	bl	80081a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008ba6:	a901      	add	r1, sp, #4
 8008ba8:	a802      	add	r0, sp, #8
 8008baa:	f000 fd4f 	bl	800964c <xTaskCheckForTimeOut>
 8008bae:	2800      	cmp	r0, #0
 8008bb0:	d14d      	bne.n	8008c4e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008bb2:	4620      	mov	r0, r4
 8008bb4:	f7ff fc1a 	bl	80083ec <prvIsQueueEmpty>
 8008bb8:	2800      	cmp	r0, #0
 8008bba:	d042      	beq.n	8008c42 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008bbc:	6823      	ldr	r3, [r4, #0]
 8008bbe:	b93b      	cbnz	r3, 8008bd0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8008bc0:	f7ff fad0 	bl	8008164 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008bc4:	68a0      	ldr	r0, [r4, #8]
 8008bc6:	f000 fd93 	bl	80096f0 <xTaskPriorityInherit>
 8008bca:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008bcc:	f7ff faea 	bl	80081a4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008bd0:	9901      	ldr	r1, [sp, #4]
 8008bd2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008bd6:	f000 fcb1 	bl	800953c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008bda:	4620      	mov	r0, r4
 8008bdc:	f7ff fc5c 	bl	8008498 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008be0:	f000 fbd4 	bl	800938c <xTaskResumeAll>
 8008be4:	b948      	cbnz	r0, 8008bfa <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8008be6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008bea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008bee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008bf2:	f3bf 8f4f 	dsb	sy
 8008bf6:	f3bf 8f6f 	isb	sy
 8008bfa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008bfc:	f7ff fab2 	bl	8008164 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008c00:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008c02:	2b00      	cmp	r3, #0
 8008c04:	d0a8      	beq.n	8008b58 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008c06:	3b01      	subs	r3, #1
 8008c08:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008c0a:	6823      	ldr	r3, [r4, #0]
 8008c0c:	b913      	cbnz	r3, 8008c14 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008c0e:	f000 fe47 	bl	80098a0 <pvTaskIncrementMutexHeldCount>
 8008c12:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008c14:	6923      	ldr	r3, [r4, #16]
 8008c16:	b173      	cbz	r3, 8008c36 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008c18:	f104 0010 	add.w	r0, r4, #16
 8008c1c:	f000 fcc6 	bl	80095ac <xTaskRemoveFromEventList>
 8008c20:	b148      	cbz	r0, 8008c36 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8008c22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008c2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008c2e:	f3bf 8f4f 	dsb	sy
 8008c32:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008c36:	f7ff fab5 	bl	80081a4 <vPortExitCritical>
				return pdPASS;
 8008c3a:	2501      	movs	r5, #1
}
 8008c3c:	4628      	mov	r0, r5
 8008c3e:	b005      	add	sp, #20
 8008c40:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8008c42:	4620      	mov	r0, r4
 8008c44:	f7ff fc28 	bl	8008498 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008c48:	f000 fba0 	bl	800938c <xTaskResumeAll>
 8008c4c:	e7d5      	b.n	8008bfa <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8008c4e:	4620      	mov	r0, r4
 8008c50:	f7ff fc22 	bl	8008498 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008c54:	f000 fb9a 	bl	800938c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008c58:	4620      	mov	r0, r4
 8008c5a:	f7ff fbc7 	bl	80083ec <prvIsQueueEmpty>
 8008c5e:	2800      	cmp	r0, #0
 8008c60:	d0cb      	beq.n	8008bfa <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8008c62:	2d00      	cmp	r5, #0
 8008c64:	d0ea      	beq.n	8008c3c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8008c66:	f7ff fa7d 	bl	8008164 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8008c6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8008c6c:	b119      	cbz	r1, 8008c76 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008c6e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008c70:	6819      	ldr	r1, [r3, #0]
 8008c72:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008c76:	68a0      	ldr	r0, [r4, #8]
 8008c78:	f000 fdc0 	bl	80097fc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8008c7c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8008c7e:	f7ff fa91 	bl	80081a4 <vPortExitCritical>
 8008c82:	e7db      	b.n	8008c3c <xQueueSemaphoreTake+0x13e>

08008c84 <xQueueReceiveFromISR>:
{
 8008c84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008c88:	4689      	mov	r9, r1
 8008c8a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008c8c:	4605      	mov	r5, r0
 8008c8e:	b940      	cbnz	r0, 8008ca2 <xQueueReceiveFromISR+0x1e>
 8008c90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c94:	f383 8811 	msr	BASEPRI, r3
 8008c98:	f3bf 8f6f 	isb	sy
 8008c9c:	f3bf 8f4f 	dsb	sy
 8008ca0:	e7fe      	b.n	8008ca0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008ca2:	b951      	cbnz	r1, 8008cba <xQueueReceiveFromISR+0x36>
 8008ca4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008ca6:	b143      	cbz	r3, 8008cba <xQueueReceiveFromISR+0x36>
 8008ca8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cac:	f383 8811 	msr	BASEPRI, r3
 8008cb0:	f3bf 8f6f 	isb	sy
 8008cb4:	f3bf 8f4f 	dsb	sy
 8008cb8:	e7fe      	b.n	8008cb8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008cba:	f7ff fb69 	bl	8008390 <vPortValidateInterruptPriority>
	__asm volatile
 8008cbe:	f3ef 8711 	mrs	r7, BASEPRI
 8008cc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cc6:	f383 8811 	msr	BASEPRI, r3
 8008cca:	f3bf 8f6f 	isb	sy
 8008cce:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008cd2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008cd4:	b31c      	cbz	r4, 8008d1e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008cd6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008cda:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8008cdc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008cde:	4628      	mov	r0, r5
 8008ce0:	f7ff fbc4 	bl	800846c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008ce4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8008ce6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008ce8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8008cea:	d113      	bne.n	8008d14 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008cec:	692b      	ldr	r3, [r5, #16]
 8008cee:	b90b      	cbnz	r3, 8008cf4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8008cf0:	2001      	movs	r0, #1
 8008cf2:	e00b      	b.n	8008d0c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008cf4:	f105 0010 	add.w	r0, r5, #16
 8008cf8:	f000 fc58 	bl	80095ac <xTaskRemoveFromEventList>
 8008cfc:	2800      	cmp	r0, #0
 8008cfe:	d0f7      	beq.n	8008cf0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8008d00:	f1b8 0f00 	cmp.w	r8, #0
 8008d04:	d0f4      	beq.n	8008cf0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008d06:	2001      	movs	r0, #1
 8008d08:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008d0c:	f387 8811 	msr	BASEPRI, r7
}
 8008d10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008d14:	3601      	adds	r6, #1
 8008d16:	b276      	sxtb	r6, r6
 8008d18:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8008d1c:	e7e8      	b.n	8008cf0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008d1e:	4620      	mov	r0, r4
 8008d20:	e7f4      	b.n	8008d0c <xQueueReceiveFromISR+0x88>
	...

08008d24 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008d24:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008d26:	4a07      	ldr	r2, [pc, #28]	; (8008d44 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008d28:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008d2a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8008d2e:	b92c      	cbnz	r4, 8008d3c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008d30:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008d34:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8008d38:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008d3a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008d3c:	3301      	adds	r3, #1
 8008d3e:	2b08      	cmp	r3, #8
 8008d40:	d1f3      	bne.n	8008d2a <vQueueAddToRegistry+0x6>
 8008d42:	e7fa      	b.n	8008d3a <vQueueAddToRegistry+0x16>
 8008d44:	20016ef0 	.word	0x20016ef0

08008d48 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008d48:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008d4a:	4a08      	ldr	r2, [pc, #32]	; (8008d6c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008d4c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008d4e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8008d52:	684c      	ldr	r4, [r1, #4]
 8008d54:	4284      	cmp	r4, r0
 8008d56:	d104      	bne.n	8008d62 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008d58:	2000      	movs	r0, #0
 8008d5a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008d5e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008d60:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008d62:	3301      	adds	r3, #1
 8008d64:	2b08      	cmp	r3, #8
 8008d66:	d1f2      	bne.n	8008d4e <vQueueUnregisterQueue+0x6>
 8008d68:	e7fa      	b.n	8008d60 <vQueueUnregisterQueue+0x18>
 8008d6a:	bf00      	nop
 8008d6c:	20016ef0 	.word	0x20016ef0

08008d70 <vQueueDelete>:
{
 8008d70:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008d72:	4604      	mov	r4, r0
 8008d74:	b940      	cbnz	r0, 8008d88 <vQueueDelete+0x18>
	__asm volatile
 8008d76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d7a:	f383 8811 	msr	BASEPRI, r3
 8008d7e:	f3bf 8f6f 	isb	sy
 8008d82:	f3bf 8f4f 	dsb	sy
 8008d86:	e7fe      	b.n	8008d86 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8008d88:	f7ff ffde 	bl	8008d48 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008d8c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8008d90:	b923      	cbnz	r3, 8008d9c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8008d92:	4620      	mov	r0, r4
}
 8008d94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008d98:	f7ff b900 	b.w	8007f9c <vPortFree>
}
 8008d9c:	bd10      	pop	{r4, pc}

08008d9e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008d9e:	b570      	push	{r4, r5, r6, lr}
 8008da0:	4604      	mov	r4, r0
 8008da2:	460d      	mov	r5, r1
 8008da4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008da6:	f7ff f9dd 	bl	8008164 <vPortEnterCritical>
 8008daa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008dae:	2bff      	cmp	r3, #255	; 0xff
 8008db0:	bf04      	itt	eq
 8008db2:	2300      	moveq	r3, #0
 8008db4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008db8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008dbc:	2bff      	cmp	r3, #255	; 0xff
 8008dbe:	bf04      	itt	eq
 8008dc0:	2300      	moveq	r3, #0
 8008dc2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8008dc6:	f7ff f9ed 	bl	80081a4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008dca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008dcc:	b92b      	cbnz	r3, 8008dda <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008dce:	4632      	mov	r2, r6
 8008dd0:	4629      	mov	r1, r5
 8008dd2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008dd6:	f000 fbcb 	bl	8009570 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8008dda:	4620      	mov	r0, r4
	}
 8008ddc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008de0:	f7ff bb5a 	b.w	8008498 <prvUnlockQueue>

08008de4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008de4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008de8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8008dea:	f7ff f9bb 	bl	8008164 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008dee:	4b30      	ldr	r3, [pc, #192]	; (8008eb0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008df0:	4e30      	ldr	r6, [pc, #192]	; (8008eb4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008df2:	681a      	ldr	r2, [r3, #0]
 8008df4:	4f30      	ldr	r7, [pc, #192]	; (8008eb8 <prvAddNewTaskToReadyList+0xd4>)
 8008df6:	3201      	adds	r2, #1
 8008df8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8008dfa:	6835      	ldr	r5, [r6, #0]
 8008dfc:	2d00      	cmp	r5, #0
 8008dfe:	d14b      	bne.n	8008e98 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008e00:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008e02:	681b      	ldr	r3, [r3, #0]
 8008e04:	2b01      	cmp	r3, #1
 8008e06:	d11f      	bne.n	8008e48 <prvAddNewTaskToReadyList+0x64>
 8008e08:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008e0a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008e0c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008e0e:	f7ff f8fd 	bl	800800c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008e12:	2d38      	cmp	r5, #56	; 0x38
 8008e14:	f108 0814 	add.w	r8, r8, #20
 8008e18:	d1f7      	bne.n	8008e0a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008e1a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8008ee0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8008e1e:	4d27      	ldr	r5, [pc, #156]	; (8008ebc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008e20:	4640      	mov	r0, r8
 8008e22:	f7ff f8f3 	bl	800800c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008e26:	4628      	mov	r0, r5
 8008e28:	f7ff f8f0 	bl	800800c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008e2c:	4824      	ldr	r0, [pc, #144]	; (8008ec0 <prvAddNewTaskToReadyList+0xdc>)
 8008e2e:	f7ff f8ed 	bl	800800c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008e32:	4824      	ldr	r0, [pc, #144]	; (8008ec4 <prvAddNewTaskToReadyList+0xe0>)
 8008e34:	f7ff f8ea 	bl	800800c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008e38:	4823      	ldr	r0, [pc, #140]	; (8008ec8 <prvAddNewTaskToReadyList+0xe4>)
 8008e3a:	f7ff f8e7 	bl	800800c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008e3e:	4b23      	ldr	r3, [pc, #140]	; (8008ecc <prvAddNewTaskToReadyList+0xe8>)
 8008e40:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008e44:	4b22      	ldr	r3, [pc, #136]	; (8008ed0 <prvAddNewTaskToReadyList+0xec>)
 8008e46:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008e48:	4a22      	ldr	r2, [pc, #136]	; (8008ed4 <prvAddNewTaskToReadyList+0xf0>)
 8008e4a:	6813      	ldr	r3, [r2, #0]
 8008e4c:	3301      	adds	r3, #1
 8008e4e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008e50:	4a21      	ldr	r2, [pc, #132]	; (8008ed8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008e52:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008e54:	6811      	ldr	r1, [r2, #0]
 8008e56:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008e58:	2014      	movs	r0, #20
 8008e5a:	428b      	cmp	r3, r1
 8008e5c:	fb00 7003 	mla	r0, r0, r3, r7
 8008e60:	f104 0104 	add.w	r1, r4, #4
 8008e64:	bf88      	it	hi
 8008e66:	6013      	strhi	r3, [r2, #0]
 8008e68:	f7ff f8de 	bl	8008028 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008e6c:	f7ff f99a 	bl	80081a4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008e70:	4b1a      	ldr	r3, [pc, #104]	; (8008edc <prvAddNewTaskToReadyList+0xf8>)
 8008e72:	681b      	ldr	r3, [r3, #0]
 8008e74:	b173      	cbz	r3, 8008e94 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008e76:	6833      	ldr	r3, [r6, #0]
 8008e78:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008e7a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008e7c:	429a      	cmp	r2, r3
 8008e7e:	d209      	bcs.n	8008e94 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008e80:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e84:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e88:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008e8c:	f3bf 8f4f 	dsb	sy
 8008e90:	f3bf 8f6f 	isb	sy
}
 8008e94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008e98:	4b10      	ldr	r3, [pc, #64]	; (8008edc <prvAddNewTaskToReadyList+0xf8>)
 8008e9a:	681b      	ldr	r3, [r3, #0]
 8008e9c:	2b00      	cmp	r3, #0
 8008e9e:	d1d3      	bne.n	8008e48 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008ea0:	6833      	ldr	r3, [r6, #0]
 8008ea2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008ea4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008ea6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008ea8:	bf98      	it	ls
 8008eaa:	6034      	strls	r4, [r6, #0]
 8008eac:	e7cc      	b.n	8008e48 <prvAddNewTaskToReadyList+0x64>
 8008eae:	bf00      	nop
 8008eb0:	2001739c 	.word	0x2001739c
 8008eb4:	20016f30 	.word	0x20016f30
 8008eb8:	20016f3c 	.word	0x20016f3c
 8008ebc:	200173c8 	.word	0x200173c8
 8008ec0:	200173e4 	.word	0x200173e4
 8008ec4:	20017410 	.word	0x20017410
 8008ec8:	200173fc 	.word	0x200173fc
 8008ecc:	20016f34 	.word	0x20016f34
 8008ed0:	20016f38 	.word	0x20016f38
 8008ed4:	200173ac 	.word	0x200173ac
 8008ed8:	200173b0 	.word	0x200173b0
 8008edc:	200173f8 	.word	0x200173f8
 8008ee0:	200173b4 	.word	0x200173b4

08008ee4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008ee4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008ee6:	4b15      	ldr	r3, [pc, #84]	; (8008f3c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008ee8:	4e15      	ldr	r6, [pc, #84]	; (8008f40 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8008eea:	681d      	ldr	r5, [r3, #0]
{
 8008eec:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008eee:	6830      	ldr	r0, [r6, #0]
 8008ef0:	3004      	adds	r0, #4
{
 8008ef2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008ef4:	f7ff f8bb 	bl	800806e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008ef8:	1c63      	adds	r3, r4, #1
 8008efa:	d107      	bne.n	8008f0c <prvAddCurrentTaskToDelayedList+0x28>
 8008efc:	b137      	cbz	r7, 8008f0c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008efe:	6831      	ldr	r1, [r6, #0]
 8008f00:	4810      	ldr	r0, [pc, #64]	; (8008f44 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008f02:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008f06:	3104      	adds	r1, #4
 8008f08:	f7ff b88e 	b.w	8008028 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008f0c:	6833      	ldr	r3, [r6, #0]
 8008f0e:	192c      	adds	r4, r5, r4
 8008f10:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008f12:	d307      	bcc.n	8008f24 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008f14:	4b0c      	ldr	r3, [pc, #48]	; (8008f48 <prvAddCurrentTaskToDelayedList+0x64>)
 8008f16:	6818      	ldr	r0, [r3, #0]
 8008f18:	6831      	ldr	r1, [r6, #0]
}
 8008f1a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008f1e:	3104      	adds	r1, #4
 8008f20:	f7ff b88e 	b.w	8008040 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008f24:	4b09      	ldr	r3, [pc, #36]	; (8008f4c <prvAddCurrentTaskToDelayedList+0x68>)
 8008f26:	6818      	ldr	r0, [r3, #0]
 8008f28:	6831      	ldr	r1, [r6, #0]
 8008f2a:	3104      	adds	r1, #4
 8008f2c:	f7ff f888 	bl	8008040 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008f30:	4b07      	ldr	r3, [pc, #28]	; (8008f50 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008f32:	681a      	ldr	r2, [r3, #0]
 8008f34:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008f36:	bf88      	it	hi
 8008f38:	601c      	strhi	r4, [r3, #0]
}
 8008f3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008f3c:	20017424 	.word	0x20017424
 8008f40:	20016f30 	.word	0x20016f30
 8008f44:	200173fc 	.word	0x200173fc
 8008f48:	20016f38 	.word	0x20016f38
 8008f4c:	20016f34 	.word	0x20016f34
 8008f50:	200173dc 	.word	0x200173dc

08008f54 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008f54:	4a06      	ldr	r2, [pc, #24]	; (8008f70 <prvResetNextTaskUnblockTime+0x1c>)
 8008f56:	6813      	ldr	r3, [r2, #0]
 8008f58:	6819      	ldr	r1, [r3, #0]
 8008f5a:	4b06      	ldr	r3, [pc, #24]	; (8008f74 <prvResetNextTaskUnblockTime+0x20>)
 8008f5c:	b919      	cbnz	r1, 8008f66 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8008f5e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008f62:	601a      	str	r2, [r3, #0]
}
 8008f64:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f66:	6812      	ldr	r2, [r2, #0]
 8008f68:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008f6a:	68d2      	ldr	r2, [r2, #12]
 8008f6c:	6852      	ldr	r2, [r2, #4]
 8008f6e:	e7f8      	b.n	8008f62 <prvResetNextTaskUnblockTime+0xe>
 8008f70:	20016f34 	.word	0x20016f34
 8008f74:	200173dc 	.word	0x200173dc

08008f78 <prvDeleteTCB>:
	{
 8008f78:	b510      	push	{r4, lr}
 8008f7a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8008f7c:	3058      	adds	r0, #88	; 0x58
 8008f7e:	f017 f85d 	bl	802003c <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008f82:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8008f86:	b93b      	cbnz	r3, 8008f98 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8008f88:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008f8a:	f7ff f807 	bl	8007f9c <vPortFree>
				vPortFree( pxTCB );
 8008f8e:	4620      	mov	r0, r4
	}
 8008f90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008f94:	f7ff b802 	b.w	8007f9c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008f98:	2b01      	cmp	r3, #1
 8008f9a:	d0f8      	beq.n	8008f8e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008f9c:	2b02      	cmp	r3, #2
 8008f9e:	d008      	beq.n	8008fb2 <prvDeleteTCB+0x3a>
 8008fa0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fa4:	f383 8811 	msr	BASEPRI, r3
 8008fa8:	f3bf 8f6f 	isb	sy
 8008fac:	f3bf 8f4f 	dsb	sy
 8008fb0:	e7fe      	b.n	8008fb0 <prvDeleteTCB+0x38>
	}
 8008fb2:	bd10      	pop	{r4, pc}

08008fb4 <prvIdleTask>:
{
 8008fb4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008fb6:	4c13      	ldr	r4, [pc, #76]	; (8009004 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008fb8:	4f13      	ldr	r7, [pc, #76]	; (8009008 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008fba:	4d14      	ldr	r5, [pc, #80]	; (800900c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008fbc:	6823      	ldr	r3, [r4, #0]
 8008fbe:	b973      	cbnz	r3, 8008fde <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008fc0:	4b13      	ldr	r3, [pc, #76]	; (8009010 <prvIdleTask+0x5c>)
 8008fc2:	681b      	ldr	r3, [r3, #0]
 8008fc4:	2b01      	cmp	r3, #1
 8008fc6:	d9f8      	bls.n	8008fba <prvIdleTask+0x6>
				taskYIELD();
 8008fc8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008fcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008fd0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008fd4:	f3bf 8f4f 	dsb	sy
 8008fd8:	f3bf 8f6f 	isb	sy
 8008fdc:	e7ed      	b.n	8008fba <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8008fde:	f7ff f8c1 	bl	8008164 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008fe2:	68fb      	ldr	r3, [r7, #12]
 8008fe4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008fe6:	1d30      	adds	r0, r6, #4
 8008fe8:	f7ff f841 	bl	800806e <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008fec:	682b      	ldr	r3, [r5, #0]
 8008fee:	3b01      	subs	r3, #1
 8008ff0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008ff2:	6823      	ldr	r3, [r4, #0]
 8008ff4:	3b01      	subs	r3, #1
 8008ff6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008ff8:	f7ff f8d4 	bl	80081a4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008ffc:	4630      	mov	r0, r6
 8008ffe:	f7ff ffbb 	bl	8008f78 <prvDeleteTCB>
 8009002:	e7db      	b.n	8008fbc <prvIdleTask+0x8>
 8009004:	200173a0 	.word	0x200173a0
 8009008:	20017410 	.word	0x20017410
 800900c:	2001739c 	.word	0x2001739c
 8009010:	20016f3c 	.word	0x20016f3c

08009014 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009014:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009018:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800901c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009020:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009022:	4606      	mov	r6, r0
 8009024:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009026:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009028:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800902a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800902c:	f016 fc22 	bl	801f874 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009030:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009032:	f1a9 0904 	sub.w	r9, r9, #4
 8009036:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009038:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800903c:	2d00      	cmp	r5, #0
 800903e:	d042      	beq.n	80090c6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009040:	1e6b      	subs	r3, r5, #1
 8009042:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009046:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009048:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800904c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009050:	b108      	cbz	r0, 8009056 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009052:	42ab      	cmp	r3, r5
 8009054:	d1f8      	bne.n	8009048 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009056:	2300      	movs	r3, #0
 8009058:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800905c:	9d08      	ldr	r5, [sp, #32]
 800905e:	2d37      	cmp	r5, #55	; 0x37
 8009060:	bf28      	it	cs
 8009062:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009064:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009068:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800906a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800906c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800906e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009072:	f7fe ffd6 	bl	8008022 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009076:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800907a:	f104 0018 	add.w	r0, r4, #24
 800907e:	f7fe ffd0 	bl	8008022 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009082:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009086:	2260      	movs	r2, #96	; 0x60
 8009088:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800908a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800908c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800908e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009090:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009094:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009098:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800909c:	f016 fbea 	bl	801f874 <memset>
 80090a0:	4b0a      	ldr	r3, [pc, #40]	; (80090cc <prvInitialiseNewTask.constprop.0+0xb8>)
 80090a2:	65e3      	str	r3, [r4, #92]	; 0x5c
 80090a4:	4b0a      	ldr	r3, [pc, #40]	; (80090d0 <prvInitialiseNewTask.constprop.0+0xbc>)
 80090a6:	6623      	str	r3, [r4, #96]	; 0x60
 80090a8:	4b0a      	ldr	r3, [pc, #40]	; (80090d4 <prvInitialiseNewTask.constprop.0+0xc0>)
 80090aa:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80090ac:	463a      	mov	r2, r7
 80090ae:	4631      	mov	r1, r6
 80090b0:	4648      	mov	r0, r9
 80090b2:	f7ff f82b 	bl	800810c <pxPortInitialiseStack>
 80090b6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80090b8:	f1b8 0f00 	cmp.w	r8, #0
 80090bc:	d001      	beq.n	80090c2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80090be:	f8c8 4000 	str.w	r4, [r8]
}
 80090c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80090c6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80090ca:	e7c7      	b.n	800905c <prvInitialiseNewTask.constprop.0+0x48>
 80090cc:	0802308c 	.word	0x0802308c
 80090d0:	080230ac 	.word	0x080230ac
 80090d4:	0802306c 	.word	0x0802306c

080090d8 <xTaskCreateStatic>:
	{
 80090d8:	b570      	push	{r4, r5, r6, lr}
 80090da:	b086      	sub	sp, #24
 80090dc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80090e0:	b945      	cbnz	r5, 80090f4 <xTaskCreateStatic+0x1c>
 80090e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090e6:	f383 8811 	msr	BASEPRI, r3
 80090ea:	f3bf 8f6f 	isb	sy
 80090ee:	f3bf 8f4f 	dsb	sy
 80090f2:	e7fe      	b.n	80090f2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80090f4:	b944      	cbnz	r4, 8009108 <xTaskCreateStatic+0x30>
 80090f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090fa:	f383 8811 	msr	BASEPRI, r3
 80090fe:	f3bf 8f6f 	isb	sy
 8009102:	f3bf 8f4f 	dsb	sy
 8009106:	e7fe      	b.n	8009106 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009108:	26c0      	movs	r6, #192	; 0xc0
 800910a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800910c:	9e05      	ldr	r6, [sp, #20]
 800910e:	2ec0      	cmp	r6, #192	; 0xc0
 8009110:	d008      	beq.n	8009124 <xTaskCreateStatic+0x4c>
 8009112:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009116:	f383 8811 	msr	BASEPRI, r3
 800911a:	f3bf 8f6f 	isb	sy
 800911e:	f3bf 8f4f 	dsb	sy
 8009122:	e7fe      	b.n	8009122 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009124:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009126:	2502      	movs	r5, #2
 8009128:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800912c:	ad04      	add	r5, sp, #16
 800912e:	9501      	str	r5, [sp, #4]
 8009130:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009132:	9402      	str	r4, [sp, #8]
 8009134:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009136:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009138:	f7ff ff6c 	bl	8009014 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800913c:	4620      	mov	r0, r4
 800913e:	f7ff fe51 	bl	8008de4 <prvAddNewTaskToReadyList>
	}
 8009142:	9804      	ldr	r0, [sp, #16]
 8009144:	b006      	add	sp, #24
 8009146:	bd70      	pop	{r4, r5, r6, pc}

08009148 <xTaskCreate>:
	{
 8009148:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800914c:	4607      	mov	r7, r0
 800914e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009150:	0090      	lsls	r0, r2, #2
	{
 8009152:	4688      	mov	r8, r1
 8009154:	4616      	mov	r6, r2
 8009156:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009158:	f7fe fe8e 	bl	8007e78 <pvPortMalloc>
			if( pxStack != NULL )
 800915c:	4605      	mov	r5, r0
 800915e:	b1e8      	cbz	r0, 800919c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009160:	20c0      	movs	r0, #192	; 0xc0
 8009162:	f7fe fe89 	bl	8007e78 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009166:	4604      	mov	r4, r0
 8009168:	b1a8      	cbz	r0, 8009196 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800916a:	2300      	movs	r3, #0
 800916c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009170:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009172:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009174:	9301      	str	r3, [sp, #4]
 8009176:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009178:	9002      	str	r0, [sp, #8]
 800917a:	9300      	str	r3, [sp, #0]
 800917c:	4632      	mov	r2, r6
 800917e:	464b      	mov	r3, r9
 8009180:	4641      	mov	r1, r8
 8009182:	4638      	mov	r0, r7
 8009184:	f7ff ff46 	bl	8009014 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009188:	4620      	mov	r0, r4
 800918a:	f7ff fe2b 	bl	8008de4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800918e:	2001      	movs	r0, #1
	}
 8009190:	b005      	add	sp, #20
 8009192:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009196:	4628      	mov	r0, r5
 8009198:	f7fe ff00 	bl	8007f9c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800919c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80091a0:	e7f6      	b.n	8009190 <xTaskCreate+0x48>
	...

080091a4 <vTaskStartScheduler>:
{
 80091a4:	b510      	push	{r4, lr}
 80091a6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80091a8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80091aa:	aa07      	add	r2, sp, #28
 80091ac:	a906      	add	r1, sp, #24
 80091ae:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80091b0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80091b4:	f7fe fe24 	bl	8007e00 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80091b8:	9b05      	ldr	r3, [sp, #20]
 80091ba:	9302      	str	r3, [sp, #8]
 80091bc:	9b06      	ldr	r3, [sp, #24]
 80091be:	9a07      	ldr	r2, [sp, #28]
 80091c0:	4919      	ldr	r1, [pc, #100]	; (8009228 <vTaskStartScheduler+0x84>)
 80091c2:	481a      	ldr	r0, [pc, #104]	; (800922c <vTaskStartScheduler+0x88>)
 80091c4:	e9cd 4300 	strd	r4, r3, [sp]
 80091c8:	4623      	mov	r3, r4
 80091ca:	f7ff ff85 	bl	80090d8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80091ce:	b340      	cbz	r0, 8009222 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 80091d0:	f000 fbc4 	bl	800995c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80091d4:	2801      	cmp	r0, #1
 80091d6:	d119      	bne.n	800920c <vTaskStartScheduler+0x68>
 80091d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091dc:	f383 8811 	msr	BASEPRI, r3
 80091e0:	f3bf 8f6f 	isb	sy
 80091e4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80091e8:	4b11      	ldr	r3, [pc, #68]	; (8009230 <vTaskStartScheduler+0x8c>)
 80091ea:	4a12      	ldr	r2, [pc, #72]	; (8009234 <vTaskStartScheduler+0x90>)
 80091ec:	681b      	ldr	r3, [r3, #0]
 80091ee:	3358      	adds	r3, #88	; 0x58
 80091f0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 80091f2:	4b11      	ldr	r3, [pc, #68]	; (8009238 <vTaskStartScheduler+0x94>)
 80091f4:	f04f 32ff 	mov.w	r2, #4294967295
 80091f8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80091fa:	4b10      	ldr	r3, [pc, #64]	; (800923c <vTaskStartScheduler+0x98>)
 80091fc:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80091fe:	4b10      	ldr	r3, [pc, #64]	; (8009240 <vTaskStartScheduler+0x9c>)
 8009200:	601c      	str	r4, [r3, #0]
}
 8009202:	b008      	add	sp, #32
 8009204:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009208:	f7ff b83c 	b.w	8008284 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800920c:	3001      	adds	r0, #1
 800920e:	d108      	bne.n	8009222 <vTaskStartScheduler+0x7e>
 8009210:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009214:	f383 8811 	msr	BASEPRI, r3
 8009218:	f3bf 8f6f 	isb	sy
 800921c:	f3bf 8f4f 	dsb	sy
 8009220:	e7fe      	b.n	8009220 <vTaskStartScheduler+0x7c>
}
 8009222:	b008      	add	sp, #32
 8009224:	bd10      	pop	{r4, pc}
 8009226:	bf00      	nop
 8009228:	08022288 	.word	0x08022288
 800922c:	08008fb5 	.word	0x08008fb5
 8009230:	20016f30 	.word	0x20016f30
 8009234:	20000100 	.word	0x20000100
 8009238:	200173dc 	.word	0x200173dc
 800923c:	200173f8 	.word	0x200173f8
 8009240:	20017424 	.word	0x20017424

08009244 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009244:	4a02      	ldr	r2, [pc, #8]	; (8009250 <vTaskSuspendAll+0xc>)
 8009246:	6813      	ldr	r3, [r2, #0]
 8009248:	3301      	adds	r3, #1
 800924a:	6013      	str	r3, [r2, #0]
}
 800924c:	4770      	bx	lr
 800924e:	bf00      	nop
 8009250:	200173a8 	.word	0x200173a8

08009254 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009254:	4b01      	ldr	r3, [pc, #4]	; (800925c <xTaskGetTickCount+0x8>)
 8009256:	6818      	ldr	r0, [r3, #0]
}
 8009258:	4770      	bx	lr
 800925a:	bf00      	nop
 800925c:	20017424 	.word	0x20017424

08009260 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009260:	4b3f      	ldr	r3, [pc, #252]	; (8009360 <xTaskIncrementTick+0x100>)
 8009262:	681b      	ldr	r3, [r3, #0]
{
 8009264:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009268:	2b00      	cmp	r3, #0
 800926a:	d173      	bne.n	8009354 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800926c:	4b3d      	ldr	r3, [pc, #244]	; (8009364 <xTaskIncrementTick+0x104>)
 800926e:	681d      	ldr	r5, [r3, #0]
 8009270:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009272:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009274:	b9bd      	cbnz	r5, 80092a6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009276:	4b3c      	ldr	r3, [pc, #240]	; (8009368 <xTaskIncrementTick+0x108>)
 8009278:	681a      	ldr	r2, [r3, #0]
 800927a:	6812      	ldr	r2, [r2, #0]
 800927c:	b142      	cbz	r2, 8009290 <xTaskIncrementTick+0x30>
 800927e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009282:	f383 8811 	msr	BASEPRI, r3
 8009286:	f3bf 8f6f 	isb	sy
 800928a:	f3bf 8f4f 	dsb	sy
 800928e:	e7fe      	b.n	800928e <xTaskIncrementTick+0x2e>
 8009290:	4a36      	ldr	r2, [pc, #216]	; (800936c <xTaskIncrementTick+0x10c>)
 8009292:	6819      	ldr	r1, [r3, #0]
 8009294:	6810      	ldr	r0, [r2, #0]
 8009296:	6018      	str	r0, [r3, #0]
 8009298:	6011      	str	r1, [r2, #0]
 800929a:	4a35      	ldr	r2, [pc, #212]	; (8009370 <xTaskIncrementTick+0x110>)
 800929c:	6813      	ldr	r3, [r2, #0]
 800929e:	3301      	adds	r3, #1
 80092a0:	6013      	str	r3, [r2, #0]
 80092a2:	f7ff fe57 	bl	8008f54 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80092a6:	4e33      	ldr	r6, [pc, #204]	; (8009374 <xTaskIncrementTick+0x114>)
 80092a8:	4f33      	ldr	r7, [pc, #204]	; (8009378 <xTaskIncrementTick+0x118>)
 80092aa:	6833      	ldr	r3, [r6, #0]
 80092ac:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009384 <xTaskIncrementTick+0x124>
 80092b0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 80092b2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80092b6:	d911      	bls.n	80092dc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80092b8:	f8d8 3000 	ldr.w	r3, [r8]
 80092bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092be:	2214      	movs	r2, #20
 80092c0:	4353      	muls	r3, r2
 80092c2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80092c4:	2b02      	cmp	r3, #2
 80092c6:	bf28      	it	cs
 80092c8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 80092ca:	4b2c      	ldr	r3, [pc, #176]	; (800937c <xTaskIncrementTick+0x11c>)
 80092cc:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 80092ce:	2b00      	cmp	r3, #0
}
 80092d0:	bf0c      	ite	eq
 80092d2:	4620      	moveq	r0, r4
 80092d4:	2001      	movne	r0, #1
 80092d6:	b003      	add	sp, #12
 80092d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80092dc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009368 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 80092e0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009388 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80092e4:	f8d9 3000 	ldr.w	r3, [r9]
 80092e8:	681b      	ldr	r3, [r3, #0]
 80092ea:	b91b      	cbnz	r3, 80092f4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80092ec:	f04f 33ff 	mov.w	r3, #4294967295
 80092f0:	6033      	str	r3, [r6, #0]
					break;
 80092f2:	e7e1      	b.n	80092b8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80092f4:	f8d9 3000 	ldr.w	r3, [r9]
 80092f8:	68db      	ldr	r3, [r3, #12]
 80092fa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80092fe:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009302:	4295      	cmp	r5, r2
 8009304:	d201      	bcs.n	800930a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009306:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009308:	e7d6      	b.n	80092b8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800930a:	f10b 0104 	add.w	r1, fp, #4
 800930e:	4608      	mov	r0, r1
 8009310:	9101      	str	r1, [sp, #4]
 8009312:	f7fe feac 	bl	800806e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009316:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800931a:	9901      	ldr	r1, [sp, #4]
 800931c:	b122      	cbz	r2, 8009328 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800931e:	f10b 0018 	add.w	r0, fp, #24
 8009322:	f7fe fea4 	bl	800806e <uxListRemove>
 8009326:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009328:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800932c:	f8da 2000 	ldr.w	r2, [sl]
 8009330:	2314      	movs	r3, #20
 8009332:	4290      	cmp	r0, r2
 8009334:	bf88      	it	hi
 8009336:	f8ca 0000 	strhi.w	r0, [sl]
 800933a:	fb03 7000 	mla	r0, r3, r0, r7
 800933e:	f7fe fe73 	bl	8008028 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009342:	f8d8 1000 	ldr.w	r1, [r8]
 8009346:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800934a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800934c:	429a      	cmp	r2, r3
 800934e:	bf28      	it	cs
 8009350:	2401      	movcs	r4, #1
 8009352:	e7c7      	b.n	80092e4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009354:	4a0a      	ldr	r2, [pc, #40]	; (8009380 <xTaskIncrementTick+0x120>)
 8009356:	6813      	ldr	r3, [r2, #0]
 8009358:	3301      	adds	r3, #1
 800935a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800935c:	2400      	movs	r4, #0
 800935e:	e7b4      	b.n	80092ca <xTaskIncrementTick+0x6a>
 8009360:	200173a8 	.word	0x200173a8
 8009364:	20017424 	.word	0x20017424
 8009368:	20016f34 	.word	0x20016f34
 800936c:	20016f38 	.word	0x20016f38
 8009370:	200173e0 	.word	0x200173e0
 8009374:	200173dc 	.word	0x200173dc
 8009378:	20016f3c 	.word	0x20016f3c
 800937c:	20017428 	.word	0x20017428
 8009380:	200173a4 	.word	0x200173a4
 8009384:	20016f30 	.word	0x20016f30
 8009388:	200173b0 	.word	0x200173b0

0800938c <xTaskResumeAll>:
{
 800938c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800938e:	4c31      	ldr	r4, [pc, #196]	; (8009454 <xTaskResumeAll+0xc8>)
 8009390:	6823      	ldr	r3, [r4, #0]
 8009392:	b943      	cbnz	r3, 80093a6 <xTaskResumeAll+0x1a>
 8009394:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009398:	f383 8811 	msr	BASEPRI, r3
 800939c:	f3bf 8f6f 	isb	sy
 80093a0:	f3bf 8f4f 	dsb	sy
 80093a4:	e7fe      	b.n	80093a4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 80093a6:	f7fe fedd 	bl	8008164 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80093aa:	6823      	ldr	r3, [r4, #0]
 80093ac:	3b01      	subs	r3, #1
 80093ae:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80093b0:	6824      	ldr	r4, [r4, #0]
 80093b2:	b12c      	cbz	r4, 80093c0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 80093b4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80093b6:	f7fe fef5 	bl	80081a4 <vPortExitCritical>
}
 80093ba:	4620      	mov	r0, r4
 80093bc:	b003      	add	sp, #12
 80093be:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80093c0:	4b25      	ldr	r3, [pc, #148]	; (8009458 <xTaskResumeAll+0xcc>)
 80093c2:	681b      	ldr	r3, [r3, #0]
 80093c4:	2b00      	cmp	r3, #0
 80093c6:	d0f5      	beq.n	80093b4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80093c8:	4d24      	ldr	r5, [pc, #144]	; (800945c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 80093ca:	4e25      	ldr	r6, [pc, #148]	; (8009460 <xTaskResumeAll+0xd4>)
 80093cc:	4f25      	ldr	r7, [pc, #148]	; (8009464 <xTaskResumeAll+0xd8>)
 80093ce:	e01e      	b.n	800940e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80093d0:	68eb      	ldr	r3, [r5, #12]
 80093d2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80093d4:	f104 0018 	add.w	r0, r4, #24
 80093d8:	f7fe fe49 	bl	800806e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80093dc:	1d21      	adds	r1, r4, #4
 80093de:	4608      	mov	r0, r1
 80093e0:	9101      	str	r1, [sp, #4]
 80093e2:	f7fe fe44 	bl	800806e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80093e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80093e8:	6832      	ldr	r2, [r6, #0]
 80093ea:	9901      	ldr	r1, [sp, #4]
 80093ec:	2014      	movs	r0, #20
 80093ee:	4293      	cmp	r3, r2
 80093f0:	fb00 7003 	mla	r0, r0, r3, r7
 80093f4:	bf88      	it	hi
 80093f6:	6033      	strhi	r3, [r6, #0]
 80093f8:	f7fe fe16 	bl	8008028 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80093fc:	4b1a      	ldr	r3, [pc, #104]	; (8009468 <xTaskResumeAll+0xdc>)
 80093fe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009400:	681b      	ldr	r3, [r3, #0]
 8009402:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009404:	429a      	cmp	r2, r3
 8009406:	d302      	bcc.n	800940e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009408:	4b18      	ldr	r3, [pc, #96]	; (800946c <xTaskResumeAll+0xe0>)
 800940a:	2201      	movs	r2, #1
 800940c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800940e:	682b      	ldr	r3, [r5, #0]
 8009410:	2b00      	cmp	r3, #0
 8009412:	d1dd      	bne.n	80093d0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009414:	b10c      	cbz	r4, 800941a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009416:	f7ff fd9d 	bl	8008f54 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800941a:	4d15      	ldr	r5, [pc, #84]	; (8009470 <xTaskResumeAll+0xe4>)
 800941c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800941e:	b144      	cbz	r4, 8009432 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009420:	4e12      	ldr	r6, [pc, #72]	; (800946c <xTaskResumeAll+0xe0>)
 8009422:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009424:	f7ff ff1c 	bl	8009260 <xTaskIncrementTick>
 8009428:	b100      	cbz	r0, 800942c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800942a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800942c:	3c01      	subs	r4, #1
 800942e:	d1f9      	bne.n	8009424 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009430:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009432:	4b0e      	ldr	r3, [pc, #56]	; (800946c <xTaskResumeAll+0xe0>)
 8009434:	681b      	ldr	r3, [r3, #0]
 8009436:	2b00      	cmp	r3, #0
 8009438:	d0bc      	beq.n	80093b4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800943a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800943e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009442:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009446:	f3bf 8f4f 	dsb	sy
 800944a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800944e:	2401      	movs	r4, #1
 8009450:	e7b1      	b.n	80093b6 <xTaskResumeAll+0x2a>
 8009452:	bf00      	nop
 8009454:	200173a8 	.word	0x200173a8
 8009458:	2001739c 	.word	0x2001739c
 800945c:	200173e4 	.word	0x200173e4
 8009460:	200173b0 	.word	0x200173b0
 8009464:	20016f3c 	.word	0x20016f3c
 8009468:	20016f30 	.word	0x20016f30
 800946c:	20017428 	.word	0x20017428
 8009470:	200173a4 	.word	0x200173a4

08009474 <vTaskDelay>:
	{
 8009474:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009476:	b950      	cbnz	r0, 800948e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009478:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800947c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009480:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009484:	f3bf 8f4f 	dsb	sy
 8009488:	f3bf 8f6f 	isb	sy
	}
 800948c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800948e:	4b0a      	ldr	r3, [pc, #40]	; (80094b8 <vTaskDelay+0x44>)
 8009490:	6819      	ldr	r1, [r3, #0]
 8009492:	b141      	cbz	r1, 80094a6 <vTaskDelay+0x32>
 8009494:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009498:	f383 8811 	msr	BASEPRI, r3
 800949c:	f3bf 8f6f 	isb	sy
 80094a0:	f3bf 8f4f 	dsb	sy
 80094a4:	e7fe      	b.n	80094a4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 80094a6:	f7ff fecd 	bl	8009244 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80094aa:	f7ff fd1b 	bl	8008ee4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80094ae:	f7ff ff6d 	bl	800938c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80094b2:	2800      	cmp	r0, #0
 80094b4:	d0e0      	beq.n	8009478 <vTaskDelay+0x4>
 80094b6:	e7e9      	b.n	800948c <vTaskDelay+0x18>
 80094b8:	200173a8 	.word	0x200173a8

080094bc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80094bc:	4b19      	ldr	r3, [pc, #100]	; (8009524 <vTaskSwitchContext+0x68>)
 80094be:	681a      	ldr	r2, [r3, #0]
 80094c0:	4b19      	ldr	r3, [pc, #100]	; (8009528 <vTaskSwitchContext+0x6c>)
{
 80094c2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80094c4:	b112      	cbz	r2, 80094cc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80094c6:	2201      	movs	r2, #1
 80094c8:	601a      	str	r2, [r3, #0]
}
 80094ca:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80094cc:	4d17      	ldr	r5, [pc, #92]	; (800952c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 80094ce:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80094d0:	682a      	ldr	r2, [r5, #0]
 80094d2:	4917      	ldr	r1, [pc, #92]	; (8009530 <vTaskSwitchContext+0x74>)
 80094d4:	2614      	movs	r6, #20
 80094d6:	fb06 f302 	mul.w	r3, r6, r2
 80094da:	18c8      	adds	r0, r1, r3
 80094dc:	58cc      	ldr	r4, [r1, r3]
 80094de:	b1ac      	cbz	r4, 800950c <vTaskSwitchContext+0x50>
 80094e0:	6844      	ldr	r4, [r0, #4]
 80094e2:	3308      	adds	r3, #8
 80094e4:	6864      	ldr	r4, [r4, #4]
 80094e6:	6044      	str	r4, [r0, #4]
 80094e8:	440b      	add	r3, r1
 80094ea:	429c      	cmp	r4, r3
 80094ec:	bf04      	itt	eq
 80094ee:	6863      	ldreq	r3, [r4, #4]
 80094f0:	6043      	streq	r3, [r0, #4]
 80094f2:	2314      	movs	r3, #20
 80094f4:	fb03 1102 	mla	r1, r3, r2, r1
 80094f8:	684b      	ldr	r3, [r1, #4]
 80094fa:	68d9      	ldr	r1, [r3, #12]
 80094fc:	4b0d      	ldr	r3, [pc, #52]	; (8009534 <vTaskSwitchContext+0x78>)
 80094fe:	6019      	str	r1, [r3, #0]
 8009500:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009502:	681b      	ldr	r3, [r3, #0]
 8009504:	4a0c      	ldr	r2, [pc, #48]	; (8009538 <vTaskSwitchContext+0x7c>)
 8009506:	3358      	adds	r3, #88	; 0x58
 8009508:	6013      	str	r3, [r2, #0]
}
 800950a:	e7de      	b.n	80094ca <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800950c:	b942      	cbnz	r2, 8009520 <vTaskSwitchContext+0x64>
 800950e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009512:	f383 8811 	msr	BASEPRI, r3
 8009516:	f3bf 8f6f 	isb	sy
 800951a:	f3bf 8f4f 	dsb	sy
 800951e:	e7fe      	b.n	800951e <vTaskSwitchContext+0x62>
 8009520:	3a01      	subs	r2, #1
 8009522:	e7d8      	b.n	80094d6 <vTaskSwitchContext+0x1a>
 8009524:	200173a8 	.word	0x200173a8
 8009528:	20017428 	.word	0x20017428
 800952c:	200173b0 	.word	0x200173b0
 8009530:	20016f3c 	.word	0x20016f3c
 8009534:	20016f30 	.word	0x20016f30
 8009538:	20000100 	.word	0x20000100

0800953c <vTaskPlaceOnEventList>:
{
 800953c:	b510      	push	{r4, lr}
 800953e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009540:	b940      	cbnz	r0, 8009554 <vTaskPlaceOnEventList+0x18>
 8009542:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009546:	f383 8811 	msr	BASEPRI, r3
 800954a:	f3bf 8f6f 	isb	sy
 800954e:	f3bf 8f4f 	dsb	sy
 8009552:	e7fe      	b.n	8009552 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009554:	4b05      	ldr	r3, [pc, #20]	; (800956c <vTaskPlaceOnEventList+0x30>)
 8009556:	6819      	ldr	r1, [r3, #0]
 8009558:	3118      	adds	r1, #24
 800955a:	f7fe fd71 	bl	8008040 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800955e:	4620      	mov	r0, r4
 8009560:	2101      	movs	r1, #1
}
 8009562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009566:	f7ff bcbd 	b.w	8008ee4 <prvAddCurrentTaskToDelayedList>
 800956a:	bf00      	nop
 800956c:	20016f30 	.word	0x20016f30

08009570 <vTaskPlaceOnEventListRestricted>:
	{
 8009570:	b538      	push	{r3, r4, r5, lr}
 8009572:	460d      	mov	r5, r1
 8009574:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009576:	b940      	cbnz	r0, 800958a <vTaskPlaceOnEventListRestricted+0x1a>
 8009578:	f04f 0350 	mov.w	r3, #80	; 0x50
 800957c:	f383 8811 	msr	BASEPRI, r3
 8009580:	f3bf 8f6f 	isb	sy
 8009584:	f3bf 8f4f 	dsb	sy
 8009588:	e7fe      	b.n	8009588 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800958a:	4b07      	ldr	r3, [pc, #28]	; (80095a8 <vTaskPlaceOnEventListRestricted+0x38>)
 800958c:	6819      	ldr	r1, [r3, #0]
 800958e:	3118      	adds	r1, #24
 8009590:	f7fe fd4a 	bl	8008028 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009594:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009596:	4621      	mov	r1, r4
 8009598:	bf0c      	ite	eq
 800959a:	4628      	moveq	r0, r5
 800959c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80095a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80095a4:	f7ff bc9e 	b.w	8008ee4 <prvAddCurrentTaskToDelayedList>
 80095a8:	20016f30 	.word	0x20016f30

080095ac <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80095ac:	68c3      	ldr	r3, [r0, #12]
{
 80095ae:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80095b0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80095b2:	b944      	cbnz	r4, 80095c6 <xTaskRemoveFromEventList+0x1a>
 80095b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095b8:	f383 8811 	msr	BASEPRI, r3
 80095bc:	f3bf 8f6f 	isb	sy
 80095c0:	f3bf 8f4f 	dsb	sy
 80095c4:	e7fe      	b.n	80095c4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80095c6:	f104 0118 	add.w	r1, r4, #24
 80095ca:	4608      	mov	r0, r1
 80095cc:	9101      	str	r1, [sp, #4]
 80095ce:	f7fe fd4e 	bl	800806e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80095d2:	4b12      	ldr	r3, [pc, #72]	; (800961c <xTaskRemoveFromEventList+0x70>)
 80095d4:	9901      	ldr	r1, [sp, #4]
 80095d6:	681b      	ldr	r3, [r3, #0]
 80095d8:	b9eb      	cbnz	r3, 8009616 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80095da:	1d21      	adds	r1, r4, #4
 80095dc:	4608      	mov	r0, r1
 80095de:	9101      	str	r1, [sp, #4]
 80095e0:	f7fe fd45 	bl	800806e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80095e4:	4a0e      	ldr	r2, [pc, #56]	; (8009620 <xTaskRemoveFromEventList+0x74>)
 80095e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80095e8:	6810      	ldr	r0, [r2, #0]
 80095ea:	9901      	ldr	r1, [sp, #4]
 80095ec:	4283      	cmp	r3, r0
 80095ee:	bf88      	it	hi
 80095f0:	6013      	strhi	r3, [r2, #0]
 80095f2:	4a0c      	ldr	r2, [pc, #48]	; (8009624 <xTaskRemoveFromEventList+0x78>)
 80095f4:	2014      	movs	r0, #20
 80095f6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80095fa:	f7fe fd15 	bl	8008028 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80095fe:	4b0a      	ldr	r3, [pc, #40]	; (8009628 <xTaskRemoveFromEventList+0x7c>)
 8009600:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009602:	681b      	ldr	r3, [r3, #0]
 8009604:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009606:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009608:	bf85      	ittet	hi
 800960a:	4b08      	ldrhi	r3, [pc, #32]	; (800962c <xTaskRemoveFromEventList+0x80>)
 800960c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800960e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8009610:	6018      	strhi	r0, [r3, #0]
}
 8009612:	b002      	add	sp, #8
 8009614:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009616:	4806      	ldr	r0, [pc, #24]	; (8009630 <xTaskRemoveFromEventList+0x84>)
 8009618:	e7ef      	b.n	80095fa <xTaskRemoveFromEventList+0x4e>
 800961a:	bf00      	nop
 800961c:	200173a8 	.word	0x200173a8
 8009620:	200173b0 	.word	0x200173b0
 8009624:	20016f3c 	.word	0x20016f3c
 8009628:	20016f30 	.word	0x20016f30
 800962c:	20017428 	.word	0x20017428
 8009630:	200173e4 	.word	0x200173e4

08009634 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009634:	4b03      	ldr	r3, [pc, #12]	; (8009644 <vTaskInternalSetTimeOutState+0x10>)
 8009636:	681b      	ldr	r3, [r3, #0]
 8009638:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800963a:	4b03      	ldr	r3, [pc, #12]	; (8009648 <vTaskInternalSetTimeOutState+0x14>)
 800963c:	681b      	ldr	r3, [r3, #0]
 800963e:	6043      	str	r3, [r0, #4]
}
 8009640:	4770      	bx	lr
 8009642:	bf00      	nop
 8009644:	200173e0 	.word	0x200173e0
 8009648:	20017424 	.word	0x20017424

0800964c <xTaskCheckForTimeOut>:
{
 800964c:	b570      	push	{r4, r5, r6, lr}
 800964e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009650:	4605      	mov	r5, r0
 8009652:	b940      	cbnz	r0, 8009666 <xTaskCheckForTimeOut+0x1a>
 8009654:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009658:	f383 8811 	msr	BASEPRI, r3
 800965c:	f3bf 8f6f 	isb	sy
 8009660:	f3bf 8f4f 	dsb	sy
 8009664:	e7fe      	b.n	8009664 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8009666:	b941      	cbnz	r1, 800967a <xTaskCheckForTimeOut+0x2e>
 8009668:	f04f 0350 	mov.w	r3, #80	; 0x50
 800966c:	f383 8811 	msr	BASEPRI, r3
 8009670:	f3bf 8f6f 	isb	sy
 8009674:	f3bf 8f4f 	dsb	sy
 8009678:	e7fe      	b.n	8009678 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800967a:	f7fe fd73 	bl	8008164 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800967e:	4b0f      	ldr	r3, [pc, #60]	; (80096bc <xTaskCheckForTimeOut+0x70>)
 8009680:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009682:	6823      	ldr	r3, [r4, #0]
 8009684:	1c5a      	adds	r2, r3, #1
 8009686:	d010      	beq.n	80096aa <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009688:	480d      	ldr	r0, [pc, #52]	; (80096c0 <xTaskCheckForTimeOut+0x74>)
 800968a:	682e      	ldr	r6, [r5, #0]
 800968c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800968e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009690:	4286      	cmp	r6, r0
 8009692:	d001      	beq.n	8009698 <xTaskCheckForTimeOut+0x4c>
 8009694:	428a      	cmp	r2, r1
 8009696:	d90f      	bls.n	80096b8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009698:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800969a:	4283      	cmp	r3, r0
 800969c:	d90a      	bls.n	80096b4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800969e:	1a5b      	subs	r3, r3, r1
 80096a0:	4413      	add	r3, r2
 80096a2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80096a4:	4628      	mov	r0, r5
 80096a6:	f7ff ffc5 	bl	8009634 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80096aa:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80096ac:	f7fe fd7a 	bl	80081a4 <vPortExitCritical>
}
 80096b0:	4620      	mov	r0, r4
 80096b2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80096b4:	2300      	movs	r3, #0
 80096b6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80096b8:	2401      	movs	r4, #1
 80096ba:	e7f7      	b.n	80096ac <xTaskCheckForTimeOut+0x60>
 80096bc:	20017424 	.word	0x20017424
 80096c0:	200173e0 	.word	0x200173e0

080096c4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80096c4:	4b01      	ldr	r3, [pc, #4]	; (80096cc <vTaskMissedYield+0x8>)
 80096c6:	2201      	movs	r2, #1
 80096c8:	601a      	str	r2, [r3, #0]
}
 80096ca:	4770      	bx	lr
 80096cc:	20017428 	.word	0x20017428

080096d0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80096d0:	4b05      	ldr	r3, [pc, #20]	; (80096e8 <xTaskGetSchedulerState+0x18>)
 80096d2:	681b      	ldr	r3, [r3, #0]
 80096d4:	b133      	cbz	r3, 80096e4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80096d6:	4b05      	ldr	r3, [pc, #20]	; (80096ec <xTaskGetSchedulerState+0x1c>)
 80096d8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 80096da:	2b00      	cmp	r3, #0
 80096dc:	bf0c      	ite	eq
 80096de:	2002      	moveq	r0, #2
 80096e0:	2000      	movne	r0, #0
 80096e2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80096e4:	2001      	movs	r0, #1
	}
 80096e6:	4770      	bx	lr
 80096e8:	200173f8 	.word	0x200173f8
 80096ec:	200173a8 	.word	0x200173a8

080096f0 <xTaskPriorityInherit>:
	{
 80096f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80096f2:	4604      	mov	r4, r0
 80096f4:	b348      	cbz	r0, 800974a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80096f6:	4d1c      	ldr	r5, [pc, #112]	; (8009768 <xTaskPriorityInherit+0x78>)
 80096f8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80096fa:	682a      	ldr	r2, [r5, #0]
 80096fc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80096fe:	4293      	cmp	r3, r2
 8009700:	d229      	bcs.n	8009756 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009702:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009704:	4e19      	ldr	r6, [pc, #100]	; (800976c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009706:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009708:	bfa1      	itttt	ge
 800970a:	682a      	ldrge	r2, [r5, #0]
 800970c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800970e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8009712:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009714:	2214      	movs	r2, #20
 8009716:	fb02 6303 	mla	r3, r2, r3, r6
 800971a:	6942      	ldr	r2, [r0, #20]
 800971c:	429a      	cmp	r2, r3
 800971e:	d116      	bne.n	800974e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009720:	1d01      	adds	r1, r0, #4
 8009722:	4608      	mov	r0, r1
 8009724:	9101      	str	r1, [sp, #4]
 8009726:	f7fe fca2 	bl	800806e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800972a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800972c:	4a10      	ldr	r2, [pc, #64]	; (8009770 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800972e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009730:	6810      	ldr	r0, [r2, #0]
 8009732:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009734:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009736:	4283      	cmp	r3, r0
 8009738:	f04f 0014 	mov.w	r0, #20
 800973c:	fb00 6003 	mla	r0, r0, r3, r6
 8009740:	bf88      	it	hi
 8009742:	6013      	strhi	r3, [r2, #0]
 8009744:	f7fe fc70 	bl	8008028 <vListInsertEnd>
				xReturn = pdTRUE;
 8009748:	2001      	movs	r0, #1
	}
 800974a:	b002      	add	sp, #8
 800974c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800974e:	682b      	ldr	r3, [r5, #0]
 8009750:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009752:	62c3      	str	r3, [r0, #44]	; 0x2c
 8009754:	e7f8      	b.n	8009748 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009756:	682b      	ldr	r3, [r5, #0]
 8009758:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800975a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800975c:	42a0      	cmp	r0, r4
 800975e:	bf2c      	ite	cs
 8009760:	2000      	movcs	r0, #0
 8009762:	2001      	movcc	r0, #1
 8009764:	e7f1      	b.n	800974a <xTaskPriorityInherit+0x5a>
 8009766:	bf00      	nop
 8009768:	20016f30 	.word	0x20016f30
 800976c:	20016f3c 	.word	0x20016f3c
 8009770:	200173b0 	.word	0x200173b0

08009774 <xTaskPriorityDisinherit>:
	{
 8009774:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8009776:	b910      	cbnz	r0, 800977e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8009778:	2000      	movs	r0, #0
	}
 800977a:	b002      	add	sp, #8
 800977c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800977e:	4b1c      	ldr	r3, [pc, #112]	; (80097f0 <xTaskPriorityDisinherit+0x7c>)
 8009780:	681c      	ldr	r4, [r3, #0]
 8009782:	4284      	cmp	r4, r0
 8009784:	d008      	beq.n	8009798 <xTaskPriorityDisinherit+0x24>
 8009786:	f04f 0350 	mov.w	r3, #80	; 0x50
 800978a:	f383 8811 	msr	BASEPRI, r3
 800978e:	f3bf 8f6f 	isb	sy
 8009792:	f3bf 8f4f 	dsb	sy
 8009796:	e7fe      	b.n	8009796 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8009798:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800979a:	b943      	cbnz	r3, 80097ae <xTaskPriorityDisinherit+0x3a>
 800979c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097a0:	f383 8811 	msr	BASEPRI, r3
 80097a4:	f3bf 8f6f 	isb	sy
 80097a8:	f3bf 8f4f 	dsb	sy
 80097ac:	e7fe      	b.n	80097ac <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80097ae:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80097b0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 80097b2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80097b4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80097b6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80097b8:	d0de      	beq.n	8009778 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80097ba:	2b00      	cmp	r3, #0
 80097bc:	d1dc      	bne.n	8009778 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80097be:	1d21      	adds	r1, r4, #4
 80097c0:	4608      	mov	r0, r1
 80097c2:	9101      	str	r1, [sp, #4]
 80097c4:	f7fe fc53 	bl	800806e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80097c8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 80097ca:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80097cc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80097ce:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80097d2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80097d4:	4a07      	ldr	r2, [pc, #28]	; (80097f4 <xTaskPriorityDisinherit+0x80>)
 80097d6:	6810      	ldr	r0, [r2, #0]
 80097d8:	4283      	cmp	r3, r0
 80097da:	bf88      	it	hi
 80097dc:	6013      	strhi	r3, [r2, #0]
 80097de:	4a06      	ldr	r2, [pc, #24]	; (80097f8 <xTaskPriorityDisinherit+0x84>)
 80097e0:	2014      	movs	r0, #20
 80097e2:	fb00 2003 	mla	r0, r0, r3, r2
 80097e6:	f7fe fc1f 	bl	8008028 <vListInsertEnd>
					xReturn = pdTRUE;
 80097ea:	2001      	movs	r0, #1
		return xReturn;
 80097ec:	e7c5      	b.n	800977a <xTaskPriorityDisinherit+0x6>
 80097ee:	bf00      	nop
 80097f0:	20016f30 	.word	0x20016f30
 80097f4:	200173b0 	.word	0x200173b0
 80097f8:	20016f3c 	.word	0x20016f3c

080097fc <vTaskPriorityDisinheritAfterTimeout>:
	{
 80097fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 80097fe:	4604      	mov	r4, r0
 8009800:	2800      	cmp	r0, #0
 8009802:	d044      	beq.n	800988e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009804:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009806:	b942      	cbnz	r2, 800981a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009808:	f04f 0350 	mov.w	r3, #80	; 0x50
 800980c:	f383 8811 	msr	BASEPRI, r3
 8009810:	f3bf 8f6f 	isb	sy
 8009814:	f3bf 8f4f 	dsb	sy
 8009818:	e7fe      	b.n	8009818 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800981a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800981c:	4299      	cmp	r1, r3
 800981e:	bf38      	it	cc
 8009820:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009822:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009824:	428b      	cmp	r3, r1
 8009826:	d032      	beq.n	800988e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009828:	2a01      	cmp	r2, #1
 800982a:	d130      	bne.n	800988e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800982c:	4a19      	ldr	r2, [pc, #100]	; (8009894 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800982e:	6812      	ldr	r2, [r2, #0]
 8009830:	4282      	cmp	r2, r0
 8009832:	d108      	bne.n	8009846 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009834:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009838:	f383 8811 	msr	BASEPRI, r3
 800983c:	f3bf 8f6f 	isb	sy
 8009840:	f3bf 8f4f 	dsb	sy
 8009844:	e7fe      	b.n	8009844 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009846:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009848:	4d13      	ldr	r5, [pc, #76]	; (8009898 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800984a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800984c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800984e:	f04f 0214 	mov.w	r2, #20
 8009852:	fb02 5303 	mla	r3, r2, r3, r5
 8009856:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009858:	bfa4      	itt	ge
 800985a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800985e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009860:	429a      	cmp	r2, r3
 8009862:	d114      	bne.n	800988e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009864:	1d01      	adds	r1, r0, #4
 8009866:	4608      	mov	r0, r1
 8009868:	9101      	str	r1, [sp, #4]
 800986a:	f7fe fc00 	bl	800806e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800986e:	4a0b      	ldr	r2, [pc, #44]	; (800989c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8009870:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009872:	6810      	ldr	r0, [r2, #0]
 8009874:	9901      	ldr	r1, [sp, #4]
 8009876:	4283      	cmp	r3, r0
 8009878:	f04f 0014 	mov.w	r0, #20
 800987c:	fb00 5003 	mla	r0, r0, r3, r5
 8009880:	bf88      	it	hi
 8009882:	6013      	strhi	r3, [r2, #0]
	}
 8009884:	b003      	add	sp, #12
 8009886:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800988a:	f7fe bbcd 	b.w	8008028 <vListInsertEnd>
	}
 800988e:	b003      	add	sp, #12
 8009890:	bd30      	pop	{r4, r5, pc}
 8009892:	bf00      	nop
 8009894:	20016f30 	.word	0x20016f30
 8009898:	20016f3c 	.word	0x20016f3c
 800989c:	200173b0 	.word	0x200173b0

080098a0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80098a0:	4b04      	ldr	r3, [pc, #16]	; (80098b4 <pvTaskIncrementMutexHeldCount+0x14>)
 80098a2:	681a      	ldr	r2, [r3, #0]
 80098a4:	b11a      	cbz	r2, 80098ae <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80098a6:	6819      	ldr	r1, [r3, #0]
 80098a8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80098aa:	3201      	adds	r2, #1
 80098ac:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80098ae:	6818      	ldr	r0, [r3, #0]
	}
 80098b0:	4770      	bx	lr
 80098b2:	bf00      	nop
 80098b4:	20016f30 	.word	0x20016f30

080098b8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80098b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80098ba:	4c11      	ldr	r4, [pc, #68]	; (8009900 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80098bc:	f7fe fc52 	bl	8008164 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80098c0:	6825      	ldr	r5, [r4, #0]
 80098c2:	b9bd      	cbnz	r5, 80098f4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80098c4:	4f0f      	ldr	r7, [pc, #60]	; (8009904 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80098c6:	4e10      	ldr	r6, [pc, #64]	; (8009908 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80098c8:	4638      	mov	r0, r7
 80098ca:	f7fe fb9f 	bl	800800c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80098ce:	4630      	mov	r0, r6
 80098d0:	f7fe fb9c 	bl	800800c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80098d4:	4b0d      	ldr	r3, [pc, #52]	; (800990c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80098d6:	4a0e      	ldr	r2, [pc, #56]	; (8009910 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80098d8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80098da:	4b0e      	ldr	r3, [pc, #56]	; (8009914 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80098dc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80098de:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80098e0:	200a      	movs	r0, #10
 80098e2:	4b0d      	ldr	r3, [pc, #52]	; (8009918 <prvCheckForValidListAndQueue+0x60>)
 80098e4:	9500      	str	r5, [sp, #0]
 80098e6:	f7fe fe4e 	bl	8008586 <xQueueGenericCreateStatic>
 80098ea:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 80098ec:	b110      	cbz	r0, 80098f4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80098ee:	490b      	ldr	r1, [pc, #44]	; (800991c <prvCheckForValidListAndQueue+0x64>)
 80098f0:	f7ff fa18 	bl	8008d24 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 80098f4:	b003      	add	sp, #12
 80098f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 80098fa:	f7fe bc53 	b.w	80081a4 <vPortExitCritical>
 80098fe:	bf00      	nop
 8009900:	20017550 	.word	0x20017550
 8009904:	200174d4 	.word	0x200174d4
 8009908:	200174e8 	.word	0x200174e8
 800990c:	2001742c 	.word	0x2001742c
 8009910:	20017434 	.word	0x20017434
 8009914:	20017430 	.word	0x20017430
 8009918:	20017500 	.word	0x20017500
 800991c:	0802228d 	.word	0x0802228d

08009920 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009920:	4291      	cmp	r1, r2
{
 8009922:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009924:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009926:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009928:	d80a      	bhi.n	8009940 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800992a:	1ad2      	subs	r2, r2, r3
 800992c:	6983      	ldr	r3, [r0, #24]
 800992e:	429a      	cmp	r2, r3
 8009930:	d20d      	bcs.n	800994e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009932:	4b08      	ldr	r3, [pc, #32]	; (8009954 <prvInsertTimerInActiveList+0x34>)
 8009934:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009936:	6818      	ldr	r0, [r3, #0]
 8009938:	f7fe fb82 	bl	8008040 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800993c:	2000      	movs	r0, #0
}
 800993e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009940:	429a      	cmp	r2, r3
 8009942:	d201      	bcs.n	8009948 <prvInsertTimerInActiveList+0x28>
 8009944:	4299      	cmp	r1, r3
 8009946:	d202      	bcs.n	800994e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009948:	4b03      	ldr	r3, [pc, #12]	; (8009958 <prvInsertTimerInActiveList+0x38>)
 800994a:	1d01      	adds	r1, r0, #4
 800994c:	e7f3      	b.n	8009936 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800994e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009950:	e7f5      	b.n	800993e <prvInsertTimerInActiveList+0x1e>
 8009952:	bf00      	nop
 8009954:	20017430 	.word	0x20017430
 8009958:	2001742c 	.word	0x2001742c

0800995c <xTimerCreateTimerTask>:
{
 800995c:	b510      	push	{r4, lr}
 800995e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009960:	f7ff ffaa 	bl	80098b8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009964:	4b12      	ldr	r3, [pc, #72]	; (80099b0 <xTimerCreateTimerTask+0x54>)
 8009966:	681b      	ldr	r3, [r3, #0]
 8009968:	b1b3      	cbz	r3, 8009998 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800996a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800996c:	aa07      	add	r2, sp, #28
 800996e:	a906      	add	r1, sp, #24
 8009970:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009972:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009976:	f7fe fa4f 	bl	8007e18 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800997a:	9b05      	ldr	r3, [sp, #20]
 800997c:	9302      	str	r3, [sp, #8]
 800997e:	9b06      	ldr	r3, [sp, #24]
 8009980:	9301      	str	r3, [sp, #4]
 8009982:	2302      	movs	r3, #2
 8009984:	9300      	str	r3, [sp, #0]
 8009986:	9a07      	ldr	r2, [sp, #28]
 8009988:	490a      	ldr	r1, [pc, #40]	; (80099b4 <xTimerCreateTimerTask+0x58>)
 800998a:	480b      	ldr	r0, [pc, #44]	; (80099b8 <xTimerCreateTimerTask+0x5c>)
 800998c:	4623      	mov	r3, r4
 800998e:	f7ff fba3 	bl	80090d8 <xTaskCreateStatic>
 8009992:	4b0a      	ldr	r3, [pc, #40]	; (80099bc <xTimerCreateTimerTask+0x60>)
 8009994:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009996:	b940      	cbnz	r0, 80099aa <xTimerCreateTimerTask+0x4e>
 8009998:	f04f 0350 	mov.w	r3, #80	; 0x50
 800999c:	f383 8811 	msr	BASEPRI, r3
 80099a0:	f3bf 8f6f 	isb	sy
 80099a4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80099a8:	e7fe      	b.n	80099a8 <xTimerCreateTimerTask+0x4c>
}
 80099aa:	2001      	movs	r0, #1
 80099ac:	b008      	add	sp, #32
 80099ae:	bd10      	pop	{r4, pc}
 80099b0:	20017550 	.word	0x20017550
 80099b4:	08022292 	.word	0x08022292
 80099b8:	08009ac5 	.word	0x08009ac5
 80099bc:	20017554 	.word	0x20017554

080099c0 <xTimerGenericCommand>:
{
 80099c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80099c2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80099c4:	4604      	mov	r4, r0
{
 80099c6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80099c8:	b940      	cbnz	r0, 80099dc <xTimerGenericCommand+0x1c>
 80099ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099ce:	f383 8811 	msr	BASEPRI, r3
 80099d2:	f3bf 8f6f 	isb	sy
 80099d6:	f3bf 8f4f 	dsb	sy
 80099da:	e7fe      	b.n	80099da <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 80099dc:	4d0d      	ldr	r5, [pc, #52]	; (8009a14 <xTimerGenericCommand+0x54>)
 80099de:	6828      	ldr	r0, [r5, #0]
 80099e0:	b180      	cbz	r0, 8009a04 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80099e2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80099e4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80099e8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80099ea:	dc0d      	bgt.n	8009a08 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80099ec:	f7ff fe70 	bl	80096d0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80099f0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80099f2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80099f4:	bf08      	it	eq
 80099f6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80099f8:	6828      	ldr	r0, [r5, #0]
 80099fa:	bf18      	it	ne
 80099fc:	461a      	movne	r2, r3
 80099fe:	4669      	mov	r1, sp
 8009a00:	f7fe fe76 	bl	80086f0 <xQueueGenericSend>
}
 8009a04:	b004      	add	sp, #16
 8009a06:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009a08:	2300      	movs	r3, #0
 8009a0a:	4669      	mov	r1, sp
 8009a0c:	f7fe ff23 	bl	8008856 <xQueueGenericSendFromISR>
 8009a10:	e7f8      	b.n	8009a04 <xTimerGenericCommand+0x44>
 8009a12:	bf00      	nop
 8009a14:	20017550 	.word	0x20017550

08009a18 <prvSampleTimeNow>:
{
 8009a18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009a1c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009ac0 <prvSampleTimeNow+0xa8>
{
 8009a20:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009a22:	f7ff fc17 	bl	8009254 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009a26:	f8d8 3000 	ldr.w	r3, [r8]
 8009a2a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009a2c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009a2e:	d940      	bls.n	8009ab2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009a30:	4f21      	ldr	r7, [pc, #132]	; (8009ab8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009a32:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009a36:	683b      	ldr	r3, [r7, #0]
 8009a38:	681a      	ldr	r2, [r3, #0]
 8009a3a:	b95a      	cbnz	r2, 8009a54 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009a3c:	4a1f      	ldr	r2, [pc, #124]	; (8009abc <prvSampleTimeNow+0xa4>)
 8009a3e:	6811      	ldr	r1, [r2, #0]
 8009a40:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8009a42:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009a44:	2301      	movs	r3, #1
}
 8009a46:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8009a48:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009a4a:	f8c8 5000 	str.w	r5, [r8]
}
 8009a4e:	b004      	add	sp, #16
 8009a50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009a54:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a56:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009a58:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009a5c:	1d21      	adds	r1, r4, #4
 8009a5e:	4608      	mov	r0, r1
 8009a60:	9103      	str	r1, [sp, #12]
 8009a62:	f7fe fb04 	bl	800806e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009a66:	6a23      	ldr	r3, [r4, #32]
 8009a68:	4620      	mov	r0, r4
 8009a6a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009a6c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009a70:	9903      	ldr	r1, [sp, #12]
 8009a72:	f013 0f04 	tst.w	r3, #4
 8009a76:	d0de      	beq.n	8009a36 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009a78:	69a3      	ldr	r3, [r4, #24]
 8009a7a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8009a7c:	459a      	cmp	sl, r3
 8009a7e:	d205      	bcs.n	8009a8c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009a80:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009a82:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009a84:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009a86:	f7fe fadb 	bl	8008040 <vListInsert>
 8009a8a:	e7d4      	b.n	8009a36 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009a8c:	2300      	movs	r3, #0
 8009a8e:	f8cd 9000 	str.w	r9, [sp]
 8009a92:	4652      	mov	r2, sl
 8009a94:	4619      	mov	r1, r3
 8009a96:	4620      	mov	r0, r4
 8009a98:	f7ff ff92 	bl	80099c0 <xTimerGenericCommand>
				configASSERT( xResult );
 8009a9c:	2800      	cmp	r0, #0
 8009a9e:	d1ca      	bne.n	8009a36 <prvSampleTimeNow+0x1e>
 8009aa0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009aa4:	f383 8811 	msr	BASEPRI, r3
 8009aa8:	f3bf 8f6f 	isb	sy
 8009aac:	f3bf 8f4f 	dsb	sy
 8009ab0:	e7fe      	b.n	8009ab0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8009ab2:	2300      	movs	r3, #0
 8009ab4:	e7c7      	b.n	8009a46 <prvSampleTimeNow+0x2e>
 8009ab6:	bf00      	nop
 8009ab8:	2001742c 	.word	0x2001742c
 8009abc:	20017430 	.word	0x20017430
 8009ac0:	200174fc 	.word	0x200174fc

08009ac4 <prvTimerTask>:
{
 8009ac4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009ac8:	4d6e      	ldr	r5, [pc, #440]	; (8009c84 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009aca:	4e6f      	ldr	r6, [pc, #444]	; (8009c88 <prvTimerTask+0x1c4>)
{
 8009acc:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009ace:	682b      	ldr	r3, [r5, #0]
 8009ad0:	f8d3 8000 	ldr.w	r8, [r3]
 8009ad4:	f1b8 0f00 	cmp.w	r8, #0
 8009ad8:	d035      	beq.n	8009b46 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009ada:	68db      	ldr	r3, [r3, #12]
 8009adc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009ae0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009ae2:	f7ff fbaf 	bl	8009244 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009ae6:	a804      	add	r0, sp, #16
 8009ae8:	f7ff ff96 	bl	8009a18 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009aec:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009aee:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009af0:	2b00      	cmp	r3, #0
 8009af2:	d169      	bne.n	8009bc8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009af4:	2c00      	cmp	r4, #0
 8009af6:	d14c      	bne.n	8009b92 <prvTimerTask+0xce>
 8009af8:	4540      	cmp	r0, r8
 8009afa:	d350      	bcc.n	8009b9e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009afc:	f7ff fc46 	bl	800938c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b00:	682b      	ldr	r3, [r5, #0]
 8009b02:	68db      	ldr	r3, [r3, #12]
 8009b04:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009b06:	1d38      	adds	r0, r7, #4
 8009b08:	f7fe fab1 	bl	800806e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009b0c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009b10:	0758      	lsls	r0, r3, #29
 8009b12:	d51a      	bpl.n	8009b4a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009b14:	69b9      	ldr	r1, [r7, #24]
 8009b16:	4643      	mov	r3, r8
 8009b18:	464a      	mov	r2, r9
 8009b1a:	4441      	add	r1, r8
 8009b1c:	4638      	mov	r0, r7
 8009b1e:	f7ff feff 	bl	8009920 <prvInsertTimerInActiveList>
 8009b22:	b1b0      	cbz	r0, 8009b52 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009b24:	9400      	str	r4, [sp, #0]
 8009b26:	4623      	mov	r3, r4
 8009b28:	4642      	mov	r2, r8
 8009b2a:	4621      	mov	r1, r4
 8009b2c:	4638      	mov	r0, r7
 8009b2e:	f7ff ff47 	bl	80099c0 <xTimerGenericCommand>
			configASSERT( xResult );
 8009b32:	b970      	cbnz	r0, 8009b52 <prvTimerTask+0x8e>
 8009b34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b38:	f383 8811 	msr	BASEPRI, r3
 8009b3c:	f3bf 8f6f 	isb	sy
 8009b40:	f3bf 8f4f 	dsb	sy
 8009b44:	e7fe      	b.n	8009b44 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009b46:	2401      	movs	r4, #1
 8009b48:	e7cb      	b.n	8009ae2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009b4a:	f023 0301 	bic.w	r3, r3, #1
 8009b4e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009b52:	6a3b      	ldr	r3, [r7, #32]
 8009b54:	4638      	mov	r0, r7
 8009b56:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009b58:	6830      	ldr	r0, [r6, #0]
 8009b5a:	2200      	movs	r2, #0
 8009b5c:	a904      	add	r1, sp, #16
 8009b5e:	f7fe ff2f 	bl	80089c0 <xQueueReceive>
 8009b62:	2800      	cmp	r0, #0
 8009b64:	d0b3      	beq.n	8009ace <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009b66:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009b68:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009b6a:	2b00      	cmp	r3, #0
 8009b6c:	db2f      	blt.n	8009bce <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009b6e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009b70:	6963      	ldr	r3, [r4, #20]
 8009b72:	2b00      	cmp	r3, #0
 8009b74:	d132      	bne.n	8009bdc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009b76:	a803      	add	r0, sp, #12
 8009b78:	f7ff ff4e 	bl	8009a18 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009b7c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009b7e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009b80:	2b09      	cmp	r3, #9
 8009b82:	d8e9      	bhi.n	8009b58 <prvTimerTask+0x94>
 8009b84:	e8df f003 	tbb	[pc, r3]
 8009b88:	572e2e2e 	.word	0x572e2e2e
 8009b8c:	2e2e765e 	.word	0x2e2e765e
 8009b90:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009b92:	4b3e      	ldr	r3, [pc, #248]	; (8009c8c <prvTimerTask+0x1c8>)
 8009b94:	681b      	ldr	r3, [r3, #0]
 8009b96:	681c      	ldr	r4, [r3, #0]
 8009b98:	fab4 f484 	clz	r4, r4
 8009b9c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009b9e:	6830      	ldr	r0, [r6, #0]
 8009ba0:	4622      	mov	r2, r4
 8009ba2:	eba8 0109 	sub.w	r1, r8, r9
 8009ba6:	f7ff f8fa 	bl	8008d9e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009baa:	f7ff fbef 	bl	800938c <xTaskResumeAll>
 8009bae:	2800      	cmp	r0, #0
 8009bb0:	d1d2      	bne.n	8009b58 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009bb2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009bb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009bba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009bbe:	f3bf 8f4f 	dsb	sy
 8009bc2:	f3bf 8f6f 	isb	sy
 8009bc6:	e7c7      	b.n	8009b58 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009bc8:	f7ff fbe0 	bl	800938c <xTaskResumeAll>
}
 8009bcc:	e7c4      	b.n	8009b58 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009bce:	9b05      	ldr	r3, [sp, #20]
 8009bd0:	9907      	ldr	r1, [sp, #28]
 8009bd2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009bd4:	9b04      	ldr	r3, [sp, #16]
 8009bd6:	2b00      	cmp	r3, #0
 8009bd8:	dbbe      	blt.n	8009b58 <prvTimerTask+0x94>
 8009bda:	e7c8      	b.n	8009b6e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009bdc:	1d20      	adds	r0, r4, #4
 8009bde:	f7fe fa46 	bl	800806e <uxListRemove>
 8009be2:	e7c8      	b.n	8009b76 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009be4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009be8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009bea:	f043 0301 	orr.w	r3, r3, #1
 8009bee:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009bf2:	9b05      	ldr	r3, [sp, #20]
 8009bf4:	4620      	mov	r0, r4
 8009bf6:	4419      	add	r1, r3
 8009bf8:	f7ff fe92 	bl	8009920 <prvInsertTimerInActiveList>
 8009bfc:	2800      	cmp	r0, #0
 8009bfe:	d0ab      	beq.n	8009b58 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009c00:	6a23      	ldr	r3, [r4, #32]
 8009c02:	4620      	mov	r0, r4
 8009c04:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009c06:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009c0a:	0759      	lsls	r1, r3, #29
 8009c0c:	d5a4      	bpl.n	8009b58 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009c0e:	69a2      	ldr	r2, [r4, #24]
 8009c10:	9905      	ldr	r1, [sp, #20]
 8009c12:	2300      	movs	r3, #0
 8009c14:	440a      	add	r2, r1
 8009c16:	9300      	str	r3, [sp, #0]
 8009c18:	4619      	mov	r1, r3
 8009c1a:	4620      	mov	r0, r4
 8009c1c:	f7ff fed0 	bl	80099c0 <xTimerGenericCommand>
							configASSERT( xResult );
 8009c20:	2800      	cmp	r0, #0
 8009c22:	d199      	bne.n	8009b58 <prvTimerTask+0x94>
 8009c24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c28:	f383 8811 	msr	BASEPRI, r3
 8009c2c:	f3bf 8f6f 	isb	sy
 8009c30:	f3bf 8f4f 	dsb	sy
 8009c34:	e7fe      	b.n	8009c34 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009c36:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009c3a:	f023 0301 	bic.w	r3, r3, #1
 8009c3e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009c42:	e789      	b.n	8009b58 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009c44:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009c48:	f043 0301 	orr.w	r3, r3, #1
 8009c4c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009c50:	9905      	ldr	r1, [sp, #20]
 8009c52:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009c54:	b941      	cbnz	r1, 8009c68 <prvTimerTask+0x1a4>
 8009c56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c5a:	f383 8811 	msr	BASEPRI, r3
 8009c5e:	f3bf 8f6f 	isb	sy
 8009c62:	f3bf 8f4f 	dsb	sy
 8009c66:	e7fe      	b.n	8009c66 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8009c68:	4603      	mov	r3, r0
 8009c6a:	4401      	add	r1, r0
 8009c6c:	4620      	mov	r0, r4
 8009c6e:	f7ff fe57 	bl	8009920 <prvInsertTimerInActiveList>
					break;
 8009c72:	e771      	b.n	8009b58 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009c74:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009c78:	079a      	lsls	r2, r3, #30
 8009c7a:	d4de      	bmi.n	8009c3a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009c7c:	4620      	mov	r0, r4
 8009c7e:	f7fe f98d 	bl	8007f9c <vPortFree>
 8009c82:	e769      	b.n	8009b58 <prvTimerTask+0x94>
 8009c84:	2001742c 	.word	0x2001742c
 8009c88:	20017550 	.word	0x20017550
 8009c8c:	20017430 	.word	0x20017430

08009c90 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009c90:	8880      	ldrh	r0, [r0, #4]
 8009c92:	4770      	bx	lr

08009c94 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009c94:	b570      	push	{r4, r5, r6, lr}
 8009c96:	6803      	ldr	r3, [r0, #0]
 8009c98:	4605      	mov	r5, r0
 8009c9a:	460c      	mov	r4, r1
 8009c9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c9e:	2100      	movs	r1, #0
 8009ca0:	4798      	blx	r3
 8009ca2:	682b      	ldr	r3, [r5, #0]
 8009ca4:	4606      	mov	r6, r0
 8009ca6:	6a1b      	ldr	r3, [r3, #32]
 8009ca8:	4628      	mov	r0, r5
 8009caa:	4798      	blx	r3
 8009cac:	1ba4      	subs	r4, r4, r6
 8009cae:	b2a4      	uxth	r4, r4
 8009cb0:	fbb4 f0f0 	udiv	r0, r4, r0
 8009cb4:	bd70      	pop	{r4, r5, r6, pc}

08009cb6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009cb6:	2300      	movs	r3, #0
 8009cb8:	8083      	strh	r3, [r0, #4]
 8009cba:	4770      	bx	lr

08009cbc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009cbc:	b510      	push	{r4, lr}
 8009cbe:	6803      	ldr	r3, [r0, #0]
 8009cc0:	8881      	ldrh	r1, [r0, #4]
 8009cc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009cc4:	4604      	mov	r4, r0
 8009cc6:	4798      	blx	r3
 8009cc8:	88a3      	ldrh	r3, [r4, #4]
 8009cca:	3301      	adds	r3, #1
 8009ccc:	80a3      	strh	r3, [r4, #4]
 8009cce:	bd10      	pop	{r4, pc}

08009cd0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009cd0:	6803      	ldr	r3, [r0, #0]
 8009cd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009cd4:	4718      	bx	r3

08009cd6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009cd6:	4770      	bx	lr

08009cd8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009cd8:	4a02      	ldr	r2, [pc, #8]	; (8009ce4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009cda:	6002      	str	r2, [r0, #0]
 8009cdc:	2200      	movs	r2, #0
 8009cde:	8082      	strh	r2, [r0, #4]
 8009ce0:	4770      	bx	lr
 8009ce2:	bf00      	nop
 8009ce4:	080222a4 	.word	0x080222a4

08009ce8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009ce8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009cea:	2000      	movs	r0, #0
 8009cec:	b12b      	cbz	r3, 8009cfa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009cee:	b920      	cbnz	r0, 8009cfa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009cf0:	1a5a      	subs	r2, r3, r1
 8009cf2:	4250      	negs	r0, r2
 8009cf4:	4150      	adcs	r0, r2
 8009cf6:	699b      	ldr	r3, [r3, #24]
 8009cf8:	e7f8      	b.n	8009cec <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009cfa:	4770      	bx	lr

08009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009cfc:	2300      	movs	r3, #0
 8009cfe:	6148      	str	r0, [r1, #20]
 8009d00:	618b      	str	r3, [r1, #24]
 8009d02:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009d04:	b913      	cbnz	r3, 8009d0c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8009d06:	6281      	str	r1, [r0, #40]	; 0x28
 8009d08:	4770      	bx	lr
 8009d0a:	4613      	mov	r3, r2
 8009d0c:	699a      	ldr	r2, [r3, #24]
 8009d0e:	2a00      	cmp	r2, #0
 8009d10:	d1fb      	bne.n	8009d0a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8009d12:	6199      	str	r1, [r3, #24]
 8009d14:	4770      	bx	lr

08009d16 <_ZN8touchgfx9Container9removeAllEv>:
 8009d16:	2200      	movs	r2, #0
 8009d18:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009d1a:	b123      	cbz	r3, 8009d26 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009d1c:	6999      	ldr	r1, [r3, #24]
 8009d1e:	6281      	str	r1, [r0, #40]	; 0x28
 8009d20:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009d24:	e7f8      	b.n	8009d18 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009d26:	4770      	bx	lr

08009d28 <_ZN8touchgfx9Container6unlinkEv>:
 8009d28:	2300      	movs	r3, #0
 8009d2a:	6283      	str	r3, [r0, #40]	; 0x28
 8009d2c:	4770      	bx	lr

08009d2e <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009d2e:	2200      	movs	r2, #0
 8009d30:	8002      	strh	r2, [r0, #0]
 8009d32:	8042      	strh	r2, [r0, #2]
 8009d34:	8082      	strh	r2, [r0, #4]
 8009d36:	80c2      	strh	r2, [r0, #6]
 8009d38:	4770      	bx	lr

08009d3a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009d3a:	b570      	push	{r4, r5, r6, lr}
 8009d3c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009d3e:	460d      	mov	r5, r1
 8009d40:	4616      	mov	r6, r2
 8009d42:	b13c      	cbz	r4, 8009d54 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009d44:	6823      	ldr	r3, [r4, #0]
 8009d46:	4620      	mov	r0, r4
 8009d48:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009d4a:	4632      	mov	r2, r6
 8009d4c:	4629      	mov	r1, r5
 8009d4e:	4798      	blx	r3
 8009d50:	69a4      	ldr	r4, [r4, #24]
 8009d52:	e7f6      	b.n	8009d42 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009d54:	bd70      	pop	{r4, r5, r6, pc}

08009d56 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009d56:	b538      	push	{r3, r4, r5, lr}
 8009d58:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009d5a:	460d      	mov	r5, r1
 8009d5c:	b134      	cbz	r4, 8009d6c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009d5e:	682b      	ldr	r3, [r5, #0]
 8009d60:	4621      	mov	r1, r4
 8009d62:	689b      	ldr	r3, [r3, #8]
 8009d64:	4628      	mov	r0, r5
 8009d66:	4798      	blx	r3
 8009d68:	69a4      	ldr	r4, [r4, #24]
 8009d6a:	e7f7      	b.n	8009d5c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009d6c:	bd38      	pop	{r3, r4, r5, pc}

08009d6e <_ZNK8touchgfx9Container17invalidateContentEv>:
 8009d6e:	b510      	push	{r4, lr}
 8009d70:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009d72:	b12c      	cbz	r4, 8009d80 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 8009d74:	6823      	ldr	r3, [r4, #0]
 8009d76:	4620      	mov	r0, r4
 8009d78:	699b      	ldr	r3, [r3, #24]
 8009d7a:	4798      	blx	r3
 8009d7c:	69a4      	ldr	r4, [r4, #24]
 8009d7e:	e7f8      	b.n	8009d72 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 8009d80:	bd10      	pop	{r4, pc}

08009d82 <_ZN8touchgfx9ContainerD1Ev>:
 8009d82:	4770      	bx	lr

08009d84 <_ZN8touchgfx9ContainerD0Ev>:
 8009d84:	b510      	push	{r4, lr}
 8009d86:	212c      	movs	r1, #44	; 0x2c
 8009d88:	4604      	mov	r4, r0
 8009d8a:	f015 fbbf 	bl	801f50c <_ZdlPvj>
 8009d8e:	4620      	mov	r0, r4
 8009d90:	bd10      	pop	{r4, pc}

08009d92 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009d92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009d94:	b19b      	cbz	r3, 8009dbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009d96:	428b      	cmp	r3, r1
 8009d98:	d109      	bne.n	8009dae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8009d9a:	699a      	ldr	r2, [r3, #24]
 8009d9c:	2100      	movs	r1, #0
 8009d9e:	6159      	str	r1, [r3, #20]
 8009da0:	6282      	str	r2, [r0, #40]	; 0x28
 8009da2:	b902      	cbnz	r2, 8009da6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009da4:	4770      	bx	lr
 8009da6:	6199      	str	r1, [r3, #24]
 8009da8:	4770      	bx	lr
 8009daa:	4613      	mov	r3, r2
 8009dac:	b13a      	cbz	r2, 8009dbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009dae:	699a      	ldr	r2, [r3, #24]
 8009db0:	428a      	cmp	r2, r1
 8009db2:	d1fa      	bne.n	8009daa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009db4:	698a      	ldr	r2, [r1, #24]
 8009db6:	619a      	str	r2, [r3, #24]
 8009db8:	2300      	movs	r3, #0
 8009dba:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009dbe:	4770      	bx	lr

08009dc0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009dc0:	b410      	push	{r4}
 8009dc2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009dc4:	4604      	mov	r4, r0
 8009dc6:	b92b      	cbnz	r3, 8009dd4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009dc8:	6803      	ldr	r3, [r0, #0]
 8009dca:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009dce:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009dd0:	4611      	mov	r1, r2
 8009dd2:	4718      	bx	r3
 8009dd4:	b941      	cbnz	r1, 8009de8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009dd6:	6193      	str	r3, [r2, #24]
 8009dd8:	6282      	str	r2, [r0, #40]	; 0x28
 8009dda:	6154      	str	r4, [r2, #20]
 8009ddc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009de0:	4770      	bx	lr
 8009de2:	4603      	mov	r3, r0
 8009de4:	2800      	cmp	r0, #0
 8009de6:	d0f9      	beq.n	8009ddc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009de8:	4299      	cmp	r1, r3
 8009dea:	6998      	ldr	r0, [r3, #24]
 8009dec:	d1f9      	bne.n	8009de2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009dee:	6190      	str	r0, [r2, #24]
 8009df0:	618a      	str	r2, [r1, #24]
 8009df2:	e7f2      	b.n	8009dda <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08009df4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009df4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009df8:	461f      	mov	r7, r3
 8009dfa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009dfe:	460d      	mov	r5, r1
 8009e00:	4616      	mov	r6, r2
 8009e02:	b103      	cbz	r3, 8009e06 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009e04:	6038      	str	r0, [r7, #0]
 8009e06:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009e08:	b314      	cbz	r4, 8009e50 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009e0a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009e0e:	b1eb      	cbz	r3, 8009e4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009e10:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009e14:	428d      	cmp	r5, r1
 8009e16:	db19      	blt.n	8009e4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009e18:	8923      	ldrh	r3, [r4, #8]
 8009e1a:	b289      	uxth	r1, r1
 8009e1c:	440b      	add	r3, r1
 8009e1e:	b21b      	sxth	r3, r3
 8009e20:	429d      	cmp	r5, r3
 8009e22:	da13      	bge.n	8009e4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009e24:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009e28:	4296      	cmp	r6, r2
 8009e2a:	db0f      	blt.n	8009e4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009e2c:	8963      	ldrh	r3, [r4, #10]
 8009e2e:	b292      	uxth	r2, r2
 8009e30:	4413      	add	r3, r2
 8009e32:	b21b      	sxth	r3, r3
 8009e34:	429e      	cmp	r6, r3
 8009e36:	da09      	bge.n	8009e4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009e38:	6823      	ldr	r3, [r4, #0]
 8009e3a:	1ab2      	subs	r2, r6, r2
 8009e3c:	1a69      	subs	r1, r5, r1
 8009e3e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8009e42:	b212      	sxth	r2, r2
 8009e44:	463b      	mov	r3, r7
 8009e46:	b209      	sxth	r1, r1
 8009e48:	4620      	mov	r0, r4
 8009e4a:	47c0      	blx	r8
 8009e4c:	69a4      	ldr	r4, [r4, #24]
 8009e4e:	e7db      	b.n	8009e08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009e50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009e54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8009e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e58:	4c6e      	ldr	r4, [pc, #440]	; (800a014 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8009e5a:	b0a1      	sub	sp, #132	; 0x84
 8009e5c:	6824      	ldr	r4, [r4, #0]
 8009e5e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8009e60:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8009e64:	9303      	str	r3, [sp, #12]
 8009e66:	2400      	movs	r4, #0
 8009e68:	802c      	strh	r4, [r5, #0]
 8009e6a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8009e6c:	802c      	strh	r4, [r5, #0]
 8009e6e:	601c      	str	r4, [r3, #0]
 8009e70:	4606      	mov	r6, r0
 8009e72:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8009e76:	f7ff ffbd 	bl	8009df4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009e7a:	f1b9 0f03 	cmp.w	r9, #3
 8009e7e:	f340 80c2 	ble.w	800a006 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8009e82:	4631      	mov	r1, r6
 8009e84:	a80c      	add	r0, sp, #48	; 0x30
 8009e86:	f007 f857 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009e8a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8009e8e:	9306      	str	r3, [sp, #24]
 8009e90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009e94:	9307      	str	r3, [sp, #28]
 8009e96:	9b03      	ldr	r3, [sp, #12]
 8009e98:	f8d3 a000 	ldr.w	sl, [r3]
 8009e9c:	f1ba 0f00 	cmp.w	sl, #0
 8009ea0:	f000 80b4 	beq.w	800a00c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009ea4:	4651      	mov	r1, sl
 8009ea6:	a810      	add	r0, sp, #64	; 0x40
 8009ea8:	f007 f846 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009eac:	9b01      	ldr	r3, [sp, #4]
 8009eae:	9a06      	ldr	r2, [sp, #24]
 8009eb0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8009eb4:	189d      	adds	r5, r3, r2
 8009eb6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8009eba:	9a07      	ldr	r2, [sp, #28]
 8009ebc:	2002      	movs	r0, #2
 8009ebe:	fb91 f1f0 	sdiv	r1, r1, r0
 8009ec2:	4419      	add	r1, r3
 8009ec4:	1a6d      	subs	r5, r5, r1
 8009ec6:	9b02      	ldr	r3, [sp, #8]
 8009ec8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8009ecc:	4413      	add	r3, r2
 8009ece:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8009ed2:	fb92 f2f0 	sdiv	r2, r2, r0
 8009ed6:	440a      	add	r2, r1
 8009ed8:	1a9b      	subs	r3, r3, r2
 8009eda:	435b      	muls	r3, r3
 8009edc:	fb05 3505 	mla	r5, r5, r5, r3
 8009ee0:	4f4d      	ldr	r7, [pc, #308]	; (800a018 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8009ee2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009ee4:	ac10      	add	r4, sp, #64	; 0x40
 8009ee6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009ee8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009eea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009eec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009eee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009ef0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009ef4:	f1b9 0f0c 	cmp.w	r9, #12
 8009ef8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009efc:	f04f 0303 	mov.w	r3, #3
 8009f00:	bfc8      	it	gt
 8009f02:	4698      	movgt	r8, r3
 8009f04:	f8cd 9000 	str.w	r9, [sp]
 8009f08:	f04f 0400 	mov.w	r4, #0
 8009f0c:	bfdc      	itt	le
 8009f0e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8009f12:	fb92 f8f3 	sdivle	r8, r2, r3
 8009f16:	1c63      	adds	r3, r4, #1
 8009f18:	aa10      	add	r2, sp, #64	; 0x40
 8009f1a:	f004 0401 	and.w	r4, r4, #1
 8009f1e:	9308      	str	r3, [sp, #32]
 8009f20:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8009f24:	9b00      	ldr	r3, [sp, #0]
 8009f26:	fb93 f3f8 	sdiv	r3, r3, r8
 8009f2a:	b29b      	uxth	r3, r3
 8009f2c:	3404      	adds	r4, #4
 8009f2e:	f04f 0b00 	mov.w	fp, #0
 8009f32:	9304      	str	r3, [sp, #16]
 8009f34:	9a04      	ldr	r2, [sp, #16]
 8009f36:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009f3a:	fb13 f302 	smulbb	r3, r3, r2
 8009f3e:	9a01      	ldr	r2, [sp, #4]
 8009f40:	b29b      	uxth	r3, r3
 8009f42:	1899      	adds	r1, r3, r2
 8009f44:	9305      	str	r3, [sp, #20]
 8009f46:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009f4a:	b209      	sxth	r1, r1
 8009f4c:	4299      	cmp	r1, r3
 8009f4e:	db4d      	blt.n	8009fec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009f50:	8932      	ldrh	r2, [r6, #8]
 8009f52:	4413      	add	r3, r2
 8009f54:	b21b      	sxth	r3, r3
 8009f56:	4299      	cmp	r1, r3
 8009f58:	da48      	bge.n	8009fec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009f5a:	9b04      	ldr	r3, [sp, #16]
 8009f5c:	6827      	ldr	r7, [r4, #0]
 8009f5e:	fb17 f703 	smulbb	r7, r7, r3
 8009f62:	9b02      	ldr	r3, [sp, #8]
 8009f64:	b2bf      	uxth	r7, r7
 8009f66:	18fa      	adds	r2, r7, r3
 8009f68:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009f6c:	b212      	sxth	r2, r2
 8009f6e:	429a      	cmp	r2, r3
 8009f70:	db3c      	blt.n	8009fec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009f72:	8970      	ldrh	r0, [r6, #10]
 8009f74:	4403      	add	r3, r0
 8009f76:	b21b      	sxth	r3, r3
 8009f78:	429a      	cmp	r2, r3
 8009f7a:	da37      	bge.n	8009fec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009f7c:	2300      	movs	r3, #0
 8009f7e:	930b      	str	r3, [sp, #44]	; 0x2c
 8009f80:	4630      	mov	r0, r6
 8009f82:	ab0b      	add	r3, sp, #44	; 0x2c
 8009f84:	f7ff ff36 	bl	8009df4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009f88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009f8a:	b37a      	cbz	r2, 8009fec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009f8c:	4552      	cmp	r2, sl
 8009f8e:	d02d      	beq.n	8009fec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009f90:	4611      	mov	r1, r2
 8009f92:	a80e      	add	r0, sp, #56	; 0x38
 8009f94:	9209      	str	r2, [sp, #36]	; 0x24
 8009f96:	f006 ffcf 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009f9a:	9a06      	ldr	r2, [sp, #24]
 8009f9c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8009fa0:	9b01      	ldr	r3, [sp, #4]
 8009fa2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8009fa6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8009faa:	4413      	add	r3, r2
 8009fac:	f04f 0e02 	mov.w	lr, #2
 8009fb0:	fb91 f1fe 	sdiv	r1, r1, lr
 8009fb4:	4401      	add	r1, r0
 8009fb6:	1a58      	subs	r0, r3, r1
 8009fb8:	9a07      	ldr	r2, [sp, #28]
 8009fba:	9b02      	ldr	r3, [sp, #8]
 8009fbc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8009fc0:	fb9c fcfe 	sdiv	ip, ip, lr
 8009fc4:	4413      	add	r3, r2
 8009fc6:	448c      	add	ip, r1
 8009fc8:	eba3 030c 	sub.w	r3, r3, ip
 8009fcc:	435b      	muls	r3, r3
 8009fce:	fb00 3300 	mla	r3, r0, r0, r3
 8009fd2:	42ab      	cmp	r3, r5
 8009fd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009fd6:	d208      	bcs.n	8009fea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009fd8:	9803      	ldr	r0, [sp, #12]
 8009fda:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009fdc:	6001      	str	r1, [r0, #0]
 8009fde:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8009fe0:	9805      	ldr	r0, [sp, #20]
 8009fe2:	8008      	strh	r0, [r1, #0]
 8009fe4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8009fe6:	461d      	mov	r5, r3
 8009fe8:	800f      	strh	r7, [r1, #0]
 8009fea:	4692      	mov	sl, r2
 8009fec:	f10b 0b01 	add.w	fp, fp, #1
 8009ff0:	f1bb 0f04 	cmp.w	fp, #4
 8009ff4:	f104 0408 	add.w	r4, r4, #8
 8009ff8:	d19c      	bne.n	8009f34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8009ffa:	9b00      	ldr	r3, [sp, #0]
 8009ffc:	9c08      	ldr	r4, [sp, #32]
 8009ffe:	444b      	add	r3, r9
 800a000:	4544      	cmp	r4, r8
 800a002:	9300      	str	r3, [sp, #0]
 800a004:	d187      	bne.n	8009f16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a006:	b021      	add	sp, #132	; 0x84
 800a008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a00c:	f04f 35ff 	mov.w	r5, #4294967295
 800a010:	e766      	b.n	8009ee0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a012:	bf00      	nop
 800a014:	20017564 	.word	0x20017564
 800a018:	080207b8 	.word	0x080207b8

0800a01c <_ZN8touchgfx4RectaNERKS0_>:
 800a01c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a020:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a024:	888c      	ldrh	r4, [r1, #4]
 800a026:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a02a:	443c      	add	r4, r7
 800a02c:	b2a4      	uxth	r4, r4
 800a02e:	fa0f f884 	sxth.w	r8, r4
 800a032:	45c1      	cmp	r9, r8
 800a034:	da2f      	bge.n	800a096 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a036:	8882      	ldrh	r2, [r0, #4]
 800a038:	444a      	add	r2, r9
 800a03a:	b292      	uxth	r2, r2
 800a03c:	fa0f fe82 	sxth.w	lr, r2
 800a040:	4577      	cmp	r7, lr
 800a042:	da28      	bge.n	800a096 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a044:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a048:	88cb      	ldrh	r3, [r1, #6]
 800a04a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a04e:	442b      	add	r3, r5
 800a050:	b21b      	sxth	r3, r3
 800a052:	429e      	cmp	r6, r3
 800a054:	da1f      	bge.n	800a096 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a056:	88c3      	ldrh	r3, [r0, #6]
 800a058:	4433      	add	r3, r6
 800a05a:	b29b      	uxth	r3, r3
 800a05c:	fa0f fc83 	sxth.w	ip, r3
 800a060:	4565      	cmp	r5, ip
 800a062:	da18      	bge.n	800a096 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a064:	454f      	cmp	r7, r9
 800a066:	bfb8      	it	lt
 800a068:	464f      	movlt	r7, r9
 800a06a:	42b5      	cmp	r5, r6
 800a06c:	bfb8      	it	lt
 800a06e:	4635      	movlt	r5, r6
 800a070:	45f0      	cmp	r8, lr
 800a072:	bfd8      	it	le
 800a074:	4622      	movle	r2, r4
 800a076:	1bd2      	subs	r2, r2, r7
 800a078:	8082      	strh	r2, [r0, #4]
 800a07a:	884a      	ldrh	r2, [r1, #2]
 800a07c:	88c9      	ldrh	r1, [r1, #6]
 800a07e:	8007      	strh	r7, [r0, #0]
 800a080:	440a      	add	r2, r1
 800a082:	b292      	uxth	r2, r2
 800a084:	b211      	sxth	r1, r2
 800a086:	458c      	cmp	ip, r1
 800a088:	bfa8      	it	ge
 800a08a:	4613      	movge	r3, r2
 800a08c:	1b5b      	subs	r3, r3, r5
 800a08e:	80c3      	strh	r3, [r0, #6]
 800a090:	8045      	strh	r5, [r0, #2]
 800a092:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a096:	2300      	movs	r3, #0
 800a098:	8003      	strh	r3, [r0, #0]
 800a09a:	8043      	strh	r3, [r0, #2]
 800a09c:	8083      	strh	r3, [r0, #4]
 800a09e:	80c3      	strh	r3, [r0, #6]
 800a0a0:	e7f7      	b.n	800a092 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a0a2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a0a6:	2b00      	cmp	r3, #0
 800a0a8:	dd06      	ble.n	800a0b8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a0aa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a0ae:	2800      	cmp	r0, #0
 800a0b0:	bfcc      	ite	gt
 800a0b2:	2000      	movgt	r0, #0
 800a0b4:	2001      	movle	r0, #1
 800a0b6:	4770      	bx	lr
 800a0b8:	2001      	movs	r0, #1
 800a0ba:	4770      	bx	lr

0800a0bc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a0bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0c0:	2300      	movs	r3, #0
 800a0c2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a0c4:	8003      	strh	r3, [r0, #0]
 800a0c6:	4604      	mov	r4, r0
 800a0c8:	8043      	strh	r3, [r0, #2]
 800a0ca:	8083      	strh	r3, [r0, #4]
 800a0cc:	80c3      	strh	r3, [r0, #6]
 800a0ce:	2d00      	cmp	r5, #0
 800a0d0:	d040      	beq.n	800a154 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a0d2:	1d28      	adds	r0, r5, #4
 800a0d4:	f7ff ffe5 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a0d8:	b988      	cbnz	r0, 800a0fe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a0da:	4620      	mov	r0, r4
 800a0dc:	f7ff ffe1 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a0e0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a0e4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a0e8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a0ec:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a0f0:	b138      	cbz	r0, 800a102 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a0f2:	8022      	strh	r2, [r4, #0]
 800a0f4:	8063      	strh	r3, [r4, #2]
 800a0f6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a0fa:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a0fe:	69ad      	ldr	r5, [r5, #24]
 800a100:	e7e5      	b.n	800a0ce <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a102:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a106:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a10a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a10e:	4290      	cmp	r0, r2
 800a110:	4607      	mov	r7, r0
 800a112:	bfa8      	it	ge
 800a114:	4617      	movge	r7, r2
 800a116:	4472      	add	r2, lr
 800a118:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a11c:	8027      	strh	r7, [r4, #0]
 800a11e:	4299      	cmp	r1, r3
 800a120:	460e      	mov	r6, r1
 800a122:	4440      	add	r0, r8
 800a124:	bfa8      	it	ge
 800a126:	461e      	movge	r6, r3
 800a128:	4471      	add	r1, lr
 800a12a:	4463      	add	r3, ip
 800a12c:	b200      	sxth	r0, r0
 800a12e:	b212      	sxth	r2, r2
 800a130:	b209      	sxth	r1, r1
 800a132:	b21b      	sxth	r3, r3
 800a134:	4290      	cmp	r0, r2
 800a136:	bfac      	ite	ge
 800a138:	ebc7 0200 	rsbge	r2, r7, r0
 800a13c:	ebc7 0202 	rsblt	r2, r7, r2
 800a140:	4299      	cmp	r1, r3
 800a142:	bfac      	ite	ge
 800a144:	ebc6 0301 	rsbge	r3, r6, r1
 800a148:	ebc6 0303 	rsblt	r3, r6, r3
 800a14c:	8066      	strh	r6, [r4, #2]
 800a14e:	80a2      	strh	r2, [r4, #4]
 800a150:	80e3      	strh	r3, [r4, #6]
 800a152:	e7d4      	b.n	800a0fe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a154:	4620      	mov	r0, r4
 800a156:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a15a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a15a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a15e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a162:	b383      	cbz	r3, 800a1c6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a164:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a166:	b374      	cbz	r4, 800a1c6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a168:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a16c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a170:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a174:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a178:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a17c:	b303      	cbz	r3, 800a1c0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a17e:	4668      	mov	r0, sp
 800a180:	1d21      	adds	r1, r4, #4
 800a182:	f8ad 5000 	strh.w	r5, [sp]
 800a186:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a18a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a18e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a192:	f7ff ff43 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800a196:	4668      	mov	r0, sp
 800a198:	f7ff ff83 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a19c:	b980      	cbnz	r0, 800a1c0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a19e:	f8bd 3000 	ldrh.w	r3, [sp]
 800a1a2:	88a2      	ldrh	r2, [r4, #4]
 800a1a4:	1a9b      	subs	r3, r3, r2
 800a1a6:	f8ad 3000 	strh.w	r3, [sp]
 800a1aa:	88e2      	ldrh	r2, [r4, #6]
 800a1ac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a1b0:	1a9b      	subs	r3, r3, r2
 800a1b2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a1b6:	6823      	ldr	r3, [r4, #0]
 800a1b8:	4669      	mov	r1, sp
 800a1ba:	689b      	ldr	r3, [r3, #8]
 800a1bc:	4620      	mov	r0, r4
 800a1be:	4798      	blx	r3
 800a1c0:	69a4      	ldr	r4, [r4, #24]
 800a1c2:	2c00      	cmp	r4, #0
 800a1c4:	d1d8      	bne.n	800a178 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a1c6:	b002      	add	sp, #8
 800a1c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a1cc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a1cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a1ce:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a1d2:	460d      	mov	r5, r1
 800a1d4:	4616      	mov	r6, r2
 800a1d6:	b323      	cbz	r3, 800a222 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a1d8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a1da:	b314      	cbz	r4, 800a222 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a1dc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a1e0:	b1eb      	cbz	r3, 800a21e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a1e2:	6828      	ldr	r0, [r5, #0]
 800a1e4:	6869      	ldr	r1, [r5, #4]
 800a1e6:	466b      	mov	r3, sp
 800a1e8:	c303      	stmia	r3!, {r0, r1}
 800a1ea:	4668      	mov	r0, sp
 800a1ec:	1d21      	adds	r1, r4, #4
 800a1ee:	f7ff ff15 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800a1f2:	4668      	mov	r0, sp
 800a1f4:	f7ff ff55 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a1f8:	b988      	cbnz	r0, 800a21e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a1fa:	f8bd 3000 	ldrh.w	r3, [sp]
 800a1fe:	88a2      	ldrh	r2, [r4, #4]
 800a200:	1a9b      	subs	r3, r3, r2
 800a202:	f8ad 3000 	strh.w	r3, [sp]
 800a206:	88e2      	ldrh	r2, [r4, #6]
 800a208:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a20c:	1a9b      	subs	r3, r3, r2
 800a20e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a212:	6823      	ldr	r3, [r4, #0]
 800a214:	4632      	mov	r2, r6
 800a216:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a218:	4669      	mov	r1, sp
 800a21a:	4620      	mov	r0, r4
 800a21c:	4798      	blx	r3
 800a21e:	69a4      	ldr	r4, [r4, #24]
 800a220:	e7db      	b.n	800a1da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a222:	b002      	add	sp, #8
 800a224:	bd70      	pop	{r4, r5, r6, pc}

0800a226 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a226:	b513      	push	{r0, r1, r4, lr}
 800a228:	6803      	ldr	r3, [r0, #0]
 800a22a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800a22e:	2300      	movs	r3, #0
 800a230:	e9cd 3300 	strd	r3, r3, [sp]
 800a234:	466b      	mov	r3, sp
 800a236:	47a0      	blx	r4
 800a238:	b002      	add	sp, #8
 800a23a:	bd10      	pop	{r4, pc}

0800a23c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a23c:	2301      	movs	r3, #1
 800a23e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a242:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a246:	4770      	bx	lr

0800a248 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a248:	2301      	movs	r3, #1
 800a24a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a24e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a252:	4770      	bx	lr

0800a254 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a254:	6843      	ldr	r3, [r0, #4]
 800a256:	2201      	movs	r2, #1
 800a258:	725a      	strb	r2, [r3, #9]
 800a25a:	6840      	ldr	r0, [r0, #4]
 800a25c:	6803      	ldr	r3, [r0, #0]
 800a25e:	691b      	ldr	r3, [r3, #16]
 800a260:	4718      	bx	r3

0800a262 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a262:	6840      	ldr	r0, [r0, #4]
 800a264:	6803      	ldr	r3, [r0, #0]
 800a266:	689b      	ldr	r3, [r3, #8]
 800a268:	4718      	bx	r3

0800a26a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a26a:	b530      	push	{r4, r5, lr}
 800a26c:	b08b      	sub	sp, #44	; 0x2c
 800a26e:	6804      	ldr	r4, [r0, #0]
 800a270:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800a274:	9509      	str	r5, [sp, #36]	; 0x24
 800a276:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800a27a:	9508      	str	r5, [sp, #32]
 800a27c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800a280:	9507      	str	r5, [sp, #28]
 800a282:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800a286:	9506      	str	r5, [sp, #24]
 800a288:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800a28c:	9505      	str	r5, [sp, #20]
 800a28e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800a292:	9504      	str	r5, [sp, #16]
 800a294:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800a298:	9503      	str	r5, [sp, #12]
 800a29a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a29e:	9502      	str	r5, [sp, #8]
 800a2a0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800a2a4:	e9cd 3500 	strd	r3, r5, [sp]
 800a2a8:	4613      	mov	r3, r2
 800a2aa:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800a2ac:	2200      	movs	r2, #0
 800a2ae:	47a0      	blx	r4
 800a2b0:	b00b      	add	sp, #44	; 0x2c
 800a2b2:	bd30      	pop	{r4, r5, pc}

0800a2b4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a2b4:	4b04      	ldr	r3, [pc, #16]	; (800a2c8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a2b6:	781b      	ldrb	r3, [r3, #0]
 800a2b8:	b123      	cbz	r3, 800a2c4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a2ba:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800a2be:	f080 0001 	eor.w	r0, r0, #1
 800a2c2:	4770      	bx	lr
 800a2c4:	2001      	movs	r0, #1
 800a2c6:	4770      	bx	lr
 800a2c8:	20017562 	.word	0x20017562

0800a2cc <_ZN8touchgfx3HAL8endFrameEv>:
 800a2cc:	b510      	push	{r4, lr}
 800a2ce:	4604      	mov	r4, r0
 800a2d0:	6840      	ldr	r0, [r0, #4]
 800a2d2:	6803      	ldr	r3, [r0, #0]
 800a2d4:	689b      	ldr	r3, [r3, #8]
 800a2d6:	4798      	blx	r3
 800a2d8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800a2dc:	b113      	cbz	r3, 800a2e4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a2de:	2301      	movs	r3, #1
 800a2e0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a2e4:	bd10      	pop	{r4, pc}

0800a2e6 <_ZN8touchgfx3HAL10initializeEv>:
 800a2e6:	b510      	push	{r4, lr}
 800a2e8:	4604      	mov	r4, r0
 800a2ea:	f7f6 fafd 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a2ee:	6860      	ldr	r0, [r4, #4]
 800a2f0:	6803      	ldr	r3, [r0, #0]
 800a2f2:	68db      	ldr	r3, [r3, #12]
 800a2f4:	4798      	blx	r3
 800a2f6:	68e0      	ldr	r0, [r4, #12]
 800a2f8:	6803      	ldr	r3, [r0, #0]
 800a2fa:	689b      	ldr	r3, [r3, #8]
 800a2fc:	4798      	blx	r3
 800a2fe:	6823      	ldr	r3, [r4, #0]
 800a300:	4620      	mov	r0, r4
 800a302:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a304:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a308:	4718      	bx	r3
	...

0800a30c <_ZN8touchgfx3HAL4tickEv>:
 800a30c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a30e:	6803      	ldr	r3, [r0, #0]
 800a310:	4d5b      	ldr	r5, [pc, #364]	; (800a480 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800a312:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a316:	4604      	mov	r4, r0
 800a318:	4798      	blx	r3
 800a31a:	2800      	cmp	r0, #0
 800a31c:	f000 8095 	beq.w	800a44a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800a320:	2001      	movs	r0, #1
 800a322:	f7f6 fa0d 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a326:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800a32a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a32e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800a332:	2600      	movs	r6, #0
 800a334:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800a338:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800a33c:	b133      	cbz	r3, 800a34c <_ZN8touchgfx3HAL4tickEv+0x40>
 800a33e:	6823      	ldr	r3, [r4, #0]
 800a340:	4620      	mov	r0, r4
 800a342:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800a346:	4798      	blx	r3
 800a348:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800a34c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800a350:	6862      	ldr	r2, [r4, #4]
 800a352:	f083 0301 	eor.w	r3, r3, #1
 800a356:	7253      	strb	r3, [r2, #9]
 800a358:	2601      	movs	r6, #1
 800a35a:	702e      	strb	r6, [r5, #0]
 800a35c:	f005 fdba 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
 800a360:	6803      	ldr	r3, [r0, #0]
 800a362:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a364:	4798      	blx	r3
 800a366:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a36a:	b90b      	cbnz	r3, 800a370 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a36c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800a370:	f005 fdb0 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
 800a374:	6803      	ldr	r3, [r0, #0]
 800a376:	695b      	ldr	r3, [r3, #20]
 800a378:	4798      	blx	r3
 800a37a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a37c:	6803      	ldr	r3, [r0, #0]
 800a37e:	691b      	ldr	r3, [r3, #16]
 800a380:	4798      	blx	r3
 800a382:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a386:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800a38a:	3b01      	subs	r3, #1
 800a38c:	b2db      	uxtb	r3, r3
 800a38e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a392:	b10a      	cbz	r2, 800a398 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800a394:	2b00      	cmp	r3, #0
 800a396:	d1eb      	bne.n	800a370 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a398:	4a3a      	ldr	r2, [pc, #232]	; (800a484 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800a39a:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800a39e:	7813      	ldrb	r3, [r2, #0]
 800a3a0:	3301      	adds	r3, #1
 800a3a2:	b25b      	sxtb	r3, r3
 800a3a4:	4299      	cmp	r1, r3
 800a3a6:	7013      	strb	r3, [r2, #0]
 800a3a8:	dc10      	bgt.n	800a3cc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800a3aa:	68e0      	ldr	r0, [r4, #12]
 800a3ac:	2300      	movs	r3, #0
 800a3ae:	7013      	strb	r3, [r2, #0]
 800a3b0:	6803      	ldr	r3, [r0, #0]
 800a3b2:	aa03      	add	r2, sp, #12
 800a3b4:	68db      	ldr	r3, [r3, #12]
 800a3b6:	a902      	add	r1, sp, #8
 800a3b8:	4798      	blx	r3
 800a3ba:	6823      	ldr	r3, [r4, #0]
 800a3bc:	2800      	cmp	r0, #0
 800a3be:	d050      	beq.n	800a462 <_ZN8touchgfx3HAL4tickEv+0x156>
 800a3c0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800a3c4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a3c8:	4620      	mov	r0, r4
 800a3ca:	4798      	blx	r3
 800a3cc:	6960      	ldr	r0, [r4, #20]
 800a3ce:	2300      	movs	r3, #0
 800a3d0:	f88d 3007 	strb.w	r3, [sp, #7]
 800a3d4:	b158      	cbz	r0, 800a3ee <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a3d6:	6803      	ldr	r3, [r0, #0]
 800a3d8:	f10d 0107 	add.w	r1, sp, #7
 800a3dc:	68db      	ldr	r3, [r3, #12]
 800a3de:	4798      	blx	r3
 800a3e0:	b128      	cbz	r0, 800a3ee <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a3e2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a3e4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a3e8:	6803      	ldr	r3, [r0, #0]
 800a3ea:	68db      	ldr	r3, [r3, #12]
 800a3ec:	4798      	blx	r3
 800a3ee:	f104 001c 	add.w	r0, r4, #28
 800a3f2:	f014 fcc3 	bl	801ed7c <_ZN8touchgfx8Gestures4tickEv>
 800a3f6:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800a3fa:	b30b      	cbz	r3, 800a440 <_ZN8touchgfx3HAL4tickEv+0x134>
 800a3fc:	6920      	ldr	r0, [r4, #16]
 800a3fe:	6803      	ldr	r3, [r0, #0]
 800a400:	691b      	ldr	r3, [r3, #16]
 800a402:	4798      	blx	r3
 800a404:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a406:	4606      	mov	r6, r0
 800a408:	b903      	cbnz	r3, 800a40c <_ZN8touchgfx3HAL4tickEv+0x100>
 800a40a:	6720      	str	r0, [r4, #112]	; 0x70
 800a40c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a40e:	4a1e      	ldr	r2, [pc, #120]	; (800a488 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800a410:	1af3      	subs	r3, r6, r3
 800a412:	4293      	cmp	r3, r2
 800a414:	d914      	bls.n	800a440 <_ZN8touchgfx3HAL4tickEv+0x134>
 800a416:	6920      	ldr	r0, [r4, #16]
 800a418:	6803      	ldr	r3, [r0, #0]
 800a41a:	699b      	ldr	r3, [r3, #24]
 800a41c:	4798      	blx	r3
 800a41e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a420:	2264      	movs	r2, #100	; 0x64
 800a422:	1af3      	subs	r3, r6, r3
 800a424:	fbb3 f3f2 	udiv	r3, r3, r2
 800a428:	fbb0 f0f3 	udiv	r0, r0, r3
 800a42c:	2800      	cmp	r0, #0
 800a42e:	dc1d      	bgt.n	800a46c <_ZN8touchgfx3HAL4tickEv+0x160>
 800a430:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800a434:	6920      	ldr	r0, [r4, #16]
 800a436:	6803      	ldr	r3, [r0, #0]
 800a438:	2100      	movs	r1, #0
 800a43a:	69db      	ldr	r3, [r3, #28]
 800a43c:	4798      	blx	r3
 800a43e:	6726      	str	r6, [r4, #112]	; 0x70
 800a440:	f005 fd48 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
 800a444:	6803      	ldr	r3, [r0, #0]
 800a446:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a448:	4798      	blx	r3
 800a44a:	6823      	ldr	r3, [r4, #0]
 800a44c:	4620      	mov	r0, r4
 800a44e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a452:	4798      	blx	r3
 800a454:	2001      	movs	r0, #1
 800a456:	f7f6 f974 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a45a:	2300      	movs	r3, #0
 800a45c:	702b      	strb	r3, [r5, #0]
 800a45e:	b004      	add	sp, #16
 800a460:	bd70      	pop	{r4, r5, r6, pc}
 800a462:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800a466:	4620      	mov	r0, r4
 800a468:	4798      	blx	r3
 800a46a:	e7af      	b.n	800a3cc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800a46c:	2863      	cmp	r0, #99	; 0x63
 800a46e:	bfcb      	itete	gt
 800a470:	2300      	movgt	r3, #0
 800a472:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800a476:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800a47a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800a47e:	e7d9      	b.n	800a434 <_ZN8touchgfx3HAL4tickEv+0x128>
 800a480:	20017568 	.word	0x20017568
 800a484:	20017569 	.word	0x20017569
 800a488:	05f5e100 	.word	0x05f5e100

0800a48c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a48c:	f7f6 ba5c 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a490 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a490:	6581      	str	r1, [r0, #88]	; 0x58
 800a492:	301c      	adds	r0, #28
 800a494:	f014 bc70 	b.w	801ed78 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a498 <_ZN8touchgfx3HAL5touchEll>:
 800a498:	b530      	push	{r4, r5, lr}
 800a49a:	b087      	sub	sp, #28
 800a49c:	4604      	mov	r4, r0
 800a49e:	a804      	add	r0, sp, #16
 800a4a0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a4a4:	f005 fad8 	bl	800fa58 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a4a8:	9b04      	ldr	r3, [sp, #16]
 800a4aa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a4ae:	a906      	add	r1, sp, #24
 800a4b0:	9b05      	ldr	r3, [sp, #20]
 800a4b2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a4b6:	a803      	add	r0, sp, #12
 800a4b8:	f005 fb20 	bl	800fafc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a4bc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800a4c0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a4c4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a4c8:	f104 001c 	add.w	r0, r4, #28
 800a4cc:	b189      	cbz	r1, 800a4f2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a4ce:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800a4d2:	9300      	str	r3, [sp, #0]
 800a4d4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800a4d8:	4613      	mov	r3, r2
 800a4da:	462a      	mov	r2, r5
 800a4dc:	f014 fc5c 	bl	801ed98 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a4e0:	b128      	cbz	r0, 800a4ee <_ZN8touchgfx3HAL5touchEll+0x56>
 800a4e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a4e6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a4e8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a4ec:	6623      	str	r3, [r4, #96]	; 0x60
 800a4ee:	b007      	add	sp, #28
 800a4f0:	bd30      	pop	{r4, r5, pc}
 800a4f2:	f014 fc91 	bl	801ee18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a4f6:	2301      	movs	r3, #1
 800a4f8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a4fc:	e7f1      	b.n	800a4e2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a4fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a4fe:	b510      	push	{r4, lr}
 800a500:	2b00      	cmp	r3, #0
 800a502:	d046      	beq.n	800a592 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a504:	ea81 0002 	eor.w	r0, r1, r2
 800a508:	07c4      	lsls	r4, r0, #31
 800a50a:	d508      	bpl.n	800a51e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a50c:	440b      	add	r3, r1
 800a50e:	3a01      	subs	r2, #1
 800a510:	428b      	cmp	r3, r1
 800a512:	d93e      	bls.n	800a592 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a514:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a518:	f801 0b01 	strb.w	r0, [r1], #1
 800a51c:	e7f8      	b.n	800a510 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a51e:	07d0      	lsls	r0, r2, #31
 800a520:	bf42      	ittt	mi
 800a522:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a526:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a52a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a52e:	2b01      	cmp	r3, #1
 800a530:	d911      	bls.n	800a556 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a532:	ea81 0402 	eor.w	r4, r1, r2
 800a536:	07a4      	lsls	r4, r4, #30
 800a538:	4610      	mov	r0, r2
 800a53a:	d022      	beq.n	800a582 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800a53c:	f023 0401 	bic.w	r4, r3, #1
 800a540:	440c      	add	r4, r1
 800a542:	428c      	cmp	r4, r1
 800a544:	4602      	mov	r2, r0
 800a546:	d904      	bls.n	800a552 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800a548:	8812      	ldrh	r2, [r2, #0]
 800a54a:	f821 2b02 	strh.w	r2, [r1], #2
 800a54e:	3002      	adds	r0, #2
 800a550:	e7f7      	b.n	800a542 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800a552:	f003 0301 	and.w	r3, r3, #1
 800a556:	f023 0003 	bic.w	r0, r3, #3
 800a55a:	4408      	add	r0, r1
 800a55c:	4288      	cmp	r0, r1
 800a55e:	4614      	mov	r4, r2
 800a560:	d904      	bls.n	800a56c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800a562:	6824      	ldr	r4, [r4, #0]
 800a564:	f841 4b04 	str.w	r4, [r1], #4
 800a568:	3204      	adds	r2, #4
 800a56a:	e7f7      	b.n	800a55c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a56c:	f003 0303 	and.w	r3, r3, #3
 800a570:	440b      	add	r3, r1
 800a572:	3a01      	subs	r2, #1
 800a574:	428b      	cmp	r3, r1
 800a576:	d90c      	bls.n	800a592 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a578:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a57c:	f801 0b01 	strb.w	r0, [r1], #1
 800a580:	e7f8      	b.n	800a574 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a582:	0790      	lsls	r0, r2, #30
 800a584:	d0e7      	beq.n	800a556 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a586:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a58a:	f821 0b02 	strh.w	r0, [r1], #2
 800a58e:	3b02      	subs	r3, #2
 800a590:	e7e1      	b.n	800a556 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a592:	2001      	movs	r0, #1
 800a594:	bd10      	pop	{r4, pc}

0800a596 <_ZN8touchgfx3HAL7noTouchEv>:
 800a596:	b510      	push	{r4, lr}
 800a598:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800a59c:	4604      	mov	r4, r0
 800a59e:	b153      	cbz	r3, 800a5b6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a5a0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800a5a4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800a5a8:	2101      	movs	r1, #1
 800a5aa:	301c      	adds	r0, #28
 800a5ac:	f014 fc34 	bl	801ee18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a5b0:	2300      	movs	r3, #0
 800a5b2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a5b6:	bd10      	pop	{r4, pc}

0800a5b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a5b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a5bc:	b085      	sub	sp, #20
 800a5be:	ad04      	add	r5, sp, #16
 800a5c0:	4604      	mov	r4, r0
 800a5c2:	2000      	movs	r0, #0
 800a5c4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a5c8:	69a0      	ldr	r0, [r4, #24]
 800a5ca:	6806      	ldr	r6, [r0, #0]
 800a5cc:	9501      	str	r5, [sp, #4]
 800a5ce:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800a5d2:	9500      	str	r5, [sp, #0]
 800a5d4:	6835      	ldr	r5, [r6, #0]
 800a5d6:	4699      	mov	r9, r3
 800a5d8:	460f      	mov	r7, r1
 800a5da:	4690      	mov	r8, r2
 800a5dc:	47a8      	blx	r5
 800a5de:	4d10      	ldr	r5, [pc, #64]	; (800a620 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a5e0:	4606      	mov	r6, r0
 800a5e2:	f8a5 9000 	strh.w	r9, [r5]
 800a5e6:	f7f7 fefb 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800a5ea:	6803      	ldr	r3, [r0, #0]
 800a5ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5ee:	4798      	blx	r3
 800a5f0:	b128      	cbz	r0, 800a5fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a5f2:	2801      	cmp	r0, #1
 800a5f4:	d00b      	beq.n	800a60e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a5f6:	4630      	mov	r0, r6
 800a5f8:	b005      	add	sp, #20
 800a5fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a5fe:	882b      	ldrh	r3, [r5, #0]
 800a600:	fb08 7203 	mla	r2, r8, r3, r7
 800a604:	9b03      	ldr	r3, [sp, #12]
 800a606:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a60a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a60c:	e7f3      	b.n	800a5f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a60e:	882a      	ldrh	r2, [r5, #0]
 800a610:	9b03      	ldr	r3, [sp, #12]
 800a612:	fb08 7202 	mla	r2, r8, r2, r7
 800a616:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a61a:	1a9a      	subs	r2, r3, r2
 800a61c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800a61e:	e7ea      	b.n	800a5f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a620:	2001755e 	.word	0x2001755e

0800a624 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a624:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a626:	b08b      	sub	sp, #44	; 0x2c
 800a628:	4617      	mov	r7, r2
 800a62a:	4604      	mov	r4, r0
 800a62c:	460e      	mov	r6, r1
 800a62e:	461d      	mov	r5, r3
 800a630:	f7f7 fed6 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800a634:	6803      	ldr	r3, [r0, #0]
 800a636:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a638:	4798      	blx	r3
 800a63a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800a63e:	9007      	str	r0, [sp, #28]
 800a640:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a644:	4b0d      	ldr	r3, [pc, #52]	; (800a67c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a646:	6822      	ldr	r2, [r4, #0]
 800a648:	881b      	ldrh	r3, [r3, #0]
 800a64a:	9306      	str	r3, [sp, #24]
 800a64c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a650:	9305      	str	r3, [sp, #20]
 800a652:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800a656:	9304      	str	r3, [sp, #16]
 800a658:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a65c:	9303      	str	r3, [sp, #12]
 800a65e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a662:	9302      	str	r3, [sp, #8]
 800a664:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a668:	e9cd 5300 	strd	r5, r3, [sp]
 800a66c:	4631      	mov	r1, r6
 800a66e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800a670:	463b      	mov	r3, r7
 800a672:	2200      	movs	r2, #0
 800a674:	4620      	mov	r0, r4
 800a676:	47a8      	blx	r5
 800a678:	b00b      	add	sp, #44	; 0x2c
 800a67a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a67c:	2001755e 	.word	0x2001755e

0800a680 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800a680:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a684:	4698      	mov	r8, r3
 800a686:	6803      	ldr	r3, [r0, #0]
 800a688:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800a68a:	4b15      	ldr	r3, [pc, #84]	; (800a6e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800a68c:	b08b      	sub	sp, #44	; 0x2c
 800a68e:	4617      	mov	r7, r2
 800a690:	f8b3 9000 	ldrh.w	r9, [r3]
 800a694:	460e      	mov	r6, r1
 800a696:	4604      	mov	r4, r0
 800a698:	f7f7 fea2 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800a69c:	6803      	ldr	r3, [r0, #0]
 800a69e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a6a0:	4798      	blx	r3
 800a6a2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a6a6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a6aa:	2302      	movs	r3, #2
 800a6ac:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800a6b0:	2301      	movs	r3, #1
 800a6b2:	9305      	str	r3, [sp, #20]
 800a6b4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800a6b8:	9304      	str	r3, [sp, #16]
 800a6ba:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a6be:	9303      	str	r3, [sp, #12]
 800a6c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a6c4:	9302      	str	r3, [sp, #8]
 800a6c6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a6ca:	2200      	movs	r2, #0
 800a6cc:	e9cd 8300 	strd	r8, r3, [sp]
 800a6d0:	4631      	mov	r1, r6
 800a6d2:	463b      	mov	r3, r7
 800a6d4:	4620      	mov	r0, r4
 800a6d6:	47a8      	blx	r5
 800a6d8:	b00b      	add	sp, #44	; 0x2c
 800a6da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a6de:	bf00      	nop
 800a6e0:	2001755e 	.word	0x2001755e

0800a6e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800a6e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a6e8:	4698      	mov	r8, r3
 800a6ea:	6803      	ldr	r3, [r0, #0]
 800a6ec:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800a6ee:	4b11      	ldr	r3, [pc, #68]	; (800a734 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800a6f0:	b087      	sub	sp, #28
 800a6f2:	f8b3 9000 	ldrh.w	r9, [r3]
 800a6f6:	460e      	mov	r6, r1
 800a6f8:	4617      	mov	r7, r2
 800a6fa:	4604      	mov	r4, r0
 800a6fc:	f7f7 fe70 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800a700:	6803      	ldr	r3, [r0, #0]
 800a702:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a704:	4798      	blx	r3
 800a706:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800a70a:	f8cd 900c 	str.w	r9, [sp, #12]
 800a70e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800a712:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800a716:	9302      	str	r3, [sp, #8]
 800a718:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800a71c:	9301      	str	r3, [sp, #4]
 800a71e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800a722:	9300      	str	r3, [sp, #0]
 800a724:	463a      	mov	r2, r7
 800a726:	4643      	mov	r3, r8
 800a728:	4631      	mov	r1, r6
 800a72a:	4620      	mov	r0, r4
 800a72c:	47a8      	blx	r5
 800a72e:	b007      	add	sp, #28
 800a730:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a734:	2001755e 	.word	0x2001755e

0800a738 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800a738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a73c:	4604      	mov	r4, r0
 800a73e:	b08f      	sub	sp, #60	; 0x3c
 800a740:	4610      	mov	r0, r2
 800a742:	460d      	mov	r5, r1
 800a744:	4691      	mov	r9, r2
 800a746:	461e      	mov	r6, r3
 800a748:	f008 fd60 	bl	801320c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a74c:	2800      	cmp	r0, #0
 800a74e:	f000 809d 	beq.w	800a88c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800a752:	6823      	ldr	r3, [r4, #0]
 800a754:	f8df b198 	ldr.w	fp, [pc, #408]	; 800a8f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800a758:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a75a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800a8f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800a75e:	4f61      	ldr	r7, [pc, #388]	; (800a8e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a760:	4620      	mov	r0, r4
 800a762:	4798      	blx	r3
 800a764:	6823      	ldr	r3, [r4, #0]
 800a766:	4620      	mov	r0, r4
 800a768:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a76a:	4798      	blx	r3
 800a76c:	f8bb 3000 	ldrh.w	r3, [fp]
 800a770:	9301      	str	r3, [sp, #4]
 800a772:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800a776:	f8ba 3000 	ldrh.w	r3, [sl]
 800a77a:	9302      	str	r3, [sp, #8]
 800a77c:	883b      	ldrh	r3, [r7, #0]
 800a77e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800a782:	9303      	str	r3, [sp, #12]
 800a784:	4b58      	ldr	r3, [pc, #352]	; (800a8e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a786:	9305      	str	r3, [sp, #20]
 800a788:	881a      	ldrh	r2, [r3, #0]
 800a78a:	9204      	str	r2, [sp, #16]
 800a78c:	4640      	mov	r0, r8
 800a78e:	f008 fdd1 	bl	8013334 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a792:	8038      	strh	r0, [r7, #0]
 800a794:	4640      	mov	r0, r8
 800a796:	f008 fe01 	bl	801339c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a79a:	9b05      	ldr	r3, [sp, #20]
 800a79c:	b280      	uxth	r0, r0
 800a79e:	8018      	strh	r0, [r3, #0]
 800a7a0:	4b52      	ldr	r3, [pc, #328]	; (800a8ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800a7a2:	781b      	ldrb	r3, [r3, #0]
 800a7a4:	2b00      	cmp	r3, #0
 800a7a6:	d174      	bne.n	800a892 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800a7a8:	883b      	ldrh	r3, [r7, #0]
 800a7aa:	f8ab 3000 	strh.w	r3, [fp]
 800a7ae:	f8aa 0000 	strh.w	r0, [sl]
 800a7b2:	4648      	mov	r0, r9
 800a7b4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800a7b8:	f008 fd28 	bl	801320c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a7bc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800a7c0:	2200      	movs	r2, #0
 800a7c2:	4611      	mov	r1, r2
 800a7c4:	4628      	mov	r0, r5
 800a7c6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800a7ca:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800a7ce:	f7f8 fa1b 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
 800a7d2:	2301      	movs	r3, #1
 800a7d4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800a7d8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800a7dc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a7e0:	2b00      	cmp	r3, #0
 800a7e2:	dd5c      	ble.n	800a89e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a7e4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a7e8:	2b00      	cmp	r3, #0
 800a7ea:	dd58      	ble.n	800a89e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a7ec:	462a      	mov	r2, r5
 800a7ee:	ab0a      	add	r3, sp, #40	; 0x28
 800a7f0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a7f4:	6851      	ldr	r1, [r2, #4]
 800a7f6:	c303      	stmia	r3!, {r0, r1}
 800a7f8:	4631      	mov	r1, r6
 800a7fa:	a80a      	add	r0, sp, #40	; 0x28
 800a7fc:	f7ff fc0e 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800a800:	4b38      	ldr	r3, [pc, #224]	; (800a8e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a802:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a806:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a80a:	2100      	movs	r1, #0
 800a80c:	aa0a      	add	r2, sp, #40	; 0x28
 800a80e:	4b36      	ldr	r3, [pc, #216]	; (800a8e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a810:	910c      	str	r1, [sp, #48]	; 0x30
 800a812:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a816:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a81a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800a81e:	ab08      	add	r3, sp, #32
 800a820:	e883 0003 	stmia.w	r3, {r0, r1}
 800a824:	4618      	mov	r0, r3
 800a826:	a90c      	add	r1, sp, #48	; 0x30
 800a828:	f7ff fbf8 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800a82c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800a82e:	2b00      	cmp	r3, #0
 800a830:	d13c      	bne.n	800a8ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800a832:	2000      	movs	r0, #0
 800a834:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800a838:	2600      	movs	r6, #0
 800a83a:	682a      	ldr	r2, [r5, #0]
 800a83c:	696b      	ldr	r3, [r5, #20]
 800a83e:	616e      	str	r6, [r5, #20]
 800a840:	9305      	str	r3, [sp, #20]
 800a842:	6892      	ldr	r2, [r2, #8]
 800a844:	a908      	add	r1, sp, #32
 800a846:	4628      	mov	r0, r5
 800a848:	4790      	blx	r2
 800a84a:	9b05      	ldr	r3, [sp, #20]
 800a84c:	616b      	str	r3, [r5, #20]
 800a84e:	4652      	mov	r2, sl
 800a850:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800a854:	4649      	mov	r1, r9
 800a856:	4628      	mov	r0, r5
 800a858:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800a85c:	f7f8 f9d4 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
 800a860:	4b23      	ldr	r3, [pc, #140]	; (800a8f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a862:	9a01      	ldr	r2, [sp, #4]
 800a864:	801a      	strh	r2, [r3, #0]
 800a866:	4b23      	ldr	r3, [pc, #140]	; (800a8f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800a868:	9a02      	ldr	r2, [sp, #8]
 800a86a:	801a      	strh	r2, [r3, #0]
 800a86c:	4b1d      	ldr	r3, [pc, #116]	; (800a8e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a86e:	9a03      	ldr	r2, [sp, #12]
 800a870:	801a      	strh	r2, [r3, #0]
 800a872:	4b1d      	ldr	r3, [pc, #116]	; (800a8e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a874:	9a04      	ldr	r2, [sp, #16]
 800a876:	801a      	strh	r2, [r3, #0]
 800a878:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800a87c:	6823      	ldr	r3, [r4, #0]
 800a87e:	4620      	mov	r0, r4
 800a880:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a882:	4798      	blx	r3
 800a884:	6823      	ldr	r3, [r4, #0]
 800a886:	4620      	mov	r0, r4
 800a888:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a88a:	4798      	blx	r3
 800a88c:	b00f      	add	sp, #60	; 0x3c
 800a88e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a892:	883b      	ldrh	r3, [r7, #0]
 800a894:	f8ab 0000 	strh.w	r0, [fp]
 800a898:	f8aa 3000 	strh.w	r3, [sl]
 800a89c:	e789      	b.n	800a7b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800a89e:	462a      	mov	r2, r5
 800a8a0:	ab0a      	add	r3, sp, #40	; 0x28
 800a8a2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a8a6:	6851      	ldr	r1, [r2, #4]
 800a8a8:	c303      	stmia	r3!, {r0, r1}
 800a8aa:	e7a9      	b.n	800a800 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800a8ac:	a807      	add	r0, sp, #28
 800a8ae:	f008 feb1 	bl	8013614 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a8b2:	4606      	mov	r6, r0
 800a8b4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800a8b6:	6803      	ldr	r3, [r0, #0]
 800a8b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a8ba:	4798      	blx	r3
 800a8bc:	4286      	cmp	r6, r0
 800a8be:	d1b8      	bne.n	800a832 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a8c0:	f7f7 fd8e 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800a8c4:	6803      	ldr	r3, [r0, #0]
 800a8c6:	4606      	mov	r6, r0
 800a8c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a8ca:	9305      	str	r3, [sp, #20]
 800a8cc:	a807      	add	r0, sp, #28
 800a8ce:	f008 fea1 	bl	8013614 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a8d2:	9b05      	ldr	r3, [sp, #20]
 800a8d4:	4601      	mov	r1, r0
 800a8d6:	4630      	mov	r0, r6
 800a8d8:	4798      	blx	r3
 800a8da:	f080 0001 	eor.w	r0, r0, #1
 800a8de:	b2c0      	uxtb	r0, r0
 800a8e0:	e7a8      	b.n	800a834 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800a8e2:	bf00      	nop
 800a8e4:	20017558 	.word	0x20017558
 800a8e8:	2001755a 	.word	0x2001755a
 800a8ec:	2001755c 	.word	0x2001755c
 800a8f0:	2001755e 	.word	0x2001755e
 800a8f4:	20017560 	.word	0x20017560

0800a8f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a8f8:	b510      	push	{r4, lr}
 800a8fa:	4b07      	ldr	r3, [pc, #28]	; (800a918 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a8fc:	781b      	ldrb	r3, [r3, #0]
 800a8fe:	4604      	mov	r4, r0
 800a900:	b13b      	cbz	r3, 800a912 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a902:	6803      	ldr	r3, [r0, #0]
 800a904:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a906:	4798      	blx	r3
 800a908:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a90a:	4283      	cmp	r3, r0
 800a90c:	d101      	bne.n	800a912 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a90e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800a910:	bd10      	pop	{r4, pc}
 800a912:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800a914:	e7fc      	b.n	800a910 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a916:	bf00      	nop
 800a918:	20017562 	.word	0x20017562

0800a91c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a91c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a920:	b08a      	sub	sp, #40	; 0x28
 800a922:	461d      	mov	r5, r3
 800a924:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a928:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a92c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a930:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a934:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a938:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a93c:	2400      	movs	r4, #0
 800a93e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a942:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800a946:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a94a:	4690      	mov	r8, r2
 800a94c:	4607      	mov	r7, r0
 800a94e:	9404      	str	r4, [sp, #16]
 800a950:	f88d 4020 	strb.w	r4, [sp, #32]
 800a954:	f7ff ffd0 	bl	800a8f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a958:	fb06 8505 	mla	r5, r6, r5, r8
 800a95c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a960:	6878      	ldr	r0, [r7, #4]
 800a962:	9505      	str	r5, [sp, #20]
 800a964:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a968:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a96c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800a970:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800a974:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800a978:	6803      	ldr	r3, [r0, #0]
 800a97a:	a901      	add	r1, sp, #4
 800a97c:	685b      	ldr	r3, [r3, #4]
 800a97e:	4798      	blx	r3
 800a980:	b00a      	add	sp, #40	; 0x28
 800a982:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a986 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a986:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a98a:	b08b      	sub	sp, #44	; 0x2c
 800a98c:	2400      	movs	r4, #0
 800a98e:	461d      	mov	r5, r3
 800a990:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800a994:	4688      	mov	r8, r1
 800a996:	4691      	mov	r9, r2
 800a998:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800a99c:	9404      	str	r4, [sp, #16]
 800a99e:	4607      	mov	r7, r0
 800a9a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a9a4:	f7ff ffa8 	bl	800a8f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a9a8:	fb06 9505 	mla	r5, r6, r5, r9
 800a9ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a9b0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a9b4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a9b8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a9bc:	6878      	ldr	r0, [r7, #4]
 800a9be:	9505      	str	r5, [sp, #20]
 800a9c0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a9c4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a9c8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a9cc:	f8cd 8010 	str.w	r8, [sp, #16]
 800a9d0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800a9d4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a9d8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800a9dc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800a9e0:	6803      	ldr	r3, [r0, #0]
 800a9e2:	a901      	add	r1, sp, #4
 800a9e4:	685b      	ldr	r3, [r3, #4]
 800a9e6:	4798      	blx	r3
 800a9e8:	b00b      	add	sp, #44	; 0x2c
 800a9ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a9f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a9f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9f4:	b08a      	sub	sp, #40	; 0x28
 800a9f6:	4698      	mov	r8, r3
 800a9f8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800a9fc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800aa00:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800aa04:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800aa08:	2300      	movs	r3, #0
 800aa0a:	2d0b      	cmp	r5, #11
 800aa0c:	4606      	mov	r6, r0
 800aa0e:	9304      	str	r3, [sp, #16]
 800aa10:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800aa14:	d138      	bne.n	800aa88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800aa16:	2380      	movs	r3, #128	; 0x80
 800aa18:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800aa1c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800aa20:	f8ad 3018 	strh.w	r3, [sp, #24]
 800aa24:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800aa28:	f8ad 301a 	strh.w	r3, [sp, #26]
 800aa2c:	f88d 0020 	strb.w	r0, [sp, #32]
 800aa30:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800aa34:	f8ad 301c 	strh.w	r3, [sp, #28]
 800aa38:	4630      	mov	r0, r6
 800aa3a:	9203      	str	r2, [sp, #12]
 800aa3c:	f7ff ff5c 	bl	800a8f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aa40:	2c0b      	cmp	r4, #11
 800aa42:	bf98      	it	ls
 800aa44:	4b1b      	ldrls	r3, [pc, #108]	; (800aab4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800aa46:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800aa4a:	bf98      	it	ls
 800aa4c:	5d19      	ldrbls	r1, [r3, r4]
 800aa4e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800aa52:	bf88      	it	hi
 800aa54:	2100      	movhi	r1, #0
 800aa56:	fb02 8307 	mla	r3, r2, r7, r8
 800aa5a:	10c9      	asrs	r1, r1, #3
 800aa5c:	fb01 0003 	mla	r0, r1, r3, r0
 800aa60:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800aa64:	9005      	str	r0, [sp, #20]
 800aa66:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800aa6a:	6870      	ldr	r0, [r6, #4]
 800aa6c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800aa70:	2300      	movs	r3, #0
 800aa72:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800aa76:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800aa7a:	6803      	ldr	r3, [r0, #0]
 800aa7c:	a901      	add	r1, sp, #4
 800aa7e:	685b      	ldr	r3, [r3, #4]
 800aa80:	4798      	blx	r3
 800aa82:	b00a      	add	sp, #40	; 0x28
 800aa84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aa88:	2d02      	cmp	r5, #2
 800aa8a:	d109      	bne.n	800aaa0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800aa8c:	28ff      	cmp	r0, #255	; 0xff
 800aa8e:	d105      	bne.n	800aa9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800aa90:	f1bc 0f00 	cmp.w	ip, #0
 800aa94:	bf14      	ite	ne
 800aa96:	2340      	movne	r3, #64	; 0x40
 800aa98:	2320      	moveq	r3, #32
 800aa9a:	e7bd      	b.n	800aa18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800aa9c:	2340      	movs	r3, #64	; 0x40
 800aa9e:	e7bb      	b.n	800aa18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800aaa0:	28ff      	cmp	r0, #255	; 0xff
 800aaa2:	d105      	bne.n	800aab0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800aaa4:	f1bc 0f00 	cmp.w	ip, #0
 800aaa8:	bf14      	ite	ne
 800aaaa:	2304      	movne	r3, #4
 800aaac:	2301      	moveq	r3, #1
 800aaae:	e7b3      	b.n	800aa18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800aab0:	2304      	movs	r3, #4
 800aab2:	e7b1      	b.n	800aa18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800aab4:	08022360 	.word	0x08022360

0800aab8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800aab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aabc:	b08b      	sub	sp, #44	; 0x2c
 800aabe:	461d      	mov	r5, r3
 800aac0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800aac4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800aac8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800aacc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800aad0:	bf14      	ite	ne
 800aad2:	2308      	movne	r3, #8
 800aad4:	2302      	moveq	r3, #2
 800aad6:	2400      	movs	r4, #0
 800aad8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800aadc:	4688      	mov	r8, r1
 800aade:	4693      	mov	fp, r2
 800aae0:	9404      	str	r4, [sp, #16]
 800aae2:	4607      	mov	r7, r0
 800aae4:	f7ff ff08 	bl	800a8f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aae8:	2e0b      	cmp	r6, #11
 800aaea:	bf98      	it	ls
 800aaec:	4b15      	ldrls	r3, [pc, #84]	; (800ab44 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800aaee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800aaf2:	bf98      	it	ls
 800aaf4:	5d9c      	ldrbls	r4, [r3, r6]
 800aaf6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800aafa:	f8ad 3018 	strh.w	r3, [sp, #24]
 800aafe:	fb05 b50a 	mla	r5, r5, sl, fp
 800ab02:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800ab06:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ab0a:	10e4      	asrs	r4, r4, #3
 800ab0c:	fb04 0405 	mla	r4, r4, r5, r0
 800ab10:	2300      	movs	r3, #0
 800ab12:	6878      	ldr	r0, [r7, #4]
 800ab14:	9405      	str	r4, [sp, #20]
 800ab16:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ab1a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800ab1e:	f8cd 8010 	str.w	r8, [sp, #16]
 800ab22:	f88d 9020 	strb.w	r9, [sp, #32]
 800ab26:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800ab2a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800ab2e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800ab32:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800ab36:	6803      	ldr	r3, [r0, #0]
 800ab38:	a901      	add	r1, sp, #4
 800ab3a:	685b      	ldr	r3, [r3, #4]
 800ab3c:	4798      	blx	r3
 800ab3e:	b00b      	add	sp, #44	; 0x2c
 800ab40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab44:	08022360 	.word	0x08022360

0800ab48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800ab48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab4c:	461e      	mov	r6, r3
 800ab4e:	4b0a      	ldr	r3, [pc, #40]	; (800ab78 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800ab50:	460f      	mov	r7, r1
 800ab52:	881d      	ldrh	r5, [r3, #0]
 800ab54:	4690      	mov	r8, r2
 800ab56:	f7f7 fc43 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800ab5a:	6803      	ldr	r3, [r0, #0]
 800ab5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ab5e:	4798      	blx	r3
 800ab60:	280b      	cmp	r0, #11
 800ab62:	bf9a      	itte	ls
 800ab64:	4b05      	ldrls	r3, [pc, #20]	; (800ab7c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800ab66:	5c1c      	ldrbls	r4, [r3, r0]
 800ab68:	2400      	movhi	r4, #0
 800ab6a:	fb08 7005 	mla	r0, r8, r5, r7
 800ab6e:	10e4      	asrs	r4, r4, #3
 800ab70:	fb04 6000 	mla	r0, r4, r0, r6
 800ab74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ab78:	2001755e 	.word	0x2001755e
 800ab7c:	08022360 	.word	0x08022360

0800ab80 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800ab80:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab82:	b08b      	sub	sp, #44	; 0x2c
 800ab84:	461f      	mov	r7, r3
 800ab86:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800ab8a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ab8e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ab92:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ab96:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ab9a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ab9e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800aba2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800aba6:	2500      	movs	r5, #0
 800aba8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800abac:	f88d 3020 	strb.w	r3, [sp, #32]
 800abb0:	4604      	mov	r4, r0
 800abb2:	4616      	mov	r6, r2
 800abb4:	9504      	str	r5, [sp, #16]
 800abb6:	f7ff fe9f 	bl	800a8f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800abba:	463a      	mov	r2, r7
 800abbc:	4631      	mov	r1, r6
 800abbe:	4603      	mov	r3, r0
 800abc0:	4620      	mov	r0, r4
 800abc2:	f7ff ffc1 	bl	800ab48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800abc6:	4b0e      	ldr	r3, [pc, #56]	; (800ac00 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800abc8:	9005      	str	r0, [sp, #20]
 800abca:	881b      	ldrh	r3, [r3, #0]
 800abcc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800abd0:	f7f7 fc06 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800abd4:	6803      	ldr	r3, [r0, #0]
 800abd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abd8:	4798      	blx	r3
 800abda:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800abdc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800abe0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800abe4:	9304      	str	r3, [sp, #16]
 800abe6:	6860      	ldr	r0, [r4, #4]
 800abe8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800abec:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800abf0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800abf4:	6803      	ldr	r3, [r0, #0]
 800abf6:	a901      	add	r1, sp, #4
 800abf8:	685b      	ldr	r3, [r3, #4]
 800abfa:	4798      	blx	r3
 800abfc:	b00b      	add	sp, #44	; 0x2c
 800abfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac00:	2001755e 	.word	0x2001755e

0800ac04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800ac04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ac06:	b08d      	sub	sp, #52	; 0x34
 800ac08:	466b      	mov	r3, sp
 800ac0a:	e883 0006 	stmia.w	r3, {r1, r2}
 800ac0e:	2300      	movs	r3, #0
 800ac10:	9306      	str	r3, [sp, #24]
 800ac12:	6803      	ldr	r3, [r0, #0]
 800ac14:	f8bd 6000 	ldrh.w	r6, [sp]
 800ac18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ac1a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800ac1e:	2501      	movs	r5, #1
 800ac20:	9503      	str	r5, [sp, #12]
 800ac22:	4604      	mov	r4, r0
 800ac24:	4798      	blx	r3
 800ac26:	463a      	mov	r2, r7
 800ac28:	4631      	mov	r1, r6
 800ac2a:	4603      	mov	r3, r0
 800ac2c:	4620      	mov	r0, r4
 800ac2e:	f7ff ff8b 	bl	800ab48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ac32:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ac34:	9307      	str	r3, [sp, #28]
 800ac36:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ac3a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ac3e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ac42:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ac46:	4b0f      	ldr	r3, [pc, #60]	; (800ac84 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800ac48:	9004      	str	r0, [sp, #16]
 800ac4a:	881b      	ldrh	r3, [r3, #0]
 800ac4c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ac50:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ac54:	f7f7 fbc4 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800ac58:	6803      	ldr	r3, [r0, #0]
 800ac5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac5c:	4798      	blx	r3
 800ac5e:	23ff      	movs	r3, #255	; 0xff
 800ac60:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ac64:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ac68:	6860      	ldr	r0, [r4, #4]
 800ac6a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ac6e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ac72:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ac76:	6803      	ldr	r3, [r0, #0]
 800ac78:	a903      	add	r1, sp, #12
 800ac7a:	685b      	ldr	r3, [r3, #4]
 800ac7c:	4798      	blx	r3
 800ac7e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800ac80:	b00d      	add	sp, #52	; 0x34
 800ac82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac84:	2001755e 	.word	0x2001755e

0800ac88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800ac88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac8c:	b08c      	sub	sp, #48	; 0x30
 800ac8e:	461e      	mov	r6, r3
 800ac90:	466d      	mov	r5, sp
 800ac92:	2300      	movs	r3, #0
 800ac94:	e885 0006 	stmia.w	r5, {r1, r2}
 800ac98:	9306      	str	r3, [sp, #24]
 800ac9a:	6803      	ldr	r3, [r0, #0]
 800ac9c:	f8bd 7000 	ldrh.w	r7, [sp]
 800aca0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aca2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800aca6:	2501      	movs	r5, #1
 800aca8:	9503      	str	r5, [sp, #12]
 800acaa:	4604      	mov	r4, r0
 800acac:	4798      	blx	r3
 800acae:	4642      	mov	r2, r8
 800acb0:	4639      	mov	r1, r7
 800acb2:	4603      	mov	r3, r0
 800acb4:	4620      	mov	r0, r4
 800acb6:	f7ff ff47 	bl	800ab48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800acba:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800acbe:	f8ad 3020 	strh.w	r3, [sp, #32]
 800acc2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800acc6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800acca:	4b11      	ldr	r3, [pc, #68]	; (800ad10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800accc:	9004      	str	r0, [sp, #16]
 800acce:	881b      	ldrh	r3, [r3, #0]
 800acd0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800acd4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800acd6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800acda:	9607      	str	r6, [sp, #28]
 800acdc:	f7f7 fb80 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800ace0:	6803      	ldr	r3, [r0, #0]
 800ace2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ace4:	4798      	blx	r3
 800ace6:	23ff      	movs	r3, #255	; 0xff
 800ace8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800acec:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800acf0:	6860      	ldr	r0, [r4, #4]
 800acf2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800acf6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800acfa:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800acfe:	6803      	ldr	r3, [r0, #0]
 800ad00:	a903      	add	r1, sp, #12
 800ad02:	685b      	ldr	r3, [r3, #4]
 800ad04:	4798      	blx	r3
 800ad06:	4630      	mov	r0, r6
 800ad08:	b00c      	add	sp, #48	; 0x30
 800ad0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ad0e:	bf00      	nop
 800ad10:	2001755e 	.word	0x2001755e

0800ad14 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800ad14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ad16:	b085      	sub	sp, #20
 800ad18:	ac02      	add	r4, sp, #8
 800ad1a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ad1e:	4605      	mov	r5, r0
 800ad20:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800ad24:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800ad28:	f7ff fde6 	bl	800a8f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad2c:	463a      	mov	r2, r7
 800ad2e:	4603      	mov	r3, r0
 800ad30:	4631      	mov	r1, r6
 800ad32:	4628      	mov	r0, r5
 800ad34:	f7ff ff08 	bl	800ab48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ad38:	4a05      	ldr	r2, [pc, #20]	; (800ad50 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800ad3a:	682b      	ldr	r3, [r5, #0]
 800ad3c:	8812      	ldrh	r2, [r2, #0]
 800ad3e:	9200      	str	r2, [sp, #0]
 800ad40:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800ad42:	e894 0006 	ldmia.w	r4, {r1, r2}
 800ad46:	4603      	mov	r3, r0
 800ad48:	4628      	mov	r0, r5
 800ad4a:	47b0      	blx	r6
 800ad4c:	b005      	add	sp, #20
 800ad4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad50:	2001755e 	.word	0x2001755e

0800ad54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800ad54:	b570      	push	{r4, r5, r6, lr}
 800ad56:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800ad5a:	4604      	mov	r4, r0
 800ad5c:	b19b      	cbz	r3, 800ad86 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800ad5e:	2002      	movs	r0, #2
 800ad60:	f7f5 fcf0 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800ad64:	2300      	movs	r3, #0
 800ad66:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800ad6a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800ad6e:	6823      	ldr	r3, [r4, #0]
 800ad70:	4620      	mov	r0, r4
 800ad72:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800ad76:	f7ff fdbf 	bl	800a8f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad7a:	462b      	mov	r3, r5
 800ad7c:	4601      	mov	r1, r0
 800ad7e:	4620      	mov	r0, r4
 800ad80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ad84:	4718      	bx	r3
 800ad86:	bd70      	pop	{r4, r5, r6, pc}

0800ad88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800ad88:	b538      	push	{r3, r4, r5, lr}
 800ad8a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800ad8e:	428b      	cmp	r3, r1
 800ad90:	4604      	mov	r4, r0
 800ad92:	460d      	mov	r5, r1
 800ad94:	d006      	beq.n	800ada4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800ad96:	6803      	ldr	r3, [r0, #0]
 800ad98:	b929      	cbnz	r1, 800ada6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800ad9a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800ad9e:	4798      	blx	r3
 800ada0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800ada4:	bd38      	pop	{r3, r4, r5, pc}
 800ada6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800adaa:	e7f8      	b.n	800ad9e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800adac <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800adac:	b510      	push	{r4, lr}
 800adae:	4b0d      	ldr	r3, [pc, #52]	; (800ade4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800adb0:	781b      	ldrb	r3, [r3, #0]
 800adb2:	4604      	mov	r4, r0
 800adb4:	b95b      	cbnz	r3, 800adce <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800adb6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800adba:	2b02      	cmp	r3, #2
 800adbc:	d007      	beq.n	800adce <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800adbe:	6840      	ldr	r0, [r0, #4]
 800adc0:	f000 f92a 	bl	800b018 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800adc4:	b118      	cbz	r0, 800adce <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800adc6:	6862      	ldr	r2, [r4, #4]
 800adc8:	7a53      	ldrb	r3, [r2, #9]
 800adca:	2b00      	cmp	r3, #0
 800adcc:	d0fc      	beq.n	800adc8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800adce:	f7f5 fdb3 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800add2:	4620      	mov	r0, r4
 800add4:	2100      	movs	r1, #0
 800add6:	f7ff ffd7 	bl	800ad88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800adda:	4620      	mov	r0, r4
 800addc:	f7ff fd8c 	bl	800a8f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ade0:	bd10      	pop	{r4, pc}
 800ade2:	bf00      	nop
 800ade4:	20017562 	.word	0x20017562

0800ade8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800ade8:	b570      	push	{r4, r5, r6, lr}
 800adea:	4604      	mov	r4, r0
 800adec:	6803      	ldr	r3, [r0, #0]
 800adee:	b919      	cbnz	r1, 800adf8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800adf0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800adf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800adf6:	4718      	bx	r3
 800adf8:	2200      	movs	r2, #0
 800adfa:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800adfe:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800ae02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ae04:	4798      	blx	r3
 800ae06:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800ae0a:	4605      	mov	r5, r0
 800ae0c:	2101      	movs	r1, #1
 800ae0e:	4620      	mov	r0, r4
 800ae10:	f7ff ffba 	bl	800ad88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ae14:	4628      	mov	r0, r5
 800ae16:	bd70      	pop	{r4, r5, r6, pc}

0800ae18 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800ae18:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800ae1c:	1a13      	subs	r3, r2, r0
 800ae1e:	4258      	negs	r0, r3
 800ae20:	4158      	adcs	r0, r3
 800ae22:	4770      	bx	lr

0800ae24 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800ae24:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800ae28:	1a9b      	subs	r3, r3, r2
 800ae2a:	2b00      	cmp	r3, #0
 800ae2c:	bfdc      	itt	le
 800ae2e:	6882      	ldrle	r2, [r0, #8]
 800ae30:	189b      	addle	r3, r3, r2
 800ae32:	2b01      	cmp	r3, #1
 800ae34:	bfcc      	ite	gt
 800ae36:	2000      	movgt	r0, #0
 800ae38:	2001      	movle	r0, #1
 800ae3a:	4770      	bx	lr

0800ae3c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800ae3c:	6902      	ldr	r2, [r0, #16]
 800ae3e:	6843      	ldr	r3, [r0, #4]
 800ae40:	2024      	movs	r0, #36	; 0x24
 800ae42:	fb00 3002 	mla	r0, r0, r2, r3
 800ae46:	4770      	bx	lr

0800ae48 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800ae48:	6803      	ldr	r3, [r0, #0]
 800ae4a:	691b      	ldr	r3, [r3, #16]
 800ae4c:	4718      	bx	r3

0800ae4e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800ae4e:	b570      	push	{r4, r5, r6, lr}
 800ae50:	2301      	movs	r3, #1
 800ae52:	7203      	strb	r3, [r0, #8]
 800ae54:	4604      	mov	r4, r0
 800ae56:	6840      	ldr	r0, [r0, #4]
 800ae58:	6803      	ldr	r3, [r0, #0]
 800ae5a:	699b      	ldr	r3, [r3, #24]
 800ae5c:	4798      	blx	r3
 800ae5e:	6803      	ldr	r3, [r0, #0]
 800ae60:	2b40      	cmp	r3, #64	; 0x40
 800ae62:	4605      	mov	r5, r0
 800ae64:	d00c      	beq.n	800ae80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ae66:	d810      	bhi.n	800ae8a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800ae68:	2b04      	cmp	r3, #4
 800ae6a:	d01d      	beq.n	800aea8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800ae6c:	d804      	bhi.n	800ae78 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800ae6e:	2b01      	cmp	r3, #1
 800ae70:	d006      	beq.n	800ae80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ae72:	2b02      	cmp	r3, #2
 800ae74:	d02c      	beq.n	800aed0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800ae76:	bd70      	pop	{r4, r5, r6, pc}
 800ae78:	2b08      	cmp	r3, #8
 800ae7a:	d01d      	beq.n	800aeb8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800ae7c:	2b20      	cmp	r3, #32
 800ae7e:	d1fa      	bne.n	800ae76 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800ae80:	6823      	ldr	r3, [r4, #0]
 800ae82:	4620      	mov	r0, r4
 800ae84:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ae86:	4798      	blx	r3
 800ae88:	e013      	b.n	800aeb2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800ae8a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ae8e:	d0f7      	beq.n	800ae80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ae90:	d804      	bhi.n	800ae9c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800ae92:	2b80      	cmp	r3, #128	; 0x80
 800ae94:	d0f4      	beq.n	800ae80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ae96:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ae9a:	e7f0      	b.n	800ae7e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800ae9c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800aea0:	d0ee      	beq.n	800ae80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800aea2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800aea6:	e7e5      	b.n	800ae74 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800aea8:	6823      	ldr	r3, [r4, #0]
 800aeaa:	7f01      	ldrb	r1, [r0, #28]
 800aeac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aeae:	4620      	mov	r0, r4
 800aeb0:	4798      	blx	r3
 800aeb2:	6823      	ldr	r3, [r4, #0]
 800aeb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aeb6:	e006      	b.n	800aec6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800aeb8:	6823      	ldr	r3, [r4, #0]
 800aeba:	7f01      	ldrb	r1, [r0, #28]
 800aebc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aebe:	4620      	mov	r0, r4
 800aec0:	4798      	blx	r3
 800aec2:	6823      	ldr	r3, [r4, #0]
 800aec4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aec6:	4629      	mov	r1, r5
 800aec8:	4620      	mov	r0, r4
 800aeca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aece:	4718      	bx	r3
 800aed0:	6823      	ldr	r3, [r4, #0]
 800aed2:	4620      	mov	r0, r4
 800aed4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aed6:	4798      	blx	r3
 800aed8:	e7f3      	b.n	800aec2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800aeda <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800aeda:	4770      	bx	lr

0800aedc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800aedc:	4770      	bx	lr

0800aede <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800aede:	4770      	bx	lr

0800aee0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800aee0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800aee4:	1ad2      	subs	r2, r2, r3
 800aee6:	2a00      	cmp	r2, #0
 800aee8:	b510      	push	{r4, lr}
 800aeea:	bfdc      	itt	le
 800aeec:	6884      	ldrle	r4, [r0, #8]
 800aeee:	1912      	addle	r2, r2, r4
 800aef0:	2a01      	cmp	r2, #1
 800aef2:	dd16      	ble.n	800af22 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800aef4:	6842      	ldr	r2, [r0, #4]
 800aef6:	2424      	movs	r4, #36	; 0x24
 800aef8:	fb04 2303 	mla	r3, r4, r3, r2
 800aefc:	f101 0220 	add.w	r2, r1, #32
 800af00:	f851 4b04 	ldr.w	r4, [r1], #4
 800af04:	f843 4b04 	str.w	r4, [r3], #4
 800af08:	4291      	cmp	r1, r2
 800af0a:	d1f9      	bne.n	800af00 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800af0c:	780a      	ldrb	r2, [r1, #0]
 800af0e:	701a      	strb	r2, [r3, #0]
 800af10:	68c3      	ldr	r3, [r0, #12]
 800af12:	6882      	ldr	r2, [r0, #8]
 800af14:	f3bf 8f5b 	dmb	ish
 800af18:	3301      	adds	r3, #1
 800af1a:	429a      	cmp	r2, r3
 800af1c:	bfd8      	it	le
 800af1e:	1a9b      	suble	r3, r3, r2
 800af20:	60c3      	str	r3, [r0, #12]
 800af22:	bd10      	pop	{r4, pc}

0800af24 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800af24:	6903      	ldr	r3, [r0, #16]
 800af26:	6882      	ldr	r2, [r0, #8]
 800af28:	f3bf 8f5b 	dmb	ish
 800af2c:	3301      	adds	r3, #1
 800af2e:	429a      	cmp	r2, r3
 800af30:	bfd8      	it	le
 800af32:	1a9b      	suble	r3, r3, r2
 800af34:	6103      	str	r3, [r0, #16]
 800af36:	4770      	bx	lr

0800af38 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800af38:	b570      	push	{r4, r5, r6, lr}
 800af3a:	4604      	mov	r4, r0
 800af3c:	460e      	mov	r6, r1
 800af3e:	6860      	ldr	r0, [r4, #4]
 800af40:	6803      	ldr	r3, [r0, #0]
 800af42:	685b      	ldr	r3, [r3, #4]
 800af44:	4798      	blx	r3
 800af46:	2800      	cmp	r0, #0
 800af48:	d1f9      	bne.n	800af3e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800af4a:	4d0d      	ldr	r5, [pc, #52]	; (800af80 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800af4c:	6828      	ldr	r0, [r5, #0]
 800af4e:	6803      	ldr	r3, [r0, #0]
 800af50:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800af52:	4798      	blx	r3
 800af54:	f7f5 fcfe 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800af58:	6828      	ldr	r0, [r5, #0]
 800af5a:	2101      	movs	r1, #1
 800af5c:	f7ff ff14 	bl	800ad88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800af60:	6860      	ldr	r0, [r4, #4]
 800af62:	6803      	ldr	r3, [r0, #0]
 800af64:	4631      	mov	r1, r6
 800af66:	689b      	ldr	r3, [r3, #8]
 800af68:	4798      	blx	r3
 800af6a:	6823      	ldr	r3, [r4, #0]
 800af6c:	4620      	mov	r0, r4
 800af6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af70:	4798      	blx	r3
 800af72:	6828      	ldr	r0, [r5, #0]
 800af74:	6803      	ldr	r3, [r0, #0]
 800af76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af7a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800af7c:	4718      	bx	r3
 800af7e:	bf00      	nop
 800af80:	20017564 	.word	0x20017564

0800af84 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800af84:	b508      	push	{r3, lr}
 800af86:	f7f5 fcd7 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800af8a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800af8e:	f7f5 bcdb 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800af92 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800af92:	b510      	push	{r4, lr}
 800af94:	2114      	movs	r1, #20
 800af96:	4604      	mov	r4, r0
 800af98:	f014 fab8 	bl	801f50c <_ZdlPvj>
 800af9c:	4620      	mov	r0, r4
 800af9e:	bd10      	pop	{r4, pc}

0800afa0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800afa0:	b510      	push	{r4, lr}
 800afa2:	4604      	mov	r4, r0
 800afa4:	6840      	ldr	r0, [r0, #4]
 800afa6:	6803      	ldr	r3, [r0, #0]
 800afa8:	681b      	ldr	r3, [r3, #0]
 800afaa:	4798      	blx	r3
 800afac:	b948      	cbnz	r0, 800afc2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800afae:	7a63      	ldrb	r3, [r4, #9]
 800afb0:	b13b      	cbz	r3, 800afc2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800afb2:	7a23      	ldrb	r3, [r4, #8]
 800afb4:	b92b      	cbnz	r3, 800afc2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800afb6:	6823      	ldr	r3, [r4, #0]
 800afb8:	4620      	mov	r0, r4
 800afba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800afbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800afc0:	4718      	bx	r3
 800afc2:	bd10      	pop	{r4, pc}

0800afc4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800afc4:	b570      	push	{r4, r5, r6, lr}
 800afc6:	4604      	mov	r4, r0
 800afc8:	6840      	ldr	r0, [r0, #4]
 800afca:	6803      	ldr	r3, [r0, #0]
 800afcc:	681b      	ldr	r3, [r3, #0]
 800afce:	4798      	blx	r3
 800afd0:	4605      	mov	r5, r0
 800afd2:	b930      	cbnz	r0, 800afe2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800afd4:	7a23      	ldrb	r3, [r4, #8]
 800afd6:	b123      	cbz	r3, 800afe2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800afd8:	6860      	ldr	r0, [r4, #4]
 800afda:	6803      	ldr	r3, [r0, #0]
 800afdc:	695b      	ldr	r3, [r3, #20]
 800afde:	4798      	blx	r3
 800afe0:	7225      	strb	r5, [r4, #8]
 800afe2:	6860      	ldr	r0, [r4, #4]
 800afe4:	6803      	ldr	r3, [r0, #0]
 800afe6:	681b      	ldr	r3, [r3, #0]
 800afe8:	4798      	blx	r3
 800afea:	b928      	cbnz	r0, 800aff8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800afec:	6823      	ldr	r3, [r4, #0]
 800afee:	4620      	mov	r0, r4
 800aff0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aff2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aff6:	4718      	bx	r3
 800aff8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800affc:	f7f5 bcb2 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b000 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b000:	b510      	push	{r4, lr}
 800b002:	4c04      	ldr	r4, [pc, #16]	; (800b014 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b004:	6082      	str	r2, [r0, #8]
 800b006:	2200      	movs	r2, #0
 800b008:	e9c0 4100 	strd	r4, r1, [r0]
 800b00c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b010:	bd10      	pop	{r4, pc}
 800b012:	bf00      	nop
 800b014:	08022374 	.word	0x08022374

0800b018 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b018:	6840      	ldr	r0, [r0, #4]
 800b01a:	6803      	ldr	r3, [r0, #0]
 800b01c:	681b      	ldr	r3, [r3, #0]
 800b01e:	4718      	bx	r3

0800b020 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b020:	4b06      	ldr	r3, [pc, #24]	; (800b03c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800b022:	60c1      	str	r1, [r0, #12]
 800b024:	094a      	lsrs	r2, r1, #5
 800b026:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800b02a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800b02e:	4313      	orrs	r3, r2
 800b030:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800b034:	4319      	orrs	r1, r3
 800b036:	8201      	strh	r1, [r0, #16]
 800b038:	4770      	bx	lr
 800b03a:	bf00      	nop
 800b03c:	fffff800 	.word	0xfffff800

0800b040 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b040:	f1a0 0008 	sub.w	r0, r0, #8
 800b044:	e7ec      	b.n	800b020 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800b046:	bf00      	nop

0800b048 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800b048:	b508      	push	{r3, lr}
 800b04a:	4b05      	ldr	r3, [pc, #20]	; (800b060 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800b04c:	6818      	ldr	r0, [r3, #0]
 800b04e:	6803      	ldr	r3, [r0, #0]
 800b050:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800b054:	4798      	blx	r3
 800b056:	1e43      	subs	r3, r0, #1
 800b058:	4258      	negs	r0, r3
 800b05a:	4158      	adcs	r0, r3
 800b05c:	bd08      	pop	{r3, pc}
 800b05e:	bf00      	nop
 800b060:	20017564 	.word	0x20017564

0800b064 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800b064:	4770      	bx	lr

0800b066 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800b066:	3808      	subs	r0, #8
 800b068:	4770      	bx	lr

0800b06a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800b06a:	b430      	push	{r4, r5}
 800b06c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b070:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800b074:	8a02      	ldrh	r2, [r0, #16]
 800b076:	9202      	str	r2, [sp, #8]
 800b078:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800b07c:	68c2      	ldr	r2, [r0, #12]
 800b07e:	4629      	mov	r1, r5
 800b080:	4620      	mov	r0, r4
 800b082:	bc30      	pop	{r4, r5}
 800b084:	f7f5 be2c 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800b088 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800b088:	f7f5 be20 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800b08c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800b08c:	b510      	push	{r4, lr}
 800b08e:	2114      	movs	r1, #20
 800b090:	4604      	mov	r4, r0
 800b092:	f014 fa3b 	bl	801f50c <_ZdlPvj>
 800b096:	4620      	mov	r0, r4
 800b098:	bd10      	pop	{r4, pc}

0800b09a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800b09a:	f1a0 0008 	sub.w	r0, r0, #8
 800b09e:	e7f5      	b.n	800b08c <_ZN8touchgfx13PainterRGB565D0Ev>

0800b0a0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800b0a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b0a2:	6803      	ldr	r3, [r0, #0]
 800b0a4:	460d      	mov	r5, r1
 800b0a6:	4604      	mov	r4, r0
 800b0a8:	4601      	mov	r1, r0
 800b0aa:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800b0ac:	a802      	add	r0, sp, #8
 800b0ae:	4798      	blx	r3
 800b0b0:	6828      	ldr	r0, [r5, #0]
 800b0b2:	6869      	ldr	r1, [r5, #4]
 800b0b4:	466b      	mov	r3, sp
 800b0b6:	c303      	stmia	r3!, {r0, r1}
 800b0b8:	4668      	mov	r0, sp
 800b0ba:	4619      	mov	r1, r3
 800b0bc:	f7fe ffae 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800b0c0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b0c2:	b1a8      	cbz	r0, 800b0f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800b0c4:	6803      	ldr	r3, [r0, #0]
 800b0c6:	1d21      	adds	r1, r4, #4
 800b0c8:	68db      	ldr	r3, [r3, #12]
 800b0ca:	4798      	blx	r3
 800b0cc:	b180      	cbz	r0, 800b0f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800b0ce:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800b0d2:	2b00      	cmp	r3, #0
 800b0d4:	dd0c      	ble.n	800b0f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800b0d6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800b0da:	2d00      	cmp	r5, #0
 800b0dc:	dd08      	ble.n	800b0f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800b0de:	4a2d      	ldr	r2, [pc, #180]	; (800b194 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800b0e0:	7812      	ldrb	r2, [r2, #0]
 800b0e2:	b13a      	cbz	r2, 800b0f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800b0e4:	2a01      	cmp	r2, #1
 800b0e6:	d02d      	beq.n	800b144 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800b0e8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b0ea:	6803      	ldr	r3, [r0, #0]
 800b0ec:	691b      	ldr	r3, [r3, #16]
 800b0ee:	4798      	blx	r3
 800b0f0:	b004      	add	sp, #16
 800b0f2:	bd70      	pop	{r4, r5, r6, pc}
 800b0f4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b0f8:	441d      	add	r5, r3
 800b0fa:	b2ad      	uxth	r5, r5
 800b0fc:	b22e      	sxth	r6, r5
 800b0fe:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800b102:	42b3      	cmp	r3, r6
 800b104:	daf0      	bge.n	800b0e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b106:	6823      	ldr	r3, [r4, #0]
 800b108:	4669      	mov	r1, sp
 800b10a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800b10c:	4620      	mov	r0, r4
 800b10e:	4798      	blx	r3
 800b110:	b940      	cbnz	r0, 800b124 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800b112:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b116:	2b01      	cmp	r3, #1
 800b118:	d004      	beq.n	800b124 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800b11a:	3301      	adds	r3, #1
 800b11c:	105b      	asrs	r3, r3, #1
 800b11e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b122:	e7f0      	b.n	800b106 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800b124:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b128:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b12c:	4413      	add	r3, r2
 800b12e:	b29b      	uxth	r3, r3
 800b130:	441a      	add	r2, r3
 800b132:	b212      	sxth	r2, r2
 800b134:	4296      	cmp	r6, r2
 800b136:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b13a:	dae0      	bge.n	800b0fe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800b13c:	1aeb      	subs	r3, r5, r3
 800b13e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b142:	e7dc      	b.n	800b0fe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800b144:	f8bd 5000 	ldrh.w	r5, [sp]
 800b148:	441d      	add	r5, r3
 800b14a:	b2ad      	uxth	r5, r5
 800b14c:	b22e      	sxth	r6, r5
 800b14e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800b152:	42b3      	cmp	r3, r6
 800b154:	dac8      	bge.n	800b0e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b156:	6823      	ldr	r3, [r4, #0]
 800b158:	4669      	mov	r1, sp
 800b15a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800b15c:	4620      	mov	r0, r4
 800b15e:	4798      	blx	r3
 800b160:	b940      	cbnz	r0, 800b174 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800b162:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800b166:	2b01      	cmp	r3, #1
 800b168:	d004      	beq.n	800b174 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800b16a:	3301      	adds	r3, #1
 800b16c:	105b      	asrs	r3, r3, #1
 800b16e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b172:	e7f0      	b.n	800b156 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800b174:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800b178:	f8bd 3000 	ldrh.w	r3, [sp]
 800b17c:	4413      	add	r3, r2
 800b17e:	b29b      	uxth	r3, r3
 800b180:	441a      	add	r2, r3
 800b182:	b212      	sxth	r2, r2
 800b184:	4296      	cmp	r6, r2
 800b186:	f8ad 3000 	strh.w	r3, [sp]
 800b18a:	dae0      	bge.n	800b14e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800b18c:	1aeb      	subs	r3, r5, r3
 800b18e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b192:	e7dc      	b.n	800b14e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800b194:	2001755c 	.word	0x2001755c

0800b198 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800b198:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b19a:	6803      	ldr	r3, [r0, #0]
 800b19c:	4604      	mov	r4, r0
 800b19e:	4601      	mov	r1, r0
 800b1a0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800b1a2:	4668      	mov	r0, sp
 800b1a4:	4798      	blx	r3
 800b1a6:	2100      	movs	r1, #0
 800b1a8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b1ac:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b1b0:	9102      	str	r1, [sp, #8]
 800b1b2:	4668      	mov	r0, sp
 800b1b4:	a902      	add	r1, sp, #8
 800b1b6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800b1ba:	f8ad 300e 	strh.w	r3, [sp, #14]
 800b1be:	f7fe ff2d 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800b1c2:	6823      	ldr	r3, [r4, #0]
 800b1c4:	4669      	mov	r1, sp
 800b1c6:	691b      	ldr	r3, [r3, #16]
 800b1c8:	4620      	mov	r0, r4
 800b1ca:	4798      	blx	r3
 800b1cc:	b004      	add	sp, #16
 800b1ce:	bd10      	pop	{r4, pc}

0800b1d0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800b1d0:	2101      	movs	r1, #1
 800b1d2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b1d6:	490b      	ldr	r1, [pc, #44]	; (800b204 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800b1d8:	6001      	str	r1, [r0, #0]
 800b1da:	2200      	movs	r2, #0
 800b1dc:	21ff      	movs	r1, #255	; 0xff
 800b1de:	8082      	strh	r2, [r0, #4]
 800b1e0:	80c2      	strh	r2, [r0, #6]
 800b1e2:	8102      	strh	r2, [r0, #8]
 800b1e4:	8142      	strh	r2, [r0, #10]
 800b1e6:	8182      	strh	r2, [r0, #12]
 800b1e8:	81c2      	strh	r2, [r0, #14]
 800b1ea:	8202      	strh	r2, [r0, #16]
 800b1ec:	8242      	strh	r2, [r0, #18]
 800b1ee:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b1f2:	61c2      	str	r2, [r0, #28]
 800b1f4:	8402      	strh	r2, [r0, #32]
 800b1f6:	8442      	strh	r2, [r0, #34]	; 0x22
 800b1f8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b1fc:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800b200:	6282      	str	r2, [r0, #40]	; 0x28
 800b202:	4770      	bx	lr
 800b204:	080223d0 	.word	0x080223d0

0800b208 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800b208:	6301      	str	r1, [r0, #48]	; 0x30
 800b20a:	4770      	bx	lr

0800b20c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800b20c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800b20e:	4770      	bx	lr

0800b210 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800b210:	6341      	str	r1, [r0, #52]	; 0x34
 800b212:	4770      	bx	lr

0800b214 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800b214:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b216:	4770      	bx	lr

0800b218 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800b218:	4770      	bx	lr

0800b21a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800b21a:	4608      	mov	r0, r1
 800b21c:	4770      	bx	lr

0800b21e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800b21e:	4608      	mov	r0, r1
 800b220:	4770      	bx	lr

0800b222 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800b222:	b530      	push	{r4, r5, lr}
 800b224:	460d      	mov	r5, r1
 800b226:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800b228:	8949      	ldrh	r1, [r1, #10]
 800b22a:	1ac9      	subs	r1, r1, r3
 800b22c:	6803      	ldr	r3, [r0, #0]
 800b22e:	b085      	sub	sp, #20
 800b230:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800b234:	f10d 0206 	add.w	r2, sp, #6
 800b238:	b209      	sxth	r1, r1
 800b23a:	4604      	mov	r4, r0
 800b23c:	4798      	blx	r3
 800b23e:	b1a0      	cbz	r0, 800b26a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b240:	792b      	ldrb	r3, [r5, #4]
 800b242:	b993      	cbnz	r3, 800b26a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b244:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800b248:	b178      	cbz	r0, 800b26a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b24a:	6803      	ldr	r3, [r0, #0]
 800b24c:	68db      	ldr	r3, [r3, #12]
 800b24e:	4798      	blx	r3
 800b250:	b158      	cbz	r0, 800b26a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b252:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b256:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800b25a:	f8ad 3008 	strh.w	r3, [sp, #8]
 800b25e:	9503      	str	r5, [sp, #12]
 800b260:	6803      	ldr	r3, [r0, #0]
 800b262:	aa02      	add	r2, sp, #8
 800b264:	689b      	ldr	r3, [r3, #8]
 800b266:	4621      	mov	r1, r4
 800b268:	4798      	blx	r3
 800b26a:	b005      	add	sp, #20
 800b26c:	bd30      	pop	{r4, r5, pc}

0800b26e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800b26e:	b510      	push	{r4, lr}
 800b270:	428a      	cmp	r2, r1
 800b272:	bfbe      	ittt	lt
 800b274:	460b      	movlt	r3, r1
 800b276:	4611      	movlt	r1, r2
 800b278:	461a      	movlt	r2, r3
 800b27a:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800b27e:	428b      	cmp	r3, r1
 800b280:	4604      	mov	r4, r0
 800b282:	d103      	bne.n	800b28c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800b284:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800b288:	4293      	cmp	r3, r2
 800b28a:	d011      	beq.n	800b2b0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800b28c:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800b290:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800b294:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800b298:	f005 fdb3 	bl	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b29c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800b2a0:	f005 fdaf 	bl	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b2a4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800b2a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b2ac:	f005 bda9 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b2b0:	bd10      	pop	{r4, pc}

0800b2b2 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800b2b2:	b510      	push	{r4, lr}
 800b2b4:	428a      	cmp	r2, r1
 800b2b6:	bfbe      	ittt	lt
 800b2b8:	460b      	movlt	r3, r1
 800b2ba:	4611      	movlt	r1, r2
 800b2bc:	461a      	movlt	r2, r3
 800b2be:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800b2c2:	428b      	cmp	r3, r1
 800b2c4:	4604      	mov	r4, r0
 800b2c6:	d103      	bne.n	800b2d0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800b2c8:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800b2cc:	4293      	cmp	r3, r2
 800b2ce:	d011      	beq.n	800b2f4 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800b2d0:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800b2d4:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800b2d8:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800b2dc:	f005 fd91 	bl	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b2e0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800b2e4:	f005 fd8d 	bl	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b2e8:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800b2ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b2f0:	f005 bd87 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b2f4:	bd10      	pop	{r4, pc}

0800b2f6 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800b2f6:	2300      	movs	r3, #0
 800b2f8:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800b2fc:	3038      	adds	r0, #56	; 0x38
 800b2fe:	f005 bd80 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b302 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800b302:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b306:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800b30a:	4605      	mov	r5, r0
 800b30c:	4688      	mov	r8, r1
 800b30e:	4617      	mov	r7, r2
 800b310:	2b00      	cmp	r3, #0
 800b312:	d03f      	beq.n	800b394 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800b314:	6803      	ldr	r3, [r0, #0]
 800b316:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800b31a:	4798      	blx	r3
 800b31c:	682b      	ldr	r3, [r5, #0]
 800b31e:	4604      	mov	r4, r0
 800b320:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800b324:	4628      	mov	r0, r5
 800b326:	4798      	blx	r3
 800b328:	4284      	cmp	r4, r0
 800b32a:	bfc8      	it	gt
 800b32c:	4623      	movgt	r3, r4
 800b32e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800b332:	bfc4      	itt	gt
 800b334:	4604      	movgt	r4, r0
 800b336:	4618      	movgt	r0, r3
 800b338:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800b33c:	42b3      	cmp	r3, r6
 800b33e:	da29      	bge.n	800b394 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800b340:	42b0      	cmp	r0, r6
 800b342:	bfa8      	it	ge
 800b344:	4630      	movge	r0, r6
 800b346:	2800      	cmp	r0, #0
 800b348:	db24      	blt.n	800b394 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800b34a:	f1b8 0f00 	cmp.w	r8, #0
 800b34e:	d11e      	bne.n	800b38e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800b350:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800b354:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800b358:	460c      	mov	r4, r1
 800b35a:	009a      	lsls	r2, r3, #2
 800b35c:	4298      	cmp	r0, r3
 800b35e:	dd0b      	ble.n	800b378 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800b360:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800b364:	58b6      	ldr	r6, [r6, r2]
 800b366:	42b1      	cmp	r1, r6
 800b368:	bfa8      	it	ge
 800b36a:	4631      	movge	r1, r6
 800b36c:	42b4      	cmp	r4, r6
 800b36e:	bfb8      	it	lt
 800b370:	4634      	movlt	r4, r6
 800b372:	3301      	adds	r3, #1
 800b374:	3204      	adds	r2, #4
 800b376:	e7f1      	b.n	800b35c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800b378:	1bc9      	subs	r1, r1, r7
 800b37a:	193a      	adds	r2, r7, r4
 800b37c:	4291      	cmp	r1, r2
 800b37e:	d009      	beq.n	800b394 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800b380:	682b      	ldr	r3, [r5, #0]
 800b382:	4628      	mov	r0, r5
 800b384:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b388:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b38c:	4718      	bx	r3
 800b38e:	427c      	negs	r4, r7
 800b390:	4639      	mov	r1, r7
 800b392:	e7e2      	b.n	800b35a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800b394:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b398 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800b398:	b530      	push	{r4, r5, lr}
 800b39a:	790b      	ldrb	r3, [r1, #4]
 800b39c:	2b02      	cmp	r3, #2
 800b39e:	b085      	sub	sp, #20
 800b3a0:	4604      	mov	r4, r0
 800b3a2:	460d      	mov	r5, r1
 800b3a4:	d020      	beq.n	800b3e8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b3a6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800b3a8:	88c9      	ldrh	r1, [r1, #6]
 800b3aa:	1ac9      	subs	r1, r1, r3
 800b3ac:	6803      	ldr	r3, [r0, #0]
 800b3ae:	f10d 0206 	add.w	r2, sp, #6
 800b3b2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800b3b6:	b209      	sxth	r1, r1
 800b3b8:	4798      	blx	r3
 800b3ba:	b1a8      	cbz	r0, 800b3e8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b3bc:	792b      	ldrb	r3, [r5, #4]
 800b3be:	2b01      	cmp	r3, #1
 800b3c0:	d812      	bhi.n	800b3e8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b3c2:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800b3c6:	b178      	cbz	r0, 800b3e8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b3c8:	6803      	ldr	r3, [r0, #0]
 800b3ca:	68db      	ldr	r3, [r3, #12]
 800b3cc:	4798      	blx	r3
 800b3ce:	b158      	cbz	r0, 800b3e8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b3d0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b3d4:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800b3d8:	f8ad 3008 	strh.w	r3, [sp, #8]
 800b3dc:	9503      	str	r5, [sp, #12]
 800b3de:	6803      	ldr	r3, [r0, #0]
 800b3e0:	aa02      	add	r2, sp, #8
 800b3e2:	689b      	ldr	r3, [r3, #8]
 800b3e4:	4621      	mov	r1, r4
 800b3e6:	4798      	blx	r3
 800b3e8:	b005      	add	sp, #20
 800b3ea:	bd30      	pop	{r4, r5, pc}

0800b3ec <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800b3ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3f0:	4604      	mov	r4, r0
 800b3f2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800b3f6:	9e06      	ldr	r6, [sp, #24]
 800b3f8:	4690      	mov	r8, r2
 800b3fa:	461f      	mov	r7, r3
 800b3fc:	b928      	cbnz	r0, 800b40a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800b3fe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b402:	8033      	strh	r3, [r6, #0]
 800b404:	803b      	strh	r3, [r7, #0]
 800b406:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b40a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800b40e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800b412:	1883      	adds	r3, r0, r2
 800b414:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800b418:	1ad2      	subs	r2, r2, r3
 800b41a:	b212      	sxth	r2, r2
 800b41c:	2a01      	cmp	r2, #1
 800b41e:	dc07      	bgt.n	800b430 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800b420:	2300      	movs	r3, #0
 800b422:	803b      	strh	r3, [r7, #0]
 800b424:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800b428:	3b01      	subs	r3, #1
 800b42a:	8033      	strh	r3, [r6, #0]
 800b42c:	2001      	movs	r0, #1
 800b42e:	e7ea      	b.n	800b406 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b430:	1a08      	subs	r0, r1, r0
 800b432:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b436:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800b43a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800b43c:	1a5b      	subs	r3, r3, r1
 800b43e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800b442:	d45b      	bmi.n	800b4fc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800b444:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800b448:	fb93 f1f5 	sdiv	r1, r3, r5
 800b44c:	2302      	movs	r3, #2
 800b44e:	fb91 f1f3 	sdiv	r1, r1, r3
 800b452:	3a01      	subs	r2, #1
 800b454:	f005 fe96 	bl	8011184 <_ZN8touchgfx6muldivElll>
 800b458:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800b45c:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800b460:	2900      	cmp	r1, #0
 800b462:	db57      	blt.n	800b514 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800b464:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800b468:	2502      	movs	r5, #2
 800b46a:	fb93 f3fc 	sdiv	r3, r3, ip
 800b46e:	fb93 f3f5 	sdiv	r3, r3, r5
 800b472:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800b476:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800b47a:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800b47e:	1a52      	subs	r2, r2, r1
 800b480:	eba8 0003 	sub.w	r0, r8, r3
 800b484:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800b488:	d450      	bmi.n	800b52c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800b48a:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800b48e:	fb92 f1fc 	sdiv	r1, r2, ip
 800b492:	2202      	movs	r2, #2
 800b494:	fb91 f1f2 	sdiv	r1, r1, r2
 800b498:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800b49c:	4413      	add	r3, r2
 800b49e:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800b4a2:	1ad2      	subs	r2, r2, r3
 800b4a4:	b212      	sxth	r2, r2
 800b4a6:	3a01      	subs	r2, #1
 800b4a8:	f005 fe6c 	bl	8011184 <_ZN8touchgfx6muldivElll>
 800b4ac:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800b4b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b4b2:	2b00      	cmp	r3, #0
 800b4b4:	db46      	blt.n	800b544 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800b4b6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800b4ba:	fb93 f3f2 	sdiv	r3, r3, r2
 800b4be:	2202      	movs	r2, #2
 800b4c0:	fb93 f3f2 	sdiv	r3, r3, r2
 800b4c4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800b4c8:	429d      	cmp	r5, r3
 800b4ca:	bfde      	ittt	le
 800b4cc:	461a      	movle	r2, r3
 800b4ce:	462b      	movle	r3, r5
 800b4d0:	4615      	movle	r5, r2
 800b4d2:	2d00      	cmp	r5, #0
 800b4d4:	bfa4      	itt	ge
 800b4d6:	351f      	addge	r5, #31
 800b4d8:	116d      	asrge	r5, r5, #5
 800b4da:	f04f 0020 	mov.w	r0, #32
 800b4de:	bfb8      	it	lt
 800b4e0:	fb95 f5f0 	sdivlt	r5, r5, r0
 800b4e4:	b22d      	sxth	r5, r5
 800b4e6:	2d00      	cmp	r5, #0
 800b4e8:	b21b      	sxth	r3, r3
 800b4ea:	fb93 f3f0 	sdiv	r3, r3, r0
 800b4ee:	803b      	strh	r3, [r7, #0]
 800b4f0:	8035      	strh	r5, [r6, #0]
 800b4f2:	da33      	bge.n	800b55c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800b4f4:	2000      	movs	r0, #0
 800b4f6:	8030      	strh	r0, [r6, #0]
 800b4f8:	8038      	strh	r0, [r7, #0]
 800b4fa:	e784      	b.n	800b406 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b4fc:	f06f 0101 	mvn.w	r1, #1
 800b500:	fb01 5303 	mla	r3, r1, r3, r5
 800b504:	1e59      	subs	r1, r3, #1
 800b506:	2302      	movs	r3, #2
 800b508:	fb91 f1f5 	sdiv	r1, r1, r5
 800b50c:	fb91 f1f3 	sdiv	r1, r1, r3
 800b510:	4249      	negs	r1, r1
 800b512:	e79e      	b.n	800b452 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800b514:	f06f 0301 	mvn.w	r3, #1
 800b518:	fb03 c301 	mla	r3, r3, r1, ip
 800b51c:	3b01      	subs	r3, #1
 800b51e:	2502      	movs	r5, #2
 800b520:	fb93 f3fc 	sdiv	r3, r3, ip
 800b524:	fb93 f3f5 	sdiv	r3, r3, r5
 800b528:	425b      	negs	r3, r3
 800b52a:	e7a2      	b.n	800b472 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800b52c:	f06f 0101 	mvn.w	r1, #1
 800b530:	fb01 c202 	mla	r2, r1, r2, ip
 800b534:	1e51      	subs	r1, r2, #1
 800b536:	2202      	movs	r2, #2
 800b538:	fb91 f1fc 	sdiv	r1, r1, ip
 800b53c:	fb91 f1f2 	sdiv	r1, r1, r2
 800b540:	4249      	negs	r1, r1
 800b542:	e7a9      	b.n	800b498 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800b544:	f06f 0101 	mvn.w	r1, #1
 800b548:	fb01 2303 	mla	r3, r1, r3, r2
 800b54c:	3b01      	subs	r3, #1
 800b54e:	fb93 f3f2 	sdiv	r3, r3, r2
 800b552:	2202      	movs	r2, #2
 800b554:	fb93 f3f2 	sdiv	r3, r3, r2
 800b558:	425b      	negs	r3, r3
 800b55a:	e7b3      	b.n	800b4c4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800b55c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b560:	f9b7 2000 	ldrsh.w	r2, [r7]
 800b564:	4293      	cmp	r3, r2
 800b566:	dc05      	bgt.n	800b574 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800b568:	3b01      	subs	r3, #1
 800b56a:	b21b      	sxth	r3, r3
 800b56c:	8033      	strh	r3, [r6, #0]
 800b56e:	2000      	movs	r0, #0
 800b570:	803b      	strh	r3, [r7, #0]
 800b572:	e748      	b.n	800b406 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b574:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b578:	803a      	strh	r2, [r7, #0]
 800b57a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b57e:	f9b6 2000 	ldrsh.w	r2, [r6]
 800b582:	4293      	cmp	r3, r2
 800b584:	bfdc      	itt	le
 800b586:	f103 33ff 	addle.w	r3, r3, #4294967295
 800b58a:	b21a      	sxthle	r2, r3
 800b58c:	8032      	strh	r2, [r6, #0]
 800b58e:	e74d      	b.n	800b42c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800b590 <_ZN8touchgfx9ContainerC1Ev>:
 800b590:	2101      	movs	r1, #1
 800b592:	2200      	movs	r2, #0
 800b594:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b598:	4909      	ldr	r1, [pc, #36]	; (800b5c0 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800b59a:	8082      	strh	r2, [r0, #4]
 800b59c:	80c2      	strh	r2, [r0, #6]
 800b59e:	8102      	strh	r2, [r0, #8]
 800b5a0:	8142      	strh	r2, [r0, #10]
 800b5a2:	8182      	strh	r2, [r0, #12]
 800b5a4:	81c2      	strh	r2, [r0, #14]
 800b5a6:	8202      	strh	r2, [r0, #16]
 800b5a8:	8242      	strh	r2, [r0, #18]
 800b5aa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b5ae:	61c2      	str	r2, [r0, #28]
 800b5b0:	8402      	strh	r2, [r0, #32]
 800b5b2:	8442      	strh	r2, [r0, #34]	; 0x22
 800b5b4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b5b8:	6001      	str	r1, [r0, #0]
 800b5ba:	6282      	str	r2, [r0, #40]	; 0x28
 800b5bc:	4770      	bx	lr
 800b5be:	bf00      	nop
 800b5c0:	080222d8 	.word	0x080222d8

0800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800b5c4:	6800      	ldr	r0, [r0, #0]
 800b5c6:	2800      	cmp	r0, #0
 800b5c8:	bfbd      	ittte	lt
 800b5ca:	380f      	sublt	r0, #15
 800b5cc:	2320      	movlt	r3, #32
 800b5ce:	fb90 f0f3 	sdivlt	r0, r0, r3
 800b5d2:	3010      	addge	r0, #16
 800b5d4:	bfa8      	it	ge
 800b5d6:	1140      	asrge	r0, r0, #5
 800b5d8:	4770      	bx	lr

0800b5da <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800b5da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5de:	4605      	mov	r5, r0
 800b5e0:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800b5e4:	4688      	mov	r8, r1
 800b5e6:	4691      	mov	r9, r2
 800b5e8:	469a      	mov	sl, r3
 800b5ea:	b360      	cbz	r0, 800b646 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800b5ec:	2700      	movs	r7, #0
 800b5ee:	f04f 3bff 	mov.w	fp, #4294967295
 800b5f2:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800b5f6:	b23e      	sxth	r6, r7
 800b5f8:	42b3      	cmp	r3, r6
 800b5fa:	dd23      	ble.n	800b644 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800b5fc:	682b      	ldr	r3, [r5, #0]
 800b5fe:	4631      	mov	r1, r6
 800b600:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800b604:	4628      	mov	r0, r5
 800b606:	4798      	blx	r3
 800b608:	9001      	str	r0, [sp, #4]
 800b60a:	a801      	add	r0, sp, #4
 800b60c:	f7ff ffda 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b610:	682b      	ldr	r3, [r5, #0]
 800b612:	eba0 0008 	sub.w	r0, r0, r8
 800b616:	b204      	sxth	r4, r0
 800b618:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800b61c:	4631      	mov	r1, r6
 800b61e:	4628      	mov	r0, r5
 800b620:	4798      	blx	r3
 800b622:	9001      	str	r0, [sp, #4]
 800b624:	a801      	add	r0, sp, #4
 800b626:	f7ff ffcd 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b62a:	eba0 0009 	sub.w	r0, r0, r9
 800b62e:	fb10 f000 	smulbb	r0, r0, r0
 800b632:	fb04 0404 	mla	r4, r4, r4, r0
 800b636:	455c      	cmp	r4, fp
 800b638:	bf3c      	itt	cc
 800b63a:	f8aa 6000 	strhcc.w	r6, [sl]
 800b63e:	46a3      	movcc	fp, r4
 800b640:	3701      	adds	r7, #1
 800b642:	e7d6      	b.n	800b5f2 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800b644:	2001      	movs	r0, #1
 800b646:	b003      	add	sp, #12
 800b648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b64c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800b64c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b650:	4604      	mov	r4, r0
 800b652:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800b656:	4688      	mov	r8, r1
 800b658:	4691      	mov	r9, r2
 800b65a:	b1f8      	cbz	r0, 800b69c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800b65c:	2500      	movs	r5, #0
 800b65e:	f04f 37ff 	mov.w	r7, #4294967295
 800b662:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b666:	b22e      	sxth	r6, r5
 800b668:	42b3      	cmp	r3, r6
 800b66a:	dd16      	ble.n	800b69a <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800b66c:	6823      	ldr	r3, [r4, #0]
 800b66e:	4631      	mov	r1, r6
 800b670:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800b674:	4620      	mov	r0, r4
 800b676:	4798      	blx	r3
 800b678:	9001      	str	r0, [sp, #4]
 800b67a:	a801      	add	r0, sp, #4
 800b67c:	f7ff ffa2 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b680:	b200      	sxth	r0, r0
 800b682:	eba0 0008 	sub.w	r0, r0, r8
 800b686:	2800      	cmp	r0, #0
 800b688:	bfb8      	it	lt
 800b68a:	4240      	neglt	r0, r0
 800b68c:	42b8      	cmp	r0, r7
 800b68e:	bf3c      	itt	cc
 800b690:	f8a9 6000 	strhcc.w	r6, [r9]
 800b694:	4607      	movcc	r7, r0
 800b696:	3501      	adds	r5, #1
 800b698:	e7e3      	b.n	800b662 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800b69a:	2001      	movs	r0, #1
 800b69c:	b003      	add	sp, #12
 800b69e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b6a2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800b6a2:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800b6a6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800b6aa:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800b6ae:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800b6b2:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800b6b6:	4770      	bx	lr

0800b6b8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800b6b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b6ba:	4604      	mov	r4, r0
 800b6bc:	3038      	adds	r0, #56	; 0x38
 800b6be:	460d      	mov	r5, r1
 800b6c0:	f7fe fb1c 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b6c4:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800b6c8:	9200      	str	r2, [sp, #0]
 800b6ca:	2200      	movs	r2, #0
 800b6cc:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800b6d0:	4611      	mov	r1, r2
 800b6d2:	4628      	mov	r0, r5
 800b6d4:	f7f7 fad7 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b6d8:	b003      	add	sp, #12
 800b6da:	bd30      	pop	{r4, r5, pc}

0800b6dc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800b6dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b6de:	4604      	mov	r4, r0
 800b6e0:	3064      	adds	r0, #100	; 0x64
 800b6e2:	460d      	mov	r5, r1
 800b6e4:	f7fe fb0a 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b6e8:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800b6ec:	9200      	str	r2, [sp, #0]
 800b6ee:	2200      	movs	r2, #0
 800b6f0:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800b6f4:	4611      	mov	r1, r2
 800b6f6:	4628      	mov	r0, r5
 800b6f8:	f7f7 fac5 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b6fc:	b003      	add	sp, #12
 800b6fe:	bd30      	pop	{r4, r5, pc}

0800b700 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800b700:	b538      	push	{r3, r4, r5, lr}
 800b702:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800b706:	428b      	cmp	r3, r1
 800b708:	460d      	mov	r5, r1
 800b70a:	dd08      	ble.n	800b71e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800b70c:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800b70e:	b134      	cbz	r4, 800b71e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800b710:	6823      	ldr	r3, [r4, #0]
 800b712:	4620      	mov	r0, r4
 800b714:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b716:	4629      	mov	r1, r5
 800b718:	4798      	blx	r3
 800b71a:	69a4      	ldr	r4, [r4, #24]
 800b71c:	e7f7      	b.n	800b70e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800b71e:	bd38      	pop	{r3, r4, r5, pc}

0800b720 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800b720:	b570      	push	{r4, r5, r6, lr}
 800b722:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800b726:	4606      	mov	r6, r0
 800b728:	460d      	mov	r5, r1
 800b72a:	b134      	cbz	r4, 800b73a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800b72c:	6823      	ldr	r3, [r4, #0]
 800b72e:	4620      	mov	r0, r4
 800b730:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b732:	4629      	mov	r1, r5
 800b734:	4798      	blx	r3
 800b736:	69a4      	ldr	r4, [r4, #24]
 800b738:	e7f7      	b.n	800b72a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800b73a:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800b73e:	b134      	cbz	r4, 800b74e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800b740:	6823      	ldr	r3, [r4, #0]
 800b742:	4620      	mov	r0, r4
 800b744:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b746:	4629      	mov	r1, r5
 800b748:	4798      	blx	r3
 800b74a:	69a4      	ldr	r4, [r4, #24]
 800b74c:	e7f7      	b.n	800b73e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800b74e:	bd70      	pop	{r4, r5, r6, pc}

0800b750 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800b750:	b538      	push	{r3, r4, r5, lr}
 800b752:	4604      	mov	r4, r0
 800b754:	2500      	movs	r5, #0
 800b756:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b75a:	42ab      	cmp	r3, r5
 800b75c:	db05      	blt.n	800b76a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800b75e:	b229      	sxth	r1, r5
 800b760:	4620      	mov	r0, r4
 800b762:	f7ff ffdd 	bl	800b720 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800b766:	3501      	adds	r5, #1
 800b768:	e7f5      	b.n	800b756 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800b76a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800b76e:	f005 fb48 	bl	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b772:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800b776:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b77a:	f005 bb42 	b.w	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b77e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800b77e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b780:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800b782:	4604      	mov	r4, r0
 800b784:	b15d      	cbz	r5, 800b79e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800b786:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800b78a:	9200      	str	r2, [sp, #0]
 800b78c:	2200      	movs	r2, #0
 800b78e:	4628      	mov	r0, r5
 800b790:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800b794:	4611      	mov	r1, r2
 800b796:	f7f7 fa76 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b79a:	69ad      	ldr	r5, [r5, #24]
 800b79c:	e7f2      	b.n	800b784 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800b79e:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800b7a2:	b15d      	cbz	r5, 800b7bc <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800b7a4:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800b7a8:	9200      	str	r2, [sp, #0]
 800b7aa:	2200      	movs	r2, #0
 800b7ac:	4628      	mov	r0, r5
 800b7ae:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800b7b2:	4611      	mov	r1, r2
 800b7b4:	f7f7 fa67 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b7b8:	69ad      	ldr	r5, [r5, #24]
 800b7ba:	e7f2      	b.n	800b7a2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800b7bc:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800b7c0:	b15d      	cbz	r5, 800b7da <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800b7c2:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800b7c6:	9200      	str	r2, [sp, #0]
 800b7c8:	2200      	movs	r2, #0
 800b7ca:	4628      	mov	r0, r5
 800b7cc:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800b7d0:	4611      	mov	r1, r2
 800b7d2:	f7f7 fa58 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b7d6:	69ad      	ldr	r5, [r5, #24]
 800b7d8:	e7f2      	b.n	800b7c0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800b7da:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800b7de:	b15d      	cbz	r5, 800b7f8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800b7e0:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800b7e4:	9200      	str	r2, [sp, #0]
 800b7e6:	2200      	movs	r2, #0
 800b7e8:	4628      	mov	r0, r5
 800b7ea:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800b7ee:	4611      	mov	r1, r2
 800b7f0:	f7f7 fa49 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b7f4:	69ad      	ldr	r5, [r5, #24]
 800b7f6:	e7f2      	b.n	800b7de <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800b7f8:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800b7fc:	b15d      	cbz	r5, 800b816 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800b7fe:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800b802:	9200      	str	r2, [sp, #0]
 800b804:	2200      	movs	r2, #0
 800b806:	4628      	mov	r0, r5
 800b808:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800b80c:	4611      	mov	r1, r2
 800b80e:	f7f7 fa3a 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b812:	69ad      	ldr	r5, [r5, #24]
 800b814:	e7f2      	b.n	800b7fc <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800b816:	6823      	ldr	r3, [r4, #0]
 800b818:	695b      	ldr	r3, [r3, #20]
 800b81a:	4620      	mov	r0, r4
 800b81c:	b003      	add	sp, #12
 800b81e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b822:	4718      	bx	r3

0800b824 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800b824:	b430      	push	{r4, r5}
 800b826:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800b82a:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800b82e:	b28a      	uxth	r2, r1
 800b830:	1b15      	subs	r5, r2, r4
 800b832:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800b836:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800b83a:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800b83e:	442c      	add	r4, r5
 800b840:	1b12      	subs	r2, r2, r4
 800b842:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800b846:	8101      	strh	r1, [r0, #8]
 800b848:	bc30      	pop	{r4, r5}
 800b84a:	f7ff bf98 	b.w	800b77e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800b84e <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800b84e:	b430      	push	{r4, r5}
 800b850:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800b854:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800b858:	b28a      	uxth	r2, r1
 800b85a:	1b15      	subs	r5, r2, r4
 800b85c:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800b860:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800b864:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800b868:	442c      	add	r4, r5
 800b86a:	1b12      	subs	r2, r2, r4
 800b86c:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800b870:	8141      	strh	r1, [r0, #10]
 800b872:	bc30      	pop	{r4, r5}
 800b874:	f7ff bf83 	b.w	800b77e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800b878 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800b878:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b87c:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800b880:	fa1f fa83 	uxth.w	sl, r3
 800b884:	4699      	mov	r9, r3
 800b886:	8903      	ldrh	r3, [r0, #8]
 800b888:	4604      	mov	r4, r0
 800b88a:	4615      	mov	r5, r2
 800b88c:	fa1f f887 	uxth.w	r8, r7
 800b890:	4452      	add	r2, sl
 800b892:	8940      	ldrh	r0, [r0, #10]
 800b894:	1a9b      	subs	r3, r3, r2
 800b896:	eb08 0201 	add.w	r2, r8, r1
 800b89a:	1a80      	subs	r0, r0, r2
 800b89c:	b200      	sxth	r0, r0
 800b89e:	460e      	mov	r6, r1
 800b8a0:	9000      	str	r0, [sp, #0]
 800b8a2:	460a      	mov	r2, r1
 800b8a4:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800b8a8:	4629      	mov	r1, r5
 800b8aa:	b21b      	sxth	r3, r3
 800b8ac:	f7f7 f9eb 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b8b0:	2200      	movs	r2, #0
 800b8b2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b8b6:	9600      	str	r6, [sp, #0]
 800b8b8:	4611      	mov	r1, r2
 800b8ba:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800b8be:	f7f7 f9e2 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b8c2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b8c6:	9300      	str	r3, [sp, #0]
 800b8c8:	2200      	movs	r2, #0
 800b8ca:	462b      	mov	r3, r5
 800b8cc:	4611      	mov	r1, r2
 800b8ce:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800b8d2:	f7f7 f9d8 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b8d6:	8921      	ldrh	r1, [r4, #8]
 800b8d8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b8dc:	9300      	str	r3, [sp, #0]
 800b8de:	eba1 010a 	sub.w	r1, r1, sl
 800b8e2:	464b      	mov	r3, r9
 800b8e4:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800b8e8:	2200      	movs	r2, #0
 800b8ea:	b209      	sxth	r1, r1
 800b8ec:	f7f7 f9cb 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b8f0:	8962      	ldrh	r2, [r4, #10]
 800b8f2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b8f6:	9700      	str	r7, [sp, #0]
 800b8f8:	eba2 0208 	sub.w	r2, r2, r8
 800b8fc:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800b900:	b212      	sxth	r2, r2
 800b902:	2100      	movs	r1, #0
 800b904:	f7f7 f9bf 	bl	8002c86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b908:	4620      	mov	r0, r4
 800b90a:	b002      	add	sp, #8
 800b90c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b910:	f7ff bf35 	b.w	800b77e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800b914 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800b914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b918:	b085      	sub	sp, #20
 800b91a:	4604      	mov	r4, r0
 800b91c:	9103      	str	r1, [sp, #12]
 800b91e:	f7ff fe37 	bl	800b590 <_ZN8touchgfx9ContainerC1Ev>
 800b922:	4b2d      	ldr	r3, [pc, #180]	; (800b9d8 <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800b924:	6023      	str	r3, [r4, #0]
 800b926:	2601      	movs	r6, #1
 800b928:	23ff      	movs	r3, #255	; 0xff
 800b92a:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800b92e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b932:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800b936:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800b93a:	4658      	mov	r0, fp
 800b93c:	f7ff fe28 	bl	800b590 <_ZN8touchgfx9ContainerC1Ev>
 800b940:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800b944:	4648      	mov	r0, r9
 800b946:	f7ff fe23 	bl	800b590 <_ZN8touchgfx9ContainerC1Ev>
 800b94a:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800b94e:	4640      	mov	r0, r8
 800b950:	f7ff fe1e 	bl	800b590 <_ZN8touchgfx9ContainerC1Ev>
 800b954:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800b958:	4650      	mov	r0, sl
 800b95a:	f7ff fe19 	bl	800b590 <_ZN8touchgfx9ContainerC1Ev>
 800b95e:	4638      	mov	r0, r7
 800b960:	f7ff fe16 	bl	800b590 <_ZN8touchgfx9ContainerC1Ev>
 800b964:	2500      	movs	r5, #0
 800b966:	9903      	ldr	r1, [sp, #12]
 800b968:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800b96c:	4620      	mov	r0, r4
 800b96e:	4659      	mov	r1, fp
 800b970:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800b974:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800b978:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800b97c:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800b980:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800b984:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800b988:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800b98c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800b990:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800b994:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800b998:	f7fe f9b0 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b99c:	4651      	mov	r1, sl
 800b99e:	4620      	mov	r0, r4
 800b9a0:	f7fe f9ac 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b9a4:	4649      	mov	r1, r9
 800b9a6:	4620      	mov	r0, r4
 800b9a8:	f7fe f9a8 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b9ac:	4641      	mov	r1, r8
 800b9ae:	4620      	mov	r0, r4
 800b9b0:	f7fe f9a4 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b9b4:	4639      	mov	r1, r7
 800b9b6:	4620      	mov	r0, r4
 800b9b8:	f7fe f9a0 	bl	8009cfc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b9bc:	4620      	mov	r0, r4
 800b9be:	9500      	str	r5, [sp, #0]
 800b9c0:	462b      	mov	r3, r5
 800b9c2:	462a      	mov	r2, r5
 800b9c4:	4629      	mov	r1, r5
 800b9c6:	f7ff ff57 	bl	800b878 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800b9ca:	4620      	mov	r0, r4
 800b9cc:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800b9d0:	b005      	add	sp, #20
 800b9d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b9d6:	bf00      	nop
 800b9d8:	080225e0 	.word	0x080225e0

0800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800b9dc:	4291      	cmp	r1, r2
 800b9de:	4613      	mov	r3, r2
 800b9e0:	d003      	beq.n	800b9ea <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800b9e2:	460a      	mov	r2, r1
 800b9e4:	4619      	mov	r1, r3
 800b9e6:	f005 bbcd 	b.w	8011184 <_ZN8touchgfx6muldivElll>
 800b9ea:	4770      	bx	lr

0800b9ec <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800b9ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9f0:	6803      	ldr	r3, [r0, #0]
 800b9f2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800b9f6:	460d      	mov	r5, r1
 800b9f8:	4604      	mov	r4, r0
 800b9fa:	4798      	blx	r3
 800b9fc:	42a8      	cmp	r0, r5
 800b9fe:	4606      	mov	r6, r0
 800ba00:	d024      	beq.n	800ba4c <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800ba02:	6823      	ldr	r3, [r4, #0]
 800ba04:	4601      	mov	r1, r0
 800ba06:	462a      	mov	r2, r5
 800ba08:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800ba0c:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800ba10:	f7ff ffe4 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800ba14:	462a      	mov	r2, r5
 800ba16:	4680      	mov	r8, r0
 800ba18:	4631      	mov	r1, r6
 800ba1a:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800ba1e:	f7ff ffdd 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800ba22:	4641      	mov	r1, r8
 800ba24:	4602      	mov	r2, r0
 800ba26:	4620      	mov	r0, r4
 800ba28:	47b8      	blx	r7
 800ba2a:	462a      	mov	r2, r5
 800ba2c:	4631      	mov	r1, r6
 800ba2e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800ba32:	f7ff ffd3 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800ba36:	462a      	mov	r2, r5
 800ba38:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800ba3c:	4631      	mov	r1, r6
 800ba3e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800ba42:	f7ff ffcb 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800ba46:	6325      	str	r5, [r4, #48]	; 0x30
 800ba48:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800ba4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ba50 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800ba50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ba54:	4604      	mov	r4, r0
 800ba56:	460f      	mov	r7, r1
 800ba58:	b1ba      	cbz	r2, 800ba8a <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800ba5a:	6803      	ldr	r3, [r0, #0]
 800ba5c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800ba60:	4798      	blx	r3
 800ba62:	2600      	movs	r6, #0
 800ba64:	4681      	mov	r9, r0
 800ba66:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800ba6a:	b235      	sxth	r5, r6
 800ba6c:	42ab      	cmp	r3, r5
 800ba6e:	f106 0601 	add.w	r6, r6, #1
 800ba72:	dd0a      	ble.n	800ba8a <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800ba74:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800ba78:	463a      	mov	r2, r7
 800ba7a:	4649      	mov	r1, r9
 800ba7c:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800ba80:	f7ff ffac 	bl	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800ba84:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800ba88:	e7ed      	b.n	800ba66 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800ba8a:	6367      	str	r7, [r4, #52]	; 0x34
 800ba8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800ba90 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800ba90:	b570      	push	{r4, r5, r6, lr}
 800ba92:	6803      	ldr	r3, [r0, #0]
 800ba94:	4604      	mov	r4, r0
 800ba96:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800ba9a:	460d      	mov	r5, r1
 800ba9c:	4798      	blx	r3
 800ba9e:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800baa2:	3301      	adds	r3, #1
 800baa4:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800baa8:	6823      	ldr	r3, [r4, #0]
 800baaa:	4629      	mov	r1, r5
 800baac:	4620      	mov	r0, r4
 800baae:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800bab2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bab6:	4718      	bx	r3

0800bab8 <_ZN8touchgfx16GraphElementLineD1Ev>:
 800bab8:	4770      	bx	lr

0800baba <_ZN8touchgfx16GraphElementLineD0Ev>:
 800baba:	b510      	push	{r4, lr}
 800babc:	2130      	movs	r1, #48	; 0x30
 800babe:	4604      	mov	r4, r0
 800bac0:	f013 fd24 	bl	801f50c <_ZdlPvj>
 800bac4:	4620      	mov	r0, r4
 800bac6:	bd10      	pop	{r4, pc}

0800bac8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800bac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800baca:	4604      	mov	r4, r0
 800bacc:	4608      	mov	r0, r1
 800bace:	460d      	mov	r5, r1
 800bad0:	f7fe fae7 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bad4:	b978      	cbnz	r0, 800baf6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800bad6:	4620      	mov	r0, r4
 800bad8:	f7fe fae3 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800badc:	f9b5 6000 	ldrsh.w	r6, [r5]
 800bae0:	b150      	cbz	r0, 800baf8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800bae2:	8026      	strh	r6, [r4, #0]
 800bae4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800bae8:	8063      	strh	r3, [r4, #2]
 800baea:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800baee:	80a3      	strh	r3, [r4, #4]
 800baf0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800baf4:	80e3      	strh	r3, [r4, #6]
 800baf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800baf8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800bafc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800bb00:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800bb04:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800bb08:	88ed      	ldrh	r5, [r5, #6]
 800bb0a:	42b1      	cmp	r1, r6
 800bb0c:	460f      	mov	r7, r1
 800bb0e:	bfa8      	it	ge
 800bb10:	4637      	movge	r7, r6
 800bb12:	4293      	cmp	r3, r2
 800bb14:	4618      	mov	r0, r3
 800bb16:	4466      	add	r6, ip
 800bb18:	bfa8      	it	ge
 800bb1a:	4610      	movge	r0, r2
 800bb1c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800bb20:	8027      	strh	r7, [r4, #0]
 800bb22:	442a      	add	r2, r5
 800bb24:	88e5      	ldrh	r5, [r4, #6]
 800bb26:	8060      	strh	r0, [r4, #2]
 800bb28:	4461      	add	r1, ip
 800bb2a:	442b      	add	r3, r5
 800bb2c:	b236      	sxth	r6, r6
 800bb2e:	b209      	sxth	r1, r1
 800bb30:	b212      	sxth	r2, r2
 800bb32:	b21b      	sxth	r3, r3
 800bb34:	428e      	cmp	r6, r1
 800bb36:	bfac      	ite	ge
 800bb38:	ebc7 0106 	rsbge	r1, r7, r6
 800bb3c:	ebc7 0101 	rsblt	r1, r7, r1
 800bb40:	429a      	cmp	r2, r3
 800bb42:	bfac      	ite	ge
 800bb44:	ebc0 0202 	rsbge	r2, r0, r2
 800bb48:	ebc0 0203 	rsblt	r2, r0, r3
 800bb4c:	80a1      	strh	r1, [r4, #4]
 800bb4e:	80e2      	strh	r2, [r4, #6]
 800bb50:	e7d1      	b.n	800baf6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800bb52 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800bb52:	6800      	ldr	r0, [r0, #0]
 800bb54:	2800      	cmp	r0, #0
 800bb56:	bfb9      	ittee	lt
 800bb58:	2320      	movlt	r3, #32
 800bb5a:	fb90 f0f3 	sdivlt	r0, r0, r3
 800bb5e:	301f      	addge	r0, #31
 800bb60:	1140      	asrge	r0, r0, #5
 800bb62:	4770      	bx	lr

0800bb64 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800bb64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb68:	6803      	ldr	r3, [r0, #0]
 800bb6a:	6945      	ldr	r5, [r0, #20]
 800bb6c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bb6e:	b093      	sub	sp, #76	; 0x4c
 800bb70:	4604      	mov	r4, r0
 800bb72:	460f      	mov	r7, r1
 800bb74:	2d00      	cmp	r5, #0
 800bb76:	f000 81ad 	beq.w	800bed4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800bb7a:	696d      	ldr	r5, [r5, #20]
 800bb7c:	4798      	blx	r3
 800bb7e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bb82:	2b00      	cmp	r3, #0
 800bb84:	d077      	beq.n	800bc76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bb86:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800bb8a:	fb13 f000 	smulbb	r0, r3, r0
 800bb8e:	b283      	uxth	r3, r0
 800bb90:	1c58      	adds	r0, r3, #1
 800bb92:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800bb96:	1200      	asrs	r0, r0, #8
 800bb98:	d06d      	beq.n	800bc76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bb9a:	b2c3      	uxtb	r3, r0
 800bb9c:	9308      	str	r3, [sp, #32]
 800bb9e:	6823      	ldr	r3, [r4, #0]
 800bba0:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800bba4:	462a      	mov	r2, r5
 800bba6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800bbaa:	4621      	mov	r1, r4
 800bbac:	4640      	mov	r0, r8
 800bbae:	4798      	blx	r3
 800bbb0:	e898 0003 	ldmia.w	r8, {r0, r1}
 800bbb4:	ae0e      	add	r6, sp, #56	; 0x38
 800bbb6:	e886 0003 	stmia.w	r6, {r0, r1}
 800bbba:	4639      	mov	r1, r7
 800bbbc:	4630      	mov	r0, r6
 800bbbe:	f7fe fa2d 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800bbc2:	6823      	ldr	r3, [r4, #0]
 800bbc4:	4629      	mov	r1, r5
 800bbc6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bbca:	4620      	mov	r0, r4
 800bbcc:	4798      	blx	r3
 800bbce:	6823      	ldr	r3, [r4, #0]
 800bbd0:	4607      	mov	r7, r0
 800bbd2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bbd6:	4629      	mov	r1, r5
 800bbd8:	4620      	mov	r0, r4
 800bbda:	4798      	blx	r3
 800bbdc:	4681      	mov	r9, r0
 800bbde:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800bbe2:	0103      	lsls	r3, r0, #4
 800bbe4:	9309      	str	r3, [sp, #36]	; 0x24
 800bbe6:	6823      	ldr	r3, [r4, #0]
 800bbe8:	4629      	mov	r1, r5
 800bbea:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800bbee:	4620      	mov	r0, r4
 800bbf0:	4798      	blx	r3
 800bbf2:	b203      	sxth	r3, r0
 800bbf4:	9306      	str	r3, [sp, #24]
 800bbf6:	6823      	ldr	r3, [r4, #0]
 800bbf8:	4629      	mov	r1, r5
 800bbfa:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bbfe:	4620      	mov	r0, r4
 800bc00:	4798      	blx	r3
 800bc02:	2f00      	cmp	r7, #0
 800bc04:	b203      	sxth	r3, r0
 800bc06:	9307      	str	r3, [sp, #28]
 800bc08:	d138      	bne.n	800bc7c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800bc0a:	f1b9 0f00 	cmp.w	r9, #0
 800bc0e:	d132      	bne.n	800bc76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bc10:	6823      	ldr	r3, [r4, #0]
 800bc12:	464a      	mov	r2, r9
 800bc14:	4629      	mov	r1, r5
 800bc16:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800bc1a:	4620      	mov	r0, r4
 800bc1c:	4798      	blx	r3
 800bc1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bc20:	1ac0      	subs	r0, r0, r3
 800bc22:	9010      	str	r0, [sp, #64]	; 0x40
 800bc24:	4640      	mov	r0, r8
 800bc26:	f7ff fccd 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bc2a:	6823      	ldr	r3, [r4, #0]
 800bc2c:	4607      	mov	r7, r0
 800bc2e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800bc32:	4629      	mov	r1, r5
 800bc34:	4620      	mov	r0, r4
 800bc36:	4798      	blx	r3
 800bc38:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bc3c:	1a38      	subs	r0, r7, r0
 800bc3e:	fa0f f880 	sxth.w	r8, r0
 800bc42:	eb13 0f08 	cmn.w	r3, r8
 800bc46:	d416      	bmi.n	800bc76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bc48:	6823      	ldr	r3, [r4, #0]
 800bc4a:	4629      	mov	r1, r5
 800bc4c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800bc50:	4620      	mov	r0, r4
 800bc52:	4798      	blx	r3
 800bc54:	4580      	cmp	r8, r0
 800bc56:	da0e      	bge.n	800bc76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bc58:	9a08      	ldr	r2, [sp, #32]
 800bc5a:	6823      	ldr	r3, [r4, #0]
 800bc5c:	9202      	str	r2, [sp, #8]
 800bc5e:	b23f      	sxth	r7, r7
 800bc60:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800bc64:	9201      	str	r2, [sp, #4]
 800bc66:	9700      	str	r7, [sp, #0]
 800bc68:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800bc6c:	4631      	mov	r1, r6
 800bc6e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800bc72:	4620      	mov	r0, r4
 800bc74:	47a8      	blx	r5
 800bc76:	b013      	add	sp, #76	; 0x4c
 800bc78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc7c:	ddfb      	ble.n	800bc76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bc7e:	6823      	ldr	r3, [r4, #0]
 800bc80:	4629      	mov	r1, r5
 800bc82:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800bc86:	4620      	mov	r0, r4
 800bc88:	4798      	blx	r3
 800bc8a:	6823      	ldr	r3, [r4, #0]
 800bc8c:	4683      	mov	fp, r0
 800bc8e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800bc92:	4629      	mov	r1, r5
 800bc94:	4620      	mov	r0, r4
 800bc96:	4798      	blx	r3
 800bc98:	eba0 030b 	sub.w	r3, r0, fp
 800bc9c:	2b00      	cmp	r3, #0
 800bc9e:	bfb8      	it	lt
 800bca0:	425b      	neglt	r3, r3
 800bca2:	fb93 f3f7 	sdiv	r3, r3, r7
 800bca6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800bcaa:	4680      	mov	r8, r0
 800bcac:	dce3      	bgt.n	800bc76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bcae:	6823      	ldr	r3, [r4, #0]
 800bcb0:	465a      	mov	r2, fp
 800bcb2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800bcb6:	4629      	mov	r1, r5
 800bcb8:	4620      	mov	r0, r4
 800bcba:	4798      	blx	r3
 800bcbc:	6823      	ldr	r3, [r4, #0]
 800bcbe:	4606      	mov	r6, r0
 800bcc0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800bcc4:	4642      	mov	r2, r8
 800bcc6:	4629      	mov	r1, r5
 800bcc8:	4620      	mov	r0, r4
 800bcca:	4798      	blx	r3
 800bccc:	42b0      	cmp	r0, r6
 800bcce:	bfa2      	ittt	ge
 800bcd0:	4643      	movge	r3, r8
 800bcd2:	46d8      	movge	r8, fp
 800bcd4:	469b      	movge	fp, r3
 800bcd6:	45d8      	cmp	r8, fp
 800bcd8:	bfac      	ite	ge
 800bcda:	f04f 33ff 	movge.w	r3, #4294967295
 800bcde:	2301      	movlt	r3, #1
 800bce0:	fb98 f6f7 	sdiv	r6, r8, r7
 800bce4:	fb9b f2f7 	sdiv	r2, fp, r7
 800bce8:	1af6      	subs	r6, r6, r3
 800bcea:	441a      	add	r2, r3
 800bcec:	4296      	cmp	r6, r2
 800bcee:	bfac      	ite	ge
 800bcf0:	f04f 3aff 	movge.w	sl, #4294967295
 800bcf4:	f04f 0a01 	movlt.w	sl, #1
 800bcf8:	f1b9 0f00 	cmp.w	r9, #0
 800bcfc:	d13e      	bne.n	800bd7c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800bcfe:	fb07 fb0a 	mul.w	fp, r7, sl
 800bd02:	eb0a 0802 	add.w	r8, sl, r2
 800bd06:	4377      	muls	r7, r6
 800bd08:	45b0      	cmp	r8, r6
 800bd0a:	d0b4      	beq.n	800bc76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bd0c:	6823      	ldr	r3, [r4, #0]
 800bd0e:	463a      	mov	r2, r7
 800bd10:	4629      	mov	r1, r5
 800bd12:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800bd16:	4620      	mov	r0, r4
 800bd18:	4798      	blx	r3
 800bd1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bd1c:	1ac0      	subs	r0, r0, r3
 800bd1e:	9010      	str	r0, [sp, #64]	; 0x40
 800bd20:	a810      	add	r0, sp, #64	; 0x40
 800bd22:	f7ff fc4f 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bd26:	6823      	ldr	r3, [r4, #0]
 800bd28:	4681      	mov	r9, r0
 800bd2a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800bd2e:	4629      	mov	r1, r5
 800bd30:	4620      	mov	r0, r4
 800bd32:	4798      	blx	r3
 800bd34:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800bd38:	eba9 0000 	sub.w	r0, r9, r0
 800bd3c:	b203      	sxth	r3, r0
 800bd3e:	42da      	cmn	r2, r3
 800bd40:	9304      	str	r3, [sp, #16]
 800bd42:	d418      	bmi.n	800bd76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800bd44:	6822      	ldr	r2, [r4, #0]
 800bd46:	4629      	mov	r1, r5
 800bd48:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800bd4c:	4620      	mov	r0, r4
 800bd4e:	4790      	blx	r2
 800bd50:	9b04      	ldr	r3, [sp, #16]
 800bd52:	4283      	cmp	r3, r0
 800bd54:	da0f      	bge.n	800bd76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800bd56:	9b08      	ldr	r3, [sp, #32]
 800bd58:	9302      	str	r3, [sp, #8]
 800bd5a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bd5e:	6822      	ldr	r2, [r4, #0]
 800bd60:	9301      	str	r3, [sp, #4]
 800bd62:	fa0f f389 	sxth.w	r3, r9
 800bd66:	9300      	str	r3, [sp, #0]
 800bd68:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800bd6c:	a90e      	add	r1, sp, #56	; 0x38
 800bd6e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800bd72:	4620      	mov	r0, r4
 800bd74:	47c8      	blx	r9
 800bd76:	4456      	add	r6, sl
 800bd78:	445f      	add	r7, fp
 800bd7a:	e7c5      	b.n	800bd08 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800bd7c:	fb98 f8f9 	sdiv	r8, r8, r9
 800bd80:	eba8 0203 	sub.w	r2, r8, r3
 800bd84:	fb9b f8f9 	sdiv	r8, fp, r9
 800bd88:	4498      	add	r8, r3
 800bd8a:	4542      	cmp	r2, r8
 800bd8c:	bfac      	ite	ge
 800bd8e:	f04f 33ff 	movge.w	r3, #4294967295
 800bd92:	2301      	movlt	r3, #1
 800bd94:	930a      	str	r3, [sp, #40]	; 0x28
 800bd96:	6823      	ldr	r3, [r4, #0]
 800bd98:	9204      	str	r2, [sp, #16]
 800bd9a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800bd9e:	fb02 f209 	mul.w	r2, r2, r9
 800bda2:	4629      	mov	r1, r5
 800bda4:	4620      	mov	r0, r4
 800bda6:	4798      	blx	r3
 800bda8:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800bdac:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800bdb0:	4658      	mov	r0, fp
 800bdb2:	f7ff fc07 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bdb6:	b203      	sxth	r3, r0
 800bdb8:	9305      	str	r3, [sp, #20]
 800bdba:	6823      	ldr	r3, [r4, #0]
 800bdbc:	fb06 f207 	mul.w	r2, r6, r7
 800bdc0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800bdc4:	4629      	mov	r1, r5
 800bdc6:	4620      	mov	r0, r4
 800bdc8:	4798      	blx	r3
 800bdca:	9010      	str	r0, [sp, #64]	; 0x40
 800bdcc:	4658      	mov	r0, fp
 800bdce:	f7ff fbf9 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bdd2:	fb07 f20a 	mul.w	r2, r7, sl
 800bdd6:	920b      	str	r2, [sp, #44]	; 0x2c
 800bdd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bdda:	4442      	add	r2, r8
 800bddc:	b203      	sxth	r3, r0
 800bdde:	920c      	str	r2, [sp, #48]	; 0x30
 800bde0:	9a05      	ldr	r2, [sp, #20]
 800bde2:	429a      	cmp	r2, r3
 800bde4:	dc16      	bgt.n	800be14 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800bde6:	eb06 080a 	add.w	r8, r6, sl
 800bdea:	fb07 f808 	mul.w	r8, r7, r8
 800bdee:	9a05      	ldr	r2, [sp, #20]
 800bdf0:	429a      	cmp	r2, r3
 800bdf2:	db54      	blt.n	800be9e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800bdf4:	6823      	ldr	r3, [r4, #0]
 800bdf6:	4642      	mov	r2, r8
 800bdf8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800bdfc:	4629      	mov	r1, r5
 800bdfe:	4620      	mov	r0, r4
 800be00:	4798      	blx	r3
 800be02:	9010      	str	r0, [sp, #64]	; 0x40
 800be04:	4658      	mov	r0, fp
 800be06:	f7ff fbdd 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800be0a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800be0c:	4456      	add	r6, sl
 800be0e:	b203      	sxth	r3, r0
 800be10:	4490      	add	r8, r2
 800be12:	e7ec      	b.n	800bdee <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800be14:	6823      	ldr	r3, [r4, #0]
 800be16:	fb07 f206 	mul.w	r2, r7, r6
 800be1a:	4629      	mov	r1, r5
 800be1c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800be20:	4620      	mov	r0, r4
 800be22:	4798      	blx	r3
 800be24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800be26:	1ac0      	subs	r0, r0, r3
 800be28:	9010      	str	r0, [sp, #64]	; 0x40
 800be2a:	4658      	mov	r0, fp
 800be2c:	f7ff fbca 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800be30:	6823      	ldr	r3, [r4, #0]
 800be32:	4680      	mov	r8, r0
 800be34:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800be38:	4629      	mov	r1, r5
 800be3a:	4620      	mov	r0, r4
 800be3c:	4798      	blx	r3
 800be3e:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800be42:	eba8 0000 	sub.w	r0, r8, r0
 800be46:	b203      	sxth	r3, r0
 800be48:	42da      	cmn	r2, r3
 800be4a:	930d      	str	r3, [sp, #52]	; 0x34
 800be4c:	d418      	bmi.n	800be80 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800be4e:	6822      	ldr	r2, [r4, #0]
 800be50:	4629      	mov	r1, r5
 800be52:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800be56:	4620      	mov	r0, r4
 800be58:	4790      	blx	r2
 800be5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800be5c:	4283      	cmp	r3, r0
 800be5e:	da0f      	bge.n	800be80 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800be60:	9b08      	ldr	r3, [sp, #32]
 800be62:	9302      	str	r3, [sp, #8]
 800be64:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800be68:	6822      	ldr	r2, [r4, #0]
 800be6a:	9301      	str	r3, [sp, #4]
 800be6c:	fa0f f388 	sxth.w	r3, r8
 800be70:	9300      	str	r3, [sp, #0]
 800be72:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800be76:	a90e      	add	r1, sp, #56	; 0x38
 800be78:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800be7c:	4620      	mov	r0, r4
 800be7e:	47c0      	blx	r8
 800be80:	6823      	ldr	r3, [r4, #0]
 800be82:	4456      	add	r6, sl
 800be84:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800be88:	fb06 f207 	mul.w	r2, r6, r7
 800be8c:	4629      	mov	r1, r5
 800be8e:	4620      	mov	r0, r4
 800be90:	4798      	blx	r3
 800be92:	9010      	str	r0, [sp, #64]	; 0x40
 800be94:	4658      	mov	r0, fp
 800be96:	f7ff fb95 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800be9a:	b203      	sxth	r3, r0
 800be9c:	e7a0      	b.n	800bde0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800be9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bea0:	930d      	str	r3, [sp, #52]	; 0x34
 800bea2:	9b04      	ldr	r3, [sp, #16]
 800bea4:	4413      	add	r3, r2
 800bea6:	9304      	str	r3, [sp, #16]
 800bea8:	9a04      	ldr	r2, [sp, #16]
 800beaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800beac:	4293      	cmp	r3, r2
 800beae:	f43f aee2 	beq.w	800bc76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800beb2:	9b04      	ldr	r3, [sp, #16]
 800beb4:	6822      	ldr	r2, [r4, #0]
 800beb6:	4629      	mov	r1, r5
 800beb8:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800bebc:	4620      	mov	r0, r4
 800bebe:	fb03 f209 	mul.w	r2, r3, r9
 800bec2:	47c0      	blx	r8
 800bec4:	9010      	str	r0, [sp, #64]	; 0x40
 800bec6:	4658      	mov	r0, fp
 800bec8:	f7ff fb7c 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800becc:	b203      	sxth	r3, r0
 800bece:	9305      	str	r3, [sp, #20]
 800bed0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bed2:	e785      	b.n	800bde0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800bed4:	4798      	blx	r3
 800bed6:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800beda:	deff      	udf	#255	; 0xff

0800bedc <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800bedc:	b510      	push	{r4, lr}
 800bede:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800bee2:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800bee6:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800beea:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800beee:	13a4      	asrs	r4, r4, #14
 800bef0:	139b      	asrs	r3, r3, #14
 800bef2:	429c      	cmp	r4, r3
 800bef4:	bfb8      	it	lt
 800bef6:	461c      	movlt	r4, r3
 800bef8:	2c01      	cmp	r4, #1
 800befa:	dd07      	ble.n	800bf0c <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800befc:	fb91 f1f4 	sdiv	r1, r1, r4
 800bf00:	fb90 f0f4 	sdiv	r0, r0, r4
 800bf04:	f7ff ffea 	bl	800bedc <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800bf08:	4360      	muls	r0, r4
 800bf0a:	bd10      	pop	{r4, pc}
 800bf0c:	4340      	muls	r0, r0
 800bf0e:	fb01 0101 	mla	r1, r1, r1, r0
 800bf12:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800bf16:	bfb4      	ite	lt
 800bf18:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800bf1c:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800bf20:	2000      	movs	r0, #0
 800bf22:	18c2      	adds	r2, r0, r3
 800bf24:	428a      	cmp	r2, r1
 800bf26:	bf9c      	itt	ls
 800bf28:	1898      	addls	r0, r3, r2
 800bf2a:	1a89      	subls	r1, r1, r2
 800bf2c:	089b      	lsrs	r3, r3, #2
 800bf2e:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800bf32:	d1f6      	bne.n	800bf22 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800bf34:	e7e9      	b.n	800bf0a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800bf36 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800bf36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bf38:	9906      	ldr	r1, [sp, #24]
 800bf3a:	4291      	cmp	r1, r2
 800bf3c:	bfbc      	itt	lt
 800bf3e:	9206      	strlt	r2, [sp, #24]
 800bf40:	460a      	movlt	r2, r1
 800bf42:	9907      	ldr	r1, [sp, #28]
 800bf44:	428b      	cmp	r3, r1
 800bf46:	4606      	mov	r6, r0
 800bf48:	461c      	mov	r4, r3
 800bf4a:	f04f 0020 	mov.w	r0, #32
 800bf4e:	bfc8      	it	gt
 800bf50:	460c      	movgt	r4, r1
 800bf52:	fb92 f5f0 	sdiv	r5, r2, r0
 800bf56:	fb94 f4f0 	sdiv	r4, r4, r0
 800bf5a:	a806      	add	r0, sp, #24
 800bf5c:	bfc8      	it	gt
 800bf5e:	9307      	strgt	r3, [sp, #28]
 800bf60:	f7ff fdf7 	bl	800bb52 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800bf64:	4607      	mov	r7, r0
 800bf66:	a807      	add	r0, sp, #28
 800bf68:	f7ff fdf3 	bl	800bb52 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800bf6c:	1b7a      	subs	r2, r7, r5
 800bf6e:	1b00      	subs	r0, r0, r4
 800bf70:	80f0      	strh	r0, [r6, #6]
 800bf72:	8035      	strh	r5, [r6, #0]
 800bf74:	8074      	strh	r4, [r6, #2]
 800bf76:	80b2      	strh	r2, [r6, #4]
 800bf78:	4630      	mov	r0, r6
 800bf7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bf7c <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800bf7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bf7e:	9c08      	ldr	r4, [sp, #32]
 800bf80:	2602      	movs	r6, #2
 800bf82:	3401      	adds	r4, #1
 800bf84:	fb94 f4f6 	sdiv	r4, r4, r6
 800bf88:	18a6      	adds	r6, r4, r2
 800bf8a:	191f      	adds	r7, r3, r4
 800bf8c:	e9cd 6700 	strd	r6, r7, [sp]
 800bf90:	1b1b      	subs	r3, r3, r4
 800bf92:	1b12      	subs	r2, r2, r4
 800bf94:	4605      	mov	r5, r0
 800bf96:	f7ff ffce 	bl	800bf36 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800bf9a:	4628      	mov	r0, r5
 800bf9c:	b003      	add	sp, #12
 800bf9e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bfa0 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800bfa0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bfa4:	6943      	ldr	r3, [r0, #20]
 800bfa6:	b087      	sub	sp, #28
 800bfa8:	4606      	mov	r6, r0
 800bfaa:	460d      	mov	r5, r1
 800bfac:	2b00      	cmp	r3, #0
 800bfae:	d072      	beq.n	800c096 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800bfb0:	695c      	ldr	r4, [r3, #20]
 800bfb2:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800bfb6:	6823      	ldr	r3, [r4, #0]
 800bfb8:	4620      	mov	r0, r4
 800bfba:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800bfbe:	4798      	blx	r3
 800bfc0:	6823      	ldr	r3, [r4, #0]
 800bfc2:	4680      	mov	r8, r0
 800bfc4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800bfc8:	4629      	mov	r1, r5
 800bfca:	4620      	mov	r0, r4
 800bfcc:	4798      	blx	r3
 800bfce:	017f      	lsls	r7, r7, #5
 800bfd0:	4603      	mov	r3, r0
 800bfd2:	9700      	str	r7, [sp, #0]
 800bfd4:	4642      	mov	r2, r8
 800bfd6:	4631      	mov	r1, r6
 800bfd8:	a802      	add	r0, sp, #8
 800bfda:	f7ff ffcf 	bl	800bf7c <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800bfde:	2d00      	cmp	r5, #0
 800bfe0:	dd1b      	ble.n	800c01a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800bfe2:	6823      	ldr	r3, [r4, #0]
 800bfe4:	f105 38ff 	add.w	r8, r5, #4294967295
 800bfe8:	fa0f f888 	sxth.w	r8, r8
 800bfec:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800bff0:	4641      	mov	r1, r8
 800bff2:	4620      	mov	r0, r4
 800bff4:	4798      	blx	r3
 800bff6:	6823      	ldr	r3, [r4, #0]
 800bff8:	4681      	mov	r9, r0
 800bffa:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800bffe:	4641      	mov	r1, r8
 800c000:	4620      	mov	r0, r4
 800c002:	4798      	blx	r3
 800c004:	4631      	mov	r1, r6
 800c006:	4603      	mov	r3, r0
 800c008:	9700      	str	r7, [sp, #0]
 800c00a:	a804      	add	r0, sp, #16
 800c00c:	464a      	mov	r2, r9
 800c00e:	f7ff ffb5 	bl	800bf7c <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c012:	a904      	add	r1, sp, #16
 800c014:	a802      	add	r0, sp, #8
 800c016:	f7ff fd57 	bl	800bac8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c01a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c01e:	3b01      	subs	r3, #1
 800c020:	429d      	cmp	r5, r3
 800c022:	da19      	bge.n	800c058 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800c024:	6823      	ldr	r3, [r4, #0]
 800c026:	3501      	adds	r5, #1
 800c028:	b22d      	sxth	r5, r5
 800c02a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c02e:	4629      	mov	r1, r5
 800c030:	4620      	mov	r0, r4
 800c032:	4798      	blx	r3
 800c034:	6823      	ldr	r3, [r4, #0]
 800c036:	4680      	mov	r8, r0
 800c038:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c03c:	4629      	mov	r1, r5
 800c03e:	4620      	mov	r0, r4
 800c040:	4798      	blx	r3
 800c042:	4631      	mov	r1, r6
 800c044:	4603      	mov	r3, r0
 800c046:	9700      	str	r7, [sp, #0]
 800c048:	a804      	add	r0, sp, #16
 800c04a:	4642      	mov	r2, r8
 800c04c:	f7ff ff96 	bl	800bf7c <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c050:	a904      	add	r1, sp, #16
 800c052:	a802      	add	r0, sp, #8
 800c054:	f7ff fd38 	bl	800bac8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c058:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800c05c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800c060:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800c064:	18ca      	adds	r2, r1, r3
 800c066:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800c06a:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c06e:	1a9b      	subs	r3, r3, r2
 800c070:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c074:	2200      	movs	r2, #0
 800c076:	a904      	add	r1, sp, #16
 800c078:	a802      	add	r0, sp, #8
 800c07a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c07e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c082:	f7fd ffcb 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800c086:	6833      	ldr	r3, [r6, #0]
 800c088:	a902      	add	r1, sp, #8
 800c08a:	691b      	ldr	r3, [r3, #16]
 800c08c:	4630      	mov	r0, r6
 800c08e:	4798      	blx	r3
 800c090:	b007      	add	sp, #28
 800c092:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c096:	681b      	ldr	r3, [r3, #0]
 800c098:	deff      	udf	#255	; 0xff

0800c09a <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800c09a:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800c09e:	2b00      	cmp	r3, #0
 800c0a0:	da05      	bge.n	800c0ae <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800c0a2:	880a      	ldrh	r2, [r1, #0]
 800c0a4:	b29b      	uxth	r3, r3
 800c0a6:	441a      	add	r2, r3
 800c0a8:	425b      	negs	r3, r3
 800c0aa:	800a      	strh	r2, [r1, #0]
 800c0ac:	808b      	strh	r3, [r1, #4]
 800c0ae:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c0b2:	2b00      	cmp	r3, #0
 800c0b4:	da05      	bge.n	800c0c2 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800c0b6:	884a      	ldrh	r2, [r1, #2]
 800c0b8:	b29b      	uxth	r3, r3
 800c0ba:	441a      	add	r2, r3
 800c0bc:	425b      	negs	r3, r3
 800c0be:	804a      	strh	r2, [r1, #2]
 800c0c0:	80cb      	strh	r3, [r1, #6]
 800c0c2:	4770      	bx	lr

0800c0c4 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800c0c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c0c6:	4604      	mov	r4, r0
 800c0c8:	460d      	mov	r5, r1
 800c0ca:	6801      	ldr	r1, [r0, #0]
 800c0cc:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800c0d0:	9001      	str	r0, [sp, #4]
 800c0d2:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800c0d6:	9000      	str	r0, [sp, #0]
 800c0d8:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800c0dc:	a802      	add	r0, sp, #8
 800c0de:	4621      	mov	r1, r4
 800c0e0:	47b0      	blx	r6
 800c0e2:	a902      	add	r1, sp, #8
 800c0e4:	4620      	mov	r0, r4
 800c0e6:	f7ff ffd8 	bl	800c09a <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800c0ea:	a802      	add	r0, sp, #8
 800c0ec:	4629      	mov	r1, r5
 800c0ee:	f7fd ff95 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800c0f2:	a802      	add	r0, sp, #8
 800c0f4:	f7fd ffd5 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c0f8:	b968      	cbnz	r0, 800c116 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800c0fa:	6823      	ldr	r3, [r4, #0]
 800c0fc:	a902      	add	r1, sp, #8
 800c0fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c100:	4620      	mov	r0, r4
 800c102:	4798      	blx	r3
 800c104:	f7f6 f96c 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800c108:	6803      	ldr	r3, [r0, #0]
 800c10a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c10c:	6a1d      	ldr	r5, [r3, #32]
 800c10e:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800c112:	a902      	add	r1, sp, #8
 800c114:	47a8      	blx	r5
 800c116:	b004      	add	sp, #16
 800c118:	bd70      	pop	{r4, r5, r6, pc}

0800c11a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800c11a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c11e:	b08b      	sub	sp, #44	; 0x2c
 800c120:	461e      	mov	r6, r3
 800c122:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800c126:	9304      	str	r3, [sp, #16]
 800c128:	429e      	cmp	r6, r3
 800c12a:	4689      	mov	r9, r1
 800c12c:	4615      	mov	r5, r2
 800c12e:	d072      	beq.n	800c216 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800c130:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c134:	015b      	lsls	r3, r3, #5
 800c136:	9303      	str	r3, [sp, #12]
 800c138:	6813      	ldr	r3, [r2, #0]
 800c13a:	4610      	mov	r0, r2
 800c13c:	4631      	mov	r1, r6
 800c13e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c142:	4798      	blx	r3
 800c144:	ab0a      	add	r3, sp, #40	; 0x28
 800c146:	4634      	mov	r4, r6
 800c148:	f843 0d10 	str.w	r0, [r3, #-16]!
 800c14c:	4618      	mov	r0, r3
 800c14e:	f7ff fa39 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c152:	682b      	ldr	r3, [r5, #0]
 800c154:	4631      	mov	r1, r6
 800c156:	0147      	lsls	r7, r0, #5
 800c158:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c15c:	4628      	mov	r0, r5
 800c15e:	4798      	blx	r3
 800c160:	ab0a      	add	r3, sp, #40	; 0x28
 800c162:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800c166:	4618      	mov	r0, r3
 800c168:	f7ff fa2c 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c16c:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800c170:	4642      	mov	r2, r8
 800c172:	4639      	mov	r1, r7
 800c174:	4648      	mov	r0, r9
 800c176:	f013 f977 	bl	801f468 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c17a:	2301      	movs	r3, #1
 800c17c:	9300      	str	r3, [sp, #0]
 800c17e:	9b00      	ldr	r3, [sp, #0]
 800c180:	441c      	add	r4, r3
 800c182:	682b      	ldr	r3, [r5, #0]
 800c184:	b224      	sxth	r4, r4
 800c186:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c18a:	4621      	mov	r1, r4
 800c18c:	4628      	mov	r0, r5
 800c18e:	4798      	blx	r3
 800c190:	9008      	str	r0, [sp, #32]
 800c192:	a808      	add	r0, sp, #32
 800c194:	f7ff fa16 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c198:	0143      	lsls	r3, r0, #5
 800c19a:	9301      	str	r3, [sp, #4]
 800c19c:	682b      	ldr	r3, [r5, #0]
 800c19e:	4621      	mov	r1, r4
 800c1a0:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c1a4:	4628      	mov	r0, r5
 800c1a6:	4798      	blx	r3
 800c1a8:	9009      	str	r0, [sp, #36]	; 0x24
 800c1aa:	a809      	add	r0, sp, #36	; 0x24
 800c1ac:	f7ff fa0a 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c1b0:	0143      	lsls	r3, r0, #5
 800c1b2:	9302      	str	r3, [sp, #8]
 800c1b4:	9b01      	ldr	r3, [sp, #4]
 800c1b6:	eba3 0b07 	sub.w	fp, r3, r7
 800c1ba:	9b02      	ldr	r3, [sp, #8]
 800c1bc:	eba3 0a08 	sub.w	sl, r3, r8
 800c1c0:	4651      	mov	r1, sl
 800c1c2:	4658      	mov	r0, fp
 800c1c4:	f7ff fe8a 	bl	800bedc <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c1c8:	b318      	cbz	r0, 800c212 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800c1ca:	4602      	mov	r2, r0
 800c1cc:	4651      	mov	r1, sl
 800c1ce:	9005      	str	r0, [sp, #20]
 800c1d0:	9803      	ldr	r0, [sp, #12]
 800c1d2:	f004 ffd7 	bl	8011184 <_ZN8touchgfx6muldivElll>
 800c1d6:	2302      	movs	r3, #2
 800c1d8:	fb90 faf3 	sdiv	sl, r0, r3
 800c1dc:	9b05      	ldr	r3, [sp, #20]
 800c1de:	9803      	ldr	r0, [sp, #12]
 800c1e0:	461a      	mov	r2, r3
 800c1e2:	4659      	mov	r1, fp
 800c1e4:	f004 ffce 	bl	8011184 <_ZN8touchgfx6muldivElll>
 800c1e8:	2302      	movs	r3, #2
 800c1ea:	eba7 010a 	sub.w	r1, r7, sl
 800c1ee:	fb90 fbf3 	sdiv	fp, r0, r3
 800c1f2:	4648      	mov	r0, r9
 800c1f4:	eb0b 0208 	add.w	r2, fp, r8
 800c1f8:	f013 f80c 	bl	801f214 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c1fc:	9b02      	ldr	r3, [sp, #8]
 800c1fe:	eb03 020b 	add.w	r2, r3, fp
 800c202:	9b01      	ldr	r3, [sp, #4]
 800c204:	4648      	mov	r0, r9
 800c206:	eba3 010a 	sub.w	r1, r3, sl
 800c20a:	f013 f803 	bl	801f214 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c20e:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800c212:	42a6      	cmp	r6, r4
 800c214:	db02      	blt.n	800c21c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800c216:	b00b      	add	sp, #44	; 0x2c
 800c218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c21c:	9b00      	ldr	r3, [sp, #0]
 800c21e:	9a04      	ldr	r2, [sp, #16]
 800c220:	42a2      	cmp	r2, r4
 800c222:	bf08      	it	eq
 800c224:	f04f 33ff 	moveq.w	r3, #4294967295
 800c228:	e7a8      	b.n	800c17c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800c22c <_ZN8touchgfx6CanvasD1Ev>:
 800c22c:	b510      	push	{r4, lr}
 800c22e:	4b04      	ldr	r3, [pc, #16]	; (800c240 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800c230:	4604      	mov	r4, r0
 800c232:	f840 3b20 	str.w	r3, [r0], #32
 800c236:	f001 faff 	bl	800d838 <_ZN8touchgfx7OutlineD1Ev>
 800c23a:	4620      	mov	r0, r4
 800c23c:	bd10      	pop	{r4, pc}
 800c23e:	bf00      	nop
 800c240:	08022710 	.word	0x08022710

0800c244 <_ZN8touchgfx6CanvasD0Ev>:
 800c244:	b510      	push	{r4, lr}
 800c246:	4604      	mov	r4, r0
 800c248:	f7ff fff0 	bl	800c22c <_ZN8touchgfx6CanvasD1Ev>
 800c24c:	4620      	mov	r0, r4
 800c24e:	2170      	movs	r1, #112	; 0x70
 800c250:	f013 f95c 	bl	801f50c <_ZdlPvj>
 800c254:	4620      	mov	r0, r4
 800c256:	bd10      	pop	{r4, pc}

0800c258 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800c258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c25c:	6943      	ldr	r3, [r0, #20]
 800c25e:	b0a2      	sub	sp, #136	; 0x88
 800c260:	4606      	mov	r6, r0
 800c262:	460f      	mov	r7, r1
 800c264:	2b00      	cmp	r3, #0
 800c266:	d06a      	beq.n	800c33e <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800c268:	695c      	ldr	r4, [r3, #20]
 800c26a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c26e:	2b01      	cmp	r3, #1
 800c270:	dc04      	bgt.n	800c27c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800c272:	2401      	movs	r4, #1
 800c274:	4620      	mov	r0, r4
 800c276:	b022      	add	sp, #136	; 0x88
 800c278:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c27c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c280:	ad22      	add	r5, sp, #136	; 0x88
 800c282:	011b      	lsls	r3, r3, #4
 800c284:	f845 3d70 	str.w	r3, [r5, #-112]!
 800c288:	4628      	mov	r0, r5
 800c28a:	f7ff fc62 	bl	800bb52 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c28e:	8839      	ldrh	r1, [r7, #0]
 800c290:	88ba      	ldrh	r2, [r7, #4]
 800c292:	6823      	ldr	r3, [r4, #0]
 800c294:	b280      	uxth	r0, r0
 800c296:	440a      	add	r2, r1
 800c298:	4402      	add	r2, r0
 800c29a:	1a09      	subs	r1, r1, r0
 800c29c:	f10d 000e 	add.w	r0, sp, #14
 800c2a0:	9000      	str	r0, [sp, #0]
 800c2a2:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800c2a6:	b212      	sxth	r2, r2
 800c2a8:	ab03      	add	r3, sp, #12
 800c2aa:	b209      	sxth	r1, r1
 800c2ac:	4620      	mov	r0, r4
 800c2ae:	47c0      	blx	r8
 800c2b0:	2800      	cmp	r0, #0
 800c2b2:	d0de      	beq.n	800c272 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800c2b4:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800c2b8:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800c2bc:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800c2c0:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c2c4:	18ca      	adds	r2, r1, r3
 800c2c6:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800c2ca:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c2ce:	1a9b      	subs	r3, r3, r2
 800c2d0:	4639      	mov	r1, r7
 800c2d2:	2200      	movs	r2, #0
 800c2d4:	a804      	add	r0, sp, #16
 800c2d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c2da:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c2de:	f7fd fe9d 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800c2e2:	aa04      	add	r2, sp, #16
 800c2e4:	4631      	mov	r1, r6
 800c2e6:	4628      	mov	r0, r5
 800c2e8:	f012 fee6 	bl	801f0b8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800c2ec:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800c2f0:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c2f4:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800c2f8:	2f00      	cmp	r7, #0
 800c2fa:	dd03      	ble.n	800c304 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800c2fc:	42bb      	cmp	r3, r7
 800c2fe:	da01      	bge.n	800c304 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800c300:	42ba      	cmp	r2, r7
 800c302:	da0f      	bge.n	800c324 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800c304:	9200      	str	r2, [sp, #0]
 800c306:	4622      	mov	r2, r4
 800c308:	4629      	mov	r1, r5
 800c30a:	4630      	mov	r0, r6
 800c30c:	f7ff ff05 	bl	800c11a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800c310:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800c314:	4628      	mov	r0, r5
 800c316:	f012 fff9 	bl	801f30c <_ZN8touchgfx6Canvas6renderEh>
 800c31a:	4604      	mov	r4, r0
 800c31c:	4628      	mov	r0, r5
 800c31e:	f7ff ff85 	bl	800c22c <_ZN8touchgfx6CanvasD1Ev>
 800c322:	e7a7      	b.n	800c274 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800c324:	1e7a      	subs	r2, r7, #1
 800c326:	b212      	sxth	r2, r2
 800c328:	9200      	str	r2, [sp, #0]
 800c32a:	4629      	mov	r1, r5
 800c32c:	4622      	mov	r2, r4
 800c32e:	4630      	mov	r0, r6
 800c330:	f7ff fef3 	bl	800c11a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800c334:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c338:	9300      	str	r3, [sp, #0]
 800c33a:	463b      	mov	r3, r7
 800c33c:	e7e3      	b.n	800c306 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800c33e:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800c342:	deff      	udf	#255	; 0xff

0800c344 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800c344:	4770      	bx	lr

0800c346 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800c346:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800c348:	b118      	cbz	r0, 800c352 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800c34a:	6803      	ldr	r3, [r0, #0]
 800c34c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c350:	4718      	bx	r3
 800c352:	4770      	bx	lr

0800c354 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800c354:	680b      	ldr	r3, [r1, #0]
 800c356:	4608      	mov	r0, r1
 800c358:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800c35c:	4718      	bx	r3

0800c35e <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800c35e:	680b      	ldr	r3, [r1, #0]
 800c360:	4608      	mov	r0, r1
 800c362:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800c366:	4718      	bx	r3

0800c368 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800c368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c36c:	4a37      	ldr	r2, [pc, #220]	; (800c44c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800c36e:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c370:	8812      	ldrh	r2, [r2, #0]
 800c372:	429a      	cmp	r2, r3
 800c374:	b087      	sub	sp, #28
 800c376:	4604      	mov	r4, r0
 800c378:	4689      	mov	r9, r1
 800c37a:	d937      	bls.n	800c3ec <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c37c:	4a34      	ldr	r2, [pc, #208]	; (800c450 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800c37e:	6812      	ldr	r2, [r2, #0]
 800c380:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c384:	4b33      	ldr	r3, [pc, #204]	; (800c454 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800c386:	681b      	ldr	r3, [r3, #0]
 800c388:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800c38c:	f1b8 0f00 	cmp.w	r8, #0
 800c390:	d02c      	beq.n	800c3ec <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c392:	6803      	ldr	r3, [r0, #0]
 800c394:	6945      	ldr	r5, [r0, #20]
 800c396:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c398:	2d00      	cmp	r5, #0
 800c39a:	d052      	beq.n	800c442 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800c39c:	696f      	ldr	r7, [r5, #20]
 800c39e:	4798      	blx	r3
 800c3a0:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800c3a4:	fb15 f000 	smulbb	r0, r5, r0
 800c3a8:	b280      	uxth	r0, r0
 800c3aa:	1c45      	adds	r5, r0, #1
 800c3ac:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800c3b0:	122d      	asrs	r5, r5, #8
 800c3b2:	d01b      	beq.n	800c3ec <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c3b4:	6823      	ldr	r3, [r4, #0]
 800c3b6:	4639      	mov	r1, r7
 800c3b8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c3bc:	4620      	mov	r0, r4
 800c3be:	4798      	blx	r3
 800c3c0:	6823      	ldr	r3, [r4, #0]
 800c3c2:	4606      	mov	r6, r0
 800c3c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c3c8:	4639      	mov	r1, r7
 800c3ca:	4620      	mov	r0, r4
 800c3cc:	4798      	blx	r3
 800c3ce:	b2ed      	uxtb	r5, r5
 800c3d0:	4683      	mov	fp, r0
 800c3d2:	b970      	cbnz	r0, 800c3f2 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800c3d4:	b96e      	cbnz	r6, 800c3f2 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800c3d6:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800c3da:	6823      	ldr	r3, [r4, #0]
 800c3dc:	9600      	str	r6, [sp, #0]
 800c3de:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800c3e2:	4642      	mov	r2, r8
 800c3e4:	463b      	mov	r3, r7
 800c3e6:	4649      	mov	r1, r9
 800c3e8:	4620      	mov	r0, r4
 800c3ea:	47a8      	blx	r5
 800c3ec:	b007      	add	sp, #28
 800c3ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3f2:	2e00      	cmp	r6, #0
 800c3f4:	ddfa      	ble.n	800c3ec <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c3f6:	6823      	ldr	r3, [r4, #0]
 800c3f8:	4639      	mov	r1, r7
 800c3fa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c3fe:	4620      	mov	r0, r4
 800c400:	4798      	blx	r3
 800c402:	6823      	ldr	r3, [r4, #0]
 800c404:	4682      	mov	sl, r0
 800c406:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c40a:	4639      	mov	r1, r7
 800c40c:	4620      	mov	r0, r4
 800c40e:	4798      	blx	r3
 800c410:	4582      	cmp	sl, r0
 800c412:	bfde      	ittt	le
 800c414:	4603      	movle	r3, r0
 800c416:	4650      	movle	r0, sl
 800c418:	469a      	movle	sl, r3
 800c41a:	ebaa 0300 	sub.w	r3, sl, r0
 800c41e:	fb93 f3f6 	sdiv	r3, r3, r6
 800c422:	2b64      	cmp	r3, #100	; 0x64
 800c424:	dce2      	bgt.n	800c3ec <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c426:	e9cd b503 	strd	fp, r5, [sp, #12]
 800c42a:	e9cd a601 	strd	sl, r6, [sp, #4]
 800c42e:	6823      	ldr	r3, [r4, #0]
 800c430:	9000      	str	r0, [sp, #0]
 800c432:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800c436:	4642      	mov	r2, r8
 800c438:	463b      	mov	r3, r7
 800c43a:	4649      	mov	r1, r9
 800c43c:	4620      	mov	r0, r4
 800c43e:	47a8      	blx	r5
 800c440:	e7d4      	b.n	800c3ec <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c442:	4798      	blx	r3
 800c444:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c448:	deff      	udf	#255	; 0xff
 800c44a:	bf00      	nop
 800c44c:	200175c0 	.word	0x200175c0
 800c450:	200175bc 	.word	0x200175bc
 800c454:	200175c4 	.word	0x200175c4

0800c458 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800c458:	4770      	bx	lr

0800c45a <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800c45a:	b538      	push	{r3, r4, r5, lr}
 800c45c:	680a      	ldr	r2, [r1, #0]
 800c45e:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800c462:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800c466:	4608      	mov	r0, r1
 800c468:	4790      	blx	r2
 800c46a:	4629      	mov	r1, r5
 800c46c:	4602      	mov	r2, r0
 800c46e:	4620      	mov	r0, r4
 800c470:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c474:	f7ff bab2 	b.w	800b9dc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800c478 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800c478:	b510      	push	{r4, lr}
 800c47a:	214c      	movs	r1, #76	; 0x4c
 800c47c:	4604      	mov	r4, r0
 800c47e:	f013 f845 	bl	801f50c <_ZdlPvj>
 800c482:	4620      	mov	r0, r4
 800c484:	bd10      	pop	{r4, pc}

0800c486 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800c486:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c48a:	b08d      	sub	sp, #52	; 0x34
 800c48c:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800c490:	9309      	str	r3, [sp, #36]	; 0x24
 800c492:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800c496:	930a      	str	r3, [sp, #40]	; 0x28
 800c498:	4606      	mov	r6, r0
 800c49a:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800c49e:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800c4a2:	f1b9 0f00 	cmp.w	r9, #0
 800c4a6:	d117      	bne.n	800c4d8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800c4a8:	2f00      	cmp	r7, #0
 800c4aa:	dc7c      	bgt.n	800c5a6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800c4ac:	f1b8 0f00 	cmp.w	r8, #0
 800c4b0:	da01      	bge.n	800c4b6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800c4b2:	2f00      	cmp	r7, #0
 800c4b4:	d17a      	bne.n	800c5ac <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c4b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c4b8:	9318      	str	r3, [sp, #96]	; 0x60
 800c4ba:	2300      	movs	r3, #0
 800c4bc:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800c4c0:	6832      	ldr	r2, [r6, #0]
 800c4c2:	9907      	ldr	r1, [sp, #28]
 800c4c4:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800c4c8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c4cc:	4630      	mov	r0, r6
 800c4ce:	46a4      	mov	ip, r4
 800c4d0:	b00d      	add	sp, #52	; 0x34
 800c4d2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c4d6:	4760      	bx	ip
 800c4d8:	fb97 f4f9 	sdiv	r4, r7, r9
 800c4dc:	1e63      	subs	r3, r4, #1
 800c4de:	9305      	str	r3, [sp, #20]
 800c4e0:	f1ba 0f00 	cmp.w	sl, #0
 800c4e4:	d122      	bne.n	800c52c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800c4e6:	fb98 faf9 	sdiv	sl, r8, r9
 800c4ea:	fb03 f509 	mul.w	r5, r3, r9
 800c4ee:	f10a 0a02 	add.w	sl, sl, #2
 800c4f2:	9b05      	ldr	r3, [sp, #20]
 800c4f4:	459a      	cmp	sl, r3
 800c4f6:	d059      	beq.n	800c5ac <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c4f8:	42af      	cmp	r7, r5
 800c4fa:	dc5a      	bgt.n	800c5b2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800c4fc:	45a8      	cmp	r8, r5
 800c4fe:	da01      	bge.n	800c504 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800c500:	42af      	cmp	r7, r5
 800c502:	db0e      	blt.n	800c522 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c506:	9302      	str	r3, [sp, #8]
 800c508:	9905      	ldr	r1, [sp, #20]
 800c50a:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800c50c:	6832      	ldr	r2, [r6, #0]
 800c50e:	434b      	muls	r3, r1
 800c510:	e9cd 5300 	strd	r5, r3, [sp]
 800c514:	9907      	ldr	r1, [sp, #28]
 800c516:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800c51a:	4630      	mov	r0, r6
 800c51c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c520:	47d8      	blx	fp
 800c522:	9b05      	ldr	r3, [sp, #20]
 800c524:	3301      	adds	r3, #1
 800c526:	9305      	str	r3, [sp, #20]
 800c528:	444d      	add	r5, r9
 800c52a:	e7e2      	b.n	800c4f2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800c52c:	fb97 f3fa 	sdiv	r3, r7, sl
 800c530:	3b01      	subs	r3, #1
 800c532:	9306      	str	r3, [sp, #24]
 800c534:	9a06      	ldr	r2, [sp, #24]
 800c536:	fb98 f3fa 	sdiv	r3, r8, sl
 800c53a:	fb02 fb0a 	mul.w	fp, r2, sl
 800c53e:	9a05      	ldr	r2, [sp, #20]
 800c540:	3302      	adds	r3, #2
 800c542:	fb02 f509 	mul.w	r5, r2, r9
 800c546:	930b      	str	r3, [sp, #44]	; 0x2c
 800c548:	45ab      	cmp	fp, r5
 800c54a:	dd1d      	ble.n	800c588 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c54c:	42af      	cmp	r7, r5
 800c54e:	dc08      	bgt.n	800c562 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800c550:	45a8      	cmp	r8, r5
 800c552:	da08      	bge.n	800c566 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c554:	42af      	cmp	r7, r5
 800c556:	da06      	bge.n	800c566 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c558:	9b05      	ldr	r3, [sp, #20]
 800c55a:	3301      	adds	r3, #1
 800c55c:	9305      	str	r3, [sp, #20]
 800c55e:	444d      	add	r5, r9
 800c560:	e7f2      	b.n	800c548 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c562:	45a8      	cmp	r8, r5
 800c564:	dcf8      	bgt.n	800c558 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c566:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c568:	9302      	str	r3, [sp, #8]
 800c56a:	9905      	ldr	r1, [sp, #20]
 800c56c:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800c56e:	6832      	ldr	r2, [r6, #0]
 800c570:	434b      	muls	r3, r1
 800c572:	e9cd 5300 	strd	r5, r3, [sp]
 800c576:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c57a:	9907      	ldr	r1, [sp, #28]
 800c57c:	461c      	mov	r4, r3
 800c57e:	4630      	mov	r0, r6
 800c580:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c584:	47a0      	blx	r4
 800c586:	e7e7      	b.n	800c558 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c588:	45ab      	cmp	fp, r5
 800c58a:	db04      	blt.n	800c596 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800c58c:	9b05      	ldr	r3, [sp, #20]
 800c58e:	3301      	adds	r3, #1
 800c590:	9305      	str	r3, [sp, #20]
 800c592:	444d      	add	r5, r9
 800c594:	e7f8      	b.n	800c588 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c596:	9b06      	ldr	r3, [sp, #24]
 800c598:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c59a:	3301      	adds	r3, #1
 800c59c:	4293      	cmp	r3, r2
 800c59e:	9306      	str	r3, [sp, #24]
 800c5a0:	d004      	beq.n	800c5ac <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c5a2:	44d3      	add	fp, sl
 800c5a4:	e7d0      	b.n	800c548 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c5a6:	f1b8 0f00 	cmp.w	r8, #0
 800c5aa:	dd84      	ble.n	800c4b6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800c5ac:	b00d      	add	sp, #52	; 0x34
 800c5ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5b2:	45a8      	cmp	r8, r5
 800c5b4:	dcb5      	bgt.n	800c522 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c5b6:	e7a5      	b.n	800c504 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800c5b8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800c5b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c5bc:	f1b3 0900 	subs.w	r9, r3, #0
 800c5c0:	460d      	mov	r5, r1
 800c5c2:	4690      	mov	r8, r2
 800c5c4:	9f08      	ldr	r7, [sp, #32]
 800c5c6:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800c5ca:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800c5cc:	da18      	bge.n	800c600 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c5ce:	2a01      	cmp	r2, #1
 800c5d0:	dd16      	ble.n	800c600 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c5d2:	232d      	movs	r3, #45	; 0x2d
 800c5d4:	800b      	strh	r3, [r1, #0]
 800c5d6:	f1c9 0900 	rsb	r9, r9, #0
 800c5da:	2001      	movs	r0, #1
 800c5dc:	2f00      	cmp	r7, #0
 800c5de:	d111      	bne.n	800c604 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800c5e0:	eba8 0100 	sub.w	r1, r8, r0
 800c5e4:	2302      	movs	r3, #2
 800c5e6:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800c5ea:	fb96 f3f3 	sdiv	r3, r6, r3
 800c5ee:	4a24      	ldr	r2, [pc, #144]	; (800c680 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800c5f0:	444b      	add	r3, r9
 800c5f2:	b289      	uxth	r1, r1
 800c5f4:	fb93 f3f6 	sdiv	r3, r3, r6
 800c5f8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c5fc:	f006 bc28 	b.w	8012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c600:	2000      	movs	r0, #0
 800c602:	e7eb      	b.n	800c5dc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800c604:	dd39      	ble.n	800c67a <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800c606:	fb99 f4f6 	sdiv	r4, r9, r6
 800c60a:	eba8 0100 	sub.w	r1, r8, r0
 800c60e:	4623      	mov	r3, r4
 800c610:	4a1b      	ldr	r2, [pc, #108]	; (800c680 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800c612:	b289      	uxth	r1, r1
 800c614:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800c618:	f006 fc1a 	bl	8012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c61c:	4628      	mov	r0, r5
 800c61e:	f006 f8a3 	bl	8012768 <_ZN8touchgfx7Unicode6strlenEPKt>
 800c622:	f108 38ff 	add.w	r8, r8, #4294967295
 800c626:	4580      	cmp	r8, r0
 800c628:	dd27      	ble.n	800c67a <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800c62a:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800c62e:	fb06 9314 	mls	r3, r6, r4, r9
 800c632:	3001      	adds	r0, #1
 800c634:	2200      	movs	r2, #0
 800c636:	f04f 090a 	mov.w	r9, #10
 800c63a:	f107 3aff 	add.w	sl, r7, #4294967295
 800c63e:	f04f 0e02 	mov.w	lr, #2
 800c642:	fb96 fefe 	sdiv	lr, r6, lr
 800c646:	4580      	cmp	r8, r0
 800c648:	4684      	mov	ip, r0
 800c64a:	dd13      	ble.n	800c674 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800c64c:	fb09 f303 	mul.w	r3, r9, r3
 800c650:	4592      	cmp	sl, r2
 800c652:	f102 0201 	add.w	r2, r2, #1
 800c656:	bf08      	it	eq
 800c658:	4473      	addeq	r3, lr
 800c65a:	f100 0c01 	add.w	ip, r0, #1
 800c65e:	fb93 f4f6 	sdiv	r4, r3, r6
 800c662:	4297      	cmp	r7, r2
 800c664:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800c668:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800c66c:	fb06 3314 	mls	r3, r6, r4, r3
 800c670:	4660      	mov	r0, ip
 800c672:	d1e8      	bne.n	800c646 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800c674:	2300      	movs	r3, #0
 800c676:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800c67a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c67e:	bf00      	nop
 800c680:	0802218c 	.word	0x0802218c

0800c684 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800c684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c688:	4698      	mov	r8, r3
 800c68a:	b099      	sub	sp, #100	; 0x64
 800c68c:	681b      	ldr	r3, [r3, #0]
 800c68e:	4604      	mov	r4, r0
 800c690:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800c694:	4689      	mov	r9, r1
 800c696:	4640      	mov	r0, r8
 800c698:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c69a:	4617      	mov	r7, r2
 800c69c:	4798      	blx	r3
 800c69e:	ae18      	add	r6, sp, #96	; 0x60
 800c6a0:	f846 0d28 	str.w	r0, [r6, #-40]!
 800c6a4:	4630      	mov	r0, r6
 800c6a6:	f7fe ff8d 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c6aa:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800c6ae:	1ac0      	subs	r0, r0, r3
 800c6b0:	b200      	sxth	r0, r0
 800c6b2:	2800      	cmp	r0, #0
 800c6b4:	f2c0 80c0 	blt.w	800c838 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800c6b8:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800c6bc:	441a      	add	r2, r3
 800c6be:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800c6c2:	1a9b      	subs	r3, r3, r2
 800c6c4:	b21b      	sxth	r3, r3
 800c6c6:	4298      	cmp	r0, r3
 800c6c8:	f280 80b6 	bge.w	800c838 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800c6cc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c6ce:	9302      	str	r3, [sp, #8]
 800c6d0:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800c6d4:	9301      	str	r3, [sp, #4]
 800c6d6:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800c6da:	9300      	str	r3, [sp, #0]
 800c6dc:	4631      	mov	r1, r6
 800c6de:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c6e0:	f8df a174 	ldr.w	sl, [pc, #372]	; 800c858 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800c6e4:	2214      	movs	r2, #20
 800c6e6:	4620      	mov	r0, r4
 800c6e8:	f7ff ff66 	bl	800c5b8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800c6ec:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c6f0:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c6f2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c6f6:	683b      	ldr	r3, [r7, #0]
 800c6f8:	f040 80a1 	bne.w	800c83e <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800c6fc:	f8da 0000 	ldr.w	r0, [sl]
 800c700:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800c702:	f7f7 ffe3 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800c706:	4632      	mov	r2, r6
 800c708:	4601      	mov	r1, r0
 800c70a:	4638      	mov	r0, r7
 800c70c:	47a8      	blx	r5
 800c70e:	683b      	ldr	r3, [r7, #0]
 800c710:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c712:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800c716:	4605      	mov	r5, r0
 800c718:	f8da 0000 	ldr.w	r0, [sl]
 800c71c:	f7f7 ffd6 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800c720:	4632      	mov	r2, r6
 800c722:	4601      	mov	r1, r0
 800c724:	4638      	mov	r0, r7
 800c726:	47d8      	blx	fp
 800c728:	683b      	ldr	r3, [r7, #0]
 800c72a:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c72c:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800c730:	fb15 f500 	smulbb	r5, r5, r0
 800c734:	f8da 0000 	ldr.w	r0, [sl]
 800c738:	f7f7 ffc8 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800c73c:	4632      	mov	r2, r6
 800c73e:	4601      	mov	r1, r0
 800c740:	4638      	mov	r0, r7
 800c742:	47d8      	blx	fp
 800c744:	b2ad      	uxth	r5, r5
 800c746:	4405      	add	r5, r0
 800c748:	b2ad      	uxth	r5, r5
 800c74a:	f8d8 3000 	ldr.w	r3, [r8]
 800c74e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c750:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800c754:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800c758:	4640      	mov	r0, r8
 800c75a:	4798      	blx	r3
 800c75c:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800c760:	f04f 0800 	mov.w	r8, #0
 800c764:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800c768:	4658      	mov	r0, fp
 800c76a:	f7fe ff2b 	bl	800b5c4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c76e:	4450      	add	r0, sl
 800c770:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c774:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c778:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800c77c:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c780:	f8ad 8014 	strh.w	r8, [sp, #20]
 800c784:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c788:	ad05      	add	r5, sp, #20
 800c78a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c78e:	f10d 0a1c 	add.w	sl, sp, #28
 800c792:	e88a 0003 	stmia.w	sl, {r0, r1}
 800c796:	4649      	mov	r1, r9
 800c798:	4650      	mov	r0, sl
 800c79a:	f7fd fc3f 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800c79e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800c7a2:	4543      	cmp	r3, r8
 800c7a4:	dd48      	ble.n	800c838 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800c7a6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800c7aa:	4543      	cmp	r3, r8
 800c7ac:	dd44      	ble.n	800c838 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800c7ae:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800c7b2:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c7b6:	1a9b      	subs	r3, r3, r2
 800c7b8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c7bc:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c7c0:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800c7c4:	1a9b      	subs	r3, r3, r2
 800c7c6:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c7ca:	6823      	ldr	r3, [r4, #0]
 800c7cc:	4620      	mov	r0, r4
 800c7ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c7d0:	4629      	mov	r1, r5
 800c7d2:	4798      	blx	r3
 800c7d4:	4b1f      	ldr	r3, [pc, #124]	; (800c854 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800c7d6:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800c7da:	681b      	ldr	r3, [r3, #0]
 800c7dc:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800c7e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c7e2:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800c7e6:	785b      	ldrb	r3, [r3, #1]
 800c7e8:	920b      	str	r2, [sp, #44]	; 0x2c
 800c7ea:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800c7ee:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c7f2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c7f6:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800c7fa:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800c7fe:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800c802:	9709      	str	r7, [sp, #36]	; 0x24
 800c804:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800c808:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800c80c:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800c810:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800c814:	f7f5 fde4 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800c818:	4b0f      	ldr	r3, [pc, #60]	; (800c858 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800c81a:	4604      	mov	r4, r0
 800c81c:	4649      	mov	r1, r9
 800c81e:	6818      	ldr	r0, [r3, #0]
 800c820:	f7f7 ff54 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800c824:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800c828:	e9cd b000 	strd	fp, r0, [sp]
 800c82c:	4653      	mov	r3, sl
 800c82e:	e895 0006 	ldmia.w	r5, {r1, r2}
 800c832:	4620      	mov	r0, r4
 800c834:	f7f7 fefc 	bl	8004630 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c838:	b019      	add	sp, #100	; 0x64
 800c83a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c83e:	f8da 0000 	ldr.w	r0, [sl]
 800c842:	699d      	ldr	r5, [r3, #24]
 800c844:	f7f7 ff42 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800c848:	4632      	mov	r2, r6
 800c84a:	4601      	mov	r1, r0
 800c84c:	4638      	mov	r0, r7
 800c84e:	47a8      	blx	r5
 800c850:	4605      	mov	r5, r0
 800c852:	e77a      	b.n	800c74a <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800c854:	200175bc 	.word	0x200175bc
 800c858:	200175c8 	.word	0x200175c8

0800c85c <_ZN8touchgfx15GraphScrollData5clearEv>:
 800c85c:	b510      	push	{r4, lr}
 800c85e:	4604      	mov	r4, r0
 800c860:	f7fe fd49 	bl	800b2f6 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800c864:	2300      	movs	r3, #0
 800c866:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800c86a:	bd10      	pop	{r4, pc}

0800c86c <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800c86c:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800c870:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800c874:	429a      	cmp	r2, r3
 800c876:	d101      	bne.n	800c87c <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800c878:	f7fe bf6a 	b.w	800b750 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800c87c:	4770      	bx	lr

0800c87e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800c87e:	b538      	push	{r3, r4, r5, lr}
 800c880:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800c884:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800c888:	42a5      	cmp	r5, r4
 800c88a:	da04      	bge.n	800c896 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800c88c:	6803      	ldr	r3, [r0, #0]
 800c88e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800c892:	4798      	blx	r3
 800c894:	bd38      	pop	{r3, r4, r5, pc}
 800c896:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800c89a:	4408      	add	r0, r1
 800c89c:	1b00      	subs	r0, r0, r4
 800c89e:	e7f9      	b.n	800c894 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800c8a0 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800c8a0:	b570      	push	{r4, r5, r6, lr}
 800c8a2:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800c8a6:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800c8aa:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800c8ae:	4604      	mov	r4, r0
 800c8b0:	1c6b      	adds	r3, r5, #1
 800c8b2:	b21b      	sxth	r3, r3
 800c8b4:	42ae      	cmp	r6, r5
 800c8b6:	bf08      	it	eq
 800c8b8:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800c8bc:	fb93 f0f2 	sdiv	r0, r3, r2
 800c8c0:	fb02 3010 	mls	r0, r2, r0, r3
 800c8c4:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800c8c8:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800c8cc:	4296      	cmp	r6, r2
 800c8ce:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800c8d2:	d108      	bne.n	800c8e6 <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800c8d4:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c8d8:	f004 fa93 	bl	8010e02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c8dc:	4620      	mov	r0, r4
 800c8de:	f7fe ff37 	bl	800b750 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800c8e2:	4628      	mov	r0, r5
 800c8e4:	bd70      	pop	{r4, r5, r6, pc}
 800c8e6:	4629      	mov	r1, r5
 800c8e8:	4620      	mov	r0, r4
 800c8ea:	f7fe ff09 	bl	800b700 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800c8ee:	e7f8      	b.n	800c8e2 <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800c8f0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800c8f0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c8f4:	4770      	bx	lr

0800c8f6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800c8f6:	b510      	push	{r4, lr}
 800c8f8:	4604      	mov	r4, r0
 800c8fa:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c8fc:	b150      	cbz	r0, 800c914 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c8fe:	6803      	ldr	r3, [r0, #0]
 800c900:	68db      	ldr	r3, [r3, #12]
 800c902:	4798      	blx	r3
 800c904:	b130      	cbz	r0, 800c914 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c906:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c908:	6803      	ldr	r3, [r0, #0]
 800c90a:	4621      	mov	r1, r4
 800c90c:	689b      	ldr	r3, [r3, #8]
 800c90e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c912:	4718      	bx	r3
 800c914:	bd10      	pop	{r4, pc}

0800c916 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800c916:	b570      	push	{r4, r5, r6, lr}
 800c918:	790b      	ldrb	r3, [r1, #4]
 800c91a:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800c91e:	2b00      	cmp	r3, #0
 800c920:	bf0c      	ite	eq
 800c922:	2301      	moveq	r3, #1
 800c924:	2300      	movne	r3, #0
 800c926:	4604      	mov	r4, r0
 800c928:	460e      	mov	r6, r1
 800c92a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800c92e:	d109      	bne.n	800c944 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800c930:	b14d      	cbz	r5, 800c946 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800c932:	7933      	ldrb	r3, [r6, #4]
 800c934:	2b01      	cmp	r3, #1
 800c936:	d10c      	bne.n	800c952 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800c938:	6823      	ldr	r3, [r4, #0]
 800c93a:	4620      	mov	r0, r4
 800c93c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c93e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c942:	4718      	bx	r3
 800c944:	b12d      	cbz	r5, 800c952 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800c946:	6823      	ldr	r3, [r4, #0]
 800c948:	4620      	mov	r0, r4
 800c94a:	695b      	ldr	r3, [r3, #20]
 800c94c:	4798      	blx	r3
 800c94e:	2d00      	cmp	r5, #0
 800c950:	d1ef      	bne.n	800c932 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800c952:	bd70      	pop	{r4, r5, r6, pc}

0800c954 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800c954:	4770      	bx	lr

0800c956 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800c956:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c95a:	b133      	cbz	r3, 800c96a <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800c95c:	790b      	ldrb	r3, [r1, #4]
 800c95e:	2b01      	cmp	r3, #1
 800c960:	bf01      	itttt	eq
 800c962:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800c964:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800c966:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800c968:	8603      	strheq	r3, [r0, #48]	; 0x30
 800c96a:	f7ff bfd4 	b.w	800c916 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800c96e <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800c96e:	8813      	ldrh	r3, [r2, #0]
 800c970:	8683      	strh	r3, [r0, #52]	; 0x34
 800c972:	f000 bbde 	b.w	800d132 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800c976 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800c976:	b510      	push	{r4, lr}
 800c978:	2138      	movs	r1, #56	; 0x38
 800c97a:	4604      	mov	r4, r0
 800c97c:	f012 fdc6 	bl	801f50c <_ZdlPvj>
 800c980:	4620      	mov	r0, r4
 800c982:	bd10      	pop	{r4, pc}

0800c984 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800c984:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800c988:	b12a      	cbz	r2, 800c996 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c98a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c98e:	b112      	cbz	r2, 800c996 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c990:	6803      	ldr	r3, [r0, #0]
 800c992:	695b      	ldr	r3, [r3, #20]
 800c994:	4718      	bx	r3
 800c996:	4770      	bx	lr

0800c998 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800c998:	2000      	movs	r0, #0
 800c99a:	4770      	bx	lr

0800c99c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800c99c:	4b07      	ldr	r3, [pc, #28]	; (800c9bc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800c99e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c9a0:	881b      	ldrh	r3, [r3, #0]
 800c9a2:	4293      	cmp	r3, r2
 800c9a4:	bf81      	itttt	hi
 800c9a6:	4b06      	ldrhi	r3, [pc, #24]	; (800c9c0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800c9a8:	681b      	ldrhi	r3, [r3, #0]
 800c9aa:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800c9ae:	7858      	ldrbhi	r0, [r3, #1]
 800c9b0:	bf8c      	ite	hi
 800c9b2:	f000 0003 	andhi.w	r0, r0, #3
 800c9b6:	2000      	movls	r0, #0
 800c9b8:	4770      	bx	lr
 800c9ba:	bf00      	nop
 800c9bc:	200175c0 	.word	0x200175c0
 800c9c0:	200175bc 	.word	0x200175bc

0800c9c4 <_ZN8touchgfx8TextAreaD1Ev>:
 800c9c4:	4770      	bx	lr
	...

0800c9c8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800c9c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9cc:	4b10      	ldr	r3, [pc, #64]	; (800ca10 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800c9ce:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c9d0:	881b      	ldrh	r3, [r3, #0]
 800c9d2:	428b      	cmp	r3, r1
 800c9d4:	4604      	mov	r4, r0
 800c9d6:	d918      	bls.n	800ca0a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800c9d8:	6803      	ldr	r3, [r0, #0]
 800c9da:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800c9dc:	4b0d      	ldr	r3, [pc, #52]	; (800ca14 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800c9de:	6818      	ldr	r0, [r3, #0]
 800c9e0:	f7f7 fe74 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800c9e4:	6823      	ldr	r3, [r4, #0]
 800c9e6:	4606      	mov	r6, r0
 800c9e8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c9ea:	4620      	mov	r0, r4
 800c9ec:	4798      	blx	r3
 800c9ee:	6823      	ldr	r3, [r4, #0]
 800c9f0:	4607      	mov	r7, r0
 800c9f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c9f6:	4620      	mov	r0, r4
 800c9f8:	4798      	blx	r3
 800c9fa:	463a      	mov	r2, r7
 800c9fc:	4603      	mov	r3, r0
 800c9fe:	4631      	mov	r1, r6
 800ca00:	4620      	mov	r0, r4
 800ca02:	46ac      	mov	ip, r5
 800ca04:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ca08:	4760      	bx	ip
 800ca0a:	2000      	movs	r0, #0
 800ca0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca10:	200175c0 	.word	0x200175c0
 800ca14:	200175c8 	.word	0x200175c8

0800ca18 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ca18:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ca1c:	4b17      	ldr	r3, [pc, #92]	; (800ca7c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800ca1e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ca20:	881b      	ldrh	r3, [r3, #0]
 800ca22:	428b      	cmp	r3, r1
 800ca24:	4604      	mov	r4, r0
 800ca26:	d926      	bls.n	800ca76 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800ca28:	4b15      	ldr	r3, [pc, #84]	; (800ca80 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800ca2a:	681b      	ldr	r3, [r3, #0]
 800ca2c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ca30:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ca34:	4b13      	ldr	r3, [pc, #76]	; (800ca84 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800ca36:	7855      	ldrb	r5, [r2, #1]
 800ca38:	681b      	ldr	r3, [r3, #0]
 800ca3a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ca3e:	6833      	ldr	r3, [r6, #0]
 800ca40:	69df      	ldr	r7, [r3, #28]
 800ca42:	4b11      	ldr	r3, [pc, #68]	; (800ca88 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ca44:	6818      	ldr	r0, [r3, #0]
 800ca46:	f7f7 fe41 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800ca4a:	6823      	ldr	r3, [r4, #0]
 800ca4c:	4680      	mov	r8, r0
 800ca4e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ca50:	4620      	mov	r0, r4
 800ca52:	4798      	blx	r3
 800ca54:	6823      	ldr	r3, [r4, #0]
 800ca56:	4681      	mov	r9, r0
 800ca58:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ca5c:	4620      	mov	r0, r4
 800ca5e:	4798      	blx	r3
 800ca60:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ca64:	9000      	str	r0, [sp, #0]
 800ca66:	464b      	mov	r3, r9
 800ca68:	4642      	mov	r2, r8
 800ca6a:	4629      	mov	r1, r5
 800ca6c:	4630      	mov	r0, r6
 800ca6e:	47b8      	blx	r7
 800ca70:	b003      	add	sp, #12
 800ca72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ca76:	2000      	movs	r0, #0
 800ca78:	e7fa      	b.n	800ca70 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800ca7a:	bf00      	nop
 800ca7c:	200175c0 	.word	0x200175c0
 800ca80:	200175bc 	.word	0x200175bc
 800ca84:	200175c4 	.word	0x200175c4
 800ca88:	200175c8 	.word	0x200175c8

0800ca8c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ca8c:	b40e      	push	{r1, r2, r3}
 800ca8e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca92:	4b2f      	ldr	r3, [pc, #188]	; (800cb50 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800ca94:	881a      	ldrh	r2, [r3, #0]
 800ca96:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ca98:	429a      	cmp	r2, r3
 800ca9a:	b09d      	sub	sp, #116	; 0x74
 800ca9c:	4604      	mov	r4, r0
 800ca9e:	d954      	bls.n	800cb4a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800caa0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800cb54 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800caa4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800cb58 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800caa8:	aa26      	add	r2, sp, #152	; 0x98
 800caaa:	9202      	str	r2, [sp, #8]
 800caac:	f8d9 2000 	ldr.w	r2, [r9]
 800cab0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800cab4:	f8d8 3000 	ldr.w	r3, [r8]
 800cab8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800cabc:	682b      	ldr	r3, [r5, #0]
 800cabe:	4628      	mov	r0, r5
 800cac0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cac2:	4798      	blx	r3
 800cac4:	b207      	sxth	r7, r0
 800cac6:	4606      	mov	r6, r0
 800cac8:	a803      	add	r0, sp, #12
 800caca:	f004 feea 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 800cace:	682b      	ldr	r3, [r5, #0]
 800cad0:	4628      	mov	r0, r5
 800cad2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cad4:	4798      	blx	r3
 800cad6:	682b      	ldr	r3, [r5, #0]
 800cad8:	4682      	mov	sl, r0
 800cada:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cadc:	4628      	mov	r0, r5
 800cade:	4798      	blx	r3
 800cae0:	4653      	mov	r3, sl
 800cae2:	9000      	str	r0, [sp, #0]
 800cae4:	9a02      	ldr	r2, [sp, #8]
 800cae6:	9925      	ldr	r1, [sp, #148]	; 0x94
 800cae8:	a803      	add	r0, sp, #12
 800caea:	f004 ff35 	bl	8011958 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800caee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800caf0:	f8d9 3000 	ldr.w	r3, [r9]
 800caf4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800caf8:	8925      	ldrh	r5, [r4, #8]
 800cafa:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800cafe:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800cb02:	eba5 050c 	sub.w	r5, r5, ip
 800cb06:	784a      	ldrb	r2, [r1, #1]
 800cb08:	f8d8 3000 	ldr.w	r3, [r8]
 800cb0c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800cb10:	b22d      	sxth	r5, r5
 800cb12:	9500      	str	r5, [sp, #0]
 800cb14:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800cb18:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800cb1c:	a803      	add	r0, sp, #12
 800cb1e:	f002 fd2f 	bl	800f580 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800cb22:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800cb26:	18b9      	adds	r1, r7, r2
 800cb28:	2900      	cmp	r1, #0
 800cb2a:	b203      	sxth	r3, r0
 800cb2c:	dd0b      	ble.n	800cb46 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800cb2e:	3b01      	subs	r3, #1
 800cb30:	fb13 f302 	smulbb	r3, r3, r2
 800cb34:	fb16 3300 	smlabb	r3, r6, r0, r3
 800cb38:	b21f      	sxth	r7, r3
 800cb3a:	4638      	mov	r0, r7
 800cb3c:	b01d      	add	sp, #116	; 0x74
 800cb3e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cb42:	b003      	add	sp, #12
 800cb44:	4770      	bx	lr
 800cb46:	2b00      	cmp	r3, #0
 800cb48:	dcf7      	bgt.n	800cb3a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800cb4a:	2700      	movs	r7, #0
 800cb4c:	e7f5      	b.n	800cb3a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800cb4e:	bf00      	nop
 800cb50:	200175c0 	.word	0x200175c0
 800cb54:	200175bc 	.word	0x200175bc
 800cb58:	200175c4 	.word	0x200175c4

0800cb5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800cb5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb60:	4bbb      	ldr	r3, [pc, #748]	; (800ce50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800cb62:	460c      	mov	r4, r1
 800cb64:	881b      	ldrh	r3, [r3, #0]
 800cb66:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800cb68:	428b      	cmp	r3, r1
 800cb6a:	b0a9      	sub	sp, #164	; 0xa4
 800cb6c:	4681      	mov	r9, r0
 800cb6e:	d809      	bhi.n	800cb84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800cb70:	2300      	movs	r3, #0
 800cb72:	f04f 32ff 	mov.w	r2, #4294967295
 800cb76:	e9c0 3200 	strd	r3, r2, [r0]
 800cb7a:	6083      	str	r3, [r0, #8]
 800cb7c:	4648      	mov	r0, r9
 800cb7e:	b029      	add	sp, #164	; 0xa4
 800cb80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb84:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800ce58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800cb88:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800ce5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800cb8c:	f8db 3000 	ldr.w	r3, [fp]
 800cb90:	f8d8 0000 	ldr.w	r0, [r8]
 800cb94:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800cb98:	4bae      	ldr	r3, [pc, #696]	; (800ce54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800cb9a:	681b      	ldr	r3, [r3, #0]
 800cb9c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800cba0:	f7f7 fd94 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800cba4:	682b      	ldr	r3, [r5, #0]
 800cba6:	4607      	mov	r7, r0
 800cba8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cbaa:	4628      	mov	r0, r5
 800cbac:	4798      	blx	r3
 800cbae:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800cbb0:	f8cd 800c 	str.w	r8, [sp, #12]
 800cbb4:	4430      	add	r0, r6
 800cbb6:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800cbba:	b283      	uxth	r3, r0
 800cbbc:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800cbc0:	9302      	str	r3, [sp, #8]
 800cbc2:	4650      	mov	r0, sl
 800cbc4:	2e00      	cmp	r6, #0
 800cbc6:	f040 8091 	bne.w	800ccec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800cbca:	f004 fe6a 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 800cbce:	682b      	ldr	r3, [r5, #0]
 800cbd0:	4628      	mov	r0, r5
 800cbd2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cbd4:	4798      	blx	r3
 800cbd6:	682b      	ldr	r3, [r5, #0]
 800cbd8:	9005      	str	r0, [sp, #20]
 800cbda:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cbdc:	4628      	mov	r0, r5
 800cbde:	4798      	blx	r3
 800cbe0:	6823      	ldr	r3, [r4, #0]
 800cbe2:	4680      	mov	r8, r0
 800cbe4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cbe6:	4620      	mov	r0, r4
 800cbe8:	4798      	blx	r3
 800cbea:	6822      	ldr	r2, [r4, #0]
 800cbec:	9004      	str	r0, [sp, #16]
 800cbee:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800cbf2:	4620      	mov	r0, r4
 800cbf4:	4790      	blx	r2
 800cbf6:	9905      	ldr	r1, [sp, #20]
 800cbf8:	9b04      	ldr	r3, [sp, #16]
 800cbfa:	9001      	str	r0, [sp, #4]
 800cbfc:	9300      	str	r3, [sp, #0]
 800cbfe:	460a      	mov	r2, r1
 800cc00:	4643      	mov	r3, r8
 800cc02:	4639      	mov	r1, r7
 800cc04:	4650      	mov	r0, sl
 800cc06:	f004 febc 	bl	8011982 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800cc0a:	4637      	mov	r7, r6
 800cc0c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800cc0e:	f8db 3000 	ldr.w	r3, [fp]
 800cc12:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800cc16:	4629      	mov	r1, r5
 800cc18:	785b      	ldrb	r3, [r3, #1]
 800cc1a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800cc1e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cc22:	4650      	mov	r0, sl
 800cc24:	f002 f9fe 	bl	800f024 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800cc28:	4287      	cmp	r7, r0
 800cc2a:	bfb8      	it	lt
 800cc2c:	b207      	sxthlt	r7, r0
 800cc2e:	3601      	adds	r6, #1
 800cc30:	4650      	mov	r0, sl
 800cc32:	b2b6      	uxth	r6, r6
 800cc34:	f004 fe5c 	bl	80118f0 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800cc38:	2800      	cmp	r0, #0
 800cc3a:	d0e7      	beq.n	800cc0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800cc3c:	9b02      	ldr	r3, [sp, #8]
 800cc3e:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800cc42:	fb13 f606 	smulbb	r6, r3, r6
 800cc46:	eba6 0608 	sub.w	r6, r6, r8
 800cc4a:	b2b6      	uxth	r6, r6
 800cc4c:	fa0f f886 	sxth.w	r8, r6
 800cc50:	f1b8 0f00 	cmp.w	r8, #0
 800cc54:	dd06      	ble.n	800cc64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800cc56:	682b      	ldr	r3, [r5, #0]
 800cc58:	4628      	mov	r0, r5
 800cc5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cc5c:	4798      	blx	r3
 800cc5e:	4430      	add	r0, r6
 800cc60:	fa0f f880 	sxth.w	r8, r0
 800cc64:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cc68:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800cc6c:	6823      	ldr	r3, [r4, #0]
 800cc6e:	bf08      	it	eq
 800cc70:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800cc74:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800cc76:	bf18      	it	ne
 800cc78:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800cc7c:	4620      	mov	r0, r4
 800cc7e:	4798      	blx	r3
 800cc80:	2801      	cmp	r0, #1
 800cc82:	b2ba      	uxth	r2, r7
 800cc84:	f000 80d1 	beq.w	800ce2a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800cc88:	2802      	cmp	r0, #2
 800cc8a:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800cc8e:	f000 80d2 	beq.w	800ce36 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800cc92:	b21e      	sxth	r6, r3
 800cc94:	7a29      	ldrb	r1, [r5, #8]
 800cc96:	7a6d      	ldrb	r5, [r5, #9]
 800cc98:	1a76      	subs	r6, r6, r1
 800cc9a:	4429      	add	r1, r5
 800cc9c:	440a      	add	r2, r1
 800cc9e:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800cca2:	b2b3      	uxth	r3, r6
 800cca4:	b292      	uxth	r2, r2
 800cca6:	2902      	cmp	r1, #2
 800cca8:	b21f      	sxth	r7, r3
 800ccaa:	b216      	sxth	r6, r2
 800ccac:	f000 80c6 	beq.w	800ce3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800ccb0:	2903      	cmp	r1, #3
 800ccb2:	f000 80d5 	beq.w	800ce60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800ccb6:	2901      	cmp	r1, #1
 800ccb8:	f040 80db 	bne.w	800ce72 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800ccbc:	8923      	ldrh	r3, [r4, #8]
 800ccbe:	4632      	mov	r2, r6
 800ccc0:	eba3 0308 	sub.w	r3, r3, r8
 800ccc4:	4646      	mov	r6, r8
 800ccc6:	463d      	mov	r5, r7
 800ccc8:	4690      	mov	r8, r2
 800ccca:	b21f      	sxth	r7, r3
 800cccc:	9b03      	ldr	r3, [sp, #12]
 800ccce:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ccd0:	6818      	ldr	r0, [r3, #0]
 800ccd2:	f7f7 fcfb 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800ccd6:	f8a9 7000 	strh.w	r7, [r9]
 800ccda:	f8a9 5002 	strh.w	r5, [r9, #2]
 800ccde:	f8a9 6004 	strh.w	r6, [r9, #4]
 800cce2:	f8a9 8006 	strh.w	r8, [r9, #6]
 800cce6:	f8c9 0008 	str.w	r0, [r9, #8]
 800ccea:	e747      	b.n	800cb7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800ccec:	f004 fdd9 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 800ccf0:	682b      	ldr	r3, [r5, #0]
 800ccf2:	4628      	mov	r0, r5
 800ccf4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ccf6:	4798      	blx	r3
 800ccf8:	682b      	ldr	r3, [r5, #0]
 800ccfa:	4606      	mov	r6, r0
 800ccfc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ccfe:	4628      	mov	r0, r5
 800cd00:	4798      	blx	r3
 800cd02:	6823      	ldr	r3, [r4, #0]
 800cd04:	4680      	mov	r8, r0
 800cd06:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cd08:	4620      	mov	r0, r4
 800cd0a:	4798      	blx	r3
 800cd0c:	6822      	ldr	r2, [r4, #0]
 800cd0e:	9004      	str	r0, [sp, #16]
 800cd10:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800cd14:	4620      	mov	r0, r4
 800cd16:	4790      	blx	r2
 800cd18:	9b04      	ldr	r3, [sp, #16]
 800cd1a:	9001      	str	r0, [sp, #4]
 800cd1c:	4632      	mov	r2, r6
 800cd1e:	9300      	str	r3, [sp, #0]
 800cd20:	4639      	mov	r1, r7
 800cd22:	4643      	mov	r3, r8
 800cd24:	4650      	mov	r0, sl
 800cd26:	f004 fe2c 	bl	8011982 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800cd2a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cd2e:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800cd32:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800cd34:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800cd38:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800cd3c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cd40:	bf0a      	itet	eq
 800cd42:	4642      	moveq	r2, r8
 800cd44:	461a      	movne	r2, r3
 800cd46:	4698      	moveq	r8, r3
 800cd48:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800cd4c:	1ad2      	subs	r2, r2, r3
 800cd4e:	f8db 3000 	ldr.w	r3, [fp]
 800cd52:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800cd56:	7859      	ldrb	r1, [r3, #1]
 800cd58:	f8cd a020 	str.w	sl, [sp, #32]
 800cd5c:	2300      	movs	r3, #0
 800cd5e:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800cd62:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cd66:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800cd6a:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800cd6e:	950a      	str	r5, [sp, #40]	; 0x28
 800cd70:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800cd74:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800cd78:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800cd7c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800cd80:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800cd84:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800cd88:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800cd8c:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800cd90:	b350      	cbz	r0, 800cde8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800cd92:	682b      	ldr	r3, [r5, #0]
 800cd94:	4628      	mov	r0, r5
 800cd96:	695b      	ldr	r3, [r3, #20]
 800cd98:	4798      	blx	r3
 800cd9a:	4607      	mov	r7, r0
 800cd9c:	b320      	cbz	r0, 800cde8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800cd9e:	980a      	ldr	r0, [sp, #40]	; 0x28
 800cda0:	6803      	ldr	r3, [r0, #0]
 800cda2:	4639      	mov	r1, r7
 800cda4:	68db      	ldr	r3, [r3, #12]
 800cda6:	4798      	blx	r3
 800cda8:	4606      	mov	r6, r0
 800cdaa:	b1e8      	cbz	r0, 800cde8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800cdac:	7b43      	ldrb	r3, [r0, #13]
 800cdae:	7a82      	ldrb	r2, [r0, #10]
 800cdb0:	005b      	lsls	r3, r3, #1
 800cdb2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cdb6:	4313      	orrs	r3, r2
 800cdb8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800cdbc:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800cdc0:	2b04      	cmp	r3, #4
 800cdc2:	d111      	bne.n	800cde8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800cdc4:	980a      	ldr	r0, [sp, #40]	; 0x28
 800cdc6:	6803      	ldr	r3, [r0, #0]
 800cdc8:	4632      	mov	r2, r6
 800cdca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cdcc:	4639      	mov	r1, r7
 800cdce:	4798      	blx	r3
 800cdd0:	7b73      	ldrb	r3, [r6, #13]
 800cdd2:	005b      	lsls	r3, r3, #1
 800cdd4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cdd8:	7ab3      	ldrb	r3, [r6, #10]
 800cdda:	4313      	orrs	r3, r2
 800cddc:	4418      	add	r0, r3
 800cdde:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800cde2:	4418      	add	r0, r3
 800cde4:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800cde8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800cdec:	2600      	movs	r6, #0
 800cdee:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800cdf2:	4637      	mov	r7, r6
 800cdf4:	45c3      	cmp	fp, r8
 800cdf6:	bfd4      	ite	le
 800cdf8:	2100      	movle	r1, #0
 800cdfa:	2101      	movgt	r1, #1
 800cdfc:	a807      	add	r0, sp, #28
 800cdfe:	f002 faf0 	bl	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ce02:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800ce06:	429f      	cmp	r7, r3
 800ce08:	bfb8      	it	lt
 800ce0a:	b21f      	sxthlt	r7, r3
 800ce0c:	9b02      	ldr	r3, [sp, #8]
 800ce0e:	eba8 0803 	sub.w	r8, r8, r3
 800ce12:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800ce16:	3601      	adds	r6, #1
 800ce18:	b2b6      	uxth	r6, r6
 800ce1a:	fa0f f888 	sxth.w	r8, r8
 800ce1e:	2b00      	cmp	r3, #0
 800ce20:	f43f af0c 	beq.w	800cc3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800ce24:	45c2      	cmp	sl, r8
 800ce26:	dbe5      	blt.n	800cdf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800ce28:	e708      	b.n	800cc3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800ce2a:	1bf6      	subs	r6, r6, r7
 800ce2c:	2702      	movs	r7, #2
 800ce2e:	fb96 f6f7 	sdiv	r6, r6, r7
 800ce32:	b236      	sxth	r6, r6
 800ce34:	e72e      	b.n	800cc94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800ce36:	4413      	add	r3, r2
 800ce38:	1af6      	subs	r6, r6, r3
 800ce3a:	e7fa      	b.n	800ce32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800ce3c:	8925      	ldrh	r5, [r4, #8]
 800ce3e:	1aad      	subs	r5, r5, r2
 800ce40:	1aed      	subs	r5, r5, r3
 800ce42:	b22f      	sxth	r7, r5
 800ce44:	8965      	ldrh	r5, [r4, #10]
 800ce46:	eba5 0508 	sub.w	r5, r5, r8
 800ce4a:	b22d      	sxth	r5, r5
 800ce4c:	e73e      	b.n	800cccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800ce4e:	bf00      	nop
 800ce50:	200175c0 	.word	0x200175c0
 800ce54:	200175c4 	.word	0x200175c4
 800ce58:	200175bc 	.word	0x200175bc
 800ce5c:	200175c8 	.word	0x200175c8
 800ce60:	8965      	ldrh	r5, [r4, #10]
 800ce62:	1aad      	subs	r5, r5, r2
 800ce64:	1aed      	subs	r5, r5, r3
 800ce66:	4633      	mov	r3, r6
 800ce68:	b22d      	sxth	r5, r5
 800ce6a:	4646      	mov	r6, r8
 800ce6c:	2700      	movs	r7, #0
 800ce6e:	4698      	mov	r8, r3
 800ce70:	e72c      	b.n	800cccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800ce72:	2500      	movs	r5, #0
 800ce74:	e72a      	b.n	800cccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800ce76:	bf00      	nop

0800ce78 <_ZN8touchgfx8TextAreaD0Ev>:
 800ce78:	b510      	push	{r4, lr}
 800ce7a:	2148      	movs	r1, #72	; 0x48
 800ce7c:	4604      	mov	r4, r0
 800ce7e:	f012 fb45 	bl	801f50c <_ZdlPvj>
 800ce82:	4620      	mov	r0, r4
 800ce84:	bd10      	pop	{r4, pc}
	...

0800ce88 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800ce88:	b513      	push	{r0, r1, r4, lr}
 800ce8a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800ce8e:	4604      	mov	r4, r0
 800ce90:	b1fb      	cbz	r3, 800ced2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ce92:	4b16      	ldr	r3, [pc, #88]	; (800ceec <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800ce94:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ce96:	881b      	ldrh	r3, [r3, #0]
 800ce98:	428b      	cmp	r3, r1
 800ce9a:	d91a      	bls.n	800ced2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ce9c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800cea0:	2b00      	cmp	r3, #0
 800cea2:	dd16      	ble.n	800ced2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800cea4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800cea8:	2b00      	cmp	r3, #0
 800ceaa:	dd12      	ble.n	800ced2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ceac:	4b10      	ldr	r3, [pc, #64]	; (800cef0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800ceae:	6818      	ldr	r0, [r3, #0]
 800ceb0:	f7f7 fc0c 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800ceb4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800ceb8:	6822      	ldr	r2, [r4, #0]
 800ceba:	2b00      	cmp	r3, #0
 800cebc:	db06      	blt.n	800cecc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800cebe:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800cec2:	2b00      	cmp	r3, #0
 800cec4:	db02      	blt.n	800cecc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800cec6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cec8:	4298      	cmp	r0, r3
 800ceca:	d004      	beq.n	800ced6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800cecc:	6953      	ldr	r3, [r2, #20]
 800cece:	4620      	mov	r0, r4
 800ced0:	4798      	blx	r3
 800ced2:	b002      	add	sp, #8
 800ced4:	bd10      	pop	{r4, pc}
 800ced6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800ceda:	c903      	ldmia	r1, {r0, r1}
 800cedc:	466b      	mov	r3, sp
 800cede:	e883 0003 	stmia.w	r3, {r0, r1}
 800cee2:	6912      	ldr	r2, [r2, #16]
 800cee4:	4619      	mov	r1, r3
 800cee6:	4620      	mov	r0, r4
 800cee8:	4790      	blx	r2
 800ceea:	e7f2      	b.n	800ced2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ceec:	200175c0 	.word	0x200175c0
 800cef0:	200175c8 	.word	0x200175c8

0800cef4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800cef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cef8:	4b44      	ldr	r3, [pc, #272]	; (800d00c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800cefa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800cefc:	881b      	ldrh	r3, [r3, #0]
 800cefe:	4293      	cmp	r3, r2
 800cf00:	b08e      	sub	sp, #56	; 0x38
 800cf02:	4604      	mov	r4, r0
 800cf04:	d97e      	bls.n	800d004 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800cf06:	6808      	ldr	r0, [r1, #0]
 800cf08:	4d41      	ldr	r5, [pc, #260]	; (800d010 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800cf0a:	6849      	ldr	r1, [r1, #4]
 800cf0c:	ab05      	add	r3, sp, #20
 800cf0e:	c303      	stmia	r3!, {r0, r1}
 800cf10:	4611      	mov	r1, r2
 800cf12:	6828      	ldr	r0, [r5, #0]
 800cf14:	f7f7 fbda 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800cf18:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800cf1c:	2b00      	cmp	r3, #0
 800cf1e:	db11      	blt.n	800cf44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800cf20:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800cf24:	2b00      	cmp	r3, #0
 800cf26:	db0d      	blt.n	800cf44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800cf28:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cf2a:	4298      	cmp	r0, r3
 800cf2c:	d10a      	bne.n	800cf44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800cf2e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800cf32:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cf36:	ab09      	add	r3, sp, #36	; 0x24
 800cf38:	e883 0003 	stmia.w	r3, {r0, r1}
 800cf3c:	4619      	mov	r1, r3
 800cf3e:	a805      	add	r0, sp, #20
 800cf40:	f7fd f86c 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800cf44:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800cf48:	2b00      	cmp	r3, #0
 800cf4a:	dd5b      	ble.n	800d004 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800cf4c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800cf50:	2b00      	cmp	r3, #0
 800cf52:	dd57      	ble.n	800d004 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800cf54:	4f2f      	ldr	r7, [pc, #188]	; (800d014 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800cf56:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800cf58:	683b      	ldr	r3, [r7, #0]
 800cf5a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800cf5e:	4b2e      	ldr	r3, [pc, #184]	; (800d018 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800cf60:	681b      	ldr	r3, [r3, #0]
 800cf62:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800cf66:	2e00      	cmp	r6, #0
 800cf68:	d04c      	beq.n	800d004 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800cf6a:	6823      	ldr	r3, [r4, #0]
 800cf6c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800cf70:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800cf72:	4620      	mov	r0, r4
 800cf74:	4798      	blx	r3
 800cf76:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800cf78:	683b      	ldr	r3, [r7, #0]
 800cf7a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800cf7e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800cf82:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800cf86:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cf88:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800cf8c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800cf90:	785b      	ldrb	r3, [r3, #1]
 800cf92:	9609      	str	r6, [sp, #36]	; 0x24
 800cf94:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cf98:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800cf9c:	4b1f      	ldr	r3, [pc, #124]	; (800d01c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800cf9e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800cfa2:	681b      	ldr	r3, [r3, #0]
 800cfa4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800cfa8:	910b      	str	r1, [sp, #44]	; 0x2c
 800cfaa:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800cfae:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800cfb2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800cfb6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800cfba:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800cfbe:	b10a      	cbz	r2, 800cfc4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800cfc0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800cfc2:	b906      	cbnz	r6, 800cfc6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800cfc4:	689e      	ldr	r6, [r3, #8]
 800cfc6:	af07      	add	r7, sp, #28
 800cfc8:	4621      	mov	r1, r4
 800cfca:	4638      	mov	r0, r7
 800cfcc:	f003 ffb4 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cfd0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800cfd2:	6828      	ldr	r0, [r5, #0]
 800cfd4:	f7f7 fb7a 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800cfd8:	6823      	ldr	r3, [r4, #0]
 800cfda:	4605      	mov	r5, r0
 800cfdc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cfde:	4620      	mov	r0, r4
 800cfe0:	4798      	blx	r3
 800cfe2:	6823      	ldr	r3, [r4, #0]
 800cfe4:	4680      	mov	r8, r0
 800cfe6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cfea:	4620      	mov	r0, r4
 800cfec:	4798      	blx	r3
 800cfee:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800cff2:	ab09      	add	r3, sp, #36	; 0x24
 800cff4:	9300      	str	r3, [sp, #0]
 800cff6:	9501      	str	r5, [sp, #4]
 800cff8:	ab05      	add	r3, sp, #20
 800cffa:	e897 0006 	ldmia.w	r7, {r1, r2}
 800cffe:	4630      	mov	r0, r6
 800d000:	f7f7 fb16 	bl	8004630 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d004:	b00e      	add	sp, #56	; 0x38
 800d006:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d00a:	bf00      	nop
 800d00c:	200175c0 	.word	0x200175c0
 800d010:	200175c8 	.word	0x200175c8
 800d014:	200175bc 	.word	0x200175bc
 800d018:	200175c4 	.word	0x200175c4
 800d01c:	20017564 	.word	0x20017564

0800d020 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800d020:	b570      	push	{r4, r5, r6, lr}
 800d022:	6803      	ldr	r3, [r0, #0]
 800d024:	4604      	mov	r4, r0
 800d026:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d028:	4615      	mov	r5, r2
 800d02a:	4798      	blx	r3
 800d02c:	6823      	ldr	r3, [r4, #0]
 800d02e:	4629      	mov	r1, r5
 800d030:	4620      	mov	r0, r4
 800d032:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d038:	4718      	bx	r3
	...

0800d03c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800d03c:	b538      	push	{r3, r4, r5, lr}
 800d03e:	4b0e      	ldr	r3, [pc, #56]	; (800d078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800d040:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d042:	881b      	ldrh	r3, [r3, #0]
 800d044:	429a      	cmp	r2, r3
 800d046:	4604      	mov	r4, r0
 800d048:	d214      	bcs.n	800d074 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800d04a:	6803      	ldr	r3, [r0, #0]
 800d04c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800d04e:	4798      	blx	r3
 800d050:	6823      	ldr	r3, [r4, #0]
 800d052:	4605      	mov	r5, r0
 800d054:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d056:	4620      	mov	r0, r4
 800d058:	4798      	blx	r3
 800d05a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d05e:	b22d      	sxth	r5, r5
 800d060:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d064:	4601      	mov	r1, r0
 800d066:	bf06      	itte	eq
 800d068:	4602      	moveq	r2, r0
 800d06a:	4629      	moveq	r1, r5
 800d06c:	462a      	movne	r2, r5
 800d06e:	4620      	mov	r0, r4
 800d070:	f7ff ffd6 	bl	800d020 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800d074:	bd38      	pop	{r3, r4, r5, pc}
 800d076:	bf00      	nop
 800d078:	200175c0 	.word	0x200175c0

0800d07c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800d07c:	b530      	push	{r4, r5, lr}
 800d07e:	888b      	ldrh	r3, [r1, #4]
 800d080:	8583      	strh	r3, [r0, #44]	; 0x2c
 800d082:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d086:	b085      	sub	sp, #20
 800d088:	4604      	mov	r4, r0
 800d08a:	b923      	cbnz	r3, 800d096 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d08c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d090:	b90b      	cbnz	r3, 800d096 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d092:	f7ff ffd3 	bl	800d03c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d096:	6823      	ldr	r3, [r4, #0]
 800d098:	466d      	mov	r5, sp
 800d09a:	4621      	mov	r1, r4
 800d09c:	4628      	mov	r0, r5
 800d09e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d0a2:	4798      	blx	r3
 800d0a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d0a8:	343c      	adds	r4, #60	; 0x3c
 800d0aa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d0ae:	b005      	add	sp, #20
 800d0b0:	bd30      	pop	{r4, r5, pc}

0800d0b2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d0b2:	2300      	movs	r3, #0
 800d0b4:	8083      	strh	r3, [r0, #4]
 800d0b6:	80c3      	strh	r3, [r0, #6]
 800d0b8:	8003      	strh	r3, [r0, #0]
 800d0ba:	8043      	strh	r3, [r0, #2]
 800d0bc:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800d0c0:	2bff      	cmp	r3, #255	; 0xff
 800d0c2:	bf01      	itttt	eq
 800d0c4:	890b      	ldrheq	r3, [r1, #8]
 800d0c6:	8083      	strheq	r3, [r0, #4]
 800d0c8:	894b      	ldrheq	r3, [r1, #10]
 800d0ca:	80c3      	strheq	r3, [r0, #6]
 800d0cc:	4770      	bx	lr
	...

0800d0d0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d0d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d0d2:	4604      	mov	r4, r0
 800d0d4:	6808      	ldr	r0, [r1, #0]
 800d0d6:	6849      	ldr	r1, [r1, #4]
 800d0d8:	466b      	mov	r3, sp
 800d0da:	c303      	stmia	r3!, {r0, r1}
 800d0dc:	6823      	ldr	r3, [r4, #0]
 800d0de:	4669      	mov	r1, sp
 800d0e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d0e2:	4620      	mov	r0, r4
 800d0e4:	4798      	blx	r3
 800d0e6:	4b08      	ldr	r3, [pc, #32]	; (800d108 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d0e8:	681b      	ldr	r3, [r3, #0]
 800d0ea:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d0ee:	b10a      	cbz	r2, 800d0f4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d0f0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d0f2:	b900      	cbnz	r0, 800d0f6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d0f4:	6898      	ldr	r0, [r3, #8]
 800d0f6:	6803      	ldr	r3, [r0, #0]
 800d0f8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d0fa:	6a1d      	ldr	r5, [r3, #32]
 800d0fc:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d100:	4669      	mov	r1, sp
 800d102:	47a8      	blx	r5
 800d104:	b003      	add	sp, #12
 800d106:	bd30      	pop	{r4, r5, pc}
 800d108:	20017564 	.word	0x20017564

0800d10c <_ZN8touchgfx3BoxD1Ev>:
 800d10c:	4770      	bx	lr

0800d10e <_ZN8touchgfx3BoxD0Ev>:
 800d10e:	b510      	push	{r4, lr}
 800d110:	212c      	movs	r1, #44	; 0x2c
 800d112:	4604      	mov	r4, r0
 800d114:	f012 f9fa 	bl	801f50c <_ZdlPvj>
 800d118:	4620      	mov	r0, r4
 800d11a:	bd10      	pop	{r4, pc}

0800d11c <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d11c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800d120:	b12a      	cbz	r2, 800d12e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d122:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d126:	b112      	cbz	r2, 800d12e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d128:	6803      	ldr	r3, [r0, #0]
 800d12a:	695b      	ldr	r3, [r3, #20]
 800d12c:	4718      	bx	r3
 800d12e:	4770      	bx	lr

0800d130 <_ZN8touchgfx6ButtonD1Ev>:
 800d130:	4770      	bx	lr

0800d132 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d132:	b570      	push	{r4, r5, r6, lr}
 800d134:	880b      	ldrh	r3, [r1, #0]
 800d136:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d138:	4605      	mov	r5, r0
 800d13a:	8813      	ldrh	r3, [r2, #0]
 800d13c:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d140:	4604      	mov	r4, r0
 800d142:	4628      	mov	r0, r5
 800d144:	f006 f8f6 	bl	8013334 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d148:	4606      	mov	r6, r0
 800d14a:	4628      	mov	r0, r5
 800d14c:	f006 f926 	bl	801339c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d150:	6823      	ldr	r3, [r4, #0]
 800d152:	4605      	mov	r5, r0
 800d154:	4631      	mov	r1, r6
 800d156:	4620      	mov	r0, r4
 800d158:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d15a:	4798      	blx	r3
 800d15c:	6823      	ldr	r3, [r4, #0]
 800d15e:	4629      	mov	r1, r5
 800d160:	4620      	mov	r0, r4
 800d162:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d164:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d168:	4718      	bx	r3

0800d16a <_ZN8touchgfx6ButtonD0Ev>:
 800d16a:	b510      	push	{r4, lr}
 800d16c:	2134      	movs	r1, #52	; 0x34
 800d16e:	4604      	mov	r4, r0
 800d170:	f012 f9cc 	bl	801f50c <_ZdlPvj>
 800d174:	4620      	mov	r0, r4
 800d176:	bd10      	pop	{r4, pc}

0800d178 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d178:	b510      	push	{r4, lr}
 800d17a:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800d17e:	2bff      	cmp	r3, #255	; 0xff
 800d180:	4604      	mov	r4, r0
 800d182:	d006      	beq.n	800d192 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d184:	2300      	movs	r3, #0
 800d186:	8003      	strh	r3, [r0, #0]
 800d188:	8043      	strh	r3, [r0, #2]
 800d18a:	8083      	strh	r3, [r0, #4]
 800d18c:	80c3      	strh	r3, [r0, #6]
 800d18e:	4620      	mov	r0, r4
 800d190:	bd10      	pop	{r4, pc}
 800d192:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d196:	b11b      	cbz	r3, 800d1a0 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d198:	3130      	adds	r1, #48	; 0x30
 800d19a:	f006 f933 	bl	8013404 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d19e:	e7f6      	b.n	800d18e <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d1a0:	312e      	adds	r1, #46	; 0x2e
 800d1a2:	e7fa      	b.n	800d19a <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800d1a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d1a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d1a8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d1ac:	b08a      	sub	sp, #40	; 0x28
 800d1ae:	4604      	mov	r4, r0
 800d1b0:	4688      	mov	r8, r1
 800d1b2:	2b00      	cmp	r3, #0
 800d1b4:	d066      	beq.n	800d284 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800d1b6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d1b8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d1bc:	a805      	add	r0, sp, #20
 800d1be:	f006 f8b9 	bl	8013334 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d1c2:	4607      	mov	r7, r0
 800d1c4:	a805      	add	r0, sp, #20
 800d1c6:	f006 f8e9 	bl	801339c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d1ca:	f9b8 6000 	ldrsh.w	r6, [r8]
 800d1ce:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800d1d2:	4432      	add	r2, r6
 800d1d4:	b292      	uxth	r2, r2
 800d1d6:	2300      	movs	r3, #0
 800d1d8:	fa0f fc82 	sxth.w	ip, r2
 800d1dc:	459c      	cmp	ip, r3
 800d1de:	9306      	str	r3, [sp, #24]
 800d1e0:	dd52      	ble.n	800d288 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d1e2:	42b7      	cmp	r7, r6
 800d1e4:	dd50      	ble.n	800d288 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d1e6:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800d1ea:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800d1ee:	442b      	add	r3, r5
 800d1f0:	b29b      	uxth	r3, r3
 800d1f2:	b219      	sxth	r1, r3
 800d1f4:	2900      	cmp	r1, #0
 800d1f6:	dd47      	ble.n	800d288 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d1f8:	42a8      	cmp	r0, r5
 800d1fa:	dd45      	ble.n	800d288 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d1fc:	4567      	cmp	r7, ip
 800d1fe:	bfb8      	it	lt
 800d200:	b2ba      	uxthlt	r2, r7
 800d202:	4288      	cmp	r0, r1
 800d204:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800d208:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800d20c:	bfb8      	it	lt
 800d20e:	b283      	uxthlt	r3, r0
 800d210:	1b92      	subs	r2, r2, r6
 800d212:	1b5b      	subs	r3, r3, r5
 800d214:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d218:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d21c:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d220:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d224:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d228:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d22c:	429a      	cmp	r2, r3
 800d22e:	d026      	beq.n	800d27e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d230:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d234:	2b00      	cmp	r3, #0
 800d236:	dd22      	ble.n	800d27e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d238:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d23c:	2b00      	cmp	r3, #0
 800d23e:	dd1e      	ble.n	800d27e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d240:	2300      	movs	r3, #0
 800d242:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d246:	6823      	ldr	r3, [r4, #0]
 800d248:	a908      	add	r1, sp, #32
 800d24a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d24c:	4620      	mov	r0, r4
 800d24e:	4798      	blx	r3
 800d250:	4b0f      	ldr	r3, [pc, #60]	; (800d290 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800d252:	681b      	ldr	r3, [r3, #0]
 800d254:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d258:	b10a      	cbz	r2, 800d25e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800d25a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d25c:	b900      	cbnz	r0, 800d260 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800d25e:	6898      	ldr	r0, [r3, #8]
 800d260:	6801      	ldr	r1, [r0, #0]
 800d262:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d266:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d26a:	2501      	movs	r5, #1
 800d26c:	9502      	str	r5, [sp, #8]
 800d26e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d272:	9401      	str	r4, [sp, #4]
 800d274:	ac06      	add	r4, sp, #24
 800d276:	9400      	str	r4, [sp, #0]
 800d278:	688c      	ldr	r4, [r1, #8]
 800d27a:	a905      	add	r1, sp, #20
 800d27c:	47a0      	blx	r4
 800d27e:	b00a      	add	sp, #40	; 0x28
 800d280:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d284:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d286:	e797      	b.n	800d1b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d288:	2300      	movs	r3, #0
 800d28a:	9307      	str	r3, [sp, #28]
 800d28c:	e7ca      	b.n	800d224 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800d28e:	bf00      	nop
 800d290:	20017564 	.word	0x20017564

0800d294 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800d294:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d298:	4b2f      	ldr	r3, [pc, #188]	; (800d358 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800d29a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d29c:	881b      	ldrh	r3, [r3, #0]
 800d29e:	4293      	cmp	r3, r2
 800d2a0:	b08d      	sub	sp, #52	; 0x34
 800d2a2:	4604      	mov	r4, r0
 800d2a4:	460f      	mov	r7, r1
 800d2a6:	d954      	bls.n	800d352 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800d2a8:	4b2c      	ldr	r3, [pc, #176]	; (800d35c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800d2aa:	6819      	ldr	r1, [r3, #0]
 800d2ac:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800d2b0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800d2b4:	4a2a      	ldr	r2, [pc, #168]	; (800d360 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800d2b6:	6812      	ldr	r2, [r2, #0]
 800d2b8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800d2bc:	2900      	cmp	r1, #0
 800d2be:	d048      	beq.n	800d352 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800d2c0:	785a      	ldrb	r2, [r3, #1]
 800d2c2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800d2c6:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800d2ca:	4b26      	ldr	r3, [pc, #152]	; (800d364 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800d2cc:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800d2d0:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800d2d4:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800d2d8:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800d2da:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800d2de:	9107      	str	r1, [sp, #28]
 800d2e0:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800d2e4:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d2e8:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800d2ec:	681a      	ldr	r2, [r3, #0]
 800d2ee:	f88d 8020 	strb.w	r8, [sp, #32]
 800d2f2:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800d2f6:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800d2fa:	9609      	str	r6, [sp, #36]	; 0x24
 800d2fc:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800d300:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800d304:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800d308:	b10b      	cbz	r3, 800d30e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800d30a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800d30c:	b905      	cbnz	r5, 800d310 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800d30e:	6895      	ldr	r5, [r2, #8]
 800d310:	ae05      	add	r6, sp, #20
 800d312:	4621      	mov	r1, r4
 800d314:	4630      	mov	r0, r6
 800d316:	f003 fe0f 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d31a:	4b13      	ldr	r3, [pc, #76]	; (800d368 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800d31c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d31e:	6818      	ldr	r0, [r3, #0]
 800d320:	f7f7 f9d4 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800d324:	6823      	ldr	r3, [r4, #0]
 800d326:	4680      	mov	r8, r0
 800d328:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d32a:	4620      	mov	r0, r4
 800d32c:	4798      	blx	r3
 800d32e:	6823      	ldr	r3, [r4, #0]
 800d330:	4681      	mov	r9, r0
 800d332:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d336:	4620      	mov	r0, r4
 800d338:	4798      	blx	r3
 800d33a:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800d33e:	ab07      	add	r3, sp, #28
 800d340:	9300      	str	r3, [sp, #0]
 800d342:	f8cd 8004 	str.w	r8, [sp, #4]
 800d346:	463b      	mov	r3, r7
 800d348:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d34c:	4628      	mov	r0, r5
 800d34e:	f7f7 f96f 	bl	8004630 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d352:	b00d      	add	sp, #52	; 0x34
 800d354:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d358:	200175c0 	.word	0x200175c0
 800d35c:	200175bc 	.word	0x200175bc
 800d360:	200175c4 	.word	0x200175c4
 800d364:	20017564 	.word	0x20017564
 800d368:	200175c8 	.word	0x200175c8

0800d36c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800d36c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d370:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800d374:	b0a0      	sub	sp, #128	; 0x80
 800d376:	4604      	mov	r4, r0
 800d378:	b193      	cbz	r3, 800d3a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d37a:	4b30      	ldr	r3, [pc, #192]	; (800d43c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800d37c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d37e:	881b      	ldrh	r3, [r3, #0]
 800d380:	428b      	cmp	r3, r1
 800d382:	d90d      	bls.n	800d3a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d384:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d388:	2b00      	cmp	r3, #0
 800d38a:	dd09      	ble.n	800d3a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d38c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d390:	2b00      	cmp	r3, #0
 800d392:	dd05      	ble.n	800d3a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d394:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800d398:	b12b      	cbz	r3, 800d3a6 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800d39a:	6803      	ldr	r3, [r0, #0]
 800d39c:	695b      	ldr	r3, [r3, #20]
 800d39e:	4798      	blx	r3
 800d3a0:	b020      	add	sp, #128	; 0x80
 800d3a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d3a6:	4b26      	ldr	r3, [pc, #152]	; (800d440 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800d3a8:	681b      	ldr	r3, [r3, #0]
 800d3aa:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d3ae:	4b25      	ldr	r3, [pc, #148]	; (800d444 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800d3b0:	681b      	ldr	r3, [r3, #0]
 800d3b2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d3b6:	4b24      	ldr	r3, [pc, #144]	; (800d448 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800d3b8:	6818      	ldr	r0, [r3, #0]
 800d3ba:	f7f7 f987 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800d3be:	4606      	mov	r6, r0
 800d3c0:	a807      	add	r0, sp, #28
 800d3c2:	f004 fa6e 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 800d3c6:	682b      	ldr	r3, [r5, #0]
 800d3c8:	4628      	mov	r0, r5
 800d3ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d3cc:	4798      	blx	r3
 800d3ce:	682b      	ldr	r3, [r5, #0]
 800d3d0:	4607      	mov	r7, r0
 800d3d2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d3d4:	4628      	mov	r0, r5
 800d3d6:	4798      	blx	r3
 800d3d8:	6823      	ldr	r3, [r4, #0]
 800d3da:	4605      	mov	r5, r0
 800d3dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3de:	4620      	mov	r0, r4
 800d3e0:	4798      	blx	r3
 800d3e2:	6823      	ldr	r3, [r4, #0]
 800d3e4:	4680      	mov	r8, r0
 800d3e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d3ea:	4620      	mov	r0, r4
 800d3ec:	4798      	blx	r3
 800d3ee:	462b      	mov	r3, r5
 800d3f0:	e9cd 8000 	strd	r8, r0, [sp]
 800d3f4:	463a      	mov	r2, r7
 800d3f6:	a807      	add	r0, sp, #28
 800d3f8:	4631      	mov	r1, r6
 800d3fa:	f004 fac2 	bl	8011982 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d3fe:	a807      	add	r0, sp, #28
 800d400:	f004 fe7a 	bl	80120f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d404:	280a      	cmp	r0, #10
 800d406:	d103      	bne.n	800d410 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800d408:	6823      	ldr	r3, [r4, #0]
 800d40a:	4620      	mov	r0, r4
 800d40c:	695b      	ldr	r3, [r3, #20]
 800d40e:	e7c6      	b.n	800d39e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800d410:	a807      	add	r0, sp, #28
 800d412:	f004 fe71 	bl	80120f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d416:	2800      	cmp	r0, #0
 800d418:	d1f4      	bne.n	800d404 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800d41a:	ad04      	add	r5, sp, #16
 800d41c:	4621      	mov	r1, r4
 800d41e:	4628      	mov	r0, r5
 800d420:	f7ff fb9c 	bl	800cb5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800d424:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d428:	6822      	ldr	r2, [r4, #0]
 800d42a:	ab02      	add	r3, sp, #8
 800d42c:	e883 0003 	stmia.w	r3, {r0, r1}
 800d430:	6912      	ldr	r2, [r2, #16]
 800d432:	4619      	mov	r1, r3
 800d434:	4620      	mov	r0, r4
 800d436:	4790      	blx	r2
 800d438:	e7b2      	b.n	800d3a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d43a:	bf00      	nop
 800d43c:	200175c0 	.word	0x200175c0
 800d440:	200175bc 	.word	0x200175bc
 800d444:	200175c4 	.word	0x200175c4
 800d448:	200175c8 	.word	0x200175c8

0800d44c <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800d44c:	4770      	bx	lr

0800d44e <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800d44e:	b510      	push	{r4, lr}
 800d450:	2134      	movs	r1, #52	; 0x34
 800d452:	4604      	mov	r4, r0
 800d454:	f012 f85a 	bl	801f50c <_ZdlPvj>
 800d458:	4620      	mov	r0, r4
 800d45a:	bd10      	pop	{r4, pc}

0800d45c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800d45c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d460:	4604      	mov	r4, r0
 800d462:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d464:	8962      	ldrh	r2, [r4, #10]
 800d466:	b218      	sxth	r0, r3
 800d468:	460e      	mov	r6, r1
 800d46a:	005b      	lsls	r3, r3, #1
 800d46c:	8921      	ldrh	r1, [r4, #8]
 800d46e:	b29b      	uxth	r3, r3
 800d470:	1ac9      	subs	r1, r1, r3
 800d472:	b08e      	sub	sp, #56	; 0x38
 800d474:	b209      	sxth	r1, r1
 800d476:	1ad3      	subs	r3, r2, r3
 800d478:	b21b      	sxth	r3, r3
 800d47a:	2900      	cmp	r1, #0
 800d47c:	f8ad 0000 	strh.w	r0, [sp]
 800d480:	f8ad 0002 	strh.w	r0, [sp, #2]
 800d484:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d488:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d48c:	dd5e      	ble.n	800d54c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d48e:	2b00      	cmp	r3, #0
 800d490:	dd5c      	ble.n	800d54c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d492:	6830      	ldr	r0, [r6, #0]
 800d494:	6871      	ldr	r1, [r6, #4]
 800d496:	ab02      	add	r3, sp, #8
 800d498:	c303      	stmia	r3!, {r0, r1}
 800d49a:	4669      	mov	r1, sp
 800d49c:	a802      	add	r0, sp, #8
 800d49e:	f7fc fdbd 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800d4a2:	4620      	mov	r0, r4
 800d4a4:	a902      	add	r1, sp, #8
 800d4a6:	f7ff fe13 	bl	800d0d0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800d4aa:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800d4ac:	2800      	cmp	r0, #0
 800d4ae:	d05f      	beq.n	800d570 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d4b0:	8963      	ldrh	r3, [r4, #10]
 800d4b2:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d4b6:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d4ba:	1a1f      	subs	r7, r3, r0
 800d4bc:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800d4c0:	b202      	sxth	r2, r0
 800d4c2:	2500      	movs	r5, #0
 800d4c4:	b21b      	sxth	r3, r3
 800d4c6:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800d4ca:	1a09      	subs	r1, r1, r0
 800d4cc:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800d4d0:	9506      	str	r5, [sp, #24]
 800d4d2:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d4d6:	f8ad 5020 	strh.w	r5, [sp, #32]
 800d4da:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d4de:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800d4e2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800d4e6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d4ea:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d4ee:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800d4f2:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800d4f6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800d4fa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d4fe:	af04      	add	r7, sp, #16
 800d500:	ab06      	add	r3, sp, #24
 800d502:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d506:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d50a:	e887 0003 	stmia.w	r7, {r0, r1}
 800d50e:	4631      	mov	r1, r6
 800d510:	4638      	mov	r0, r7
 800d512:	f7fc fd83 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800d516:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d51a:	2b00      	cmp	r3, #0
 800d51c:	dd12      	ble.n	800d544 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d51e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d522:	2b00      	cmp	r3, #0
 800d524:	dd0e      	ble.n	800d544 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d526:	6823      	ldr	r3, [r4, #0]
 800d528:	4639      	mov	r1, r7
 800d52a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d52c:	4620      	mov	r0, r4
 800d52e:	4798      	blx	r3
 800d530:	f7f4 ff56 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800d534:	6803      	ldr	r3, [r0, #0]
 800d536:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d538:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800d53c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d540:	4639      	mov	r1, r7
 800d542:	47c0      	blx	r8
 800d544:	3501      	adds	r5, #1
 800d546:	2d04      	cmp	r5, #4
 800d548:	d1da      	bne.n	800d500 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800d54a:	e011      	b.n	800d570 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d54c:	6830      	ldr	r0, [r6, #0]
 800d54e:	6871      	ldr	r1, [r6, #4]
 800d550:	ab06      	add	r3, sp, #24
 800d552:	c303      	stmia	r3!, {r0, r1}
 800d554:	6823      	ldr	r3, [r4, #0]
 800d556:	a906      	add	r1, sp, #24
 800d558:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d55a:	4620      	mov	r0, r4
 800d55c:	4798      	blx	r3
 800d55e:	f7f4 ff3f 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 800d562:	6803      	ldr	r3, [r0, #0]
 800d564:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d566:	6a1d      	ldr	r5, [r3, #32]
 800d568:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d56c:	a906      	add	r1, sp, #24
 800d56e:	47a8      	blx	r5
 800d570:	b00e      	add	sp, #56	; 0x38
 800d572:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d576 <_ZN8touchgfx5ImageD1Ev>:
 800d576:	4770      	bx	lr

0800d578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800d578:	b570      	push	{r4, r5, r6, lr}
 800d57a:	880b      	ldrh	r3, [r1, #0]
 800d57c:	84c3      	strh	r3, [r0, #38]	; 0x26
 800d57e:	4604      	mov	r4, r0
 800d580:	4608      	mov	r0, r1
 800d582:	460d      	mov	r5, r1
 800d584:	f005 fed6 	bl	8013334 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d588:	4606      	mov	r6, r0
 800d58a:	4628      	mov	r0, r5
 800d58c:	f005 ff06 	bl	801339c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d590:	6823      	ldr	r3, [r4, #0]
 800d592:	4605      	mov	r5, r0
 800d594:	4631      	mov	r1, r6
 800d596:	4620      	mov	r0, r4
 800d598:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d59a:	4798      	blx	r3
 800d59c:	6823      	ldr	r3, [r4, #0]
 800d59e:	4629      	mov	r1, r5
 800d5a0:	4620      	mov	r0, r4
 800d5a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d5a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d5a8:	4718      	bx	r3

0800d5aa <_ZN8touchgfx5ImageD0Ev>:
 800d5aa:	b510      	push	{r4, lr}
 800d5ac:	212c      	movs	r1, #44	; 0x2c
 800d5ae:	4604      	mov	r4, r0
 800d5b0:	f011 ffac 	bl	801f50c <_ZdlPvj>
 800d5b4:	4620      	mov	r0, r4
 800d5b6:	bd10      	pop	{r4, pc}

0800d5b8 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800d5b8:	b510      	push	{r4, lr}
 800d5ba:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800d5be:	2bff      	cmp	r3, #255	; 0xff
 800d5c0:	4604      	mov	r4, r0
 800d5c2:	d006      	beq.n	800d5d2 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800d5c4:	2300      	movs	r3, #0
 800d5c6:	8003      	strh	r3, [r0, #0]
 800d5c8:	8043      	strh	r3, [r0, #2]
 800d5ca:	8083      	strh	r3, [r0, #4]
 800d5cc:	80c3      	strh	r3, [r0, #6]
 800d5ce:	4620      	mov	r0, r4
 800d5d0:	bd10      	pop	{r4, pc}
 800d5d2:	3126      	adds	r1, #38	; 0x26
 800d5d4:	f005 ff16 	bl	8013404 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d5d8:	e7f9      	b.n	800d5ce <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800d5da <_ZNK8touchgfx5Image17invalidateContentEv>:
 800d5da:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800d5de:	b12a      	cbz	r2, 800d5ec <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800d5e0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d5e4:	b112      	cbz	r2, 800d5ec <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800d5e6:	6803      	ldr	r3, [r0, #0]
 800d5e8:	695b      	ldr	r3, [r3, #20]
 800d5ea:	4718      	bx	r3
 800d5ec:	4770      	bx	lr
	...

0800d5f0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800d5f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d5f4:	4604      	mov	r4, r0
 800d5f6:	b088      	sub	sp, #32
 800d5f8:	f854 3b26 	ldr.w	r3, [r4], #38
 800d5fc:	2500      	movs	r5, #0
 800d5fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d600:	460f      	mov	r7, r1
 800d602:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800d606:	a904      	add	r1, sp, #16
 800d608:	4606      	mov	r6, r0
 800d60a:	4798      	blx	r3
 800d60c:	4620      	mov	r0, r4
 800d60e:	f005 fe91 	bl	8013334 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d612:	4680      	mov	r8, r0
 800d614:	4620      	mov	r0, r4
 800d616:	f005 fec1 	bl	801339c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d61a:	9506      	str	r5, [sp, #24]
 800d61c:	ad06      	add	r5, sp, #24
 800d61e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d622:	4639      	mov	r1, r7
 800d624:	4628      	mov	r0, r5
 800d626:	f8ad 801c 	strh.w	r8, [sp, #28]
 800d62a:	f7fc fcf7 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800d62e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d632:	2b00      	cmp	r3, #0
 800d634:	dd19      	ble.n	800d66a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d636:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d63a:	2b00      	cmp	r3, #0
 800d63c:	dd15      	ble.n	800d66a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d63e:	4b0c      	ldr	r3, [pc, #48]	; (800d670 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800d640:	681b      	ldr	r3, [r3, #0]
 800d642:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d646:	b10a      	cbz	r2, 800d64c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800d648:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d64a:	b900      	cbnz	r0, 800d64e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800d64c:	6898      	ldr	r0, [r3, #8]
 800d64e:	6801      	ldr	r1, [r0, #0]
 800d650:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800d654:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800d658:	2701      	movs	r7, #1
 800d65a:	9702      	str	r7, [sp, #8]
 800d65c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800d660:	e9cd 5600 	strd	r5, r6, [sp]
 800d664:	688d      	ldr	r5, [r1, #8]
 800d666:	4621      	mov	r1, r4
 800d668:	47a8      	blx	r5
 800d66a:	b008      	add	sp, #32
 800d66c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d670:	20017564 	.word	0x20017564

0800d674 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800d674:	4770      	bx	lr

0800d676 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800d676:	b510      	push	{r4, lr}
 800d678:	2148      	movs	r1, #72	; 0x48
 800d67a:	4604      	mov	r4, r0
 800d67c:	f011 ff46 	bl	801f50c <_ZdlPvj>
 800d680:	4620      	mov	r0, r4
 800d682:	bd10      	pop	{r4, pc}

0800d684 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800d684:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d688:	b08d      	sub	sp, #52	; 0x34
 800d68a:	4604      	mov	r4, r0
 800d68c:	4688      	mov	r8, r1
 800d68e:	f7ff fd89 	bl	800d1a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800d692:	4a4d      	ldr	r2, [pc, #308]	; (800d7c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800d694:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d696:	8812      	ldrh	r2, [r2, #0]
 800d698:	429a      	cmp	r2, r3
 800d69a:	f240 8081 	bls.w	800d7a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800d69e:	4e4b      	ldr	r6, [pc, #300]	; (800d7cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800d6a0:	6832      	ldr	r2, [r6, #0]
 800d6a2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d6a6:	4b4a      	ldr	r3, [pc, #296]	; (800d7d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800d6a8:	681b      	ldr	r3, [r3, #0]
 800d6aa:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800d6ae:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d6b2:	2300      	movs	r3, #0
 800d6b4:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800d6b8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d6bc:	2b03      	cmp	r3, #3
 800d6be:	d811      	bhi.n	800d6e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800d6c0:	e8df f003 	tbb	[pc, r3]
 800d6c4:	71027102 	.word	0x71027102
 800d6c8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d6cc:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d6d0:	f8ad 1010 	strh.w	r1, [sp, #16]
 800d6d4:	1a9b      	subs	r3, r3, r2
 800d6d6:	2002      	movs	r0, #2
 800d6d8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d6dc:	fb93 f3f0 	sdiv	r3, r3, r0
 800d6e0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d6e4:	ad03      	add	r5, sp, #12
 800d6e6:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d6ea:	f10d 0914 	add.w	r9, sp, #20
 800d6ee:	e889 0003 	stmia.w	r9, {r0, r1}
 800d6f2:	4641      	mov	r1, r8
 800d6f4:	4648      	mov	r0, r9
 800d6f6:	f7fc fc91 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 800d6fa:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d6fe:	2b00      	cmp	r3, #0
 800d700:	dd4e      	ble.n	800d7a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800d702:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d706:	2b00      	cmp	r3, #0
 800d708:	dd4a      	ble.n	800d7a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800d70a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d70e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d712:	1a9b      	subs	r3, r3, r2
 800d714:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d718:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d71c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d720:	1a9b      	subs	r3, r3, r2
 800d722:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d726:	6823      	ldr	r3, [r4, #0]
 800d728:	4629      	mov	r1, r5
 800d72a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d72c:	4620      	mov	r0, r4
 800d72e:	4798      	blx	r3
 800d730:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800d734:	2b00      	cmp	r3, #0
 800d736:	d045      	beq.n	800d7c4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800d738:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d73a:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800d73c:	6833      	ldr	r3, [r6, #0]
 800d73e:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800d742:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800d746:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d74a:	785b      	ldrb	r3, [r3, #1]
 800d74c:	9209      	str	r2, [sp, #36]	; 0x24
 800d74e:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800d752:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d756:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800d75a:	2300      	movs	r3, #0
 800d75c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800d760:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800d764:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800d768:	4b1a      	ldr	r3, [pc, #104]	; (800d7d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800d76a:	9707      	str	r7, [sp, #28]
 800d76c:	681b      	ldr	r3, [r3, #0]
 800d76e:	f88d 6020 	strb.w	r6, [sp, #32]
 800d772:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d776:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d77a:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800d77e:	b10a      	cbz	r2, 800d784 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800d780:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800d782:	b904      	cbnz	r4, 800d786 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800d784:	689c      	ldr	r4, [r3, #8]
 800d786:	4b14      	ldr	r3, [pc, #80]	; (800d7d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800d788:	6818      	ldr	r0, [r3, #0]
 800d78a:	f7f6 ff9f 	bl	80046cc <_ZNK8touchgfx5Texts7getTextEt>
 800d78e:	ab07      	add	r3, sp, #28
 800d790:	9001      	str	r0, [sp, #4]
 800d792:	9300      	str	r3, [sp, #0]
 800d794:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d798:	464b      	mov	r3, r9
 800d79a:	4620      	mov	r0, r4
 800d79c:	f7f6 ff48 	bl	8004630 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d7a0:	b00d      	add	sp, #52	; 0x34
 800d7a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d7a6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d7aa:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800d7ae:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d7b2:	1a9b      	subs	r3, r3, r2
 800d7b4:	2002      	movs	r0, #2
 800d7b6:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d7ba:	fb93 f3f0 	sdiv	r3, r3, r0
 800d7be:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d7c2:	e78f      	b.n	800d6e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800d7c4:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800d7c6:	e7b8      	b.n	800d73a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800d7c8:	200175c0 	.word	0x200175c0
 800d7cc:	200175bc 	.word	0x200175bc
 800d7d0:	200175c4 	.word	0x200175c4
 800d7d4:	20017564 	.word	0x20017564
 800d7d8:	200175c8 	.word	0x200175c8

0800d7dc <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800d7dc:	b510      	push	{r4, lr}
 800d7de:	2101      	movs	r1, #1
 800d7e0:	4c13      	ldr	r4, [pc, #76]	; (800d830 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800d7e2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d7e6:	2200      	movs	r2, #0
 800d7e8:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800d7ec:	6004      	str	r4, [r0, #0]
 800d7ee:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d7f2:	4c10      	ldr	r4, [pc, #64]	; (800d834 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800d7f4:	8082      	strh	r2, [r0, #4]
 800d7f6:	80c2      	strh	r2, [r0, #6]
 800d7f8:	8102      	strh	r2, [r0, #8]
 800d7fa:	8142      	strh	r2, [r0, #10]
 800d7fc:	8182      	strh	r2, [r0, #12]
 800d7fe:	81c2      	strh	r2, [r0, #14]
 800d800:	8202      	strh	r2, [r0, #16]
 800d802:	8242      	strh	r2, [r0, #18]
 800d804:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d808:	61c2      	str	r2, [r0, #28]
 800d80a:	8402      	strh	r2, [r0, #32]
 800d80c:	8442      	strh	r2, [r0, #34]	; 0x22
 800d80e:	6282      	str	r2, [r0, #40]	; 0x28
 800d810:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800d814:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d816:	8601      	strh	r1, [r0, #48]	; 0x30
 800d818:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800d81c:	6344      	str	r4, [r0, #52]	; 0x34
 800d81e:	8701      	strh	r1, [r0, #56]	; 0x38
 800d820:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800d824:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800d828:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800d82c:	bd10      	pop	{r4, pc}
 800d82e:	bf00      	nop
 800d830:	08022c18 	.word	0x08022c18
 800d834:	08020ee4 	.word	0x08020ee4

0800d838 <_ZN8touchgfx7OutlineD1Ev>:
 800d838:	4770      	bx	lr

0800d83a <_ZN8touchgfx7OutlineD0Ev>:
 800d83a:	b510      	push	{r4, lr}
 800d83c:	2130      	movs	r1, #48	; 0x30
 800d83e:	4604      	mov	r4, r0
 800d840:	f011 fe64 	bl	801f50c <_ZdlPvj>
 800d844:	4620      	mov	r0, r4
 800d846:	bd10      	pop	{r4, pc}

0800d848 <_ZN8touchgfx7Outline5resetEv>:
 800d848:	b510      	push	{r4, lr}
 800d84a:	4604      	mov	r4, r0
 800d84c:	f000 fe8c 	bl	800e568 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800d850:	60e0      	str	r0, [r4, #12]
 800d852:	f000 fe8f 	bl	800e574 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800d856:	68e3      	ldr	r3, [r4, #12]
 800d858:	6123      	str	r3, [r4, #16]
 800d85a:	08c0      	lsrs	r0, r0, #3
 800d85c:	2200      	movs	r2, #0
 800d85e:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800d862:	3801      	subs	r0, #1
 800d864:	6060      	str	r0, [r4, #4]
 800d866:	60a2      	str	r2, [r4, #8]
 800d868:	8019      	strh	r1, [r3, #0]
 800d86a:	8059      	strh	r1, [r3, #2]
 800d86c:	809a      	strh	r2, [r3, #4]
 800d86e:	80da      	strh	r2, [r3, #6]
 800d870:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d872:	f023 0301 	bic.w	r3, r3, #1
 800d876:	f043 0302 	orr.w	r3, r3, #2
 800d87a:	6263      	str	r3, [r4, #36]	; 0x24
 800d87c:	bd10      	pop	{r4, pc}
	...

0800d880 <_ZN8touchgfx7OutlineC1Ev>:
 800d880:	b510      	push	{r4, lr}
 800d882:	4b0a      	ldr	r3, [pc, #40]	; (800d8ac <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800d884:	6003      	str	r3, [r0, #0]
 800d886:	2300      	movs	r3, #0
 800d888:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800d88c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d890:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800d894:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800d898:	6243      	str	r3, [r0, #36]	; 0x24
 800d89a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800d89e:	4604      	mov	r4, r0
 800d8a0:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800d8a4:	f7ff ffd0 	bl	800d848 <_ZN8touchgfx7Outline5resetEv>
 800d8a8:	4620      	mov	r0, r4
 800d8aa:	bd10      	pop	{r4, pc}
 800d8ac:	08022c8c 	.word	0x08022c8c

0800d8b0 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800d8b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8b4:	b093      	sub	sp, #76	; 0x4c
 800d8b6:	1156      	asrs	r6, r2, #5
 800d8b8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800d8ba:	9305      	str	r3, [sp, #20]
 800d8bc:	f004 051f 	and.w	r5, r4, #31
 800d8c0:	1153      	asrs	r3, r2, #5
 800d8c2:	9504      	str	r5, [sp, #16]
 800d8c4:	1165      	asrs	r5, r4, #5
 800d8c6:	9303      	str	r3, [sp, #12]
 800d8c8:	42ae      	cmp	r6, r5
 800d8ca:	ea4f 1364 	mov.w	r3, r4, asr #5
 800d8ce:	9306      	str	r3, [sp, #24]
 800d8d0:	f002 031f 	and.w	r3, r2, #31
 800d8d4:	f040 80f8 	bne.w	800dac8 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800d8d8:	9c04      	ldr	r4, [sp, #16]
 800d8da:	9a05      	ldr	r2, [sp, #20]
 800d8dc:	42a3      	cmp	r3, r4
 800d8de:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800d8e2:	6902      	ldr	r2, [r0, #16]
 800d8e4:	d125      	bne.n	800d932 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800d8e6:	f9b2 3000 	ldrsh.w	r3, [r2]
 800d8ea:	459e      	cmp	lr, r3
 800d8ec:	d103      	bne.n	800d8f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800d8ee:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d8f2:	429e      	cmp	r6, r3
 800d8f4:	d035      	beq.n	800d962 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d8f6:	88d1      	ldrh	r1, [r2, #6]
 800d8f8:	8893      	ldrh	r3, [r2, #4]
 800d8fa:	430b      	orrs	r3, r1
 800d8fc:	d010      	beq.n	800d920 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d8fe:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d902:	2b00      	cmp	r3, #0
 800d904:	db0c      	blt.n	800d920 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d906:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800d908:	428b      	cmp	r3, r1
 800d90a:	da09      	bge.n	800d920 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d90c:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800d910:	428b      	cmp	r3, r1
 800d912:	bf38      	it	cc
 800d914:	3208      	addcc	r2, #8
 800d916:	f103 0301 	add.w	r3, r3, #1
 800d91a:	bf38      	it	cc
 800d91c:	6102      	strcc	r2, [r0, #16]
 800d91e:	6083      	str	r3, [r0, #8]
 800d920:	6903      	ldr	r3, [r0, #16]
 800d922:	9a03      	ldr	r2, [sp, #12]
 800d924:	f8a3 e000 	strh.w	lr, [r3]
 800d928:	805a      	strh	r2, [r3, #2]
 800d92a:	2200      	movs	r2, #0
 800d92c:	809a      	strh	r2, [r3, #4]
 800d92e:	80da      	strh	r2, [r3, #6]
 800d930:	e017      	b.n	800d962 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d932:	9c05      	ldr	r4, [sp, #20]
 800d934:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800d938:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800d93c:	f004 041f 	and.w	r4, r4, #31
 800d940:	114e      	asrs	r6, r1, #5
 800d942:	9402      	str	r4, [sp, #8]
 800d944:	9c04      	ldr	r4, [sp, #16]
 800d946:	4576      	cmp	r6, lr
 800d948:	f001 0c1f 	and.w	ip, r1, #31
 800d94c:	eba4 0403 	sub.w	r4, r4, r3
 800d950:	d10a      	bne.n	800d968 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800d952:	9b02      	ldr	r3, [sp, #8]
 800d954:	449c      	add	ip, r3
 800d956:	44a0      	add	r8, r4
 800d958:	fb04 a40c 	mla	r4, r4, ip, sl
 800d95c:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d960:	80d4      	strh	r4, [r2, #6]
 800d962:	b013      	add	sp, #76	; 0x4c
 800d964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d968:	9d05      	ldr	r5, [sp, #20]
 800d96a:	1a69      	subs	r1, r5, r1
 800d96c:	bf5b      	ittet	pl
 800d96e:	f1cc 0520 	rsbpl	r5, ip, #32
 800d972:	436c      	mulpl	r4, r5
 800d974:	2500      	movmi	r5, #0
 800d976:	2520      	movpl	r5, #32
 800d978:	bf44      	itt	mi
 800d97a:	fb04 f40c 	mulmi.w	r4, r4, ip
 800d97e:	4249      	negmi	r1, r1
 800d980:	9501      	str	r5, [sp, #4]
 800d982:	9f01      	ldr	r7, [sp, #4]
 800d984:	fb94 f5f1 	sdiv	r5, r4, r1
 800d988:	fb01 4415 	mls	r4, r1, r5, r4
 800d98c:	bf54      	ite	pl
 800d98e:	f04f 0901 	movpl.w	r9, #1
 800d992:	f04f 39ff 	movmi.w	r9, #4294967295
 800d996:	2c00      	cmp	r4, #0
 800d998:	bfb8      	it	lt
 800d99a:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800d99e:	44bc      	add	ip, r7
 800d9a0:	44a8      	add	r8, r5
 800d9a2:	fb05 ac0c 	mla	ip, r5, ip, sl
 800d9a6:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d9aa:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d9ae:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d9b2:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800d9b6:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800d9ba:	bfb8      	it	lt
 800d9bc:	1864      	addlt	r4, r4, r1
 800d9be:	ea58 0202 	orrs.w	r2, r8, r2
 800d9c2:	444e      	add	r6, r9
 800d9c4:	d011      	beq.n	800d9ea <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d9c6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800d9ca:	f1b8 0f00 	cmp.w	r8, #0
 800d9ce:	db0c      	blt.n	800d9ea <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d9d0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800d9d2:	4590      	cmp	r8, r2
 800d9d4:	da09      	bge.n	800d9ea <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d9d6:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800d9da:	4590      	cmp	r8, r2
 800d9dc:	bf3c      	itt	cc
 800d9de:	f10c 0208 	addcc.w	r2, ip, #8
 800d9e2:	6102      	strcc	r2, [r0, #16]
 800d9e4:	f108 0201 	add.w	r2, r8, #1
 800d9e8:	6082      	str	r2, [r0, #8]
 800d9ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d9ee:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d9f2:	f8ac 6000 	strh.w	r6, [ip]
 800d9f6:	2700      	movs	r7, #0
 800d9f8:	45b6      	cmp	lr, r6
 800d9fa:	f8ac 2002 	strh.w	r2, [ip, #2]
 800d9fe:	f8ac 7004 	strh.w	r7, [ip, #4]
 800da02:	f8ac 7006 	strh.w	r7, [ip, #6]
 800da06:	442b      	add	r3, r5
 800da08:	d04d      	beq.n	800daa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800da0a:	9f04      	ldr	r7, [sp, #16]
 800da0c:	1aff      	subs	r7, r7, r3
 800da0e:	443d      	add	r5, r7
 800da10:	016d      	lsls	r5, r5, #5
 800da12:	fb95 f8f1 	sdiv	r8, r5, r1
 800da16:	fb01 5518 	mls	r5, r1, r8, r5
 800da1a:	2d00      	cmp	r5, #0
 800da1c:	bfb8      	it	lt
 800da1e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800da22:	f108 0701 	add.w	r7, r8, #1
 800da26:	bfb8      	it	lt
 800da28:	186d      	addlt	r5, r5, r1
 800da2a:	1a64      	subs	r4, r4, r1
 800da2c:	9703      	str	r7, [sp, #12]
 800da2e:	f04f 0a00 	mov.w	sl, #0
 800da32:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800da36:	1964      	adds	r4, r4, r5
 800da38:	bf58      	it	pl
 800da3a:	9f03      	ldrpl	r7, [sp, #12]
 800da3c:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800da40:	bf48      	it	mi
 800da42:	4647      	movmi	r7, r8
 800da44:	44bb      	add	fp, r7
 800da46:	f8ac b004 	strh.w	fp, [ip, #4]
 800da4a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800da4e:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800da52:	f8ac b006 	strh.w	fp, [ip, #6]
 800da56:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800da5a:	443b      	add	r3, r7
 800da5c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800da60:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800da64:	bf58      	it	pl
 800da66:	1a64      	subpl	r4, r4, r1
 800da68:	ea5b 0707 	orrs.w	r7, fp, r7
 800da6c:	444e      	add	r6, r9
 800da6e:	d011      	beq.n	800da94 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800da70:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800da74:	f1bb 0f00 	cmp.w	fp, #0
 800da78:	db0c      	blt.n	800da94 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800da7a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800da7c:	45bb      	cmp	fp, r7
 800da7e:	da09      	bge.n	800da94 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800da80:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800da84:	45bb      	cmp	fp, r7
 800da86:	bf3c      	itt	cc
 800da88:	f10c 0708 	addcc.w	r7, ip, #8
 800da8c:	6107      	strcc	r7, [r0, #16]
 800da8e:	f10b 0701 	add.w	r7, fp, #1
 800da92:	6087      	str	r7, [r0, #8]
 800da94:	6907      	ldr	r7, [r0, #16]
 800da96:	45b6      	cmp	lr, r6
 800da98:	803e      	strh	r6, [r7, #0]
 800da9a:	807a      	strh	r2, [r7, #2]
 800da9c:	f8a7 a004 	strh.w	sl, [r7, #4]
 800daa0:	f8a7 a006 	strh.w	sl, [r7, #6]
 800daa4:	d1c5      	bne.n	800da32 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800daa6:	9a04      	ldr	r2, [sp, #16]
 800daa8:	1ad3      	subs	r3, r2, r3
 800daaa:	6902      	ldr	r2, [r0, #16]
 800daac:	8891      	ldrh	r1, [r2, #4]
 800daae:	88d6      	ldrh	r6, [r2, #6]
 800dab0:	4419      	add	r1, r3
 800dab2:	8091      	strh	r1, [r2, #4]
 800dab4:	9902      	ldr	r1, [sp, #8]
 800dab6:	f101 0c20 	add.w	ip, r1, #32
 800daba:	9901      	ldr	r1, [sp, #4]
 800dabc:	ebac 0c01 	sub.w	ip, ip, r1
 800dac0:	fb03 630c 	mla	r3, r3, ip, r6
 800dac4:	80d3      	strh	r3, [r2, #6]
 800dac6:	e74c      	b.n	800d962 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dac8:	9d05      	ldr	r5, [sp, #20]
 800daca:	1aa2      	subs	r2, r4, r2
 800dacc:	eba5 0501 	sub.w	r5, r5, r1
 800dad0:	9508      	str	r5, [sp, #32]
 800dad2:	9202      	str	r2, [sp, #8]
 800dad4:	f140 8128 	bpl.w	800dd28 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800dad8:	9a03      	ldr	r2, [sp, #12]
 800dada:	2a00      	cmp	r2, #0
 800dadc:	f6ff af41 	blt.w	800d962 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dae0:	9a02      	ldr	r2, [sp, #8]
 800dae2:	4252      	negs	r2, r2
 800dae4:	9202      	str	r2, [sp, #8]
 800dae6:	9a06      	ldr	r2, [sp, #24]
 800dae8:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800daec:	f04f 34ff 	mov.w	r4, #4294967295
 800daf0:	9206      	str	r2, [sp, #24]
 800daf2:	462a      	mov	r2, r5
 800daf4:	940b      	str	r4, [sp, #44]	; 0x2c
 800daf6:	435a      	muls	r2, r3
 800daf8:	2400      	movs	r4, #0
 800dafa:	9d02      	ldr	r5, [sp, #8]
 800dafc:	9401      	str	r4, [sp, #4]
 800dafe:	9c02      	ldr	r4, [sp, #8]
 800db00:	fb92 f4f4 	sdiv	r4, r2, r4
 800db04:	fb05 2214 	mls	r2, r5, r4, r2
 800db08:	2a00      	cmp	r2, #0
 800db0a:	9207      	str	r2, [sp, #28]
 800db0c:	bfbc      	itt	lt
 800db0e:	1952      	addlt	r2, r2, r5
 800db10:	9207      	strlt	r2, [sp, #28]
 800db12:	9a01      	ldr	r2, [sp, #4]
 800db14:	6905      	ldr	r5, [r0, #16]
 800db16:	bfb8      	it	lt
 800db18:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800db1c:	eb04 0901 	add.w	r9, r4, r1
 800db20:	429a      	cmp	r2, r3
 800db22:	ea4f 1669 	mov.w	r6, r9, asr #5
 800db26:	f040 8112 	bne.w	800dd4e <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800db2a:	f9b5 3000 	ldrsh.w	r3, [r5]
 800db2e:	429e      	cmp	r6, r3
 800db30:	d104      	bne.n	800db3c <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800db32:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800db36:	9a03      	ldr	r2, [sp, #12]
 800db38:	429a      	cmp	r2, r3
 800db3a:	d01b      	beq.n	800db74 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800db3c:	88ea      	ldrh	r2, [r5, #6]
 800db3e:	88ab      	ldrh	r3, [r5, #4]
 800db40:	4313      	orrs	r3, r2
 800db42:	d010      	beq.n	800db66 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800db44:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800db48:	2a00      	cmp	r2, #0
 800db4a:	db0c      	blt.n	800db66 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800db4c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800db4e:	429a      	cmp	r2, r3
 800db50:	da09      	bge.n	800db66 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800db52:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800db56:	429a      	cmp	r2, r3
 800db58:	bf38      	it	cc
 800db5a:	3508      	addcc	r5, #8
 800db5c:	f102 0201 	add.w	r2, r2, #1
 800db60:	bf38      	it	cc
 800db62:	6105      	strcc	r5, [r0, #16]
 800db64:	6082      	str	r2, [r0, #8]
 800db66:	6903      	ldr	r3, [r0, #16]
 800db68:	9a03      	ldr	r2, [sp, #12]
 800db6a:	805a      	strh	r2, [r3, #2]
 800db6c:	2200      	movs	r2, #0
 800db6e:	801e      	strh	r6, [r3, #0]
 800db70:	809a      	strh	r2, [r3, #4]
 800db72:	80da      	strh	r2, [r3, #6]
 800db74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800db76:	9a03      	ldr	r2, [sp, #12]
 800db78:	6901      	ldr	r1, [r0, #16]
 800db7a:	441a      	add	r2, r3
 800db7c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800db80:	42b3      	cmp	r3, r6
 800db82:	d103      	bne.n	800db8c <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800db84:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800db88:	429a      	cmp	r2, r3
 800db8a:	d01a      	beq.n	800dbc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800db8c:	88cc      	ldrh	r4, [r1, #6]
 800db8e:	888b      	ldrh	r3, [r1, #4]
 800db90:	4323      	orrs	r3, r4
 800db92:	d010      	beq.n	800dbb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800db94:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800db98:	2c00      	cmp	r4, #0
 800db9a:	db0c      	blt.n	800dbb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800db9c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800db9e:	429c      	cmp	r4, r3
 800dba0:	da09      	bge.n	800dbb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800dba2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dba6:	429c      	cmp	r4, r3
 800dba8:	bf38      	it	cc
 800dbaa:	3108      	addcc	r1, #8
 800dbac:	f104 0401 	add.w	r4, r4, #1
 800dbb0:	bf38      	it	cc
 800dbb2:	6101      	strcc	r1, [r0, #16]
 800dbb4:	6084      	str	r4, [r0, #8]
 800dbb6:	6903      	ldr	r3, [r0, #16]
 800dbb8:	2100      	movs	r1, #0
 800dbba:	801e      	strh	r6, [r3, #0]
 800dbbc:	805a      	strh	r2, [r3, #2]
 800dbbe:	8099      	strh	r1, [r3, #4]
 800dbc0:	80d9      	strh	r1, [r3, #6]
 800dbc2:	9b06      	ldr	r3, [sp, #24]
 800dbc4:	4293      	cmp	r3, r2
 800dbc6:	f000 8082 	beq.w	800dcce <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800dbca:	9b08      	ldr	r3, [sp, #32]
 800dbcc:	9c02      	ldr	r4, [sp, #8]
 800dbce:	9902      	ldr	r1, [sp, #8]
 800dbd0:	015b      	lsls	r3, r3, #5
 800dbd2:	fb93 f1f1 	sdiv	r1, r3, r1
 800dbd6:	fb04 3311 	mls	r3, r4, r1, r3
 800dbda:	2b00      	cmp	r3, #0
 800dbdc:	9103      	str	r1, [sp, #12]
 800dbde:	9308      	str	r3, [sp, #32]
 800dbe0:	da04      	bge.n	800dbec <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800dbe2:	1e4b      	subs	r3, r1, #1
 800dbe4:	9303      	str	r3, [sp, #12]
 800dbe6:	9b08      	ldr	r3, [sp, #32]
 800dbe8:	4423      	add	r3, r4
 800dbea:	9308      	str	r3, [sp, #32]
 800dbec:	9b07      	ldr	r3, [sp, #28]
 800dbee:	9902      	ldr	r1, [sp, #8]
 800dbf0:	1a5b      	subs	r3, r3, r1
 800dbf2:	9307      	str	r3, [sp, #28]
 800dbf4:	9b01      	ldr	r3, [sp, #4]
 800dbf6:	f1c3 0320 	rsb	r3, r3, #32
 800dbfa:	930e      	str	r3, [sp, #56]	; 0x38
 800dbfc:	990e      	ldr	r1, [sp, #56]	; 0x38
 800dbfe:	9b01      	ldr	r3, [sp, #4]
 800dc00:	1a5b      	subs	r3, r3, r1
 800dc02:	464f      	mov	r7, r9
 800dc04:	930a      	str	r3, [sp, #40]	; 0x28
 800dc06:	2600      	movs	r6, #0
 800dc08:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800dc0c:	185b      	adds	r3, r3, r1
 800dc0e:	bf58      	it	pl
 800dc10:	9902      	ldrpl	r1, [sp, #8]
 800dc12:	9307      	str	r3, [sp, #28]
 800dc14:	bf5d      	ittte	pl
 800dc16:	1a5b      	subpl	r3, r3, r1
 800dc18:	9307      	strpl	r3, [sp, #28]
 800dc1a:	9b03      	ldrpl	r3, [sp, #12]
 800dc1c:	9903      	ldrmi	r1, [sp, #12]
 800dc1e:	bf58      	it	pl
 800dc20:	1c59      	addpl	r1, r3, #1
 800dc22:	4489      	add	r9, r1
 800dc24:	2a00      	cmp	r2, #0
 800dc26:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800dc2a:	db2e      	blt.n	800dc8a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dc2c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800dc2e:	4293      	cmp	r3, r2
 800dc30:	dd2b      	ble.n	800dc8a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dc32:	9c01      	ldr	r4, [sp, #4]
 800dc34:	6905      	ldr	r5, [r0, #16]
 800dc36:	46a0      	mov	r8, r4
 800dc38:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800dc3a:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800dc3e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800dc42:	45a0      	cmp	r8, r4
 800dc44:	f040 814f 	bne.w	800dee6 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800dc48:	f9b5 1000 	ldrsh.w	r1, [r5]
 800dc4c:	4551      	cmp	r1, sl
 800dc4e:	d103      	bne.n	800dc58 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800dc50:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800dc54:	4291      	cmp	r1, r2
 800dc56:	d018      	beq.n	800dc8a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dc58:	ea5c 010e 	orrs.w	r1, ip, lr
 800dc5c:	d00f      	beq.n	800dc7e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dc5e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800dc62:	2900      	cmp	r1, #0
 800dc64:	db0b      	blt.n	800dc7e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dc66:	428b      	cmp	r3, r1
 800dc68:	dd09      	ble.n	800dc7e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dc6a:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800dc6e:	4299      	cmp	r1, r3
 800dc70:	bf38      	it	cc
 800dc72:	3508      	addcc	r5, #8
 800dc74:	f101 0101 	add.w	r1, r1, #1
 800dc78:	bf38      	it	cc
 800dc7a:	6105      	strcc	r5, [r0, #16]
 800dc7c:	6081      	str	r1, [r0, #8]
 800dc7e:	6903      	ldr	r3, [r0, #16]
 800dc80:	f8a3 a000 	strh.w	sl, [r3]
 800dc84:	805a      	strh	r2, [r3, #2]
 800dc86:	809e      	strh	r6, [r3, #4]
 800dc88:	80de      	strh	r6, [r3, #6]
 800dc8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dc8c:	6901      	ldr	r1, [r0, #16]
 800dc8e:	441a      	add	r2, r3
 800dc90:	88cc      	ldrh	r4, [r1, #6]
 800dc92:	888b      	ldrh	r3, [r1, #4]
 800dc94:	4323      	orrs	r3, r4
 800dc96:	d010      	beq.n	800dcba <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dc98:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dc9c:	2c00      	cmp	r4, #0
 800dc9e:	db0c      	blt.n	800dcba <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dca0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800dca2:	429c      	cmp	r4, r3
 800dca4:	da09      	bge.n	800dcba <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dca6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dcaa:	429c      	cmp	r4, r3
 800dcac:	bf38      	it	cc
 800dcae:	3108      	addcc	r1, #8
 800dcb0:	f104 0401 	add.w	r4, r4, #1
 800dcb4:	bf38      	it	cc
 800dcb6:	6101      	strcc	r1, [r0, #16]
 800dcb8:	6084      	str	r4, [r0, #8]
 800dcba:	6903      	ldr	r3, [r0, #16]
 800dcbc:	f8a3 a000 	strh.w	sl, [r3]
 800dcc0:	805a      	strh	r2, [r3, #2]
 800dcc2:	809e      	strh	r6, [r3, #4]
 800dcc4:	80de      	strh	r6, [r3, #6]
 800dcc6:	9b06      	ldr	r3, [sp, #24]
 800dcc8:	4293      	cmp	r3, r2
 800dcca:	464f      	mov	r7, r9
 800dccc:	d19c      	bne.n	800dc08 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800dcce:	9b01      	ldr	r3, [sp, #4]
 800dcd0:	6907      	ldr	r7, [r0, #16]
 800dcd2:	f1c3 0620 	rsb	r6, r3, #32
 800dcd6:	9b05      	ldr	r3, [sp, #20]
 800dcd8:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800dcdc:	9b04      	ldr	r3, [sp, #16]
 800dcde:	429e      	cmp	r6, r3
 800dce0:	f040 81cc 	bne.w	800e07c <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800dce4:	f9b7 3000 	ldrsh.w	r3, [r7]
 800dce8:	459e      	cmp	lr, r3
 800dcea:	d104      	bne.n	800dcf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800dcec:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dcf0:	429a      	cmp	r2, r3
 800dcf2:	f43f ae36 	beq.w	800d962 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dcf6:	88f9      	ldrh	r1, [r7, #6]
 800dcf8:	88bb      	ldrh	r3, [r7, #4]
 800dcfa:	430b      	orrs	r3, r1
 800dcfc:	d010      	beq.n	800dd20 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dcfe:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dd02:	2b00      	cmp	r3, #0
 800dd04:	db0c      	blt.n	800dd20 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dd06:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800dd08:	428b      	cmp	r3, r1
 800dd0a:	da09      	bge.n	800dd20 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dd0c:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dd10:	428b      	cmp	r3, r1
 800dd12:	bf38      	it	cc
 800dd14:	3708      	addcc	r7, #8
 800dd16:	f103 0301 	add.w	r3, r3, #1
 800dd1a:	bf38      	it	cc
 800dd1c:	6107      	strcc	r7, [r0, #16]
 800dd1e:	6083      	str	r3, [r0, #8]
 800dd20:	6903      	ldr	r3, [r0, #16]
 800dd22:	f8a3 e000 	strh.w	lr, [r3]
 800dd26:	e5ff      	b.n	800d928 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800dd28:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800dd2a:	9c03      	ldr	r4, [sp, #12]
 800dd2c:	42a2      	cmp	r2, r4
 800dd2e:	f6ff ae18 	blt.w	800d962 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dd32:	9c06      	ldr	r4, [sp, #24]
 800dd34:	42a2      	cmp	r2, r4
 800dd36:	bfb8      	it	lt
 800dd38:	3201      	addlt	r2, #1
 800dd3a:	9c08      	ldr	r4, [sp, #32]
 800dd3c:	bfb8      	it	lt
 800dd3e:	9206      	strlt	r2, [sp, #24]
 800dd40:	f1c3 0220 	rsb	r2, r3, #32
 800dd44:	4362      	muls	r2, r4
 800dd46:	2401      	movs	r4, #1
 800dd48:	940b      	str	r4, [sp, #44]	; 0x2c
 800dd4a:	2420      	movs	r4, #32
 800dd4c:	e6d5      	b.n	800dafa <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800dd4e:	f009 021f 	and.w	r2, r9, #31
 800dd52:	ea4f 1861 	mov.w	r8, r1, asr #5
 800dd56:	920c      	str	r2, [sp, #48]	; 0x30
 800dd58:	9a01      	ldr	r2, [sp, #4]
 800dd5a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800dd5e:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800dd62:	45b0      	cmp	r8, r6
 800dd64:	f001 011f 	and.w	r1, r1, #31
 800dd68:	eba2 0203 	sub.w	r2, r2, r3
 800dd6c:	d108      	bne.n	800dd80 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800dd6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dd70:	4419      	add	r1, r3
 800dd72:	4496      	add	lr, r2
 800dd74:	fb02 a101 	mla	r1, r2, r1, sl
 800dd78:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dd7c:	80e9      	strh	r1, [r5, #6]
 800dd7e:	e6f9      	b.n	800db74 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800dd80:	2c00      	cmp	r4, #0
 800dd82:	f2c0 80a9 	blt.w	800ded8 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800dd86:	2701      	movs	r7, #1
 800dd88:	f1c1 0c20 	rsb	ip, r1, #32
 800dd8c:	970a      	str	r7, [sp, #40]	; 0x28
 800dd8e:	fb02 f20c 	mul.w	r2, r2, ip
 800dd92:	2720      	movs	r7, #32
 800dd94:	9709      	str	r7, [sp, #36]	; 0x24
 800dd96:	fb92 fcf4 	sdiv	ip, r2, r4
 800dd9a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800dd9c:	fb04 221c 	mls	r2, r4, ip, r2
 800dda0:	2a00      	cmp	r2, #0
 800dda2:	bfb8      	it	lt
 800dda4:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800dda8:	4439      	add	r1, r7
 800ddaa:	fb0c a101 	mla	r1, ip, r1, sl
 800ddae:	80e9      	strh	r1, [r5, #6]
 800ddb0:	44e6      	add	lr, ip
 800ddb2:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ddb4:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ddb8:	eb08 0501 	add.w	r5, r8, r1
 800ddbc:	6901      	ldr	r1, [r0, #16]
 800ddbe:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800ddc2:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800ddc6:	bfb8      	it	lt
 800ddc8:	1912      	addlt	r2, r2, r4
 800ddca:	ea58 070e 	orrs.w	r7, r8, lr
 800ddce:	d010      	beq.n	800ddf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ddd0:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800ddd4:	f1be 0f00 	cmp.w	lr, #0
 800ddd8:	db0b      	blt.n	800ddf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ddda:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800dddc:	45be      	cmp	lr, r7
 800ddde:	da08      	bge.n	800ddf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dde0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800dde4:	45be      	cmp	lr, r7
 800dde6:	bf3c      	itt	cc
 800dde8:	3108      	addcc	r1, #8
 800ddea:	6101      	strcc	r1, [r0, #16]
 800ddec:	f10e 0101 	add.w	r1, lr, #1
 800ddf0:	6081      	str	r1, [r0, #8]
 800ddf2:	6901      	ldr	r1, [r0, #16]
 800ddf4:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800ddf8:	800d      	strh	r5, [r1, #0]
 800ddfa:	f04f 0e00 	mov.w	lr, #0
 800ddfe:	42ae      	cmp	r6, r5
 800de00:	f8a1 8002 	strh.w	r8, [r1, #2]
 800de04:	f8a1 e004 	strh.w	lr, [r1, #4]
 800de08:	f8a1 e006 	strh.w	lr, [r1, #6]
 800de0c:	4463      	add	r3, ip
 800de0e:	d054      	beq.n	800deba <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800de10:	9901      	ldr	r1, [sp, #4]
 800de12:	1ac9      	subs	r1, r1, r3
 800de14:	4461      	add	r1, ip
 800de16:	0149      	lsls	r1, r1, #5
 800de18:	fb91 fef4 	sdiv	lr, r1, r4
 800de1c:	fb04 111e 	mls	r1, r4, lr, r1
 800de20:	2900      	cmp	r1, #0
 800de22:	bfb8      	it	lt
 800de24:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800de28:	f10e 0701 	add.w	r7, lr, #1
 800de2c:	bfb8      	it	lt
 800de2e:	1909      	addlt	r1, r1, r4
 800de30:	1b12      	subs	r2, r2, r4
 800de32:	970d      	str	r7, [sp, #52]	; 0x34
 800de34:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800de38:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800de3a:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800de3e:	1852      	adds	r2, r2, r1
 800de40:	bf54      	ite	pl
 800de42:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800de46:	46f4      	movmi	ip, lr
 800de48:	44e3      	add	fp, ip
 800de4a:	f8aa b004 	strh.w	fp, [sl, #4]
 800de4e:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800de52:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800de56:	f8aa b006 	strh.w	fp, [sl, #6]
 800de5a:	4463      	add	r3, ip
 800de5c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800de60:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800de64:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800de68:	bf58      	it	pl
 800de6a:	1b12      	subpl	r2, r2, r4
 800de6c:	443d      	add	r5, r7
 800de6e:	ea5b 070a 	orrs.w	r7, fp, sl
 800de72:	d014      	beq.n	800de9e <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800de74:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800de78:	f1ba 0f00 	cmp.w	sl, #0
 800de7c:	db0f      	blt.n	800de9e <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800de7e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800de80:	45ba      	cmp	sl, r7
 800de82:	da0c      	bge.n	800de9e <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800de84:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800de88:	45ba      	cmp	sl, r7
 800de8a:	bf38      	it	cc
 800de8c:	f10c 0c08 	addcc.w	ip, ip, #8
 800de90:	f10a 0a01 	add.w	sl, sl, #1
 800de94:	bf38      	it	cc
 800de96:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800de9a:	f8c0 a008 	str.w	sl, [r0, #8]
 800de9e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dea2:	f04f 0700 	mov.w	r7, #0
 800dea6:	42ae      	cmp	r6, r5
 800dea8:	f8ac 5000 	strh.w	r5, [ip]
 800deac:	f8ac 8002 	strh.w	r8, [ip, #2]
 800deb0:	f8ac 7004 	strh.w	r7, [ip, #4]
 800deb4:	f8ac 7006 	strh.w	r7, [ip, #6]
 800deb8:	d1bc      	bne.n	800de34 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800deba:	6904      	ldr	r4, [r0, #16]
 800debc:	9a01      	ldr	r2, [sp, #4]
 800debe:	990c      	ldr	r1, [sp, #48]	; 0x30
 800dec0:	1ad3      	subs	r3, r2, r3
 800dec2:	88a2      	ldrh	r2, [r4, #4]
 800dec4:	441a      	add	r2, r3
 800dec6:	80a2      	strh	r2, [r4, #4]
 800dec8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800deca:	3120      	adds	r1, #32
 800decc:	1a89      	subs	r1, r1, r2
 800dece:	88e2      	ldrh	r2, [r4, #6]
 800ded0:	fb03 2301 	mla	r3, r3, r1, r2
 800ded4:	80e3      	strh	r3, [r4, #6]
 800ded6:	e64d      	b.n	800db74 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ded8:	f04f 37ff 	mov.w	r7, #4294967295
 800dedc:	970a      	str	r7, [sp, #40]	; 0x28
 800dede:	434a      	muls	r2, r1
 800dee0:	4264      	negs	r4, r4
 800dee2:	2700      	movs	r7, #0
 800dee4:	e756      	b.n	800dd94 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800dee6:	ea4f 1867 	mov.w	r8, r7, asr #5
 800deea:	f009 031f 	and.w	r3, r9, #31
 800deee:	45d0      	cmp	r8, sl
 800def0:	f007 071f 	and.w	r7, r7, #31
 800def4:	930f      	str	r3, [sp, #60]	; 0x3c
 800def6:	fa1f fc8c 	uxth.w	ip, ip
 800defa:	fa1f fe8e 	uxth.w	lr, lr
 800defe:	d10a      	bne.n	800df16 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800df00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800df02:	449c      	add	ip, r3
 800df04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800df06:	f8a5 c004 	strh.w	ip, [r5, #4]
 800df0a:	441f      	add	r7, r3
 800df0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800df0e:	fb03 e707 	mla	r7, r3, r7, lr
 800df12:	80ef      	strh	r7, [r5, #6]
 800df14:	e6b9      	b.n	800dc8a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800df16:	2900      	cmp	r1, #0
 800df18:	f2c0 80a8 	blt.w	800e06c <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800df1c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800df1e:	f1c7 0320 	rsb	r3, r7, #32
 800df22:	4363      	muls	r3, r4
 800df24:	2401      	movs	r4, #1
 800df26:	940d      	str	r4, [sp, #52]	; 0x34
 800df28:	2420      	movs	r4, #32
 800df2a:	940c      	str	r4, [sp, #48]	; 0x30
 800df2c:	fb93 f4f1 	sdiv	r4, r3, r1
 800df30:	fb01 3b14 	mls	fp, r1, r4, r3
 800df34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800df36:	f1bb 0f00 	cmp.w	fp, #0
 800df3a:	bfb8      	it	lt
 800df3c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800df40:	441f      	add	r7, r3
 800df42:	fb04 e707 	mla	r7, r4, r7, lr
 800df46:	44a4      	add	ip, r4
 800df48:	f8a5 c004 	strh.w	ip, [r5, #4]
 800df4c:	80ef      	strh	r7, [r5, #6]
 800df4e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800df52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800df54:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800df58:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800df5c:	bfb8      	it	lt
 800df5e:	448b      	addlt	fp, r1
 800df60:	eb08 0503 	add.w	r5, r8, r3
 800df64:	ea5e 0307 	orrs.w	r3, lr, r7
 800df68:	d011      	beq.n	800df8e <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800df6a:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800df6e:	f1be 0f00 	cmp.w	lr, #0
 800df72:	db0c      	blt.n	800df8e <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800df74:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800df76:	45be      	cmp	lr, r7
 800df78:	da09      	bge.n	800df8e <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800df7a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800df7e:	45be      	cmp	lr, r7
 800df80:	bf3c      	itt	cc
 800df82:	f10c 0708 	addcc.w	r7, ip, #8
 800df86:	6107      	strcc	r7, [r0, #16]
 800df88:	f10e 0701 	add.w	r7, lr, #1
 800df8c:	6087      	str	r7, [r0, #8]
 800df8e:	6907      	ldr	r7, [r0, #16]
 800df90:	b213      	sxth	r3, r2
 800df92:	9310      	str	r3, [sp, #64]	; 0x40
 800df94:	807b      	strh	r3, [r7, #2]
 800df96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800df98:	803d      	strh	r5, [r7, #0]
 800df9a:	4555      	cmp	r5, sl
 800df9c:	80be      	strh	r6, [r7, #4]
 800df9e:	80fe      	strh	r6, [r7, #6]
 800dfa0:	eb04 0c03 	add.w	ip, r4, r3
 800dfa4:	d051      	beq.n	800e04a <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800dfa6:	9b01      	ldr	r3, [sp, #4]
 800dfa8:	eba3 070c 	sub.w	r7, r3, ip
 800dfac:	443c      	add	r4, r7
 800dfae:	0164      	lsls	r4, r4, #5
 800dfb0:	fb94 f8f1 	sdiv	r8, r4, r1
 800dfb4:	fb01 4418 	mls	r4, r1, r8, r4
 800dfb8:	2c00      	cmp	r4, #0
 800dfba:	bfb8      	it	lt
 800dfbc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800dfc0:	ebab 0301 	sub.w	r3, fp, r1
 800dfc4:	f108 0701 	add.w	r7, r8, #1
 800dfc8:	bfb8      	it	lt
 800dfca:	1864      	addlt	r4, r4, r1
 800dfcc:	9309      	str	r3, [sp, #36]	; 0x24
 800dfce:	9711      	str	r7, [sp, #68]	; 0x44
 800dfd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dfd2:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800dfd6:	191b      	adds	r3, r3, r4
 800dfd8:	bf58      	it	pl
 800dfda:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800dfdc:	f8be b004 	ldrh.w	fp, [lr, #4]
 800dfe0:	9309      	str	r3, [sp, #36]	; 0x24
 800dfe2:	bf48      	it	mi
 800dfe4:	4647      	movmi	r7, r8
 800dfe6:	44bb      	add	fp, r7
 800dfe8:	f8ae b004 	strh.w	fp, [lr, #4]
 800dfec:	f8be b006 	ldrh.w	fp, [lr, #6]
 800dff0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800dff4:	f8ae b006 	strh.w	fp, [lr, #6]
 800dff8:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800dffc:	44bc      	add	ip, r7
 800dffe:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800e000:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e004:	443d      	add	r5, r7
 800e006:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800e00a:	bf5c      	itt	pl
 800e00c:	1a5b      	subpl	r3, r3, r1
 800e00e:	9309      	strpl	r3, [sp, #36]	; 0x24
 800e010:	ea5b 0307 	orrs.w	r3, fp, r7
 800e014:	d011      	beq.n	800e03a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e016:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800e01a:	f1bb 0f00 	cmp.w	fp, #0
 800e01e:	db0c      	blt.n	800e03a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e020:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e022:	45bb      	cmp	fp, r7
 800e024:	da09      	bge.n	800e03a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e026:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e02a:	45bb      	cmp	fp, r7
 800e02c:	bf3c      	itt	cc
 800e02e:	f10e 0708 	addcc.w	r7, lr, #8
 800e032:	6107      	strcc	r7, [r0, #16]
 800e034:	f10b 0701 	add.w	r7, fp, #1
 800e038:	6087      	str	r7, [r0, #8]
 800e03a:	6907      	ldr	r7, [r0, #16]
 800e03c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e03e:	803d      	strh	r5, [r7, #0]
 800e040:	4555      	cmp	r5, sl
 800e042:	807b      	strh	r3, [r7, #2]
 800e044:	80be      	strh	r6, [r7, #4]
 800e046:	80fe      	strh	r6, [r7, #6]
 800e048:	d1c2      	bne.n	800dfd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800e04a:	9b01      	ldr	r3, [sp, #4]
 800e04c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e04e:	eba3 0c0c 	sub.w	ip, r3, ip
 800e052:	6903      	ldr	r3, [r0, #16]
 800e054:	8899      	ldrh	r1, [r3, #4]
 800e056:	4461      	add	r1, ip
 800e058:	8099      	strh	r1, [r3, #4]
 800e05a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e05c:	3720      	adds	r7, #32
 800e05e:	1a7f      	subs	r7, r7, r1
 800e060:	88d9      	ldrh	r1, [r3, #6]
 800e062:	fb0c 1c07 	mla	ip, ip, r7, r1
 800e066:	f8a3 c006 	strh.w	ip, [r3, #6]
 800e06a:	e60e      	b.n	800dc8a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e06c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e06e:	f04f 34ff 	mov.w	r4, #4294967295
 800e072:	940d      	str	r4, [sp, #52]	; 0x34
 800e074:	437b      	muls	r3, r7
 800e076:	4249      	negs	r1, r1
 800e078:	2400      	movs	r4, #0
 800e07a:	e756      	b.n	800df2a <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800e07c:	9905      	ldr	r1, [sp, #20]
 800e07e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e082:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e086:	f001 011f 	and.w	r1, r1, #31
 800e08a:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e08e:	9102      	str	r1, [sp, #8]
 800e090:	9904      	ldr	r1, [sp, #16]
 800e092:	45f3      	cmp	fp, lr
 800e094:	f009 0c1f 	and.w	ip, r9, #31
 800e098:	eba1 0406 	sub.w	r4, r1, r6
 800e09c:	d108      	bne.n	800e0b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800e09e:	9b02      	ldr	r3, [sp, #8]
 800e0a0:	449c      	add	ip, r3
 800e0a2:	44a0      	add	r8, r4
 800e0a4:	fb04 a40c 	mla	r4, r4, ip, sl
 800e0a8:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e0ac:	80fc      	strh	r4, [r7, #6]
 800e0ae:	e458      	b.n	800d962 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e0b0:	9905      	ldr	r1, [sp, #20]
 800e0b2:	ebb1 0109 	subs.w	r1, r1, r9
 800e0b6:	bf5b      	ittet	pl
 800e0b8:	f1cc 0520 	rsbpl	r5, ip, #32
 800e0bc:	436c      	mulpl	r4, r5
 800e0be:	2500      	movmi	r5, #0
 800e0c0:	2520      	movpl	r5, #32
 800e0c2:	bf44      	itt	mi
 800e0c4:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e0c8:	4249      	negmi	r1, r1
 800e0ca:	9501      	str	r5, [sp, #4]
 800e0cc:	9b01      	ldr	r3, [sp, #4]
 800e0ce:	fb94 f5f1 	sdiv	r5, r4, r1
 800e0d2:	fb01 4415 	mls	r4, r1, r5, r4
 800e0d6:	bf54      	ite	pl
 800e0d8:	f04f 0901 	movpl.w	r9, #1
 800e0dc:	f04f 39ff 	movmi.w	r9, #4294967295
 800e0e0:	2c00      	cmp	r4, #0
 800e0e2:	bfb8      	it	lt
 800e0e4:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e0e8:	449c      	add	ip, r3
 800e0ea:	44a8      	add	r8, r5
 800e0ec:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e0f0:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e0f4:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e0f8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e0fc:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e100:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e104:	bfb8      	it	lt
 800e106:	1864      	addlt	r4, r4, r1
 800e108:	ea58 0707 	orrs.w	r7, r8, r7
 800e10c:	eb0b 0309 	add.w	r3, fp, r9
 800e110:	d011      	beq.n	800e136 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e112:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e116:	f1b8 0f00 	cmp.w	r8, #0
 800e11a:	db0c      	blt.n	800e136 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e11c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e11e:	45b8      	cmp	r8, r7
 800e120:	da09      	bge.n	800e136 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e122:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e126:	45b8      	cmp	r8, r7
 800e128:	bf3c      	itt	cc
 800e12a:	f10c 0708 	addcc.w	r7, ip, #8
 800e12e:	6107      	strcc	r7, [r0, #16]
 800e130:	f108 0701 	add.w	r7, r8, #1
 800e134:	6087      	str	r7, [r0, #8]
 800e136:	6907      	ldr	r7, [r0, #16]
 800e138:	f04f 0c00 	mov.w	ip, #0
 800e13c:	b212      	sxth	r2, r2
 800e13e:	459e      	cmp	lr, r3
 800e140:	803b      	strh	r3, [r7, #0]
 800e142:	807a      	strh	r2, [r7, #2]
 800e144:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e148:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e14c:	442e      	add	r6, r5
 800e14e:	d04d      	beq.n	800e1ec <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800e150:	9f04      	ldr	r7, [sp, #16]
 800e152:	1bbf      	subs	r7, r7, r6
 800e154:	443d      	add	r5, r7
 800e156:	016d      	lsls	r5, r5, #5
 800e158:	fb95 f8f1 	sdiv	r8, r5, r1
 800e15c:	fb01 5518 	mls	r5, r1, r8, r5
 800e160:	4565      	cmp	r5, ip
 800e162:	bfb8      	it	lt
 800e164:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e168:	f108 0701 	add.w	r7, r8, #1
 800e16c:	bfb8      	it	lt
 800e16e:	186d      	addlt	r5, r5, r1
 800e170:	1a64      	subs	r4, r4, r1
 800e172:	9703      	str	r7, [sp, #12]
 800e174:	f04f 0a00 	mov.w	sl, #0
 800e178:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e17c:	1964      	adds	r4, r4, r5
 800e17e:	bf58      	it	pl
 800e180:	9f03      	ldrpl	r7, [sp, #12]
 800e182:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e186:	bf48      	it	mi
 800e188:	4647      	movmi	r7, r8
 800e18a:	44bb      	add	fp, r7
 800e18c:	f8ac b004 	strh.w	fp, [ip, #4]
 800e190:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e194:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e198:	f8ac b006 	strh.w	fp, [ip, #6]
 800e19c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e1a0:	443e      	add	r6, r7
 800e1a2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e1a6:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e1aa:	bf58      	it	pl
 800e1ac:	1a64      	subpl	r4, r4, r1
 800e1ae:	ea5b 0707 	orrs.w	r7, fp, r7
 800e1b2:	444b      	add	r3, r9
 800e1b4:	d011      	beq.n	800e1da <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e1b6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e1ba:	f1bb 0f00 	cmp.w	fp, #0
 800e1be:	db0c      	blt.n	800e1da <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e1c0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e1c2:	45bb      	cmp	fp, r7
 800e1c4:	da09      	bge.n	800e1da <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e1c6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e1ca:	45bb      	cmp	fp, r7
 800e1cc:	bf3c      	itt	cc
 800e1ce:	f10c 0708 	addcc.w	r7, ip, #8
 800e1d2:	6107      	strcc	r7, [r0, #16]
 800e1d4:	f10b 0701 	add.w	r7, fp, #1
 800e1d8:	6087      	str	r7, [r0, #8]
 800e1da:	6907      	ldr	r7, [r0, #16]
 800e1dc:	459e      	cmp	lr, r3
 800e1de:	803b      	strh	r3, [r7, #0]
 800e1e0:	807a      	strh	r2, [r7, #2]
 800e1e2:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e1e6:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e1ea:	d1c5      	bne.n	800e178 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800e1ec:	9b04      	ldr	r3, [sp, #16]
 800e1ee:	1b9e      	subs	r6, r3, r6
 800e1f0:	6903      	ldr	r3, [r0, #16]
 800e1f2:	889a      	ldrh	r2, [r3, #4]
 800e1f4:	4432      	add	r2, r6
 800e1f6:	809a      	strh	r2, [r3, #4]
 800e1f8:	9a02      	ldr	r2, [sp, #8]
 800e1fa:	f102 0c20 	add.w	ip, r2, #32
 800e1fe:	9a01      	ldr	r2, [sp, #4]
 800e200:	ebac 0c02 	sub.w	ip, ip, r2
 800e204:	88da      	ldrh	r2, [r3, #6]
 800e206:	fb06 260c 	mla	r6, r6, ip, r2
 800e20a:	80de      	strh	r6, [r3, #6]
 800e20c:	f7ff bba9 	b.w	800d962 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800e210 <_ZN8touchgfx7Outline6lineToEii>:
 800e210:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e212:	079b      	lsls	r3, r3, #30
 800e214:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e216:	460e      	mov	r6, r1
 800e218:	4615      	mov	r5, r2
 800e21a:	d511      	bpl.n	800e240 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e21c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e220:	ea86 0701 	eor.w	r7, r6, r1
 800e224:	ea85 0302 	eor.w	r3, r5, r2
 800e228:	433b      	orrs	r3, r7
 800e22a:	d009      	beq.n	800e240 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e22c:	4633      	mov	r3, r6
 800e22e:	9500      	str	r5, [sp, #0]
 800e230:	f7ff fb3e 	bl	800d8b0 <_ZN8touchgfx7Outline10renderLineEiiii>
 800e234:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e236:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e23a:	f043 0301 	orr.w	r3, r3, #1
 800e23e:	6243      	str	r3, [r0, #36]	; 0x24
 800e240:	b003      	add	sp, #12
 800e242:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e244 <_ZN8touchgfx7Outline6moveToEii>:
 800e244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e246:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e248:	4615      	mov	r5, r2
 800e24a:	079a      	lsls	r2, r3, #30
 800e24c:	4604      	mov	r4, r0
 800e24e:	460e      	mov	r6, r1
 800e250:	d401      	bmi.n	800e256 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e252:	f7ff faf9 	bl	800d848 <_ZN8touchgfx7Outline5resetEv>
 800e256:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e258:	07db      	lsls	r3, r3, #31
 800e25a:	d504      	bpl.n	800e266 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e25c:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e260:	4620      	mov	r0, r4
 800e262:	f7ff ffd5 	bl	800e210 <_ZN8touchgfx7Outline6lineToEii>
 800e266:	6923      	ldr	r3, [r4, #16]
 800e268:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e26c:	1170      	asrs	r0, r6, #5
 800e26e:	4290      	cmp	r0, r2
 800e270:	ea4f 1165 	mov.w	r1, r5, asr #5
 800e274:	d103      	bne.n	800e27e <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800e276:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e27a:	4291      	cmp	r1, r2
 800e27c:	d01a      	beq.n	800e2b4 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800e27e:	88df      	ldrh	r7, [r3, #6]
 800e280:	889a      	ldrh	r2, [r3, #4]
 800e282:	433a      	orrs	r2, r7
 800e284:	d010      	beq.n	800e2a8 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e286:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e28a:	2a00      	cmp	r2, #0
 800e28c:	db0c      	blt.n	800e2a8 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e28e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800e290:	42ba      	cmp	r2, r7
 800e292:	da09      	bge.n	800e2a8 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e294:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e298:	42ba      	cmp	r2, r7
 800e29a:	bf38      	it	cc
 800e29c:	3308      	addcc	r3, #8
 800e29e:	f102 0201 	add.w	r2, r2, #1
 800e2a2:	bf38      	it	cc
 800e2a4:	6123      	strcc	r3, [r4, #16]
 800e2a6:	60a2      	str	r2, [r4, #8]
 800e2a8:	6923      	ldr	r3, [r4, #16]
 800e2aa:	2200      	movs	r2, #0
 800e2ac:	8018      	strh	r0, [r3, #0]
 800e2ae:	8059      	strh	r1, [r3, #2]
 800e2b0:	809a      	strh	r2, [r3, #4]
 800e2b2:	80da      	strh	r2, [r3, #6]
 800e2b4:	6166      	str	r6, [r4, #20]
 800e2b6:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e2ba:	6225      	str	r5, [r4, #32]
 800e2bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e2be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e2be:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e2c2:	b0d0      	sub	sp, #320	; 0x140
 800e2c4:	466c      	mov	r4, sp
 800e2c6:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e2ca:	4627      	mov	r7, r4
 800e2cc:	1a0d      	subs	r5, r1, r0
 800e2ce:	2d48      	cmp	r5, #72	; 0x48
 800e2d0:	f100 0308 	add.w	r3, r0, #8
 800e2d4:	f340 80d5 	ble.w	800e482 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e2d8:	112d      	asrs	r5, r5, #4
 800e2da:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e2de:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e2e2:	6816      	ldr	r6, [r2, #0]
 800e2e4:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e2e8:	6006      	str	r6, [r0, #0]
 800e2ea:	6856      	ldr	r6, [r2, #4]
 800e2ec:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e2f0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e2f4:	6046      	str	r6, [r0, #4]
 800e2f6:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e2fa:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e2fe:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e302:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e306:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e30a:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e30e:	4565      	cmp	r5, ip
 800e310:	f1a1 0208 	sub.w	r2, r1, #8
 800e314:	db06      	blt.n	800e324 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e316:	d119      	bne.n	800e34c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e318:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e31c:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e320:	42ae      	cmp	r6, r5
 800e322:	dd13      	ble.n	800e34c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e324:	460e      	mov	r6, r1
 800e326:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e32a:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e32e:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e332:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e336:	601d      	str	r5, [r3, #0]
 800e338:	6875      	ldr	r5, [r6, #4]
 800e33a:	605d      	str	r5, [r3, #4]
 800e33c:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e340:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e344:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e348:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e34c:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e350:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e354:	42ae      	cmp	r6, r5
 800e356:	db06      	blt.n	800e366 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e358:	d116      	bne.n	800e388 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e35a:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e35e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e362:	45ac      	cmp	ip, r5
 800e364:	da10      	bge.n	800e388 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e366:	681d      	ldr	r5, [r3, #0]
 800e368:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e36c:	6005      	str	r5, [r0, #0]
 800e36e:	685d      	ldr	r5, [r3, #4]
 800e370:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e374:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e378:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e37c:	6045      	str	r5, [r0, #4]
 800e37e:	8146      	strh	r6, [r0, #10]
 800e380:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e384:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e388:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e38c:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e390:	4565      	cmp	r5, ip
 800e392:	db06      	blt.n	800e3a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e394:	d119      	bne.n	800e3ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e396:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e39a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e39e:	42ae      	cmp	r6, r5
 800e3a0:	da13      	bge.n	800e3ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e3a2:	460e      	mov	r6, r1
 800e3a4:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e3a8:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e3ac:	6005      	str	r5, [r0, #0]
 800e3ae:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e3b2:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e3b6:	6875      	ldr	r5, [r6, #4]
 800e3b8:	6045      	str	r5, [r0, #4]
 800e3ba:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e3be:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e3c2:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e3c6:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e3ca:	3308      	adds	r3, #8
 800e3cc:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e3d0:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e3d4:	45e6      	cmp	lr, ip
 800e3d6:	dbf8      	blt.n	800e3ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e3d8:	d105      	bne.n	800e3e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e3da:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e3de:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e3e2:	42ae      	cmp	r6, r5
 800e3e4:	dbf1      	blt.n	800e3ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e3e6:	4615      	mov	r5, r2
 800e3e8:	3a08      	subs	r2, #8
 800e3ea:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e3ee:	45b4      	cmp	ip, r6
 800e3f0:	dbf9      	blt.n	800e3e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e3f2:	d105      	bne.n	800e400 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e3f4:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e3f8:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e3fc:	45b0      	cmp	r8, r6
 800e3fe:	dbf2      	blt.n	800e3e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e400:	4293      	cmp	r3, r2
 800e402:	f1a5 0608 	sub.w	r6, r5, #8
 800e406:	d816      	bhi.n	800e436 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e408:	f8d6 c000 	ldr.w	ip, [r6]
 800e40c:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e410:	f8c3 c000 	str.w	ip, [r3]
 800e414:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e418:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e41c:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e420:	f8c3 c004 	str.w	ip, [r3, #4]
 800e424:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e428:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e42c:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e430:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e434:	e7c9      	b.n	800e3ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e436:	f8d6 e000 	ldr.w	lr, [r6]
 800e43a:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e43e:	f8c0 e000 	str.w	lr, [r0]
 800e442:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e446:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e44a:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e44e:	f8c0 e004 	str.w	lr, [r0, #4]
 800e452:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e456:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e45a:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e45e:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e462:	1acd      	subs	r5, r1, r3
 800e464:	1a16      	subs	r6, r2, r0
 800e466:	10ed      	asrs	r5, r5, #3
 800e468:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e46c:	bfb5      	itete	lt
 800e46e:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e472:	e9c4 3100 	strdge	r3, r1, [r4]
 800e476:	460a      	movlt	r2, r1
 800e478:	4603      	movge	r3, r0
 800e47a:	3408      	adds	r4, #8
 800e47c:	4618      	mov	r0, r3
 800e47e:	4611      	mov	r1, r2
 800e480:	e724      	b.n	800e2cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e482:	4299      	cmp	r1, r3
 800e484:	d928      	bls.n	800e4d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800e486:	f1a3 0210 	sub.w	r2, r3, #16
 800e48a:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e48e:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e492:	45ac      	cmp	ip, r5
 800e494:	db06      	blt.n	800e4a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e496:	d11d      	bne.n	800e4d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e498:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e49c:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e4a0:	42ae      	cmp	r6, r5
 800e4a2:	da17      	bge.n	800e4d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e4a4:	4615      	mov	r5, r2
 800e4a6:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e4aa:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e4ae:	6116      	str	r6, [r2, #16]
 800e4b0:	686e      	ldr	r6, [r5, #4]
 800e4b2:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e4b6:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800e4ba:	f8a2 9008 	strh.w	r9, [r2, #8]
 800e4be:	42a8      	cmp	r0, r5
 800e4c0:	6156      	str	r6, [r2, #20]
 800e4c2:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800e4c6:	f8a2 800c 	strh.w	r8, [r2, #12]
 800e4ca:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800e4ce:	f1a2 0208 	sub.w	r2, r2, #8
 800e4d2:	d1da      	bne.n	800e48a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e4d4:	3308      	adds	r3, #8
 800e4d6:	e7d4      	b.n	800e482 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e4d8:	42bc      	cmp	r4, r7
 800e4da:	d903      	bls.n	800e4e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800e4dc:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e4e0:	3c08      	subs	r4, #8
 800e4e2:	e6f3      	b.n	800e2cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e4e4:	b050      	add	sp, #320	; 0x140
 800e4e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e4ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e4ea:	b510      	push	{r4, lr}
 800e4ec:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e4ee:	07da      	lsls	r2, r3, #31
 800e4f0:	4604      	mov	r4, r0
 800e4f2:	d507      	bpl.n	800e504 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e4f4:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e4f8:	f7ff fe8a 	bl	800e210 <_ZN8touchgfx7Outline6lineToEii>
 800e4fc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e4fe:	f023 0301 	bic.w	r3, r3, #1
 800e502:	6243      	str	r3, [r0, #36]	; 0x24
 800e504:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e506:	079b      	lsls	r3, r3, #30
 800e508:	d521      	bpl.n	800e54e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e50a:	6923      	ldr	r3, [r4, #16]
 800e50c:	88d9      	ldrh	r1, [r3, #6]
 800e50e:	889a      	ldrh	r2, [r3, #4]
 800e510:	430a      	orrs	r2, r1
 800e512:	d010      	beq.n	800e536 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e514:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e518:	2a00      	cmp	r2, #0
 800e51a:	db0c      	blt.n	800e536 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e51c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e51e:	428a      	cmp	r2, r1
 800e520:	da09      	bge.n	800e536 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e522:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e526:	4291      	cmp	r1, r2
 800e528:	bf88      	it	hi
 800e52a:	3308      	addhi	r3, #8
 800e52c:	f102 0201 	add.w	r2, r2, #1
 800e530:	bf88      	it	hi
 800e532:	6123      	strhi	r3, [r4, #16]
 800e534:	60a2      	str	r2, [r4, #8]
 800e536:	68a1      	ldr	r1, [r4, #8]
 800e538:	b129      	cbz	r1, 800e546 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e53a:	6863      	ldr	r3, [r4, #4]
 800e53c:	4299      	cmp	r1, r3
 800e53e:	d802      	bhi.n	800e546 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e540:	68e0      	ldr	r0, [r4, #12]
 800e542:	f7ff febc 	bl	800e2be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e546:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e548:	f023 0302 	bic.w	r3, r3, #2
 800e54c:	6263      	str	r3, [r4, #36]	; 0x24
 800e54e:	68e0      	ldr	r0, [r4, #12]
 800e550:	bd10      	pop	{r4, pc}
	...

0800e554 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e554:	4b02      	ldr	r3, [pc, #8]	; (800e560 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e556:	6018      	str	r0, [r3, #0]
 800e558:	4b02      	ldr	r3, [pc, #8]	; (800e564 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e55a:	6019      	str	r1, [r3, #0]
 800e55c:	4770      	bx	lr
 800e55e:	bf00      	nop
 800e560:	2001756c 	.word	0x2001756c
 800e564:	20017570 	.word	0x20017570

0800e568 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e568:	4b01      	ldr	r3, [pc, #4]	; (800e570 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e56a:	6818      	ldr	r0, [r3, #0]
 800e56c:	4770      	bx	lr
 800e56e:	bf00      	nop
 800e570:	2001756c 	.word	0x2001756c

0800e574 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e574:	4b01      	ldr	r3, [pc, #4]	; (800e57c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e576:	6818      	ldr	r0, [r3, #0]
 800e578:	4770      	bx	lr
 800e57a:	bf00      	nop
 800e57c:	20017570 	.word	0x20017570

0800e580 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e580:	b510      	push	{r4, lr}
 800e582:	6803      	ldr	r3, [r0, #0]
 800e584:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e586:	460c      	mov	r4, r1
 800e588:	4798      	blx	r3
 800e58a:	1b03      	subs	r3, r0, r4
 800e58c:	4258      	negs	r0, r3
 800e58e:	4158      	adcs	r0, r3
 800e590:	bd10      	pop	{r4, pc}
	...

0800e594 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e594:	4b01      	ldr	r3, [pc, #4]	; (800e59c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e596:	6019      	str	r1, [r3, #0]
 800e598:	4770      	bx	lr
 800e59a:	bf00      	nop
 800e59c:	20017574 	.word	0x20017574

0800e5a0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5a4:	4696      	mov	lr, r2
 800e5a6:	4605      	mov	r5, r0
 800e5a8:	4614      	mov	r4, r2
 800e5aa:	460e      	mov	r6, r1
 800e5ac:	461f      	mov	r7, r3
 800e5ae:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e5b2:	b097      	sub	sp, #92	; 0x5c
 800e5b4:	f10d 0c1c 	add.w	ip, sp, #28
 800e5b8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5bc:	f8de 3000 	ldr.w	r3, [lr]
 800e5c0:	f8cc 3000 	str.w	r3, [ip]
 800e5c4:	f104 0e14 	add.w	lr, r4, #20
 800e5c8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e5cc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e5d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5d4:	f8de 3000 	ldr.w	r3, [lr]
 800e5d8:	f8cc 3000 	str.w	r3, [ip]
 800e5dc:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e5e0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e5e4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e5e8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5ec:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800e5f0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800e5f4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800e5f8:	f8de 3000 	ldr.w	r3, [lr]
 800e5fc:	f8cc 3000 	str.w	r3, [ip]
 800e600:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e602:	682b      	ldr	r3, [r5, #0]
 800e604:	9201      	str	r2, [sp, #4]
 800e606:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e60a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e60c:	9200      	str	r2, [sp, #0]
 800e60e:	f8cd 8008 	str.w	r8, [sp, #8]
 800e612:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800e616:	aa07      	add	r2, sp, #28
 800e618:	463b      	mov	r3, r7
 800e61a:	4631      	mov	r1, r6
 800e61c:	4628      	mov	r0, r5
 800e61e:	47d8      	blx	fp
 800e620:	46a6      	mov	lr, r4
 800e622:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e626:	f10d 0c1c 	add.w	ip, sp, #28
 800e62a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e62e:	f8de 3000 	ldr.w	r3, [lr]
 800e632:	f8cc 3000 	str.w	r3, [ip]
 800e636:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e63a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e63e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e642:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e646:	343c      	adds	r4, #60	; 0x3c
 800e648:	f8de 3000 	ldr.w	r3, [lr]
 800e64c:	f8cc 3000 	str.w	r3, [ip]
 800e650:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e652:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e656:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e65a:	6823      	ldr	r3, [r4, #0]
 800e65c:	f8cc 3000 	str.w	r3, [ip]
 800e660:	682b      	ldr	r3, [r5, #0]
 800e662:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e666:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e668:	9201      	str	r2, [sp, #4]
 800e66a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e66c:	9200      	str	r2, [sp, #0]
 800e66e:	f8cd 8008 	str.w	r8, [sp, #8]
 800e672:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800e674:	aa07      	add	r2, sp, #28
 800e676:	463b      	mov	r3, r7
 800e678:	4631      	mov	r1, r6
 800e67a:	4628      	mov	r0, r5
 800e67c:	47a0      	blx	r4
 800e67e:	b017      	add	sp, #92	; 0x5c
 800e680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e684 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e688:	b08d      	sub	sp, #52	; 0x34
 800e68a:	4688      	mov	r8, r1
 800e68c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800e68e:	f8d3 c000 	ldr.w	ip, [r3]
 800e692:	680f      	ldr	r7, [r1, #0]
 800e694:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800e698:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800e69c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800e6a0:	edd3 6a07 	vldr	s13, [r3, #28]
 800e6a4:	9918      	ldr	r1, [sp, #96]	; 0x60
 800e6a6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800e6aa:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e6ae:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e6b2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800e6b6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800e6ba:	eba7 070c 	sub.w	r7, r7, ip
 800e6be:	42bc      	cmp	r4, r7
 800e6c0:	bfa8      	it	ge
 800e6c2:	463c      	movge	r4, r7
 800e6c4:	ee07 4a90 	vmov	s15, r4
 800e6c8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e6cc:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800e6d0:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e6d4:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e6d8:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e6dc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800e6e0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e6e4:	eb09 0e0c 	add.w	lr, r9, ip
 800e6e8:	4571      	cmp	r1, lr
 800e6ea:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e6ee:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e6f2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e6f6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e6fa:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e6fe:	f340 808d 	ble.w	800e81c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800e702:	eba1 060e 	sub.w	r6, r1, lr
 800e706:	fb96 f5f4 	sdiv	r5, r6, r4
 800e70a:	ee07 5a10 	vmov	s14, r5
 800e70e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e712:	2d00      	cmp	r5, #0
 800e714:	fb04 6615 	mls	r6, r4, r5, r6
 800e718:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e71c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e720:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e724:	dd13      	ble.n	800e74e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800e726:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e72a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e72e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e736:	bf18      	it	ne
 800e738:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e73c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e740:	bf08      	it	eq
 800e742:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e746:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e74a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e74e:	fb05 f204 	mul.w	r2, r5, r4
 800e752:	1abf      	subs	r7, r7, r2
 800e754:	4494      	add	ip, r2
 800e756:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e75a:	4411      	add	r1, r2
 800e75c:	eb09 020c 	add.w	r2, r9, ip
 800e760:	443a      	add	r2, r7
 800e762:	b209      	sxth	r1, r1
 800e764:	428a      	cmp	r2, r1
 800e766:	bfc4      	itt	gt
 800e768:	eba1 0209 	subgt.w	r2, r1, r9
 800e76c:	eba2 070c 	subgt.w	r7, r2, ip
 800e770:	2f00      	cmp	r7, #0
 800e772:	dd50      	ble.n	800e816 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800e774:	fb97 f1f4 	sdiv	r1, r7, r4
 800e778:	fb04 7211 	mls	r2, r4, r1, r7
 800e77c:	b90a      	cbnz	r2, 800e782 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800e77e:	3901      	subs	r1, #1
 800e780:	4622      	mov	r2, r4
 800e782:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e786:	6840      	ldr	r0, [r0, #4]
 800e788:	900b      	str	r0, [sp, #44]	; 0x2c
 800e78a:	f8d0 a000 	ldr.w	sl, [r0]
 800e78e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800e790:	9008      	str	r0, [sp, #32]
 800e792:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800e796:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e798:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800e79c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e7a0:	695b      	ldr	r3, [r3, #20]
 800e7a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e7a4:	445b      	add	r3, fp
 800e7a6:	eef0 6a42 	vmov.f32	s13, s4
 800e7aa:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e7ae:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e7b2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e7b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e7ba:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e7be:	9307      	str	r3, [sp, #28]
 800e7c0:	ee17 7a90 	vmov	r7, s15
 800e7c4:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e7c8:	eeb0 7a61 	vmov.f32	s14, s3
 800e7cc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e7d0:	ee16 3a90 	vmov	r3, s13
 800e7d4:	fb97 f7f4 	sdiv	r7, r7, r4
 800e7d8:	ee17 ca90 	vmov	ip, s15
 800e7dc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e7e0:	fb9c fcf4 	sdiv	ip, ip, r4
 800e7e4:	fb0c 3306 	mla	r3, ip, r6, r3
 800e7e8:	9302      	str	r3, [sp, #8]
 800e7ea:	ee17 3a10 	vmov	r3, s14
 800e7ee:	44b6      	add	lr, r6
 800e7f0:	fb04 e505 	mla	r5, r4, r5, lr
 800e7f4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e7f8:	fb07 3706 	mla	r7, r7, r6, r3
 800e7fc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e800:	e9cd 4700 	strd	r4, r7, [sp]
 800e804:	2900      	cmp	r1, #0
 800e806:	bfcc      	ite	gt
 800e808:	46a1      	movgt	r9, r4
 800e80a:	4691      	movle	r9, r2
 800e80c:	eba9 0306 	sub.w	r3, r9, r6
 800e810:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e814:	47a0      	blx	r4
 800e816:	b00d      	add	sp, #52	; 0x34
 800e818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e81c:	2500      	movs	r5, #0
 800e81e:	462e      	mov	r6, r5
 800e820:	e799      	b.n	800e756 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800e824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e828:	b0db      	sub	sp, #364	; 0x16c
 800e82a:	461d      	mov	r5, r3
 800e82c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800e830:	930a      	str	r3, [sp, #40]	; 0x28
 800e832:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800e836:	930b      	str	r3, [sp, #44]	; 0x2c
 800e838:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800e83c:	9310      	str	r3, [sp, #64]	; 0x40
 800e83e:	6803      	ldr	r3, [r0, #0]
 800e840:	910f      	str	r1, [sp, #60]	; 0x3c
 800e842:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800e844:	9009      	str	r0, [sp, #36]	; 0x24
 800e846:	4614      	mov	r4, r2
 800e848:	4629      	mov	r1, r5
 800e84a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800e84e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800e852:	47b8      	blx	r7
 800e854:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e856:	6058      	str	r0, [r3, #4]
 800e858:	2800      	cmp	r0, #0
 800e85a:	f000 83a1 	beq.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e85e:	682b      	ldr	r3, [r5, #0]
 800e860:	9314      	str	r3, [sp, #80]	; 0x50
 800e862:	686b      	ldr	r3, [r5, #4]
 800e864:	9315      	str	r3, [sp, #84]	; 0x54
 800e866:	4bc4      	ldr	r3, [pc, #784]	; (800eb78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e868:	ed94 7a02 	vldr	s14, [r4, #8]
 800e86c:	7819      	ldrb	r1, [r3, #0]
 800e86e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e872:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800e876:	2900      	cmp	r1, #0
 800e878:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e87c:	bf16      	itet	ne
 800e87e:	4619      	movne	r1, r3
 800e880:	4611      	moveq	r1, r2
 800e882:	4613      	movne	r3, r2
 800e884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e888:	9116      	str	r1, [sp, #88]	; 0x58
 800e88a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800e88e:	f240 8387 	bls.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e892:	ed94 7a07 	vldr	s14, [r4, #28]
 800e896:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e89a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e89e:	f240 837f 	bls.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e8a2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800e8a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e8aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e8ae:	f240 8377 	bls.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e8b2:	6822      	ldr	r2, [r4, #0]
 800e8b4:	4bb1      	ldr	r3, [pc, #708]	; (800eb7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e8b6:	429a      	cmp	r2, r3
 800e8b8:	f2c0 8372 	blt.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e8bc:	49b0      	ldr	r1, [pc, #704]	; (800eb80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e8be:	6963      	ldr	r3, [r4, #20]
 800e8c0:	428a      	cmp	r2, r1
 800e8c2:	f300 836d 	bgt.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e8c6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800e8ca:	48ae      	ldr	r0, [pc, #696]	; (800eb84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e8cc:	33ff      	adds	r3, #255	; 0xff
 800e8ce:	4283      	cmp	r3, r0
 800e8d0:	f200 8366 	bhi.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e8d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e8d6:	4dac      	ldr	r5, [pc, #688]	; (800eb88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e8d8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800e8dc:	33ff      	adds	r3, #255	; 0xff
 800e8de:	42ab      	cmp	r3, r5
 800e8e0:	f200 835e 	bhi.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e8e4:	6862      	ldr	r2, [r4, #4]
 800e8e6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800e8ea:	33ff      	adds	r3, #255	; 0xff
 800e8ec:	4283      	cmp	r3, r0
 800e8ee:	f200 8357 	bhi.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e8f2:	69a1      	ldr	r1, [r4, #24]
 800e8f4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800e8f8:	33ff      	adds	r3, #255	; 0xff
 800e8fa:	4283      	cmp	r3, r0
 800e8fc:	f200 8350 	bhi.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e900:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e902:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800e906:	30ff      	adds	r0, #255	; 0xff
 800e908:	42a8      	cmp	r0, r5
 800e90a:	f200 8349 	bhi.w	800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e90e:	428a      	cmp	r2, r1
 800e910:	f280 8110 	bge.w	800eb34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800e914:	429a      	cmp	r2, r3
 800e916:	f300 8119 	bgt.w	800eb4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800e91a:	4299      	cmp	r1, r3
 800e91c:	f280 811d 	bge.w	800eb5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800e920:	2502      	movs	r5, #2
 800e922:	2701      	movs	r7, #1
 800e924:	46a9      	mov	r9, r5
 800e926:	46b8      	mov	r8, r7
 800e928:	f04f 0a00 	mov.w	sl, #0
 800e92c:	4621      	mov	r1, r4
 800e92e:	a849      	add	r0, sp, #292	; 0x124
 800e930:	f003 fcfe 	bl	8012330 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800e934:	4622      	mov	r2, r4
 800e936:	4653      	mov	r3, sl
 800e938:	a949      	add	r1, sp, #292	; 0x124
 800e93a:	f8cd 9000 	str.w	r9, [sp]
 800e93e:	a819      	add	r0, sp, #100	; 0x64
 800e940:	f003 fe26 	bl	8012590 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e944:	4622      	mov	r2, r4
 800e946:	4653      	mov	r3, sl
 800e948:	a949      	add	r1, sp, #292	; 0x124
 800e94a:	f8cd 8000 	str.w	r8, [sp]
 800e94e:	a829      	add	r0, sp, #164	; 0xa4
 800e950:	f003 fe1e 	bl	8012590 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e954:	4643      	mov	r3, r8
 800e956:	4622      	mov	r2, r4
 800e958:	a949      	add	r1, sp, #292	; 0x124
 800e95a:	f8cd 9000 	str.w	r9, [sp]
 800e95e:	a839      	add	r0, sp, #228	; 0xe4
 800e960:	f003 fe16 	bl	8012590 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e964:	42af      	cmp	r7, r5
 800e966:	bfb5      	itete	lt
 800e968:	2300      	movlt	r3, #0
 800e96a:	2301      	movge	r3, #1
 800e96c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800e96e:	930e      	strge	r3, [sp, #56]	; 0x38
 800e970:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e972:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e976:	af12      	add	r7, sp, #72	; 0x48
 800e978:	bfb9      	ittee	lt
 800e97a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800e97c:	ac19      	addlt	r4, sp, #100	; 0x64
 800e97e:	ad19      	addge	r5, sp, #100	; 0x64
 800e980:	ac29      	addge	r4, sp, #164	; 0xa4
 800e982:	e887 0003 	stmia.w	r7, {r0, r1}
 800e986:	b928      	cbnz	r0, 800e994 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800e988:	4b80      	ldr	r3, [pc, #512]	; (800eb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800e98a:	6818      	ldr	r0, [r3, #0]
 800e98c:	6803      	ldr	r3, [r0, #0]
 800e98e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e990:	4798      	blx	r3
 800e992:	6038      	str	r0, [r7, #0]
 800e994:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e996:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e99a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e99e:	930c      	str	r3, [sp, #48]	; 0x30
 800e9a0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e9a2:	6963      	ldr	r3, [r4, #20]
 800e9a4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800e9a6:	440b      	add	r3, r1
 800e9a8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e9ac:	4408      	add	r0, r1
 800e9ae:	b200      	sxth	r0, r0
 800e9b0:	4283      	cmp	r3, r0
 800e9b2:	900d      	str	r0, [sp, #52]	; 0x34
 800e9b4:	f280 80dd 	bge.w	800eb72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800e9b8:	428b      	cmp	r3, r1
 800e9ba:	da08      	bge.n	800e9ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e9bc:	2a00      	cmp	r2, #0
 800e9be:	dd06      	ble.n	800e9ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e9c0:	1acb      	subs	r3, r1, r3
 800e9c2:	429a      	cmp	r2, r3
 800e9c4:	f2c0 80e4 	blt.w	800eb90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800e9c8:	2b00      	cmp	r3, #0
 800e9ca:	f300 80e2 	bgt.w	800eb92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800e9ce:	6967      	ldr	r7, [r4, #20]
 800e9d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e9d2:	443b      	add	r3, r7
 800e9d4:	461f      	mov	r7, r3
 800e9d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e9d8:	1bdf      	subs	r7, r3, r7
 800e9da:	4297      	cmp	r7, r2
 800e9dc:	bfa8      	it	ge
 800e9de:	4617      	movge	r7, r2
 800e9e0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800e9e4:	2f00      	cmp	r7, #0
 800e9e6:	f340 8166 	ble.w	800ecb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800e9ea:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e9ec:	6829      	ldr	r1, [r5, #0]
 800e9ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e9f2:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e9f6:	6820      	ldr	r0, [r4, #0]
 800e9f8:	4411      	add	r1, r2
 800e9fa:	4299      	cmp	r1, r3
 800e9fc:	dd1a      	ble.n	800ea34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e9fe:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ea02:	440b      	add	r3, r1
 800ea04:	4402      	add	r2, r0
 800ea06:	b21b      	sxth	r3, r3
 800ea08:	429a      	cmp	r2, r3
 800ea0a:	dc13      	bgt.n	800ea34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ea0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ea0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ea10:	681b      	ldr	r3, [r3, #0]
 800ea12:	9206      	str	r2, [sp, #24]
 800ea14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ea16:	9205      	str	r2, [sp, #20]
 800ea18:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ea1a:	9500      	str	r5, [sp, #0]
 800ea1c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ea20:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ea22:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ea24:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ea28:	a912      	add	r1, sp, #72	; 0x48
 800ea2a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ea2e:	aa49      	add	r2, sp, #292	; 0x124
 800ea30:	4623      	mov	r3, r4
 800ea32:	47c8      	blx	r9
 800ea34:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ea38:	441a      	add	r2, r3
 800ea3a:	6963      	ldr	r3, [r4, #20]
 800ea3c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ea40:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ea44:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ea48:	68a1      	ldr	r1, [r4, #8]
 800ea4a:	ed94 6a08 	vldr	s12, [r4, #32]
 800ea4e:	6022      	str	r2, [r4, #0]
 800ea50:	3301      	adds	r3, #1
 800ea52:	6163      	str	r3, [r4, #20]
 800ea54:	69a3      	ldr	r3, [r4, #24]
 800ea56:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ea5a:	3b01      	subs	r3, #1
 800ea5c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ea60:	61a3      	str	r3, [r4, #24]
 800ea62:	6923      	ldr	r3, [r4, #16]
 800ea64:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ea68:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea6c:	edd4 6a07 	vldr	s13, [r4, #28]
 800ea70:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ea74:	440b      	add	r3, r1
 800ea76:	68e1      	ldr	r1, [r4, #12]
 800ea78:	6123      	str	r3, [r4, #16]
 800ea7a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ea7e:	428b      	cmp	r3, r1
 800ea80:	edc4 6a07 	vstr	s13, [r4, #28]
 800ea84:	db15      	blt.n	800eab2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ea86:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ea8a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ea8e:	3201      	adds	r2, #1
 800ea90:	edc4 6a07 	vstr	s13, [r4, #28]
 800ea94:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ea98:	6022      	str	r2, [r4, #0]
 800ea9a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ea9e:	1a5b      	subs	r3, r3, r1
 800eaa0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800eaa4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800eaa8:	6123      	str	r3, [r4, #16]
 800eaaa:	ee77 7a27 	vadd.f32	s15, s14, s15
 800eaae:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800eab2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800eab6:	441a      	add	r2, r3
 800eab8:	696b      	ldr	r3, [r5, #20]
 800eaba:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800eabe:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800eac2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800eac6:	68a9      	ldr	r1, [r5, #8]
 800eac8:	ed95 6a08 	vldr	s12, [r5, #32]
 800eacc:	602a      	str	r2, [r5, #0]
 800eace:	3301      	adds	r3, #1
 800ead0:	616b      	str	r3, [r5, #20]
 800ead2:	69ab      	ldr	r3, [r5, #24]
 800ead4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ead8:	3b01      	subs	r3, #1
 800eada:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800eade:	61ab      	str	r3, [r5, #24]
 800eae0:	692b      	ldr	r3, [r5, #16]
 800eae2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800eae6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eaea:	edd5 6a07 	vldr	s13, [r5, #28]
 800eaee:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800eaf2:	440b      	add	r3, r1
 800eaf4:	68e9      	ldr	r1, [r5, #12]
 800eaf6:	612b      	str	r3, [r5, #16]
 800eaf8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800eafc:	428b      	cmp	r3, r1
 800eafe:	edc5 6a07 	vstr	s13, [r5, #28]
 800eb02:	db15      	blt.n	800eb30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800eb04:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800eb08:	ee76 6a26 	vadd.f32	s13, s12, s13
 800eb0c:	3201      	adds	r2, #1
 800eb0e:	edc5 6a07 	vstr	s13, [r5, #28]
 800eb12:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800eb16:	602a      	str	r2, [r5, #0]
 800eb18:	ee36 7a87 	vadd.f32	s14, s13, s14
 800eb1c:	1a5b      	subs	r3, r3, r1
 800eb1e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800eb22:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800eb26:	612b      	str	r3, [r5, #16]
 800eb28:	ee77 7a27 	vadd.f32	s15, s14, s15
 800eb2c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800eb30:	3f01      	subs	r7, #1
 800eb32:	e757      	b.n	800e9e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800eb34:	4299      	cmp	r1, r3
 800eb36:	dc13      	bgt.n	800eb60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800eb38:	429a      	cmp	r2, r3
 800eb3a:	da14      	bge.n	800eb66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800eb3c:	2502      	movs	r5, #2
 800eb3e:	2703      	movs	r7, #3
 800eb40:	46a9      	mov	r9, r5
 800eb42:	f04f 0800 	mov.w	r8, #0
 800eb46:	f04f 0a01 	mov.w	sl, #1
 800eb4a:	e6ef      	b.n	800e92c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800eb4c:	2501      	movs	r5, #1
 800eb4e:	2700      	movs	r7, #0
 800eb50:	46a9      	mov	r9, r5
 800eb52:	46b8      	mov	r8, r7
 800eb54:	f04f 0a02 	mov.w	sl, #2
 800eb58:	e6e8      	b.n	800e92c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800eb5a:	2501      	movs	r5, #1
 800eb5c:	2702      	movs	r7, #2
 800eb5e:	e6e1      	b.n	800e924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800eb60:	2500      	movs	r5, #0
 800eb62:	2701      	movs	r7, #1
 800eb64:	e7f4      	b.n	800eb50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800eb66:	2702      	movs	r7, #2
 800eb68:	2503      	movs	r5, #3
 800eb6a:	f04f 0900 	mov.w	r9, #0
 800eb6e:	46b8      	mov	r8, r7
 800eb70:	e7e9      	b.n	800eb46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800eb72:	4613      	mov	r3, r2
 800eb74:	e728      	b.n	800e9c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800eb76:	bf00      	nop
 800eb78:	2001755c 	.word	0x2001755c
 800eb7c:	fffd8f01 	.word	0xfffd8f01
 800eb80:	00027100 	.word	0x00027100
 800eb84:	0004e1ff 	.word	0x0004e1ff
 800eb88:	0004e1fe 	.word	0x0004e1fe
 800eb8c:	20017564 	.word	0x20017564
 800eb90:	4613      	mov	r3, r2
 800eb92:	992b      	ldr	r1, [sp, #172]	; 0xac
 800eb94:	9111      	str	r1, [sp, #68]	; 0x44
 800eb96:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800eb9a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800eb9e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800eba0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800eba4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800eba8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800ebac:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800ebb0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800ebb4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800ebb8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800ebbc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800ebc0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800ebc4:	469e      	mov	lr, r3
 800ebc6:	469c      	mov	ip, r3
 800ebc8:	f04f 0900 	mov.w	r9, #0
 800ebcc:	f1bc 0f00 	cmp.w	ip, #0
 800ebd0:	d147      	bne.n	800ec62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800ebd2:	eb03 0c07 	add.w	ip, r3, r7
 800ebd6:	1ad7      	subs	r7, r2, r3
 800ebd8:	f1b9 0f00 	cmp.w	r9, #0
 800ebdc:	d009      	beq.n	800ebf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800ebde:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800ebe2:	9029      	str	r0, [sp, #164]	; 0xa4
 800ebe4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800ebe8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800ebec:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800ebf0:	912d      	str	r1, [sp, #180]	; 0xb4
 800ebf2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ebf4:	9111      	str	r1, [sp, #68]	; 0x44
 800ebf6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ebfa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ebfe:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ec02:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ec06:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ec0a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ec0e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ec12:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ec16:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ec1a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ec1e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ec22:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ec26:	f04f 0800 	mov.w	r8, #0
 800ec2a:	f1be 0f00 	cmp.w	lr, #0
 800ec2e:	d031      	beq.n	800ec94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ec30:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ec32:	4431      	add	r1, r6
 800ec34:	4549      	cmp	r1, r9
 800ec36:	4450      	add	r0, sl
 800ec38:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ec3c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ec40:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ec44:	db08      	blt.n	800ec58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ec46:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ec4a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ec4e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ec52:	3001      	adds	r0, #1
 800ec54:	eba1 0109 	sub.w	r1, r1, r9
 800ec58:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ec5c:	f04f 0801 	mov.w	r8, #1
 800ec60:	e7e3      	b.n	800ec2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ec62:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ec64:	4431      	add	r1, r6
 800ec66:	4541      	cmp	r1, r8
 800ec68:	4450      	add	r0, sl
 800ec6a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ec6e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ec72:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ec76:	db08      	blt.n	800ec8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ec78:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ec7c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ec80:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ec84:	3001      	adds	r0, #1
 800ec86:	eba1 0108 	sub.w	r1, r1, r8
 800ec8a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ec8e:	f04f 0901 	mov.w	r9, #1
 800ec92:	e79b      	b.n	800ebcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ec94:	449c      	add	ip, r3
 800ec96:	1aff      	subs	r7, r7, r3
 800ec98:	f1b8 0f00 	cmp.w	r8, #0
 800ec9c:	d009      	beq.n	800ecb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ec9e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800eca2:	9019      	str	r0, [sp, #100]	; 0x64
 800eca4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800eca8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ecac:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ecb0:	911d      	str	r1, [sp, #116]	; 0x74
 800ecb2:	1ad2      	subs	r2, r2, r3
 800ecb4:	e68b      	b.n	800e9ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ecb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ecb8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800ecba:	2b00      	cmp	r3, #0
 800ecbc:	f000 80d1 	beq.w	800ee62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ecc0:	ad19      	add	r5, sp, #100	; 0x64
 800ecc2:	ac39      	add	r4, sp, #228	; 0xe4
 800ecc4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ecc6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ecca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ecce:	930c      	str	r3, [sp, #48]	; 0x30
 800ecd0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ecd2:	6963      	ldr	r3, [r4, #20]
 800ecd4:	440b      	add	r3, r1
 800ecd6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ecda:	4408      	add	r0, r1
 800ecdc:	b200      	sxth	r0, r0
 800ecde:	4283      	cmp	r3, r0
 800ece0:	900d      	str	r0, [sp, #52]	; 0x34
 800ece2:	f280 80c1 	bge.w	800ee68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ece6:	428b      	cmp	r3, r1
 800ece8:	da08      	bge.n	800ecfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ecea:	2a00      	cmp	r2, #0
 800ecec:	dd06      	ble.n	800ecfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ecee:	1acb      	subs	r3, r1, r3
 800ecf0:	429a      	cmp	r2, r3
 800ecf2:	f2c0 80bb 	blt.w	800ee6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ecf6:	2b00      	cmp	r3, #0
 800ecf8:	f300 80b9 	bgt.w	800ee6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ecfc:	6967      	ldr	r7, [r4, #20]
 800ecfe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ed00:	443b      	add	r3, r7
 800ed02:	461f      	mov	r7, r3
 800ed04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ed06:	1bdf      	subs	r7, r3, r7
 800ed08:	4297      	cmp	r7, r2
 800ed0a:	bfa8      	it	ge
 800ed0c:	4617      	movge	r7, r2
 800ed0e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ed12:	2f00      	cmp	r7, #0
 800ed14:	f340 813c 	ble.w	800ef90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ed18:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ed1a:	6829      	ldr	r1, [r5, #0]
 800ed1c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ed20:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ed24:	6820      	ldr	r0, [r4, #0]
 800ed26:	4411      	add	r1, r2
 800ed28:	4299      	cmp	r1, r3
 800ed2a:	dd1a      	ble.n	800ed62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ed2c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ed30:	440b      	add	r3, r1
 800ed32:	4402      	add	r2, r0
 800ed34:	b21b      	sxth	r3, r3
 800ed36:	429a      	cmp	r2, r3
 800ed38:	dc13      	bgt.n	800ed62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ed3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ed3c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ed3e:	681b      	ldr	r3, [r3, #0]
 800ed40:	9206      	str	r2, [sp, #24]
 800ed42:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ed44:	9205      	str	r2, [sp, #20]
 800ed46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ed48:	9500      	str	r5, [sp, #0]
 800ed4a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ed4e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ed50:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ed52:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ed56:	a912      	add	r1, sp, #72	; 0x48
 800ed58:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ed5c:	aa49      	add	r2, sp, #292	; 0x124
 800ed5e:	4623      	mov	r3, r4
 800ed60:	47c8      	blx	r9
 800ed62:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ed66:	441a      	add	r2, r3
 800ed68:	6963      	ldr	r3, [r4, #20]
 800ed6a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ed6e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ed72:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ed76:	68a1      	ldr	r1, [r4, #8]
 800ed78:	ed94 6a08 	vldr	s12, [r4, #32]
 800ed7c:	6022      	str	r2, [r4, #0]
 800ed7e:	3301      	adds	r3, #1
 800ed80:	6163      	str	r3, [r4, #20]
 800ed82:	69a3      	ldr	r3, [r4, #24]
 800ed84:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ed88:	3b01      	subs	r3, #1
 800ed8a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ed8e:	61a3      	str	r3, [r4, #24]
 800ed90:	6923      	ldr	r3, [r4, #16]
 800ed92:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ed96:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed9a:	edd4 6a07 	vldr	s13, [r4, #28]
 800ed9e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800eda2:	440b      	add	r3, r1
 800eda4:	68e1      	ldr	r1, [r4, #12]
 800eda6:	6123      	str	r3, [r4, #16]
 800eda8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800edac:	428b      	cmp	r3, r1
 800edae:	edc4 6a07 	vstr	s13, [r4, #28]
 800edb2:	db15      	blt.n	800ede0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800edb4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800edb8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800edbc:	3201      	adds	r2, #1
 800edbe:	edc4 6a07 	vstr	s13, [r4, #28]
 800edc2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800edc6:	6022      	str	r2, [r4, #0]
 800edc8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800edcc:	1a5b      	subs	r3, r3, r1
 800edce:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800edd2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800edd6:	6123      	str	r3, [r4, #16]
 800edd8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800eddc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ede0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ede4:	441a      	add	r2, r3
 800ede6:	696b      	ldr	r3, [r5, #20]
 800ede8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800edec:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800edf0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800edf4:	68a9      	ldr	r1, [r5, #8]
 800edf6:	ed95 6a08 	vldr	s12, [r5, #32]
 800edfa:	602a      	str	r2, [r5, #0]
 800edfc:	3301      	adds	r3, #1
 800edfe:	616b      	str	r3, [r5, #20]
 800ee00:	69ab      	ldr	r3, [r5, #24]
 800ee02:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ee06:	3b01      	subs	r3, #1
 800ee08:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ee0c:	61ab      	str	r3, [r5, #24]
 800ee0e:	692b      	ldr	r3, [r5, #16]
 800ee10:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ee14:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ee18:	edd5 6a07 	vldr	s13, [r5, #28]
 800ee1c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ee20:	440b      	add	r3, r1
 800ee22:	68e9      	ldr	r1, [r5, #12]
 800ee24:	612b      	str	r3, [r5, #16]
 800ee26:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ee2a:	428b      	cmp	r3, r1
 800ee2c:	edc5 6a07 	vstr	s13, [r5, #28]
 800ee30:	db15      	blt.n	800ee5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ee32:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ee36:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ee3a:	3201      	adds	r2, #1
 800ee3c:	edc5 6a07 	vstr	s13, [r5, #28]
 800ee40:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ee44:	602a      	str	r2, [r5, #0]
 800ee46:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ee4a:	1a5b      	subs	r3, r3, r1
 800ee4c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ee50:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ee54:	612b      	str	r3, [r5, #16]
 800ee56:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ee5a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ee5e:	3f01      	subs	r7, #1
 800ee60:	e757      	b.n	800ed12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ee62:	ad39      	add	r5, sp, #228	; 0xe4
 800ee64:	ac19      	add	r4, sp, #100	; 0x64
 800ee66:	e72d      	b.n	800ecc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800ee68:	4613      	mov	r3, r2
 800ee6a:	e744      	b.n	800ecf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800ee6c:	4613      	mov	r3, r2
 800ee6e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800ee72:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800ee74:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800ee78:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800ee7c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800ee80:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800ee84:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800ee88:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800ee8c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800ee90:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800ee92:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800ee96:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800ee9a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800ee9e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800eea2:	960e      	str	r6, [sp, #56]	; 0x38
 800eea4:	469e      	mov	lr, r3
 800eea6:	461f      	mov	r7, r3
 800eea8:	f04f 0900 	mov.w	r9, #0
 800eeac:	2f00      	cmp	r7, #0
 800eeae:	d146      	bne.n	800ef3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800eeb0:	449c      	add	ip, r3
 800eeb2:	1ad7      	subs	r7, r2, r3
 800eeb4:	f1b9 0f00 	cmp.w	r9, #0
 800eeb8:	d009      	beq.n	800eece <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800eeba:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800eebe:	9039      	str	r0, [sp, #228]	; 0xe4
 800eec0:	913d      	str	r1, [sp, #244]	; 0xf4
 800eec2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800eec6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800eeca:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800eece:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800eed0:	910e      	str	r1, [sp, #56]	; 0x38
 800eed2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800eed6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800eeda:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800eede:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800eee2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800eee6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800eeea:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800eeee:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800eef2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800eef6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800eefa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800eefe:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ef02:	f04f 0800 	mov.w	r8, #0
 800ef06:	f1be 0f00 	cmp.w	lr, #0
 800ef0a:	d030      	beq.n	800ef6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ef0c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ef0e:	4431      	add	r1, r6
 800ef10:	4549      	cmp	r1, r9
 800ef12:	4450      	add	r0, sl
 800ef14:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ef18:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ef1c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ef20:	db08      	blt.n	800ef34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ef22:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ef26:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ef2a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ef2e:	3001      	adds	r0, #1
 800ef30:	eba1 0109 	sub.w	r1, r1, r9
 800ef34:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ef38:	f04f 0801 	mov.w	r8, #1
 800ef3c:	e7e3      	b.n	800ef06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800ef3e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ef40:	4431      	add	r1, r6
 800ef42:	4541      	cmp	r1, r8
 800ef44:	4450      	add	r0, sl
 800ef46:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ef4a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ef4e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ef52:	db08      	blt.n	800ef66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800ef54:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ef58:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ef5c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ef60:	3001      	adds	r0, #1
 800ef62:	eba1 0108 	sub.w	r1, r1, r8
 800ef66:	3f01      	subs	r7, #1
 800ef68:	f04f 0901 	mov.w	r9, #1
 800ef6c:	e79e      	b.n	800eeac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800ef6e:	449c      	add	ip, r3
 800ef70:	1aff      	subs	r7, r7, r3
 800ef72:	f1b8 0f00 	cmp.w	r8, #0
 800ef76:	d009      	beq.n	800ef8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ef78:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ef7c:	9019      	str	r0, [sp, #100]	; 0x64
 800ef7e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ef82:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ef86:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ef8a:	911d      	str	r1, [sp, #116]	; 0x74
 800ef8c:	1ad2      	subs	r2, r2, r3
 800ef8e:	e6b5      	b.n	800ecfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ef90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ef92:	681b      	ldr	r3, [r3, #0]
 800ef94:	b923      	cbnz	r3, 800efa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ef96:	4b04      	ldr	r3, [pc, #16]	; (800efa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ef98:	6818      	ldr	r0, [r3, #0]
 800ef9a:	6803      	ldr	r3, [r0, #0]
 800ef9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef9e:	4798      	blx	r3
 800efa0:	b05b      	add	sp, #364	; 0x16c
 800efa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efa6:	bf00      	nop
 800efa8:	20017564 	.word	0x20017564

0800efac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800efac:	b570      	push	{r4, r5, r6, lr}
 800efae:	4604      	mov	r4, r0
 800efb0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800efb4:	9804      	ldr	r0, [sp, #16]
 800efb6:	6061      	str	r1, [r4, #4]
 800efb8:	2500      	movs	r5, #0
 800efba:	8025      	strh	r5, [r4, #0]
 800efbc:	7223      	strb	r3, [r4, #8]
 800efbe:	7266      	strb	r6, [r4, #9]
 800efc0:	60e0      	str	r0, [r4, #12]
 800efc2:	8222      	strh	r2, [r4, #16]
 800efc4:	8265      	strh	r5, [r4, #18]
 800efc6:	82a5      	strh	r5, [r4, #20]
 800efc8:	82e5      	strh	r5, [r4, #22]
 800efca:	8325      	strh	r5, [r4, #24]
 800efcc:	8365      	strh	r5, [r4, #26]
 800efce:	83a5      	strh	r5, [r4, #28]
 800efd0:	77a5      	strb	r5, [r4, #30]
 800efd2:	b32e      	cbz	r6, 800f020 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800efd4:	6803      	ldr	r3, [r0, #0]
 800efd6:	695b      	ldr	r3, [r3, #20]
 800efd8:	4798      	blx	r3
 800efda:	4606      	mov	r6, r0
 800efdc:	b300      	cbz	r0, 800f020 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800efde:	68e0      	ldr	r0, [r4, #12]
 800efe0:	6803      	ldr	r3, [r0, #0]
 800efe2:	4631      	mov	r1, r6
 800efe4:	68db      	ldr	r3, [r3, #12]
 800efe6:	4798      	blx	r3
 800efe8:	4605      	mov	r5, r0
 800efea:	b1c8      	cbz	r0, 800f020 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800efec:	7b43      	ldrb	r3, [r0, #13]
 800efee:	7a82      	ldrb	r2, [r0, #10]
 800eff0:	005b      	lsls	r3, r3, #1
 800eff2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800eff6:	4313      	orrs	r3, r2
 800eff8:	83a3      	strh	r3, [r4, #28]
 800effa:	7a63      	ldrb	r3, [r4, #9]
 800effc:	2b04      	cmp	r3, #4
 800effe:	d10f      	bne.n	800f020 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800f000:	68e0      	ldr	r0, [r4, #12]
 800f002:	6803      	ldr	r3, [r0, #0]
 800f004:	462a      	mov	r2, r5
 800f006:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f008:	4631      	mov	r1, r6
 800f00a:	4798      	blx	r3
 800f00c:	7b6b      	ldrb	r3, [r5, #13]
 800f00e:	005b      	lsls	r3, r3, #1
 800f010:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f014:	7aab      	ldrb	r3, [r5, #10]
 800f016:	4313      	orrs	r3, r2
 800f018:	4418      	add	r0, r3
 800f01a:	8ba3      	ldrh	r3, [r4, #28]
 800f01c:	4418      	add	r0, r3
 800f01e:	83a0      	strh	r0, [r4, #28]
 800f020:	4620      	mov	r0, r4
 800f022:	bd70      	pop	{r4, r5, r6, pc}

0800f024 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f028:	2400      	movs	r4, #0
 800f02a:	b085      	sub	sp, #20
 800f02c:	4681      	mov	r9, r0
 800f02e:	4688      	mov	r8, r1
 800f030:	4692      	mov	sl, r2
 800f032:	469b      	mov	fp, r3
 800f034:	4627      	mov	r7, r4
 800f036:	4625      	mov	r5, r4
 800f038:	4626      	mov	r6, r4
 800f03a:	4554      	cmp	r4, sl
 800f03c:	da2a      	bge.n	800f094 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f03e:	2300      	movs	r3, #0
 800f040:	9303      	str	r3, [sp, #12]
 800f042:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f046:	429d      	cmp	r5, r3
 800f048:	d004      	beq.n	800f054 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f04a:	f242 030b 	movw	r3, #8203	; 0x200b
 800f04e:	429d      	cmp	r5, r3
 800f050:	bf18      	it	ne
 800f052:	462f      	movne	r7, r5
 800f054:	ab03      	add	r3, sp, #12
 800f056:	4642      	mov	r2, r8
 800f058:	4659      	mov	r1, fp
 800f05a:	4648      	mov	r0, r9
 800f05c:	f002 ff7e 	bl	8011f5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f060:	4605      	mov	r5, r0
 800f062:	b1b8      	cbz	r0, 800f094 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f064:	280a      	cmp	r0, #10
 800f066:	d015      	beq.n	800f094 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f068:	9a03      	ldr	r2, [sp, #12]
 800f06a:	b18a      	cbz	r2, 800f090 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f06c:	7b50      	ldrb	r0, [r2, #13]
 800f06e:	7a93      	ldrb	r3, [r2, #10]
 800f070:	8895      	ldrh	r5, [r2, #4]
 800f072:	0040      	lsls	r0, r0, #1
 800f074:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800f078:	4303      	orrs	r3, r0
 800f07a:	9301      	str	r3, [sp, #4]
 800f07c:	f8d8 3000 	ldr.w	r3, [r8]
 800f080:	4639      	mov	r1, r7
 800f082:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f084:	4640      	mov	r0, r8
 800f086:	4798      	blx	r3
 800f088:	9b01      	ldr	r3, [sp, #4]
 800f08a:	4418      	add	r0, r3
 800f08c:	4406      	add	r6, r0
 800f08e:	b2b6      	uxth	r6, r6
 800f090:	3401      	adds	r4, #1
 800f092:	e7d2      	b.n	800f03a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f094:	4630      	mov	r0, r6
 800f096:	b005      	add	sp, #20
 800f098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f09c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f09c:	2a02      	cmp	r2, #2
 800f09e:	b530      	push	{r4, r5, lr}
 800f0a0:	d011      	beq.n	800f0c6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f0a2:	2a03      	cmp	r2, #3
 800f0a4:	d01c      	beq.n	800f0e0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f0a6:	2a01      	cmp	r2, #1
 800f0a8:	d10c      	bne.n	800f0c4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f0aa:	888b      	ldrh	r3, [r1, #4]
 800f0ac:	8801      	ldrh	r1, [r0, #0]
 800f0ae:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f0b2:	8844      	ldrh	r4, [r0, #2]
 800f0b4:	8004      	strh	r4, [r0, #0]
 800f0b6:	1a5b      	subs	r3, r3, r1
 800f0b8:	1a9b      	subs	r3, r3, r2
 800f0ba:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f0be:	8043      	strh	r3, [r0, #2]
 800f0c0:	8081      	strh	r1, [r0, #4]
 800f0c2:	80c2      	strh	r2, [r0, #6]
 800f0c4:	bd30      	pop	{r4, r5, pc}
 800f0c6:	88cb      	ldrh	r3, [r1, #6]
 800f0c8:	8842      	ldrh	r2, [r0, #2]
 800f0ca:	1a9b      	subs	r3, r3, r2
 800f0cc:	88c2      	ldrh	r2, [r0, #6]
 800f0ce:	1a9b      	subs	r3, r3, r2
 800f0d0:	888a      	ldrh	r2, [r1, #4]
 800f0d2:	8801      	ldrh	r1, [r0, #0]
 800f0d4:	8043      	strh	r3, [r0, #2]
 800f0d6:	1a52      	subs	r2, r2, r1
 800f0d8:	8881      	ldrh	r1, [r0, #4]
 800f0da:	1a52      	subs	r2, r2, r1
 800f0dc:	8002      	strh	r2, [r0, #0]
 800f0de:	e7f1      	b.n	800f0c4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f0e0:	88cb      	ldrh	r3, [r1, #6]
 800f0e2:	8841      	ldrh	r1, [r0, #2]
 800f0e4:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f0e8:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f0ec:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f0f0:	8045      	strh	r5, [r0, #2]
 800f0f2:	1a5b      	subs	r3, r3, r1
 800f0f4:	1a9b      	subs	r3, r3, r2
 800f0f6:	8003      	strh	r3, [r0, #0]
 800f0f8:	8082      	strh	r2, [r0, #4]
 800f0fa:	80c4      	strh	r4, [r0, #6]
 800f0fc:	e7e2      	b.n	800f0c4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f0fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f0fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f102:	b09f      	sub	sp, #124	; 0x7c
 800f104:	9116      	str	r1, [sp, #88]	; 0x58
 800f106:	9317      	str	r3, [sp, #92]	; 0x5c
 800f108:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f10a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f10c:	8809      	ldrh	r1, [r1, #0]
 800f10e:	889b      	ldrh	r3, [r3, #4]
 800f110:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800f114:	9212      	str	r2, [sp, #72]	; 0x48
 800f116:	440b      	add	r3, r1
 800f118:	b21b      	sxth	r3, r3
 800f11a:	9310      	str	r3, [sp, #64]	; 0x40
 800f11c:	f8d8 3000 	ldr.w	r3, [r8]
 800f120:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800f124:	7a59      	ldrb	r1, [r3, #9]
 800f126:	7a1b      	ldrb	r3, [r3, #8]
 800f128:	9011      	str	r0, [sp, #68]	; 0x44
 800f12a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800f12e:	9114      	str	r1, [sp, #80]	; 0x50
 800f130:	9315      	str	r3, [sp, #84]	; 0x54
 800f132:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800f136:	2a00      	cmp	r2, #0
 800f138:	d06a      	beq.n	800f210 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f13a:	f898 3010 	ldrb.w	r3, [r8, #16]
 800f13e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800f140:	2b04      	cmp	r3, #4
 800f142:	bf14      	ite	ne
 800f144:	2301      	movne	r3, #1
 800f146:	2302      	moveq	r3, #2
 800f148:	4413      	add	r3, r2
 800f14a:	f04f 0900 	mov.w	r9, #0
 800f14e:	930f      	str	r3, [sp, #60]	; 0x3c
 800f150:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800f154:	464c      	mov	r4, r9
 800f156:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800f15a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800f15e:	4293      	cmp	r3, r2
 800f160:	f280 808f 	bge.w	800f282 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f164:	2300      	movs	r3, #0
 800f166:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800f16a:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800f16e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f172:	429c      	cmp	r4, r3
 800f174:	d006      	beq.n	800f184 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800f176:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f178:	f242 020b 	movw	r2, #8203	; 0x200b
 800f17c:	4294      	cmp	r4, r2
 800f17e:	bf18      	it	ne
 800f180:	4623      	movne	r3, r4
 800f182:	930d      	str	r3, [sp, #52]	; 0x34
 800f184:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f186:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800f188:	f8d8 2000 	ldr.w	r2, [r8]
 800f18c:	428b      	cmp	r3, r1
 800f18e:	db41      	blt.n	800f214 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800f190:	6813      	ldr	r3, [r2, #0]
 800f192:	4610      	mov	r0, r2
 800f194:	695b      	ldr	r3, [r3, #20]
 800f196:	4798      	blx	r3
 800f198:	4604      	mov	r4, r0
 800f19a:	f8d8 0000 	ldr.w	r0, [r8]
 800f19e:	6803      	ldr	r3, [r0, #0]
 800f1a0:	aa1d      	add	r2, sp, #116	; 0x74
 800f1a2:	689e      	ldr	r6, [r3, #8]
 800f1a4:	4621      	mov	r1, r4
 800f1a6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f1aa:	47b0      	blx	r6
 800f1ac:	901c      	str	r0, [sp, #112]	; 0x70
 800f1ae:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f1b2:	429c      	cmp	r4, r3
 800f1b4:	f000 80e9 	beq.w	800f38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f1b8:	f242 030b 	movw	r3, #8203	; 0x200b
 800f1bc:	429c      	cmp	r4, r3
 800f1be:	f000 80e4 	beq.w	800f38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f1c2:	2c00      	cmp	r4, #0
 800f1c4:	f000 80f6 	beq.w	800f3b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800f1c8:	2c0a      	cmp	r4, #10
 800f1ca:	d060      	beq.n	800f28e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800f1cc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f1ce:	b36a      	cbz	r2, 800f22c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800f1d0:	8894      	ldrh	r4, [r2, #4]
 800f1d2:	f1bb 0f00 	cmp.w	fp, #0
 800f1d6:	d03b      	beq.n	800f250 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800f1d8:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f1dc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f1e0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800f1e4:	f892 900a 	ldrb.w	r9, [r2, #10]
 800f1e8:	f1bb 0f01 	cmp.w	fp, #1
 800f1ec:	ea49 0903 	orr.w	r9, r9, r3
 800f1f0:	d134      	bne.n	800f25c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800f1f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f1f4:	eba5 0509 	sub.w	r5, r5, r9
 800f1f8:	2b00      	cmp	r3, #0
 800f1fa:	d14f      	bne.n	800f29c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800f1fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f1fe:	eb09 0305 	add.w	r3, r9, r5
 800f202:	4413      	add	r3, r2
 800f204:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f206:	f9b2 2000 	ldrsh.w	r2, [r2]
 800f20a:	4293      	cmp	r3, r2
 800f20c:	da51      	bge.n	800f2b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800f20e:	e038      	b.n	800f282 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f210:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f212:	e79a      	b.n	800f14a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800f214:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f218:	9301      	str	r3, [sp, #4]
 800f21a:	ab1d      	add	r3, sp, #116	; 0x74
 800f21c:	9300      	str	r3, [sp, #0]
 800f21e:	4659      	mov	r1, fp
 800f220:	ab1c      	add	r3, sp, #112	; 0x70
 800f222:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f224:	f002 fee3 	bl	8011fee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800f228:	4604      	mov	r4, r0
 800f22a:	e7c0      	b.n	800f1ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800f22c:	f8d8 0000 	ldr.w	r0, [r8]
 800f230:	6803      	ldr	r3, [r0, #0]
 800f232:	691b      	ldr	r3, [r3, #16]
 800f234:	4798      	blx	r3
 800f236:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f23a:	4298      	cmp	r0, r3
 800f23c:	f000 80a5 	beq.w	800f38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f240:	f242 030b 	movw	r3, #8203	; 0x200b
 800f244:	4298      	cmp	r0, r3
 800f246:	f000 80a0 	beq.w	800f38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f24a:	f1bb 0f00 	cmp.w	fp, #0
 800f24e:	d100      	bne.n	800f252 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800f250:	444d      	add	r5, r9
 800f252:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f254:	2a00      	cmp	r2, #0
 800f256:	d1bf      	bne.n	800f1d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800f258:	4691      	mov	r9, r2
 800f25a:	e096      	b.n	800f38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f25c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f25e:	2b00      	cmp	r3, #0
 800f260:	f000 80aa 	beq.w	800f3b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800f264:	f1bb 0f00 	cmp.w	fp, #0
 800f268:	d118      	bne.n	800f29c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800f26a:	f8d8 0000 	ldr.w	r0, [r8]
 800f26e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f270:	6803      	ldr	r3, [r0, #0]
 800f272:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f274:	4798      	blx	r3
 800f276:	4405      	add	r5, r0
 800f278:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800f27a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f27c:	1aeb      	subs	r3, r5, r3
 800f27e:	4293      	cmp	r3, r2
 800f280:	dd17      	ble.n	800f2b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800f282:	2c00      	cmp	r4, #0
 800f284:	f000 8096 	beq.w	800f3b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800f288:	2c0a      	cmp	r4, #10
 800f28a:	f040 8084 	bne.w	800f396 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800f28e:	240a      	movs	r4, #10
 800f290:	fab4 f084 	clz	r0, r4
 800f294:	0940      	lsrs	r0, r0, #5
 800f296:	b01f      	add	sp, #124	; 0x7c
 800f298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f29c:	f8d8 0000 	ldr.w	r0, [r8]
 800f2a0:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f2a2:	6803      	ldr	r3, [r0, #0]
 800f2a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f2a6:	4798      	blx	r3
 800f2a8:	f1bb 0f01 	cmp.w	fp, #1
 800f2ac:	eba5 0500 	sub.w	r5, r5, r0
 800f2b0:	d0a4      	beq.n	800f1fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800f2b2:	981c      	ldr	r0, [sp, #112]	; 0x70
 800f2b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f2b6:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800f2ba:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f2be:	7b43      	ldrb	r3, [r0, #13]
 800f2c0:	015b      	lsls	r3, r3, #5
 800f2c2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f2c6:	7983      	ldrb	r3, [r0, #6]
 800f2c8:	4429      	add	r1, r5
 800f2ca:	4313      	orrs	r3, r2
 800f2cc:	440b      	add	r3, r1
 800f2ce:	42b3      	cmp	r3, r6
 800f2d0:	db5b      	blt.n	800f38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f2d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f2d4:	4299      	cmp	r1, r3
 800f2d6:	da58      	bge.n	800f38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f2d8:	f8d8 0000 	ldr.w	r0, [r8]
 800f2dc:	6803      	ldr	r3, [r0, #0]
 800f2de:	42ae      	cmp	r6, r5
 800f2e0:	bfc8      	it	gt
 800f2e2:	1b76      	subgt	r6, r6, r5
 800f2e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2e6:	bfcc      	ite	gt
 800f2e8:	b2b6      	uxthgt	r6, r6
 800f2ea:	2600      	movle	r6, #0
 800f2ec:	4798      	blx	r3
 800f2ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800f2f0:	7b5a      	ldrb	r2, [r3, #13]
 800f2f2:	00d1      	lsls	r1, r2, #3
 800f2f4:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800f2f8:	7a19      	ldrb	r1, [r3, #8]
 800f2fa:	4339      	orrs	r1, r7
 800f2fc:	0657      	lsls	r7, r2, #25
 800f2fe:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800f300:	bf44      	itt	mi
 800f302:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800f306:	b209      	sxthmi	r1, r1
 800f308:	19c7      	adds	r7, r0, r7
 800f30a:	1a7f      	subs	r7, r7, r1
 800f30c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f30e:	b2bf      	uxth	r7, r7
 800f310:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f314:	fa0f fa87 	sxth.w	sl, r7
 800f318:	4551      	cmp	r1, sl
 800f31a:	dd3a      	ble.n	800f392 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800f31c:	0112      	lsls	r2, r2, #4
 800f31e:	79d8      	ldrb	r0, [r3, #7]
 800f320:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f324:	4302      	orrs	r2, r0
 800f326:	4492      	add	sl, r2
 800f328:	4551      	cmp	r1, sl
 800f32a:	dc2e      	bgt.n	800f38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f32c:	1bcf      	subs	r7, r1, r7
 800f32e:	b2bf      	uxth	r7, r7
 800f330:	468a      	mov	sl, r1
 800f332:	9319      	str	r3, [sp, #100]	; 0x64
 800f334:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f336:	f8d8 0000 	ldr.w	r0, [r8]
 800f33a:	681a      	ldr	r2, [r3, #0]
 800f33c:	6801      	ldr	r1, [r0, #0]
 800f33e:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800f340:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800f342:	9313      	str	r3, [sp, #76]	; 0x4c
 800f344:	9218      	str	r2, [sp, #96]	; 0x60
 800f346:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800f348:	4788      	blx	r1
 800f34a:	f898 1006 	ldrb.w	r1, [r8, #6]
 800f34e:	910b      	str	r1, [sp, #44]	; 0x2c
 800f350:	f898 100e 	ldrb.w	r1, [r8, #14]
 800f354:	910a      	str	r1, [sp, #40]	; 0x28
 800f356:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800f35a:	9109      	str	r1, [sp, #36]	; 0x24
 800f35c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f35e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800f362:	9305      	str	r3, [sp, #20]
 800f364:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f366:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f368:	9206      	str	r2, [sp, #24]
 800f36a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800f36e:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800f372:	e9cd a601 	strd	sl, r6, [sp, #4]
 800f376:	442e      	add	r6, r5
 800f378:	b236      	sxth	r6, r6
 800f37a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f37c:	9600      	str	r6, [sp, #0]
 800f37e:	681a      	ldr	r2, [r3, #0]
 800f380:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f382:	685b      	ldr	r3, [r3, #4]
 800f384:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f386:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f388:	47b0      	blx	r6
 800f38a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f38c:	3301      	adds	r3, #1
 800f38e:	930e      	str	r3, [sp, #56]	; 0x38
 800f390:	e6e3      	b.n	800f15a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800f392:	2700      	movs	r7, #0
 800f394:	e7cd      	b.n	800f332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800f396:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800f398:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f39a:	3501      	adds	r5, #1
 800f39c:	429d      	cmp	r5, r3
 800f39e:	f6bf af77 	bge.w	800f290 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800f3a2:	4659      	mov	r1, fp
 800f3a4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f3a6:	f7f5 f8ff 	bl	80045a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f3aa:	4604      	mov	r4, r0
 800f3ac:	b110      	cbz	r0, 800f3b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800f3ae:	280a      	cmp	r0, #10
 800f3b0:	d1f2      	bne.n	800f398 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800f3b2:	e76c      	b.n	800f28e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800f3b4:	2400      	movs	r4, #0
 800f3b6:	e76b      	b.n	800f290 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800f3b8:	f1bb 0f00 	cmp.w	fp, #0
 800f3bc:	f43f af5c 	beq.w	800f278 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800f3c0:	e777      	b.n	800f2b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800f3c2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800f3c2:	b530      	push	{r4, r5, lr}
 800f3c4:	8a44      	ldrh	r4, [r0, #18]
 800f3c6:	8ac5      	ldrh	r5, [r0, #22]
 800f3c8:	82c3      	strh	r3, [r0, #22]
 800f3ca:	442c      	add	r4, r5
 800f3cc:	1ae4      	subs	r4, r4, r3
 800f3ce:	8244      	strh	r4, [r0, #18]
 800f3d0:	8b03      	ldrh	r3, [r0, #24]
 800f3d2:	8a84      	ldrh	r4, [r0, #20]
 800f3d4:	4422      	add	r2, r4
 800f3d6:	440c      	add	r4, r1
 800f3d8:	1a59      	subs	r1, r3, r1
 800f3da:	8342      	strh	r2, [r0, #26]
 800f3dc:	8284      	strh	r4, [r0, #20]
 800f3de:	8301      	strh	r1, [r0, #24]
 800f3e0:	bd30      	pop	{r4, r5, pc}

0800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800f3e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3e6:	7a43      	ldrb	r3, [r0, #9]
 800f3e8:	1eda      	subs	r2, r3, #3
 800f3ea:	b087      	sub	sp, #28
 800f3ec:	4604      	mov	r4, r0
 800f3ee:	b2d2      	uxtb	r2, r2
 800f3f0:	460f      	mov	r7, r1
 800f3f2:	2900      	cmp	r1, #0
 800f3f4:	d036      	beq.n	800f464 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800f3f6:	2a01      	cmp	r2, #1
 800f3f8:	d932      	bls.n	800f460 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800f3fa:	1e58      	subs	r0, r3, #1
 800f3fc:	f1d0 0b00 	rsbs	fp, r0, #0
 800f400:	eb4b 0b00 	adc.w	fp, fp, r0
 800f404:	1e99      	subs	r1, r3, #2
 800f406:	424b      	negs	r3, r1
 800f408:	414b      	adcs	r3, r1
 800f40a:	9303      	str	r3, [sp, #12]
 800f40c:	2300      	movs	r3, #0
 800f40e:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800f412:	2500      	movs	r5, #0
 800f414:	8265      	strh	r5, [r4, #18]
 800f416:	82a5      	strh	r5, [r4, #20]
 800f418:	46a9      	mov	r9, r5
 800f41a:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800f41e:	2300      	movs	r3, #0
 800f420:	9305      	str	r3, [sp, #20]
 800f422:	8823      	ldrh	r3, [r4, #0]
 800f424:	2b20      	cmp	r3, #32
 800f426:	d02b      	beq.n	800f480 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800f428:	eba3 020a 	sub.w	r2, r3, sl
 800f42c:	4256      	negs	r6, r2
 800f42e:	4156      	adcs	r6, r2
 800f430:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f434:	4293      	cmp	r3, r2
 800f436:	d004      	beq.n	800f442 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800f438:	4553      	cmp	r3, sl
 800f43a:	bf16      	itet	ne
 800f43c:	4699      	movne	r9, r3
 800f43e:	2601      	moveq	r6, #1
 800f440:	2600      	movne	r6, #0
 800f442:	ab05      	add	r3, sp, #20
 800f444:	68e2      	ldr	r2, [r4, #12]
 800f446:	7a21      	ldrb	r1, [r4, #8]
 800f448:	6860      	ldr	r0, [r4, #4]
 800f44a:	f002 fd87 	bl	8011f5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f44e:	8020      	strh	r0, [r4, #0]
 800f450:	b9c8      	cbnz	r0, 800f486 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800f452:	8b22      	ldrh	r2, [r4, #24]
 800f454:	2300      	movs	r3, #0
 800f456:	4611      	mov	r1, r2
 800f458:	4620      	mov	r0, r4
 800f45a:	f7ff ffb2 	bl	800f3c2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f45e:	e066      	b.n	800f52e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800f460:	468b      	mov	fp, r1
 800f462:	e7cf      	b.n	800f404 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800f464:	3b01      	subs	r3, #1
 800f466:	2a01      	cmp	r2, #1
 800f468:	bf8c      	ite	hi
 800f46a:	2200      	movhi	r2, #0
 800f46c:	2201      	movls	r2, #1
 800f46e:	2b01      	cmp	r3, #1
 800f470:	bf8c      	ite	hi
 800f472:	2300      	movhi	r3, #0
 800f474:	2301      	movls	r3, #1
 800f476:	9202      	str	r2, [sp, #8]
 800f478:	9301      	str	r3, [sp, #4]
 800f47a:	9103      	str	r1, [sp, #12]
 800f47c:	468b      	mov	fp, r1
 800f47e:	e7c8      	b.n	800f412 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800f480:	4699      	mov	r9, r3
 800f482:	2601      	movs	r6, #1
 800f484:	e7dd      	b.n	800f442 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800f486:	8ae3      	ldrh	r3, [r4, #22]
 800f488:	280a      	cmp	r0, #10
 800f48a:	f103 0301 	add.w	r3, r3, #1
 800f48e:	82e3      	strh	r3, [r4, #22]
 800f490:	d0df      	beq.n	800f452 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800f492:	9a05      	ldr	r2, [sp, #20]
 800f494:	bb42      	cbnz	r2, 800f4e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800f496:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f49a:	4298      	cmp	r0, r3
 800f49c:	d001      	beq.n	800f4a2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800f49e:	4550      	cmp	r0, sl
 800f4a0:	d1bd      	bne.n	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f4a2:	8823      	ldrh	r3, [r4, #0]
 800f4a4:	8b21      	ldrh	r1, [r4, #24]
 800f4a6:	2b20      	cmp	r3, #32
 800f4a8:	d001      	beq.n	800f4ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800f4aa:	4553      	cmp	r3, sl
 800f4ac:	d131      	bne.n	800f512 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800f4ae:	2e00      	cmp	r6, #0
 800f4b0:	bf0a      	itet	eq
 800f4b2:	460d      	moveq	r5, r1
 800f4b4:	4630      	movne	r0, r6
 800f4b6:	2001      	moveq	r0, #1
 800f4b8:	440a      	add	r2, r1
 800f4ba:	8aa3      	ldrh	r3, [r4, #20]
 800f4bc:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800f4c0:	b292      	uxth	r2, r2
 800f4c2:	8322      	strh	r2, [r4, #24]
 800f4c4:	4413      	add	r3, r2
 800f4c6:	2f00      	cmp	r7, #0
 800f4c8:	d03a      	beq.n	800f540 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800f4ca:	f1bb 0f00 	cmp.w	fp, #0
 800f4ce:	d102      	bne.n	800f4d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800f4d0:	9903      	ldr	r1, [sp, #12]
 800f4d2:	b301      	cbz	r1, 800f516 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800f4d4:	b1f8      	cbz	r0, 800f516 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800f4d6:	8ba1      	ldrh	r1, [r4, #28]
 800f4d8:	4419      	add	r1, r3
 800f4da:	458c      	cmp	ip, r1
 800f4dc:	da2a      	bge.n	800f534 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800f4de:	8a61      	ldrh	r1, [r4, #18]
 800f4e0:	b341      	cbz	r1, 800f534 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800f4e2:	4563      	cmp	r3, ip
 800f4e4:	dd9b      	ble.n	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f4e6:	e01c      	b.n	800f522 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800f4e8:	8893      	ldrh	r3, [r2, #4]
 800f4ea:	8023      	strh	r3, [r4, #0]
 800f4ec:	f892 800d 	ldrb.w	r8, [r2, #13]
 800f4f0:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800f4f4:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800f4f8:	f892 800a 	ldrb.w	r8, [r2, #10]
 800f4fc:	ea48 0800 	orr.w	r8, r8, r0
 800f500:	68e0      	ldr	r0, [r4, #12]
 800f502:	6803      	ldr	r3, [r0, #0]
 800f504:	4649      	mov	r1, r9
 800f506:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f508:	4798      	blx	r3
 800f50a:	eb08 0200 	add.w	r2, r8, r0
 800f50e:	b292      	uxth	r2, r2
 800f510:	e7c7      	b.n	800f4a2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800f512:	2000      	movs	r0, #0
 800f514:	e7d0      	b.n	800f4b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800f516:	4563      	cmp	r3, ip
 800f518:	dd81      	ble.n	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f51a:	8a63      	ldrh	r3, [r4, #18]
 800f51c:	2b00      	cmp	r3, #0
 800f51e:	f43f af7e 	beq.w	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f522:	2301      	movs	r3, #1
 800f524:	77a3      	strb	r3, [r4, #30]
 800f526:	8ba2      	ldrh	r2, [r4, #28]
 800f528:	8b63      	ldrh	r3, [r4, #26]
 800f52a:	4413      	add	r3, r2
 800f52c:	8363      	strh	r3, [r4, #26]
 800f52e:	b007      	add	sp, #28
 800f530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f534:	2300      	movs	r3, #0
 800f536:	4611      	mov	r1, r2
 800f538:	4620      	mov	r0, r4
 800f53a:	f7ff ff42 	bl	800f3c2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f53e:	e76e      	b.n	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f540:	4563      	cmp	r3, ip
 800f542:	dd14      	ble.n	800f56e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800f544:	9b02      	ldr	r3, [sp, #8]
 800f546:	b113      	cbz	r3, 800f54e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800f548:	2301      	movs	r3, #1
 800f54a:	460a      	mov	r2, r1
 800f54c:	e783      	b.n	800f456 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800f54e:	9b01      	ldr	r3, [sp, #4]
 800f550:	2b00      	cmp	r3, #0
 800f552:	f43f af64 	beq.w	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f556:	2800      	cmp	r0, #0
 800f558:	f47f af61 	bne.w	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f55c:	b116      	cbz	r6, 800f564 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800f55e:	2301      	movs	r3, #1
 800f560:	462a      	mov	r2, r5
 800f562:	e779      	b.n	800f458 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800f564:	8a63      	ldrh	r3, [r4, #18]
 800f566:	2b00      	cmp	r3, #0
 800f568:	f43f af59 	beq.w	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f56c:	e7df      	b.n	800f52e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800f56e:	2800      	cmp	r0, #0
 800f570:	f47f af55 	bne.w	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f574:	2e00      	cmp	r6, #0
 800f576:	f43f af52 	beq.w	800f41e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f57a:	2301      	movs	r3, #1
 800f57c:	462a      	mov	r2, r5
 800f57e:	e7db      	b.n	800f538 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800f580 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800f580:	b530      	push	{r4, r5, lr}
 800f582:	4605      	mov	r5, r0
 800f584:	b08b      	sub	sp, #44	; 0x2c
 800f586:	b191      	cbz	r1, 800f5ae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800f588:	e9cd 3100 	strd	r3, r1, [sp]
 800f58c:	4613      	mov	r3, r2
 800f58e:	4601      	mov	r1, r0
 800f590:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800f594:	a802      	add	r0, sp, #8
 800f596:	f7ff fd09 	bl	800efac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800f59a:	2401      	movs	r4, #1
 800f59c:	2100      	movs	r1, #0
 800f59e:	a802      	add	r0, sp, #8
 800f5a0:	f7ff ff1f 	bl	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f5a4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f5a8:	b163      	cbz	r3, 800f5c4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800f5aa:	3401      	adds	r4, #1
 800f5ac:	e7f6      	b.n	800f59c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800f5ae:	f002 fda3 	bl	80120f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f5b2:	2401      	movs	r4, #1
 800f5b4:	280a      	cmp	r0, #10
 800f5b6:	4628      	mov	r0, r5
 800f5b8:	bf08      	it	eq
 800f5ba:	3401      	addeq	r4, #1
 800f5bc:	f002 fd9c 	bl	80120f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f5c0:	2800      	cmp	r0, #0
 800f5c2:	d1f7      	bne.n	800f5b4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800f5c4:	b2a0      	uxth	r0, r4
 800f5c6:	b00b      	add	sp, #44	; 0x2c
 800f5c8:	bd30      	pop	{r4, r5, pc}

0800f5ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800f5ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5ce:	b0e5      	sub	sp, #404	; 0x194
 800f5d0:	4689      	mov	r9, r1
 800f5d2:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800f5d6:	900a      	str	r0, [sp, #40]	; 0x28
 800f5d8:	461c      	mov	r4, r3
 800f5da:	f1ba 0f00 	cmp.w	sl, #0
 800f5de:	f000 80b4 	beq.w	800f74a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f5e2:	681b      	ldr	r3, [r3, #0]
 800f5e4:	2b00      	cmp	r3, #0
 800f5e6:	f000 80b0 	beq.w	800f74a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f5ea:	7ba3      	ldrb	r3, [r4, #14]
 800f5ec:	2b00      	cmp	r3, #0
 800f5ee:	f000 80ac 	beq.w	800f74a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f5f2:	6810      	ldr	r0, [r2, #0]
 800f5f4:	6851      	ldr	r1, [r2, #4]
 800f5f6:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800f5fa:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800f5fe:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800f602:	4643      	mov	r3, r8
 800f604:	c303      	stmia	r3!, {r0, r1}
 800f606:	2500      	movs	r5, #0
 800f608:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800f60c:	79a2      	ldrb	r2, [r4, #6]
 800f60e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800f612:	a90f      	add	r1, sp, #60	; 0x3c
 800f614:	4640      	mov	r0, r8
 800f616:	950f      	str	r5, [sp, #60]	; 0x3c
 800f618:	f7ff fd40 	bl	800f09c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f61c:	a90f      	add	r1, sp, #60	; 0x3c
 800f61e:	4608      	mov	r0, r1
 800f620:	79a2      	ldrb	r2, [r4, #6]
 800f622:	af19      	add	r7, sp, #100	; 0x64
 800f624:	f7ff fd3a 	bl	800f09c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f628:	4638      	mov	r0, r7
 800f62a:	f002 f93a 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 800f62e:	6820      	ldr	r0, [r4, #0]
 800f630:	6803      	ldr	r3, [r0, #0]
 800f632:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f634:	4798      	blx	r3
 800f636:	4606      	mov	r6, r0
 800f638:	6820      	ldr	r0, [r4, #0]
 800f63a:	6803      	ldr	r3, [r0, #0]
 800f63c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f63e:	4798      	blx	r3
 800f640:	4633      	mov	r3, r6
 800f642:	9000      	str	r0, [sp, #0]
 800f644:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800f646:	4651      	mov	r1, sl
 800f648:	4638      	mov	r0, r7
 800f64a:	f002 f985 	bl	8011958 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f64e:	6820      	ldr	r0, [r4, #0]
 800f650:	7923      	ldrb	r3, [r4, #4]
 800f652:	9308      	str	r3, [sp, #32]
 800f654:	6803      	ldr	r3, [r0, #0]
 800f656:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f658:	4798      	blx	r3
 800f65a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f65e:	181e      	adds	r6, r3, r0
 800f660:	42ae      	cmp	r6, r5
 800f662:	dd06      	ble.n	800f672 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800f664:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800f668:	4282      	cmp	r2, r0
 800f66a:	bfa4      	itt	ge
 800f66c:	189d      	addge	r5, r3, r2
 800f66e:	fb95 f5f6 	sdivge	r5, r5, r6
 800f672:	a832      	add	r0, sp, #200	; 0xc8
 800f674:	f002 f915 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 800f678:	7c23      	ldrb	r3, [r4, #16]
 800f67a:	b17b      	cbz	r3, 800f69c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800f67c:	6820      	ldr	r0, [r4, #0]
 800f67e:	6803      	ldr	r3, [r0, #0]
 800f680:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f682:	4798      	blx	r3
 800f684:	4683      	mov	fp, r0
 800f686:	6820      	ldr	r0, [r4, #0]
 800f688:	6803      	ldr	r3, [r0, #0]
 800f68a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f68c:	4798      	blx	r3
 800f68e:	465b      	mov	r3, fp
 800f690:	9000      	str	r0, [sp, #0]
 800f692:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800f694:	4651      	mov	r1, sl
 800f696:	a832      	add	r0, sp, #200	; 0xc8
 800f698:	f002 f95e 	bl	8011958 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f69c:	7be1      	ldrb	r1, [r4, #15]
 800f69e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800f6a2:	7963      	ldrb	r3, [r4, #5]
 800f6a4:	1a52      	subs	r2, r2, r1
 800f6a6:	7c21      	ldrb	r1, [r4, #16]
 800f6a8:	9101      	str	r1, [sp, #4]
 800f6aa:	6821      	ldr	r1, [r4, #0]
 800f6ac:	9100      	str	r1, [sp, #0]
 800f6ae:	b292      	uxth	r2, r2
 800f6b0:	a932      	add	r1, sp, #200	; 0xc8
 800f6b2:	a811      	add	r0, sp, #68	; 0x44
 800f6b4:	f7ff fc7a 	bl	800efac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800f6b8:	7c23      	ldrb	r3, [r4, #16]
 800f6ba:	b9bb      	cbnz	r3, 800f6ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800f6bc:	fa1f fa86 	uxth.w	sl, r6
 800f6c0:	2d00      	cmp	r5, #0
 800f6c2:	dd45      	ble.n	800f750 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800f6c4:	4638      	mov	r0, r7
 800f6c6:	f002 fd17 	bl	80120f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f6ca:	2800      	cmp	r0, #0
 800f6cc:	d03d      	beq.n	800f74a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f6ce:	280a      	cmp	r0, #10
 800f6d0:	d1f6      	bne.n	800f6c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800f6d2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800f6d6:	4453      	add	r3, sl
 800f6d8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800f6dc:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800f6e0:	eba3 030a 	sub.w	r3, r3, sl
 800f6e4:	3d01      	subs	r5, #1
 800f6e6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800f6ea:	e7e9      	b.n	800f6c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800f6ec:	0073      	lsls	r3, r6, #1
 800f6ee:	9309      	str	r3, [sp, #36]	; 0x24
 800f6f0:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800f6f4:	fa1f fa86 	uxth.w	sl, r6
 800f6f8:	2d00      	cmp	r5, #0
 800f6fa:	dd29      	ble.n	800f750 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800f6fc:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f700:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f702:	428b      	cmp	r3, r1
 800f704:	bfd4      	ite	le
 800f706:	2100      	movle	r1, #0
 800f708:	2101      	movgt	r1, #1
 800f70a:	a811      	add	r0, sp, #68	; 0x44
 800f70c:	f7ff fe69 	bl	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f710:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800f714:	3b01      	subs	r3, #1
 800f716:	b29b      	uxth	r3, r3
 800f718:	455b      	cmp	r3, fp
 800f71a:	930b      	str	r3, [sp, #44]	; 0x2c
 800f71c:	d005      	beq.n	800f72a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800f71e:	7961      	ldrb	r1, [r4, #5]
 800f720:	4638      	mov	r0, r7
 800f722:	f7f4 ff41 	bl	80045a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f726:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f728:	e7f4      	b.n	800f714 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800f72a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800f72e:	4453      	add	r3, sl
 800f730:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800f734:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800f738:	eba3 030a 	sub.w	r3, r3, sl
 800f73c:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800f740:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f744:	3d01      	subs	r5, #1
 800f746:	2b00      	cmp	r3, #0
 800f748:	d1d6      	bne.n	800f6f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800f74a:	b065      	add	sp, #404	; 0x194
 800f74c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f750:	0075      	lsls	r5, r6, #1
 800f752:	f04f 0a00 	mov.w	sl, #0
 800f756:	7c23      	ldrb	r3, [r4, #16]
 800f758:	2b00      	cmp	r3, #0
 800f75a:	d066      	beq.n	800f82a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800f75c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f760:	428d      	cmp	r5, r1
 800f762:	bfd4      	ite	le
 800f764:	2100      	movle	r1, #0
 800f766:	2101      	movgt	r1, #1
 800f768:	a811      	add	r0, sp, #68	; 0x44
 800f76a:	f7ff fe3a 	bl	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f76e:	9b08      	ldr	r3, [sp, #32]
 800f770:	2b00      	cmp	r3, #0
 800f772:	d055      	beq.n	800f820 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800f774:	f894 b010 	ldrb.w	fp, [r4, #16]
 800f778:	2264      	movs	r2, #100	; 0x64
 800f77a:	4639      	mov	r1, r7
 800f77c:	a84b      	add	r0, sp, #300	; 0x12c
 800f77e:	f010 f86b 	bl	801f858 <memcpy>
 800f782:	f1bb 0f00 	cmp.w	fp, #0
 800f786:	d058      	beq.n	800f83a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800f788:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800f78c:	7922      	ldrb	r2, [r4, #4]
 800f78e:	2a01      	cmp	r2, #1
 800f790:	d13c      	bne.n	800f80c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800f792:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800f796:	1ac0      	subs	r0, r0, r3
 800f798:	2302      	movs	r3, #2
 800f79a:	fb90 f0f3 	sdiv	r0, r0, r3
 800f79e:	b200      	sxth	r0, r0
 800f7a0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800f7a4:	4418      	add	r0, r3
 800f7a6:	7c23      	ldrb	r3, [r4, #16]
 800f7a8:	b200      	sxth	r0, r0
 800f7aa:	2b00      	cmp	r3, #0
 800f7ac:	d03a      	beq.n	800f824 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800f7ae:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800f7b2:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800f7b6:	9000      	str	r0, [sp, #0]
 800f7b8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800f7bc:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800f7c0:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f7c2:	e9cd a703 	strd	sl, r7, [sp, #12]
 800f7c6:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800f7ca:	464a      	mov	r2, r9
 800f7cc:	2100      	movs	r1, #0
 800f7ce:	f7ff fc96 	bl	800f0fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800f7d2:	2800      	cmp	r0, #0
 800f7d4:	d1b9      	bne.n	800f74a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f7d6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800f7da:	b2b2      	uxth	r2, r6
 800f7dc:	4611      	mov	r1, r2
 800f7de:	4413      	add	r3, r2
 800f7e0:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800f7e4:	1a52      	subs	r2, r2, r1
 800f7e6:	7c21      	ldrb	r1, [r4, #16]
 800f7e8:	b21b      	sxth	r3, r3
 800f7ea:	b212      	sxth	r2, r2
 800f7ec:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800f7f0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800f7f4:	b109      	cbz	r1, 800f7fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800f7f6:	42b2      	cmp	r2, r6
 800f7f8:	dba7      	blt.n	800f74a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f7fa:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800f7fe:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800f802:	440a      	add	r2, r1
 800f804:	b212      	sxth	r2, r2
 800f806:	4293      	cmp	r3, r2
 800f808:	dda5      	ble.n	800f756 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800f80a:	e79e      	b.n	800f74a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f80c:	2a02      	cmp	r2, #2
 800f80e:	d105      	bne.n	800f81c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800f810:	7be2      	ldrb	r2, [r4, #15]
 800f812:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800f816:	1a80      	subs	r0, r0, r2
 800f818:	1ac0      	subs	r0, r0, r3
 800f81a:	e7c0      	b.n	800f79e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800f81c:	2000      	movs	r0, #0
 800f81e:	e7bf      	b.n	800f7a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800f820:	7be0      	ldrb	r0, [r4, #15]
 800f822:	e7bd      	b.n	800f7a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800f824:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f828:	e7c3      	b.n	800f7b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800f82a:	9b08      	ldr	r3, [sp, #32]
 800f82c:	2b00      	cmp	r3, #0
 800f82e:	d0f7      	beq.n	800f820 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800f830:	2264      	movs	r2, #100	; 0x64
 800f832:	4639      	mov	r1, r7
 800f834:	a84b      	add	r0, sp, #300	; 0x12c
 800f836:	f010 f80f 	bl	801f858 <memcpy>
 800f83a:	2300      	movs	r3, #0
 800f83c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f840:	6821      	ldr	r1, [r4, #0]
 800f842:	a84b      	add	r0, sp, #300	; 0x12c
 800f844:	f7ff fbee 	bl	800f024 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f848:	b203      	sxth	r3, r0
 800f84a:	e79f      	b.n	800f78c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800f84c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f84c:	2b03      	cmp	r3, #3
 800f84e:	d818      	bhi.n	800f882 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f850:	e8df f003 	tbb	[pc, r3]
 800f854:	130d0602 	.word	0x130d0602
 800f858:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f85c:	1850      	adds	r0, r2, r1
 800f85e:	4770      	bx	lr
 800f860:	8803      	ldrh	r3, [r0, #0]
 800f862:	8880      	ldrh	r0, [r0, #4]
 800f864:	4418      	add	r0, r3
 800f866:	b200      	sxth	r0, r0
 800f868:	1a80      	subs	r0, r0, r2
 800f86a:	3801      	subs	r0, #1
 800f86c:	4770      	bx	lr
 800f86e:	8803      	ldrh	r3, [r0, #0]
 800f870:	8880      	ldrh	r0, [r0, #4]
 800f872:	4418      	add	r0, r3
 800f874:	b200      	sxth	r0, r0
 800f876:	1a40      	subs	r0, r0, r1
 800f878:	e7f7      	b.n	800f86a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f87a:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f87e:	4410      	add	r0, r2
 800f880:	4770      	bx	lr
 800f882:	2000      	movs	r0, #0
 800f884:	4770      	bx	lr

0800f886 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f886:	2b03      	cmp	r3, #3
 800f888:	d817      	bhi.n	800f8ba <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f88a:	e8df f003 	tbb	[pc, r3]
 800f88e:	0602      	.short	0x0602
 800f890:	1009      	.short	0x1009
 800f892:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f896:	1850      	adds	r0, r2, r1
 800f898:	4770      	bx	lr
 800f89a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f89e:	e7fa      	b.n	800f896 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f8a0:	8843      	ldrh	r3, [r0, #2]
 800f8a2:	88c0      	ldrh	r0, [r0, #6]
 800f8a4:	4418      	add	r0, r3
 800f8a6:	b200      	sxth	r0, r0
 800f8a8:	1a80      	subs	r0, r0, r2
 800f8aa:	3801      	subs	r0, #1
 800f8ac:	4770      	bx	lr
 800f8ae:	8843      	ldrh	r3, [r0, #2]
 800f8b0:	88c0      	ldrh	r0, [r0, #6]
 800f8b2:	4418      	add	r0, r3
 800f8b4:	b200      	sxth	r0, r0
 800f8b6:	1a40      	subs	r0, r0, r1
 800f8b8:	e7f7      	b.n	800f8aa <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f8ba:	2000      	movs	r0, #0
 800f8bc:	4770      	bx	lr
	...

0800f8c0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f8c0:	4b01      	ldr	r3, [pc, #4]	; (800f8c8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f8c2:	2200      	movs	r2, #0
 800f8c4:	601a      	str	r2, [r3, #0]
 800f8c6:	4770      	bx	lr
 800f8c8:	20017574 	.word	0x20017574

0800f8cc <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f8cc:	4603      	mov	r3, r0
 800f8ce:	b1c8      	cbz	r0, 800f904 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f8d0:	0c02      	lsrs	r2, r0, #16
 800f8d2:	0412      	lsls	r2, r2, #16
 800f8d4:	b9a2      	cbnz	r2, 800f900 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f8d6:	0403      	lsls	r3, r0, #16
 800f8d8:	2010      	movs	r0, #16
 800f8da:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800f8de:	bf04      	itt	eq
 800f8e0:	021b      	lsleq	r3, r3, #8
 800f8e2:	3008      	addeq	r0, #8
 800f8e4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800f8e8:	bf04      	itt	eq
 800f8ea:	011b      	lsleq	r3, r3, #4
 800f8ec:	3004      	addeq	r0, #4
 800f8ee:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800f8f2:	bf04      	itt	eq
 800f8f4:	009b      	lsleq	r3, r3, #2
 800f8f6:	3002      	addeq	r0, #2
 800f8f8:	2b00      	cmp	r3, #0
 800f8fa:	db04      	blt.n	800f906 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f8fc:	3001      	adds	r0, #1
 800f8fe:	4770      	bx	lr
 800f900:	2000      	movs	r0, #0
 800f902:	e7ea      	b.n	800f8da <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f904:	2020      	movs	r0, #32
 800f906:	4770      	bx	lr

0800f908 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f90c:	b087      	sub	sp, #28
 800f90e:	4681      	mov	r9, r0
 800f910:	4698      	mov	r8, r3
 800f912:	4610      	mov	r0, r2
 800f914:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800f918:	460d      	mov	r5, r1
 800f91a:	b981      	cbnz	r1, 800f93e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800f91c:	b14b      	cbz	r3, 800f932 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800f91e:	460b      	mov	r3, r1
 800f920:	e9cd 4700 	strd	r4, r7, [sp]
 800f924:	464a      	mov	r2, r9
 800f926:	4641      	mov	r1, r8
 800f928:	f7ff ffee 	bl	800f908 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f92c:	b007      	add	sp, #28
 800f92e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f932:	f04f 33ff 	mov.w	r3, #4294967295
 800f936:	603b      	str	r3, [r7, #0]
 800f938:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800f93c:	e7f6      	b.n	800f92c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800f93e:	fa32 fa01 	lsrs.w	sl, r2, r1
 800f942:	d107      	bne.n	800f954 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800f944:	fb09 f602 	mul.w	r6, r9, r2
 800f948:	fbb6 f0f4 	udiv	r0, r6, r4
 800f94c:	fb04 6610 	mls	r6, r4, r0, r6
 800f950:	603e      	str	r6, [r7, #0]
 800f952:	e7eb      	b.n	800f92c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800f954:	2601      	movs	r6, #1
 800f956:	408e      	lsls	r6, r1
 800f958:	3e01      	subs	r6, #1
 800f95a:	4016      	ands	r6, r2
 800f95c:	fa09 fb01 	lsl.w	fp, r9, r1
 800f960:	4630      	mov	r0, r6
 800f962:	fbbb f3f4 	udiv	r3, fp, r4
 800f966:	9302      	str	r3, [sp, #8]
 800f968:	fb0a f303 	mul.w	r3, sl, r3
 800f96c:	9303      	str	r3, [sp, #12]
 800f96e:	f7ff ffad 	bl	800f8cc <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f972:	464a      	mov	r2, r9
 800f974:	460b      	mov	r3, r1
 800f976:	e9cd 4700 	strd	r4, r7, [sp]
 800f97a:	4601      	mov	r1, r0
 800f97c:	4630      	mov	r0, r6
 800f97e:	f7ff ffc3 	bl	800f908 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f982:	9b02      	ldr	r3, [sp, #8]
 800f984:	fb04 bb13 	mls	fp, r4, r3, fp
 800f988:	4606      	mov	r6, r0
 800f98a:	4658      	mov	r0, fp
 800f98c:	eb05 0108 	add.w	r1, r5, r8
 800f990:	f7ff ff9c 	bl	800f8cc <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f994:	ab05      	add	r3, sp, #20
 800f996:	e9cd 4300 	strd	r4, r3, [sp]
 800f99a:	465a      	mov	r2, fp
 800f99c:	4603      	mov	r3, r0
 800f99e:	4650      	mov	r0, sl
 800f9a0:	f7ff ffb2 	bl	800f908 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f9a4:	6839      	ldr	r1, [r7, #0]
 800f9a6:	9a05      	ldr	r2, [sp, #20]
 800f9a8:	9b03      	ldr	r3, [sp, #12]
 800f9aa:	4411      	add	r1, r2
 800f9ac:	fbb1 f2f4 	udiv	r2, r1, r4
 800f9b0:	18d3      	adds	r3, r2, r3
 800f9b2:	441e      	add	r6, r3
 800f9b4:	fb04 1412 	mls	r4, r4, r2, r1
 800f9b8:	4430      	add	r0, r6
 800f9ba:	603c      	str	r4, [r7, #0]
 800f9bc:	e7b6      	b.n	800f92c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800f9be <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f9be:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f9c2:	b085      	sub	sp, #20
 800f9c4:	f1b0 0900 	subs.w	r9, r0, #0
 800f9c8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f9ca:	461d      	mov	r5, r3
 800f9cc:	bfbf      	itttt	lt
 800f9ce:	6823      	ldrlt	r3, [r4, #0]
 800f9d0:	425b      	neglt	r3, r3
 800f9d2:	f1c9 0900 	rsblt	r9, r9, #0
 800f9d6:	6023      	strlt	r3, [r4, #0]
 800f9d8:	bfb4      	ite	lt
 800f9da:	f04f 36ff 	movlt.w	r6, #4294967295
 800f9de:	2601      	movge	r6, #1
 800f9e0:	2a00      	cmp	r2, #0
 800f9e2:	4617      	mov	r7, r2
 800f9e4:	da04      	bge.n	800f9f0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f9e6:	6823      	ldr	r3, [r4, #0]
 800f9e8:	425b      	negs	r3, r3
 800f9ea:	4257      	negs	r7, r2
 800f9ec:	4276      	negs	r6, r6
 800f9ee:	6023      	str	r3, [r4, #0]
 800f9f0:	2d00      	cmp	r5, #0
 800f9f2:	4638      	mov	r0, r7
 800f9f4:	bfba      	itte	lt
 800f9f6:	426d      	neglt	r5, r5
 800f9f8:	f04f 38ff 	movlt.w	r8, #4294967295
 800f9fc:	f04f 0801 	movge.w	r8, #1
 800fa00:	f7ff ff64 	bl	800f8cc <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fa04:	ab03      	add	r3, sp, #12
 800fa06:	e9cd 5300 	strd	r5, r3, [sp]
 800fa0a:	463a      	mov	r2, r7
 800fa0c:	4603      	mov	r3, r0
 800fa0e:	4648      	mov	r0, r9
 800fa10:	f7ff ff7a 	bl	800f908 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fa14:	6823      	ldr	r3, [r4, #0]
 800fa16:	9a03      	ldr	r2, [sp, #12]
 800fa18:	4546      	cmp	r6, r8
 800fa1a:	441a      	add	r2, r3
 800fa1c:	fb92 f3f5 	sdiv	r3, r2, r5
 800fa20:	4418      	add	r0, r3
 800fa22:	bf18      	it	ne
 800fa24:	4240      	negne	r0, r0
 800fa26:	fb05 2313 	mls	r3, r5, r3, r2
 800fa2a:	1c72      	adds	r2, r6, #1
 800fa2c:	6023      	str	r3, [r4, #0]
 800fa2e:	d105      	bne.n	800fa3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800fa30:	2b00      	cmp	r3, #0
 800fa32:	f1c3 0200 	rsb	r2, r3, #0
 800fa36:	db0b      	blt.n	800fa50 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800fa38:	6022      	str	r2, [r4, #0]
 800fa3a:	e006      	b.n	800fa4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fa3c:	2e01      	cmp	r6, #1
 800fa3e:	d104      	bne.n	800fa4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fa40:	2b00      	cmp	r3, #0
 800fa42:	da02      	bge.n	800fa4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fa44:	442b      	add	r3, r5
 800fa46:	3801      	subs	r0, #1
 800fa48:	6023      	str	r3, [r4, #0]
 800fa4a:	b005      	add	sp, #20
 800fa4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fa50:	3801      	subs	r0, #1
 800fa52:	1b52      	subs	r2, r2, r5
 800fa54:	e7f0      	b.n	800fa38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800fa58 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800fa58:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800fa5c:	4c1c      	ldr	r4, [pc, #112]	; (800fad0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800fa5e:	6807      	ldr	r7, [r0, #0]
 800fa60:	69a3      	ldr	r3, [r4, #24]
 800fa62:	4605      	mov	r5, r0
 800fa64:	b92b      	cbnz	r3, 800fa72 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800fa66:	6840      	ldr	r0, [r0, #4]
 800fa68:	e9c5 7000 	strd	r7, r0, [r5]
 800fa6c:	b004      	add	sp, #16
 800fa6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fa72:	68a2      	ldr	r2, [r4, #8]
 800fa74:	6820      	ldr	r0, [r4, #0]
 800fa76:	ae04      	add	r6, sp, #16
 800fa78:	f04f 0802 	mov.w	r8, #2
 800fa7c:	fb93 f1f8 	sdiv	r1, r3, r8
 800fa80:	440a      	add	r2, r1
 800fa82:	f846 2d04 	str.w	r2, [r6, #-4]!
 800fa86:	69e1      	ldr	r1, [r4, #28]
 800fa88:	9600      	str	r6, [sp, #0]
 800fa8a:	463a      	mov	r2, r7
 800fa8c:	f7ff ff97 	bl	800f9be <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fa90:	69a3      	ldr	r3, [r4, #24]
 800fa92:	686a      	ldr	r2, [r5, #4]
 800fa94:	6a21      	ldr	r1, [r4, #32]
 800fa96:	9600      	str	r6, [sp, #0]
 800fa98:	4607      	mov	r7, r0
 800fa9a:	6860      	ldr	r0, [r4, #4]
 800fa9c:	f7ff ff8f 	bl	800f9be <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800faa0:	6962      	ldr	r2, [r4, #20]
 800faa2:	69a3      	ldr	r3, [r4, #24]
 800faa4:	fb93 f8f8 	sdiv	r8, r3, r8
 800faa8:	4442      	add	r2, r8
 800faaa:	9203      	str	r2, [sp, #12]
 800faac:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800faae:	682a      	ldr	r2, [r5, #0]
 800fab0:	9600      	str	r6, [sp, #0]
 800fab2:	4407      	add	r7, r0
 800fab4:	68e0      	ldr	r0, [r4, #12]
 800fab6:	f7ff ff82 	bl	800f9be <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800faba:	9600      	str	r6, [sp, #0]
 800fabc:	4680      	mov	r8, r0
 800fabe:	69a3      	ldr	r3, [r4, #24]
 800fac0:	686a      	ldr	r2, [r5, #4]
 800fac2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800fac4:	6920      	ldr	r0, [r4, #16]
 800fac6:	f7ff ff7a 	bl	800f9be <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800faca:	4440      	add	r0, r8
 800facc:	e7cc      	b.n	800fa68 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800face:	bf00      	nop
 800fad0:	20017578 	.word	0x20017578

0800fad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800fad4:	4b07      	ldr	r3, [pc, #28]	; (800faf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800fad6:	781b      	ldrb	r3, [r3, #0]
 800fad8:	2b01      	cmp	r3, #1
 800fada:	d109      	bne.n	800faf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800fadc:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fae0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fae4:	8003      	strh	r3, [r0, #0]
 800fae6:	4b04      	ldr	r3, [pc, #16]	; (800faf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800fae8:	881b      	ldrh	r3, [r3, #0]
 800faea:	3b01      	subs	r3, #1
 800faec:	1a9b      	subs	r3, r3, r2
 800faee:	800b      	strh	r3, [r1, #0]
 800faf0:	4770      	bx	lr
 800faf2:	bf00      	nop
 800faf4:	2001755c 	.word	0x2001755c
 800faf8:	20017558 	.word	0x20017558

0800fafc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800fafc:	b510      	push	{r4, lr}
 800fafe:	4b07      	ldr	r3, [pc, #28]	; (800fb1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800fb00:	781b      	ldrb	r3, [r3, #0]
 800fb02:	2b01      	cmp	r3, #1
 800fb04:	d108      	bne.n	800fb18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800fb06:	4b06      	ldr	r3, [pc, #24]	; (800fb20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800fb08:	880c      	ldrh	r4, [r1, #0]
 800fb0a:	881b      	ldrh	r3, [r3, #0]
 800fb0c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fb10:	3b01      	subs	r3, #1
 800fb12:	1b1b      	subs	r3, r3, r4
 800fb14:	8003      	strh	r3, [r0, #0]
 800fb16:	800a      	strh	r2, [r1, #0]
 800fb18:	bd10      	pop	{r4, pc}
 800fb1a:	bf00      	nop
 800fb1c:	2001755c 	.word	0x2001755c
 800fb20:	20017558 	.word	0x20017558

0800fb24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800fb24:	b510      	push	{r4, lr}
 800fb26:	4b0a      	ldr	r3, [pc, #40]	; (800fb50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800fb28:	781b      	ldrb	r3, [r3, #0]
 800fb2a:	2b01      	cmp	r3, #1
 800fb2c:	d10e      	bne.n	800fb4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800fb2e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fb32:	8843      	ldrh	r3, [r0, #2]
 800fb34:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fb38:	8044      	strh	r4, [r0, #2]
 800fb3a:	18ca      	adds	r2, r1, r3
 800fb3c:	4b05      	ldr	r3, [pc, #20]	; (800fb54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800fb3e:	881b      	ldrh	r3, [r3, #0]
 800fb40:	1a9b      	subs	r3, r3, r2
 800fb42:	8003      	strh	r3, [r0, #0]
 800fb44:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fb48:	80c3      	strh	r3, [r0, #6]
 800fb4a:	8081      	strh	r1, [r0, #4]
 800fb4c:	bd10      	pop	{r4, pc}
 800fb4e:	bf00      	nop
 800fb50:	2001755c 	.word	0x2001755c
 800fb54:	20017558 	.word	0x20017558

0800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800fb58:	4b08      	ldr	r3, [pc, #32]	; (800fb7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800fb5a:	781b      	ldrb	r3, [r3, #0]
 800fb5c:	2b01      	cmp	r3, #1
 800fb5e:	d10c      	bne.n	800fb7a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800fb60:	8803      	ldrh	r3, [r0, #0]
 800fb62:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800fb66:	8842      	ldrh	r2, [r0, #2]
 800fb68:	8002      	strh	r2, [r0, #0]
 800fb6a:	185a      	adds	r2, r3, r1
 800fb6c:	4b04      	ldr	r3, [pc, #16]	; (800fb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800fb6e:	881b      	ldrh	r3, [r3, #0]
 800fb70:	1a9b      	subs	r3, r3, r2
 800fb72:	8043      	strh	r3, [r0, #2]
 800fb74:	88c3      	ldrh	r3, [r0, #6]
 800fb76:	8083      	strh	r3, [r0, #4]
 800fb78:	80c1      	strh	r1, [r0, #6]
 800fb7a:	4770      	bx	lr
 800fb7c:	2001755c 	.word	0x2001755c
 800fb80:	20017558 	.word	0x20017558

0800fb84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800fb84:	b510      	push	{r4, lr}
 800fb86:	4b07      	ldr	r3, [pc, #28]	; (800fba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800fb88:	781b      	ldrb	r3, [r3, #0]
 800fb8a:	2b01      	cmp	r3, #1
 800fb8c:	d108      	bne.n	800fba0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800fb8e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fb92:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fb96:	8003      	strh	r3, [r0, #0]
 800fb98:	8893      	ldrh	r3, [r2, #4]
 800fb9a:	3b01      	subs	r3, #1
 800fb9c:	1b1b      	subs	r3, r3, r4
 800fb9e:	800b      	strh	r3, [r1, #0]
 800fba0:	bd10      	pop	{r4, pc}
 800fba2:	bf00      	nop
 800fba4:	2001755c 	.word	0x2001755c

0800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800fba8:	b510      	push	{r4, lr}
 800fbaa:	4b0a      	ldr	r3, [pc, #40]	; (800fbd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800fbac:	781b      	ldrb	r3, [r3, #0]
 800fbae:	2b01      	cmp	r3, #1
 800fbb0:	460a      	mov	r2, r1
 800fbb2:	d10d      	bne.n	800fbd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800fbb4:	8881      	ldrh	r1, [r0, #4]
 800fbb6:	8803      	ldrh	r3, [r0, #0]
 800fbb8:	440b      	add	r3, r1
 800fbba:	4601      	mov	r1, r0
 800fbbc:	3b01      	subs	r3, #1
 800fbbe:	f821 3b02 	strh.w	r3, [r1], #2
 800fbc2:	f7ff ffdf 	bl	800fb84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800fbc6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fbca:	88c2      	ldrh	r2, [r0, #6]
 800fbcc:	8082      	strh	r2, [r0, #4]
 800fbce:	80c3      	strh	r3, [r0, #6]
 800fbd0:	bd10      	pop	{r4, pc}
 800fbd2:	bf00      	nop
 800fbd4:	2001755c 	.word	0x2001755c

0800fbd8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800fbd8:	b570      	push	{r4, r5, r6, lr}
 800fbda:	4c0b      	ldr	r4, [pc, #44]	; (800fc08 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800fbdc:	2300      	movs	r3, #0
 800fbde:	4605      	mov	r5, r0
 800fbe0:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800fbe4:	6820      	ldr	r0, [r4, #0]
 800fbe6:	460e      	mov	r6, r1
 800fbe8:	b110      	cbz	r0, 800fbf0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 800fbea:	6803      	ldr	r3, [r0, #0]
 800fbec:	695b      	ldr	r3, [r3, #20]
 800fbee:	4798      	blx	r3
 800fbf0:	6026      	str	r6, [r4, #0]
 800fbf2:	6833      	ldr	r3, [r6, #0]
 800fbf4:	4630      	mov	r0, r6
 800fbf6:	68db      	ldr	r3, [r3, #12]
 800fbf8:	4798      	blx	r3
 800fbfa:	682b      	ldr	r3, [r5, #0]
 800fbfc:	4628      	mov	r0, r5
 800fbfe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fc00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fc04:	4718      	bx	r3
 800fc06:	bf00      	nop
 800fc08:	200175a8 	.word	0x200175a8

0800fc0c <_ZN8touchgfx11Application13requestRedrawEv>:
 800fc0c:	4b06      	ldr	r3, [pc, #24]	; (800fc28 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800fc0e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc12:	4b06      	ldr	r3, [pc, #24]	; (800fc2c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800fc14:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800fc18:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fc1c:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800fc20:	2100      	movs	r1, #0
 800fc22:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800fc26:	4770      	bx	lr
 800fc28:	20017558 	.word	0x20017558
 800fc2c:	2001755a 	.word	0x2001755a

0800fc30 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800fc30:	4b03      	ldr	r3, [pc, #12]	; (800fc40 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800fc32:	6818      	ldr	r0, [r3, #0]
 800fc34:	b110      	cbz	r0, 800fc3c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800fc36:	6803      	ldr	r3, [r0, #0]
 800fc38:	699b      	ldr	r3, [r3, #24]
 800fc3a:	4718      	bx	r3
 800fc3c:	4770      	bx	lr
 800fc3e:	bf00      	nop
 800fc40:	200175a8 	.word	0x200175a8

0800fc44 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800fc44:	4770      	bx	lr
	...

0800fc48 <_ZN8touchgfx11Application4drawEv>:
 800fc48:	b507      	push	{r0, r1, r2, lr}
 800fc4a:	4b09      	ldr	r3, [pc, #36]	; (800fc70 <_ZN8touchgfx11Application4drawEv+0x28>)
 800fc4c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc50:	4b08      	ldr	r3, [pc, #32]	; (800fc74 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800fc52:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fc56:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fc5a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fc5e:	6803      	ldr	r3, [r0, #0]
 800fc60:	2100      	movs	r1, #0
 800fc62:	9100      	str	r1, [sp, #0]
 800fc64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fc66:	4669      	mov	r1, sp
 800fc68:	4798      	blx	r3
 800fc6a:	b003      	add	sp, #12
 800fc6c:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc70:	20017558 	.word	0x20017558
 800fc74:	2001755a 	.word	0x2001755a

0800fc78 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800fc78:	4b03      	ldr	r3, [pc, #12]	; (800fc88 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800fc7a:	6818      	ldr	r0, [r3, #0]
 800fc7c:	b110      	cbz	r0, 800fc84 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800fc7e:	6803      	ldr	r3, [r0, #0]
 800fc80:	69db      	ldr	r3, [r3, #28]
 800fc82:	4718      	bx	r3
 800fc84:	4770      	bx	lr
 800fc86:	bf00      	nop
 800fc88:	200175a8 	.word	0x200175a8

0800fc8c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800fc8c:	4b03      	ldr	r3, [pc, #12]	; (800fc9c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800fc8e:	6818      	ldr	r0, [r3, #0]
 800fc90:	b110      	cbz	r0, 800fc98 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800fc92:	6803      	ldr	r3, [r0, #0]
 800fc94:	6a1b      	ldr	r3, [r3, #32]
 800fc96:	4718      	bx	r3
 800fc98:	4770      	bx	lr
 800fc9a:	bf00      	nop
 800fc9c:	200175a8 	.word	0x200175a8

0800fca0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800fca0:	2300      	movs	r3, #0
 800fca2:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800fca6:	4770      	bx	lr

0800fca8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800fca8:	4b03      	ldr	r3, [pc, #12]	; (800fcb8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800fcaa:	6818      	ldr	r0, [r3, #0]
 800fcac:	b110      	cbz	r0, 800fcb4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800fcae:	6803      	ldr	r3, [r0, #0]
 800fcb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fcb2:	4718      	bx	r3
 800fcb4:	4770      	bx	lr
 800fcb6:	bf00      	nop
 800fcb8:	200175a8 	.word	0x200175a8

0800fcbc <_ZN8touchgfx11Application15handleTickEventEv>:
 800fcbc:	b570      	push	{r4, r5, r6, lr}
 800fcbe:	4d32      	ldr	r5, [pc, #200]	; (800fd88 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 800fcc0:	4604      	mov	r4, r0
 800fcc2:	6828      	ldr	r0, [r5, #0]
 800fcc4:	b140      	cbz	r0, 800fcd8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fcc6:	7a03      	ldrb	r3, [r0, #8]
 800fcc8:	b933      	cbnz	r3, 800fcd8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fcca:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800fcce:	6803      	ldr	r3, [r0, #0]
 800fcd0:	689b      	ldr	r3, [r3, #8]
 800fcd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fcd6:	4718      	bx	r3
 800fcd8:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800fcdc:	b97b      	cbnz	r3, 800fcfe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fcde:	b170      	cbz	r0, 800fcfe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fce0:	7a03      	ldrb	r3, [r0, #8]
 800fce2:	b163      	cbz	r3, 800fcfe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fce4:	4b29      	ldr	r3, [pc, #164]	; (800fd8c <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 800fce6:	6818      	ldr	r0, [r3, #0]
 800fce8:	b110      	cbz	r0, 800fcf0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800fcea:	6803      	ldr	r3, [r0, #0]
 800fcec:	691b      	ldr	r3, [r3, #16]
 800fcee:	4798      	blx	r3
 800fcf0:	6828      	ldr	r0, [r5, #0]
 800fcf2:	6803      	ldr	r3, [r0, #0]
 800fcf4:	68db      	ldr	r3, [r3, #12]
 800fcf6:	4798      	blx	r3
 800fcf8:	2301      	movs	r3, #1
 800fcfa:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800fcfe:	2500      	movs	r5, #0
 800fd00:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800fd04:	42a8      	cmp	r0, r5
 800fd06:	dd0c      	ble.n	800fd22 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800fd08:	1963      	adds	r3, r4, r5
 800fd0a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800fd0e:	b132      	cbz	r2, 800fd1e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800fd10:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800fd14:	4413      	add	r3, r2
 800fd16:	6858      	ldr	r0, [r3, #4]
 800fd18:	6803      	ldr	r3, [r0, #0]
 800fd1a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fd1c:	4798      	blx	r3
 800fd1e:	3501      	adds	r5, #1
 800fd20:	e7ee      	b.n	800fd00 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800fd22:	2300      	movs	r3, #0
 800fd24:	461a      	mov	r2, r3
 800fd26:	4298      	cmp	r0, r3
 800fd28:	d015      	beq.n	800fd56 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800fd2a:	18e1      	adds	r1, r4, r3
 800fd2c:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800fd30:	b16d      	cbz	r5, 800fd4e <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 800fd32:	429a      	cmp	r2, r3
 800fd34:	d00a      	beq.n	800fd4c <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 800fd36:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800fd3a:	4431      	add	r1, r6
 800fd3c:	684e      	ldr	r6, [r1, #4]
 800fd3e:	b291      	uxth	r1, r2
 800fd40:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800fd44:	604e      	str	r6, [r1, #4]
 800fd46:	18a1      	adds	r1, r4, r2
 800fd48:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800fd4c:	3201      	adds	r2, #1
 800fd4e:	3301      	adds	r3, #1
 800fd50:	e7e9      	b.n	800fd26 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800fd52:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800fd56:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 800fd5a:	4295      	cmp	r5, r2
 800fd5c:	dd0d      	ble.n	800fd7a <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 800fd5e:	1e6b      	subs	r3, r5, #1
 800fd60:	b29b      	uxth	r3, r3
 800fd62:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 800fd66:	4618      	mov	r0, r3
 800fd68:	3104      	adds	r1, #4
 800fd6a:	4285      	cmp	r5, r0
 800fd6c:	ddf1      	ble.n	800fd52 <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 800fd6e:	f851 6f04 	ldr.w	r6, [r1, #4]!
 800fd72:	f841 6c04 	str.w	r6, [r1, #-4]
 800fd76:	3001      	adds	r0, #1
 800fd78:	e7f7      	b.n	800fd6a <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 800fd7a:	4b04      	ldr	r3, [pc, #16]	; (800fd8c <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 800fd7c:	6818      	ldr	r0, [r3, #0]
 800fd7e:	b110      	cbz	r0, 800fd86 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800fd80:	6803      	ldr	r3, [r0, #0]
 800fd82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fd84:	e7a5      	b.n	800fcd2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800fd86:	bd70      	pop	{r4, r5, r6, pc}
 800fd88:	200175ac 	.word	0x200175ac
 800fd8c:	200175a8 	.word	0x200175a8

0800fd90 <_ZN8touchgfx11ApplicationD1Ev>:
 800fd90:	4770      	bx	lr

0800fd92 <_ZN8touchgfx11ApplicationD0Ev>:
 800fd92:	b510      	push	{r4, lr}
 800fd94:	f44f 719c 	mov.w	r1, #312	; 0x138
 800fd98:	4604      	mov	r4, r0
 800fd9a:	f00f fbb7 	bl	801f50c <_ZdlPvj>
 800fd9e:	4620      	mov	r0, r4
 800fda0:	bd10      	pop	{r4, pc}

0800fda2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800fda2:	b510      	push	{r4, lr}
 800fda4:	f9b1 4000 	ldrsh.w	r4, [r1]
 800fda8:	888a      	ldrh	r2, [r1, #4]
 800fdaa:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fdae:	4422      	add	r2, r4
 800fdb0:	b212      	sxth	r2, r2
 800fdb2:	4293      	cmp	r3, r2
 800fdb4:	da15      	bge.n	800fde2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fdb6:	8882      	ldrh	r2, [r0, #4]
 800fdb8:	4413      	add	r3, r2
 800fdba:	b21b      	sxth	r3, r3
 800fdbc:	429c      	cmp	r4, r3
 800fdbe:	da10      	bge.n	800fde2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fdc0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800fdc4:	88c9      	ldrh	r1, [r1, #6]
 800fdc6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800fdca:	4419      	add	r1, r3
 800fdcc:	b209      	sxth	r1, r1
 800fdce:	428a      	cmp	r2, r1
 800fdd0:	da07      	bge.n	800fde2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fdd2:	88c0      	ldrh	r0, [r0, #6]
 800fdd4:	4410      	add	r0, r2
 800fdd6:	b200      	sxth	r0, r0
 800fdd8:	4283      	cmp	r3, r0
 800fdda:	bfac      	ite	ge
 800fddc:	2000      	movge	r0, #0
 800fdde:	2001      	movlt	r0, #1
 800fde0:	bd10      	pop	{r4, pc}
 800fde2:	2000      	movs	r0, #0
 800fde4:	e7fc      	b.n	800fde0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800fde6 <_ZN8touchgfx4Rect10restrictToEss>:
 800fde6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fdea:	2b00      	cmp	r3, #0
 800fdec:	b510      	push	{r4, lr}
 800fdee:	da04      	bge.n	800fdfa <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800fdf0:	8884      	ldrh	r4, [r0, #4]
 800fdf2:	4423      	add	r3, r4
 800fdf4:	8083      	strh	r3, [r0, #4]
 800fdf6:	2300      	movs	r3, #0
 800fdf8:	8003      	strh	r3, [r0, #0]
 800fdfa:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fdfe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fe02:	1b09      	subs	r1, r1, r4
 800fe04:	428b      	cmp	r3, r1
 800fe06:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800fe0a:	bfc8      	it	gt
 800fe0c:	8081      	strhgt	r1, [r0, #4]
 800fe0e:	2b00      	cmp	r3, #0
 800fe10:	da04      	bge.n	800fe1c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800fe12:	88c1      	ldrh	r1, [r0, #6]
 800fe14:	440b      	add	r3, r1
 800fe16:	80c3      	strh	r3, [r0, #6]
 800fe18:	2300      	movs	r3, #0
 800fe1a:	8043      	strh	r3, [r0, #2]
 800fe1c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800fe20:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800fe24:	1a52      	subs	r2, r2, r1
 800fe26:	4293      	cmp	r3, r2
 800fe28:	bfc8      	it	gt
 800fe2a:	80c2      	strhgt	r2, [r0, #6]
 800fe2c:	bd10      	pop	{r4, pc}
	...

0800fe30 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800fe30:	b510      	push	{r4, lr}
 800fe32:	4b10      	ldr	r3, [pc, #64]	; (800fe74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800fe34:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fe38:	4b0f      	ldr	r3, [pc, #60]	; (800fe78 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800fe3a:	460c      	mov	r4, r1
 800fe3c:	4620      	mov	r0, r4
 800fe3e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fe42:	f7ff ffd0 	bl	800fde6 <_ZN8touchgfx4Rect10restrictToEss>
 800fe46:	4b0d      	ldr	r3, [pc, #52]	; (800fe7c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800fe48:	6818      	ldr	r0, [r3, #0]
 800fe4a:	b190      	cbz	r0, 800fe72 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800fe4c:	6803      	ldr	r3, [r0, #0]
 800fe4e:	4621      	mov	r1, r4
 800fe50:	689b      	ldr	r3, [r3, #8]
 800fe52:	4798      	blx	r3
 800fe54:	4b0a      	ldr	r3, [pc, #40]	; (800fe80 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800fe56:	6818      	ldr	r0, [r3, #0]
 800fe58:	b118      	cbz	r0, 800fe62 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800fe5a:	6803      	ldr	r3, [r0, #0]
 800fe5c:	4621      	mov	r1, r4
 800fe5e:	689b      	ldr	r3, [r3, #8]
 800fe60:	4798      	blx	r3
 800fe62:	4b08      	ldr	r3, [pc, #32]	; (800fe84 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800fe64:	6818      	ldr	r0, [r3, #0]
 800fe66:	6803      	ldr	r3, [r0, #0]
 800fe68:	4621      	mov	r1, r4
 800fe6a:	69db      	ldr	r3, [r3, #28]
 800fe6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe70:	4718      	bx	r3
 800fe72:	bd10      	pop	{r4, pc}
 800fe74:	2001755a 	.word	0x2001755a
 800fe78:	20017558 	.word	0x20017558
 800fe7c:	200175a8 	.word	0x200175a8
 800fe80:	200175a4 	.word	0x200175a4
 800fe84:	20017564 	.word	0x20017564

0800fe88 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800fe88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fe8a:	4606      	mov	r6, r0
 800fe8c:	4608      	mov	r0, r1
 800fe8e:	460f      	mov	r7, r1
 800fe90:	f7fa f907 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe94:	b9e8      	cbnz	r0, 800fed2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe96:	f9b7 5000 	ldrsh.w	r5, [r7]
 800fe9a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800fe9e:	42a5      	cmp	r5, r4
 800fea0:	db17      	blt.n	800fed2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fea2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800fea6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800feaa:	429a      	cmp	r2, r3
 800feac:	db11      	blt.n	800fed2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800feae:	88b9      	ldrh	r1, [r7, #4]
 800feb0:	440d      	add	r5, r1
 800feb2:	88b1      	ldrh	r1, [r6, #4]
 800feb4:	440c      	add	r4, r1
 800feb6:	b22d      	sxth	r5, r5
 800feb8:	b224      	sxth	r4, r4
 800feba:	42a5      	cmp	r5, r4
 800febc:	dc09      	bgt.n	800fed2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800febe:	88f8      	ldrh	r0, [r7, #6]
 800fec0:	4410      	add	r0, r2
 800fec2:	88f2      	ldrh	r2, [r6, #6]
 800fec4:	4413      	add	r3, r2
 800fec6:	b200      	sxth	r0, r0
 800fec8:	b21b      	sxth	r3, r3
 800feca:	4298      	cmp	r0, r3
 800fecc:	bfcc      	ite	gt
 800fece:	2000      	movgt	r0, #0
 800fed0:	2001      	movle	r0, #1
 800fed2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800fed4 <_ZN8touchgfx11Application11getInstanceEv>:
 800fed4:	4b01      	ldr	r3, [pc, #4]	; (800fedc <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800fed6:	6818      	ldr	r0, [r3, #0]
 800fed8:	4770      	bx	lr
 800feda:	bf00      	nop
 800fedc:	200175b8 	.word	0x200175b8

0800fee0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800fee0:	2300      	movs	r3, #0
 800fee2:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800fee6:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800feea:	30a8      	adds	r0, #168	; 0xa8
 800feec:	f802 3b01 	strb.w	r3, [r2], #1
 800fef0:	4282      	cmp	r2, r0
 800fef2:	d1fb      	bne.n	800feec <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800fef4:	4770      	bx	lr

0800fef6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800fef6:	4603      	mov	r3, r0
 800fef8:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800fefc:	2200      	movs	r2, #0
 800fefe:	801a      	strh	r2, [r3, #0]
 800ff00:	805a      	strh	r2, [r3, #2]
 800ff02:	809a      	strh	r2, [r3, #4]
 800ff04:	80da      	strh	r2, [r3, #6]
 800ff06:	3308      	adds	r3, #8
 800ff08:	428b      	cmp	r3, r1
 800ff0a:	d1f8      	bne.n	800fefe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ff0c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ff10:	4770      	bx	lr
	...

0800ff14 <_ZN8touchgfx11ApplicationC1Ev>:
 800ff14:	b570      	push	{r4, r5, r6, lr}
 800ff16:	4b19      	ldr	r3, [pc, #100]	; (800ff7c <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800ff18:	6003      	str	r3, [r0, #0]
 800ff1a:	2500      	movs	r5, #0
 800ff1c:	4604      	mov	r4, r0
 800ff1e:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800ff22:	30a8      	adds	r0, #168	; 0xa8
 800ff24:	f7ff ffe7 	bl	800fef6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ff28:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800ff2c:	f7ff ffe3 	bl	800fef6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ff30:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800ff34:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800ff38:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800ff3c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800ff40:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800ff44:	490e      	ldr	r1, [pc, #56]	; (800ff80 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800ff46:	480f      	ldr	r0, [pc, #60]	; (800ff84 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800ff48:	4e0f      	ldr	r6, [pc, #60]	; (800ff88 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800ff4a:	f00e fec3 	bl	801ecd4 <CRC_Lock>
 800ff4e:	4b0f      	ldr	r3, [pc, #60]	; (800ff8c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ff50:	b158      	cbz	r0, 800ff6a <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800ff52:	801d      	strh	r5, [r3, #0]
 800ff54:	4a0e      	ldr	r2, [pc, #56]	; (800ff90 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ff56:	2300      	movs	r3, #0
 800ff58:	6013      	str	r3, [r2, #0]
 800ff5a:	4a0e      	ldr	r2, [pc, #56]	; (800ff94 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800ff5c:	6033      	str	r3, [r6, #0]
 800ff5e:	4620      	mov	r0, r4
 800ff60:	6013      	str	r3, [r2, #0]
 800ff62:	f7ff ffbd 	bl	800fee0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800ff66:	4620      	mov	r0, r4
 800ff68:	bd70      	pop	{r4, r5, r6, pc}
 800ff6a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ff6e:	2002      	movs	r0, #2
 800ff70:	801a      	strh	r2, [r3, #0]
 800ff72:	6030      	str	r0, [r6, #0]
 800ff74:	f001 fae8 	bl	8011548 <_ZN8touchgfx6Screen4drawEv>
 800ff78:	e7ec      	b.n	800ff54 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800ff7a:	bf00      	nop
 800ff7c:	08022c9c 	.word	0x08022c9c
 800ff80:	b5e8b5cd 	.word	0xb5e8b5cd
 800ff84:	f407a5c2 	.word	0xf407a5c2
 800ff88:	200175a8 	.word	0x200175a8
 800ff8c:	20000088 	.word	0x20000088
 800ff90:	200175b8 	.word	0x200175b8
 800ff94:	200175ac 	.word	0x200175ac

0800ff98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800ff98:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800ff9c:	3b01      	subs	r3, #1
 800ff9e:	b29b      	uxth	r3, r3
 800ffa0:	428b      	cmp	r3, r1
 800ffa2:	b510      	push	{r4, lr}
 800ffa4:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800ffa8:	d908      	bls.n	800ffbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800ffaa:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800ffae:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800ffb2:	681a      	ldr	r2, [r3, #0]
 800ffb4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800ffb8:	685a      	ldr	r2, [r3, #4]
 800ffba:	6062      	str	r2, [r4, #4]
 800ffbc:	bd10      	pop	{r4, pc}
	...

0800ffc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800ffc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffc4:	4b94      	ldr	r3, [pc, #592]	; (8010218 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800ffc6:	b08f      	sub	sp, #60	; 0x3c
 800ffc8:	ac0a      	add	r4, sp, #40	; 0x28
 800ffca:	e884 0006 	stmia.w	r4, {r1, r2}
 800ffce:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ffd2:	4b92      	ldr	r3, [pc, #584]	; (801021c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800ffd4:	4683      	mov	fp, r0
 800ffd6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ffda:	4620      	mov	r0, r4
 800ffdc:	f7ff ff03 	bl	800fde6 <_ZN8touchgfx4Rect10restrictToEss>
 800ffe0:	4620      	mov	r0, r4
 800ffe2:	f7fa f85e 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ffe6:	2800      	cmp	r0, #0
 800ffe8:	d16a      	bne.n	80100c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800ffea:	9403      	str	r4, [sp, #12]
 800ffec:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800fff0:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800fff4:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800fff8:	2400      	movs	r4, #0
 800fffa:	9301      	str	r3, [sp, #4]
 800fffc:	36a0      	adds	r6, #160	; 0xa0
 800fffe:	42a5      	cmp	r5, r4
 8010000:	d00d      	beq.n	801001e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8010002:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8010006:	9803      	ldr	r0, [sp, #12]
 8010008:	f7ff ff3e 	bl	800fe88 <_ZNK8touchgfx4Rect8includesERKS0_>
 801000c:	b128      	cbz	r0, 801001a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 801000e:	1e69      	subs	r1, r5, #1
 8010010:	1b09      	subs	r1, r1, r4
 8010012:	b289      	uxth	r1, r1
 8010014:	9801      	ldr	r0, [sp, #4]
 8010016:	f7ff ffbf 	bl	800ff98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801001a:	3401      	adds	r4, #1
 801001c:	e7ef      	b.n	800fffe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 801001e:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8010022:	9704      	str	r7, [sp, #16]
 8010024:	1e7b      	subs	r3, r7, #1
 8010026:	9302      	str	r3, [sp, #8]
 8010028:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 801002c:	2400      	movs	r4, #0
 801002e:	4655      	mov	r5, sl
 8010030:	9705      	str	r7, [sp, #20]
 8010032:	4626      	mov	r6, r4
 8010034:	9b05      	ldr	r3, [sp, #20]
 8010036:	2b00      	cmp	r3, #0
 8010038:	d078      	beq.n	801012c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 801003a:	9903      	ldr	r1, [sp, #12]
 801003c:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8010040:	f7ff feaf 	bl	800fda2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010044:	b360      	cbz	r0, 80100a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010046:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801004a:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 801004e:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 8010052:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8010056:	45e6      	cmp	lr, ip
 8010058:	db35      	blt.n	80100c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801005a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801005e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8010062:	4472      	add	r2, lr
 8010064:	4463      	add	r3, ip
 8010066:	b212      	sxth	r2, r2
 8010068:	b21b      	sxth	r3, r3
 801006a:	429a      	cmp	r2, r3
 801006c:	dc2b      	bgt.n	80100c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801006e:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8010072:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010076:	fa1f f288 	uxth.w	r2, r8
 801007a:	4413      	add	r3, r2
 801007c:	b29b      	uxth	r3, r3
 801007e:	45c1      	cmp	r9, r8
 8010080:	fa0f fe83 	sxth.w	lr, r3
 8010084:	fa1f fc89 	uxth.w	ip, r9
 8010088:	db0f      	blt.n	80100aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801008a:	eba3 030c 	sub.w	r3, r3, ip
 801008e:	1ac9      	subs	r1, r1, r3
 8010090:	b209      	sxth	r1, r1
 8010092:	2900      	cmp	r1, #0
 8010094:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010098:	dd12      	ble.n	80100c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801009a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801009e:	4604      	mov	r4, r0
 80100a0:	9b05      	ldr	r3, [sp, #20]
 80100a2:	3b01      	subs	r3, #1
 80100a4:	9305      	str	r3, [sp, #20]
 80100a6:	3d08      	subs	r5, #8
 80100a8:	e7c4      	b.n	8010034 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 80100aa:	4461      	add	r1, ip
 80100ac:	b209      	sxth	r1, r1
 80100ae:	4571      	cmp	r1, lr
 80100b0:	dc3a      	bgt.n	8010128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80100b2:	eba2 020c 	sub.w	r2, r2, ip
 80100b6:	b212      	sxth	r2, r2
 80100b8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80100bc:	2a00      	cmp	r2, #0
 80100be:	dcee      	bgt.n	801009e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80100c0:	b00f      	add	sp, #60	; 0x3c
 80100c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100c6:	45c1      	cmp	r9, r8
 80100c8:	db2e      	blt.n	8010128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80100ca:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80100ce:	4499      	add	r9, r3
 80100d0:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80100d4:	4498      	add	r8, r3
 80100d6:	fa0f f989 	sxth.w	r9, r9
 80100da:	fa0f f888 	sxth.w	r8, r8
 80100de:	45c1      	cmp	r9, r8
 80100e0:	dc22      	bgt.n	8010128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80100e2:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80100e6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80100ea:	fa1f f28c 	uxth.w	r2, ip
 80100ee:	4413      	add	r3, r2
 80100f0:	b29b      	uxth	r3, r3
 80100f2:	45e6      	cmp	lr, ip
 80100f4:	fa1f f88e 	uxth.w	r8, lr
 80100f8:	fa0f f983 	sxth.w	r9, r3
 80100fc:	db0a      	blt.n	8010114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80100fe:	eba3 0308 	sub.w	r3, r3, r8
 8010102:	1ac9      	subs	r1, r1, r3
 8010104:	b209      	sxth	r1, r1
 8010106:	2900      	cmp	r1, #0
 8010108:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801010c:	ddd8      	ble.n	80100c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801010e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8010112:	e7c4      	b.n	801009e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010114:	4441      	add	r1, r8
 8010116:	b209      	sxth	r1, r1
 8010118:	4549      	cmp	r1, r9
 801011a:	dc05      	bgt.n	8010128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801011c:	eba2 0208 	sub.w	r2, r2, r8
 8010120:	b212      	sxth	r2, r2
 8010122:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8010126:	e7c9      	b.n	80100bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8010128:	4606      	mov	r6, r0
 801012a:	e7b9      	b.n	80100a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801012c:	2c00      	cmp	r4, #0
 801012e:	f47f af7d 	bne.w	801002c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 8010132:	2e00      	cmp	r6, #0
 8010134:	f000 81e1 	beq.w	80104fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8010138:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801013c:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8010140:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8010144:	b2b9      	uxth	r1, r7
 8010146:	9105      	str	r1, [sp, #20]
 8010148:	9805      	ldr	r0, [sp, #20]
 801014a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801014e:	4401      	add	r1, r0
 8010150:	b2b3      	uxth	r3, r6
 8010152:	b289      	uxth	r1, r1
 8010154:	441a      	add	r2, r3
 8010156:	9106      	str	r1, [sp, #24]
 8010158:	b292      	uxth	r2, r2
 801015a:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 801015e:	fa0f f882 	sxth.w	r8, r2
 8010162:	4655      	mov	r5, sl
 8010164:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8010168:	9b04      	ldr	r3, [sp, #16]
 801016a:	2b00      	cmp	r3, #0
 801016c:	d058      	beq.n	8010220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 801016e:	9903      	ldr	r1, [sp, #12]
 8010170:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8010174:	f7ff fe15 	bl	800fda2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010178:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801017c:	b1d8      	cbz	r0, 80101b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801017e:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8010182:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8010186:	4576      	cmp	r6, lr
 8010188:	dc26      	bgt.n	80101d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801018a:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801018e:	44f4      	add	ip, lr
 8010190:	fa0f fc8c 	sxth.w	ip, ip
 8010194:	45e0      	cmp	r8, ip
 8010196:	db1f      	blt.n	80101d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8010198:	428f      	cmp	r7, r1
 801019a:	fa1f fc81 	uxth.w	ip, r1
 801019e:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 80101a2:	dc0f      	bgt.n	80101c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 80101a4:	9806      	ldr	r0, [sp, #24]
 80101a6:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 80101aa:	eba0 0c0c 	sub.w	ip, r0, ip
 80101ae:	eba1 010c 	sub.w	r1, r1, ip
 80101b2:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 80101b6:	4620      	mov	r0, r4
 80101b8:	9904      	ldr	r1, [sp, #16]
 80101ba:	3901      	subs	r1, #1
 80101bc:	9104      	str	r1, [sp, #16]
 80101be:	3d08      	subs	r5, #8
 80101c0:	4604      	mov	r4, r0
 80101c2:	e7cf      	b.n	8010164 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 80101c4:	4461      	add	r1, ip
 80101c6:	b209      	sxth	r1, r1
 80101c8:	4549      	cmp	r1, r9
 80101ca:	dcf5      	bgt.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80101cc:	9905      	ldr	r1, [sp, #20]
 80101ce:	eba1 0c0c 	sub.w	ip, r1, ip
 80101d2:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 80101d6:	e7ee      	b.n	80101b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80101d8:	428f      	cmp	r7, r1
 80101da:	dced      	bgt.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80101dc:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 80101e0:	4461      	add	r1, ip
 80101e2:	b209      	sxth	r1, r1
 80101e4:	4589      	cmp	r9, r1
 80101e6:	dbe7      	blt.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80101e8:	4576      	cmp	r6, lr
 80101ea:	fa1f fc8e 	uxth.w	ip, lr
 80101ee:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80101f2:	dc08      	bgt.n	8010206 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80101f4:	eba2 0c0c 	sub.w	ip, r2, ip
 80101f8:	eba1 010c 	sub.w	r1, r1, ip
 80101fc:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8010200:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8010204:	e7d7      	b.n	80101b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8010206:	4461      	add	r1, ip
 8010208:	b209      	sxth	r1, r1
 801020a:	4588      	cmp	r8, r1
 801020c:	dbd4      	blt.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801020e:	eba3 0c0c 	sub.w	ip, r3, ip
 8010212:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8010216:	e7ce      	b.n	80101b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8010218:	2001755a 	.word	0x2001755a
 801021c:	20017558 	.word	0x20017558
 8010220:	2c00      	cmp	r4, #0
 8010222:	f000 816a 	beq.w	80104fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8010226:	9b02      	ldr	r3, [sp, #8]
 8010228:	3301      	adds	r3, #1
 801022a:	f000 8166 	beq.w	80104fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801022e:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8010232:	4621      	mov	r1, r4
 8010234:	9803      	ldr	r0, [sp, #12]
 8010236:	f7ff fe27 	bl	800fe88 <_ZNK8touchgfx4Rect8includesERKS0_>
 801023a:	b120      	cbz	r0, 8010246 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 801023c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8010240:	9801      	ldr	r0, [sp, #4]
 8010242:	f7ff fea9 	bl	800ff98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010246:	9903      	ldr	r1, [sp, #12]
 8010248:	4620      	mov	r0, r4
 801024a:	f7ff fdaa 	bl	800fda2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801024e:	2800      	cmp	r0, #0
 8010250:	f000 809b 	beq.w	801038a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8010254:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 8010258:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 801025c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8010260:	9309      	str	r3, [sp, #36]	; 0x24
 8010262:	b281      	uxth	r1, r0
 8010264:	eb01 0c03 	add.w	ip, r1, r3
 8010268:	fa1f f98c 	uxth.w	r9, ip
 801026c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8010270:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8010274:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8010278:	b2ab      	uxth	r3, r5
 801027a:	eb03 040c 	add.w	r4, r3, ip
 801027e:	b2a4      	uxth	r4, r4
 8010280:	9405      	str	r4, [sp, #20]
 8010282:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8010286:	9404      	str	r4, [sp, #16]
 8010288:	4285      	cmp	r5, r0
 801028a:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801028e:	f340 809a 	ble.w	80103c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 8010292:	1a5b      	subs	r3, r3, r1
 8010294:	b29b      	uxth	r3, r3
 8010296:	4596      	cmp	lr, r2
 8010298:	fa0f f589 	sxth.w	r5, r9
 801029c:	b21e      	sxth	r6, r3
 801029e:	dd2e      	ble.n	80102fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 80102a0:	9f02      	ldr	r7, [sp, #8]
 80102a2:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 80102a6:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80102aa:	9f04      	ldr	r7, [sp, #16]
 80102ac:	1b7f      	subs	r7, r7, r5
 80102ae:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 80102b2:	fa1f fe8e 	uxth.w	lr, lr
 80102b6:	b292      	uxth	r2, r2
 80102b8:	ebae 0102 	sub.w	r1, lr, r2
 80102bc:	4486      	add	lr, r0
 80102be:	442a      	add	r2, r5
 80102c0:	b289      	uxth	r1, r1
 80102c2:	fa0f fe8e 	sxth.w	lr, lr
 80102c6:	b212      	sxth	r2, r2
 80102c8:	b20c      	sxth	r4, r1
 80102ca:	ebae 0202 	sub.w	r2, lr, r2
 80102ce:	4367      	muls	r7, r4
 80102d0:	4372      	muls	r2, r6
 80102d2:	4297      	cmp	r7, r2
 80102d4:	db09      	blt.n	80102ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 80102d6:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 80102da:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 80102de:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80102e2:	449c      	add	ip, r3
 80102e4:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80102e8:	e680      	b.n	800ffec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80102ea:	4401      	add	r1, r0
 80102ec:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80102f0:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 80102f4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80102f8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80102fc:	e676      	b.n	800ffec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80102fe:	9f04      	ldr	r7, [sp, #16]
 8010300:	42bd      	cmp	r5, r7
 8010302:	da27      	bge.n	8010354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8010304:	9902      	ldr	r1, [sp, #8]
 8010306:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801030a:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 801030e:	eb04 010e 	add.w	r1, r4, lr
 8010312:	fa1f f881 	uxth.w	r8, r1
 8010316:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 801031a:	4411      	add	r1, r2
 801031c:	eba1 0108 	sub.w	r1, r1, r8
 8010320:	b289      	uxth	r1, r1
 8010322:	fa0f f988 	sxth.w	r9, r8
 8010326:	eba2 020e 	sub.w	r2, r2, lr
 801032a:	fa0f f881 	sxth.w	r8, r1
 801032e:	1b7f      	subs	r7, r7, r5
 8010330:	4372      	muls	r2, r6
 8010332:	fb08 f707 	mul.w	r7, r8, r7
 8010336:	42ba      	cmp	r2, r7
 8010338:	dc06      	bgt.n	8010348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801033a:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 801033e:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 8010342:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 8010346:	e7ca      	b.n	80102de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8010348:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 801034c:	4421      	add	r1, r4
 801034e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010352:	e64b      	b.n	800ffec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010354:	9d05      	ldr	r5, [sp, #20]
 8010356:	eba9 0505 	sub.w	r5, r9, r5
 801035a:	b2ad      	uxth	r5, r5
 801035c:	2c06      	cmp	r4, #6
 801035e:	fa0f fe85 	sxth.w	lr, r5
 8010362:	d818      	bhi.n	8010396 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8010364:	9b04      	ldr	r3, [sp, #16]
 8010366:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 801036a:	1c63      	adds	r3, r4, #1
 801036c:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 8010370:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8010374:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8010378:	9b01      	ldr	r3, [sp, #4]
 801037a:	9d01      	ldr	r5, [sp, #4]
 801037c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010380:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8010384:	805a      	strh	r2, [r3, #2]
 8010386:	809e      	strh	r6, [r3, #4]
 8010388:	80d9      	strh	r1, [r3, #6]
 801038a:	9b02      	ldr	r3, [sp, #8]
 801038c:	3b01      	subs	r3, #1
 801038e:	9302      	str	r3, [sp, #8]
 8010390:	f1aa 0a08 	sub.w	sl, sl, #8
 8010394:	e747      	b.n	8010226 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8010396:	9a02      	ldr	r2, [sp, #8]
 8010398:	45b6      	cmp	lr, r6
 801039a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801039e:	db0d      	blt.n	80103bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 80103a0:	449c      	add	ip, r3
 80103a2:	fa1f fc8c 	uxth.w	ip, ip
 80103a6:	445a      	add	r2, fp
 80103a8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80103ac:	448c      	add	ip, r1
 80103ae:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 80103b2:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 80103b6:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 80103ba:	e617      	b.n	800ffec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80103bc:	445a      	add	r2, fp
 80103be:	44ac      	add	ip, r5
 80103c0:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 80103c4:	e78e      	b.n	80102e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80103c6:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80103ca:	fa1f f18e 	uxth.w	r1, lr
 80103ce:	eb01 0806 	add.w	r8, r1, r6
 80103d2:	b293      	uxth	r3, r2
 80103d4:	fa1f f888 	uxth.w	r8, r8
 80103d8:	9306      	str	r3, [sp, #24]
 80103da:	fa0f f388 	sxth.w	r3, r8
 80103de:	9307      	str	r3, [sp, #28]
 80103e0:	9f06      	ldr	r7, [sp, #24]
 80103e2:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 80103e6:	443b      	add	r3, r7
 80103e8:	b29b      	uxth	r3, r3
 80103ea:	4596      	cmp	lr, r2
 80103ec:	9308      	str	r3, [sp, #32]
 80103ee:	da25      	bge.n	801043c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80103f0:	9905      	ldr	r1, [sp, #20]
 80103f2:	eba3 0308 	sub.w	r3, r3, r8
 80103f6:	eba9 0401 	sub.w	r4, r9, r1
 80103fa:	b2a4      	uxth	r4, r4
 80103fc:	b29b      	uxth	r3, r3
 80103fe:	fa0f f984 	sxth.w	r9, r4
 8010402:	b219      	sxth	r1, r3
 8010404:	eba2 020e 	sub.w	r2, r2, lr
 8010408:	1b40      	subs	r0, r0, r5
 801040a:	fb09 f202 	mul.w	r2, r9, r2
 801040e:	4348      	muls	r0, r1
 8010410:	4282      	cmp	r2, r0
 8010412:	9a02      	ldr	r2, [sp, #8]
 8010414:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010418:	445a      	add	r2, fp
 801041a:	dc06      	bgt.n	801042a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 801041c:	9b07      	ldr	r3, [sp, #28]
 801041e:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 8010422:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 8010426:	44a4      	add	ip, r4
 8010428:	e75c      	b.n	80102e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801042a:	9904      	ldr	r1, [sp, #16]
 801042c:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 8010430:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 8010434:	4433      	add	r3, r6
 8010436:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801043a:	e5d7      	b.n	800ffec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801043c:	9f06      	ldr	r7, [sp, #24]
 801043e:	9b04      	ldr	r3, [sp, #16]
 8010440:	1bc9      	subs	r1, r1, r7
 8010442:	fa0f f789 	sxth.w	r7, r9
 8010446:	b289      	uxth	r1, r1
 8010448:	429f      	cmp	r7, r3
 801044a:	fa0f fe81 	sxth.w	lr, r1
 801044e:	dd22      	ble.n	8010496 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 8010450:	9a05      	ldr	r2, [sp, #20]
 8010452:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010456:	1b40      	subs	r0, r0, r5
 8010458:	eba9 0202 	sub.w	r2, r9, r2
 801045c:	9d07      	ldr	r5, [sp, #28]
 801045e:	b292      	uxth	r2, r2
 8010460:	eba5 0a03 	sub.w	sl, r5, r3
 8010464:	b214      	sxth	r4, r2
 8010466:	9b02      	ldr	r3, [sp, #8]
 8010468:	fb0e f000 	mul.w	r0, lr, r0
 801046c:	fb04 fa0a 	mul.w	sl, r4, sl
 8010470:	00db      	lsls	r3, r3, #3
 8010472:	4550      	cmp	r0, sl
 8010474:	445b      	add	r3, fp
 8010476:	db03      	blt.n	8010480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8010478:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 801047c:	4494      	add	ip, r2
 801047e:	e731      	b.n	80102e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8010480:	9a04      	ldr	r2, [sp, #16]
 8010482:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8010486:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 801048a:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801048e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010492:	4431      	add	r1, r6
 8010494:	e75b      	b.n	801034e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8010496:	9b08      	ldr	r3, [sp, #32]
 8010498:	eba3 0308 	sub.w	r3, r3, r8
 801049c:	b29b      	uxth	r3, r3
 801049e:	2c06      	cmp	r4, #6
 80104a0:	b21d      	sxth	r5, r3
 80104a2:	d813      	bhi.n	80104cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 80104a4:	9b07      	ldr	r3, [sp, #28]
 80104a6:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 80104aa:	1c63      	adds	r3, r4, #1
 80104ac:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 80104b0:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 80104b4:	9b01      	ldr	r3, [sp, #4]
 80104b6:	9901      	ldr	r1, [sp, #4]
 80104b8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80104bc:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 80104c0:	805a      	strh	r2, [r3, #2]
 80104c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80104c4:	809a      	strh	r2, [r3, #4]
 80104c6:	f8a3 e006 	strh.w	lr, [r3, #6]
 80104ca:	e75e      	b.n	801038a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80104cc:	9802      	ldr	r0, [sp, #8]
 80104ce:	4575      	cmp	r5, lr
 80104d0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 80104d4:	db0d      	blt.n	80104f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 80104d6:	4431      	add	r1, r6
 80104d8:	9b06      	ldr	r3, [sp, #24]
 80104da:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80104de:	b289      	uxth	r1, r1
 80104e0:	4458      	add	r0, fp
 80104e2:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80104e6:	4419      	add	r1, r3
 80104e8:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 80104ec:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 80104f0:	e57c      	b.n	800ffec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80104f2:	4458      	add	r0, fp
 80104f4:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 80104f8:	e79c      	b.n	8010434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80104fa:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 80104fe:	2e07      	cmp	r6, #7
 8010500:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010504:	d812      	bhi.n	801052c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 8010506:	1c75      	adds	r5, r6, #1
 8010508:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 801050c:	9d01      	ldr	r5, [sp, #4]
 801050e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8010512:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010516:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801051a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801051e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010522:	442c      	add	r4, r5
 8010524:	8061      	strh	r1, [r4, #2]
 8010526:	80a2      	strh	r2, [r4, #4]
 8010528:	80e3      	strh	r3, [r4, #6]
 801052a:	e5c9      	b.n	80100c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801052c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8010530:	3e01      	subs	r6, #1
 8010532:	445c      	add	r4, fp
 8010534:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8010538:	f04f 37ff 	mov.w	r7, #4294967295
 801053c:	2500      	movs	r5, #0
 801053e:	9305      	str	r3, [sp, #20]
 8010540:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8010544:	9302      	str	r3, [sp, #8]
 8010546:	1e72      	subs	r2, r6, #1
 8010548:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 801054c:	9304      	str	r3, [sp, #16]
 801054e:	4691      	mov	r9, r2
 8010550:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8010554:	f1b9 3fff 	cmp.w	r9, #4294967295
 8010558:	bf14      	ite	ne
 801055a:	9905      	ldrne	r1, [sp, #20]
 801055c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010560:	6818      	ldr	r0, [r3, #0]
 8010562:	9207      	str	r2, [sp, #28]
 8010564:	bf18      	it	ne
 8010566:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801056a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801056e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8010572:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8010576:	9306      	str	r3, [sp, #24]
 8010578:	fb18 f801 	smulbb	r8, r8, r1
 801057c:	6859      	ldr	r1, [r3, #4]
 801057e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010582:	4671      	mov	r1, lr
 8010584:	a80c      	add	r0, sp, #48	; 0x30
 8010586:	f7fb fa9f 	bl	800bac8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801058a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801058e:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8010592:	9b04      	ldr	r3, [sp, #16]
 8010594:	9a02      	ldr	r2, [sp, #8]
 8010596:	fb10 f001 	smulbb	r0, r0, r1
 801059a:	fb02 8803 	mla	r8, r2, r3, r8
 801059e:	eba0 0108 	sub.w	r1, r0, r8
 80105a2:	f04f 0c08 	mov.w	ip, #8
 80105a6:	fb90 f0fc 	sdiv	r0, r0, ip
 80105aa:	4288      	cmp	r0, r1
 80105ac:	dc20      	bgt.n	80105f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 80105ae:	4551      	cmp	r1, sl
 80105b0:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80105b4:	da03      	bge.n	80105be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 80105b6:	b1d9      	cbz	r1, 80105f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 80105b8:	468a      	mov	sl, r1
 80105ba:	464f      	mov	r7, r9
 80105bc:	4635      	mov	r5, r6
 80105be:	f109 39ff 	add.w	r9, r9, #4294967295
 80105c2:	f119 0f02 	cmn.w	r9, #2
 80105c6:	d1c5      	bne.n	8010554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80105c8:	4616      	mov	r6, r2
 80105ca:	3201      	adds	r2, #1
 80105cc:	f1a4 0408 	sub.w	r4, r4, #8
 80105d0:	d1b6      	bne.n	8010540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 80105d2:	9b01      	ldr	r3, [sp, #4]
 80105d4:	b2ac      	uxth	r4, r5
 80105d6:	00ed      	lsls	r5, r5, #3
 80105d8:	1958      	adds	r0, r3, r5
 80105da:	1c7b      	adds	r3, r7, #1
 80105dc:	d10b      	bne.n	80105f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 80105de:	4601      	mov	r1, r0
 80105e0:	9803      	ldr	r0, [sp, #12]
 80105e2:	f7fb fa71 	bl	800bac8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80105e6:	4621      	mov	r1, r4
 80105e8:	9801      	ldr	r0, [sp, #4]
 80105ea:	f7ff fcd5 	bl	800ff98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80105ee:	e4fd      	b.n	800ffec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80105f0:	464f      	mov	r7, r9
 80105f2:	4635      	mov	r5, r6
 80105f4:	e7ed      	b.n	80105d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 80105f6:	9b01      	ldr	r3, [sp, #4]
 80105f8:	00ff      	lsls	r7, r7, #3
 80105fa:	19d9      	adds	r1, r3, r7
 80105fc:	f7fb fa64 	bl	800bac8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010600:	9b03      	ldr	r3, [sp, #12]
 8010602:	cb03      	ldmia	r3!, {r0, r1}
 8010604:	445f      	add	r7, fp
 8010606:	445d      	add	r5, fp
 8010608:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 801060c:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 8010610:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 8010614:	9b03      	ldr	r3, [sp, #12]
 8010616:	6869      	ldr	r1, [r5, #4]
 8010618:	c303      	stmia	r3!, {r0, r1}
 801061a:	e7e4      	b.n	80105e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

0801061c <_ZN8touchgfx11Application10invalidateEv>:
 801061c:	4b09      	ldr	r3, [pc, #36]	; (8010644 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801061e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010622:	4b09      	ldr	r3, [pc, #36]	; (8010648 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8010624:	b082      	sub	sp, #8
 8010626:	f9b3 3000 	ldrsh.w	r3, [r3]
 801062a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801062e:	2100      	movs	r1, #0
 8010630:	9100      	str	r1, [sp, #0]
 8010632:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010636:	ab02      	add	r3, sp, #8
 8010638:	e913 0006 	ldmdb	r3, {r1, r2}
 801063c:	b002      	add	sp, #8
 801063e:	f7ff bcbf 	b.w	800ffc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010642:	bf00      	nop
 8010644:	20017558 	.word	0x20017558
 8010648:	2001755a 	.word	0x2001755a

0801064c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801064c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010650:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8010654:	b09b      	sub	sp, #108	; 0x6c
 8010656:	4604      	mov	r4, r0
 8010658:	4630      	mov	r0, r6
 801065a:	f7f9 fd22 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801065e:	4605      	mov	r5, r0
 8010660:	b940      	cbnz	r0, 8010674 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8010662:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010666:	4620      	mov	r0, r4
 8010668:	f7ff fcaa 	bl	800ffc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801066c:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8010670:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8010674:	4bc9      	ldr	r3, [pc, #804]	; (801099c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8010676:	681b      	ldr	r3, [r3, #0]
 8010678:	2b00      	cmp	r3, #0
 801067a:	d03e      	beq.n	80106fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 801067c:	4dc8      	ldr	r5, [pc, #800]	; (80109a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801067e:	4628      	mov	r0, r5
 8010680:	f7f9 fd0f 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010684:	4606      	mov	r6, r0
 8010686:	2800      	cmp	r0, #0
 8010688:	d137      	bne.n	80106fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 801068a:	4628      	mov	r0, r5
 801068c:	f7ff fa4a 	bl	800fb24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010690:	6829      	ldr	r1, [r5, #0]
 8010692:	686a      	ldr	r2, [r5, #4]
 8010694:	4620      	mov	r0, r4
 8010696:	f7ff fc93 	bl	800ffc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801069a:	802e      	strh	r6, [r5, #0]
 801069c:	806e      	strh	r6, [r5, #2]
 801069e:	80ae      	strh	r6, [r5, #4]
 80106a0:	80ee      	strh	r6, [r5, #6]
 80106a2:	ae09      	add	r6, sp, #36	; 0x24
 80106a4:	4630      	mov	r0, r6
 80106a6:	f7ff fc26 	bl	800fef6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80106aa:	4abe      	ldr	r2, [pc, #760]	; (80109a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80106ac:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 80106b0:	8815      	ldrh	r5, [r2, #0]
 80106b2:	9202      	str	r2, [sp, #8]
 80106b4:	462b      	mov	r3, r5
 80106b6:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 80106ba:	429f      	cmp	r7, r3
 80106bc:	d924      	bls.n	8010708 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 80106be:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80106c2:	2907      	cmp	r1, #7
 80106c4:	d816      	bhi.n	80106f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 80106c6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80106ca:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 80106ce:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 80106d2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80106d6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80106da:	1c4a      	adds	r2, r1, #1
 80106dc:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80106e0:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 80106e4:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 80106e8:	f8a2 9002 	strh.w	r9, [r2, #2]
 80106ec:	f8a2 e004 	strh.w	lr, [r2, #4]
 80106f0:	f8a2 c006 	strh.w	ip, [r2, #6]
 80106f4:	3301      	adds	r3, #1
 80106f6:	b29b      	uxth	r3, r3
 80106f8:	e7df      	b.n	80106ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 80106fa:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80106fe:	2b00      	cmp	r3, #0
 8010700:	d1cf      	bne.n	80106a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8010702:	b01b      	add	sp, #108	; 0x6c
 8010704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010708:	462f      	mov	r7, r5
 801070a:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 801070e:	42bb      	cmp	r3, r7
 8010710:	d90b      	bls.n	801072a <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8010712:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8010716:	4620      	mov	r0, r4
 8010718:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 801071c:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8010720:	3701      	adds	r7, #1
 8010722:	f7ff fc4d 	bl	800ffc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010726:	b2bf      	uxth	r7, r7
 8010728:	e7ef      	b.n	801070a <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 801072a:	4a9f      	ldr	r2, [pc, #636]	; (80109a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 801072c:	6813      	ldr	r3, [r2, #0]
 801072e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8010732:	2b01      	cmp	r3, #1
 8010734:	4690      	mov	r8, r2
 8010736:	f040 80e6 	bne.w	8010906 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 801073a:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801073e:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8010742:	4629      	mov	r1, r5
 8010744:	33aa      	adds	r3, #170	; 0xaa
 8010746:	2500      	movs	r5, #0
 8010748:	428f      	cmp	r7, r1
 801074a:	f103 0308 	add.w	r3, r3, #8
 801074e:	dd0a      	ble.n	8010766 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8010750:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8010754:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8010758:	4402      	add	r2, r0
 801075a:	b212      	sxth	r2, r2
 801075c:	4295      	cmp	r5, r2
 801075e:	bfb8      	it	lt
 8010760:	4615      	movlt	r5, r2
 8010762:	3101      	adds	r1, #1
 8010764:	e7f0      	b.n	8010748 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8010766:	4b91      	ldr	r3, [pc, #580]	; (80109ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8010768:	f8df b23c 	ldr.w	fp, [pc, #572]	; 80109a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 801076c:	881b      	ldrh	r3, [r3, #0]
 801076e:	2b0f      	cmp	r3, #15
 8010770:	bf88      	it	hi
 8010772:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8010776:	f04f 0300 	mov.w	r3, #0
 801077a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801077e:	bf98      	it	ls
 8010780:	f04f 0a01 	movls.w	sl, #1
 8010784:	46d8      	mov	r8, fp
 8010786:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 801078a:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 801078e:	4438      	add	r0, r7
 8010790:	b207      	sxth	r7, r0
 8010792:	f8db 0000 	ldr.w	r0, [fp]
 8010796:	42bd      	cmp	r5, r7
 8010798:	6803      	ldr	r3, [r0, #0]
 801079a:	f340 8084 	ble.w	80108a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801079e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80107a2:	4798      	blx	r3
 80107a4:	eb07 030a 	add.w	r3, r7, sl
 80107a8:	4298      	cmp	r0, r3
 80107aa:	da07      	bge.n	80107bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 80107ac:	4285      	cmp	r5, r0
 80107ae:	dd05      	ble.n	80107bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 80107b0:	4287      	cmp	r7, r0
 80107b2:	dd6d      	ble.n	8010890 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80107b4:	2f00      	cmp	r7, #0
 80107b6:	dd6b      	ble.n	8010890 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80107b8:	4628      	mov	r0, r5
 80107ba:	e004      	b.n	80107c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80107bc:	4287      	cmp	r7, r0
 80107be:	dcfb      	bgt.n	80107b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 80107c0:	42a8      	cmp	r0, r5
 80107c2:	bfa8      	it	ge
 80107c4:	4628      	movge	r0, r5
 80107c6:	4b7a      	ldr	r3, [pc, #488]	; (80109b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 80107c8:	f8ad 7016 	strh.w	r7, [sp, #22]
 80107cc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80107d0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80107d4:	9b02      	ldr	r3, [sp, #8]
 80107d6:	1bc0      	subs	r0, r0, r7
 80107d8:	2200      	movs	r2, #0
 80107da:	881f      	ldrh	r7, [r3, #0]
 80107dc:	f8ad 2014 	strh.w	r2, [sp, #20]
 80107e0:	f8ad 001a 	strh.w	r0, [sp, #26]
 80107e4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80107e8:	42bb      	cmp	r3, r7
 80107ea:	d9cc      	bls.n	8010786 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 80107ec:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80107f0:	ab07      	add	r3, sp, #28
 80107f2:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80107f6:	6851      	ldr	r1, [r2, #4]
 80107f8:	c303      	stmia	r3!, {r0, r1}
 80107fa:	a905      	add	r1, sp, #20
 80107fc:	a807      	add	r0, sp, #28
 80107fe:	f7ff fad0 	bl	800fda2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010802:	2800      	cmp	r0, #0
 8010804:	d04c      	beq.n	80108a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8010806:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801080a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801080e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8010812:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8010816:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801081a:	9303      	str	r3, [sp, #12]
 801081c:	4686      	mov	lr, r0
 801081e:	4290      	cmp	r0, r2
 8010820:	4448      	add	r0, r9
 8010822:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8010826:	bfb8      	it	lt
 8010828:	4696      	movlt	lr, r2
 801082a:	444a      	add	r2, r9
 801082c:	4299      	cmp	r1, r3
 801082e:	b280      	uxth	r0, r0
 8010830:	b292      	uxth	r2, r2
 8010832:	468c      	mov	ip, r1
 8010834:	fa0f f982 	sxth.w	r9, r2
 8010838:	bfb8      	it	lt
 801083a:	469c      	movlt	ip, r3
 801083c:	b203      	sxth	r3, r0
 801083e:	454b      	cmp	r3, r9
 8010840:	bfb8      	it	lt
 8010842:	4602      	movlt	r2, r0
 8010844:	eba2 020e 	sub.w	r2, r2, lr
 8010848:	f8ad 2020 	strh.w	r2, [sp, #32]
 801084c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010850:	9b03      	ldr	r3, [sp, #12]
 8010852:	f8ad e01c 	strh.w	lr, [sp, #28]
 8010856:	4411      	add	r1, r2
 8010858:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801085c:	f8ad c01e 	strh.w	ip, [sp, #30]
 8010860:	4413      	add	r3, r2
 8010862:	b289      	uxth	r1, r1
 8010864:	b29b      	uxth	r3, r3
 8010866:	b208      	sxth	r0, r1
 8010868:	b21a      	sxth	r2, r3
 801086a:	4290      	cmp	r0, r2
 801086c:	bfb8      	it	lt
 801086e:	460b      	movlt	r3, r1
 8010870:	eba3 030c 	sub.w	r3, r3, ip
 8010874:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010878:	a807      	add	r0, sp, #28
 801087a:	f7f9 fc12 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801087e:	b920      	cbnz	r0, 801088a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8010880:	6823      	ldr	r3, [r4, #0]
 8010882:	a907      	add	r1, sp, #28
 8010884:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010886:	4620      	mov	r0, r4
 8010888:	4798      	blx	r3
 801088a:	3701      	adds	r7, #1
 801088c:	b2bf      	uxth	r7, r7
 801088e:	e7a9      	b.n	80107e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8010890:	f8d8 0000 	ldr.w	r0, [r8]
 8010894:	6803      	ldr	r3, [r0, #0]
 8010896:	2101      	movs	r1, #1
 8010898:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801089c:	4798      	blx	r3
 801089e:	e772      	b.n	8010786 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 80108a0:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80108a4:	e7e8      	b.n	8010878 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80108a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80108a8:	4798      	blx	r3
 80108aa:	4b42      	ldr	r3, [pc, #264]	; (80109b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 80108ac:	781b      	ldrb	r3, [r3, #0]
 80108ae:	2b00      	cmp	r3, #0
 80108b0:	f43f af27 	beq.w	8010702 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 80108b4:	2300      	movs	r3, #0
 80108b6:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 80108ba:	9b02      	ldr	r3, [sp, #8]
 80108bc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80108c0:	881b      	ldrh	r3, [r3, #0]
 80108c2:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80108c6:	429d      	cmp	r5, r3
 80108c8:	f67f af1b 	bls.w	8010702 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 80108cc:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 80108d0:	2907      	cmp	r1, #7
 80108d2:	d815      	bhi.n	8010900 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 80108d4:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 80108d8:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 80108dc:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 80108e0:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 80108e4:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 80108e8:	1c4a      	adds	r2, r1, #1
 80108ea:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 80108ee:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80108f2:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 80108f6:	f8a2 e002 	strh.w	lr, [r2, #2]
 80108fa:	f8a2 c004 	strh.w	ip, [r2, #4]
 80108fe:	80d7      	strh	r7, [r2, #6]
 8010900:	3301      	adds	r3, #1
 8010902:	b29b      	uxth	r3, r3
 8010904:	e7df      	b.n	80108c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8010906:	2b02      	cmp	r3, #2
 8010908:	f040 8136 	bne.w	8010b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 801090c:	4b2a      	ldr	r3, [pc, #168]	; (80109b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 801090e:	781b      	ldrb	r3, [r3, #0]
 8010910:	2b01      	cmp	r3, #1
 8010912:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8010916:	f000 809c 	beq.w	8010a52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801091a:	9b02      	ldr	r3, [sp, #8]
 801091c:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8010920:	f8b3 b000 	ldrh.w	fp, [r3]
 8010924:	f10b 0b01 	add.w	fp, fp, #1
 8010928:	fa1f fb8b 	uxth.w	fp, fp
 801092c:	2a00      	cmp	r2, #0
 801092e:	d0bc      	beq.n	80108aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8010930:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8010934:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8010938:	441d      	add	r5, r3
 801093a:	b22d      	sxth	r5, r5
 801093c:	4659      	mov	r1, fp
 801093e:	f04f 0800 	mov.w	r8, #0
 8010942:	b28b      	uxth	r3, r1
 8010944:	429a      	cmp	r2, r3
 8010946:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801094a:	f240 80c1 	bls.w	8010ad0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 801094e:	4427      	add	r7, r4
 8010950:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8010954:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8010958:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 801095c:	4563      	cmp	r3, ip
 801095e:	4608      	mov	r0, r1
 8010960:	f340 80a3 	ble.w	8010aaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8010964:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8010968:	4465      	add	r5, ip
 801096a:	b22d      	sxth	r5, r5
 801096c:	429d      	cmp	r5, r3
 801096e:	bfa8      	it	ge
 8010970:	461d      	movge	r5, r3
 8010972:	3101      	adds	r1, #1
 8010974:	4680      	mov	r8, r0
 8010976:	e7e4      	b.n	8010942 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8010978:	d10b      	bne.n	8010992 <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 801097a:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 801097e:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8010982:	458c      	cmp	ip, r1
 8010984:	bfb4      	ite	lt
 8010986:	469c      	movlt	ip, r3
 8010988:	46bc      	movge	ip, r7
 801098a:	4572      	cmp	r2, lr
 801098c:	bfb8      	it	lt
 801098e:	4672      	movlt	r2, lr
 8010990:	e088      	b.n	8010aa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8010992:	428a      	cmp	r2, r1
 8010994:	bfb8      	it	lt
 8010996:	460a      	movlt	r2, r1
 8010998:	46bc      	mov	ip, r7
 801099a:	e083      	b.n	8010aa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 801099c:	200175a4 	.word	0x200175a4
 80109a0:	200175b0 	.word	0x200175b0
 80109a4:	20000088 	.word	0x20000088
 80109a8:	20017564 	.word	0x20017564
 80109ac:	2001755a 	.word	0x2001755a
 80109b0:	20017558 	.word	0x20017558
 80109b4:	20017562 	.word	0x20017562
 80109b8:	2001755c 	.word	0x2001755c
 80109bc:	1961      	adds	r1, r4, r5
 80109be:	ab07      	add	r3, sp, #28
 80109c0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 80109c4:	6849      	ldr	r1, [r1, #4]
 80109c6:	c303      	stmia	r3!, {r0, r1}
 80109c8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80109cc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80109d0:	2b13      	cmp	r3, #19
 80109d2:	bfd8      	it	le
 80109d4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80109d8:	f8ad 201c 	strh.w	r2, [sp, #28]
 80109dc:	440b      	add	r3, r1
 80109de:	1a9b      	subs	r3, r3, r2
 80109e0:	a807      	add	r0, sp, #28
 80109e2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80109e6:	f7ff f8b7 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80109ea:	a807      	add	r0, sp, #28
 80109ec:	f7f9 fb59 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80109f0:	bb78      	cbnz	r0, 8010a52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80109f2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80109f6:	f8d8 0000 	ldr.w	r0, [r8]
 80109fa:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80109fe:	f8d0 e000 	ldr.w	lr, [r0]
 8010a02:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8010a06:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010a0a:	f1bc 0f14 	cmp.w	ip, #20
 8010a0e:	bfa8      	it	ge
 8010a10:	f04f 0c14 	movge.w	ip, #20
 8010a14:	fa1f fc8c 	uxth.w	ip, ip
 8010a18:	f8cd c000 	str.w	ip, [sp]
 8010a1c:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8010a20:	47d0      	blx	sl
 8010a22:	4682      	mov	sl, r0
 8010a24:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010a28:	a807      	add	r0, sp, #28
 8010a2a:	f7ff f87b 	bl	800fb24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010a2e:	6823      	ldr	r3, [r4, #0]
 8010a30:	4425      	add	r5, r4
 8010a32:	4620      	mov	r0, r4
 8010a34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010a36:	a907      	add	r1, sp, #28
 8010a38:	4798      	blx	r3
 8010a3a:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8010a3e:	eba0 000a 	sub.w	r0, r0, sl
 8010a42:	b200      	sxth	r0, r0
 8010a44:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8010a48:	b918      	cbnz	r0, 8010a52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8010a4a:	b2b9      	uxth	r1, r7
 8010a4c:	4648      	mov	r0, r9
 8010a4e:	f7ff faa3 	bl	800ff98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010a52:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8010a56:	f1bb 0f00 	cmp.w	fp, #0
 8010a5a:	f43f af26 	beq.w	80108aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8010a5e:	9b02      	ldr	r3, [sp, #8]
 8010a60:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8010a64:	881b      	ldrh	r3, [r3, #0]
 8010a66:	3301      	adds	r3, #1
 8010a68:	b29b      	uxth	r3, r3
 8010a6a:	2700      	movs	r7, #0
 8010a6c:	b299      	uxth	r1, r3
 8010a6e:	458b      	cmp	fp, r1
 8010a70:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8010a74:	d9a2      	bls.n	80109bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8010a76:	4425      	add	r5, r4
 8010a78:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8010a7c:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8010a80:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8010a84:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8010a88:	4408      	add	r0, r1
 8010a8a:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8010a8e:	4471      	add	r1, lr
 8010a90:	b200      	sxth	r0, r0
 8010a92:	b209      	sxth	r1, r1
 8010a94:	4288      	cmp	r0, r1
 8010a96:	469c      	mov	ip, r3
 8010a98:	f6bf af6e 	bge.w	8010978 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8010a9c:	4586      	cmp	lr, r0
 8010a9e:	4672      	mov	r2, lr
 8010aa0:	bfb8      	it	lt
 8010aa2:	4602      	movlt	r2, r0
 8010aa4:	3301      	adds	r3, #1
 8010aa6:	4667      	mov	r7, ip
 8010aa8:	e7e0      	b.n	8010a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8010aaa:	d10c      	bne.n	8010ac6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8010aac:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8010ab0:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8010ab4:	4287      	cmp	r7, r0
 8010ab6:	bfb4      	ite	lt
 8010ab8:	4608      	movlt	r0, r1
 8010aba:	4640      	movge	r0, r8
 8010abc:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8010ac0:	443b      	add	r3, r7
 8010ac2:	b21b      	sxth	r3, r3
 8010ac4:	e752      	b.n	801096c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8010ac6:	4565      	cmp	r5, ip
 8010ac8:	bfa8      	it	ge
 8010aca:	4665      	movge	r5, ip
 8010acc:	4640      	mov	r0, r8
 8010ace:	e750      	b.n	8010972 <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8010ad0:	eb09 0007 	add.w	r0, r9, r7
 8010ad4:	4427      	add	r7, r4
 8010ad6:	9203      	str	r2, [sp, #12]
 8010ad8:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8010adc:	f1ba 0f13 	cmp.w	sl, #19
 8010ae0:	bfde      	ittt	le
 8010ae2:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8010ae6:	4455      	addle	r5, sl
 8010ae8:	b22d      	sxthle	r5, r5
 8010aea:	f7f9 fada 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010aee:	9a03      	ldr	r2, [sp, #12]
 8010af0:	2800      	cmp	r0, #0
 8010af2:	f47f af1b 	bne.w	801092c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8010af6:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8010afa:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010afe:	482a      	ldr	r0, [pc, #168]	; (8010ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8010b00:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8010b04:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8010b08:	6800      	ldr	r0, [r0, #0]
 8010b0a:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010b0e:	1aad      	subs	r5, r5, r2
 8010b10:	2d14      	cmp	r5, #20
 8010b12:	f8ad 201e 	strh.w	r2, [sp, #30]
 8010b16:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010b1a:	bfa8      	it	ge
 8010b1c:	2514      	movge	r5, #20
 8010b1e:	f8d0 c000 	ldr.w	ip, [r0]
 8010b22:	b2ad      	uxth	r5, r5
 8010b24:	fa1f fa8a 	uxth.w	sl, sl
 8010b28:	4555      	cmp	r5, sl
 8010b2a:	bf94      	ite	ls
 8010b2c:	9500      	strls	r5, [sp, #0]
 8010b2e:	f8cd a000 	strhi.w	sl, [sp]
 8010b32:	b292      	uxth	r2, r2
 8010b34:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8010b38:	b29b      	uxth	r3, r3
 8010b3a:	b289      	uxth	r1, r1
 8010b3c:	47a8      	blx	r5
 8010b3e:	6823      	ldr	r3, [r4, #0]
 8010b40:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010b44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010b46:	a907      	add	r1, sp, #28
 8010b48:	4620      	mov	r0, r4
 8010b4a:	4798      	blx	r3
 8010b4c:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8010b50:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8010b54:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8010b58:	1a5b      	subs	r3, r3, r1
 8010b5a:	440a      	add	r2, r1
 8010b5c:	b21b      	sxth	r3, r3
 8010b5e:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8010b62:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8010b66:	2b00      	cmp	r3, #0
 8010b68:	f47f aed7 	bne.w	801091a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8010b6c:	fa1f f188 	uxth.w	r1, r8
 8010b70:	4648      	mov	r0, r9
 8010b72:	f7ff fa11 	bl	800ff98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010b76:	e6d0      	b.n	801091a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8010b78:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010b7c:	42ab      	cmp	r3, r5
 8010b7e:	f67f ae94 	bls.w	80108aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8010b82:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8010b86:	ab07      	add	r3, sp, #28
 8010b88:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8010b8c:	6851      	ldr	r1, [r2, #4]
 8010b8e:	c303      	stmia	r3!, {r0, r1}
 8010b90:	a807      	add	r0, sp, #28
 8010b92:	f7f9 fa86 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b96:	b920      	cbnz	r0, 8010ba2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8010b98:	6823      	ldr	r3, [r4, #0]
 8010b9a:	a907      	add	r1, sp, #28
 8010b9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010b9e:	4620      	mov	r0, r4
 8010ba0:	4798      	blx	r3
 8010ba2:	3501      	adds	r5, #1
 8010ba4:	b2ad      	uxth	r5, r5
 8010ba6:	e7e7      	b.n	8010b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8010ba8:	20017564 	.word	0x20017564

08010bac <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010bac:	4b03      	ldr	r3, [pc, #12]	; (8010bbc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8010bae:	2200      	movs	r2, #0
 8010bb0:	801a      	strh	r2, [r3, #0]
 8010bb2:	805a      	strh	r2, [r3, #2]
 8010bb4:	809a      	strh	r2, [r3, #4]
 8010bb6:	80da      	strh	r2, [r3, #6]
 8010bb8:	4770      	bx	lr
 8010bba:	bf00      	nop
 8010bbc:	200175b0 	.word	0x200175b0

08010bc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8010bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bc4:	4606      	mov	r6, r0
 8010bc6:	b09d      	sub	sp, #116	; 0x74
 8010bc8:	a803      	add	r0, sp, #12
 8010bca:	4614      	mov	r4, r2
 8010bcc:	468a      	mov	sl, r1
 8010bce:	461d      	mov	r5, r3
 8010bd0:	f000 fe67 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 8010bd4:	6833      	ldr	r3, [r6, #0]
 8010bd6:	4630      	mov	r0, r6
 8010bd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010bda:	4798      	blx	r3
 8010bdc:	6833      	ldr	r3, [r6, #0]
 8010bde:	4607      	mov	r7, r0
 8010be0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010be2:	4630      	mov	r0, r6
 8010be4:	4798      	blx	r3
 8010be6:	462a      	mov	r2, r5
 8010be8:	9000      	str	r0, [sp, #0]
 8010bea:	4621      	mov	r1, r4
 8010bec:	463b      	mov	r3, r7
 8010bee:	a803      	add	r0, sp, #12
 8010bf0:	f000 feb2 	bl	8011958 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010bf4:	2500      	movs	r5, #0
 8010bf6:	462c      	mov	r4, r5
 8010bf8:	46a9      	mov	r9, r5
 8010bfa:	46a8      	mov	r8, r5
 8010bfc:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8010c00:	2300      	movs	r3, #0
 8010c02:	9302      	str	r3, [sp, #8]
 8010c04:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010c08:	429c      	cmp	r4, r3
 8010c0a:	d002      	beq.n	8010c12 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8010c0c:	455c      	cmp	r4, fp
 8010c0e:	bf18      	it	ne
 8010c10:	4625      	movne	r5, r4
 8010c12:	ab02      	add	r3, sp, #8
 8010c14:	4632      	mov	r2, r6
 8010c16:	4651      	mov	r1, sl
 8010c18:	a803      	add	r0, sp, #12
 8010c1a:	f001 f99f 	bl	8011f5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010c1e:	4604      	mov	r4, r0
 8010c20:	b108      	cbz	r0, 8010c26 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8010c22:	280a      	cmp	r0, #10
 8010c24:	d10a      	bne.n	8010c3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010c26:	45c1      	cmp	r9, r8
 8010c28:	bf38      	it	cc
 8010c2a:	46c1      	movcc	r9, r8
 8010c2c:	f04f 0800 	mov.w	r8, #0
 8010c30:	2c00      	cmp	r4, #0
 8010c32:	d1e5      	bne.n	8010c00 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010c34:	4648      	mov	r0, r9
 8010c36:	b01d      	add	sp, #116	; 0x74
 8010c38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c3c:	9a02      	ldr	r2, [sp, #8]
 8010c3e:	2a00      	cmp	r2, #0
 8010c40:	d0de      	beq.n	8010c00 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010c42:	7b57      	ldrb	r7, [r2, #13]
 8010c44:	6833      	ldr	r3, [r6, #0]
 8010c46:	8894      	ldrh	r4, [r2, #4]
 8010c48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010c4a:	007f      	lsls	r7, r7, #1
 8010c4c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8010c50:	7a97      	ldrb	r7, [r2, #10]
 8010c52:	4629      	mov	r1, r5
 8010c54:	4307      	orrs	r7, r0
 8010c56:	4630      	mov	r0, r6
 8010c58:	4798      	blx	r3
 8010c5a:	4438      	add	r0, r7
 8010c5c:	4480      	add	r8, r0
 8010c5e:	fa1f f888 	uxth.w	r8, r8
 8010c62:	e7e5      	b.n	8010c30 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08010c64 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010c64:	b508      	push	{r3, lr}
 8010c66:	6803      	ldr	r3, [r0, #0]
 8010c68:	68db      	ldr	r3, [r3, #12]
 8010c6a:	4798      	blx	r3
 8010c6c:	b128      	cbz	r0, 8010c7a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010c6e:	7b43      	ldrb	r3, [r0, #13]
 8010c70:	7a80      	ldrb	r0, [r0, #10]
 8010c72:	005b      	lsls	r3, r3, #1
 8010c74:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010c78:	4318      	orrs	r0, r3
 8010c7a:	bd08      	pop	{r3, pc}

08010c7c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010c7c:	b40e      	push	{r1, r2, r3}
 8010c7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c80:	b09e      	sub	sp, #120	; 0x78
 8010c82:	ab23      	add	r3, sp, #140	; 0x8c
 8010c84:	4605      	mov	r5, r0
 8010c86:	f853 4b04 	ldr.w	r4, [r3], #4
 8010c8a:	9303      	str	r3, [sp, #12]
 8010c8c:	a805      	add	r0, sp, #20
 8010c8e:	f000 fe08 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 8010c92:	682b      	ldr	r3, [r5, #0]
 8010c94:	4628      	mov	r0, r5
 8010c96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010c98:	4798      	blx	r3
 8010c9a:	682b      	ldr	r3, [r5, #0]
 8010c9c:	4606      	mov	r6, r0
 8010c9e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010ca0:	4628      	mov	r0, r5
 8010ca2:	4798      	blx	r3
 8010ca4:	4633      	mov	r3, r6
 8010ca6:	ae1e      	add	r6, sp, #120	; 0x78
 8010ca8:	4621      	mov	r1, r4
 8010caa:	9000      	str	r0, [sp, #0]
 8010cac:	9a03      	ldr	r2, [sp, #12]
 8010cae:	2400      	movs	r4, #0
 8010cb0:	a805      	add	r0, sp, #20
 8010cb2:	f000 fe51 	bl	8011958 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010cb6:	f846 4d68 	str.w	r4, [r6, #-104]!
 8010cba:	462a      	mov	r2, r5
 8010cbc:	4633      	mov	r3, r6
 8010cbe:	4621      	mov	r1, r4
 8010cc0:	a805      	add	r0, sp, #20
 8010cc2:	f001 f94b 	bl	8011f5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010cc6:	b1f0      	cbz	r0, 8010d06 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8010cc8:	280a      	cmp	r0, #10
 8010cca:	d018      	beq.n	8010cfe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010ccc:	9f04      	ldr	r7, [sp, #16]
 8010cce:	b1b7      	cbz	r7, 8010cfe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010cd0:	7b78      	ldrb	r0, [r7, #13]
 8010cd2:	7a3b      	ldrb	r3, [r7, #8]
 8010cd4:	88aa      	ldrh	r2, [r5, #4]
 8010cd6:	00c1      	lsls	r1, r0, #3
 8010cd8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8010cdc:	4319      	orrs	r1, r3
 8010cde:	0643      	lsls	r3, r0, #25
 8010ce0:	bf44      	itt	mi
 8010ce2:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8010ce6:	b219      	sxthmi	r1, r3
 8010ce8:	0100      	lsls	r0, r0, #4
 8010cea:	79fb      	ldrb	r3, [r7, #7]
 8010cec:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010cf0:	4303      	orrs	r3, r0
 8010cf2:	4413      	add	r3, r2
 8010cf4:	1a5b      	subs	r3, r3, r1
 8010cf6:	b29b      	uxth	r3, r3
 8010cf8:	42a3      	cmp	r3, r4
 8010cfa:	bfc8      	it	gt
 8010cfc:	b21c      	sxthgt	r4, r3
 8010cfe:	4633      	mov	r3, r6
 8010d00:	462a      	mov	r2, r5
 8010d02:	2100      	movs	r1, #0
 8010d04:	e7dc      	b.n	8010cc0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010d06:	b2a0      	uxth	r0, r4
 8010d08:	b01e      	add	sp, #120	; 0x78
 8010d0a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010d0e:	b003      	add	sp, #12
 8010d10:	4770      	bx	lr

08010d12 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8010d12:	b40e      	push	{r1, r2, r3}
 8010d14:	b570      	push	{r4, r5, r6, lr}
 8010d16:	b09d      	sub	sp, #116	; 0x74
 8010d18:	ab21      	add	r3, sp, #132	; 0x84
 8010d1a:	4604      	mov	r4, r0
 8010d1c:	f853 5b04 	ldr.w	r5, [r3], #4
 8010d20:	9302      	str	r3, [sp, #8]
 8010d22:	a803      	add	r0, sp, #12
 8010d24:	f000 fdbd 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 8010d28:	6823      	ldr	r3, [r4, #0]
 8010d2a:	4620      	mov	r0, r4
 8010d2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010d2e:	4798      	blx	r3
 8010d30:	6823      	ldr	r3, [r4, #0]
 8010d32:	4606      	mov	r6, r0
 8010d34:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010d36:	4620      	mov	r0, r4
 8010d38:	4798      	blx	r3
 8010d3a:	4633      	mov	r3, r6
 8010d3c:	9000      	str	r0, [sp, #0]
 8010d3e:	9a02      	ldr	r2, [sp, #8]
 8010d40:	4629      	mov	r1, r5
 8010d42:	a803      	add	r0, sp, #12
 8010d44:	f000 fe08 	bl	8011958 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010d48:	a803      	add	r0, sp, #12
 8010d4a:	f001 f9d5 	bl	80120f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010d4e:	2401      	movs	r4, #1
 8010d50:	b2a3      	uxth	r3, r4
 8010d52:	b140      	cbz	r0, 8010d66 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8010d54:	280a      	cmp	r0, #10
 8010d56:	bf08      	it	eq
 8010d58:	3301      	addeq	r3, #1
 8010d5a:	a803      	add	r0, sp, #12
 8010d5c:	bf08      	it	eq
 8010d5e:	b21c      	sxtheq	r4, r3
 8010d60:	f001 f9ca 	bl	80120f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010d64:	e7f4      	b.n	8010d50 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8010d66:	4618      	mov	r0, r3
 8010d68:	b01d      	add	sp, #116	; 0x74
 8010d6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d6e:	b003      	add	sp, #12
 8010d70:	4770      	bx	lr

08010d72 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8010d72:	b40e      	push	{r1, r2, r3}
 8010d74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d76:	b09e      	sub	sp, #120	; 0x78
 8010d78:	ab23      	add	r3, sp, #140	; 0x8c
 8010d7a:	4604      	mov	r4, r0
 8010d7c:	f853 5b04 	ldr.w	r5, [r3], #4
 8010d80:	9303      	str	r3, [sp, #12]
 8010d82:	a805      	add	r0, sp, #20
 8010d84:	f000 fd8d 	bl	80118a2 <_ZN8touchgfx12TextProviderC1Ev>
 8010d88:	6823      	ldr	r3, [r4, #0]
 8010d8a:	4620      	mov	r0, r4
 8010d8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010d8e:	4798      	blx	r3
 8010d90:	6823      	ldr	r3, [r4, #0]
 8010d92:	4606      	mov	r6, r0
 8010d94:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010d96:	4620      	mov	r0, r4
 8010d98:	4798      	blx	r3
 8010d9a:	4633      	mov	r3, r6
 8010d9c:	4629      	mov	r1, r5
 8010d9e:	9000      	str	r0, [sp, #0]
 8010da0:	9a03      	ldr	r2, [sp, #12]
 8010da2:	a805      	add	r0, sp, #20
 8010da4:	ad1e      	add	r5, sp, #120	; 0x78
 8010da6:	f000 fdd7 	bl	8011958 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010daa:	2100      	movs	r1, #0
 8010dac:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010db0:	4622      	mov	r2, r4
 8010db2:	462b      	mov	r3, r5
 8010db4:	a805      	add	r0, sp, #20
 8010db6:	f001 f8d1 	bl	8011f5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010dba:	26ff      	movs	r6, #255	; 0xff
 8010dbc:	b1d8      	cbz	r0, 8010df6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8010dbe:	280a      	cmp	r0, #10
 8010dc0:	d012      	beq.n	8010de8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8010dc2:	9804      	ldr	r0, [sp, #16]
 8010dc4:	b180      	cbz	r0, 8010de8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8010dc6:	7b47      	ldrb	r7, [r0, #13]
 8010dc8:	7922      	ldrb	r2, [r4, #4]
 8010dca:	00fb      	lsls	r3, r7, #3
 8010dcc:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8010dd0:	7a03      	ldrb	r3, [r0, #8]
 8010dd2:	430b      	orrs	r3, r1
 8010dd4:	0679      	lsls	r1, r7, #25
 8010dd6:	bf44      	itt	mi
 8010dd8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010ddc:	b21b      	sxthmi	r3, r3
 8010dde:	1ad3      	subs	r3, r2, r3
 8010de0:	b2db      	uxtb	r3, r3
 8010de2:	429e      	cmp	r6, r3
 8010de4:	bf28      	it	cs
 8010de6:	461e      	movcs	r6, r3
 8010de8:	462b      	mov	r3, r5
 8010dea:	4622      	mov	r2, r4
 8010dec:	2100      	movs	r1, #0
 8010dee:	a805      	add	r0, sp, #20
 8010df0:	f001 f8b4 	bl	8011f5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010df4:	e7e2      	b.n	8010dbc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8010df6:	4630      	mov	r0, r6
 8010df8:	b01e      	add	sp, #120	; 0x78
 8010dfa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010dfe:	b003      	add	sp, #12
 8010e00:	4770      	bx	lr

08010e02 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010e02:	b513      	push	{r0, r1, r4, lr}
 8010e04:	6803      	ldr	r3, [r0, #0]
 8010e06:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010e0a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010e0e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010e12:	2400      	movs	r4, #0
 8010e14:	9400      	str	r4, [sp, #0]
 8010e16:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010e1a:	691b      	ldr	r3, [r3, #16]
 8010e1c:	4669      	mov	r1, sp
 8010e1e:	4798      	blx	r3
 8010e20:	b002      	add	sp, #8
 8010e22:	bd10      	pop	{r4, pc}

08010e24 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010e24:	b538      	push	{r3, r4, r5, lr}
 8010e26:	680b      	ldr	r3, [r1, #0]
 8010e28:	460c      	mov	r4, r1
 8010e2a:	68db      	ldr	r3, [r3, #12]
 8010e2c:	4605      	mov	r5, r0
 8010e2e:	4798      	blx	r3
 8010e30:	6823      	ldr	r3, [r4, #0]
 8010e32:	4620      	mov	r0, r4
 8010e34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010e36:	4629      	mov	r1, r5
 8010e38:	4798      	blx	r3
 8010e3a:	4628      	mov	r0, r5
 8010e3c:	bd38      	pop	{r3, r4, r5, pc}

08010e3e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010e3e:	b410      	push	{r4}
 8010e40:	880a      	ldrh	r2, [r1, #0]
 8010e42:	8884      	ldrh	r4, [r0, #4]
 8010e44:	4422      	add	r2, r4
 8010e46:	800a      	strh	r2, [r1, #0]
 8010e48:	88c4      	ldrh	r4, [r0, #6]
 8010e4a:	884a      	ldrh	r2, [r1, #2]
 8010e4c:	4422      	add	r2, r4
 8010e4e:	804a      	strh	r2, [r1, #2]
 8010e50:	6940      	ldr	r0, [r0, #20]
 8010e52:	b120      	cbz	r0, 8010e5e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010e54:	6803      	ldr	r3, [r0, #0]
 8010e56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010e5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010e5c:	4718      	bx	r3
 8010e5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010e62:	4770      	bx	lr

08010e64 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8010e64:	b570      	push	{r4, r5, r6, lr}
 8010e66:	8882      	ldrh	r2, [r0, #4]
 8010e68:	880b      	ldrh	r3, [r1, #0]
 8010e6a:	4413      	add	r3, r2
 8010e6c:	800b      	strh	r3, [r1, #0]
 8010e6e:	88c2      	ldrh	r2, [r0, #6]
 8010e70:	884b      	ldrh	r3, [r1, #2]
 8010e72:	460c      	mov	r4, r1
 8010e74:	4413      	add	r3, r2
 8010e76:	804b      	strh	r3, [r1, #2]
 8010e78:	4605      	mov	r5, r0
 8010e7a:	1d01      	adds	r1, r0, #4
 8010e7c:	4620      	mov	r0, r4
 8010e7e:	f7f9 f8cd 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 8010e82:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010e86:	2b00      	cmp	r3, #0
 8010e88:	dd0b      	ble.n	8010ea2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010e8a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010e8e:	2b00      	cmp	r3, #0
 8010e90:	dd07      	ble.n	8010ea2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010e92:	6968      	ldr	r0, [r5, #20]
 8010e94:	b128      	cbz	r0, 8010ea2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010e96:	6803      	ldr	r3, [r0, #0]
 8010e98:	4621      	mov	r1, r4
 8010e9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010e9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ea0:	4718      	bx	r3
 8010ea2:	bd70      	pop	{r4, r5, r6, pc}

08010ea4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010ea4:	b570      	push	{r4, r5, r6, lr}
 8010ea6:	8882      	ldrh	r2, [r0, #4]
 8010ea8:	880b      	ldrh	r3, [r1, #0]
 8010eaa:	4413      	add	r3, r2
 8010eac:	800b      	strh	r3, [r1, #0]
 8010eae:	88c2      	ldrh	r2, [r0, #6]
 8010eb0:	884b      	ldrh	r3, [r1, #2]
 8010eb2:	460c      	mov	r4, r1
 8010eb4:	4413      	add	r3, r2
 8010eb6:	804b      	strh	r3, [r1, #2]
 8010eb8:	4605      	mov	r5, r0
 8010eba:	1d01      	adds	r1, r0, #4
 8010ebc:	4620      	mov	r0, r4
 8010ebe:	f7f9 f8ad 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 8010ec2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010ec6:	2b00      	cmp	r3, #0
 8010ec8:	dd18      	ble.n	8010efc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8010eca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010ece:	2b00      	cmp	r3, #0
 8010ed0:	dd14      	ble.n	8010efc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8010ed2:	6968      	ldr	r0, [r5, #20]
 8010ed4:	b128      	cbz	r0, 8010ee2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010ed6:	6803      	ldr	r3, [r0, #0]
 8010ed8:	4621      	mov	r1, r4
 8010eda:	691b      	ldr	r3, [r3, #16]
 8010edc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ee0:	4718      	bx	r3
 8010ee2:	4b07      	ldr	r3, [pc, #28]	; (8010f00 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010ee4:	681b      	ldr	r3, [r3, #0]
 8010ee6:	3304      	adds	r3, #4
 8010ee8:	429d      	cmp	r5, r3
 8010eea:	d107      	bne.n	8010efc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8010eec:	f7fe fff2 	bl	800fed4 <_ZN8touchgfx11Application11getInstanceEv>
 8010ef0:	6821      	ldr	r1, [r4, #0]
 8010ef2:	6862      	ldr	r2, [r4, #4]
 8010ef4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ef8:	f7ff b862 	b.w	800ffc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010efc:	bd70      	pop	{r4, r5, r6, pc}
 8010efe:	bf00      	nop
 8010f00:	200175a8 	.word	0x200175a8

08010f04 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010f04:	b570      	push	{r4, r5, r6, lr}
 8010f06:	4604      	mov	r4, r0
 8010f08:	4616      	mov	r6, r2
 8010f0a:	460d      	mov	r5, r1
 8010f0c:	b901      	cbnz	r1, 8010f10 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8010f0e:	b192      	cbz	r2, 8010f36 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8010f10:	6823      	ldr	r3, [r4, #0]
 8010f12:	4620      	mov	r0, r4
 8010f14:	699b      	ldr	r3, [r3, #24]
 8010f16:	4798      	blx	r3
 8010f18:	88e2      	ldrh	r2, [r4, #6]
 8010f1a:	88a1      	ldrh	r1, [r4, #4]
 8010f1c:	4432      	add	r2, r6
 8010f1e:	4429      	add	r1, r5
 8010f20:	4620      	mov	r0, r4
 8010f22:	b212      	sxth	r2, r2
 8010f24:	b209      	sxth	r1, r1
 8010f26:	f7f1 fe6f 	bl	8002c08 <_ZN8touchgfx8Drawable5setXYEss>
 8010f2a:	6823      	ldr	r3, [r4, #0]
 8010f2c:	4620      	mov	r0, r4
 8010f2e:	699b      	ldr	r3, [r3, #24]
 8010f30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f34:	4718      	bx	r3
 8010f36:	bd70      	pop	{r4, r5, r6, pc}

08010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010f38:	b510      	push	{r4, lr}
 8010f3a:	4604      	mov	r4, r0
 8010f3c:	4608      	mov	r0, r1
 8010f3e:	2300      	movs	r3, #0
 8010f40:	8023      	strh	r3, [r4, #0]
 8010f42:	8063      	strh	r3, [r4, #2]
 8010f44:	6803      	ldr	r3, [r0, #0]
 8010f46:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010f4a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010f4e:	80a1      	strh	r1, [r4, #4]
 8010f50:	80e2      	strh	r2, [r4, #6]
 8010f52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f54:	4621      	mov	r1, r4
 8010f56:	4798      	blx	r3
 8010f58:	4620      	mov	r0, r4
 8010f5a:	bd10      	pop	{r4, pc}

08010f5c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8010f5c:	b530      	push	{r4, r5, lr}
 8010f5e:	8083      	strh	r3, [r0, #4]
 8010f60:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8010f64:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8010f68:	7183      	strb	r3, [r0, #6]
 8010f6a:	79c3      	ldrb	r3, [r0, #7]
 8010f6c:	6101      	str	r1, [r0, #16]
 8010f6e:	f365 0306 	bfi	r3, r5, #0, #7
 8010f72:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8010f76:	8282      	strh	r2, [r0, #20]
 8010f78:	f365 13c7 	bfi	r3, r5, #7, #1
 8010f7c:	71c3      	strb	r3, [r0, #7]
 8010f7e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8010f82:	7203      	strb	r3, [r0, #8]
 8010f84:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8010f88:	7243      	strb	r3, [r0, #9]
 8010f8a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010f8e:	8143      	strh	r3, [r0, #10]
 8010f90:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8010f94:	8183      	strh	r3, [r0, #12]
 8010f96:	4b01      	ldr	r3, [pc, #4]	; (8010f9c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8010f98:	6003      	str	r3, [r0, #0]
 8010f9a:	bd30      	pop	{r4, r5, pc}
 8010f9c:	08022ce8 	.word	0x08022ce8

08010fa0 <_ZNK8touchgfx9ConstFont4findEt>:
 8010fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010fa2:	6904      	ldr	r4, [r0, #16]
 8010fa4:	b3bc      	cbz	r4, 8011016 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010fa6:	88a3      	ldrh	r3, [r4, #4]
 8010fa8:	8a82      	ldrh	r2, [r0, #20]
 8010faa:	1acb      	subs	r3, r1, r3
 8010fac:	f102 32ff 	add.w	r2, r2, #4294967295
 8010fb0:	d431      	bmi.n	8011016 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010fb2:	4293      	cmp	r3, r2
 8010fb4:	dd0c      	ble.n	8010fd0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8010fb6:	230e      	movs	r3, #14
 8010fb8:	fb03 4302 	mla	r3, r3, r2, r4
 8010fbc:	889b      	ldrh	r3, [r3, #4]
 8010fbe:	1a5b      	subs	r3, r3, r1
 8010fc0:	1ad3      	subs	r3, r2, r3
 8010fc2:	429a      	cmp	r2, r3
 8010fc4:	db27      	blt.n	8011016 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010fc6:	2b00      	cmp	r3, #0
 8010fc8:	bfbc      	itt	lt
 8010fca:	2302      	movlt	r3, #2
 8010fcc:	fb92 f3f3 	sdivlt	r3, r2, r3
 8010fd0:	2500      	movs	r5, #0
 8010fd2:	260e      	movs	r6, #14
 8010fd4:	4295      	cmp	r5, r2
 8010fd6:	dc1e      	bgt.n	8011016 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010fd8:	fb06 4003 	mla	r0, r6, r3, r4
 8010fdc:	8887      	ldrh	r7, [r0, #4]
 8010fde:	42b9      	cmp	r1, r7
 8010fe0:	d01a      	beq.n	8011018 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8010fe2:	d20d      	bcs.n	8011000 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8010fe4:	1e5a      	subs	r2, r3, #1
 8010fe6:	4295      	cmp	r5, r2
 8010fe8:	dc15      	bgt.n	8011016 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010fea:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8010fee:	1a5b      	subs	r3, r3, r1
 8010ff0:	1ad3      	subs	r3, r2, r3
 8010ff2:	429a      	cmp	r2, r3
 8010ff4:	db0f      	blt.n	8011016 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010ff6:	429d      	cmp	r5, r3
 8010ff8:	ddec      	ble.n	8010fd4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010ffa:	1953      	adds	r3, r2, r5
 8010ffc:	105b      	asrs	r3, r3, #1
 8010ffe:	e7e9      	b.n	8010fd4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011000:	1c5d      	adds	r5, r3, #1
 8011002:	42aa      	cmp	r2, r5
 8011004:	db07      	blt.n	8011016 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011006:	8a43      	ldrh	r3, [r0, #18]
 8011008:	1acb      	subs	r3, r1, r3
 801100a:	442b      	add	r3, r5
 801100c:	429d      	cmp	r5, r3
 801100e:	dc02      	bgt.n	8011016 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011010:	429a      	cmp	r2, r3
 8011012:	dadf      	bge.n	8010fd4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011014:	e7f1      	b.n	8010ffa <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011016:	2000      	movs	r0, #0
 8011018:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801101a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801101a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801101c:	4604      	mov	r4, r0
 801101e:	4617      	mov	r7, r2
 8011020:	461e      	mov	r6, r3
 8011022:	b911      	cbnz	r1, 801102a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011024:	2500      	movs	r5, #0
 8011026:	4628      	mov	r0, r5
 8011028:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801102a:	290a      	cmp	r1, #10
 801102c:	d0fa      	beq.n	8011024 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801102e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011032:	4291      	cmp	r1, r2
 8011034:	d0f6      	beq.n	8011024 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011036:	f242 020b 	movw	r2, #8203	; 0x200b
 801103a:	4291      	cmp	r1, r2
 801103c:	d0f2      	beq.n	8011024 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801103e:	f7ff ffaf 	bl	8010fa0 <_ZNK8touchgfx9ConstFont4findEt>
 8011042:	4605      	mov	r5, r0
 8011044:	b950      	cbnz	r0, 801105c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011046:	6823      	ldr	r3, [r4, #0]
 8011048:	4620      	mov	r0, r4
 801104a:	691b      	ldr	r3, [r3, #16]
 801104c:	4798      	blx	r3
 801104e:	4601      	mov	r1, r0
 8011050:	4620      	mov	r0, r4
 8011052:	f7ff ffa5 	bl	8010fa0 <_ZNK8touchgfx9ConstFont4findEt>
 8011056:	4605      	mov	r5, r0
 8011058:	2800      	cmp	r0, #0
 801105a:	d0e3      	beq.n	8011024 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801105c:	6823      	ldr	r3, [r4, #0]
 801105e:	4629      	mov	r1, r5
 8011060:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011062:	4620      	mov	r0, r4
 8011064:	4798      	blx	r3
 8011066:	6038      	str	r0, [r7, #0]
 8011068:	6823      	ldr	r3, [r4, #0]
 801106a:	4620      	mov	r0, r4
 801106c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801106e:	4798      	blx	r3
 8011070:	7030      	strb	r0, [r6, #0]
 8011072:	e7d8      	b.n	8011026 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011074 <_ZN8touchgfx4clzuEm>:
 8011074:	4603      	mov	r3, r0
 8011076:	b1c8      	cbz	r0, 80110ac <_ZN8touchgfx4clzuEm+0x38>
 8011078:	0c02      	lsrs	r2, r0, #16
 801107a:	0412      	lsls	r2, r2, #16
 801107c:	b9a2      	cbnz	r2, 80110a8 <_ZN8touchgfx4clzuEm+0x34>
 801107e:	0403      	lsls	r3, r0, #16
 8011080:	2010      	movs	r0, #16
 8011082:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011086:	bf04      	itt	eq
 8011088:	021b      	lsleq	r3, r3, #8
 801108a:	3008      	addeq	r0, #8
 801108c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011090:	bf04      	itt	eq
 8011092:	011b      	lsleq	r3, r3, #4
 8011094:	3004      	addeq	r0, #4
 8011096:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801109a:	bf04      	itt	eq
 801109c:	009b      	lsleq	r3, r3, #2
 801109e:	3002      	addeq	r0, #2
 80110a0:	2b00      	cmp	r3, #0
 80110a2:	db04      	blt.n	80110ae <_ZN8touchgfx4clzuEm+0x3a>
 80110a4:	3001      	adds	r0, #1
 80110a6:	4770      	bx	lr
 80110a8:	2000      	movs	r0, #0
 80110aa:	e7ea      	b.n	8011082 <_ZN8touchgfx4clzuEm+0xe>
 80110ac:	2020      	movs	r0, #32
 80110ae:	4770      	bx	lr

080110b0 <_ZN8touchgfx7muldivuEmmmRm>:
 80110b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110b4:	4680      	mov	r8, r0
 80110b6:	460f      	mov	r7, r1
 80110b8:	4615      	mov	r5, r2
 80110ba:	461e      	mov	r6, r3
 80110bc:	f7ff ffda 	bl	8011074 <_ZN8touchgfx4clzuEm>
 80110c0:	b998      	cbnz	r0, 80110ea <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 80110c2:	4608      	mov	r0, r1
 80110c4:	f7ff ffd6 	bl	8011074 <_ZN8touchgfx4clzuEm>
 80110c8:	2800      	cmp	r0, #0
 80110ca:	dd08      	ble.n	80110de <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 80110cc:	4633      	mov	r3, r6
 80110ce:	462a      	mov	r2, r5
 80110d0:	4641      	mov	r1, r8
 80110d2:	4638      	mov	r0, r7
 80110d4:	f7ff ffec 	bl	80110b0 <_ZN8touchgfx7muldivuEmmmRm>
 80110d8:	b003      	add	sp, #12
 80110da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110de:	f04f 33ff 	mov.w	r3, #4294967295
 80110e2:	6033      	str	r3, [r6, #0]
 80110e4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80110e8:	e7f6      	b.n	80110d8 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80110ea:	fa31 f900 	lsrs.w	r9, r1, r0
 80110ee:	fb01 f308 	mul.w	r3, r1, r8
 80110f2:	d105      	bne.n	8011100 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80110f4:	fbb3 f0f5 	udiv	r0, r3, r5
 80110f8:	fb05 3510 	mls	r5, r5, r0, r3
 80110fc:	6035      	str	r5, [r6, #0]
 80110fe:	e7eb      	b.n	80110d8 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8011100:	2301      	movs	r3, #1
 8011102:	fa08 fb00 	lsl.w	fp, r8, r0
 8011106:	fa03 f000 	lsl.w	r0, r3, r0
 801110a:	3801      	subs	r0, #1
 801110c:	462a      	mov	r2, r5
 801110e:	4633      	mov	r3, r6
 8011110:	4641      	mov	r1, r8
 8011112:	4038      	ands	r0, r7
 8011114:	f7ff ffcc 	bl	80110b0 <_ZN8touchgfx7muldivuEmmmRm>
 8011118:	fbbb faf5 	udiv	sl, fp, r5
 801111c:	462a      	mov	r2, r5
 801111e:	4607      	mov	r7, r0
 8011120:	ab01      	add	r3, sp, #4
 8011122:	fb05 b11a 	mls	r1, r5, sl, fp
 8011126:	4648      	mov	r0, r9
 8011128:	f7ff ffc2 	bl	80110b0 <_ZN8touchgfx7muldivuEmmmRm>
 801112c:	9b01      	ldr	r3, [sp, #4]
 801112e:	6832      	ldr	r2, [r6, #0]
 8011130:	fb09 f40a 	mul.w	r4, r9, sl
 8011134:	441a      	add	r2, r3
 8011136:	fbb2 f3f5 	udiv	r3, r2, r5
 801113a:	441c      	add	r4, r3
 801113c:	443c      	add	r4, r7
 801113e:	4420      	add	r0, r4
 8011140:	fb05 2513 	mls	r5, r5, r3, r2
 8011144:	e7da      	b.n	80110fc <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08011146 <_ZN8touchgfx6muldivElllRl>:
 8011146:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011148:	2800      	cmp	r0, #0
 801114a:	bfba      	itte	lt
 801114c:	4240      	neglt	r0, r0
 801114e:	f04f 34ff 	movlt.w	r4, #4294967295
 8011152:	2401      	movge	r4, #1
 8011154:	2900      	cmp	r1, #0
 8011156:	bfbc      	itt	lt
 8011158:	4249      	neglt	r1, r1
 801115a:	4264      	neglt	r4, r4
 801115c:	2a00      	cmp	r2, #0
 801115e:	bfb6      	itet	lt
 8011160:	4265      	neglt	r5, r4
 8011162:	4625      	movge	r5, r4
 8011164:	4252      	neglt	r2, r2
 8011166:	4288      	cmp	r0, r1
 8011168:	461e      	mov	r6, r3
 801116a:	bfc2      	ittt	gt
 801116c:	4603      	movgt	r3, r0
 801116e:	4608      	movgt	r0, r1
 8011170:	4619      	movgt	r1, r3
 8011172:	ab01      	add	r3, sp, #4
 8011174:	f7ff ff9c 	bl	80110b0 <_ZN8touchgfx7muldivuEmmmRm>
 8011178:	9b01      	ldr	r3, [sp, #4]
 801117a:	4368      	muls	r0, r5
 801117c:	435c      	muls	r4, r3
 801117e:	6034      	str	r4, [r6, #0]
 8011180:	b002      	add	sp, #8
 8011182:	bd70      	pop	{r4, r5, r6, pc}

08011184 <_ZN8touchgfx6muldivElll>:
 8011184:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011186:	4606      	mov	r6, r0
 8011188:	ab01      	add	r3, sp, #4
 801118a:	460d      	mov	r5, r1
 801118c:	4614      	mov	r4, r2
 801118e:	f7ff ffda 	bl	8011146 <_ZN8touchgfx6muldivElllRl>
 8011192:	2e00      	cmp	r6, #0
 8011194:	db20      	blt.n	80111d8 <_ZN8touchgfx6muldivElll+0x54>
 8011196:	bf14      	ite	ne
 8011198:	2301      	movne	r3, #1
 801119a:	2300      	moveq	r3, #0
 801119c:	2d00      	cmp	r5, #0
 801119e:	db1e      	blt.n	80111de <_ZN8touchgfx6muldivElll+0x5a>
 80111a0:	bf14      	ite	ne
 80111a2:	2201      	movne	r2, #1
 80111a4:	2200      	moveq	r2, #0
 80111a6:	2c00      	cmp	r4, #0
 80111a8:	fb03 f202 	mul.w	r2, r3, r2
 80111ac:	db1a      	blt.n	80111e4 <_ZN8touchgfx6muldivElll+0x60>
 80111ae:	bf14      	ite	ne
 80111b0:	2301      	movne	r3, #1
 80111b2:	2300      	moveq	r3, #0
 80111b4:	4353      	muls	r3, r2
 80111b6:	2b01      	cmp	r3, #1
 80111b8:	d117      	bne.n	80111ea <_ZN8touchgfx6muldivElll+0x66>
 80111ba:	9b01      	ldr	r3, [sp, #4]
 80111bc:	2c00      	cmp	r4, #0
 80111be:	bfb8      	it	lt
 80111c0:	4264      	neglt	r4, r4
 80111c2:	2b00      	cmp	r3, #0
 80111c4:	f104 0401 	add.w	r4, r4, #1
 80111c8:	bfb8      	it	lt
 80111ca:	425b      	neglt	r3, r3
 80111cc:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80111d0:	db00      	blt.n	80111d4 <_ZN8touchgfx6muldivElll+0x50>
 80111d2:	3001      	adds	r0, #1
 80111d4:	b002      	add	sp, #8
 80111d6:	bd70      	pop	{r4, r5, r6, pc}
 80111d8:	f04f 33ff 	mov.w	r3, #4294967295
 80111dc:	e7de      	b.n	801119c <_ZN8touchgfx6muldivElll+0x18>
 80111de:	f04f 32ff 	mov.w	r2, #4294967295
 80111e2:	e7e0      	b.n	80111a6 <_ZN8touchgfx6muldivElll+0x22>
 80111e4:	f04f 33ff 	mov.w	r3, #4294967295
 80111e8:	e7e4      	b.n	80111b4 <_ZN8touchgfx6muldivElll+0x30>
 80111ea:	3301      	adds	r3, #1
 80111ec:	d1f2      	bne.n	80111d4 <_ZN8touchgfx6muldivElll+0x50>
 80111ee:	9b01      	ldr	r3, [sp, #4]
 80111f0:	2c00      	cmp	r4, #0
 80111f2:	bfb8      	it	lt
 80111f4:	4264      	neglt	r4, r4
 80111f6:	2b00      	cmp	r3, #0
 80111f8:	bfb8      	it	lt
 80111fa:	425b      	neglt	r3, r3
 80111fc:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8011200:	bfc8      	it	gt
 8011202:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8011206:	e7e5      	b.n	80111d4 <_ZN8touchgfx6muldivElll+0x50>

08011208 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011208:	2000      	movs	r0, #0
 801120a:	4770      	bx	lr

0801120c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801120c:	2001      	movs	r0, #1
 801120e:	4770      	bx	lr

08011210 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011210:	2002      	movs	r0, #2
 8011212:	4770      	bx	lr

08011214 <_ZN8touchgfx6ScreenD1Ev>:
 8011214:	4770      	bx	lr

08011216 <_ZN8touchgfx12GestureEventD1Ev>:
 8011216:	4770      	bx	lr

08011218 <_ZN8touchgfx9DragEventD1Ev>:
 8011218:	4770      	bx	lr

0801121a <_ZN8touchgfx10ClickEventD1Ev>:
 801121a:	4770      	bx	lr

0801121c <_ZN8touchgfx10ClickEventD0Ev>:
 801121c:	b510      	push	{r4, lr}
 801121e:	210c      	movs	r1, #12
 8011220:	4604      	mov	r4, r0
 8011222:	f00e f973 	bl	801f50c <_ZdlPvj>
 8011226:	4620      	mov	r0, r4
 8011228:	bd10      	pop	{r4, pc}

0801122a <_ZN8touchgfx9DragEventD0Ev>:
 801122a:	b510      	push	{r4, lr}
 801122c:	2110      	movs	r1, #16
 801122e:	4604      	mov	r4, r0
 8011230:	f00e f96c 	bl	801f50c <_ZdlPvj>
 8011234:	4620      	mov	r0, r4
 8011236:	bd10      	pop	{r4, pc}

08011238 <_ZN8touchgfx12GestureEventD0Ev>:
 8011238:	b510      	push	{r4, lr}
 801123a:	210c      	movs	r1, #12
 801123c:	4604      	mov	r4, r0
 801123e:	f00e f965 	bl	801f50c <_ZdlPvj>
 8011242:	4620      	mov	r0, r4
 8011244:	bd10      	pop	{r4, pc}

08011246 <_ZN8touchgfx6ScreenD0Ev>:
 8011246:	b510      	push	{r4, lr}
 8011248:	213c      	movs	r1, #60	; 0x3c
 801124a:	4604      	mov	r4, r0
 801124c:	f00e f95e 	bl	801f50c <_ZdlPvj>
 8011250:	4620      	mov	r0, r4
 8011252:	bd10      	pop	{r4, pc}

08011254 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011254:	b530      	push	{r4, r5, lr}
 8011256:	460d      	mov	r5, r1
 8011258:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801125a:	b087      	sub	sp, #28
 801125c:	4604      	mov	r4, r0
 801125e:	b301      	cbz	r1, 80112a2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011260:	a801      	add	r0, sp, #4
 8011262:	f7ff fe69 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011266:	892a      	ldrh	r2, [r5, #8]
 8011268:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801126c:	7928      	ldrb	r0, [r5, #4]
 801126e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011272:	f88d 0010 	strb.w	r0, [sp, #16]
 8011276:	1ad2      	subs	r2, r2, r3
 8011278:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801127a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801127c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011280:	441a      	add	r2, r3
 8011282:	896b      	ldrh	r3, [r5, #10]
 8011284:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011288:	f8ad 2014 	strh.w	r2, [sp, #20]
 801128c:	1b5b      	subs	r3, r3, r5
 801128e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8011290:	442b      	add	r3, r5
 8011292:	4d05      	ldr	r5, [pc, #20]	; (80112a8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011294:	9503      	str	r5, [sp, #12]
 8011296:	f8ad 3016 	strh.w	r3, [sp, #22]
 801129a:	6803      	ldr	r3, [r0, #0]
 801129c:	a903      	add	r1, sp, #12
 801129e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80112a0:	4798      	blx	r3
 80112a2:	b007      	add	sp, #28
 80112a4:	bd30      	pop	{r4, r5, pc}
 80112a6:	bf00      	nop
 80112a8:	08022d68 	.word	0x08022d68

080112ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80112ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112b0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80112b2:	b08a      	sub	sp, #40	; 0x28
 80112b4:	4604      	mov	r4, r0
 80112b6:	460d      	mov	r5, r1
 80112b8:	b113      	cbz	r3, 80112c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80112ba:	790b      	ldrb	r3, [r1, #4]
 80112bc:	2b00      	cmp	r3, #0
 80112be:	d044      	beq.n	801134a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80112c0:	f104 0804 	add.w	r8, r4, #4
 80112c4:	4641      	mov	r1, r8
 80112c6:	a803      	add	r0, sp, #12
 80112c8:	f7ff fe36 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80112cc:	792b      	ldrb	r3, [r5, #4]
 80112ce:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80112d2:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80112d6:	b983      	cbnz	r3, 80112fa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80112d8:	892a      	ldrh	r2, [r5, #8]
 80112da:	88e9      	ldrh	r1, [r5, #6]
 80112dc:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80112e0:	1b92      	subs	r2, r2, r6
 80112e2:	1bc9      	subs	r1, r1, r7
 80112e4:	9301      	str	r3, [sp, #4]
 80112e6:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80112ea:	9300      	str	r3, [sp, #0]
 80112ec:	b212      	sxth	r2, r2
 80112ee:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80112f2:	b209      	sxth	r1, r1
 80112f4:	4640      	mov	r0, r8
 80112f6:	f7f8 fdad 	bl	8009e54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80112fa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80112fc:	b329      	cbz	r1, 801134a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80112fe:	a805      	add	r0, sp, #20
 8011300:	f7ff fe1a 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011304:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011308:	792b      	ldrb	r3, [r5, #4]
 801130a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801130c:	f88d 3020 	strb.w	r3, [sp, #32]
 8011310:	1abf      	subs	r7, r7, r2
 8011312:	88ea      	ldrh	r2, [r5, #6]
 8011314:	4417      	add	r7, r2
 8011316:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8011318:	4417      	add	r7, r2
 801131a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801131e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8011322:	1ab6      	subs	r6, r6, r2
 8011324:	892a      	ldrh	r2, [r5, #8]
 8011326:	4416      	add	r6, r2
 8011328:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801132a:	4416      	add	r6, r2
 801132c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8011330:	4a07      	ldr	r2, [pc, #28]	; (8011350 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011332:	9207      	str	r2, [sp, #28]
 8011334:	2600      	movs	r6, #0
 8011336:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801133a:	6803      	ldr	r3, [r0, #0]
 801133c:	a907      	add	r1, sp, #28
 801133e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011340:	4798      	blx	r3
 8011342:	792b      	ldrb	r3, [r5, #4]
 8011344:	b10b      	cbz	r3, 801134a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011346:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801134a:	b00a      	add	sp, #40	; 0x28
 801134c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011350:	08022d40 	.word	0x08022d40

08011354 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011354:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011358:	460c      	mov	r4, r1
 801135a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801135c:	b088      	sub	sp, #32
 801135e:	4605      	mov	r5, r0
 8011360:	2900      	cmp	r1, #0
 8011362:	d06d      	beq.n	8011440 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011364:	4668      	mov	r0, sp
 8011366:	f7ff fde7 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801136a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801136c:	88e3      	ldrh	r3, [r4, #6]
 801136e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011372:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011376:	440b      	add	r3, r1
 8011378:	b21b      	sxth	r3, r3
 801137a:	4543      	cmp	r3, r8
 801137c:	db31      	blt.n	80113e2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801137e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011382:	44c4      	add	ip, r8
 8011384:	fa0f fc8c 	sxth.w	ip, ip
 8011388:	4563      	cmp	r3, ip
 801138a:	da2a      	bge.n	80113e2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801138c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801138e:	8926      	ldrh	r6, [r4, #8]
 8011390:	4416      	add	r6, r2
 8011392:	b236      	sxth	r6, r6
 8011394:	42be      	cmp	r6, r7
 8011396:	db24      	blt.n	80113e2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011398:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801139c:	4438      	add	r0, r7
 801139e:	b200      	sxth	r0, r0
 80113a0:	4286      	cmp	r6, r0
 80113a2:	da1e      	bge.n	80113e2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80113a4:	8963      	ldrh	r3, [r4, #10]
 80113a6:	4419      	add	r1, r3
 80113a8:	b209      	sxth	r1, r1
 80113aa:	4541      	cmp	r1, r8
 80113ac:	db08      	blt.n	80113c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80113ae:	4561      	cmp	r1, ip
 80113b0:	da06      	bge.n	80113c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80113b2:	89a3      	ldrh	r3, [r4, #12]
 80113b4:	441a      	add	r2, r3
 80113b6:	b212      	sxth	r2, r2
 80113b8:	42ba      	cmp	r2, r7
 80113ba:	db01      	blt.n	80113c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80113bc:	4282      	cmp	r2, r0
 80113be:	db10      	blt.n	80113e2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80113c0:	4b21      	ldr	r3, [pc, #132]	; (8011448 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80113c2:	9304      	str	r3, [sp, #16]
 80113c4:	2302      	movs	r3, #2
 80113c6:	f88d 3014 	strb.w	r3, [sp, #20]
 80113ca:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80113cc:	2300      	movs	r3, #0
 80113ce:	f8ad 3016 	strh.w	r3, [sp, #22]
 80113d2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80113d6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80113da:	6803      	ldr	r3, [r0, #0]
 80113dc:	a904      	add	r1, sp, #16
 80113de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80113e0:	4798      	blx	r3
 80113e2:	1d29      	adds	r1, r5, #4
 80113e4:	a802      	add	r0, sp, #8
 80113e6:	f7ff fda7 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80113ea:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80113ee:	88e0      	ldrh	r0, [r4, #6]
 80113f0:	7921      	ldrb	r1, [r4, #4]
 80113f2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80113f6:	8922      	ldrh	r2, [r4, #8]
 80113f8:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80113fa:	f88d 1014 	strb.w	r1, [sp, #20]
 80113fe:	eba3 0808 	sub.w	r8, r3, r8
 8011402:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011406:	1bdf      	subs	r7, r3, r7
 8011408:	b2bb      	uxth	r3, r7
 801140a:	fa1f f888 	uxth.w	r8, r8
 801140e:	8967      	ldrh	r7, [r4, #10]
 8011410:	89a4      	ldrh	r4, [r4, #12]
 8011412:	4440      	add	r0, r8
 8011414:	4460      	add	r0, ip
 8011416:	441a      	add	r2, r3
 8011418:	44b8      	add	r8, r7
 801141a:	4423      	add	r3, r4
 801141c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011420:	4433      	add	r3, r6
 8011422:	4432      	add	r2, r6
 8011424:	44e0      	add	r8, ip
 8011426:	4c09      	ldr	r4, [pc, #36]	; (801144c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011428:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801142a:	9404      	str	r4, [sp, #16]
 801142c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011430:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011434:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011438:	6803      	ldr	r3, [r0, #0]
 801143a:	a904      	add	r1, sp, #16
 801143c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801143e:	4798      	blx	r3
 8011440:	b008      	add	sp, #32
 8011442:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011446:	bf00      	nop
 8011448:	08022d40 	.word	0x08022d40
 801144c:	08022d54 	.word	0x08022d54

08011450 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011450:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011452:	4604      	mov	r4, r0
 8011454:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011458:	3201      	adds	r2, #1
 801145a:	d112      	bne.n	8011482 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801145c:	6803      	ldr	r3, [r0, #0]
 801145e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011462:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011466:	f8ad 1004 	strh.w	r1, [sp, #4]
 801146a:	2500      	movs	r5, #0
 801146c:	9500      	str	r5, [sp, #0]
 801146e:	466d      	mov	r5, sp
 8011470:	4629      	mov	r1, r5
 8011472:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011476:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011478:	4798      	blx	r3
 801147a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801147e:	e884 0003 	stmia.w	r4, {r0, r1}
 8011482:	4620      	mov	r0, r4
 8011484:	b003      	add	sp, #12
 8011486:	bd30      	pop	{r4, r5, pc}

08011488 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011488:	b513      	push	{r0, r1, r4, lr}
 801148a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801148e:	3301      	adds	r3, #1
 8011490:	4604      	mov	r4, r0
 8011492:	d109      	bne.n	80114a8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011494:	4601      	mov	r1, r0
 8011496:	4668      	mov	r0, sp
 8011498:	f7ff fd4e 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801149c:	f8bd 3000 	ldrh.w	r3, [sp]
 80114a0:	8423      	strh	r3, [r4, #32]
 80114a2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80114a6:	8463      	strh	r3, [r4, #34]	; 0x22
 80114a8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80114ac:	b002      	add	sp, #8
 80114ae:	bd10      	pop	{r4, pc}

080114b0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80114b0:	b513      	push	{r0, r1, r4, lr}
 80114b2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80114b6:	3301      	adds	r3, #1
 80114b8:	4604      	mov	r4, r0
 80114ba:	d109      	bne.n	80114d0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80114bc:	4601      	mov	r1, r0
 80114be:	4668      	mov	r0, sp
 80114c0:	f7ff fd3a 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80114c4:	f8bd 3000 	ldrh.w	r3, [sp]
 80114c8:	8423      	strh	r3, [r4, #32]
 80114ca:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80114ce:	8463      	strh	r3, [r4, #34]	; 0x22
 80114d0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80114d4:	b002      	add	sp, #8
 80114d6:	bd10      	pop	{r4, pc}

080114d8 <_ZN8touchgfx6ScreenC1Ev>:
 80114d8:	b570      	push	{r4, r5, r6, lr}
 80114da:	4605      	mov	r5, r0
 80114dc:	4b16      	ldr	r3, [pc, #88]	; (8011538 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80114de:	f845 3b04 	str.w	r3, [r5], #4
 80114e2:	2300      	movs	r3, #0
 80114e4:	8103      	strh	r3, [r0, #8]
 80114e6:	8143      	strh	r3, [r0, #10]
 80114e8:	8183      	strh	r3, [r0, #12]
 80114ea:	81c3      	strh	r3, [r0, #14]
 80114ec:	8203      	strh	r3, [r0, #16]
 80114ee:	8243      	strh	r3, [r0, #18]
 80114f0:	8283      	strh	r3, [r0, #20]
 80114f2:	82c3      	strh	r3, [r0, #22]
 80114f4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80114f8:	6203      	str	r3, [r0, #32]
 80114fa:	8483      	strh	r3, [r0, #36]	; 0x24
 80114fc:	84c3      	strh	r3, [r0, #38]	; 0x26
 80114fe:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8011502:	4a0e      	ldr	r2, [pc, #56]	; (801153c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011504:	6343      	str	r3, [r0, #52]	; 0x34
 8011506:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801150a:	4b0d      	ldr	r3, [pc, #52]	; (8011540 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801150c:	6042      	str	r2, [r0, #4]
 801150e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011512:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8011514:	4a0b      	ldr	r2, [pc, #44]	; (8011544 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011516:	4604      	mov	r4, r0
 8011518:	2101      	movs	r1, #1
 801151a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801151e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8011522:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011526:	4628      	mov	r0, r5
 8011528:	4798      	blx	r3
 801152a:	6863      	ldr	r3, [r4, #4]
 801152c:	4628      	mov	r0, r5
 801152e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011530:	4631      	mov	r1, r6
 8011532:	4798      	blx	r3
 8011534:	4620      	mov	r0, r4
 8011536:	bd70      	pop	{r4, r5, r6, pc}
 8011538:	08022d7c 	.word	0x08022d7c
 801153c:	080222d8 	.word	0x080222d8
 8011540:	2001755a 	.word	0x2001755a
 8011544:	20017558 	.word	0x20017558

08011548 <_ZN8touchgfx6Screen4drawEv>:
 8011548:	b507      	push	{r0, r1, r2, lr}
 801154a:	4b09      	ldr	r3, [pc, #36]	; (8011570 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801154c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011550:	4b08      	ldr	r3, [pc, #32]	; (8011574 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011552:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011556:	f9b3 3000 	ldrsh.w	r3, [r3]
 801155a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801155e:	6803      	ldr	r3, [r0, #0]
 8011560:	2100      	movs	r1, #0
 8011562:	9100      	str	r1, [sp, #0]
 8011564:	689b      	ldr	r3, [r3, #8]
 8011566:	4669      	mov	r1, sp
 8011568:	4798      	blx	r3
 801156a:	b003      	add	sp, #12
 801156c:	f85d fb04 	ldr.w	pc, [sp], #4
 8011570:	20017558 	.word	0x20017558
 8011574:	2001755a 	.word	0x2001755a

08011578 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801157c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011580:	2b00      	cmp	r3, #0
 8011582:	b089      	sub	sp, #36	; 0x24
 8011584:	4680      	mov	r8, r0
 8011586:	460c      	mov	r4, r1
 8011588:	4615      	mov	r5, r2
 801158a:	dd0e      	ble.n	80115aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801158c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011590:	2b00      	cmp	r3, #0
 8011592:	dd0a      	ble.n	80115aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011594:	4628      	mov	r0, r5
 8011596:	f7ff ff5b 	bl	8011450 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801159a:	4621      	mov	r1, r4
 801159c:	f7fe fc01 	bl	800fda2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80115a0:	69eb      	ldr	r3, [r5, #28]
 80115a2:	b928      	cbnz	r0, 80115b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80115a4:	461d      	mov	r5, r3
 80115a6:	2b00      	cmp	r3, #0
 80115a8:	d1f4      	bne.n	8011594 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80115aa:	b009      	add	sp, #36	; 0x24
 80115ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115b0:	ae04      	add	r6, sp, #16
 80115b2:	2b00      	cmp	r3, #0
 80115b4:	f000 80b5 	beq.w	8011722 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80115b8:	682b      	ldr	r3, [r5, #0]
 80115ba:	4629      	mov	r1, r5
 80115bc:	68db      	ldr	r3, [r3, #12]
 80115be:	a802      	add	r0, sp, #8
 80115c0:	4798      	blx	r3
 80115c2:	4628      	mov	r0, r5
 80115c4:	f7ff ff60 	bl	8011488 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80115c8:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80115cc:	4407      	add	r7, r0
 80115ce:	4628      	mov	r0, r5
 80115d0:	f7ff ff6e 	bl	80114b0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80115d4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80115d8:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80115dc:	f8ad 2014 	strh.w	r2, [sp, #20]
 80115e0:	4418      	add	r0, r3
 80115e2:	4621      	mov	r1, r4
 80115e4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80115e8:	f8ad 0012 	strh.w	r0, [sp, #18]
 80115ec:	b23f      	sxth	r7, r7
 80115ee:	4630      	mov	r0, r6
 80115f0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80115f4:	f8ad 7010 	strh.w	r7, [sp, #16]
 80115f8:	f7f8 fd10 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 80115fc:	4628      	mov	r0, r5
 80115fe:	f7ff ff27 	bl	8011450 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011602:	4602      	mov	r2, r0
 8011604:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011608:	ab06      	add	r3, sp, #24
 801160a:	e883 0003 	stmia.w	r3, {r0, r1}
 801160e:	4611      	mov	r1, r2
 8011610:	4618      	mov	r0, r3
 8011612:	f7f8 fd03 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 8011616:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801161a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801161e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011622:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011626:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801162a:	4299      	cmp	r1, r3
 801162c:	d10b      	bne.n	8011646 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801162e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011632:	4552      	cmp	r2, sl
 8011634:	d107      	bne.n	8011646 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011636:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801163a:	455a      	cmp	r2, fp
 801163c:	d103      	bne.n	8011646 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801163e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011642:	454a      	cmp	r2, r9
 8011644:	d06d      	beq.n	8011722 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011646:	f1bb 0f00 	cmp.w	fp, #0
 801164a:	dd65      	ble.n	8011718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801164c:	f1b9 0f00 	cmp.w	r9, #0
 8011650:	dd62      	ble.n	8011718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011652:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011656:	fa1f f08a 	uxth.w	r0, sl
 801165a:	4552      	cmp	r2, sl
 801165c:	9000      	str	r0, [sp, #0]
 801165e:	da12      	bge.n	8011686 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011660:	9301      	str	r3, [sp, #4]
 8011662:	9b00      	ldr	r3, [sp, #0]
 8011664:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011668:	f8ad 2012 	strh.w	r2, [sp, #18]
 801166c:	1a9a      	subs	r2, r3, r2
 801166e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011672:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011676:	f8ad 2016 	strh.w	r2, [sp, #22]
 801167a:	69ea      	ldr	r2, [r5, #28]
 801167c:	4631      	mov	r1, r6
 801167e:	4640      	mov	r0, r8
 8011680:	f7ff ff7a 	bl	8011578 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011684:	9b01      	ldr	r3, [sp, #4]
 8011686:	f9b4 2000 	ldrsh.w	r2, [r4]
 801168a:	429a      	cmp	r2, r3
 801168c:	b29f      	uxth	r7, r3
 801168e:	da0d      	bge.n	80116ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011690:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011694:	1aba      	subs	r2, r7, r2
 8011696:	f8ad a012 	strh.w	sl, [sp, #18]
 801169a:	f8ad 2014 	strh.w	r2, [sp, #20]
 801169e:	f8ad 9016 	strh.w	r9, [sp, #22]
 80116a2:	69ea      	ldr	r2, [r5, #28]
 80116a4:	4631      	mov	r1, r6
 80116a6:	4640      	mov	r0, r8
 80116a8:	f7ff ff66 	bl	8011578 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80116ac:	8822      	ldrh	r2, [r4, #0]
 80116ae:	88a3      	ldrh	r3, [r4, #4]
 80116b0:	445f      	add	r7, fp
 80116b2:	4413      	add	r3, r2
 80116b4:	b29b      	uxth	r3, r3
 80116b6:	b2bf      	uxth	r7, r7
 80116b8:	b23a      	sxth	r2, r7
 80116ba:	b219      	sxth	r1, r3
 80116bc:	4291      	cmp	r1, r2
 80116be:	dd0d      	ble.n	80116dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80116c0:	1bdb      	subs	r3, r3, r7
 80116c2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80116c6:	f8ad a012 	strh.w	sl, [sp, #18]
 80116ca:	f8ad 3014 	strh.w	r3, [sp, #20]
 80116ce:	f8ad 9016 	strh.w	r9, [sp, #22]
 80116d2:	69ea      	ldr	r2, [r5, #28]
 80116d4:	4631      	mov	r1, r6
 80116d6:	4640      	mov	r0, r8
 80116d8:	f7ff ff4e 	bl	8011578 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80116dc:	88e2      	ldrh	r2, [r4, #6]
 80116de:	8863      	ldrh	r3, [r4, #2]
 80116e0:	4413      	add	r3, r2
 80116e2:	9a00      	ldr	r2, [sp, #0]
 80116e4:	444a      	add	r2, r9
 80116e6:	b29b      	uxth	r3, r3
 80116e8:	fa1f f982 	uxth.w	r9, r2
 80116ec:	fa0f f289 	sxth.w	r2, r9
 80116f0:	b219      	sxth	r1, r3
 80116f2:	428a      	cmp	r2, r1
 80116f4:	da15      	bge.n	8011722 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80116f6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80116fa:	f9b4 0000 	ldrsh.w	r0, [r4]
 80116fe:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011702:	eba3 0309 	sub.w	r3, r3, r9
 8011706:	f8ad 0010 	strh.w	r0, [sp, #16]
 801170a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801170e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011712:	69ea      	ldr	r2, [r5, #28]
 8011714:	4631      	mov	r1, r6
 8011716:	e001      	b.n	801171c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011718:	69ea      	ldr	r2, [r5, #28]
 801171a:	4621      	mov	r1, r4
 801171c:	4640      	mov	r0, r8
 801171e:	f7ff ff2b 	bl	8011578 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011722:	4628      	mov	r0, r5
 8011724:	f7ff fe94 	bl	8011450 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011728:	6861      	ldr	r1, [r4, #4]
 801172a:	4602      	mov	r2, r0
 801172c:	6820      	ldr	r0, [r4, #0]
 801172e:	4633      	mov	r3, r6
 8011730:	c303      	stmia	r3!, {r0, r1}
 8011732:	4611      	mov	r1, r2
 8011734:	4630      	mov	r0, r6
 8011736:	f7f8 fc71 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 801173a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801173e:	2b00      	cmp	r3, #0
 8011740:	f77f af33 	ble.w	80115aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011744:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011748:	2b00      	cmp	r3, #0
 801174a:	f77f af2e 	ble.w	80115aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801174e:	4628      	mov	r0, r5
 8011750:	f7ff fe9a 	bl	8011488 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011754:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011758:	1a18      	subs	r0, r3, r0
 801175a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801175e:	4628      	mov	r0, r5
 8011760:	f7ff fea6 	bl	80114b0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011764:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011768:	1a18      	subs	r0, r3, r0
 801176a:	f8ad 0012 	strh.w	r0, [sp, #18]
 801176e:	682b      	ldr	r3, [r5, #0]
 8011770:	4631      	mov	r1, r6
 8011772:	689b      	ldr	r3, [r3, #8]
 8011774:	4628      	mov	r0, r5
 8011776:	4798      	blx	r3
 8011778:	e717      	b.n	80115aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801177a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801177a:	b570      	push	{r4, r5, r6, lr}
 801177c:	460c      	mov	r4, r1
 801177e:	b086      	sub	sp, #24
 8011780:	1d06      	adds	r6, r0, #4
 8011782:	2300      	movs	r3, #0
 8011784:	4631      	mov	r1, r6
 8011786:	4605      	mov	r5, r0
 8011788:	a802      	add	r0, sp, #8
 801178a:	9301      	str	r3, [sp, #4]
 801178c:	f7ff fbd4 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011790:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011794:	8822      	ldrh	r2, [r4, #0]
 8011796:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801179a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801179e:	f8ad 0014 	strh.w	r0, [sp, #20]
 80117a2:	1ad2      	subs	r2, r2, r3
 80117a4:	8863      	ldrh	r3, [r4, #2]
 80117a6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80117aa:	1a5b      	subs	r3, r3, r1
 80117ac:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80117b0:	f8ad 1016 	strh.w	r1, [sp, #22]
 80117b4:	aa01      	add	r2, sp, #4
 80117b6:	a904      	add	r1, sp, #16
 80117b8:	4630      	mov	r0, r6
 80117ba:	f8ad 3012 	strh.w	r3, [sp, #18]
 80117be:	f7f8 fd05 	bl	800a1cc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80117c2:	9a01      	ldr	r2, [sp, #4]
 80117c4:	b11a      	cbz	r2, 80117ce <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80117c6:	4621      	mov	r1, r4
 80117c8:	4628      	mov	r0, r5
 80117ca:	f7ff fed5 	bl	8011578 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80117ce:	b006      	add	sp, #24
 80117d0:	bd70      	pop	{r4, r5, r6, pc}

080117d2 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80117d2:	b530      	push	{r4, r5, lr}
 80117d4:	4602      	mov	r2, r0
 80117d6:	4604      	mov	r4, r0
 80117d8:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80117dc:	b085      	sub	sp, #20
 80117de:	460d      	mov	r5, r1
 80117e0:	6851      	ldr	r1, [r2, #4]
 80117e2:	466b      	mov	r3, sp
 80117e4:	c303      	stmia	r3!, {r0, r1}
 80117e6:	4629      	mov	r1, r5
 80117e8:	4668      	mov	r0, sp
 80117ea:	f7f8 fc17 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 80117ee:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80117f2:	b12b      	cbz	r3, 8011800 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80117f4:	4669      	mov	r1, sp
 80117f6:	4620      	mov	r0, r4
 80117f8:	f7ff ffbf 	bl	801177a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80117fc:	b005      	add	sp, #20
 80117fe:	bd30      	pop	{r4, r5, pc}
 8011800:	3404      	adds	r4, #4
 8011802:	4621      	mov	r1, r4
 8011804:	a802      	add	r0, sp, #8
 8011806:	f7ff fb97 	bl	8010f38 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801180a:	f8bd 3000 	ldrh.w	r3, [sp]
 801180e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011812:	1a9b      	subs	r3, r3, r2
 8011814:	f8ad 3000 	strh.w	r3, [sp]
 8011818:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801181c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011820:	4669      	mov	r1, sp
 8011822:	1a9b      	subs	r3, r3, r2
 8011824:	4620      	mov	r0, r4
 8011826:	f8ad 3002 	strh.w	r3, [sp, #2]
 801182a:	f7f8 fc96 	bl	800a15a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801182e:	e7e5      	b.n	80117fc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08011830 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011830:	680a      	ldr	r2, [r1, #0]
 8011832:	460b      	mov	r3, r1
 8011834:	6992      	ldr	r2, [r2, #24]
 8011836:	1d01      	adds	r1, r0, #4
 8011838:	4618      	mov	r0, r3
 801183a:	4710      	bx	r2

0801183c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801183c:	4298      	cmp	r0, r3
 801183e:	d200      	bcs.n	8011842 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8011840:	b913      	cbnz	r3, 8011848 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8011842:	440a      	add	r2, r1
 8011844:	b210      	sxth	r0, r2
 8011846:	4770      	bx	lr
 8011848:	ee07 0a90 	vmov	s15, r0
 801184c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8011850:	ee07 3a90 	vmov	s15, r3
 8011854:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011858:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801185c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011860:	ee37 7a66 	vsub.f32	s14, s14, s13
 8011864:	ee07 2a90 	vmov	s15, r2
 8011868:	ee67 5a07 	vmul.f32	s11, s14, s14
 801186c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8011870:	eee5 6a87 	vfma.f32	s13, s11, s14
 8011874:	ee07 1a90 	vmov	s15, r1
 8011878:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801187c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8011880:	eee6 7a26 	vfma.f32	s15, s12, s13
 8011884:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801188c:	bfcc      	ite	gt
 801188e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8011892:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8011896:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801189a:	ee17 3a90 	vmov	r3, s15
 801189e:	b218      	sxth	r0, r3
 80118a0:	4770      	bx	lr

080118a2 <_ZN8touchgfx12TextProviderC1Ev>:
 80118a2:	b538      	push	{r3, r4, r5, lr}
 80118a4:	2500      	movs	r5, #0
 80118a6:	2302      	movs	r3, #2
 80118a8:	4604      	mov	r4, r0
 80118aa:	e9c0 5500 	strd	r5, r5, [r0]
 80118ae:	7403      	strb	r3, [r0, #16]
 80118b0:	6145      	str	r5, [r0, #20]
 80118b2:	7605      	strb	r5, [r0, #24]
 80118b4:	83c5      	strh	r5, [r0, #30]
 80118b6:	8405      	strh	r5, [r0, #32]
 80118b8:	86c5      	strh	r5, [r0, #54]	; 0x36
 80118ba:	8705      	strh	r5, [r0, #56]	; 0x38
 80118bc:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80118be:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80118c2:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80118c6:	220e      	movs	r2, #14
 80118c8:	4629      	mov	r1, r5
 80118ca:	304c      	adds	r0, #76	; 0x4c
 80118cc:	f00d ffd2 	bl	801f874 <memset>
 80118d0:	2301      	movs	r3, #1
 80118d2:	4620      	mov	r0, r4
 80118d4:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80118d8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80118dc:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80118e0:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80118e4:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80118e8:	f7f2 fea0 	bl	800462c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80118ec:	4620      	mov	r0, r4
 80118ee:	bd38      	pop	{r3, r4, r5, pc}

080118f0 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80118f0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80118f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80118f6:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80118f8:	fab0 f080 	clz	r0, r0
 80118fc:	0940      	lsrs	r0, r0, #5
 80118fe:	4770      	bx	lr

08011900 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011900:	b530      	push	{r4, r5, lr}
 8011902:	2500      	movs	r5, #0
 8011904:	2401      	movs	r4, #1
 8011906:	6843      	ldr	r3, [r0, #4]
 8011908:	b913      	cbnz	r3, 8011910 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801190a:	6803      	ldr	r3, [r0, #0]
 801190c:	b313      	cbz	r3, 8011954 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801190e:	6043      	str	r3, [r0, #4]
 8011910:	7e03      	ldrb	r3, [r0, #24]
 8011912:	b143      	cbz	r3, 8011926 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011914:	6943      	ldr	r3, [r0, #20]
 8011916:	b12b      	cbz	r3, 8011924 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011918:	881a      	ldrh	r2, [r3, #0]
 801191a:	b11a      	cbz	r2, 8011924 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801191c:	1c9a      	adds	r2, r3, #2
 801191e:	6142      	str	r2, [r0, #20]
 8011920:	8818      	ldrh	r0, [r3, #0]
 8011922:	bd30      	pop	{r4, r5, pc}
 8011924:	7605      	strb	r5, [r0, #24]
 8011926:	6843      	ldr	r3, [r0, #4]
 8011928:	8819      	ldrh	r1, [r3, #0]
 801192a:	b199      	cbz	r1, 8011954 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801192c:	1c9a      	adds	r2, r3, #2
 801192e:	2902      	cmp	r1, #2
 8011930:	6042      	str	r2, [r0, #4]
 8011932:	d1f5      	bne.n	8011920 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011934:	7c03      	ldrb	r3, [r0, #16]
 8011936:	2b01      	cmp	r3, #1
 8011938:	d8e5      	bhi.n	8011906 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801193a:	1c5a      	adds	r2, r3, #1
 801193c:	3302      	adds	r3, #2
 801193e:	7402      	strb	r2, [r0, #16]
 8011940:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011944:	6143      	str	r3, [r0, #20]
 8011946:	2b00      	cmp	r3, #0
 8011948:	d0dd      	beq.n	8011906 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801194a:	881b      	ldrh	r3, [r3, #0]
 801194c:	2b00      	cmp	r3, #0
 801194e:	d0da      	beq.n	8011906 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011950:	7604      	strb	r4, [r0, #24]
 8011952:	e7d8      	b.n	8011906 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011954:	2000      	movs	r0, #0
 8011956:	e7e4      	b.n	8011922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011958 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011958:	b430      	push	{r4, r5}
 801195a:	6001      	str	r1, [r0, #0]
 801195c:	2100      	movs	r1, #0
 801195e:	6041      	str	r1, [r0, #4]
 8011960:	6815      	ldr	r5, [r2, #0]
 8011962:	6085      	str	r5, [r0, #8]
 8011964:	6852      	ldr	r2, [r2, #4]
 8011966:	6443      	str	r3, [r0, #68]	; 0x44
 8011968:	9b02      	ldr	r3, [sp, #8]
 801196a:	60c2      	str	r2, [r0, #12]
 801196c:	7401      	strb	r1, [r0, #16]
 801196e:	6141      	str	r1, [r0, #20]
 8011970:	7601      	strb	r1, [r0, #24]
 8011972:	8701      	strh	r1, [r0, #56]	; 0x38
 8011974:	8401      	strh	r1, [r0, #32]
 8011976:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801197a:	6483      	str	r3, [r0, #72]	; 0x48
 801197c:	bc30      	pop	{r4, r5}
 801197e:	f7f2 be55 	b.w	800462c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011982 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8011982:	b408      	push	{r3}
 8011984:	b510      	push	{r4, lr}
 8011986:	b085      	sub	sp, #20
 8011988:	ac07      	add	r4, sp, #28
 801198a:	f854 3b04 	ldr.w	r3, [r4], #4
 801198e:	9300      	str	r3, [sp, #0]
 8011990:	4613      	mov	r3, r2
 8011992:	4622      	mov	r2, r4
 8011994:	9403      	str	r4, [sp, #12]
 8011996:	f7ff ffdf 	bl	8011958 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801199a:	b005      	add	sp, #20
 801199c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80119a0:	b001      	add	sp, #4
 80119a2:	4770      	bx	lr

080119a4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80119a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80119a6:	4605      	mov	r5, r0
 80119a8:	4608      	mov	r0, r1
 80119aa:	b1e9      	cbz	r1, 80119e8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80119ac:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80119b0:	460b      	mov	r3, r1
 80119b2:	f101 0708 	add.w	r7, r1, #8
 80119b6:	4622      	mov	r2, r4
 80119b8:	6818      	ldr	r0, [r3, #0]
 80119ba:	6859      	ldr	r1, [r3, #4]
 80119bc:	4626      	mov	r6, r4
 80119be:	c603      	stmia	r6!, {r0, r1}
 80119c0:	3308      	adds	r3, #8
 80119c2:	42bb      	cmp	r3, r7
 80119c4:	4634      	mov	r4, r6
 80119c6:	d1f7      	bne.n	80119b8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80119c8:	6818      	ldr	r0, [r3, #0]
 80119ca:	6030      	str	r0, [r6, #0]
 80119cc:	889b      	ldrh	r3, [r3, #4]
 80119ce:	80b3      	strh	r3, [r6, #4]
 80119d0:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80119d4:	015b      	lsls	r3, r3, #5
 80119d6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80119da:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80119de:	430b      	orrs	r3, r1
 80119e0:	425b      	negs	r3, r3
 80119e2:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80119e6:	4610      	mov	r0, r2
 80119e8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080119ea <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80119ea:	b538      	push	{r3, r4, r5, lr}
 80119ec:	460c      	mov	r4, r1
 80119ee:	6811      	ldr	r1, [r2, #0]
 80119f0:	4610      	mov	r0, r2
 80119f2:	68cd      	ldr	r5, [r1, #12]
 80119f4:	4619      	mov	r1, r3
 80119f6:	47a8      	blx	r5
 80119f8:	2800      	cmp	r0, #0
 80119fa:	bf08      	it	eq
 80119fc:	4620      	moveq	r0, r4
 80119fe:	bd38      	pop	{r3, r4, r5, pc}

08011a00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011a00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a02:	4604      	mov	r4, r0
 8011a04:	4615      	mov	r5, r2
 8011a06:	4608      	mov	r0, r1
 8011a08:	b93a      	cbnz	r2, 8011a1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8011a0a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8011a0e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8011a12:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8011a16:	4628      	mov	r0, r5
 8011a18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011a1a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8011a1e:	8893      	ldrh	r3, [r2, #4]
 8011a20:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8011a24:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8011a28:	79ee      	ldrb	r6, [r5, #7]
 8011a2a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8011a2e:	4316      	orrs	r6, r2
 8011a30:	19da      	adds	r2, r3, r7
 8011a32:	b291      	uxth	r1, r2
 8011a34:	291d      	cmp	r1, #29
 8011a36:	b2b7      	uxth	r7, r6
 8011a38:	d87a      	bhi.n	8011b30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8011a3a:	2201      	movs	r2, #1
 8011a3c:	408a      	lsls	r2, r1
 8011a3e:	4975      	ldr	r1, [pc, #468]	; (8011c14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8011a40:	420a      	tst	r2, r1
 8011a42:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8011a46:	d12d      	bne.n	8011aa4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8011a48:	f412 7f60 	tst.w	r2, #896	; 0x380
 8011a4c:	d070      	beq.n	8011b30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8011a4e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8011a52:	462b      	mov	r3, r5
 8011a54:	f105 0e08 	add.w	lr, r5, #8
 8011a58:	4615      	mov	r5, r2
 8011a5a:	6818      	ldr	r0, [r3, #0]
 8011a5c:	6859      	ldr	r1, [r3, #4]
 8011a5e:	4694      	mov	ip, r2
 8011a60:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011a64:	3308      	adds	r3, #8
 8011a66:	4573      	cmp	r3, lr
 8011a68:	4662      	mov	r2, ip
 8011a6a:	d1f6      	bne.n	8011a5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8011a6c:	6818      	ldr	r0, [r3, #0]
 8011a6e:	f8cc 0000 	str.w	r0, [ip]
 8011a72:	889b      	ldrh	r3, [r3, #4]
 8011a74:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011a78:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8011a7c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8011a80:	b2b3      	uxth	r3, r6
 8011a82:	1aca      	subs	r2, r1, r3
 8011a84:	b292      	uxth	r2, r2
 8011a86:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8011a8a:	10d2      	asrs	r2, r2, #3
 8011a8c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8011a90:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8011a94:	4302      	orrs	r2, r0
 8011a96:	1bcf      	subs	r7, r1, r7
 8011a98:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8011a9c:	1afb      	subs	r3, r7, r3
 8011a9e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8011aa2:	e7b8      	b.n	8011a16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011aa4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8011aa6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011aaa:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8011aac:	f640 6333 	movw	r3, #3635	; 0xe33
 8011ab0:	4299      	cmp	r1, r3
 8011ab2:	d110      	bne.n	8011ad6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8011ab4:	6803      	ldr	r3, [r0, #0]
 8011ab6:	68db      	ldr	r3, [r3, #12]
 8011ab8:	4798      	blx	r3
 8011aba:	7b41      	ldrb	r1, [r0, #13]
 8011abc:	00cb      	lsls	r3, r1, #3
 8011abe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011ac2:	7a03      	ldrb	r3, [r0, #8]
 8011ac4:	0648      	lsls	r0, r1, #25
 8011ac6:	ea43 0302 	orr.w	r3, r3, r2
 8011aca:	bf44      	itt	mi
 8011acc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011ad0:	b21b      	sxthmi	r3, r3
 8011ad2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011ad6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8011ada:	443b      	add	r3, r7
 8011adc:	4433      	add	r3, r6
 8011ade:	b29b      	uxth	r3, r3
 8011ae0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8011ae4:	462a      	mov	r2, r5
 8011ae6:	f105 0c08 	add.w	ip, r5, #8
 8011aea:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011aee:	4635      	mov	r5, r6
 8011af0:	6810      	ldr	r0, [r2, #0]
 8011af2:	6851      	ldr	r1, [r2, #4]
 8011af4:	4637      	mov	r7, r6
 8011af6:	c703      	stmia	r7!, {r0, r1}
 8011af8:	3208      	adds	r2, #8
 8011afa:	4562      	cmp	r2, ip
 8011afc:	463e      	mov	r6, r7
 8011afe:	d1f7      	bne.n	8011af0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8011b00:	6810      	ldr	r0, [r2, #0]
 8011b02:	6038      	str	r0, [r7, #0]
 8011b04:	8892      	ldrh	r2, [r2, #4]
 8011b06:	80ba      	strh	r2, [r7, #4]
 8011b08:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011b0c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011b10:	10db      	asrs	r3, r3, #3
 8011b12:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011b16:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011b1a:	4313      	orrs	r3, r2
 8011b1c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011b20:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8011b24:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8011b28:	1a9b      	subs	r3, r3, r2
 8011b2a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8011b2e:	e772      	b.n	8011a16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011b30:	f023 0204 	bic.w	r2, r3, #4
 8011b34:	f640 611b 	movw	r1, #3611	; 0xe1b
 8011b38:	428a      	cmp	r2, r1
 8011b3a:	d003      	beq.n	8011b44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8011b3c:	f640 621d 	movw	r2, #3613	; 0xe1d
 8011b40:	4293      	cmp	r3, r2
 8011b42:	d120      	bne.n	8011b86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8011b44:	3b01      	subs	r3, #1
 8011b46:	4602      	mov	r2, r0
 8011b48:	b29b      	uxth	r3, r3
 8011b4a:	4629      	mov	r1, r5
 8011b4c:	4620      	mov	r0, r4
 8011b4e:	f7ff ff4c 	bl	80119ea <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011b52:	7b41      	ldrb	r1, [r0, #13]
 8011b54:	00cb      	lsls	r3, r1, #3
 8011b56:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011b5a:	7a03      	ldrb	r3, [r0, #8]
 8011b5c:	0649      	lsls	r1, r1, #25
 8011b5e:	ea43 0302 	orr.w	r3, r3, r2
 8011b62:	bf44      	itt	mi
 8011b64:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011b68:	b21b      	sxthmi	r3, r3
 8011b6a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011b6e:	7b6b      	ldrb	r3, [r5, #13]
 8011b70:	7aaa      	ldrb	r2, [r5, #10]
 8011b72:	005b      	lsls	r3, r3, #1
 8011b74:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011b78:	4313      	orrs	r3, r2
 8011b7a:	115a      	asrs	r2, r3, #5
 8011b7c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011b80:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8011b84:	e036      	b.n	8011bf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8011b86:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8011b8a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8011b8e:	7a2a      	ldrb	r2, [r5, #8]
 8011b90:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8011b94:	ea42 0201 	orr.w	r2, r2, r1
 8011b98:	bf1c      	itt	ne
 8011b9a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8011b9e:	b212      	sxthne	r2, r2
 8011ba0:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8011ba4:	f640 6109 	movw	r1, #3593	; 0xe09
 8011ba8:	f023 0210 	bic.w	r2, r3, #16
 8011bac:	428a      	cmp	r2, r1
 8011bae:	d003      	beq.n	8011bb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8011bb0:	f640 6213 	movw	r2, #3603	; 0xe13
 8011bb4:	4293      	cmp	r3, r2
 8011bb6:	d12a      	bne.n	8011c0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8011bb8:	7b6e      	ldrb	r6, [r5, #13]
 8011bba:	0076      	lsls	r6, r6, #1
 8011bbc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8011bc0:	7aae      	ldrb	r6, [r5, #10]
 8011bc2:	4316      	orrs	r6, r2
 8011bc4:	f640 6213 	movw	r2, #3603	; 0xe13
 8011bc8:	4293      	cmp	r3, r2
 8011bca:	bf18      	it	ne
 8011bcc:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011bd0:	4602      	mov	r2, r0
 8011bd2:	bf14      	ite	ne
 8011bd4:	b29b      	uxthne	r3, r3
 8011bd6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8011bda:	4629      	mov	r1, r5
 8011bdc:	4620      	mov	r0, r4
 8011bde:	f7ff ff04 	bl	80119ea <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011be2:	7b43      	ldrb	r3, [r0, #13]
 8011be4:	7a82      	ldrb	r2, [r0, #10]
 8011be6:	005b      	lsls	r3, r3, #1
 8011be8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011bec:	4313      	orrs	r3, r2
 8011bee:	1af6      	subs	r6, r6, r3
 8011bf0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8011bf4:	7b69      	ldrb	r1, [r5, #13]
 8011bf6:	00cb      	lsls	r3, r1, #3
 8011bf8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011bfc:	7a2b      	ldrb	r3, [r5, #8]
 8011bfe:	4313      	orrs	r3, r2
 8011c00:	064a      	lsls	r2, r1, #25
 8011c02:	bf44      	itt	mi
 8011c04:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011c08:	b21b      	sxthmi	r3, r3
 8011c0a:	1bdb      	subs	r3, r3, r7
 8011c0c:	e747      	b.n	8011a9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8011c0e:	2300      	movs	r3, #0
 8011c10:	e7b6      	b.n	8011b80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8011c12:	bf00      	nop
 8011c14:	3fc00079 	.word	0x3fc00079

08011c18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8011c18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011c1c:	4604      	mov	r4, r0
 8011c1e:	b942      	cbnz	r2, 8011c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8011c20:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8011c24:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8011c28:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8011c2c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8011c30:	e047      	b.n	8011cc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011c32:	7b51      	ldrb	r1, [r2, #13]
 8011c34:	8893      	ldrh	r3, [r2, #4]
 8011c36:	010d      	lsls	r5, r1, #4
 8011c38:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8011c3c:	79d5      	ldrb	r5, [r2, #7]
 8011c3e:	4305      	orrs	r5, r0
 8011c40:	2d04      	cmp	r5, #4
 8011c42:	bfcc      	ite	gt
 8011c44:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8011c48:	f04f 0e01 	movle.w	lr, #1
 8011c4c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8011c50:	f200 80ab 	bhi.w	8011daa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8011c54:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8011c58:	4283      	cmp	r3, r0
 8011c5a:	d216      	bcs.n	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c5c:	f240 605b 	movw	r0, #1627	; 0x65b
 8011c60:	4283      	cmp	r3, r0
 8011c62:	d859      	bhi.n	8011d18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8011c64:	f240 6057 	movw	r0, #1623	; 0x657
 8011c68:	4283      	cmp	r3, r0
 8011c6a:	d20e      	bcs.n	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c6c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8011c70:	d24a      	bcs.n	8011d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8011c72:	f240 604e 	movw	r0, #1614	; 0x64e
 8011c76:	4283      	cmp	r3, r0
 8011c78:	d207      	bcs.n	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c7a:	f240 601a 	movw	r0, #1562	; 0x61a
 8011c7e:	4283      	cmp	r3, r0
 8011c80:	d02a      	beq.n	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011c82:	d821      	bhi.n	8011cc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8011c84:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8011c88:	d35b      	bcc.n	8011d42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011c8a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8011c8e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011c92:	f040 80d0 	bne.w	8011e36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011c96:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8011c9a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011c9e:	f040 80ca 	bne.w	8011e36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011ca2:	00cb      	lsls	r3, r1, #3
 8011ca4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011ca8:	7a13      	ldrb	r3, [r2, #8]
 8011caa:	0649      	lsls	r1, r1, #25
 8011cac:	ea43 0300 	orr.w	r3, r3, r0
 8011cb0:	bf44      	itt	mi
 8011cb2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011cb6:	b21b      	sxthmi	r3, r3
 8011cb8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011cbc:	1b5d      	subs	r5, r3, r5
 8011cbe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011cc2:	4610      	mov	r0, r2
 8011cc4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011cc8:	f240 604b 	movw	r0, #1611	; 0x64b
 8011ccc:	4283      	cmp	r3, r0
 8011cce:	d338      	bcc.n	8011d42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011cd0:	f240 604c 	movw	r0, #1612	; 0x64c
 8011cd4:	4283      	cmp	r3, r0
 8011cd6:	d9d8      	bls.n	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011cd8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8011cdc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8011ce0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011ce4:	f040 80f2 	bne.w	8011ecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011ce8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011cec:	f040 80ee 	bne.w	8011ecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011cf0:	00cb      	lsls	r3, r1, #3
 8011cf2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011cf6:	7a13      	ldrb	r3, [r2, #8]
 8011cf8:	064e      	lsls	r6, r1, #25
 8011cfa:	ea43 0300 	orr.w	r3, r3, r0
 8011cfe:	bf44      	itt	mi
 8011d00:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011d04:	b21b      	sxthmi	r3, r3
 8011d06:	e7d9      	b.n	8011cbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8011d08:	f240 6054 	movw	r0, #1620	; 0x654
 8011d0c:	4283      	cmp	r3, r0
 8011d0e:	d8e3      	bhi.n	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d10:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8011d14:	d9e0      	bls.n	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d16:	e7b8      	b.n	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d18:	f240 6074 	movw	r0, #1652	; 0x674
 8011d1c:	4283      	cmp	r3, r0
 8011d1e:	d0b4      	beq.n	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d20:	d82d      	bhi.n	8011d7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8011d22:	f240 605e 	movw	r0, #1630	; 0x65e
 8011d26:	4283      	cmp	r3, r0
 8011d28:	d804      	bhi.n	8011d34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8011d2a:	f240 605d 	movw	r0, #1629	; 0x65d
 8011d2e:	4283      	cmp	r3, r0
 8011d30:	d3d2      	bcc.n	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d32:	e7aa      	b.n	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d34:	f240 605f 	movw	r0, #1631	; 0x65f
 8011d38:	4283      	cmp	r3, r0
 8011d3a:	d0cd      	beq.n	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d3c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8011d40:	d0a3      	beq.n	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d42:	00cb      	lsls	r3, r1, #3
 8011d44:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011d48:	7a13      	ldrb	r3, [r2, #8]
 8011d4a:	0649      	lsls	r1, r1, #25
 8011d4c:	ea43 0300 	orr.w	r3, r3, r0
 8011d50:	bf44      	itt	mi
 8011d52:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011d56:	b21b      	sxthmi	r3, r3
 8011d58:	1b5d      	subs	r5, r3, r5
 8011d5a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011d5e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011d62:	7b53      	ldrb	r3, [r2, #13]
 8011d64:	015b      	lsls	r3, r3, #5
 8011d66:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011d6a:	7993      	ldrb	r3, [r2, #6]
 8011d6c:	430b      	orrs	r3, r1
 8011d6e:	005b      	lsls	r3, r3, #1
 8011d70:	2105      	movs	r1, #5
 8011d72:	fb93 f3f1 	sdiv	r3, r3, r1
 8011d76:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011d7a:	440b      	add	r3, r1
 8011d7c:	e756      	b.n	8011c2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011d7e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8011d82:	4283      	cmp	r3, r0
 8011d84:	d809      	bhi.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011d86:	f240 60df 	movw	r0, #1759	; 0x6df
 8011d8a:	4283      	cmp	r3, r0
 8011d8c:	f4bf af7d 	bcs.w	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d90:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8011d94:	2b05      	cmp	r3, #5
 8011d96:	d8d4      	bhi.n	8011d42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011d98:	e777      	b.n	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d9a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8011d9e:	4283      	cmp	r3, r0
 8011da0:	d09a      	beq.n	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011da2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8011da6:	4283      	cmp	r3, r0
 8011da8:	e7ca      	b.n	8011d40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011daa:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8011dae:	d22b      	bcs.n	8011e08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011db0:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8011db4:	4283      	cmp	r3, r0
 8011db6:	d28f      	bcs.n	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011db8:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8011dbc:	4283      	cmp	r3, r0
 8011dbe:	d816      	bhi.n	8011dee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011dc0:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8011dc4:	4283      	cmp	r3, r0
 8011dc6:	f4bf af60 	bcs.w	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011dca:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8011dce:	4283      	cmp	r3, r0
 8011dd0:	d80a      	bhi.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011dd2:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8011dd6:	4283      	cmp	r3, r0
 8011dd8:	f4bf af57 	bcs.w	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011ddc:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8011de0:	4283      	cmp	r3, r0
 8011de2:	f43f af79 	beq.w	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011de6:	e7ac      	b.n	8011d42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011de8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8011dec:	e7f8      	b.n	8011de0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011dee:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8011df2:	4283      	cmp	r3, r0
 8011df4:	d802      	bhi.n	8011dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8011df6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8011dfa:	e798      	b.n	8011d2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011dfc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8011e00:	4283      	cmp	r3, r0
 8011e02:	f47f af42 	bne.w	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e06:	e767      	b.n	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e08:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8011e0c:	4283      	cmp	r3, r0
 8011e0e:	f43f af63 	beq.w	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e12:	d802      	bhi.n	8011e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011e14:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8011e18:	e7f2      	b.n	8011e00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8011e1a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8011e1e:	4283      	cmp	r3, r0
 8011e20:	d805      	bhi.n	8011e2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8011e22:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8011e26:	4283      	cmp	r3, r0
 8011e28:	f4ff af2f 	bcc.w	8011c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e2c:	e754      	b.n	8011cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e2e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8011e32:	4283      	cmp	r3, r0
 8011e34:	e7af      	b.n	8011d96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8011e36:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8011e3a:	4617      	mov	r7, r2
 8011e3c:	f102 0808 	add.w	r8, r2, #8
 8011e40:	4666      	mov	r6, ip
 8011e42:	6838      	ldr	r0, [r7, #0]
 8011e44:	6879      	ldr	r1, [r7, #4]
 8011e46:	46e6      	mov	lr, ip
 8011e48:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011e4c:	3708      	adds	r7, #8
 8011e4e:	4547      	cmp	r7, r8
 8011e50:	46f4      	mov	ip, lr
 8011e52:	d1f6      	bne.n	8011e42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011e54:	6838      	ldr	r0, [r7, #0]
 8011e56:	f8ce 0000 	str.w	r0, [lr]
 8011e5a:	88b9      	ldrh	r1, [r7, #4]
 8011e5c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011e60:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8011e64:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011e68:	d009      	beq.n	8011e7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8011e6a:	7b51      	ldrb	r1, [r2, #13]
 8011e6c:	7992      	ldrb	r2, [r2, #6]
 8011e6e:	0149      	lsls	r1, r1, #5
 8011e70:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011e74:	4311      	orrs	r1, r2
 8011e76:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011e7a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8011e7e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011e82:	b2ad      	uxth	r5, r5
 8011e84:	d00d      	beq.n	8011ea2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8011e86:	442b      	add	r3, r5
 8011e88:	b29b      	uxth	r3, r3
 8011e8a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011e8e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011e92:	10db      	asrs	r3, r3, #3
 8011e94:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011e98:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011e9c:	4313      	orrs	r3, r2
 8011e9e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011ea2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8011ea6:	00cb      	lsls	r3, r1, #3
 8011ea8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011eac:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8011eb0:	064f      	lsls	r7, r1, #25
 8011eb2:	ea43 0302 	orr.w	r3, r3, r2
 8011eb6:	bf44      	itt	mi
 8011eb8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011ebc:	b21b      	sxthmi	r3, r3
 8011ebe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011ec2:	1b5b      	subs	r3, r3, r5
 8011ec4:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8011ec8:	4632      	mov	r2, r6
 8011eca:	e6fa      	b.n	8011cc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011ecc:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8011ed0:	4617      	mov	r7, r2
 8011ed2:	f102 0908 	add.w	r9, r2, #8
 8011ed6:	4666      	mov	r6, ip
 8011ed8:	6838      	ldr	r0, [r7, #0]
 8011eda:	6879      	ldr	r1, [r7, #4]
 8011edc:	46e0      	mov	r8, ip
 8011ede:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8011ee2:	3708      	adds	r7, #8
 8011ee4:	454f      	cmp	r7, r9
 8011ee6:	46c4      	mov	ip, r8
 8011ee8:	d1f6      	bne.n	8011ed8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8011eea:	6838      	ldr	r0, [r7, #0]
 8011eec:	f8c8 0000 	str.w	r0, [r8]
 8011ef0:	88b9      	ldrh	r1, [r7, #4]
 8011ef2:	f8a8 1004 	strh.w	r1, [r8, #4]
 8011ef6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8011efa:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011efe:	d009      	beq.n	8011f14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8011f00:	7b51      	ldrb	r1, [r2, #13]
 8011f02:	7992      	ldrb	r2, [r2, #6]
 8011f04:	0149      	lsls	r1, r1, #5
 8011f06:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011f0a:	4311      	orrs	r1, r2
 8011f0c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011f10:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8011f14:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011f18:	d00e      	beq.n	8011f38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8011f1a:	eba3 030e 	sub.w	r3, r3, lr
 8011f1e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011f22:	b29b      	uxth	r3, r3
 8011f24:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011f28:	10db      	asrs	r3, r3, #3
 8011f2a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011f2e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011f32:	4313      	orrs	r3, r2
 8011f34:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011f38:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8011f3c:	00cb      	lsls	r3, r1, #3
 8011f3e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011f42:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8011f46:	0648      	lsls	r0, r1, #25
 8011f48:	ea43 0302 	orr.w	r3, r3, r2
 8011f4c:	bf44      	itt	mi
 8011f4e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011f52:	b21b      	sxthmi	r3, r3
 8011f54:	1b5d      	subs	r5, r3, r5
 8011f56:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011f5a:	e7b5      	b.n	8011ec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08011f5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8011f5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f60:	461e      	mov	r6, r3
 8011f62:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011f64:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011f68:	4604      	mov	r4, r0
 8011f6a:	4617      	mov	r7, r2
 8011f6c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8011f70:	f7f2 fb1a 	bl	80045a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011f74:	4605      	mov	r5, r0
 8011f76:	b918      	cbnz	r0, 8011f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8011f78:	6030      	str	r0, [r6, #0]
 8011f7a:	4628      	mov	r0, r5
 8011f7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f80:	683b      	ldr	r3, [r7, #0]
 8011f82:	4601      	mov	r1, r0
 8011f84:	68db      	ldr	r3, [r3, #12]
 8011f86:	4638      	mov	r0, r7
 8011f88:	4798      	blx	r3
 8011f8a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8011f8e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011f92:	4602      	mov	r2, r0
 8011f94:	6030      	str	r0, [r6, #0]
 8011f96:	d213      	bcs.n	8011fc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8011f98:	4643      	mov	r3, r8
 8011f9a:	4639      	mov	r1, r7
 8011f9c:	4620      	mov	r0, r4
 8011f9e:	f7ff fe3b 	bl	8011c18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011fa2:	6030      	str	r0, [r6, #0]
 8011fa4:	6833      	ldr	r3, [r6, #0]
 8011fa6:	b143      	cbz	r3, 8011fba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8011fa8:	7b5a      	ldrb	r2, [r3, #13]
 8011faa:	7a9b      	ldrb	r3, [r3, #10]
 8011fac:	0052      	lsls	r2, r2, #1
 8011fae:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011fb2:	4313      	orrs	r3, r2
 8011fb4:	bf0c      	ite	eq
 8011fb6:	2301      	moveq	r3, #1
 8011fb8:	2300      	movne	r3, #0
 8011fba:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8011fbe:	e7dc      	b.n	8011f7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8011fc0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8011fc4:	b29b      	uxth	r3, r3
 8011fc6:	2b7f      	cmp	r3, #127	; 0x7f
 8011fc8:	d804      	bhi.n	8011fd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8011fca:	4639      	mov	r1, r7
 8011fcc:	4620      	mov	r0, r4
 8011fce:	f7ff fd17 	bl	8011a00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011fd2:	e7e6      	b.n	8011fa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8011fd4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8011fd8:	2b00      	cmp	r3, #0
 8011fda:	d0e3      	beq.n	8011fa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011fdc:	f640 1302 	movw	r3, #2306	; 0x902
 8011fe0:	429d      	cmp	r5, r3
 8011fe2:	d1df      	bne.n	8011fa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011fe4:	4601      	mov	r1, r0
 8011fe6:	4620      	mov	r0, r4
 8011fe8:	f7ff fcdc 	bl	80119a4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011fec:	e7d9      	b.n	8011fa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08011fee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8011fee:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011ff2:	461e      	mov	r6, r3
 8011ff4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011ff6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011ffa:	4604      	mov	r4, r0
 8011ffc:	4617      	mov	r7, r2
 8011ffe:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012002:	f7f2 fad1 	bl	80045a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012006:	4605      	mov	r5, r0
 8012008:	b918      	cbnz	r0, 8012012 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801200a:	6030      	str	r0, [r6, #0]
 801200c:	4628      	mov	r0, r5
 801200e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012012:	683b      	ldr	r3, [r7, #0]
 8012014:	4601      	mov	r1, r0
 8012016:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801201a:	4638      	mov	r0, r7
 801201c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012020:	47c8      	blx	r9
 8012022:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012026:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801202a:	4602      	mov	r2, r0
 801202c:	6030      	str	r0, [r6, #0]
 801202e:	d213      	bcs.n	8012058 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8012030:	4643      	mov	r3, r8
 8012032:	4639      	mov	r1, r7
 8012034:	4620      	mov	r0, r4
 8012036:	f7ff fdef 	bl	8011c18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801203a:	6030      	str	r0, [r6, #0]
 801203c:	6833      	ldr	r3, [r6, #0]
 801203e:	b143      	cbz	r3, 8012052 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8012040:	7b5a      	ldrb	r2, [r3, #13]
 8012042:	7a9b      	ldrb	r3, [r3, #10]
 8012044:	0052      	lsls	r2, r2, #1
 8012046:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801204a:	4313      	orrs	r3, r2
 801204c:	bf0c      	ite	eq
 801204e:	2301      	moveq	r3, #1
 8012050:	2300      	movne	r3, #0
 8012052:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012056:	e7d9      	b.n	801200c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8012058:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801205c:	b29b      	uxth	r3, r3
 801205e:	2b7f      	cmp	r3, #127	; 0x7f
 8012060:	d804      	bhi.n	801206c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8012062:	4639      	mov	r1, r7
 8012064:	4620      	mov	r0, r4
 8012066:	f7ff fccb 	bl	8011a00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801206a:	e7e6      	b.n	801203a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801206c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012070:	2b00      	cmp	r3, #0
 8012072:	d0e3      	beq.n	801203c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012074:	f640 1302 	movw	r3, #2306	; 0x902
 8012078:	429d      	cmp	r5, r3
 801207a:	d1df      	bne.n	801203c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801207c:	4601      	mov	r1, r0
 801207e:	4620      	mov	r0, r4
 8012080:	f7ff fc90 	bl	80119a4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012084:	e7d9      	b.n	801203a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08012086 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012086:	b510      	push	{r4, lr}
 8012088:	4604      	mov	r4, r0
 801208a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801208e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012090:	b1f1      	cbz	r1, 80120d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012092:	2b0a      	cmp	r3, #10
 8012094:	d02f      	beq.n	80120f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012096:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8012098:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801209c:	3901      	subs	r1, #1
 801209e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80120a0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80120a4:	1c51      	adds	r1, r2, #1
 80120a6:	b289      	uxth	r1, r1
 80120a8:	2901      	cmp	r1, #1
 80120aa:	bf84      	itt	hi
 80120ac:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80120b0:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80120b2:	f103 0201 	add.w	r2, r3, #1
 80120b6:	8722      	strh	r2, [r4, #56]	; 0x38
 80120b8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80120ba:	bf98      	it	ls
 80120bc:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80120be:	4413      	add	r3, r2
 80120c0:	b29b      	uxth	r3, r3
 80120c2:	2b09      	cmp	r3, #9
 80120c4:	bf88      	it	hi
 80120c6:	3b0a      	subhi	r3, #10
 80120c8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80120cc:	8458      	strh	r0, [r3, #34]	; 0x22
 80120ce:	e7dc      	b.n	801208a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80120d0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80120d2:	2b0a      	cmp	r3, #10
 80120d4:	d00f      	beq.n	80120f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80120d6:	4620      	mov	r0, r4
 80120d8:	f7ff fc12 	bl	8011900 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80120dc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80120de:	1c5a      	adds	r2, r3, #1
 80120e0:	8722      	strh	r2, [r4, #56]	; 0x38
 80120e2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80120e4:	4413      	add	r3, r2
 80120e6:	b29b      	uxth	r3, r3
 80120e8:	2b09      	cmp	r3, #9
 80120ea:	bf88      	it	hi
 80120ec:	3b0a      	subhi	r3, #10
 80120ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80120f2:	8458      	strh	r0, [r3, #34]	; 0x22
 80120f4:	e7ec      	b.n	80120d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80120f6:	bd10      	pop	{r4, pc}

080120f8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80120f8:	b538      	push	{r3, r4, r5, lr}
 80120fa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80120fc:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012100:	4604      	mov	r4, r0
 8012102:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8012104:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8012106:	3a01      	subs	r2, #1
 8012108:	8702      	strh	r2, [r0, #56]	; 0x38
 801210a:	1c5a      	adds	r2, r3, #1
 801210c:	b292      	uxth	r2, r2
 801210e:	2a09      	cmp	r2, #9
 8012110:	bf86      	itte	hi
 8012112:	3b09      	subhi	r3, #9
 8012114:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8012116:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8012118:	f7ff ffb5 	bl	8012086 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801211c:	8c23      	ldrh	r3, [r4, #32]
 801211e:	2b01      	cmp	r3, #1
 8012120:	bf9c      	itt	ls
 8012122:	3301      	addls	r3, #1
 8012124:	8423      	strhls	r3, [r4, #32]
 8012126:	8be3      	ldrh	r3, [r4, #30]
 8012128:	b90b      	cbnz	r3, 801212e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801212a:	2302      	movs	r3, #2
 801212c:	83e3      	strh	r3, [r4, #30]
 801212e:	8be3      	ldrh	r3, [r4, #30]
 8012130:	3b01      	subs	r3, #1
 8012132:	b29b      	uxth	r3, r3
 8012134:	83e3      	strh	r3, [r4, #30]
 8012136:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801213a:	4628      	mov	r0, r5
 801213c:	8365      	strh	r5, [r4, #26]
 801213e:	bd38      	pop	{r3, r4, r5, pc}

08012140 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012140:	428a      	cmp	r2, r1
 8012142:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012146:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8012148:	d931      	bls.n	80121ae <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801214a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801214c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8012150:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8012154:	19ee      	adds	r6, r5, r7
 8012156:	1a54      	subs	r4, r2, r1
 8012158:	3e01      	subs	r6, #1
 801215a:	fa1f fe84 	uxth.w	lr, r4
 801215e:	b2b4      	uxth	r4, r6
 8012160:	eba4 090e 	sub.w	r9, r4, lr
 8012164:	fa1f f989 	uxth.w	r9, r9
 8012168:	2c09      	cmp	r4, #9
 801216a:	4626      	mov	r6, r4
 801216c:	bf88      	it	hi
 801216e:	f1a4 060a 	subhi.w	r6, r4, #10
 8012172:	f1bc 0f00 	cmp.w	ip, #0
 8012176:	bf08      	it	eq
 8012178:	f04f 0c02 	moveq.w	ip, #2
 801217c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012180:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012184:	fa1f fc8c 	uxth.w	ip, ip
 8012188:	3c01      	subs	r4, #1
 801218a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801218e:	b2a4      	uxth	r4, r4
 8012190:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012194:	454c      	cmp	r4, r9
 8012196:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801219a:	d1e5      	bne.n	8012168 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801219c:	eba5 050e 	sub.w	r5, r5, lr
 80121a0:	eb0e 0408 	add.w	r4, lr, r8
 80121a4:	8705      	strh	r5, [r0, #56]	; 0x38
 80121a6:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80121aa:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80121ae:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80121b0:	1a64      	subs	r4, r4, r1
 80121b2:	4439      	add	r1, r7
 80121b4:	b289      	uxth	r1, r1
 80121b6:	2909      	cmp	r1, #9
 80121b8:	bf88      	it	hi
 80121ba:	390a      	subhi	r1, #10
 80121bc:	8704      	strh	r4, [r0, #56]	; 0x38
 80121be:	86c1      	strh	r1, [r0, #54]	; 0x36
 80121c0:	250a      	movs	r5, #10
 80121c2:	b18a      	cbz	r2, 80121e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80121c4:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80121c6:	3a01      	subs	r2, #1
 80121c8:	b292      	uxth	r2, r2
 80121ca:	3101      	adds	r1, #1
 80121cc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80121d0:	8701      	strh	r1, [r0, #56]	; 0x38
 80121d2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80121d4:	b901      	cbnz	r1, 80121d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80121d6:	86c5      	strh	r5, [r0, #54]	; 0x36
 80121d8:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80121da:	3901      	subs	r1, #1
 80121dc:	b289      	uxth	r1, r1
 80121de:	86c1      	strh	r1, [r0, #54]	; 0x36
 80121e0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80121e4:	844c      	strh	r4, [r1, #34]	; 0x22
 80121e6:	e7ec      	b.n	80121c2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80121e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80121ec:	f7ff bf4b 	b.w	8012086 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080121f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80121f0:	b570      	push	{r4, r5, r6, lr}
 80121f2:	2500      	movs	r5, #0
 80121f4:	4295      	cmp	r5, r2
 80121f6:	d011      	beq.n	801221c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80121f8:	8bc4      	ldrh	r4, [r0, #30]
 80121fa:	f831 6b02 	ldrh.w	r6, [r1], #2
 80121fe:	4414      	add	r4, r2
 8012200:	3c01      	subs	r4, #1
 8012202:	1b64      	subs	r4, r4, r5
 8012204:	b2a4      	uxth	r4, r4
 8012206:	2c01      	cmp	r4, #1
 8012208:	bf88      	it	hi
 801220a:	3c02      	subhi	r4, #2
 801220c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012210:	8b64      	ldrh	r4, [r4, #26]
 8012212:	42b4      	cmp	r4, r6
 8012214:	d117      	bne.n	8012246 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012216:	3501      	adds	r5, #1
 8012218:	b2ad      	uxth	r5, r5
 801221a:	e7eb      	b.n	80121f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801221c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012220:	2400      	movs	r4, #0
 8012222:	4413      	add	r3, r2
 8012224:	b2a2      	uxth	r2, r4
 8012226:	429a      	cmp	r2, r3
 8012228:	da0f      	bge.n	801224a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801222a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801222c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012230:	4432      	add	r2, r6
 8012232:	b292      	uxth	r2, r2
 8012234:	2a09      	cmp	r2, #9
 8012236:	bf88      	it	hi
 8012238:	3a0a      	subhi	r2, #10
 801223a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801223e:	3401      	adds	r4, #1
 8012240:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8012242:	42aa      	cmp	r2, r5
 8012244:	d0ee      	beq.n	8012224 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8012246:	2000      	movs	r0, #0
 8012248:	bd70      	pop	{r4, r5, r6, pc}
 801224a:	2001      	movs	r0, #1
 801224c:	e7fc      	b.n	8012248 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801224e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801224e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012252:	4605      	mov	r5, r0
 8012254:	4616      	mov	r6, r2
 8012256:	1c8c      	adds	r4, r1, #2
 8012258:	8809      	ldrh	r1, [r1, #0]
 801225a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801225e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012262:	42b3      	cmp	r3, r6
 8012264:	d124      	bne.n	80122b0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012266:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801226a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801226e:	f001 070f 	and.w	r7, r1, #15
 8012272:	f8cd 8000 	str.w	r8, [sp]
 8012276:	464b      	mov	r3, r9
 8012278:	4652      	mov	r2, sl
 801227a:	4621      	mov	r1, r4
 801227c:	4628      	mov	r0, r5
 801227e:	f7ff ffb7 	bl	80121f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012282:	4683      	mov	fp, r0
 8012284:	b168      	cbz	r0, 80122a2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012286:	eb0a 0109 	add.w	r1, sl, r9
 801228a:	4441      	add	r1, r8
 801228c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012290:	463a      	mov	r2, r7
 8012292:	4649      	mov	r1, r9
 8012294:	4628      	mov	r0, r5
 8012296:	f7ff ff53 	bl	8012140 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801229a:	4658      	mov	r0, fp
 801229c:	b003      	add	sp, #12
 801229e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122a2:	eb07 010a 	add.w	r1, r7, sl
 80122a6:	4449      	add	r1, r9
 80122a8:	4441      	add	r1, r8
 80122aa:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80122ae:	e7d2      	b.n	8012256 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80122b0:	f04f 0b00 	mov.w	fp, #0
 80122b4:	e7f1      	b.n	801229a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080122b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80122b6:	b570      	push	{r4, r5, r6, lr}
 80122b8:	8810      	ldrh	r0, [r2, #0]
 80122ba:	4298      	cmp	r0, r3
 80122bc:	d817      	bhi.n	80122ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80122be:	1e48      	subs	r0, r1, #1
 80122c0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80122c4:	4298      	cmp	r0, r3
 80122c6:	d312      	bcc.n	80122ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80122c8:	2400      	movs	r4, #0
 80122ca:	428c      	cmp	r4, r1
 80122cc:	d20f      	bcs.n	80122ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80122ce:	1860      	adds	r0, r4, r1
 80122d0:	1040      	asrs	r0, r0, #1
 80122d2:	0085      	lsls	r5, r0, #2
 80122d4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80122d8:	42b3      	cmp	r3, r6
 80122da:	d902      	bls.n	80122e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80122dc:	3001      	adds	r0, #1
 80122de:	b284      	uxth	r4, r0
 80122e0:	e7f3      	b.n	80122ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80122e2:	d201      	bcs.n	80122e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80122e4:	b281      	uxth	r1, r0
 80122e6:	e7f0      	b.n	80122ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80122e8:	442a      	add	r2, r5
 80122ea:	8850      	ldrh	r0, [r2, #2]
 80122ec:	bd70      	pop	{r4, r5, r6, pc}
 80122ee:	2000      	movs	r0, #0
 80122f0:	e7fc      	b.n	80122ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080122f2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80122f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80122f6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80122f8:	886f      	ldrh	r7, [r5, #2]
 80122fa:	4604      	mov	r4, r0
 80122fc:	087f      	lsrs	r7, r7, #1
 80122fe:	260b      	movs	r6, #11
 8012300:	3e01      	subs	r6, #1
 8012302:	d013      	beq.n	801232c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012304:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012306:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801230a:	462a      	mov	r2, r5
 801230c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012310:	4639      	mov	r1, r7
 8012312:	4643      	mov	r3, r8
 8012314:	4620      	mov	r0, r4
 8012316:	f7ff ffce 	bl	80122b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801231a:	b138      	cbz	r0, 801232c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801231c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012320:	4642      	mov	r2, r8
 8012322:	4620      	mov	r0, r4
 8012324:	f7ff ff93 	bl	801224e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012328:	2800      	cmp	r0, #0
 801232a:	d1e9      	bne.n	8012300 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801232c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012330 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012330:	b570      	push	{r4, r5, r6, lr}
 8012332:	694a      	ldr	r2, [r1, #20]
 8012334:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012336:	684b      	ldr	r3, [r1, #4]
 8012338:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801233a:	1b54      	subs	r4, r2, r5
 801233c:	f000 8106 	beq.w	801254c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012340:	1b9b      	subs	r3, r3, r6
 8012342:	d003      	beq.n	801234c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012344:	4363      	muls	r3, r4
 8012346:	2210      	movs	r2, #16
 8012348:	fb93 f3f2 	sdiv	r3, r3, r2
 801234c:	680c      	ldr	r4, [r1, #0]
 801234e:	698a      	ldr	r2, [r1, #24]
 8012350:	1b65      	subs	r5, r4, r5
 8012352:	f000 80fd 	beq.w	8012550 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012356:	1b92      	subs	r2, r2, r6
 8012358:	d003      	beq.n	8012362 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801235a:	436a      	muls	r2, r5
 801235c:	2410      	movs	r4, #16
 801235e:	fb92 f2f4 	sdiv	r2, r2, r4
 8012362:	1a9b      	subs	r3, r3, r2
 8012364:	ee07 3a90 	vmov	s15, r3
 8012368:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801258c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801236c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012370:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012374:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012378:	460a      	mov	r2, r1
 801237a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801237e:	4603      	mov	r3, r0
 8012380:	f100 040c 	add.w	r4, r0, #12
 8012384:	eeb1 6a43 	vneg.f32	s12, s6
 8012388:	edd2 7a02 	vldr	s15, [r2, #8]
 801238c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012390:	3214      	adds	r2, #20
 8012392:	ece3 6a01 	vstmia	r3!, {s13}
 8012396:	ed52 7a02 	vldr	s15, [r2, #-8]
 801239a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801239e:	429c      	cmp	r4, r3
 80123a0:	edc3 7a02 	vstr	s15, [r3, #8]
 80123a4:	ed52 7a01 	vldr	s15, [r2, #-4]
 80123a8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80123ac:	edc3 7a05 	vstr	s15, [r3, #20]
 80123b0:	d1ea      	bne.n	8012388 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80123b2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80123b4:	698b      	ldr	r3, [r1, #24]
 80123b6:	edd0 4a02 	vldr	s9, [r0, #8]
 80123ba:	edd0 3a00 	vldr	s7, [r0]
 80123be:	edd0 6a01 	vldr	s13, [r0, #4]
 80123c2:	ed90 5a05 	vldr	s10, [r0, #20]
 80123c6:	ed90 2a03 	vldr	s4, [r0, #12]
 80123ca:	edd0 5a04 	vldr	s11, [r0, #16]
 80123ce:	ed90 1a07 	vldr	s2, [r0, #28]
 80123d2:	edd0 2a06 	vldr	s5, [r0, #24]
 80123d6:	1a9b      	subs	r3, r3, r2
 80123d8:	ee07 3a90 	vmov	s15, r3
 80123dc:	684b      	ldr	r3, [r1, #4]
 80123de:	1a9b      	subs	r3, r3, r2
 80123e0:	ee07 3a10 	vmov	s14, r3
 80123e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80123e8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80123ec:	ee67 7a84 	vmul.f32	s15, s15, s8
 80123f0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80123f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80123f8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80123fc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012400:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012404:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012408:	ee32 5a45 	vsub.f32	s10, s4, s10
 801240c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012410:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8012414:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012416:	694a      	ldr	r2, [r1, #20]
 8012418:	1b13      	subs	r3, r2, r4
 801241a:	ee07 3a10 	vmov	s14, r3
 801241e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012422:	680b      	ldr	r3, [r1, #0]
 8012424:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012428:	1b1b      	subs	r3, r3, r4
 801242a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801242e:	ee07 3a10 	vmov	s14, r3
 8012432:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012436:	ee27 7a04 	vmul.f32	s14, s14, s8
 801243a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801243e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012442:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8012446:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012448:	698b      	ldr	r3, [r1, #24]
 801244a:	1a9b      	subs	r3, r3, r2
 801244c:	ee06 3a90 	vmov	s13, r3
 8012450:	684b      	ldr	r3, [r1, #4]
 8012452:	1a9b      	subs	r3, r3, r2
 8012454:	ee07 3a10 	vmov	s14, r3
 8012458:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801245c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012460:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012464:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012468:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801246c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012470:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012474:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8012478:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801247a:	694a      	ldr	r2, [r1, #20]
 801247c:	1b13      	subs	r3, r2, r4
 801247e:	ee07 3a10 	vmov	s14, r3
 8012482:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012486:	680b      	ldr	r3, [r1, #0]
 8012488:	ee27 7a04 	vmul.f32	s14, s14, s8
 801248c:	1b1b      	subs	r3, r3, r4
 801248e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012492:	ee07 3a10 	vmov	s14, r3
 8012496:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801249a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801249e:	eea5 5a87 	vfma.f32	s10, s11, s14
 80124a2:	edd0 5a08 	vldr	s11, [r0, #32]
 80124a6:	ee25 5a06 	vmul.f32	s10, s10, s12
 80124aa:	ee31 1a65 	vsub.f32	s2, s2, s11
 80124ae:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80124b2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80124b4:	698b      	ldr	r3, [r1, #24]
 80124b6:	1a9b      	subs	r3, r3, r2
 80124b8:	ee07 3a10 	vmov	s14, r3
 80124bc:	684b      	ldr	r3, [r1, #4]
 80124be:	1a9b      	subs	r3, r3, r2
 80124c0:	ee01 3a90 	vmov	s3, r3
 80124c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124c8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80124cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124d0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80124d4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80124d8:	ee61 1a84 	vmul.f32	s3, s3, s8
 80124dc:	eea1 7a21 	vfma.f32	s14, s2, s3
 80124e0:	ee27 7a03 	vmul.f32	s14, s14, s6
 80124e4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80124e8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80124ea:	694a      	ldr	r2, [r1, #20]
 80124ec:	1b13      	subs	r3, r2, r4
 80124ee:	ee03 3a10 	vmov	s6, r3
 80124f2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80124f6:	680b      	ldr	r3, [r1, #0]
 80124f8:	ee23 3a04 	vmul.f32	s6, s6, s8
 80124fc:	1b1b      	subs	r3, r3, r4
 80124fe:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012502:	ee03 3a10 	vmov	s6, r3
 8012506:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801250a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801250e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012512:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012516:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801251a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801251e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012522:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801252a:	dd13      	ble.n	8012554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801252c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012530:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012534:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012536:	eee3 7a87 	vfma.f32	s15, s7, s14
 801253a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801253e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012542:	dd15      	ble.n	8012570 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012544:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012548:	6403      	str	r3, [r0, #64]	; 0x40
 801254a:	bd70      	pop	{r4, r5, r6, pc}
 801254c:	4623      	mov	r3, r4
 801254e:	e6fd      	b.n	801234c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012550:	462a      	mov	r2, r5
 8012552:	e706      	b.n	8012362 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012554:	d502      	bpl.n	801255c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012556:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801255a:	e7e9      	b.n	8012530 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801255c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012560:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012564:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012568:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801256c:	dade      	bge.n	801252c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801256e:	e7f2      	b.n	8012556 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012570:	d502      	bpl.n	8012578 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012572:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012576:	e7e7      	b.n	8012548 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012578:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801257c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012580:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012584:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012588:	dadc      	bge.n	8012544 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801258a:	e7f2      	b.n	8012572 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801258c:	3d800000 	.word	0x3d800000

08012590 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012590:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012594:	2714      	movs	r7, #20
 8012596:	435f      	muls	r7, r3
 8012598:	eb02 0c07 	add.w	ip, r2, r7
 801259c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80125a0:	f115 0e0f 	adds.w	lr, r5, #15
 80125a4:	f100 80a2 	bmi.w	80126ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80125a8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80125ac:	9c08      	ldr	r4, [sp, #32]
 80125ae:	f8c0 e014 	str.w	lr, [r0, #20]
 80125b2:	2614      	movs	r6, #20
 80125b4:	4366      	muls	r6, r4
 80125b6:	eb02 0806 	add.w	r8, r2, r6
 80125ba:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80125be:	f115 040f 	adds.w	r4, r5, #15
 80125c2:	f100 809f 	bmi.w	8012704 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80125c6:	1124      	asrs	r4, r4, #4
 80125c8:	eba4 040e 	sub.w	r4, r4, lr
 80125cc:	6184      	str	r4, [r0, #24]
 80125ce:	2c00      	cmp	r4, #0
 80125d0:	f000 808a 	beq.w	80126e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80125d4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80125d8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80125dc:	5995      	ldr	r5, [r2, r6]
 80125de:	eba4 0809 	sub.w	r8, r4, r9
 80125e2:	59d4      	ldr	r4, [r2, r7]
 80125e4:	eba5 0a04 	sub.w	sl, r5, r4
 80125e8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80125ec:	fb0e fe05 	mul.w	lr, lr, r5
 80125f0:	fb0a ee19 	mls	lr, sl, r9, lr
 80125f4:	fb08 e404 	mla	r4, r8, r4, lr
 80125f8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80125fc:	3c01      	subs	r4, #1
 80125fe:	19a4      	adds	r4, r4, r6
 8012600:	f100 808c 	bmi.w	801271c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012604:	fb94 fef6 	sdiv	lr, r4, r6
 8012608:	f8c0 e000 	str.w	lr, [r0]
 801260c:	fb06 441e 	mls	r4, r6, lr, r4
 8012610:	6104      	str	r4, [r0, #16]
 8012612:	2d00      	cmp	r5, #0
 8012614:	f2c0 8095 	blt.w	8012742 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012618:	fb95 f4f6 	sdiv	r4, r5, r6
 801261c:	6044      	str	r4, [r0, #4]
 801261e:	fb06 5514 	mls	r5, r6, r4, r5
 8012622:	6085      	str	r5, [r0, #8]
 8012624:	60c6      	str	r6, [r0, #12]
 8012626:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801262a:	6945      	ldr	r5, [r0, #20]
 801262c:	59d2      	ldr	r2, [r2, r7]
 801262e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8012764 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8012632:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8012636:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801263a:	ee07 4a10 	vmov	s14, r4
 801263e:	6804      	ldr	r4, [r0, #0]
 8012640:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8012644:	ee07 2a90 	vmov	s15, r2
 8012648:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801264c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012650:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012654:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012658:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801265c:	edd3 6a00 	vldr	s13, [r3]
 8012660:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012664:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8012668:	eee6 6a27 	vfma.f32	s13, s12, s15
 801266c:	edc0 6a07 	vstr	s13, [r0, #28]
 8012670:	edd0 6a01 	vldr	s13, [r0, #4]
 8012674:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8012678:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801267c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012680:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012684:	ed80 6a08 	vstr	s12, [r0, #32]
 8012688:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801268a:	6242      	str	r2, [r0, #36]	; 0x24
 801268c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8012690:	ed93 6a03 	vldr	s12, [r3, #12]
 8012694:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012698:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801269c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80126a0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80126a4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80126a8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80126ac:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80126b0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80126b4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80126b6:	6302      	str	r2, [r0, #48]	; 0x30
 80126b8:	ed93 6a06 	vldr	s12, [r3, #24]
 80126bc:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80126c0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80126c4:	eeb0 7a46 	vmov.f32	s14, s12
 80126c8:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80126cc:	eea6 7a27 	vfma.f32	s14, s12, s15
 80126d0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80126d4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80126d8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80126dc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80126e0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80126e4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80126e6:	63c3      	str	r3, [r0, #60]	; 0x3c
 80126e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80126ec:	f1c5 0501 	rsb	r5, r5, #1
 80126f0:	f015 050f 	ands.w	r5, r5, #15
 80126f4:	bf18      	it	ne
 80126f6:	2501      	movne	r5, #1
 80126f8:	2410      	movs	r4, #16
 80126fa:	fb9e fef4 	sdiv	lr, lr, r4
 80126fe:	ebae 0e05 	sub.w	lr, lr, r5
 8012702:	e753      	b.n	80125ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012704:	f1c5 0501 	rsb	r5, r5, #1
 8012708:	f015 050f 	ands.w	r5, r5, #15
 801270c:	bf18      	it	ne
 801270e:	2501      	movne	r5, #1
 8012710:	f04f 0910 	mov.w	r9, #16
 8012714:	fb94 f4f9 	sdiv	r4, r4, r9
 8012718:	1b64      	subs	r4, r4, r5
 801271a:	e755      	b.n	80125c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801271c:	4264      	negs	r4, r4
 801271e:	fb94 fef6 	sdiv	lr, r4, r6
 8012722:	f1ce 0800 	rsb	r8, lr, #0
 8012726:	fb06 441e 	mls	r4, r6, lr, r4
 801272a:	f8c0 8000 	str.w	r8, [r0]
 801272e:	6104      	str	r4, [r0, #16]
 8012730:	2c00      	cmp	r4, #0
 8012732:	f43f af6e 	beq.w	8012612 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8012736:	ea6f 0e0e 	mvn.w	lr, lr
 801273a:	f8c0 e000 	str.w	lr, [r0]
 801273e:	1b34      	subs	r4, r6, r4
 8012740:	e766      	b.n	8012610 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012742:	426d      	negs	r5, r5
 8012744:	fb95 f4f6 	sdiv	r4, r5, r6
 8012748:	f1c4 0e00 	rsb	lr, r4, #0
 801274c:	fb06 5514 	mls	r5, r6, r4, r5
 8012750:	f8c0 e004 	str.w	lr, [r0, #4]
 8012754:	6085      	str	r5, [r0, #8]
 8012756:	2d00      	cmp	r5, #0
 8012758:	f43f af64 	beq.w	8012624 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801275c:	43e4      	mvns	r4, r4
 801275e:	6044      	str	r4, [r0, #4]
 8012760:	1b75      	subs	r5, r6, r5
 8012762:	e75e      	b.n	8012622 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012764:	3d800000 	.word	0x3d800000

08012768 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8012768:	4602      	mov	r2, r0
 801276a:	b148      	cbz	r0, 8012780 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801276c:	2300      	movs	r3, #0
 801276e:	b298      	uxth	r0, r3
 8012770:	3301      	adds	r3, #1
 8012772:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8012776:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801277a:	2900      	cmp	r1, #0
 801277c:	d1f7      	bne.n	801276e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801277e:	4770      	bx	lr
 8012780:	4770      	bx	lr

08012782 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8012782:	b530      	push	{r4, r5, lr}
 8012784:	4604      	mov	r4, r0
 8012786:	b159      	cbz	r1, 80127a0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8012788:	b148      	cbz	r0, 801279e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801278a:	2300      	movs	r3, #0
 801278c:	b298      	uxth	r0, r3
 801278e:	4282      	cmp	r2, r0
 8012790:	d905      	bls.n	801279e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012792:	5ccd      	ldrb	r5, [r1, r3]
 8012794:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012798:	3301      	adds	r3, #1
 801279a:	2d00      	cmp	r5, #0
 801279c:	d1f6      	bne.n	801278c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801279e:	bd30      	pop	{r4, r5, pc}
 80127a0:	4608      	mov	r0, r1
 80127a2:	e7fc      	b.n	801279e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080127a4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 80127a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80127a6:	b08b      	sub	sp, #44	; 0x2c
 80127a8:	468c      	mov	ip, r1
 80127aa:	2100      	movs	r1, #0
 80127ac:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80127b0:	ae01      	add	r6, sp, #4
 80127b2:	211f      	movs	r1, #31
 80127b4:	fbb0 f7f3 	udiv	r7, r0, r3
 80127b8:	fb03 0517 	mls	r5, r3, r7, r0
 80127bc:	b2ec      	uxtb	r4, r5
 80127be:	2d09      	cmp	r5, #9
 80127c0:	bfd4      	ite	le
 80127c2:	3430      	addle	r4, #48	; 0x30
 80127c4:	3457      	addgt	r4, #87	; 0x57
 80127c6:	b2e4      	uxtb	r4, r4
 80127c8:	558c      	strb	r4, [r1, r6]
 80127ca:	4638      	mov	r0, r7
 80127cc:	1e4c      	subs	r4, r1, #1
 80127ce:	b92f      	cbnz	r7, 80127dc <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 80127d0:	4431      	add	r1, r6
 80127d2:	4660      	mov	r0, ip
 80127d4:	f7ff ffd5 	bl	8012782 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80127d8:	b00b      	add	sp, #44	; 0x2c
 80127da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127dc:	4621      	mov	r1, r4
 80127de:	e7e9      	b.n	80127b4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

080127e0 <_ZN8touchgfx7Unicode4itoaElPtti>:
 80127e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80127e2:	4607      	mov	r7, r0
 80127e4:	b08b      	sub	sp, #44	; 0x2c
 80127e6:	4608      	mov	r0, r1
 80127e8:	b341      	cbz	r1, 801283c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80127ea:	1e99      	subs	r1, r3, #2
 80127ec:	2922      	cmp	r1, #34	; 0x22
 80127ee:	d825      	bhi.n	801283c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80127f0:	2100      	movs	r1, #0
 80127f2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80127f6:	463c      	mov	r4, r7
 80127f8:	261f      	movs	r6, #31
 80127fa:	f10d 0c04 	add.w	ip, sp, #4
 80127fe:	fb94 fef3 	sdiv	lr, r4, r3
 8012802:	fb03 441e 	mls	r4, r3, lr, r4
 8012806:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801280a:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801280e:	b2ec      	uxtb	r4, r5
 8012810:	2d09      	cmp	r5, #9
 8012812:	bfd4      	ite	le
 8012814:	3430      	addle	r4, #48	; 0x30
 8012816:	3457      	addgt	r4, #87	; 0x57
 8012818:	b2e4      	uxtb	r4, r4
 801281a:	f80c 4006 	strb.w	r4, [ip, r6]
 801281e:	4674      	mov	r4, lr
 8012820:	1e71      	subs	r1, r6, #1
 8012822:	b96c      	cbnz	r4, 8012840 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8012824:	2f00      	cmp	r7, #0
 8012826:	da05      	bge.n	8012834 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8012828:	ab0a      	add	r3, sp, #40	; 0x28
 801282a:	4419      	add	r1, r3
 801282c:	232d      	movs	r3, #45	; 0x2d
 801282e:	f801 3c24 	strb.w	r3, [r1, #-36]
 8012832:	1eb1      	subs	r1, r6, #2
 8012834:	3101      	adds	r1, #1
 8012836:	4461      	add	r1, ip
 8012838:	f7ff ffa3 	bl	8012782 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801283c:	b00b      	add	sp, #44	; 0x2c
 801283e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012840:	460e      	mov	r6, r1
 8012842:	e7dc      	b.n	80127fe <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08012844 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8012844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012848:	4691      	mov	r9, r2
 801284a:	b085      	sub	sp, #20
 801284c:	6802      	ldr	r2, [r0, #0]
 801284e:	9201      	str	r2, [sp, #4]
 8012850:	4688      	mov	r8, r1
 8012852:	4683      	mov	fp, r0
 8012854:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8012858:	9103      	str	r1, [sp, #12]
 801285a:	4610      	mov	r0, r2
 801285c:	461c      	mov	r4, r3
 801285e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8012862:	9302      	str	r3, [sp, #8]
 8012864:	f7ff ff80 	bl	8012768 <_ZN8touchgfx7Unicode6strlenEPKt>
 8012868:	f1b8 0f00 	cmp.w	r8, #0
 801286c:	bf0c      	ite	eq
 801286e:	4684      	moveq	ip, r0
 8012870:	f100 0c01 	addne.w	ip, r0, #1
 8012874:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8012878:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801287c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801287e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012880:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8012884:	9903      	ldr	r1, [sp, #12]
 8012886:	fa1f fc8c 	uxth.w	ip, ip
 801288a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801288e:	d041      	beq.n	8012914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012890:	d834      	bhi.n	80128fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8012892:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8012896:	d059      	beq.n	801294c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8012898:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801289c:	d03a      	beq.n	8012914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801289e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80128a2:	d034      	beq.n	801290e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80128a4:	2400      	movs	r4, #0
 80128a6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80128aa:	3a01      	subs	r2, #1
 80128ac:	b169      	cbz	r1, 80128ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80128ae:	9911      	ldr	r1, [sp, #68]	; 0x44
 80128b0:	458c      	cmp	ip, r1
 80128b2:	da09      	bge.n	80128c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80128b4:	eba1 010c 	sub.w	r1, r1, ip
 80128b8:	b289      	uxth	r1, r1
 80128ba:	b933      	cbnz	r3, 80128ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80128bc:	2e00      	cmp	r6, #0
 80128be:	d051      	beq.n	8012964 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80128c0:	2800      	cmp	r0, #0
 80128c2:	d04f      	beq.n	8012964 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80128c4:	440c      	add	r4, r1
 80128c6:	b2a4      	uxth	r4, r4
 80128c8:	2100      	movs	r1, #0
 80128ca:	682b      	ldr	r3, [r5, #0]
 80128cc:	4293      	cmp	r3, r2
 80128ce:	da07      	bge.n	80128e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80128d0:	f1b8 0f00 	cmp.w	r8, #0
 80128d4:	d004      	beq.n	80128e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80128d6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80128da:	682b      	ldr	r3, [r5, #0]
 80128dc:	3301      	adds	r3, #1
 80128de:	602b      	str	r3, [r5, #0]
 80128e0:	2730      	movs	r7, #48	; 0x30
 80128e2:	2c00      	cmp	r4, #0
 80128e4:	d04e      	beq.n	8012984 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80128e6:	682e      	ldr	r6, [r5, #0]
 80128e8:	3c01      	subs	r4, #1
 80128ea:	42b2      	cmp	r2, r6
 80128ec:	b2a4      	uxth	r4, r4
 80128ee:	dd49      	ble.n	8012984 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80128f0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80128f4:	682b      	ldr	r3, [r5, #0]
 80128f6:	3301      	adds	r3, #1
 80128f8:	602b      	str	r3, [r5, #0]
 80128fa:	e7f2      	b.n	80128e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80128fc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8012900:	d01d      	beq.n	801293e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8012902:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8012906:	d002      	beq.n	801290e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012908:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801290c:	e7c9      	b.n	80128a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801290e:	4684      	mov	ip, r0
 8012910:	f04f 0800 	mov.w	r8, #0
 8012914:	2c00      	cmp	r4, #0
 8012916:	d0c6      	beq.n	80128a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012918:	b947      	cbnz	r7, 801292c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801291a:	2801      	cmp	r0, #1
 801291c:	d106      	bne.n	801292c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801291e:	8814      	ldrh	r4, [r2, #0]
 8012920:	2c30      	cmp	r4, #48	; 0x30
 8012922:	bf02      	ittt	eq
 8012924:	3202      	addeq	r2, #2
 8012926:	f8cb 2000 	streq.w	r2, [fp]
 801292a:	4638      	moveq	r0, r7
 801292c:	45bc      	cmp	ip, r7
 801292e:	da14      	bge.n	801295a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8012930:	b2bf      	uxth	r7, r7
 8012932:	eba7 040c 	sub.w	r4, r7, ip
 8012936:	b2a4      	uxth	r4, r4
 8012938:	46bc      	mov	ip, r7
 801293a:	2600      	movs	r6, #0
 801293c:	e7b3      	b.n	80128a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801293e:	4684      	mov	ip, r0
 8012940:	b16c      	cbz	r4, 801295e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8012942:	42b8      	cmp	r0, r7
 8012944:	dd00      	ble.n	8012948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8012946:	b2b8      	uxth	r0, r7
 8012948:	2400      	movs	r4, #0
 801294a:	e003      	b.n	8012954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801294c:	f04f 0c01 	mov.w	ip, #1
 8012950:	2400      	movs	r4, #0
 8012952:	4660      	mov	r0, ip
 8012954:	4626      	mov	r6, r4
 8012956:	46a0      	mov	r8, r4
 8012958:	e7a5      	b.n	80128a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801295a:	2400      	movs	r4, #0
 801295c:	e7ed      	b.n	801293a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801295e:	4626      	mov	r6, r4
 8012960:	46a0      	mov	r8, r4
 8012962:	e7a0      	b.n	80128a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012964:	2900      	cmp	r1, #0
 8012966:	d0b0      	beq.n	80128ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012968:	2720      	movs	r7, #32
 801296a:	682e      	ldr	r6, [r5, #0]
 801296c:	2900      	cmp	r1, #0
 801296e:	d0ac      	beq.n	80128ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012970:	3901      	subs	r1, #1
 8012972:	4296      	cmp	r6, r2
 8012974:	b289      	uxth	r1, r1
 8012976:	daa7      	bge.n	80128c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8012978:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801297c:	682b      	ldr	r3, [r5, #0]
 801297e:	3301      	adds	r3, #1
 8012980:	602b      	str	r3, [r5, #0]
 8012982:	e7f2      	b.n	801296a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8012984:	b188      	cbz	r0, 80129aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012986:	682b      	ldr	r3, [r5, #0]
 8012988:	3801      	subs	r0, #1
 801298a:	429a      	cmp	r2, r3
 801298c:	b280      	uxth	r0, r0
 801298e:	dd0c      	ble.n	80129aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012990:	f8db 3000 	ldr.w	r3, [fp]
 8012994:	1c9c      	adds	r4, r3, #2
 8012996:	f8cb 4000 	str.w	r4, [fp]
 801299a:	881c      	ldrh	r4, [r3, #0]
 801299c:	682b      	ldr	r3, [r5, #0]
 801299e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80129a2:	682b      	ldr	r3, [r5, #0]
 80129a4:	3301      	adds	r3, #1
 80129a6:	602b      	str	r3, [r5, #0]
 80129a8:	e7ec      	b.n	8012984 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80129aa:	2620      	movs	r6, #32
 80129ac:	b151      	cbz	r1, 80129c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80129ae:	6828      	ldr	r0, [r5, #0]
 80129b0:	3901      	subs	r1, #1
 80129b2:	4282      	cmp	r2, r0
 80129b4:	b289      	uxth	r1, r1
 80129b6:	dd05      	ble.n	80129c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80129b8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80129bc:	682b      	ldr	r3, [r5, #0]
 80129be:	3301      	adds	r3, #1
 80129c0:	602b      	str	r3, [r5, #0]
 80129c2:	e7f3      	b.n	80129ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80129c4:	b005      	add	sp, #20
 80129c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080129ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80129ca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80129ce:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80129d2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80129d6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80129da:	2400      	movs	r4, #0
 80129dc:	8014      	strh	r4, [r2, #0]
 80129de:	701c      	strb	r4, [r3, #0]
 80129e0:	f888 4000 	strb.w	r4, [r8]
 80129e4:	f88c 4000 	strb.w	r4, [ip]
 80129e8:	f88e 4000 	strb.w	r4, [lr]
 80129ec:	703c      	strb	r4, [r7, #0]
 80129ee:	6804      	ldr	r4, [r0, #0]
 80129f0:	b1a4      	cbz	r4, 8012a1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80129f2:	8824      	ldrh	r4, [r4, #0]
 80129f4:	f04f 0901 	mov.w	r9, #1
 80129f8:	b314      	cbz	r4, 8012a40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80129fa:	2c2b      	cmp	r4, #43	; 0x2b
 80129fc:	d001      	beq.n	8012a02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80129fe:	2c20      	cmp	r4, #32
 8012a00:	d110      	bne.n	8012a24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8012a02:	8014      	strh	r4, [r2, #0]
 8012a04:	6804      	ldr	r4, [r0, #0]
 8012a06:	b10c      	cbz	r4, 8012a0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8012a08:	3402      	adds	r4, #2
 8012a0a:	6004      	str	r4, [r0, #0]
 8012a0c:	680c      	ldr	r4, [r1, #0]
 8012a0e:	b10c      	cbz	r4, 8012a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8012a10:	3401      	adds	r4, #1
 8012a12:	600c      	str	r4, [r1, #0]
 8012a14:	6804      	ldr	r4, [r0, #0]
 8012a16:	b17c      	cbz	r4, 8012a38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8012a18:	8824      	ldrh	r4, [r4, #0]
 8012a1a:	e7ed      	b.n	80129f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8012a1c:	680c      	ldr	r4, [r1, #0]
 8012a1e:	b17c      	cbz	r4, 8012a40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012a20:	7824      	ldrb	r4, [r4, #0]
 8012a22:	e7e7      	b.n	80129f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8012a24:	2c2d      	cmp	r4, #45	; 0x2d
 8012a26:	d102      	bne.n	8012a2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8012a28:	f883 9000 	strb.w	r9, [r3]
 8012a2c:	e7ea      	b.n	8012a04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8012a2e:	2c23      	cmp	r4, #35	; 0x23
 8012a30:	d107      	bne.n	8012a42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8012a32:	f888 9000 	strb.w	r9, [r8]
 8012a36:	e7e5      	b.n	8012a04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8012a38:	680c      	ldr	r4, [r1, #0]
 8012a3a:	b10c      	cbz	r4, 8012a40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012a3c:	7824      	ldrb	r4, [r4, #0]
 8012a3e:	e7db      	b.n	80129f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8012a40:	2400      	movs	r4, #0
 8012a42:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012a46:	2b09      	cmp	r3, #9
 8012a48:	d901      	bls.n	8012a4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8012a4a:	2c2a      	cmp	r4, #42	; 0x2a
 8012a4c:	d122      	bne.n	8012a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012a4e:	2301      	movs	r3, #1
 8012a50:	2c30      	cmp	r4, #48	; 0x30
 8012a52:	f88e 3000 	strb.w	r3, [lr]
 8012a56:	d10d      	bne.n	8012a74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012a58:	f88c 3000 	strb.w	r3, [ip]
 8012a5c:	6803      	ldr	r3, [r0, #0]
 8012a5e:	b10b      	cbz	r3, 8012a64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8012a60:	3302      	adds	r3, #2
 8012a62:	6003      	str	r3, [r0, #0]
 8012a64:	680b      	ldr	r3, [r1, #0]
 8012a66:	b10b      	cbz	r3, 8012a6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8012a68:	3301      	adds	r3, #1
 8012a6a:	600b      	str	r3, [r1, #0]
 8012a6c:	6803      	ldr	r3, [r0, #0]
 8012a6e:	2b00      	cmp	r3, #0
 8012a70:	d02f      	beq.n	8012ad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8012a72:	881c      	ldrh	r4, [r3, #0]
 8012a74:	2c2a      	cmp	r4, #42	; 0x2a
 8012a76:	d135      	bne.n	8012ae4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012a78:	f04f 33ff 	mov.w	r3, #4294967295
 8012a7c:	6033      	str	r3, [r6, #0]
 8012a7e:	6803      	ldr	r3, [r0, #0]
 8012a80:	b10b      	cbz	r3, 8012a86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8012a82:	3302      	adds	r3, #2
 8012a84:	6003      	str	r3, [r0, #0]
 8012a86:	680b      	ldr	r3, [r1, #0]
 8012a88:	b10b      	cbz	r3, 8012a8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8012a8a:	3301      	adds	r3, #1
 8012a8c:	600b      	str	r3, [r1, #0]
 8012a8e:	6803      	ldr	r3, [r0, #0]
 8012a90:	b31b      	cbz	r3, 8012ada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8012a92:	881c      	ldrh	r4, [r3, #0]
 8012a94:	2c2e      	cmp	r4, #46	; 0x2e
 8012a96:	d11a      	bne.n	8012ace <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012a98:	2301      	movs	r3, #1
 8012a9a:	703b      	strb	r3, [r7, #0]
 8012a9c:	6803      	ldr	r3, [r0, #0]
 8012a9e:	b10b      	cbz	r3, 8012aa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8012aa0:	3302      	adds	r3, #2
 8012aa2:	6003      	str	r3, [r0, #0]
 8012aa4:	680b      	ldr	r3, [r1, #0]
 8012aa6:	b10b      	cbz	r3, 8012aac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8012aa8:	3301      	adds	r3, #1
 8012aaa:	600b      	str	r3, [r1, #0]
 8012aac:	6803      	ldr	r3, [r0, #0]
 8012aae:	2b00      	cmp	r3, #0
 8012ab0:	d036      	beq.n	8012b20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8012ab2:	881b      	ldrh	r3, [r3, #0]
 8012ab4:	2b2a      	cmp	r3, #42	; 0x2a
 8012ab6:	d137      	bne.n	8012b28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012ab8:	f04f 33ff 	mov.w	r3, #4294967295
 8012abc:	602b      	str	r3, [r5, #0]
 8012abe:	6803      	ldr	r3, [r0, #0]
 8012ac0:	b10b      	cbz	r3, 8012ac6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8012ac2:	3302      	adds	r3, #2
 8012ac4:	6003      	str	r3, [r0, #0]
 8012ac6:	680b      	ldr	r3, [r1, #0]
 8012ac8:	b10b      	cbz	r3, 8012ace <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012aca:	3301      	adds	r3, #1
 8012acc:	600b      	str	r3, [r1, #0]
 8012ace:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012ad2:	680c      	ldr	r4, [r1, #0]
 8012ad4:	b134      	cbz	r4, 8012ae4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012ad6:	7824      	ldrb	r4, [r4, #0]
 8012ad8:	e7cc      	b.n	8012a74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012ada:	680b      	ldr	r3, [r1, #0]
 8012adc:	2b00      	cmp	r3, #0
 8012ade:	d0f6      	beq.n	8012ace <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012ae0:	781c      	ldrb	r4, [r3, #0]
 8012ae2:	e7d7      	b.n	8012a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012ae4:	2300      	movs	r3, #0
 8012ae6:	6033      	str	r3, [r6, #0]
 8012ae8:	220a      	movs	r2, #10
 8012aea:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8012aee:	fa1f f38c 	uxth.w	r3, ip
 8012af2:	2b09      	cmp	r3, #9
 8012af4:	d8ce      	bhi.n	8012a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012af6:	6833      	ldr	r3, [r6, #0]
 8012af8:	fb02 c303 	mla	r3, r2, r3, ip
 8012afc:	6033      	str	r3, [r6, #0]
 8012afe:	6803      	ldr	r3, [r0, #0]
 8012b00:	b10b      	cbz	r3, 8012b06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8012b02:	3302      	adds	r3, #2
 8012b04:	6003      	str	r3, [r0, #0]
 8012b06:	680b      	ldr	r3, [r1, #0]
 8012b08:	b10b      	cbz	r3, 8012b0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8012b0a:	3301      	adds	r3, #1
 8012b0c:	600b      	str	r3, [r1, #0]
 8012b0e:	6803      	ldr	r3, [r0, #0]
 8012b10:	b10b      	cbz	r3, 8012b16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8012b12:	881c      	ldrh	r4, [r3, #0]
 8012b14:	e7e9      	b.n	8012aea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012b16:	680c      	ldr	r4, [r1, #0]
 8012b18:	2c00      	cmp	r4, #0
 8012b1a:	d0e6      	beq.n	8012aea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012b1c:	7824      	ldrb	r4, [r4, #0]
 8012b1e:	e7e4      	b.n	8012aea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012b20:	680b      	ldr	r3, [r1, #0]
 8012b22:	b10b      	cbz	r3, 8012b28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012b24:	781b      	ldrb	r3, [r3, #0]
 8012b26:	e7c5      	b.n	8012ab4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8012b28:	2200      	movs	r2, #0
 8012b2a:	602a      	str	r2, [r5, #0]
 8012b2c:	240a      	movs	r4, #10
 8012b2e:	3b30      	subs	r3, #48	; 0x30
 8012b30:	b29e      	uxth	r6, r3
 8012b32:	2e09      	cmp	r6, #9
 8012b34:	682a      	ldr	r2, [r5, #0]
 8012b36:	d813      	bhi.n	8012b60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8012b38:	fb04 3302 	mla	r3, r4, r2, r3
 8012b3c:	602b      	str	r3, [r5, #0]
 8012b3e:	6803      	ldr	r3, [r0, #0]
 8012b40:	b10b      	cbz	r3, 8012b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8012b42:	3302      	adds	r3, #2
 8012b44:	6003      	str	r3, [r0, #0]
 8012b46:	680b      	ldr	r3, [r1, #0]
 8012b48:	b10b      	cbz	r3, 8012b4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8012b4a:	3301      	adds	r3, #1
 8012b4c:	600b      	str	r3, [r1, #0]
 8012b4e:	6803      	ldr	r3, [r0, #0]
 8012b50:	b10b      	cbz	r3, 8012b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8012b52:	881b      	ldrh	r3, [r3, #0]
 8012b54:	e7eb      	b.n	8012b2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012b56:	680b      	ldr	r3, [r1, #0]
 8012b58:	2b00      	cmp	r3, #0
 8012b5a:	d0e8      	beq.n	8012b2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012b5c:	781b      	ldrb	r3, [r3, #0]
 8012b5e:	e7e6      	b.n	8012b2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012b60:	2a06      	cmp	r2, #6
 8012b62:	bfa8      	it	ge
 8012b64:	2206      	movge	r2, #6
 8012b66:	602a      	str	r2, [r5, #0]
 8012b68:	e7b1      	b.n	8012ace <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08012b6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8012b6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b6e:	b0a3      	sub	sp, #140	; 0x8c
 8012b70:	2600      	movs	r6, #0
 8012b72:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8012b76:	4607      	mov	r7, r0
 8012b78:	4688      	mov	r8, r1
 8012b7a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8012b7e:	4631      	mov	r1, r6
 8012b80:	2242      	movs	r2, #66	; 0x42
 8012b82:	4648      	mov	r0, r9
 8012b84:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8012b86:	960d      	str	r6, [sp, #52]	; 0x34
 8012b88:	f00c fe74 	bl	801f874 <memset>
 8012b8c:	b15f      	cbz	r7, 8012ba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8012b8e:	f108 3aff 	add.w	sl, r8, #4294967295
 8012b92:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012b94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012b96:	b152      	cbz	r2, 8012bae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8012b98:	8812      	ldrh	r2, [r2, #0]
 8012b9a:	b10a      	cbz	r2, 8012ba0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012b9c:	459a      	cmp	sl, r3
 8012b9e:	dc2e      	bgt.n	8012bfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8012ba0:	2200      	movs	r2, #0
 8012ba2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012ba6:	4638      	mov	r0, r7
 8012ba8:	b023      	add	sp, #140	; 0x8c
 8012baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012bae:	9a08      	ldr	r2, [sp, #32]
 8012bb0:	2a00      	cmp	r2, #0
 8012bb2:	d0f5      	beq.n	8012ba0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012bb4:	7812      	ldrb	r2, [r2, #0]
 8012bb6:	e7f0      	b.n	8012b9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8012bb8:	2d00      	cmp	r5, #0
 8012bba:	d0ea      	beq.n	8012b92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012bbc:	782a      	ldrb	r2, [r5, #0]
 8012bbe:	b142      	cbz	r2, 8012bd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8012bc0:	2a25      	cmp	r2, #37	; 0x25
 8012bc2:	d001      	beq.n	8012bc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8012bc4:	459a      	cmp	sl, r3
 8012bc6:	dc08      	bgt.n	8012bda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8012bc8:	f1bb 0f00 	cmp.w	fp, #0
 8012bcc:	d121      	bne.n	8012c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8012bce:	2d00      	cmp	r5, #0
 8012bd0:	d0df      	beq.n	8012b92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012bd2:	782a      	ldrb	r2, [r5, #0]
 8012bd4:	f04f 0b00 	mov.w	fp, #0
 8012bd8:	e01d      	b.n	8012c16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8012bda:	f1bb 0f00 	cmp.w	fp, #0
 8012bde:	d078      	beq.n	8012cd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8012be0:	f8bb 2000 	ldrh.w	r2, [fp]
 8012be4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012be8:	f1bb 0f00 	cmp.w	fp, #0
 8012bec:	d002      	beq.n	8012bf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8012bee:	f10b 0202 	add.w	r2, fp, #2
 8012bf2:	9209      	str	r2, [sp, #36]	; 0x24
 8012bf4:	b10d      	cbz	r5, 8012bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8012bf6:	3501      	adds	r5, #1
 8012bf8:	9508      	str	r5, [sp, #32]
 8012bfa:	3301      	adds	r3, #1
 8012bfc:	930d      	str	r3, [sp, #52]	; 0x34
 8012bfe:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8012c02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012c04:	f1bb 0f00 	cmp.w	fp, #0
 8012c08:	d0d6      	beq.n	8012bb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8012c0a:	f8bb 2000 	ldrh.w	r2, [fp]
 8012c0e:	2a00      	cmp	r2, #0
 8012c10:	d1d6      	bne.n	8012bc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8012c12:	f8bb 2000 	ldrh.w	r2, [fp]
 8012c16:	2a00      	cmp	r2, #0
 8012c18:	d0bb      	beq.n	8012b92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012c1a:	459a      	cmp	sl, r3
 8012c1c:	ddb9      	ble.n	8012b92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012c1e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8012c22:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8012c26:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8012c2a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8012c2e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8012c32:	960e      	str	r6, [sp, #56]	; 0x38
 8012c34:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8012c38:	960f      	str	r6, [sp, #60]	; 0x3c
 8012c3a:	f1bb 0f00 	cmp.w	fp, #0
 8012c3e:	d002      	beq.n	8012c46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8012c40:	f10b 0302 	add.w	r3, fp, #2
 8012c44:	9309      	str	r3, [sp, #36]	; 0x24
 8012c46:	b10d      	cbz	r5, 8012c4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8012c48:	1c6b      	adds	r3, r5, #1
 8012c4a:	9308      	str	r3, [sp, #32]
 8012c4c:	ab0f      	add	r3, sp, #60	; 0x3c
 8012c4e:	9305      	str	r3, [sp, #20]
 8012c50:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8012c54:	9304      	str	r3, [sp, #16]
 8012c56:	ab0e      	add	r3, sp, #56	; 0x38
 8012c58:	9303      	str	r3, [sp, #12]
 8012c5a:	ab0c      	add	r3, sp, #48	; 0x30
 8012c5c:	9302      	str	r3, [sp, #8]
 8012c5e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8012c62:	9301      	str	r3, [sp, #4]
 8012c64:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8012c68:	9300      	str	r3, [sp, #0]
 8012c6a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8012c6e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8012c72:	a908      	add	r1, sp, #32
 8012c74:	a809      	add	r0, sp, #36	; 0x24
 8012c76:	f7ff fea8 	bl	80129ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8012c7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012c7c:	2b00      	cmp	r3, #0
 8012c7e:	bfbe      	ittt	lt
 8012c80:	6823      	ldrlt	r3, [r4, #0]
 8012c82:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012c86:	930e      	strlt	r3, [sp, #56]	; 0x38
 8012c88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012c8a:	bfb8      	it	lt
 8012c8c:	3404      	addlt	r4, #4
 8012c8e:	2b00      	cmp	r3, #0
 8012c90:	bfb8      	it	lt
 8012c92:	6823      	ldrlt	r3, [r4, #0]
 8012c94:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8012c98:	bfbe      	ittt	lt
 8012c9a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012c9e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8012ca0:	3404      	addlt	r4, #4
 8012ca2:	b1d9      	cbz	r1, 8012cdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8012ca4:	880b      	ldrh	r3, [r1, #0]
 8012ca6:	2b69      	cmp	r3, #105	; 0x69
 8012ca8:	d01f      	beq.n	8012cea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012caa:	d82f      	bhi.n	8012d0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8012cac:	2b58      	cmp	r3, #88	; 0x58
 8012cae:	d01c      	beq.n	8012cea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012cb0:	d818      	bhi.n	8012ce4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8012cb2:	2b25      	cmp	r3, #37	; 0x25
 8012cb4:	d034      	beq.n	8012d20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8012cb6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8012cba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012cbc:	f1bb 0f00 	cmp.w	fp, #0
 8012cc0:	f000 80b8 	beq.w	8012e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8012cc4:	f8bb 5000 	ldrh.w	r5, [fp]
 8012cc8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8012ccc:	3301      	adds	r3, #1
 8012cce:	930d      	str	r3, [sp, #52]	; 0x34
 8012cd0:	e029      	b.n	8012d26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8012cd2:	b10d      	cbz	r5, 8012cd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8012cd4:	782a      	ldrb	r2, [r5, #0]
 8012cd6:	e785      	b.n	8012be4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012cd8:	462a      	mov	r2, r5
 8012cda:	e783      	b.n	8012be4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012cdc:	2a00      	cmp	r2, #0
 8012cde:	d0ea      	beq.n	8012cb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8012ce0:	7813      	ldrb	r3, [r2, #0]
 8012ce2:	e7e0      	b.n	8012ca6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8012ce4:	3b63      	subs	r3, #99	; 0x63
 8012ce6:	2b01      	cmp	r3, #1
 8012ce8:	d8e5      	bhi.n	8012cb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8012cea:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8012cee:	b329      	cbz	r1, 8012d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8012cf0:	880b      	ldrh	r3, [r1, #0]
 8012cf2:	2b69      	cmp	r3, #105	; 0x69
 8012cf4:	d063      	beq.n	8012dbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8012cf6:	d825      	bhi.n	8012d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8012cf8:	2b63      	cmp	r3, #99	; 0x63
 8012cfa:	d038      	beq.n	8012d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8012cfc:	2b64      	cmp	r3, #100	; 0x64
 8012cfe:	d05e      	beq.n	8012dbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8012d00:	2b58      	cmp	r3, #88	; 0x58
 8012d02:	d07b      	beq.n	8012dfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8012d04:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8012d08:	4625      	mov	r5, r4
 8012d0a:	e036      	b.n	8012d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012d0c:	2b73      	cmp	r3, #115	; 0x73
 8012d0e:	d0ec      	beq.n	8012cea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012d10:	d802      	bhi.n	8012d18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8012d12:	2b6f      	cmp	r3, #111	; 0x6f
 8012d14:	d1cf      	bne.n	8012cb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8012d16:	e7e8      	b.n	8012cea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012d18:	2b75      	cmp	r3, #117	; 0x75
 8012d1a:	d0e6      	beq.n	8012cea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012d1c:	2b78      	cmp	r3, #120	; 0x78
 8012d1e:	e7f9      	b.n	8012d14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8012d20:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012d22:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8012d26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012d28:	b10b      	cbz	r3, 8012d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8012d2a:	3302      	adds	r3, #2
 8012d2c:	9309      	str	r3, [sp, #36]	; 0x24
 8012d2e:	9b08      	ldr	r3, [sp, #32]
 8012d30:	2b00      	cmp	r3, #0
 8012d32:	f43f af2e 	beq.w	8012b92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012d36:	3301      	adds	r3, #1
 8012d38:	9308      	str	r3, [sp, #32]
 8012d3a:	e72a      	b.n	8012b92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012d3c:	2a00      	cmp	r2, #0
 8012d3e:	d0e1      	beq.n	8012d04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8012d40:	7813      	ldrb	r3, [r2, #0]
 8012d42:	e7d6      	b.n	8012cf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8012d44:	2b73      	cmp	r3, #115	; 0x73
 8012d46:	d036      	beq.n	8012db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8012d48:	d807      	bhi.n	8012d5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8012d4a:	2b6f      	cmp	r3, #111	; 0x6f
 8012d4c:	d1da      	bne.n	8012d04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8012d4e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012d50:	1d25      	adds	r5, r4, #4
 8012d52:	eba8 0202 	sub.w	r2, r8, r2
 8012d56:	2308      	movs	r3, #8
 8012d58:	e04a      	b.n	8012df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8012d5a:	2b75      	cmp	r3, #117	; 0x75
 8012d5c:	d043      	beq.n	8012de6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8012d5e:	2b78      	cmp	r3, #120	; 0x78
 8012d60:	d1d0      	bne.n	8012d04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8012d62:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012d64:	1d25      	adds	r5, r4, #4
 8012d66:	eba8 0202 	sub.w	r2, r8, r2
 8012d6a:	2310      	movs	r3, #16
 8012d6c:	e040      	b.n	8012df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8012d6e:	6823      	ldr	r3, [r4, #0]
 8012d70:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8012d74:	1d25      	adds	r5, r4, #4
 8012d76:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8012d7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012d7c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8012d80:	2b00      	cmp	r3, #0
 8012d82:	d052      	beq.n	8012e2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8012d84:	881a      	ldrh	r2, [r3, #0]
 8012d86:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8012d8a:	a80d      	add	r0, sp, #52	; 0x34
 8012d8c:	9005      	str	r0, [sp, #20]
 8012d8e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8012d92:	9004      	str	r0, [sp, #16]
 8012d94:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012d96:	9003      	str	r0, [sp, #12]
 8012d98:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8012d9c:	9002      	str	r0, [sp, #8]
 8012d9e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012da0:	9001      	str	r0, [sp, #4]
 8012da2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8012da6:	9000      	str	r0, [sp, #0]
 8012da8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8012dac:	a810      	add	r0, sp, #64	; 0x40
 8012dae:	f7ff fd49 	bl	8012844 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8012db2:	462c      	mov	r4, r5
 8012db4:	e7b7      	b.n	8012d26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8012db6:	6823      	ldr	r3, [r4, #0]
 8012db8:	1d25      	adds	r5, r4, #4
 8012dba:	9310      	str	r3, [sp, #64]	; 0x40
 8012dbc:	e7dd      	b.n	8012d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012dbe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012dc0:	6820      	ldr	r0, [r4, #0]
 8012dc2:	eba8 0202 	sub.w	r2, r8, r2
 8012dc6:	230a      	movs	r3, #10
 8012dc8:	b292      	uxth	r2, r2
 8012dca:	4649      	mov	r1, r9
 8012dcc:	f7ff fd08 	bl	80127e0 <_ZN8touchgfx7Unicode4itoaElPtti>
 8012dd0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012dd4:	2b2d      	cmp	r3, #45	; 0x2d
 8012dd6:	f104 0504 	add.w	r5, r4, #4
 8012dda:	d1ce      	bne.n	8012d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012ddc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012de0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012de2:	3302      	adds	r3, #2
 8012de4:	e7e9      	b.n	8012dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8012de6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012de8:	1d25      	adds	r5, r4, #4
 8012dea:	eba8 0202 	sub.w	r2, r8, r2
 8012dee:	230a      	movs	r3, #10
 8012df0:	b292      	uxth	r2, r2
 8012df2:	4649      	mov	r1, r9
 8012df4:	6820      	ldr	r0, [r4, #0]
 8012df6:	f7ff fcd5 	bl	80127a4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8012dfa:	e7be      	b.n	8012d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012dfc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012dfe:	6820      	ldr	r0, [r4, #0]
 8012e00:	eba8 0202 	sub.w	r2, r8, r2
 8012e04:	b292      	uxth	r2, r2
 8012e06:	2310      	movs	r3, #16
 8012e08:	4649      	mov	r1, r9
 8012e0a:	f7ff fccb 	bl	80127a4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8012e0e:	1d25      	adds	r5, r4, #4
 8012e10:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8012e14:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8012e18:	2b00      	cmp	r3, #0
 8012e1a:	d0ae      	beq.n	8012d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012e1c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8012e20:	2919      	cmp	r1, #25
 8012e22:	d8f7      	bhi.n	8012e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8012e24:	3b20      	subs	r3, #32
 8012e26:	8013      	strh	r3, [r2, #0]
 8012e28:	e7f4      	b.n	8012e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8012e2a:	9a08      	ldr	r2, [sp, #32]
 8012e2c:	2a00      	cmp	r2, #0
 8012e2e:	d0aa      	beq.n	8012d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8012e30:	7812      	ldrb	r2, [r2, #0]
 8012e32:	e7a8      	b.n	8012d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8012e34:	2d00      	cmp	r5, #0
 8012e36:	f43f af47 	beq.w	8012cc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8012e3a:	782d      	ldrb	r5, [r5, #0]
 8012e3c:	e744      	b.n	8012cc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08012e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8012e3e:	b507      	push	{r0, r1, r2, lr}
 8012e40:	9300      	str	r3, [sp, #0]
 8012e42:	4613      	mov	r3, r2
 8012e44:	2200      	movs	r2, #0
 8012e46:	f7ff fe90 	bl	8012b6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8012e4a:	b003      	add	sp, #12
 8012e4c:	f85d fb04 	ldr.w	pc, [sp], #4

08012e50 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8012e50:	b40c      	push	{r2, r3}
 8012e52:	b507      	push	{r0, r1, r2, lr}
 8012e54:	ab04      	add	r3, sp, #16
 8012e56:	f853 2b04 	ldr.w	r2, [r3], #4
 8012e5a:	9301      	str	r3, [sp, #4]
 8012e5c:	f7ff ffef 	bl	8012e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8012e60:	b003      	add	sp, #12
 8012e62:	f85d eb04 	ldr.w	lr, [sp], #4
 8012e66:	b002      	add	sp, #8
 8012e68:	4770      	bx	lr
	...

08012e6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8012e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e70:	b0c3      	sub	sp, #268	; 0x10c
 8012e72:	2600      	movs	r6, #0
 8012e74:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8012e78:	4607      	mov	r7, r0
 8012e7a:	4689      	mov	r9, r1
 8012e7c:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8012e80:	4631      	mov	r1, r6
 8012e82:	22c8      	movs	r2, #200	; 0xc8
 8012e84:	4640      	mov	r0, r8
 8012e86:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8012e8a:	960c      	str	r6, [sp, #48]	; 0x30
 8012e8c:	f00c fcf2 	bl	801f874 <memset>
 8012e90:	b17f      	cbz	r7, 8012eb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 8012e92:	eddf 5aa4 	vldr	s11, [pc, #656]	; 8013124 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8012e96:	f8df b298 	ldr.w	fp, [pc, #664]	; 8013130 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8012e9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012e9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e9e:	b162      	cbz	r2, 8012eba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 8012ea0:	8812      	ldrh	r2, [r2, #0]
 8012ea2:	b11a      	cbz	r2, 8012eac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8012ea4:	f109 31ff 	add.w	r1, r9, #4294967295
 8012ea8:	4299      	cmp	r1, r3
 8012eaa:	dc26      	bgt.n	8012efa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8012eac:	2200      	movs	r2, #0
 8012eae:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012eb2:	4638      	mov	r0, r7
 8012eb4:	b043      	add	sp, #268	; 0x10c
 8012eb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012eba:	9a08      	ldr	r2, [sp, #32]
 8012ebc:	2a00      	cmp	r2, #0
 8012ebe:	d0f5      	beq.n	8012eac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8012ec0:	7812      	ldrb	r2, [r2, #0]
 8012ec2:	e7ee      	b.n	8012ea2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8012ec4:	2c00      	cmp	r4, #0
 8012ec6:	d0e8      	beq.n	8012e9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012ec8:	7822      	ldrb	r2, [r4, #0]
 8012eca:	b132      	cbz	r2, 8012eda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8012ecc:	2a25      	cmp	r2, #37	; 0x25
 8012ece:	d001      	beq.n	8012ed4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 8012ed0:	4299      	cmp	r1, r3
 8012ed2:	dc05      	bgt.n	8012ee0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8012ed4:	b9cd      	cbnz	r5, 8012f0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8012ed6:	2c00      	cmp	r4, #0
 8012ed8:	d0df      	beq.n	8012e9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012eda:	7822      	ldrb	r2, [r4, #0]
 8012edc:	2500      	movs	r5, #0
 8012ede:	e015      	b.n	8012f0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 8012ee0:	2d00      	cmp	r5, #0
 8012ee2:	d073      	beq.n	8012fcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8012ee4:	882a      	ldrh	r2, [r5, #0]
 8012ee6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012eea:	b10d      	cbz	r5, 8012ef0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8012eec:	3502      	adds	r5, #2
 8012eee:	9509      	str	r5, [sp, #36]	; 0x24
 8012ef0:	b10c      	cbz	r4, 8012ef6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 8012ef2:	3401      	adds	r4, #1
 8012ef4:	9408      	str	r4, [sp, #32]
 8012ef6:	3301      	adds	r3, #1
 8012ef8:	930c      	str	r3, [sp, #48]	; 0x30
 8012efa:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 8012efe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012f00:	2d00      	cmp	r5, #0
 8012f02:	d0df      	beq.n	8012ec4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8012f04:	882a      	ldrh	r2, [r5, #0]
 8012f06:	2a00      	cmp	r2, #0
 8012f08:	d1e0      	bne.n	8012ecc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8012f0a:	882a      	ldrh	r2, [r5, #0]
 8012f0c:	2a00      	cmp	r2, #0
 8012f0e:	d0c4      	beq.n	8012e9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012f10:	4299      	cmp	r1, r3
 8012f12:	ddc2      	ble.n	8012e9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012f14:	2300      	movs	r3, #0
 8012f16:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012f1a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012f1e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8012f22:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012f26:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012f2a:	930d      	str	r3, [sp, #52]	; 0x34
 8012f2c:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8012f30:	930e      	str	r3, [sp, #56]	; 0x38
 8012f32:	b10d      	cbz	r5, 8012f38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8012f34:	1cab      	adds	r3, r5, #2
 8012f36:	9309      	str	r3, [sp, #36]	; 0x24
 8012f38:	b10c      	cbz	r4, 8012f3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8012f3a:	1c63      	adds	r3, r4, #1
 8012f3c:	9308      	str	r3, [sp, #32]
 8012f3e:	ab0e      	add	r3, sp, #56	; 0x38
 8012f40:	9305      	str	r3, [sp, #20]
 8012f42:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8012f46:	9304      	str	r3, [sp, #16]
 8012f48:	ab0d      	add	r3, sp, #52	; 0x34
 8012f4a:	9303      	str	r3, [sp, #12]
 8012f4c:	ab0b      	add	r3, sp, #44	; 0x2c
 8012f4e:	9302      	str	r3, [sp, #8]
 8012f50:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8012f54:	9301      	str	r3, [sp, #4]
 8012f56:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8012f5a:	9300      	str	r3, [sp, #0]
 8012f5c:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 8012f60:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8012f64:	a908      	add	r1, sp, #32
 8012f66:	a809      	add	r0, sp, #36	; 0x24
 8012f68:	f7ff fd2f 	bl	80129ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8012f6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012f6e:	2b00      	cmp	r3, #0
 8012f70:	da0b      	bge.n	8012f8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 8012f72:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8012f76:	edd3 7a00 	vldr	s15, [r3]
 8012f7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012f7e:	3601      	adds	r6, #1
 8012f80:	ee17 3a90 	vmov	r3, s15
 8012f84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012f88:	930d      	str	r3, [sp, #52]	; 0x34
 8012f8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012f8c:	2b00      	cmp	r3, #0
 8012f8e:	da0b      	bge.n	8012fa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 8012f90:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8012f94:	edd3 7a00 	vldr	s15, [r3]
 8012f98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012f9c:	3601      	adds	r6, #1
 8012f9e:	ee17 3a90 	vmov	r3, s15
 8012fa2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012fa6:	930e      	str	r3, [sp, #56]	; 0x38
 8012fa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012faa:	b1a3      	cbz	r3, 8012fd6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8012fac:	881a      	ldrh	r2, [r3, #0]
 8012fae:	2a25      	cmp	r2, #37	; 0x25
 8012fb0:	d016      	beq.n	8012fe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 8012fb2:	2a66      	cmp	r2, #102	; 0x66
 8012fb4:	d01a      	beq.n	8012fec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8012fb6:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8012fba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012fbc:	2d00      	cmp	r5, #0
 8012fbe:	f000 80fe 	beq.w	80131be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 8012fc2:	882c      	ldrh	r4, [r5, #0]
 8012fc4:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8012fc8:	3301      	adds	r3, #1
 8012fca:	e00d      	b.n	8012fe8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8012fcc:	b10c      	cbz	r4, 8012fd2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 8012fce:	7822      	ldrb	r2, [r4, #0]
 8012fd0:	e789      	b.n	8012ee6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8012fd2:	4622      	mov	r2, r4
 8012fd4:	e787      	b.n	8012ee6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8012fd6:	9b08      	ldr	r3, [sp, #32]
 8012fd8:	2b00      	cmp	r3, #0
 8012fda:	d0ec      	beq.n	8012fb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8012fdc:	781a      	ldrb	r2, [r3, #0]
 8012fde:	e7e6      	b.n	8012fae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 8012fe0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012fe2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012fe6:	3302      	adds	r3, #2
 8012fe8:	930c      	str	r3, [sp, #48]	; 0x30
 8012fea:	e042      	b.n	8013072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8012fec:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8012ff0:	edd3 7a00 	vldr	s15, [r3]
 8012ff4:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8012ff8:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8012ffc:	3601      	adds	r6, #1
 8012ffe:	b923      	cbnz	r3, 801300a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 8013000:	2301      	movs	r3, #1
 8013002:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8013006:	2306      	movs	r3, #6
 8013008:	930e      	str	r3, [sp, #56]	; 0x38
 801300a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801300e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013012:	bf48      	it	mi
 8013014:	eef1 7a67 	vnegmi.f32	s15, s15
 8013018:	eeb0 7ae7 	vabs.f32	s14, s15
 801301c:	bf48      	it	mi
 801301e:	232d      	movmi	r3, #45	; 0x2d
 8013020:	eeb4 7a65 	vcmp.f32	s14, s11
 8013024:	bf48      	it	mi
 8013026:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 801302a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801302e:	dd2b      	ble.n	8013088 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 8013030:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8013034:	2366      	movs	r3, #102	; 0x66
 8013036:	9311      	str	r3, [sp, #68]	; 0x44
 8013038:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801303a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801303e:	2b00      	cmp	r3, #0
 8013040:	f000 80b7 	beq.w	80131b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8013044:	881a      	ldrh	r2, [r3, #0]
 8013046:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 801304a:	a80c      	add	r0, sp, #48	; 0x30
 801304c:	9005      	str	r0, [sp, #20]
 801304e:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 8013052:	9004      	str	r0, [sp, #16]
 8013054:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013056:	9003      	str	r0, [sp, #12]
 8013058:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 801305c:	9002      	str	r0, [sp, #8]
 801305e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013060:	9001      	str	r0, [sp, #4]
 8013062:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8013066:	9000      	str	r0, [sp, #0]
 8013068:	e9cd 9706 	strd	r9, r7, [sp, #24]
 801306c:	a80f      	add	r0, sp, #60	; 0x3c
 801306e:	f7ff fbe9 	bl	8012844 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013072:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013074:	b10b      	cbz	r3, 801307a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8013076:	3302      	adds	r3, #2
 8013078:	9309      	str	r3, [sp, #36]	; 0x24
 801307a:	9b08      	ldr	r3, [sp, #32]
 801307c:	2b00      	cmp	r3, #0
 801307e:	f43f af0c 	beq.w	8012e9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013082:	3301      	adds	r3, #1
 8013084:	9308      	str	r3, [sp, #32]
 8013086:	e708      	b.n	8012e9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013088:	eef4 7a67 	vcmp.f32	s15, s15
 801308c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013090:	d60b      	bvs.n	80130aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 8013092:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013094:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8013128 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8013098:	2300      	movs	r3, #0
 801309a:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801309e:	4283      	cmp	r3, r0
 80130a0:	da07      	bge.n	80130b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 80130a2:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80130a6:	3301      	adds	r3, #1
 80130a8:	e7f9      	b.n	801309e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 80130aa:	4b20      	ldr	r3, [pc, #128]	; (801312c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 80130ac:	9310      	str	r3, [sp, #64]	; 0x40
 80130ae:	236e      	movs	r3, #110	; 0x6e
 80130b0:	e7c1      	b.n	8013036 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 80130b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80130b6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80130ba:	eeb0 7a67 	vmov.f32	s14, s15
 80130be:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80130c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130c6:	da27      	bge.n	8013118 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 80130c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80130ca:	2100      	movs	r1, #0
 80130cc:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 80130d0:	eba9 0202 	sub.w	r2, r9, r2
 80130d4:	eef4 6ac5 	vcmpe.f32	s13, s10
 80130d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130dc:	b28c      	uxth	r4, r1
 80130de:	db2a      	blt.n	8013136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80130e0:	1a53      	subs	r3, r2, r1
 80130e2:	2b00      	cmp	r3, #0
 80130e4:	dd27      	ble.n	8013136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80130e6:	2963      	cmp	r1, #99	; 0x63
 80130e8:	d024      	beq.n	8013134 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80130ea:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80130ee:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80130f2:	ee17 3a10 	vmov	r3, s14
 80130f6:	2b09      	cmp	r3, #9
 80130f8:	bfa8      	it	ge
 80130fa:	2309      	movge	r3, #9
 80130fc:	ee07 3a10 	vmov	s14, r3
 8013100:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013104:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8013108:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 801310c:	eee7 7a66 	vfms.f32	s15, s14, s13
 8013110:	3101      	adds	r1, #1
 8013112:	eec6 6a86 	vdiv.f32	s13, s13, s12
 8013116:	e7dd      	b.n	80130d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 8013118:	ee66 6a86 	vmul.f32	s13, s13, s12
 801311c:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8013120:	e7cd      	b.n	80130be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 8013122:	bf00      	nop
 8013124:	7f7fffff 	.word	0x7f7fffff
 8013128:	3f000002 	.word	0x3f000002
 801312c:	0061006e 	.word	0x0061006e
 8013130:	006e0069 	.word	0x006e0069
 8013134:	460c      	mov	r4, r1
 8013136:	2a63      	cmp	r2, #99	; 0x63
 8013138:	bfd4      	ite	le
 801313a:	ebc4 0202 	rsble	r2, r4, r2
 801313e:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 8013142:	2a00      	cmp	r2, #0
 8013144:	dd30      	ble.n	80131a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8013146:	4603      	mov	r3, r0
 8013148:	2501      	movs	r5, #1
 801314a:	210a      	movs	r1, #10
 801314c:	2b00      	cmp	r3, #0
 801314e:	dd0d      	ble.n	801316c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 8013150:	ee67 7a86 	vmul.f32	s15, s15, s12
 8013154:	3b01      	subs	r3, #1
 8013156:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801315a:	ee17 ca10 	vmov	ip, s14
 801315e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013162:	fb01 c505 	mla	r5, r1, r5, ip
 8013166:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801316a:	e7ef      	b.n	801314c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 801316c:	2800      	cmp	r0, #0
 801316e:	f100 33ff 	add.w	r3, r0, #4294967295
 8013172:	bfac      	ite	ge
 8013174:	1a18      	subge	r0, r3, r0
 8013176:	4618      	movlt	r0, r3
 8013178:	0064      	lsls	r4, r4, #1
 801317a:	900e      	str	r0, [sp, #56]	; 0x38
 801317c:	230a      	movs	r3, #10
 801317e:	b292      	uxth	r2, r2
 8013180:	eb08 0104 	add.w	r1, r8, r4
 8013184:	4628      	mov	r0, r5
 8013186:	f7ff fb2b 	bl	80127e0 <_ZN8touchgfx7Unicode4itoaElPtti>
 801318a:	2d01      	cmp	r5, #1
 801318c:	dc0a      	bgt.n	80131a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801318e:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 8013192:	2b00      	cmp	r3, #0
 8013194:	bf0c      	ite	eq
 8013196:	2300      	moveq	r3, #0
 8013198:	232e      	movne	r3, #46	; 0x2e
 801319a:	aa42      	add	r2, sp, #264	; 0x108
 801319c:	4414      	add	r4, r2
 801319e:	f824 3cc8 	strh.w	r3, [r4, #-200]
 80131a2:	e749      	b.n	8013038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 80131a4:	232e      	movs	r3, #46	; 0x2e
 80131a6:	e7f8      	b.n	801319a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 80131a8:	ab42      	add	r3, sp, #264	; 0x108
 80131aa:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80131ae:	2300      	movs	r3, #0
 80131b0:	e7f5      	b.n	801319e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 80131b2:	9a08      	ldr	r2, [sp, #32]
 80131b4:	2a00      	cmp	r2, #0
 80131b6:	f43f af46 	beq.w	8013046 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 80131ba:	7812      	ldrb	r2, [r2, #0]
 80131bc:	e743      	b.n	8013046 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 80131be:	2c00      	cmp	r4, #0
 80131c0:	f43f af00 	beq.w	8012fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80131c4:	7824      	ldrb	r4, [r4, #0]
 80131c6:	e6fd      	b.n	8012fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

080131c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80131c8:	b507      	push	{r0, r1, r2, lr}
 80131ca:	9300      	str	r3, [sp, #0]
 80131cc:	4613      	mov	r3, r2
 80131ce:	2200      	movs	r2, #0
 80131d0:	f7ff fe4c 	bl	8012e6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80131d4:	b003      	add	sp, #12
 80131d6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080131dc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80131dc:	4b01      	ldr	r3, [pc, #4]	; (80131e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80131de:	6018      	str	r0, [r3, #0]
 80131e0:	4770      	bx	lr
 80131e2:	bf00      	nop
 80131e4:	200175cc 	.word	0x200175cc

080131e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80131e8:	4b06      	ldr	r3, [pc, #24]	; (8013204 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80131ea:	881a      	ldrh	r2, [r3, #0]
 80131ec:	4282      	cmp	r2, r0
 80131ee:	d807      	bhi.n	8013200 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80131f0:	4b05      	ldr	r3, [pc, #20]	; (8013208 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80131f2:	881b      	ldrh	r3, [r3, #0]
 80131f4:	4413      	add	r3, r2
 80131f6:	4298      	cmp	r0, r3
 80131f8:	bfac      	ite	ge
 80131fa:	2000      	movge	r0, #0
 80131fc:	2001      	movlt	r0, #1
 80131fe:	4770      	bx	lr
 8013200:	2000      	movs	r0, #0
 8013202:	4770      	bx	lr
 8013204:	200175ec 	.word	0x200175ec
 8013208:	200175f0 	.word	0x200175f0

0801320c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801320c:	b508      	push	{r3, lr}
 801320e:	4601      	mov	r1, r0
 8013210:	f7ff ffea 	bl	80131e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8013214:	b118      	cbz	r0, 801321e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8013216:	4b02      	ldr	r3, [pc, #8]	; (8013220 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013218:	681b      	ldr	r3, [r3, #0]
 801321a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801321e:	bd08      	pop	{r3, pc}
 8013220:	200175d0 	.word	0x200175d0

08013224 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013224:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013226:	4c24      	ldr	r4, [pc, #144]	; (80132b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013228:	6823      	ldr	r3, [r4, #0]
 801322a:	2b00      	cmp	r3, #0
 801322c:	d042      	beq.n	80132b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801322e:	4a23      	ldr	r2, [pc, #140]	; (80132bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8013230:	4d23      	ldr	r5, [pc, #140]	; (80132c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8013232:	8811      	ldrh	r1, [r2, #0]
 8013234:	f8b5 c000 	ldrh.w	ip, [r5]
 8013238:	4822      	ldr	r0, [pc, #136]	; (80132c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801323a:	4461      	add	r1, ip
 801323c:	1c4a      	adds	r2, r1, #1
 801323e:	f022 0201 	bic.w	r2, r2, #1
 8013242:	008f      	lsls	r7, r1, #2
 8013244:	0412      	lsls	r2, r2, #16
 8013246:	19de      	adds	r6, r3, r7
 8013248:	0c12      	lsrs	r2, r2, #16
 801324a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801324e:	6006      	str	r6, [r0, #0]
 8013250:	4e1d      	ldr	r6, [pc, #116]	; (80132c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8013252:	19da      	adds	r2, r3, r7
 8013254:	6032      	str	r2, [r6, #0]
 8013256:	220e      	movs	r2, #14
 8013258:	fb02 f20c 	mul.w	r2, r2, ip
 801325c:	3203      	adds	r2, #3
 801325e:	f022 0203 	bic.w	r2, r2, #3
 8013262:	443a      	add	r2, r7
 8013264:	4f19      	ldr	r7, [pc, #100]	; (80132cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8013266:	4413      	add	r3, r2
 8013268:	603b      	str	r3, [r7, #0]
 801326a:	4f19      	ldr	r7, [pc, #100]	; (80132d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801326c:	2300      	movs	r3, #0
 801326e:	803b      	strh	r3, [r7, #0]
 8013270:	4f18      	ldr	r7, [pc, #96]	; (80132d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8013272:	683f      	ldr	r7, [r7, #0]
 8013274:	1aba      	subs	r2, r7, r2
 8013276:	4f18      	ldr	r7, [pc, #96]	; (80132d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8013278:	603a      	str	r2, [r7, #0]
 801327a:	4a18      	ldr	r2, [pc, #96]	; (80132dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801327c:	469c      	mov	ip, r3
 801327e:	8013      	strh	r3, [r2, #0]
 8013280:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8013284:	428b      	cmp	r3, r1
 8013286:	d10d      	bne.n	80132a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8013288:	882d      	ldrh	r5, [r5, #0]
 801328a:	6830      	ldr	r0, [r6, #0]
 801328c:	2300      	movs	r3, #0
 801328e:	240e      	movs	r4, #14
 8013290:	429d      	cmp	r5, r3
 8013292:	d90f      	bls.n	80132b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013294:	fb04 0203 	mla	r2, r4, r3, r0
 8013298:	3301      	adds	r3, #1
 801329a:	7b11      	ldrb	r1, [r2, #12]
 801329c:	f36f 1145 	bfc	r1, #5, #1
 80132a0:	7311      	strb	r1, [r2, #12]
 80132a2:	e7f5      	b.n	8013290 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80132a4:	6822      	ldr	r2, [r4, #0]
 80132a6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80132aa:	6802      	ldr	r2, [r0, #0]
 80132ac:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80132b0:	3301      	adds	r3, #1
 80132b2:	e7e7      	b.n	8013284 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80132b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80132b6:	bf00      	nop
 80132b8:	200175d0 	.word	0x200175d0
 80132bc:	200175ec 	.word	0x200175ec
 80132c0:	200175f0 	.word	0x200175f0
 80132c4:	200175e4 	.word	0x200175e4
 80132c8:	200175d4 	.word	0x200175d4
 80132cc:	200175dc 	.word	0x200175dc
 80132d0:	200175ee 	.word	0x200175ee
 80132d4:	200175d8 	.word	0x200175d8
 80132d8:	200175e8 	.word	0x200175e8
 80132dc:	200175e0 	.word	0x200175e0

080132e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80132e0:	4b06      	ldr	r3, [pc, #24]	; (80132fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80132e2:	681b      	ldr	r3, [r3, #0]
 80132e4:	b943      	cbnz	r3, 80132f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80132e6:	b139      	cbz	r1, 80132f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80132e8:	4b05      	ldr	r3, [pc, #20]	; (8013300 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80132ea:	801a      	strh	r2, [r3, #0]
 80132ec:	4b05      	ldr	r3, [pc, #20]	; (8013304 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80132ee:	6019      	str	r1, [r3, #0]
 80132f0:	4b05      	ldr	r3, [pc, #20]	; (8013308 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80132f2:	6018      	str	r0, [r3, #0]
 80132f4:	f7ff bf96 	b.w	8013224 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80132f8:	4770      	bx	lr
 80132fa:	bf00      	nop
 80132fc:	200175dc 	.word	0x200175dc
 8013300:	200175f0 	.word	0x200175f0
 8013304:	200175d8 	.word	0x200175d8
 8013308:	200175d0 	.word	0x200175d0

0801330c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801330c:	b470      	push	{r4, r5, r6}
 801330e:	4c07      	ldr	r4, [pc, #28]	; (801332c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013310:	6826      	ldr	r6, [r4, #0]
 8013312:	4605      	mov	r5, r0
 8013314:	4610      	mov	r0, r2
 8013316:	9a03      	ldr	r2, [sp, #12]
 8013318:	b936      	cbnz	r6, 8013328 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801331a:	6025      	str	r5, [r4, #0]
 801331c:	4c04      	ldr	r4, [pc, #16]	; (8013330 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801331e:	8021      	strh	r1, [r4, #0]
 8013320:	bc70      	pop	{r4, r5, r6}
 8013322:	4619      	mov	r1, r3
 8013324:	f7ff bfdc 	b.w	80132e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013328:	bc70      	pop	{r4, r5, r6}
 801332a:	4770      	bx	lr
 801332c:	200175f4 	.word	0x200175f4
 8013330:	200175ec 	.word	0x200175ec

08013334 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013334:	4a12      	ldr	r2, [pc, #72]	; (8013380 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8013336:	8803      	ldrh	r3, [r0, #0]
 8013338:	8812      	ldrh	r2, [r2, #0]
 801333a:	4293      	cmp	r3, r2
 801333c:	d207      	bcs.n	801334e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801333e:	4a11      	ldr	r2, [pc, #68]	; (8013384 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8013340:	6812      	ldr	r2, [r2, #0]
 8013342:	2114      	movs	r1, #20
 8013344:	fb01 2303 	mla	r3, r1, r3, r2
 8013348:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801334c:	4770      	bx	lr
 801334e:	490e      	ldr	r1, [pc, #56]	; (8013388 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013350:	8809      	ldrh	r1, [r1, #0]
 8013352:	4411      	add	r1, r2
 8013354:	428b      	cmp	r3, r1
 8013356:	da04      	bge.n	8013362 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8013358:	1a9b      	subs	r3, r3, r2
 801335a:	4a0c      	ldr	r2, [pc, #48]	; (801338c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801335c:	210e      	movs	r1, #14
 801335e:	6812      	ldr	r2, [r2, #0]
 8013360:	e7f0      	b.n	8013344 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8013362:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013366:	4293      	cmp	r3, r2
 8013368:	d108      	bne.n	801337c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801336a:	4b09      	ldr	r3, [pc, #36]	; (8013390 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801336c:	781b      	ldrb	r3, [r3, #0]
 801336e:	b91b      	cbnz	r3, 8013378 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8013370:	4b08      	ldr	r3, [pc, #32]	; (8013394 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8013372:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013376:	4770      	bx	lr
 8013378:	4b07      	ldr	r3, [pc, #28]	; (8013398 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801337a:	e7fa      	b.n	8013372 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801337c:	2000      	movs	r0, #0
 801337e:	4770      	bx	lr
 8013380:	200175ec 	.word	0x200175ec
 8013384:	200175f4 	.word	0x200175f4
 8013388:	200175f0 	.word	0x200175f0
 801338c:	200175d4 	.word	0x200175d4
 8013390:	2001755c 	.word	0x2001755c
 8013394:	2001755e 	.word	0x2001755e
 8013398:	20017560 	.word	0x20017560

0801339c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801339c:	4a12      	ldr	r2, [pc, #72]	; (80133e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801339e:	8803      	ldrh	r3, [r0, #0]
 80133a0:	8812      	ldrh	r2, [r2, #0]
 80133a2:	4293      	cmp	r3, r2
 80133a4:	d207      	bcs.n	80133b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80133a6:	4a11      	ldr	r2, [pc, #68]	; (80133ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80133a8:	6812      	ldr	r2, [r2, #0]
 80133aa:	2114      	movs	r1, #20
 80133ac:	fb01 2303 	mla	r3, r1, r3, r2
 80133b0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80133b4:	4770      	bx	lr
 80133b6:	490e      	ldr	r1, [pc, #56]	; (80133f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80133b8:	8809      	ldrh	r1, [r1, #0]
 80133ba:	4411      	add	r1, r2
 80133bc:	428b      	cmp	r3, r1
 80133be:	da04      	bge.n	80133ca <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80133c0:	1a9b      	subs	r3, r3, r2
 80133c2:	4a0c      	ldr	r2, [pc, #48]	; (80133f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80133c4:	210e      	movs	r1, #14
 80133c6:	6812      	ldr	r2, [r2, #0]
 80133c8:	e7f0      	b.n	80133ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80133ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80133ce:	4293      	cmp	r3, r2
 80133d0:	d108      	bne.n	80133e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80133d2:	4b09      	ldr	r3, [pc, #36]	; (80133f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80133d4:	781b      	ldrb	r3, [r3, #0]
 80133d6:	b91b      	cbnz	r3, 80133e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80133d8:	4b08      	ldr	r3, [pc, #32]	; (80133fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80133da:	f9b3 0000 	ldrsh.w	r0, [r3]
 80133de:	4770      	bx	lr
 80133e0:	4b07      	ldr	r3, [pc, #28]	; (8013400 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80133e2:	e7fa      	b.n	80133da <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80133e4:	2000      	movs	r0, #0
 80133e6:	4770      	bx	lr
 80133e8:	200175ec 	.word	0x200175ec
 80133ec:	200175f4 	.word	0x200175f4
 80133f0:	200175f0 	.word	0x200175f0
 80133f4:	200175d4 	.word	0x200175d4
 80133f8:	2001755c 	.word	0x2001755c
 80133fc:	20017560 	.word	0x20017560
 8013400:	2001755e 	.word	0x2001755e

08013404 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013404:	b510      	push	{r4, lr}
 8013406:	4a1f      	ldr	r2, [pc, #124]	; (8013484 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8013408:	880b      	ldrh	r3, [r1, #0]
 801340a:	8812      	ldrh	r2, [r2, #0]
 801340c:	4293      	cmp	r3, r2
 801340e:	d213      	bcs.n	8013438 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013410:	4a1d      	ldr	r2, [pc, #116]	; (8013488 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8013412:	6812      	ldr	r2, [r2, #0]
 8013414:	2114      	movs	r1, #20
 8013416:	fb01 2303 	mla	r3, r1, r3, r2
 801341a:	8a1a      	ldrh	r2, [r3, #16]
 801341c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013420:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013424:	8a5b      	ldrh	r3, [r3, #18]
 8013426:	8004      	strh	r4, [r0, #0]
 8013428:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801342c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013430:	8041      	strh	r1, [r0, #2]
 8013432:	8082      	strh	r2, [r0, #4]
 8013434:	80c3      	strh	r3, [r0, #6]
 8013436:	e00e      	b.n	8013456 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013438:	4914      	ldr	r1, [pc, #80]	; (801348c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801343a:	8809      	ldrh	r1, [r1, #0]
 801343c:	4411      	add	r1, r2
 801343e:	428b      	cmp	r3, r1
 8013440:	da0a      	bge.n	8013458 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8013442:	1a9b      	subs	r3, r3, r2
 8013444:	4a12      	ldr	r2, [pc, #72]	; (8013490 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8013446:	6812      	ldr	r2, [r2, #0]
 8013448:	210e      	movs	r1, #14
 801344a:	fb01 2303 	mla	r3, r1, r3, r2
 801344e:	681a      	ldr	r2, [r3, #0]
 8013450:	6002      	str	r2, [r0, #0]
 8013452:	685a      	ldr	r2, [r3, #4]
 8013454:	6042      	str	r2, [r0, #4]
 8013456:	bd10      	pop	{r4, pc}
 8013458:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801345c:	4293      	cmp	r3, r2
 801345e:	d10b      	bne.n	8013478 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8013460:	4b0c      	ldr	r3, [pc, #48]	; (8013494 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8013462:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013466:	4b0c      	ldr	r3, [pc, #48]	; (8013498 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013468:	8081      	strh	r1, [r0, #4]
 801346a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801346e:	80c2      	strh	r2, [r0, #6]
 8013470:	2300      	movs	r3, #0
 8013472:	8003      	strh	r3, [r0, #0]
 8013474:	8043      	strh	r3, [r0, #2]
 8013476:	e7ee      	b.n	8013456 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013478:	2300      	movs	r3, #0
 801347a:	8003      	strh	r3, [r0, #0]
 801347c:	8043      	strh	r3, [r0, #2]
 801347e:	8083      	strh	r3, [r0, #4]
 8013480:	e7d8      	b.n	8013434 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8013482:	bf00      	nop
 8013484:	200175ec 	.word	0x200175ec
 8013488:	200175f4 	.word	0x200175f4
 801348c:	200175f0 	.word	0x200175f0
 8013490:	200175d4 	.word	0x200175d4
 8013494:	20017558 	.word	0x20017558
 8013498:	2001755a 	.word	0x2001755a

0801349c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801349c:	4a17      	ldr	r2, [pc, #92]	; (80134fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801349e:	8803      	ldrh	r3, [r0, #0]
 80134a0:	8812      	ldrh	r2, [r2, #0]
 80134a2:	4293      	cmp	r3, r2
 80134a4:	d213      	bcs.n	80134ce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80134a6:	4a16      	ldr	r2, [pc, #88]	; (8013500 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80134a8:	6812      	ldr	r2, [r2, #0]
 80134aa:	2114      	movs	r1, #20
 80134ac:	fb01 2303 	mla	r3, r1, r3, r2
 80134b0:	8a1a      	ldrh	r2, [r3, #16]
 80134b2:	8919      	ldrh	r1, [r3, #8]
 80134b4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80134b8:	428a      	cmp	r2, r1
 80134ba:	db1d      	blt.n	80134f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80134bc:	8a58      	ldrh	r0, [r3, #18]
 80134be:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80134c2:	895b      	ldrh	r3, [r3, #10]
 80134c4:	4298      	cmp	r0, r3
 80134c6:	bfac      	ite	ge
 80134c8:	2000      	movge	r0, #0
 80134ca:	2001      	movlt	r0, #1
 80134cc:	4770      	bx	lr
 80134ce:	490d      	ldr	r1, [pc, #52]	; (8013504 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80134d0:	8809      	ldrh	r1, [r1, #0]
 80134d2:	4411      	add	r1, r2
 80134d4:	428b      	cmp	r3, r1
 80134d6:	da0d      	bge.n	80134f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80134d8:	1a9b      	subs	r3, r3, r2
 80134da:	4a0b      	ldr	r2, [pc, #44]	; (8013508 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80134dc:	6812      	ldr	r2, [r2, #0]
 80134de:	210e      	movs	r1, #14
 80134e0:	fb01 2303 	mla	r3, r1, r3, r2
 80134e4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80134e8:	891a      	ldrh	r2, [r3, #8]
 80134ea:	4291      	cmp	r1, r2
 80134ec:	db04      	blt.n	80134f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80134ee:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80134f2:	e7e6      	b.n	80134c2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80134f4:	2000      	movs	r0, #0
 80134f6:	4770      	bx	lr
 80134f8:	2001      	movs	r0, #1
 80134fa:	4770      	bx	lr
 80134fc:	200175ec 	.word	0x200175ec
 8013500:	200175f4 	.word	0x200175f4
 8013504:	200175f0 	.word	0x200175f0
 8013508:	200175d4 	.word	0x200175d4

0801350c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801350c:	4a12      	ldr	r2, [pc, #72]	; (8013558 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801350e:	8803      	ldrh	r3, [r0, #0]
 8013510:	8811      	ldrh	r1, [r2, #0]
 8013512:	428b      	cmp	r3, r1
 8013514:	d20b      	bcs.n	801352e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8013516:	4a11      	ldr	r2, [pc, #68]	; (801355c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013518:	6812      	ldr	r2, [r2, #0]
 801351a:	b112      	cbz	r2, 8013522 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801351c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013520:	b9c0      	cbnz	r0, 8013554 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8013522:	4a0f      	ldr	r2, [pc, #60]	; (8013560 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013524:	6811      	ldr	r1, [r2, #0]
 8013526:	2214      	movs	r2, #20
 8013528:	4353      	muls	r3, r2
 801352a:	58c8      	ldr	r0, [r1, r3]
 801352c:	4770      	bx	lr
 801352e:	4a0d      	ldr	r2, [pc, #52]	; (8013564 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013530:	8812      	ldrh	r2, [r2, #0]
 8013532:	440a      	add	r2, r1
 8013534:	4293      	cmp	r3, r2
 8013536:	da04      	bge.n	8013542 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8013538:	4a08      	ldr	r2, [pc, #32]	; (801355c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801353a:	6812      	ldr	r2, [r2, #0]
 801353c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013540:	4770      	bx	lr
 8013542:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013546:	4293      	cmp	r3, r2
 8013548:	d103      	bne.n	8013552 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801354a:	4b07      	ldr	r3, [pc, #28]	; (8013568 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801354c:	681b      	ldr	r3, [r3, #0]
 801354e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8013550:	4770      	bx	lr
 8013552:	2000      	movs	r0, #0
 8013554:	4770      	bx	lr
 8013556:	bf00      	nop
 8013558:	200175ec 	.word	0x200175ec
 801355c:	200175d0 	.word	0x200175d0
 8013560:	200175f4 	.word	0x200175f4
 8013564:	200175f0 	.word	0x200175f0
 8013568:	20017564 	.word	0x20017564

0801356c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801356c:	4b24      	ldr	r3, [pc, #144]	; (8013600 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801356e:	8802      	ldrh	r2, [r0, #0]
 8013570:	8818      	ldrh	r0, [r3, #0]
 8013572:	4282      	cmp	r2, r0
 8013574:	d221      	bcs.n	80135ba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8013576:	4b23      	ldr	r3, [pc, #140]	; (8013604 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8013578:	6819      	ldr	r1, [r3, #0]
 801357a:	2314      	movs	r3, #20
 801357c:	fb03 1302 	mla	r3, r3, r2, r1
 8013580:	6858      	ldr	r0, [r3, #4]
 8013582:	2800      	cmp	r0, #0
 8013584:	d03a      	beq.n	80135fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013586:	4920      	ldr	r1, [pc, #128]	; (8013608 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013588:	6809      	ldr	r1, [r1, #0]
 801358a:	2900      	cmp	r1, #0
 801358c:	d036      	beq.n	80135fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801358e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8013592:	2900      	cmp	r1, #0
 8013594:	d032      	beq.n	80135fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013596:	891a      	ldrh	r2, [r3, #8]
 8013598:	8958      	ldrh	r0, [r3, #10]
 801359a:	4350      	muls	r0, r2
 801359c:	7c5a      	ldrb	r2, [r3, #17]
 801359e:	7cdb      	ldrb	r3, [r3, #19]
 80135a0:	0952      	lsrs	r2, r2, #5
 80135a2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80135a6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80135aa:	2b0b      	cmp	r3, #11
 80135ac:	bf18      	it	ne
 80135ae:	0040      	lslne	r0, r0, #1
 80135b0:	3003      	adds	r0, #3
 80135b2:	f020 0003 	bic.w	r0, r0, #3
 80135b6:	4408      	add	r0, r1
 80135b8:	4770      	bx	lr
 80135ba:	4b14      	ldr	r3, [pc, #80]	; (801360c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80135bc:	881b      	ldrh	r3, [r3, #0]
 80135be:	4403      	add	r3, r0
 80135c0:	429a      	cmp	r2, r3
 80135c2:	da1a      	bge.n	80135fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80135c4:	4b12      	ldr	r3, [pc, #72]	; (8013610 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80135c6:	681b      	ldr	r3, [r3, #0]
 80135c8:	1a10      	subs	r0, r2, r0
 80135ca:	210e      	movs	r1, #14
 80135cc:	fb01 3000 	mla	r0, r1, r0, r3
 80135d0:	7b03      	ldrb	r3, [r0, #12]
 80135d2:	f003 031f 	and.w	r3, r3, #31
 80135d6:	2b0b      	cmp	r3, #11
 80135d8:	d10b      	bne.n	80135f2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80135da:	8903      	ldrh	r3, [r0, #8]
 80135dc:	8940      	ldrh	r0, [r0, #10]
 80135de:	4358      	muls	r0, r3
 80135e0:	4b09      	ldr	r3, [pc, #36]	; (8013608 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80135e2:	6819      	ldr	r1, [r3, #0]
 80135e4:	3003      	adds	r0, #3
 80135e6:	f020 0303 	bic.w	r3, r0, #3
 80135ea:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80135ee:	4418      	add	r0, r3
 80135f0:	4770      	bx	lr
 80135f2:	2b0d      	cmp	r3, #13
 80135f4:	d101      	bne.n	80135fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80135f6:	300d      	adds	r0, #13
 80135f8:	4770      	bx	lr
 80135fa:	2000      	movs	r0, #0
 80135fc:	4770      	bx	lr
 80135fe:	bf00      	nop
 8013600:	200175ec 	.word	0x200175ec
 8013604:	200175f4 	.word	0x200175f4
 8013608:	200175d0 	.word	0x200175d0
 801360c:	200175f0 	.word	0x200175f0
 8013610:	200175d4 	.word	0x200175d4

08013614 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013614:	b510      	push	{r4, lr}
 8013616:	4a17      	ldr	r2, [pc, #92]	; (8013674 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8013618:	8803      	ldrh	r3, [r0, #0]
 801361a:	8812      	ldrh	r2, [r2, #0]
 801361c:	4293      	cmp	r3, r2
 801361e:	d20c      	bcs.n	801363a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013620:	4a15      	ldr	r2, [pc, #84]	; (8013678 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8013622:	6812      	ldr	r2, [r2, #0]
 8013624:	2114      	movs	r1, #20
 8013626:	fb01 2303 	mla	r3, r1, r3, r2
 801362a:	7c58      	ldrb	r0, [r3, #17]
 801362c:	0942      	lsrs	r2, r0, #5
 801362e:	7cd8      	ldrb	r0, [r3, #19]
 8013630:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8013634:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8013638:	bd10      	pop	{r4, pc}
 801363a:	4910      	ldr	r1, [pc, #64]	; (801367c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801363c:	8809      	ldrh	r1, [r1, #0]
 801363e:	4411      	add	r1, r2
 8013640:	428b      	cmp	r3, r1
 8013642:	da09      	bge.n	8013658 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8013644:	1a9b      	subs	r3, r3, r2
 8013646:	4a0e      	ldr	r2, [pc, #56]	; (8013680 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8013648:	6812      	ldr	r2, [r2, #0]
 801364a:	210e      	movs	r1, #14
 801364c:	fb01 2303 	mla	r3, r1, r3, r2
 8013650:	7b18      	ldrb	r0, [r3, #12]
 8013652:	f000 001f 	and.w	r0, r0, #31
 8013656:	e7ef      	b.n	8013638 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8013658:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801365c:	4293      	cmp	r3, r2
 801365e:	d106      	bne.n	801366e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8013660:	f7ee febe 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 8013664:	6803      	ldr	r3, [r0, #0]
 8013666:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801366a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801366c:	4718      	bx	r3
 801366e:	2000      	movs	r0, #0
 8013670:	e7e2      	b.n	8013638 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8013672:	bf00      	nop
 8013674:	200175ec 	.word	0x200175ec
 8013678:	200175f4 	.word	0x200175f4
 801367c:	200175f0 	.word	0x200175f0
 8013680:	200175d4 	.word	0x200175d4

08013684 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8013684:	2010      	movs	r0, #16
 8013686:	4770      	bx	lr

08013688 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8013688:	2000      	movs	r0, #0
 801368a:	4770      	bx	lr

0801368c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801368c:	4b02      	ldr	r3, [pc, #8]	; (8013698 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801368e:	8818      	ldrh	r0, [r3, #0]
 8013690:	0040      	lsls	r0, r0, #1
 8013692:	b280      	uxth	r0, r0
 8013694:	4770      	bx	lr
 8013696:	bf00      	nop
 8013698:	2001755e 	.word	0x2001755e

0801369c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801369c:	2bff      	cmp	r3, #255	; 0xff
 801369e:	d050      	beq.n	8013742 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80136a0:	2a0b      	cmp	r2, #11
 80136a2:	d04a      	beq.n	801373a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80136a4:	d80e      	bhi.n	80136c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80136a6:	2a03      	cmp	r2, #3
 80136a8:	d03f      	beq.n	801372a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80136aa:	d804      	bhi.n	80136b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80136ac:	2a01      	cmp	r2, #1
 80136ae:	d03e      	beq.n	801372e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80136b0:	d93f      	bls.n	8013732 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80136b2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80136b4:	4770      	bx	lr
 80136b6:	2a09      	cmp	r2, #9
 80136b8:	d03f      	beq.n	801373a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80136ba:	d83c      	bhi.n	8013736 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80136bc:	2a08      	cmp	r2, #8
 80136be:	d03a      	beq.n	8013736 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80136c0:	2000      	movs	r0, #0
 80136c2:	4770      	bx	lr
 80136c4:	2a2f      	cmp	r2, #47	; 0x2f
 80136c6:	d024      	beq.n	8013712 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80136c8:	d80d      	bhi.n	80136e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80136ca:	2a2d      	cmp	r2, #45	; 0x2d
 80136cc:	d014      	beq.n	80136f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80136ce:	d826      	bhi.n	801371e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80136d0:	2a2c      	cmp	r2, #44	; 0x2c
 80136d2:	d1f5      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80136d4:	684b      	ldr	r3, [r1, #4]
 80136d6:	781b      	ldrb	r3, [r3, #0]
 80136d8:	2b01      	cmp	r3, #1
 80136da:	d018      	beq.n	801370e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80136dc:	d323      	bcc.n	8013726 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80136de:	2b02      	cmp	r3, #2
 80136e0:	d1ee      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80136e2:	6880      	ldr	r0, [r0, #8]
 80136e4:	4770      	bx	lr
 80136e6:	2a31      	cmp	r2, #49	; 0x31
 80136e8:	d004      	beq.n	80136f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80136ea:	d328      	bcc.n	801373e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80136ec:	2a32      	cmp	r2, #50	; 0x32
 80136ee:	d026      	beq.n	801373e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80136f0:	2a33      	cmp	r2, #51	; 0x33
 80136f2:	d1e5      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80136f4:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80136f6:	4770      	bx	lr
 80136f8:	684b      	ldr	r3, [r1, #4]
 80136fa:	781b      	ldrb	r3, [r3, #0]
 80136fc:	2b01      	cmp	r3, #1
 80136fe:	d004      	beq.n	801370a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8013700:	d30b      	bcc.n	801371a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013702:	2b02      	cmp	r3, #2
 8013704:	d1dc      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013706:	6900      	ldr	r0, [r0, #16]
 8013708:	4770      	bx	lr
 801370a:	6a00      	ldr	r0, [r0, #32]
 801370c:	4770      	bx	lr
 801370e:	6980      	ldr	r0, [r0, #24]
 8013710:	4770      	bx	lr
 8013712:	684b      	ldr	r3, [r1, #4]
 8013714:	781b      	ldrb	r3, [r3, #0]
 8013716:	2b00      	cmp	r3, #0
 8013718:	d1d2      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801371a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801371c:	4770      	bx	lr
 801371e:	684b      	ldr	r3, [r1, #4]
 8013720:	781b      	ldrb	r3, [r3, #0]
 8013722:	2b00      	cmp	r3, #0
 8013724:	d1cc      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013726:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013728:	4770      	bx	lr
 801372a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801372c:	4770      	bx	lr
 801372e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8013730:	4770      	bx	lr
 8013732:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8013734:	4770      	bx	lr
 8013736:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8013738:	4770      	bx	lr
 801373a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801373c:	4770      	bx	lr
 801373e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8013740:	4770      	bx	lr
 8013742:	2a0b      	cmp	r2, #11
 8013744:	d049      	beq.n	80137da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013746:	d80e      	bhi.n	8013766 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8013748:	2a03      	cmp	r2, #3
 801374a:	d040      	beq.n	80137ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801374c:	d804      	bhi.n	8013758 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801374e:	2a01      	cmp	r2, #1
 8013750:	d03f      	beq.n	80137d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8013752:	d940      	bls.n	80137d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8013754:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8013756:	4770      	bx	lr
 8013758:	2a09      	cmp	r2, #9
 801375a:	d03e      	beq.n	80137da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801375c:	d801      	bhi.n	8013762 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801375e:	2a08      	cmp	r2, #8
 8013760:	d1ae      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013762:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8013764:	4770      	bx	lr
 8013766:	2a2f      	cmp	r2, #47	; 0x2f
 8013768:	d024      	beq.n	80137b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801376a:	d80d      	bhi.n	8013788 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801376c:	2a2d      	cmp	r2, #45	; 0x2d
 801376e:	d014      	beq.n	801379a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8013770:	d826      	bhi.n	80137c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8013772:	2a2c      	cmp	r2, #44	; 0x2c
 8013774:	d1a4      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013776:	684b      	ldr	r3, [r1, #4]
 8013778:	781b      	ldrb	r3, [r3, #0]
 801377a:	2b01      	cmp	r3, #1
 801377c:	d018      	beq.n	80137b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801377e:	d324      	bcc.n	80137ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8013780:	2b02      	cmp	r3, #2
 8013782:	d19d      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013784:	68c0      	ldr	r0, [r0, #12]
 8013786:	4770      	bx	lr
 8013788:	2a31      	cmp	r2, #49	; 0x31
 801378a:	d004      	beq.n	8013796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801378c:	d327      	bcc.n	80137de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801378e:	2a32      	cmp	r2, #50	; 0x32
 8013790:	d025      	beq.n	80137de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013792:	2a33      	cmp	r2, #51	; 0x33
 8013794:	d194      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013796:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8013798:	4770      	bx	lr
 801379a:	684b      	ldr	r3, [r1, #4]
 801379c:	781b      	ldrb	r3, [r3, #0]
 801379e:	2b01      	cmp	r3, #1
 80137a0:	d004      	beq.n	80137ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80137a2:	d30b      	bcc.n	80137bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80137a4:	2b02      	cmp	r3, #2
 80137a6:	d18b      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137a8:	6940      	ldr	r0, [r0, #20]
 80137aa:	4770      	bx	lr
 80137ac:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80137ae:	4770      	bx	lr
 80137b0:	69c0      	ldr	r0, [r0, #28]
 80137b2:	4770      	bx	lr
 80137b4:	684b      	ldr	r3, [r1, #4]
 80137b6:	781b      	ldrb	r3, [r3, #0]
 80137b8:	2b00      	cmp	r3, #0
 80137ba:	d181      	bne.n	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137bc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80137be:	4770      	bx	lr
 80137c0:	684b      	ldr	r3, [r1, #4]
 80137c2:	781b      	ldrb	r3, [r3, #0]
 80137c4:	2b00      	cmp	r3, #0
 80137c6:	f47f af7b 	bne.w	80136c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137ca:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80137cc:	4770      	bx	lr
 80137ce:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80137d0:	4770      	bx	lr
 80137d2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80137d4:	4770      	bx	lr
 80137d6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80137d8:	4770      	bx	lr
 80137da:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80137dc:	4770      	bx	lr
 80137de:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80137e0:	4770      	bx	lr

080137e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80137e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137e6:	b087      	sub	sp, #28
 80137e8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80137ea:	9205      	str	r2, [sp, #20]
 80137ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80137f0:	9202      	str	r2, [sp, #8]
 80137f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80137f6:	9101      	str	r1, [sp, #4]
 80137f8:	6841      	ldr	r1, [r0, #4]
 80137fa:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80137fe:	fb01 2404 	mla	r4, r1, r4, r2
 8013802:	6802      	ldr	r2, [r0, #0]
 8013804:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013808:	f8de 2000 	ldr.w	r2, [lr]
 801380c:	9203      	str	r2, [sp, #12]
 801380e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013812:	3204      	adds	r2, #4
 8013814:	9204      	str	r2, [sp, #16]
 8013816:	9a02      	ldr	r2, [sp, #8]
 8013818:	43d6      	mvns	r6, r2
 801381a:	b2f6      	uxtb	r6, r6
 801381c:	9a01      	ldr	r2, [sp, #4]
 801381e:	2a00      	cmp	r2, #0
 8013820:	dc03      	bgt.n	801382a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013822:	9a05      	ldr	r2, [sp, #20]
 8013824:	2a00      	cmp	r2, #0
 8013826:	f340 8129 	ble.w	8013a7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801382a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801382c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013830:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013834:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013838:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801383a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801383e:	2b00      	cmp	r3, #0
 8013840:	dd0e      	ble.n	8013860 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013842:	1408      	asrs	r0, r1, #16
 8013844:	d405      	bmi.n	8013852 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013846:	4560      	cmp	r0, ip
 8013848:	da03      	bge.n	8013852 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801384a:	1410      	asrs	r0, r2, #16
 801384c:	d401      	bmi.n	8013852 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801384e:	42b8      	cmp	r0, r7
 8013850:	db07      	blt.n	8013862 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013852:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013854:	4401      	add	r1, r0
 8013856:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013858:	3b01      	subs	r3, #1
 801385a:	4402      	add	r2, r0
 801385c:	3402      	adds	r4, #2
 801385e:	e7ee      	b.n	801383e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013860:	d071      	beq.n	8013946 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013862:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013864:	1e58      	subs	r0, r3, #1
 8013866:	fb05 1500 	mla	r5, r5, r0, r1
 801386a:	142d      	asrs	r5, r5, #16
 801386c:	d45f      	bmi.n	801392e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801386e:	4565      	cmp	r5, ip
 8013870:	da5d      	bge.n	801392e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013872:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013874:	fb05 2000 	mla	r0, r5, r0, r2
 8013878:	1400      	asrs	r0, r0, #16
 801387a:	d458      	bmi.n	801392e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801387c:	42b8      	cmp	r0, r7
 801387e:	da56      	bge.n	801392e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013880:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8013884:	4699      	mov	r9, r3
 8013886:	46a2      	mov	sl, r4
 8013888:	f1b9 0f00 	cmp.w	r9, #0
 801388c:	dd57      	ble.n	801393e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801388e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013892:	9803      	ldr	r0, [sp, #12]
 8013894:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8013898:	140d      	asrs	r5, r1, #16
 801389a:	fb07 000c 	mla	r0, r7, ip, r0
 801389e:	f109 39ff 	add.w	r9, r9, #4294967295
 80138a2:	5d40      	ldrb	r0, [r0, r5]
 80138a4:	9d04      	ldr	r5, [sp, #16]
 80138a6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80138aa:	f8ba 5000 	ldrh.w	r5, [sl]
 80138ae:	122f      	asrs	r7, r5, #8
 80138b0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80138b4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80138b8:	fb17 f706 	smulbb	r7, r7, r6
 80138bc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80138c0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80138c4:	00ed      	lsls	r5, r5, #3
 80138c6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80138ca:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80138ce:	10c7      	asrs	r7, r0, #3
 80138d0:	b2ed      	uxtb	r5, r5
 80138d2:	00c0      	lsls	r0, r0, #3
 80138d4:	fb18 f806 	smulbb	r8, r8, r6
 80138d8:	fb15 f506 	smulbb	r5, r5, r6
 80138dc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80138e0:	b2c0      	uxtb	r0, r0
 80138e2:	fa1f fc8c 	uxth.w	ip, ip
 80138e6:	fb07 870b 	mla	r7, r7, fp, r8
 80138ea:	fb00 500b 	mla	r0, r0, fp, r5
 80138ee:	b280      	uxth	r0, r0
 80138f0:	b2bf      	uxth	r7, r7
 80138f2:	f10c 0501 	add.w	r5, ip, #1
 80138f6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80138fa:	f107 0801 	add.w	r8, r7, #1
 80138fe:	1c45      	adds	r5, r0, #1
 8013900:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013904:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013908:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801390a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801390e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013912:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013916:	ea45 0c0c 	orr.w	ip, r5, ip
 801391a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801391e:	4401      	add	r1, r0
 8013920:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013922:	ea4c 0c08 	orr.w	ip, ip, r8
 8013926:	f82a cb02 	strh.w	ip, [sl], #2
 801392a:	4402      	add	r2, r0
 801392c:	e7ac      	b.n	8013888 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801392e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8013932:	f04f 0800 	mov.w	r8, #0
 8013936:	eb03 0008 	add.w	r0, r3, r8
 801393a:	2800      	cmp	r0, #0
 801393c:	dc41      	bgt.n	80139c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801393e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013942:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013946:	9b01      	ldr	r3, [sp, #4]
 8013948:	2b00      	cmp	r3, #0
 801394a:	f340 8097 	ble.w	8013a7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801394e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013952:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013956:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801395a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801395c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013960:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013964:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013968:	eef0 6a62 	vmov.f32	s13, s5
 801396c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013970:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013974:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013978:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801397c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013980:	eef0 6a43 	vmov.f32	s13, s6
 8013984:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013988:	ee12 2a90 	vmov	r2, s5
 801398c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013990:	fb92 f3f3 	sdiv	r3, r2, r3
 8013994:	ee13 2a10 	vmov	r2, s6
 8013998:	9313      	str	r3, [sp, #76]	; 0x4c
 801399a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801399c:	fb92 f3f3 	sdiv	r3, r2, r3
 80139a0:	9314      	str	r3, [sp, #80]	; 0x50
 80139a2:	9b01      	ldr	r3, [sp, #4]
 80139a4:	9a05      	ldr	r2, [sp, #20]
 80139a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80139aa:	3b01      	subs	r3, #1
 80139ac:	9301      	str	r3, [sp, #4]
 80139ae:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80139b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139b4:	eeb0 3a67 	vmov.f32	s6, s15
 80139b8:	bf08      	it	eq
 80139ba:	4613      	moveq	r3, r2
 80139bc:	eef0 2a47 	vmov.f32	s5, s14
 80139c0:	e72c      	b.n	801381c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80139c2:	140f      	asrs	r7, r1, #16
 80139c4:	d453      	bmi.n	8013a6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80139c6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80139ca:	42bd      	cmp	r5, r7
 80139cc:	dd4f      	ble.n	8013a6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80139ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80139d2:	d44c      	bmi.n	8013a6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80139d4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80139d8:	4560      	cmp	r0, ip
 80139da:	dd48      	ble.n	8013a6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80139dc:	9803      	ldr	r0, [sp, #12]
 80139de:	b22d      	sxth	r5, r5
 80139e0:	fb0c 0505 	mla	r5, ip, r5, r0
 80139e4:	5de8      	ldrb	r0, [r5, r7]
 80139e6:	9d04      	ldr	r5, [sp, #16]
 80139e8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80139ec:	f06f 0501 	mvn.w	r5, #1
 80139f0:	fb05 fb08 	mul.w	fp, r5, r8
 80139f4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80139f8:	f834 500b 	ldrh.w	r5, [r4, fp]
 80139fc:	122f      	asrs	r7, r5, #8
 80139fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013a02:	fb17 f706 	smulbb	r7, r7, r6
 8013a06:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013a0a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013a0e:	00ed      	lsls	r5, r5, #3
 8013a10:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013a14:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013a18:	10c7      	asrs	r7, r0, #3
 8013a1a:	b2ed      	uxtb	r5, r5
 8013a1c:	00c0      	lsls	r0, r0, #3
 8013a1e:	fb19 f906 	smulbb	r9, r9, r6
 8013a22:	fb15 f506 	smulbb	r5, r5, r6
 8013a26:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013a2a:	b2c0      	uxtb	r0, r0
 8013a2c:	fa1f fc8c 	uxth.w	ip, ip
 8013a30:	fb07 970a 	mla	r7, r7, sl, r9
 8013a34:	fb00 500a 	mla	r0, r0, sl, r5
 8013a38:	b2bf      	uxth	r7, r7
 8013a3a:	b280      	uxth	r0, r0
 8013a3c:	f10c 0501 	add.w	r5, ip, #1
 8013a40:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013a44:	f107 0901 	add.w	r9, r7, #1
 8013a48:	1c45      	adds	r5, r0, #1
 8013a4a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013a4e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013a52:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013a56:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013a5a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013a5e:	ea45 0c0c 	orr.w	ip, r5, ip
 8013a62:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013a66:	ea4c 0c09 	orr.w	ip, ip, r9
 8013a6a:	f824 c00b 	strh.w	ip, [r4, fp]
 8013a6e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013a70:	4401      	add	r1, r0
 8013a72:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013a74:	f108 38ff 	add.w	r8, r8, #4294967295
 8013a78:	4402      	add	r2, r0
 8013a7a:	e75c      	b.n	8013936 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013a7c:	b007      	add	sp, #28
 8013a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013a82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013a82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a86:	b085      	sub	sp, #20
 8013a88:	4693      	mov	fp, r2
 8013a8a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013a8c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013a8e:	6870      	ldr	r0, [r6, #4]
 8013a90:	9100      	str	r1, [sp, #0]
 8013a92:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013a96:	fb00 2404 	mla	r4, r0, r4, r2
 8013a9a:	6832      	ldr	r2, [r6, #0]
 8013a9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013aa0:	682a      	ldr	r2, [r5, #0]
 8013aa2:	9201      	str	r2, [sp, #4]
 8013aa4:	686a      	ldr	r2, [r5, #4]
 8013aa6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8013aaa:	3204      	adds	r2, #4
 8013aac:	9202      	str	r2, [sp, #8]
 8013aae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013ab2:	9a00      	ldr	r2, [sp, #0]
 8013ab4:	2a00      	cmp	r2, #0
 8013ab6:	dc03      	bgt.n	8013ac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013ab8:	f1bb 0f00 	cmp.w	fp, #0
 8013abc:	f340 80a0 	ble.w	8013c00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013ac0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013ac2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013ac6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013aca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013ace:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013ad0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013ad4:	2b00      	cmp	r3, #0
 8013ad6:	dd0c      	ble.n	8013af2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013ad8:	1406      	asrs	r6, r0, #16
 8013ada:	d405      	bmi.n	8013ae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013adc:	454e      	cmp	r6, r9
 8013ade:	da03      	bge.n	8013ae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013ae0:	1416      	asrs	r6, r2, #16
 8013ae2:	d401      	bmi.n	8013ae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013ae4:	4546      	cmp	r6, r8
 8013ae6:	db05      	blt.n	8013af4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013ae8:	4470      	add	r0, lr
 8013aea:	4462      	add	r2, ip
 8013aec:	3b01      	subs	r3, #1
 8013aee:	3402      	adds	r4, #2
 8013af0:	e7f0      	b.n	8013ad4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013af2:	d00f      	beq.n	8013b14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013af4:	1e5e      	subs	r6, r3, #1
 8013af6:	fb0e 0706 	mla	r7, lr, r6, r0
 8013afa:	143f      	asrs	r7, r7, #16
 8013afc:	d541      	bpl.n	8013b82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013afe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013b02:	4698      	mov	r8, r3
 8013b04:	9603      	str	r6, [sp, #12]
 8013b06:	f1b8 0f00 	cmp.w	r8, #0
 8013b0a:	dc59      	bgt.n	8013bc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013b0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013b10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b14:	9b00      	ldr	r3, [sp, #0]
 8013b16:	2b00      	cmp	r3, #0
 8013b18:	dd72      	ble.n	8013c00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013b1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013b1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013b22:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013b26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013b28:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013b2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013b30:	eeb0 6a62 	vmov.f32	s12, s5
 8013b34:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013b38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013b40:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013b44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013b48:	eeb0 6a43 	vmov.f32	s12, s6
 8013b4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013b50:	ee12 2a90 	vmov	r2, s5
 8013b54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013b58:	fb92 fef3 	sdiv	lr, r2, r3
 8013b5c:	ee13 2a10 	vmov	r2, s6
 8013b60:	fb92 fcf3 	sdiv	ip, r2, r3
 8013b64:	9b00      	ldr	r3, [sp, #0]
 8013b66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b6a:	3b01      	subs	r3, #1
 8013b6c:	9300      	str	r3, [sp, #0]
 8013b6e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013b72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013b74:	eeb0 3a67 	vmov.f32	s6, s15
 8013b78:	bf08      	it	eq
 8013b7a:	465b      	moveq	r3, fp
 8013b7c:	eef0 2a47 	vmov.f32	s5, s14
 8013b80:	e797      	b.n	8013ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8013b82:	454f      	cmp	r7, r9
 8013b84:	dabb      	bge.n	8013afe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013b86:	fb0c 2606 	mla	r6, ip, r6, r2
 8013b8a:	1436      	asrs	r6, r6, #16
 8013b8c:	d4b7      	bmi.n	8013afe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013b8e:	4546      	cmp	r6, r8
 8013b90:	dab5      	bge.n	8013afe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013b92:	461e      	mov	r6, r3
 8013b94:	46a0      	mov	r8, r4
 8013b96:	2e00      	cmp	r6, #0
 8013b98:	ddb8      	ble.n	8013b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013b9a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013b9e:	9901      	ldr	r1, [sp, #4]
 8013ba0:	1417      	asrs	r7, r2, #16
 8013ba2:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013ba6:	fb0a 1707 	mla	r7, sl, r7, r1
 8013baa:	9902      	ldr	r1, [sp, #8]
 8013bac:	f817 7009 	ldrb.w	r7, [r7, r9]
 8013bb0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013bb4:	f828 7b02 	strh.w	r7, [r8], #2
 8013bb8:	4470      	add	r0, lr
 8013bba:	4462      	add	r2, ip
 8013bbc:	3e01      	subs	r6, #1
 8013bbe:	e7ea      	b.n	8013b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013bc0:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013bc4:	d417      	bmi.n	8013bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013bc6:	68ae      	ldr	r6, [r5, #8]
 8013bc8:	454e      	cmp	r6, r9
 8013bca:	dd14      	ble.n	8013bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013bcc:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013bd0:	d411      	bmi.n	8013bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013bd2:	68ef      	ldr	r7, [r5, #12]
 8013bd4:	4557      	cmp	r7, sl
 8013bd6:	dd0e      	ble.n	8013bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013bd8:	9f01      	ldr	r7, [sp, #4]
 8013bda:	b236      	sxth	r6, r6
 8013bdc:	fb0a 7606 	mla	r6, sl, r6, r7
 8013be0:	9f02      	ldr	r7, [sp, #8]
 8013be2:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013be6:	f06f 0101 	mvn.w	r1, #1
 8013bea:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013bee:	fb01 f608 	mul.w	r6, r1, r8
 8013bf2:	9903      	ldr	r1, [sp, #12]
 8013bf4:	538f      	strh	r7, [r1, r6]
 8013bf6:	4470      	add	r0, lr
 8013bf8:	4462      	add	r2, ip
 8013bfa:	f108 38ff 	add.w	r8, r8, #4294967295
 8013bfe:	e782      	b.n	8013b06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013c00:	b005      	add	sp, #20
 8013c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013c06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c0a:	b087      	sub	sp, #28
 8013c0c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013c0e:	9205      	str	r2, [sp, #20]
 8013c10:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013c14:	9203      	str	r2, [sp, #12]
 8013c16:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8013c1a:	9102      	str	r1, [sp, #8]
 8013c1c:	6861      	ldr	r1, [r4, #4]
 8013c1e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8013c22:	fb01 2000 	mla	r0, r1, r0, r2
 8013c26:	6822      	ldr	r2, [r4, #0]
 8013c28:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013c2c:	9200      	str	r2, [sp, #0]
 8013c2e:	f8dc 2000 	ldr.w	r2, [ip]
 8013c32:	9204      	str	r2, [sp, #16]
 8013c34:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013c38:	3204      	adds	r2, #4
 8013c3a:	9201      	str	r2, [sp, #4]
 8013c3c:	9a03      	ldr	r2, [sp, #12]
 8013c3e:	43d5      	mvns	r5, r2
 8013c40:	b2ed      	uxtb	r5, r5
 8013c42:	9a02      	ldr	r2, [sp, #8]
 8013c44:	2a00      	cmp	r2, #0
 8013c46:	dc03      	bgt.n	8013c50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013c48:	9a05      	ldr	r2, [sp, #20]
 8013c4a:	2a00      	cmp	r2, #0
 8013c4c:	f340 812c 	ble.w	8013ea8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013c50:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013c52:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8013c56:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013c5a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013c5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013c60:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013c64:	2b00      	cmp	r3, #0
 8013c66:	dd10      	ble.n	8013c8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013c68:	140c      	asrs	r4, r1, #16
 8013c6a:	d405      	bmi.n	8013c78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013c6c:	4574      	cmp	r4, lr
 8013c6e:	da03      	bge.n	8013c78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013c70:	1414      	asrs	r4, r2, #16
 8013c72:	d401      	bmi.n	8013c78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013c74:	42bc      	cmp	r4, r7
 8013c76:	db09      	blt.n	8013c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013c78:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013c7a:	9800      	ldr	r0, [sp, #0]
 8013c7c:	4421      	add	r1, r4
 8013c7e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8013c80:	3002      	adds	r0, #2
 8013c82:	4422      	add	r2, r4
 8013c84:	3b01      	subs	r3, #1
 8013c86:	9000      	str	r0, [sp, #0]
 8013c88:	e7ec      	b.n	8013c64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013c8a:	d071      	beq.n	8013d70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013c8c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013c8e:	1e5c      	subs	r4, r3, #1
 8013c90:	fb06 1604 	mla	r6, r6, r4, r1
 8013c94:	1436      	asrs	r6, r6, #16
 8013c96:	d45d      	bmi.n	8013d54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013c98:	4576      	cmp	r6, lr
 8013c9a:	da5b      	bge.n	8013d54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013c9c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8013c9e:	fb06 2404 	mla	r4, r6, r4, r2
 8013ca2:	1424      	asrs	r4, r4, #16
 8013ca4:	d456      	bmi.n	8013d54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013ca6:	42bc      	cmp	r4, r7
 8013ca8:	da54      	bge.n	8013d54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013caa:	f8dd 9000 	ldr.w	r9, [sp]
 8013cae:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013cb2:	4698      	mov	r8, r3
 8013cb4:	f1b8 0f00 	cmp.w	r8, #0
 8013cb8:	dd54      	ble.n	8013d64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013cba:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013cbe:	9804      	ldr	r0, [sp, #16]
 8013cc0:	1414      	asrs	r4, r2, #16
 8013cc2:	fb07 0404 	mla	r4, r7, r4, r0
 8013cc6:	140e      	asrs	r6, r1, #16
 8013cc8:	9801      	ldr	r0, [sp, #4]
 8013cca:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013cce:	f8b9 4000 	ldrh.w	r4, [r9]
 8013cd2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013cd6:	eb00 0b0e 	add.w	fp, r0, lr
 8013cda:	1227      	asrs	r7, r4, #8
 8013cdc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013ce0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013ce4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013ce8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013cea:	fb16 f60a 	smulbb	r6, r6, sl
 8013cee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013cf2:	fb07 6705 	mla	r7, r7, r5, r6
 8013cf6:	10e6      	asrs	r6, r4, #3
 8013cf8:	00e4      	lsls	r4, r4, #3
 8013cfa:	b2e4      	uxtb	r4, r4
 8013cfc:	fb1b fb0a 	smulbb	fp, fp, sl
 8013d00:	fb14 f405 	smulbb	r4, r4, r5
 8013d04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013d08:	b2bf      	uxth	r7, r7
 8013d0a:	fb06 b605 	mla	r6, r6, r5, fp
 8013d0e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013d12:	b2b6      	uxth	r6, r6
 8013d14:	fa1f fe8e 	uxth.w	lr, lr
 8013d18:	1c7c      	adds	r4, r7, #1
 8013d1a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013d1e:	f106 0b01 	add.w	fp, r6, #1
 8013d22:	f10e 0401 	add.w	r4, lr, #1
 8013d26:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8013d2a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013d2e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013d32:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013d36:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013d3a:	4327      	orrs	r7, r4
 8013d3c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013d40:	4401      	add	r1, r0
 8013d42:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013d44:	ea47 070b 	orr.w	r7, r7, fp
 8013d48:	f829 7b02 	strh.w	r7, [r9], #2
 8013d4c:	4402      	add	r2, r0
 8013d4e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013d52:	e7af      	b.n	8013cb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013d54:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8013d58:	f04f 0e00 	mov.w	lr, #0
 8013d5c:	eb03 040e 	add.w	r4, r3, lr
 8013d60:	2c00      	cmp	r4, #0
 8013d62:	dc43      	bgt.n	8013dec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013d64:	9a00      	ldr	r2, [sp, #0]
 8013d66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013d6a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013d6e:	9300      	str	r3, [sp, #0]
 8013d70:	9b02      	ldr	r3, [sp, #8]
 8013d72:	2b00      	cmp	r3, #0
 8013d74:	f340 8098 	ble.w	8013ea8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013d78:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013d7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013d80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013d84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013d8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013d8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013d92:	eef0 6a62 	vmov.f32	s13, s5
 8013d96:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013d9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013d9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013da2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8013da6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013daa:	eef0 6a43 	vmov.f32	s13, s6
 8013dae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013db2:	ee12 2a90 	vmov	r2, s5
 8013db6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013dba:	fb92 f3f3 	sdiv	r3, r2, r3
 8013dbe:	ee13 2a10 	vmov	r2, s6
 8013dc2:	9313      	str	r3, [sp, #76]	; 0x4c
 8013dc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013dc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8013dca:	9314      	str	r3, [sp, #80]	; 0x50
 8013dcc:	9b02      	ldr	r3, [sp, #8]
 8013dce:	9a05      	ldr	r2, [sp, #20]
 8013dd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013dd4:	3b01      	subs	r3, #1
 8013dd6:	9302      	str	r3, [sp, #8]
 8013dd8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8013ddc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013dde:	eeb0 3a67 	vmov.f32	s6, s15
 8013de2:	bf08      	it	eq
 8013de4:	4613      	moveq	r3, r2
 8013de6:	eef0 2a47 	vmov.f32	s5, s14
 8013dea:	e72a      	b.n	8013c42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013dec:	140f      	asrs	r7, r1, #16
 8013dee:	d454      	bmi.n	8013e9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013df0:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013df4:	42be      	cmp	r6, r7
 8013df6:	dd50      	ble.n	8013e9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013df8:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013dfc:	d44d      	bmi.n	8013e9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013dfe:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013e02:	4544      	cmp	r4, r8
 8013e04:	dd49      	ble.n	8013e9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013e06:	9c04      	ldr	r4, [sp, #16]
 8013e08:	b236      	sxth	r6, r6
 8013e0a:	fb08 4606 	mla	r6, r8, r6, r4
 8013e0e:	f06f 0001 	mvn.w	r0, #1
 8013e12:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013e16:	9c01      	ldr	r4, [sp, #4]
 8013e18:	fb00 fa0e 	mul.w	sl, r0, lr
 8013e1c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013e20:	9800      	ldr	r0, [sp, #0]
 8013e22:	eb04 0b08 	add.w	fp, r4, r8
 8013e26:	f830 400a 	ldrh.w	r4, [r0, sl]
 8013e2a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013e2e:	9801      	ldr	r0, [sp, #4]
 8013e30:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013e34:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013e38:	9800      	ldr	r0, [sp, #0]
 8013e3a:	1227      	asrs	r7, r4, #8
 8013e3c:	fb16 f609 	smulbb	r6, r6, r9
 8013e40:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013e44:	fb07 6705 	mla	r7, r7, r5, r6
 8013e48:	10e6      	asrs	r6, r4, #3
 8013e4a:	00e4      	lsls	r4, r4, #3
 8013e4c:	b2e4      	uxtb	r4, r4
 8013e4e:	fb1b fb09 	smulbb	fp, fp, r9
 8013e52:	fb14 f405 	smulbb	r4, r4, r5
 8013e56:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013e5a:	b2bf      	uxth	r7, r7
 8013e5c:	fb06 b605 	mla	r6, r6, r5, fp
 8013e60:	fb08 4809 	mla	r8, r8, r9, r4
 8013e64:	b2b6      	uxth	r6, r6
 8013e66:	fa1f f888 	uxth.w	r8, r8
 8013e6a:	1c7c      	adds	r4, r7, #1
 8013e6c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013e70:	f106 0b01 	add.w	fp, r6, #1
 8013e74:	f108 0401 	add.w	r4, r8, #1
 8013e78:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013e7c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013e80:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013e84:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013e88:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013e8c:	4327      	orrs	r7, r4
 8013e8e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013e92:	ea47 070b 	orr.w	r7, r7, fp
 8013e96:	f820 700a 	strh.w	r7, [r0, sl]
 8013e9a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013e9c:	4401      	add	r1, r0
 8013e9e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013ea0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013ea4:	4402      	add	r2, r0
 8013ea6:	e759      	b.n	8013d5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013ea8:	b007      	add	sp, #28
 8013eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013eb4:	b085      	sub	sp, #20
 8013eb6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013eba:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013ebc:	9203      	str	r2, [sp, #12]
 8013ebe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013ec2:	6870      	ldr	r0, [r6, #4]
 8013ec4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013ec6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8013eca:	686f      	ldr	r7, [r5, #4]
 8013ecc:	9101      	str	r1, [sp, #4]
 8013ece:	fb00 2404 	mla	r4, r0, r4, r2
 8013ed2:	6832      	ldr	r2, [r6, #0]
 8013ed4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ed8:	682a      	ldr	r2, [r5, #0]
 8013eda:	9202      	str	r2, [sp, #8]
 8013edc:	3704      	adds	r7, #4
 8013ede:	9a01      	ldr	r2, [sp, #4]
 8013ee0:	2a00      	cmp	r2, #0
 8013ee2:	dc03      	bgt.n	8013eec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013ee4:	9a03      	ldr	r2, [sp, #12]
 8013ee6:	2a00      	cmp	r2, #0
 8013ee8:	f340 80cc 	ble.w	8014084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013eec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013eee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013ef2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013ef6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013efa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013efc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013f00:	2b00      	cmp	r3, #0
 8013f02:	dd0d      	ble.n	8013f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013f04:	1406      	asrs	r6, r0, #16
 8013f06:	d405      	bmi.n	8013f14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013f08:	454e      	cmp	r6, r9
 8013f0a:	da03      	bge.n	8013f14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013f0c:	1416      	asrs	r6, r2, #16
 8013f0e:	d401      	bmi.n	8013f14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013f10:	4546      	cmp	r6, r8
 8013f12:	db06      	blt.n	8013f22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013f14:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8013f16:	4460      	add	r0, ip
 8013f18:	4432      	add	r2, r6
 8013f1a:	3b01      	subs	r3, #1
 8013f1c:	3402      	adds	r4, #2
 8013f1e:	e7ef      	b.n	8013f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013f20:	d00f      	beq.n	8013f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013f22:	1e5e      	subs	r6, r3, #1
 8013f24:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013f28:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013f2c:	d543      	bpl.n	8013fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013f2e:	4698      	mov	r8, r3
 8013f30:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013f34:	f1b8 0f00 	cmp.w	r8, #0
 8013f38:	dc71      	bgt.n	801401e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8013f3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013f3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013f42:	9b01      	ldr	r3, [sp, #4]
 8013f44:	2b00      	cmp	r3, #0
 8013f46:	f340 809d 	ble.w	8014084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013f4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013f4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013f52:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013f56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f58:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013f5c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013f60:	eeb0 6a62 	vmov.f32	s12, s5
 8013f64:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013f68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013f6c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013f70:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013f74:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013f78:	eeb0 6a43 	vmov.f32	s12, s6
 8013f7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013f80:	ee12 2a90 	vmov	r2, s5
 8013f84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013f88:	fb92 fcf3 	sdiv	ip, r2, r3
 8013f8c:	ee13 2a10 	vmov	r2, s6
 8013f90:	fb92 f3f3 	sdiv	r3, r2, r3
 8013f94:	9312      	str	r3, [sp, #72]	; 0x48
 8013f96:	9b01      	ldr	r3, [sp, #4]
 8013f98:	9a03      	ldr	r2, [sp, #12]
 8013f9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013f9e:	3b01      	subs	r3, #1
 8013fa0:	9301      	str	r3, [sp, #4]
 8013fa2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013fa6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fa8:	eeb0 3a67 	vmov.f32	s6, s15
 8013fac:	bf08      	it	eq
 8013fae:	4613      	moveq	r3, r2
 8013fb0:	eef0 2a47 	vmov.f32	s5, s14
 8013fb4:	e793      	b.n	8013ede <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013fb6:	45ce      	cmp	lr, r9
 8013fb8:	dab9      	bge.n	8013f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013fba:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013fbc:	fb01 2606 	mla	r6, r1, r6, r2
 8013fc0:	1436      	asrs	r6, r6, #16
 8013fc2:	d4b4      	bmi.n	8013f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013fc4:	4546      	cmp	r6, r8
 8013fc6:	dab2      	bge.n	8013f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013fc8:	4698      	mov	r8, r3
 8013fca:	46a2      	mov	sl, r4
 8013fcc:	f1b8 0f00 	cmp.w	r8, #0
 8013fd0:	ddb3      	ble.n	8013f3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013fd2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013fd6:	9902      	ldr	r1, [sp, #8]
 8013fd8:	1416      	asrs	r6, r2, #16
 8013fda:	fb09 1606 	mla	r6, r9, r6, r1
 8013fde:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013fe2:	492a      	ldr	r1, [pc, #168]	; (801408c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013fe4:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8013fe8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013fec:	eb07 0b0e 	add.w	fp, r7, lr
 8013ff0:	4460      	add	r0, ip
 8013ff2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8013ff6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8013ffa:	00f6      	lsls	r6, r6, #3
 8013ffc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014000:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014004:	ea49 0606 	orr.w	r6, r9, r6
 8014008:	f817 900e 	ldrb.w	r9, [r7, lr]
 801400c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801400e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014012:	f82a 6b02 	strh.w	r6, [sl], #2
 8014016:	440a      	add	r2, r1
 8014018:	f108 38ff 	add.w	r8, r8, #4294967295
 801401c:	e7d6      	b.n	8013fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801401e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014022:	d429      	bmi.n	8014078 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014024:	68ae      	ldr	r6, [r5, #8]
 8014026:	454e      	cmp	r6, r9
 8014028:	dd26      	ble.n	8014078 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801402a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801402e:	d423      	bmi.n	8014078 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014030:	68e9      	ldr	r1, [r5, #12]
 8014032:	4559      	cmp	r1, fp
 8014034:	dd20      	ble.n	8014078 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014036:	9902      	ldr	r1, [sp, #8]
 8014038:	fa0f fe86 	sxth.w	lr, r6
 801403c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014040:	f06f 0101 	mvn.w	r1, #1
 8014044:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014048:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801404c:	eb07 060e 	add.w	r6, r7, lr
 8014050:	fb01 f908 	mul.w	r9, r1, r8
 8014054:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014058:	7876      	ldrb	r6, [r6, #1]
 801405a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801405e:	00f6      	lsls	r6, r6, #3
 8014060:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014064:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014068:	ea4b 0606 	orr.w	r6, fp, r6
 801406c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014070:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014074:	f82a 6009 	strh.w	r6, [sl, r9]
 8014078:	9912      	ldr	r1, [sp, #72]	; 0x48
 801407a:	4460      	add	r0, ip
 801407c:	440a      	add	r2, r1
 801407e:	f108 38ff 	add.w	r8, r8, #4294967295
 8014082:	e757      	b.n	8013f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014084:	b005      	add	sp, #20
 8014086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801408a:	bf00      	nop
 801408c:	fffff800 	.word	0xfffff800

08014090 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014094:	b087      	sub	sp, #28
 8014096:	468b      	mov	fp, r1
 8014098:	9815      	ldr	r0, [sp, #84]	; 0x54
 801409a:	9204      	str	r2, [sp, #16]
 801409c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80140a0:	9205      	str	r2, [sp, #20]
 80140a2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80140a6:	6841      	ldr	r1, [r0, #4]
 80140a8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80140ac:	fb01 2404 	mla	r4, r1, r4, r2
 80140b0:	6802      	ldr	r2, [r0, #0]
 80140b2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80140b6:	f8dc 2000 	ldr.w	r2, [ip]
 80140ba:	9201      	str	r2, [sp, #4]
 80140bc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80140c0:	3204      	adds	r2, #4
 80140c2:	9202      	str	r2, [sp, #8]
 80140c4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80140c8:	f1bb 0f00 	cmp.w	fp, #0
 80140cc:	dc03      	bgt.n	80140d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80140ce:	9a04      	ldr	r2, [sp, #16]
 80140d0:	2a00      	cmp	r2, #0
 80140d2:	f340 8138 	ble.w	8014346 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80140d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80140d8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80140dc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80140e0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80140e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80140e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80140ea:	2b00      	cmp	r3, #0
 80140ec:	dd0e      	ble.n	801410c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80140ee:	1402      	asrs	r2, r0, #16
 80140f0:	d405      	bmi.n	80140fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80140f2:	42ba      	cmp	r2, r7
 80140f4:	da03      	bge.n	80140fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80140f6:	140a      	asrs	r2, r1, #16
 80140f8:	d401      	bmi.n	80140fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80140fa:	42b2      	cmp	r2, r6
 80140fc:	db07      	blt.n	801410e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80140fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014100:	4410      	add	r0, r2
 8014102:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014104:	3b01      	subs	r3, #1
 8014106:	4411      	add	r1, r2
 8014108:	3402      	adds	r4, #2
 801410a:	e7ee      	b.n	80140ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801410c:	d019      	beq.n	8014142 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801410e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014110:	1e5a      	subs	r2, r3, #1
 8014112:	fb05 0502 	mla	r5, r5, r2, r0
 8014116:	142d      	asrs	r5, r5, #16
 8014118:	d409      	bmi.n	801412e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801411a:	42bd      	cmp	r5, r7
 801411c:	da07      	bge.n	801412e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801411e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014120:	fb05 1202 	mla	r2, r5, r2, r1
 8014124:	1412      	asrs	r2, r2, #16
 8014126:	d402      	bmi.n	801412e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014128:	42b2      	cmp	r2, r6
 801412a:	f2c0 80ac 	blt.w	8014286 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801412e:	f04f 0e00 	mov.w	lr, #0
 8014132:	eb03 020e 	add.w	r2, r3, lr
 8014136:	2a00      	cmp	r2, #0
 8014138:	dc3e      	bgt.n	80141b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801413a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801413e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014142:	f1bb 0f00 	cmp.w	fp, #0
 8014146:	f340 80fe 	ble.w	8014346 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801414a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801414e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014152:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014156:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014158:	f1bb 0b01 	subs.w	fp, fp, #1
 801415c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014160:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014164:	eeb0 6a62 	vmov.f32	s12, s5
 8014168:	ee61 7a27 	vmul.f32	s15, s2, s15
 801416c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014170:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014174:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014178:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801417c:	eeb0 6a43 	vmov.f32	s12, s6
 8014180:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014184:	ee12 2a90 	vmov	r2, s5
 8014188:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801418c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014190:	ee13 2a10 	vmov	r2, s6
 8014194:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014198:	9313      	str	r3, [sp, #76]	; 0x4c
 801419a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801419c:	fb92 f3f3 	sdiv	r3, r2, r3
 80141a0:	9a04      	ldr	r2, [sp, #16]
 80141a2:	9314      	str	r3, [sp, #80]	; 0x50
 80141a4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80141a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80141aa:	eeb0 3a67 	vmov.f32	s6, s15
 80141ae:	bf08      	it	eq
 80141b0:	4613      	moveq	r3, r2
 80141b2:	eef0 2a47 	vmov.f32	s5, s14
 80141b6:	e787      	b.n	80140c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80141b8:	1406      	asrs	r6, r0, #16
 80141ba:	d45d      	bmi.n	8014278 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80141bc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80141c0:	42b5      	cmp	r5, r6
 80141c2:	dd59      	ble.n	8014278 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80141c4:	140f      	asrs	r7, r1, #16
 80141c6:	d457      	bmi.n	8014278 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80141c8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80141cc:	42ba      	cmp	r2, r7
 80141ce:	dd53      	ble.n	8014278 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80141d0:	9a01      	ldr	r2, [sp, #4]
 80141d2:	b22d      	sxth	r5, r5
 80141d4:	fb07 2505 	mla	r5, r7, r5, r2
 80141d8:	5daa      	ldrb	r2, [r5, r6]
 80141da:	9d02      	ldr	r5, [sp, #8]
 80141dc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80141e0:	0e2e      	lsrs	r6, r5, #24
 80141e2:	d049      	beq.n	8014278 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80141e4:	f06f 0201 	mvn.w	r2, #1
 80141e8:	fb02 f20e 	mul.w	r2, r2, lr
 80141ec:	9203      	str	r2, [sp, #12]
 80141ee:	f834 8002 	ldrh.w	r8, [r4, r2]
 80141f2:	9a05      	ldr	r2, [sp, #20]
 80141f4:	4356      	muls	r6, r2
 80141f6:	1c72      	adds	r2, r6, #1
 80141f8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80141fc:	1212      	asrs	r2, r2, #8
 80141fe:	fa1f f982 	uxth.w	r9, r2
 8014202:	ea4f 2728 	mov.w	r7, r8, asr #8
 8014206:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801420a:	43d2      	mvns	r2, r2
 801420c:	b2d2      	uxtb	r2, r2
 801420e:	fb16 f609 	smulbb	r6, r6, r9
 8014212:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014216:	fb07 6702 	mla	r7, r7, r2, r6
 801421a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801421e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014222:	b2ed      	uxtb	r5, r5
 8014224:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014228:	fa5f f888 	uxtb.w	r8, r8
 801422c:	fb15 f509 	smulbb	r5, r5, r9
 8014230:	fb08 5502 	mla	r5, r8, r2, r5
 8014234:	b2bf      	uxth	r7, r7
 8014236:	fb1a fa09 	smulbb	sl, sl, r9
 801423a:	b2ad      	uxth	r5, r5
 801423c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014240:	fb06 a602 	mla	r6, r6, r2, sl
 8014244:	1c7a      	adds	r2, r7, #1
 8014246:	f105 0a01 	add.w	sl, r5, #1
 801424a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801424e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014252:	b2b6      	uxth	r6, r6
 8014254:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014258:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801425c:	ea4a 0707 	orr.w	r7, sl, r7
 8014260:	f106 0a01 	add.w	sl, r6, #1
 8014264:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014268:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801426c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014270:	9a03      	ldr	r2, [sp, #12]
 8014272:	ea47 070a 	orr.w	r7, r7, sl
 8014276:	52a7      	strh	r7, [r4, r2]
 8014278:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801427a:	4410      	add	r0, r2
 801427c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801427e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014282:	4411      	add	r1, r2
 8014284:	e755      	b.n	8014132 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014286:	f04f 0800 	mov.w	r8, #0
 801428a:	eba3 0208 	sub.w	r2, r3, r8
 801428e:	2a00      	cmp	r2, #0
 8014290:	f77f af53 	ble.w	801413a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014294:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8014298:	9f01      	ldr	r7, [sp, #4]
 801429a:	140a      	asrs	r2, r1, #16
 801429c:	1405      	asrs	r5, r0, #16
 801429e:	fb06 7202 	mla	r2, r6, r2, r7
 80142a2:	5d52      	ldrb	r2, [r2, r5]
 80142a4:	9d02      	ldr	r5, [sp, #8]
 80142a6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80142aa:	0e2e      	lsrs	r6, r5, #24
 80142ac:	d044      	beq.n	8014338 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80142ae:	9a05      	ldr	r2, [sp, #20]
 80142b0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80142b4:	4356      	muls	r6, r2
 80142b6:	1c72      	adds	r2, r6, #1
 80142b8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80142bc:	1212      	asrs	r2, r2, #8
 80142be:	fa1f f982 	uxth.w	r9, r2
 80142c2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80142c6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80142ca:	43d2      	mvns	r2, r2
 80142cc:	b2d2      	uxtb	r2, r2
 80142ce:	fb16 f609 	smulbb	r6, r6, r9
 80142d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80142d6:	fb07 6702 	mla	r7, r7, r2, r6
 80142da:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80142de:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80142e2:	b2ed      	uxtb	r5, r5
 80142e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80142e8:	fa5f fe8e 	uxtb.w	lr, lr
 80142ec:	fb15 f509 	smulbb	r5, r5, r9
 80142f0:	fb0e 5502 	mla	r5, lr, r2, r5
 80142f4:	b2bf      	uxth	r7, r7
 80142f6:	fb1a fa09 	smulbb	sl, sl, r9
 80142fa:	b2ad      	uxth	r5, r5
 80142fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014300:	fb06 a602 	mla	r6, r6, r2, sl
 8014304:	1c7a      	adds	r2, r7, #1
 8014306:	f105 0a01 	add.w	sl, r5, #1
 801430a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801430e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014312:	b2b6      	uxth	r6, r6
 8014314:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014318:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801431c:	ea4a 0707 	orr.w	r7, sl, r7
 8014320:	f106 0a01 	add.w	sl, r6, #1
 8014324:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014328:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801432c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014330:	ea47 070a 	orr.w	r7, r7, sl
 8014334:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014338:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801433a:	4410      	add	r0, r2
 801433c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801433e:	f108 0801 	add.w	r8, r8, #1
 8014342:	4411      	add	r1, r2
 8014344:	e7a1      	b.n	801428a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8014346:	b007      	add	sp, #28
 8014348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801434c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801434c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014350:	b085      	sub	sp, #20
 8014352:	468b      	mov	fp, r1
 8014354:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014356:	9203      	str	r2, [sp, #12]
 8014358:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801435c:	6841      	ldr	r1, [r0, #4]
 801435e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8014362:	fb01 2404 	mla	r4, r1, r4, r2
 8014366:	6802      	ldr	r2, [r0, #0]
 8014368:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801436c:	f8de 2000 	ldr.w	r2, [lr]
 8014370:	9200      	str	r2, [sp, #0]
 8014372:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014376:	3204      	adds	r2, #4
 8014378:	9201      	str	r2, [sp, #4]
 801437a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801437e:	f1bb 0f00 	cmp.w	fp, #0
 8014382:	dc03      	bgt.n	801438c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014384:	9a03      	ldr	r2, [sp, #12]
 8014386:	2a00      	cmp	r2, #0
 8014388:	f340 8153 	ble.w	8014632 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801438c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801438e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014392:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014396:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801439a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801439c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80143a0:	2b00      	cmp	r3, #0
 80143a2:	dd0e      	ble.n	80143c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80143a4:	1408      	asrs	r0, r1, #16
 80143a6:	d405      	bmi.n	80143b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80143a8:	42b8      	cmp	r0, r7
 80143aa:	da03      	bge.n	80143b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80143ac:	1410      	asrs	r0, r2, #16
 80143ae:	d401      	bmi.n	80143b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80143b0:	42b0      	cmp	r0, r6
 80143b2:	db07      	blt.n	80143c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80143b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80143b6:	4401      	add	r1, r0
 80143b8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80143ba:	3b01      	subs	r3, #1
 80143bc:	4402      	add	r2, r0
 80143be:	3402      	adds	r4, #2
 80143c0:	e7ee      	b.n	80143a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80143c2:	d017      	beq.n	80143f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80143c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80143c6:	1e58      	subs	r0, r3, #1
 80143c8:	fb05 1500 	mla	r5, r5, r0, r1
 80143cc:	142d      	asrs	r5, r5, #16
 80143ce:	d409      	bmi.n	80143e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80143d0:	42bd      	cmp	r5, r7
 80143d2:	da07      	bge.n	80143e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80143d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80143d6:	fb05 2000 	mla	r0, r5, r0, r2
 80143da:	1400      	asrs	r0, r0, #16
 80143dc:	d402      	bmi.n	80143e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80143de:	42b0      	cmp	r0, r6
 80143e0:	f2c0 80bc 	blt.w	801455c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80143e4:	2600      	movs	r6, #0
 80143e6:	1998      	adds	r0, r3, r6
 80143e8:	2800      	cmp	r0, #0
 80143ea:	dc3e      	bgt.n	801446a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80143ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80143f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80143f4:	f1bb 0f00 	cmp.w	fp, #0
 80143f8:	f340 811b 	ble.w	8014632 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80143fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014400:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014404:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014408:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801440a:	f1bb 0b01 	subs.w	fp, fp, #1
 801440e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014412:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014416:	eeb0 6a62 	vmov.f32	s12, s5
 801441a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801441e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014422:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014426:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801442a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801442e:	eeb0 6a43 	vmov.f32	s12, s6
 8014432:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014436:	ee12 2a90 	vmov	r2, s5
 801443a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801443e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014442:	ee13 2a10 	vmov	r2, s6
 8014446:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801444a:	9311      	str	r3, [sp, #68]	; 0x44
 801444c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801444e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014452:	9a03      	ldr	r2, [sp, #12]
 8014454:	9312      	str	r3, [sp, #72]	; 0x48
 8014456:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801445a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801445c:	eeb0 3a67 	vmov.f32	s6, s15
 8014460:	bf08      	it	eq
 8014462:	4613      	moveq	r3, r2
 8014464:	eef0 2a47 	vmov.f32	s5, s14
 8014468:	e789      	b.n	801437e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801446a:	140f      	asrs	r7, r1, #16
 801446c:	d426      	bmi.n	80144bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801446e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014472:	42bd      	cmp	r5, r7
 8014474:	dd22      	ble.n	80144bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014476:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801447a:	d41f      	bmi.n	80144bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801447c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014480:	4560      	cmp	r0, ip
 8014482:	dd1b      	ble.n	80144bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014484:	9800      	ldr	r0, [sp, #0]
 8014486:	b22d      	sxth	r5, r5
 8014488:	fb0c 0505 	mla	r5, ip, r5, r0
 801448c:	5de8      	ldrb	r0, [r5, r7]
 801448e:	9d01      	ldr	r5, [sp, #4]
 8014490:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014494:	0e07      	lsrs	r7, r0, #24
 8014496:	2fff      	cmp	r7, #255	; 0xff
 8014498:	d116      	bne.n	80144c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801449a:	f06f 0501 	mvn.w	r5, #1
 801449e:	fb05 f706 	mul.w	r7, r5, r6
 80144a2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80144a6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80144aa:	0945      	lsrs	r5, r0, #5
 80144ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80144b0:	ea4c 0505 	orr.w	r5, ip, r5
 80144b4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80144b8:	4305      	orrs	r5, r0
 80144ba:	53e5      	strh	r5, [r4, r7]
 80144bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80144be:	4401      	add	r1, r0
 80144c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80144c2:	3e01      	subs	r6, #1
 80144c4:	4402      	add	r2, r0
 80144c6:	e78e      	b.n	80143e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80144c8:	b2fd      	uxtb	r5, r7
 80144ca:	2f00      	cmp	r7, #0
 80144cc:	d0f6      	beq.n	80144bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80144ce:	f06f 0701 	mvn.w	r7, #1
 80144d2:	4377      	muls	r7, r6
 80144d4:	fa1f f985 	uxth.w	r9, r5
 80144d8:	f834 8007 	ldrh.w	r8, [r4, r7]
 80144dc:	9702      	str	r7, [sp, #8]
 80144de:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80144e2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80144e6:	43ed      	mvns	r5, r5
 80144e8:	b2ed      	uxtb	r5, r5
 80144ea:	fb17 f709 	smulbb	r7, r7, r9
 80144ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80144f2:	fb0c 7c05 	mla	ip, ip, r5, r7
 80144f6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80144fa:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80144fe:	b2c0      	uxtb	r0, r0
 8014500:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014504:	fa5f f888 	uxtb.w	r8, r8
 8014508:	fb10 f009 	smulbb	r0, r0, r9
 801450c:	fb08 0005 	mla	r0, r8, r5, r0
 8014510:	b280      	uxth	r0, r0
 8014512:	fa1f fc8c 	uxth.w	ip, ip
 8014516:	fb1a fa09 	smulbb	sl, sl, r9
 801451a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801451e:	fb07 a705 	mla	r7, r7, r5, sl
 8014522:	f100 0a01 	add.w	sl, r0, #1
 8014526:	f10c 0501 	add.w	r5, ip, #1
 801452a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801452e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014532:	b2bf      	uxth	r7, r7
 8014534:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014538:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801453c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014540:	f107 0a01 	add.w	sl, r7, #1
 8014544:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014548:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801454c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014550:	9802      	ldr	r0, [sp, #8]
 8014552:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014556:	f824 c000 	strh.w	ip, [r4, r0]
 801455a:	e7af      	b.n	80144bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801455c:	f04f 0800 	mov.w	r8, #0
 8014560:	eba3 0008 	sub.w	r0, r3, r8
 8014564:	2800      	cmp	r0, #0
 8014566:	f77f af41 	ble.w	80143ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801456a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801456e:	9f00      	ldr	r7, [sp, #0]
 8014570:	1410      	asrs	r0, r2, #16
 8014572:	140d      	asrs	r5, r1, #16
 8014574:	fb06 7000 	mla	r0, r6, r0, r7
 8014578:	5d40      	ldrb	r0, [r0, r5]
 801457a:	9d01      	ldr	r5, [sp, #4]
 801457c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014580:	0e2e      	lsrs	r6, r5, #24
 8014582:	2eff      	cmp	r6, #255	; 0xff
 8014584:	d112      	bne.n	80145ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8014586:	482c      	ldr	r0, [pc, #176]	; (8014638 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014588:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801458c:	0968      	lsrs	r0, r5, #5
 801458e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014592:	4330      	orrs	r0, r6
 8014594:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014598:	4328      	orrs	r0, r5
 801459a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801459e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80145a0:	4401      	add	r1, r0
 80145a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80145a4:	f108 0801 	add.w	r8, r8, #1
 80145a8:	4402      	add	r2, r0
 80145aa:	e7d9      	b.n	8014560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80145ac:	b2f0      	uxtb	r0, r6
 80145ae:	2e00      	cmp	r6, #0
 80145b0:	d0f5      	beq.n	801459e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80145b2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80145b6:	fa1f f980 	uxth.w	r9, r0
 80145ba:	ea4f 272c 	mov.w	r7, ip, asr #8
 80145be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80145c2:	43c0      	mvns	r0, r0
 80145c4:	b2c0      	uxtb	r0, r0
 80145c6:	fb16 f609 	smulbb	r6, r6, r9
 80145ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80145ce:	fb07 6700 	mla	r7, r7, r0, r6
 80145d2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80145d6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80145da:	b2ed      	uxtb	r5, r5
 80145dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80145e0:	fa5f fc8c 	uxtb.w	ip, ip
 80145e4:	fb15 f509 	smulbb	r5, r5, r9
 80145e8:	fb0c 5500 	mla	r5, ip, r0, r5
 80145ec:	b2bf      	uxth	r7, r7
 80145ee:	fb1a fa09 	smulbb	sl, sl, r9
 80145f2:	b2ad      	uxth	r5, r5
 80145f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80145f8:	fb06 a600 	mla	r6, r6, r0, sl
 80145fc:	1c78      	adds	r0, r7, #1
 80145fe:	f105 0a01 	add.w	sl, r5, #1
 8014602:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014606:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801460a:	b2b6      	uxth	r6, r6
 801460c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014610:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014614:	ea4a 0707 	orr.w	r7, sl, r7
 8014618:	f106 0a01 	add.w	sl, r6, #1
 801461c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014620:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014624:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014628:	ea47 070a 	orr.w	r7, r7, sl
 801462c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014630:	e7b5      	b.n	801459e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014632:	b005      	add	sp, #20
 8014634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014638:	fffff800 	.word	0xfffff800

0801463c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801463c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014640:	b087      	sub	sp, #28
 8014642:	468b      	mov	fp, r1
 8014644:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014646:	9204      	str	r2, [sp, #16]
 8014648:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801464c:	9205      	str	r2, [sp, #20]
 801464e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014652:	6861      	ldr	r1, [r4, #4]
 8014654:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014658:	fb01 2000 	mla	r0, r1, r0, r2
 801465c:	6822      	ldr	r2, [r4, #0]
 801465e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014662:	f8de 2000 	ldr.w	r2, [lr]
 8014666:	9201      	str	r2, [sp, #4]
 8014668:	f8de 2004 	ldr.w	r2, [lr, #4]
 801466c:	9202      	str	r2, [sp, #8]
 801466e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014672:	f1bb 0f00 	cmp.w	fp, #0
 8014676:	dc03      	bgt.n	8014680 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8014678:	9a04      	ldr	r2, [sp, #16]
 801467a:	2a00      	cmp	r2, #0
 801467c:	f340 8142 	ble.w	8014904 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014680:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014682:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014686:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801468a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801468e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014690:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014694:	2b00      	cmp	r3, #0
 8014696:	dd0e      	ble.n	80146b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014698:	140c      	asrs	r4, r1, #16
 801469a:	d405      	bmi.n	80146a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801469c:	42bc      	cmp	r4, r7
 801469e:	da03      	bge.n	80146a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80146a0:	1414      	asrs	r4, r2, #16
 80146a2:	d401      	bmi.n	80146a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80146a4:	42b4      	cmp	r4, r6
 80146a6:	db07      	blt.n	80146b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80146a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80146aa:	4421      	add	r1, r4
 80146ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80146ae:	3b01      	subs	r3, #1
 80146b0:	4422      	add	r2, r4
 80146b2:	3002      	adds	r0, #2
 80146b4:	e7ee      	b.n	8014694 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80146b6:	d019      	beq.n	80146ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80146b8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80146ba:	1e5c      	subs	r4, r3, #1
 80146bc:	fb05 1504 	mla	r5, r5, r4, r1
 80146c0:	142d      	asrs	r5, r5, #16
 80146c2:	d409      	bmi.n	80146d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80146c4:	42bd      	cmp	r5, r7
 80146c6:	da07      	bge.n	80146d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80146c8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80146ca:	fb05 2404 	mla	r4, r5, r4, r2
 80146ce:	1424      	asrs	r4, r4, #16
 80146d0:	d402      	bmi.n	80146d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80146d2:	42b4      	cmp	r4, r6
 80146d4:	f2c0 80b1 	blt.w	801483a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80146d8:	f04f 0800 	mov.w	r8, #0
 80146dc:	eb03 0408 	add.w	r4, r3, r8
 80146e0:	2c00      	cmp	r4, #0
 80146e2:	dc3e      	bgt.n	8014762 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80146e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80146e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80146ec:	f1bb 0f00 	cmp.w	fp, #0
 80146f0:	f340 8108 	ble.w	8014904 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80146f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80146f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80146fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014700:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014702:	f1bb 0b01 	subs.w	fp, fp, #1
 8014706:	ee31 1a05 	vadd.f32	s2, s2, s10
 801470a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801470e:	eeb0 6a62 	vmov.f32	s12, s5
 8014712:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014716:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801471a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801471e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014722:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014726:	eeb0 6a43 	vmov.f32	s12, s6
 801472a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801472e:	ee12 2a90 	vmov	r2, s5
 8014732:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014736:	fb92 f3f3 	sdiv	r3, r2, r3
 801473a:	ee13 2a10 	vmov	r2, s6
 801473e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014742:	9313      	str	r3, [sp, #76]	; 0x4c
 8014744:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014746:	fb92 f3f3 	sdiv	r3, r2, r3
 801474a:	9a04      	ldr	r2, [sp, #16]
 801474c:	9314      	str	r3, [sp, #80]	; 0x50
 801474e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014752:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014754:	eeb0 3a67 	vmov.f32	s6, s15
 8014758:	bf08      	it	eq
 801475a:	4613      	moveq	r3, r2
 801475c:	eef0 2a47 	vmov.f32	s5, s14
 8014760:	e787      	b.n	8014672 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8014762:	140e      	asrs	r6, r1, #16
 8014764:	d462      	bmi.n	801482c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014766:	f8de 5008 	ldr.w	r5, [lr, #8]
 801476a:	42b5      	cmp	r5, r6
 801476c:	dd5e      	ble.n	801482c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801476e:	1417      	asrs	r7, r2, #16
 8014770:	d45c      	bmi.n	801482c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014772:	f8de 400c 	ldr.w	r4, [lr, #12]
 8014776:	42bc      	cmp	r4, r7
 8014778:	dd58      	ble.n	801482c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801477a:	b22d      	sxth	r5, r5
 801477c:	fb07 6505 	mla	r5, r7, r5, r6
 8014780:	9c02      	ldr	r4, [sp, #8]
 8014782:	5d66      	ldrb	r6, [r4, r5]
 8014784:	2e00      	cmp	r6, #0
 8014786:	d051      	beq.n	801482c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014788:	9c01      	ldr	r4, [sp, #4]
 801478a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801478e:	f06f 0401 	mvn.w	r4, #1
 8014792:	fb04 f408 	mul.w	r4, r4, r8
 8014796:	9403      	str	r4, [sp, #12]
 8014798:	5b05      	ldrh	r5, [r0, r4]
 801479a:	9c05      	ldr	r4, [sp, #20]
 801479c:	4366      	muls	r6, r4
 801479e:	1c74      	adds	r4, r6, #1
 80147a0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80147a4:	1224      	asrs	r4, r4, #8
 80147a6:	b2a7      	uxth	r7, r4
 80147a8:	122e      	asrs	r6, r5, #8
 80147aa:	43e4      	mvns	r4, r4
 80147ac:	b2e4      	uxtb	r4, r4
 80147ae:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80147b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80147b6:	fb16 f604 	smulbb	r6, r6, r4
 80147ba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80147be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80147c2:	00ed      	lsls	r5, r5, #3
 80147c4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80147c8:	b2ed      	uxtb	r5, r5
 80147ca:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80147ce:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80147d2:	fb15 f504 	smulbb	r5, r5, r4
 80147d6:	fa5f f989 	uxtb.w	r9, r9
 80147da:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80147de:	fb09 5507 	mla	r5, r9, r7, r5
 80147e2:	fb1a fa04 	smulbb	sl, sl, r4
 80147e6:	fa1f fc8c 	uxth.w	ip, ip
 80147ea:	b2ad      	uxth	r5, r5
 80147ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80147f0:	fb06 a607 	mla	r6, r6, r7, sl
 80147f4:	f10c 0401 	add.w	r4, ip, #1
 80147f8:	f105 0a01 	add.w	sl, r5, #1
 80147fc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014800:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014804:	b2b6      	uxth	r6, r6
 8014806:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801480a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801480e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014812:	f106 0a01 	add.w	sl, r6, #1
 8014816:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801481a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801481e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014822:	9c03      	ldr	r4, [sp, #12]
 8014824:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014828:	f820 c004 	strh.w	ip, [r0, r4]
 801482c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801482e:	4421      	add	r1, r4
 8014830:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014832:	f108 38ff 	add.w	r8, r8, #4294967295
 8014836:	4422      	add	r2, r4
 8014838:	e750      	b.n	80146dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801483a:	f04f 0900 	mov.w	r9, #0
 801483e:	eba3 0409 	sub.w	r4, r3, r9
 8014842:	2c00      	cmp	r4, #0
 8014844:	f77f af4e 	ble.w	80146e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014848:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801484c:	140d      	asrs	r5, r1, #16
 801484e:	1414      	asrs	r4, r2, #16
 8014850:	fb06 5404 	mla	r4, r6, r4, r5
 8014854:	9d02      	ldr	r5, [sp, #8]
 8014856:	5d2e      	ldrb	r6, [r5, r4]
 8014858:	2e00      	cmp	r6, #0
 801485a:	d04c      	beq.n	80148f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801485c:	9d01      	ldr	r5, [sp, #4]
 801485e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8014862:	9c05      	ldr	r4, [sp, #20]
 8014864:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014868:	4366      	muls	r6, r4
 801486a:	1c74      	adds	r4, r6, #1
 801486c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014870:	1224      	asrs	r4, r4, #8
 8014872:	b2a7      	uxth	r7, r4
 8014874:	122e      	asrs	r6, r5, #8
 8014876:	43e4      	mvns	r4, r4
 8014878:	b2e4      	uxtb	r4, r4
 801487a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801487e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014882:	fb16 f604 	smulbb	r6, r6, r4
 8014886:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801488a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801488e:	00ed      	lsls	r5, r5, #3
 8014890:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014894:	b2ed      	uxtb	r5, r5
 8014896:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801489a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801489e:	fb15 f504 	smulbb	r5, r5, r4
 80148a2:	fa5f f888 	uxtb.w	r8, r8
 80148a6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80148aa:	fb08 5507 	mla	r5, r8, r7, r5
 80148ae:	fb1a fa04 	smulbb	sl, sl, r4
 80148b2:	fa1f fc8c 	uxth.w	ip, ip
 80148b6:	b2ad      	uxth	r5, r5
 80148b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80148bc:	fb06 a607 	mla	r6, r6, r7, sl
 80148c0:	f10c 0401 	add.w	r4, ip, #1
 80148c4:	f105 0a01 	add.w	sl, r5, #1
 80148c8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80148cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80148d0:	b2b6      	uxth	r6, r6
 80148d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80148d6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80148da:	ea4a 0c0c 	orr.w	ip, sl, ip
 80148de:	f106 0a01 	add.w	sl, r6, #1
 80148e2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80148e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80148ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80148ee:	ea4c 0c0a 	orr.w	ip, ip, sl
 80148f2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80148f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80148f8:	4421      	add	r1, r4
 80148fa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80148fc:	f109 0901 	add.w	r9, r9, #1
 8014900:	4422      	add	r2, r4
 8014902:	e79c      	b.n	801483e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014904:	b007      	add	sp, #28
 8014906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801490a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801490a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801490e:	b085      	sub	sp, #20
 8014910:	468b      	mov	fp, r1
 8014912:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014914:	9203      	str	r2, [sp, #12]
 8014916:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801491a:	6861      	ldr	r1, [r4, #4]
 801491c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014920:	fb01 2000 	mla	r0, r1, r0, r2
 8014924:	6822      	ldr	r2, [r4, #0]
 8014926:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801492a:	f8d8 2000 	ldr.w	r2, [r8]
 801492e:	9200      	str	r2, [sp, #0]
 8014930:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8014934:	9201      	str	r2, [sp, #4]
 8014936:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801493a:	f1bb 0f00 	cmp.w	fp, #0
 801493e:	dc03      	bgt.n	8014948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014940:	9a03      	ldr	r2, [sp, #12]
 8014942:	2a00      	cmp	r2, #0
 8014944:	f340 8146 	ble.w	8014bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014948:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801494a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801494e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014952:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014956:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014958:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801495c:	2b00      	cmp	r3, #0
 801495e:	dd0e      	ble.n	801497e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014960:	140c      	asrs	r4, r1, #16
 8014962:	d405      	bmi.n	8014970 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014964:	42bc      	cmp	r4, r7
 8014966:	da03      	bge.n	8014970 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014968:	1414      	asrs	r4, r2, #16
 801496a:	d401      	bmi.n	8014970 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801496c:	42b4      	cmp	r4, r6
 801496e:	db07      	blt.n	8014980 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014970:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014972:	4421      	add	r1, r4
 8014974:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014976:	3b01      	subs	r3, #1
 8014978:	4422      	add	r2, r4
 801497a:	3002      	adds	r0, #2
 801497c:	e7ee      	b.n	801495c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801497e:	d017      	beq.n	80149b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014980:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014982:	1e5c      	subs	r4, r3, #1
 8014984:	fb05 1504 	mla	r5, r5, r4, r1
 8014988:	142d      	asrs	r5, r5, #16
 801498a:	d409      	bmi.n	80149a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801498c:	42bd      	cmp	r5, r7
 801498e:	da07      	bge.n	80149a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014990:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014992:	fb05 2404 	mla	r4, r5, r4, r2
 8014996:	1424      	asrs	r4, r4, #16
 8014998:	d402      	bmi.n	80149a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801499a:	42b4      	cmp	r4, r6
 801499c:	f2c0 80b3 	blt.w	8014b06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80149a0:	2600      	movs	r6, #0
 80149a2:	199c      	adds	r4, r3, r6
 80149a4:	2c00      	cmp	r4, #0
 80149a6:	dc3e      	bgt.n	8014a26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80149a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80149ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80149b0:	f1bb 0f00 	cmp.w	fp, #0
 80149b4:	f340 810e 	ble.w	8014bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80149b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80149bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80149c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80149c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149c6:	f1bb 0b01 	subs.w	fp, fp, #1
 80149ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80149ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80149d2:	eeb0 6a62 	vmov.f32	s12, s5
 80149d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80149da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80149de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80149e2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80149e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80149ea:	eeb0 6a43 	vmov.f32	s12, s6
 80149ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80149f2:	ee12 2a90 	vmov	r2, s5
 80149f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80149fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80149fe:	ee13 2a10 	vmov	r2, s6
 8014a02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a06:	9311      	str	r3, [sp, #68]	; 0x44
 8014a08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a0e:	9a03      	ldr	r2, [sp, #12]
 8014a10:	9312      	str	r3, [sp, #72]	; 0x48
 8014a12:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014a16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a18:	eeb0 3a67 	vmov.f32	s6, s15
 8014a1c:	bf08      	it	eq
 8014a1e:	4613      	moveq	r3, r2
 8014a20:	eef0 2a47 	vmov.f32	s5, s14
 8014a24:	e789      	b.n	801493a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014a26:	140f      	asrs	r7, r1, #16
 8014a28:	d418      	bmi.n	8014a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014a2a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014a2e:	42bd      	cmp	r5, r7
 8014a30:	dd14      	ble.n	8014a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014a32:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014a36:	d411      	bmi.n	8014a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014a38:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014a3c:	4564      	cmp	r4, ip
 8014a3e:	dd0d      	ble.n	8014a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014a40:	b22d      	sxth	r5, r5
 8014a42:	fb0c 7505 	mla	r5, ip, r5, r7
 8014a46:	9c01      	ldr	r4, [sp, #4]
 8014a48:	5d64      	ldrb	r4, [r4, r5]
 8014a4a:	2cff      	cmp	r4, #255	; 0xff
 8014a4c:	d10c      	bne.n	8014a68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014a4e:	9c00      	ldr	r4, [sp, #0]
 8014a50:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8014a54:	f06f 0401 	mvn.w	r4, #1
 8014a58:	4374      	muls	r4, r6
 8014a5a:	5305      	strh	r5, [r0, r4]
 8014a5c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014a5e:	4421      	add	r1, r4
 8014a60:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014a62:	3e01      	subs	r6, #1
 8014a64:	4422      	add	r2, r4
 8014a66:	e79c      	b.n	80149a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014a68:	2c00      	cmp	r4, #0
 8014a6a:	d0f7      	beq.n	8014a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014a6c:	9f00      	ldr	r7, [sp, #0]
 8014a6e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8014a72:	f06f 0501 	mvn.w	r5, #1
 8014a76:	4375      	muls	r5, r6
 8014a78:	9502      	str	r5, [sp, #8]
 8014a7a:	5b45      	ldrh	r5, [r0, r5]
 8014a7c:	fa1f fc84 	uxth.w	ip, r4
 8014a80:	122f      	asrs	r7, r5, #8
 8014a82:	43e4      	mvns	r4, r4
 8014a84:	b2e4      	uxtb	r4, r4
 8014a86:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8014a8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014a8e:	fb17 f704 	smulbb	r7, r7, r4
 8014a92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014a96:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8014a9a:	00ed      	lsls	r5, r5, #3
 8014a9c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014aa0:	b2ed      	uxtb	r5, r5
 8014aa2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014aa6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014aaa:	fb15 f504 	smulbb	r5, r5, r4
 8014aae:	fa5f f989 	uxtb.w	r9, r9
 8014ab2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014ab6:	fb09 550c 	mla	r5, r9, ip, r5
 8014aba:	fb1a fa04 	smulbb	sl, sl, r4
 8014abe:	fa1f fe8e 	uxth.w	lr, lr
 8014ac2:	b2ad      	uxth	r5, r5
 8014ac4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014ac8:	fb07 a70c 	mla	r7, r7, ip, sl
 8014acc:	f10e 0401 	add.w	r4, lr, #1
 8014ad0:	f105 0a01 	add.w	sl, r5, #1
 8014ad4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8014ad8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014adc:	b2bf      	uxth	r7, r7
 8014ade:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014ae2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8014ae6:	ea4a 0e0e 	orr.w	lr, sl, lr
 8014aea:	f107 0a01 	add.w	sl, r7, #1
 8014aee:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014af2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014af6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014afa:	9c02      	ldr	r4, [sp, #8]
 8014afc:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014b00:	f820 e004 	strh.w	lr, [r0, r4]
 8014b04:	e7aa      	b.n	8014a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014b06:	f04f 0900 	mov.w	r9, #0
 8014b0a:	eba3 0409 	sub.w	r4, r3, r9
 8014b0e:	2c00      	cmp	r4, #0
 8014b10:	f77f af4a 	ble.w	80149a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014b14:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014b18:	1414      	asrs	r4, r2, #16
 8014b1a:	140d      	asrs	r5, r1, #16
 8014b1c:	fb06 5504 	mla	r5, r6, r4, r5
 8014b20:	9c01      	ldr	r4, [sp, #4]
 8014b22:	5d64      	ldrb	r4, [r4, r5]
 8014b24:	2cff      	cmp	r4, #255	; 0xff
 8014b26:	d10b      	bne.n	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014b28:	9c00      	ldr	r4, [sp, #0]
 8014b2a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014b2e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014b32:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014b34:	4421      	add	r1, r4
 8014b36:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014b38:	f109 0901 	add.w	r9, r9, #1
 8014b3c:	4422      	add	r2, r4
 8014b3e:	e7e4      	b.n	8014b0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014b40:	2c00      	cmp	r4, #0
 8014b42:	d0f6      	beq.n	8014b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014b44:	9e00      	ldr	r6, [sp, #0]
 8014b46:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8014b4a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014b4e:	b2a7      	uxth	r7, r4
 8014b50:	122e      	asrs	r6, r5, #8
 8014b52:	43e4      	mvns	r4, r4
 8014b54:	b2e4      	uxtb	r4, r4
 8014b56:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014b5a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014b5e:	fb16 f604 	smulbb	r6, r6, r4
 8014b62:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014b66:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b6a:	00ed      	lsls	r5, r5, #3
 8014b6c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014b70:	b2ed      	uxtb	r5, r5
 8014b72:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014b76:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014b7a:	fb15 f504 	smulbb	r5, r5, r4
 8014b7e:	fa5f fe8e 	uxtb.w	lr, lr
 8014b82:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014b86:	fb0e 5507 	mla	r5, lr, r7, r5
 8014b8a:	fb1a fa04 	smulbb	sl, sl, r4
 8014b8e:	fa1f fc8c 	uxth.w	ip, ip
 8014b92:	b2ad      	uxth	r5, r5
 8014b94:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014b98:	fb06 a607 	mla	r6, r6, r7, sl
 8014b9c:	f10c 0401 	add.w	r4, ip, #1
 8014ba0:	f105 0a01 	add.w	sl, r5, #1
 8014ba4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014ba8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014bac:	b2b6      	uxth	r6, r6
 8014bae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014bb2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014bb6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014bba:	f106 0a01 	add.w	sl, r6, #1
 8014bbe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014bc2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014bc6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014bca:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014bce:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014bd2:	e7ae      	b.n	8014b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014bd4:	b005      	add	sp, #20
 8014bd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014bda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014bda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bde:	b085      	sub	sp, #20
 8014be0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014be2:	9203      	str	r2, [sp, #12]
 8014be4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8014be8:	9201      	str	r2, [sp, #4]
 8014bea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014bee:	9100      	str	r1, [sp, #0]
 8014bf0:	6841      	ldr	r1, [r0, #4]
 8014bf2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8014bf6:	fb01 2404 	mla	r4, r1, r4, r2
 8014bfa:	6802      	ldr	r2, [r0, #0]
 8014bfc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c00:	f8de 2000 	ldr.w	r2, [lr]
 8014c04:	9202      	str	r2, [sp, #8]
 8014c06:	9a01      	ldr	r2, [sp, #4]
 8014c08:	43d6      	mvns	r6, r2
 8014c0a:	b2f6      	uxtb	r6, r6
 8014c0c:	9a00      	ldr	r2, [sp, #0]
 8014c0e:	2a00      	cmp	r2, #0
 8014c10:	dc03      	bgt.n	8014c1a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014c12:	9a03      	ldr	r2, [sp, #12]
 8014c14:	2a00      	cmp	r2, #0
 8014c16:	f340 8124 	ble.w	8014e62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014c1a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014c1c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014c20:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014c24:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014c28:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014c2a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014c2e:	2b00      	cmp	r3, #0
 8014c30:	dd0e      	ble.n	8014c50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014c32:	1408      	asrs	r0, r1, #16
 8014c34:	d405      	bmi.n	8014c42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014c36:	4560      	cmp	r0, ip
 8014c38:	da03      	bge.n	8014c42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014c3a:	1410      	asrs	r0, r2, #16
 8014c3c:	d401      	bmi.n	8014c42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014c3e:	42b8      	cmp	r0, r7
 8014c40:	db07      	blt.n	8014c52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014c42:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014c44:	4401      	add	r1, r0
 8014c46:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014c48:	3b01      	subs	r3, #1
 8014c4a:	4402      	add	r2, r0
 8014c4c:	3402      	adds	r4, #2
 8014c4e:	e7ee      	b.n	8014c2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014c50:	d06e      	beq.n	8014d30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014c52:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014c54:	1e58      	subs	r0, r3, #1
 8014c56:	fb05 1500 	mla	r5, r5, r0, r1
 8014c5a:	142d      	asrs	r5, r5, #16
 8014c5c:	d45c      	bmi.n	8014d18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014c5e:	4565      	cmp	r5, ip
 8014c60:	da5a      	bge.n	8014d18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014c62:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014c64:	fb05 2000 	mla	r0, r5, r0, r2
 8014c68:	1400      	asrs	r0, r0, #16
 8014c6a:	d455      	bmi.n	8014d18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014c6c:	42b8      	cmp	r0, r7
 8014c6e:	da53      	bge.n	8014d18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014c70:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014c74:	4699      	mov	r9, r3
 8014c76:	46a2      	mov	sl, r4
 8014c78:	f1b9 0f00 	cmp.w	r9, #0
 8014c7c:	dd54      	ble.n	8014d28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014c7e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014c82:	140d      	asrs	r5, r1, #16
 8014c84:	1410      	asrs	r0, r2, #16
 8014c86:	fb07 5000 	mla	r0, r7, r0, r5
 8014c8a:	9d02      	ldr	r5, [sp, #8]
 8014c8c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014c90:	f8ba 5000 	ldrh.w	r5, [sl]
 8014c94:	122f      	asrs	r7, r5, #8
 8014c96:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014c9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014c9e:	fb17 f706 	smulbb	r7, r7, r6
 8014ca2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014ca6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014caa:	00ed      	lsls	r5, r5, #3
 8014cac:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014cb0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014cb4:	10c7      	asrs	r7, r0, #3
 8014cb6:	b2ed      	uxtb	r5, r5
 8014cb8:	00c0      	lsls	r0, r0, #3
 8014cba:	fb18 f806 	smulbb	r8, r8, r6
 8014cbe:	fb15 f506 	smulbb	r5, r5, r6
 8014cc2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014cc6:	b2c0      	uxtb	r0, r0
 8014cc8:	fa1f fc8c 	uxth.w	ip, ip
 8014ccc:	fb07 870b 	mla	r7, r7, fp, r8
 8014cd0:	fb00 500b 	mla	r0, r0, fp, r5
 8014cd4:	b280      	uxth	r0, r0
 8014cd6:	b2bf      	uxth	r7, r7
 8014cd8:	f10c 0501 	add.w	r5, ip, #1
 8014cdc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ce0:	f107 0801 	add.w	r8, r7, #1
 8014ce4:	1c45      	adds	r5, r0, #1
 8014ce6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014cea:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014cee:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014cf0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014cf4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014cf8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014cfc:	ea45 0c0c 	orr.w	ip, r5, ip
 8014d00:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014d04:	4401      	add	r1, r0
 8014d06:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014d08:	ea4c 0c08 	orr.w	ip, ip, r8
 8014d0c:	f82a cb02 	strh.w	ip, [sl], #2
 8014d10:	4402      	add	r2, r0
 8014d12:	f109 39ff 	add.w	r9, r9, #4294967295
 8014d16:	e7af      	b.n	8014c78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014d18:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014d1c:	f04f 0800 	mov.w	r8, #0
 8014d20:	eb03 0008 	add.w	r0, r3, r8
 8014d24:	2800      	cmp	r0, #0
 8014d26:	dc41      	bgt.n	8014dac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014d28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014d30:	9b00      	ldr	r3, [sp, #0]
 8014d32:	2b00      	cmp	r3, #0
 8014d34:	f340 8095 	ble.w	8014e62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014d38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014d3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014d40:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014d44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014d4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014d4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014d52:	eef0 6a62 	vmov.f32	s13, s5
 8014d56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d62:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8014d66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d6a:	eef0 6a43 	vmov.f32	s13, s6
 8014d6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d72:	ee12 2a90 	vmov	r2, s5
 8014d76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d7e:	ee13 2a10 	vmov	r2, s6
 8014d82:	9311      	str	r3, [sp, #68]	; 0x44
 8014d84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d86:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d8a:	9312      	str	r3, [sp, #72]	; 0x48
 8014d8c:	9b00      	ldr	r3, [sp, #0]
 8014d8e:	9a03      	ldr	r2, [sp, #12]
 8014d90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d94:	3b01      	subs	r3, #1
 8014d96:	9300      	str	r3, [sp, #0]
 8014d98:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8014d9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d9e:	eeb0 3a67 	vmov.f32	s6, s15
 8014da2:	bf08      	it	eq
 8014da4:	4613      	moveq	r3, r2
 8014da6:	eef0 2a47 	vmov.f32	s5, s14
 8014daa:	e72f      	b.n	8014c0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014dac:	140f      	asrs	r7, r1, #16
 8014dae:	d451      	bmi.n	8014e54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014db0:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014db4:	42bd      	cmp	r5, r7
 8014db6:	dd4d      	ble.n	8014e54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014db8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014dbc:	d44a      	bmi.n	8014e54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014dbe:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014dc2:	4560      	cmp	r0, ip
 8014dc4:	dd46      	ble.n	8014e54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014dc6:	b22d      	sxth	r5, r5
 8014dc8:	fb0c 7505 	mla	r5, ip, r5, r7
 8014dcc:	9802      	ldr	r0, [sp, #8]
 8014dce:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014dd2:	f06f 0501 	mvn.w	r5, #1
 8014dd6:	fb05 fb08 	mul.w	fp, r5, r8
 8014dda:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014dde:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014de2:	122f      	asrs	r7, r5, #8
 8014de4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014de8:	fb17 f706 	smulbb	r7, r7, r6
 8014dec:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014df0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014df4:	00ed      	lsls	r5, r5, #3
 8014df6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014dfa:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014dfe:	10c7      	asrs	r7, r0, #3
 8014e00:	b2ed      	uxtb	r5, r5
 8014e02:	00c0      	lsls	r0, r0, #3
 8014e04:	fb19 f906 	smulbb	r9, r9, r6
 8014e08:	fb15 f506 	smulbb	r5, r5, r6
 8014e0c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014e10:	b2c0      	uxtb	r0, r0
 8014e12:	fa1f fc8c 	uxth.w	ip, ip
 8014e16:	fb07 970a 	mla	r7, r7, sl, r9
 8014e1a:	fb00 500a 	mla	r0, r0, sl, r5
 8014e1e:	b2bf      	uxth	r7, r7
 8014e20:	b280      	uxth	r0, r0
 8014e22:	f10c 0501 	add.w	r5, ip, #1
 8014e26:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014e2a:	f107 0901 	add.w	r9, r7, #1
 8014e2e:	1c45      	adds	r5, r0, #1
 8014e30:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014e34:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014e38:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014e3c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014e40:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014e44:	ea45 0c0c 	orr.w	ip, r5, ip
 8014e48:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014e4c:	ea4c 0c09 	orr.w	ip, ip, r9
 8014e50:	f824 c00b 	strh.w	ip, [r4, fp]
 8014e54:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014e56:	4401      	add	r1, r0
 8014e58:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014e5a:	f108 38ff 	add.w	r8, r8, #4294967295
 8014e5e:	4402      	add	r2, r0
 8014e60:	e75e      	b.n	8014d20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014e62:	b005      	add	sp, #20
 8014e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e6c:	b085      	sub	sp, #20
 8014e6e:	4693      	mov	fp, r2
 8014e70:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014e72:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014e74:	6870      	ldr	r0, [r6, #4]
 8014e76:	9101      	str	r1, [sp, #4]
 8014e78:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014e7c:	fb00 2404 	mla	r4, r0, r4, r2
 8014e80:	6832      	ldr	r2, [r6, #0]
 8014e82:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014e86:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e8a:	682a      	ldr	r2, [r5, #0]
 8014e8c:	9202      	str	r2, [sp, #8]
 8014e8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e92:	9a01      	ldr	r2, [sp, #4]
 8014e94:	2a00      	cmp	r2, #0
 8014e96:	dc03      	bgt.n	8014ea0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014e98:	f1bb 0f00 	cmp.w	fp, #0
 8014e9c:	f340 809a 	ble.w	8014fd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014ea0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014ea2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014ea6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014eaa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014eae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014eb0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014eb4:	2b00      	cmp	r3, #0
 8014eb6:	dd0c      	ble.n	8014ed2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014eb8:	1406      	asrs	r6, r0, #16
 8014eba:	d405      	bmi.n	8014ec8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014ebc:	454e      	cmp	r6, r9
 8014ebe:	da03      	bge.n	8014ec8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014ec0:	1416      	asrs	r6, r2, #16
 8014ec2:	d401      	bmi.n	8014ec8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014ec4:	4546      	cmp	r6, r8
 8014ec6:	db05      	blt.n	8014ed4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014ec8:	4470      	add	r0, lr
 8014eca:	4462      	add	r2, ip
 8014ecc:	3b01      	subs	r3, #1
 8014ece:	3402      	adds	r4, #2
 8014ed0:	e7f0      	b.n	8014eb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014ed2:	d00f      	beq.n	8014ef4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014ed4:	1e5e      	subs	r6, r3, #1
 8014ed6:	fb0e 0706 	mla	r7, lr, r6, r0
 8014eda:	143f      	asrs	r7, r7, #16
 8014edc:	d541      	bpl.n	8014f62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014ede:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014ee2:	4698      	mov	r8, r3
 8014ee4:	9603      	str	r6, [sp, #12]
 8014ee6:	f1b8 0f00 	cmp.w	r8, #0
 8014eea:	dc56      	bgt.n	8014f9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014eec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ef0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ef4:	9b01      	ldr	r3, [sp, #4]
 8014ef6:	2b00      	cmp	r3, #0
 8014ef8:	dd6c      	ble.n	8014fd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014efa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014efe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f02:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014f06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f10:	eeb0 6a62 	vmov.f32	s12, s5
 8014f14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f20:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014f24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f28:	eeb0 6a43 	vmov.f32	s12, s6
 8014f2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f30:	ee12 2a90 	vmov	r2, s5
 8014f34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f38:	fb92 fef3 	sdiv	lr, r2, r3
 8014f3c:	ee13 2a10 	vmov	r2, s6
 8014f40:	fb92 fcf3 	sdiv	ip, r2, r3
 8014f44:	9b01      	ldr	r3, [sp, #4]
 8014f46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f4a:	3b01      	subs	r3, #1
 8014f4c:	9301      	str	r3, [sp, #4]
 8014f4e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014f52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f54:	eeb0 3a67 	vmov.f32	s6, s15
 8014f58:	bf08      	it	eq
 8014f5a:	465b      	moveq	r3, fp
 8014f5c:	eef0 2a47 	vmov.f32	s5, s14
 8014f60:	e797      	b.n	8014e92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014f62:	454f      	cmp	r7, r9
 8014f64:	dabb      	bge.n	8014ede <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014f66:	fb0c 2606 	mla	r6, ip, r6, r2
 8014f6a:	1436      	asrs	r6, r6, #16
 8014f6c:	d4b7      	bmi.n	8014ede <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014f6e:	4546      	cmp	r6, r8
 8014f70:	dab5      	bge.n	8014ede <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014f72:	461e      	mov	r6, r3
 8014f74:	46a0      	mov	r8, r4
 8014f76:	2e00      	cmp	r6, #0
 8014f78:	ddb8      	ble.n	8014eec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014f7a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014f7e:	9902      	ldr	r1, [sp, #8]
 8014f80:	1417      	asrs	r7, r2, #16
 8014f82:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014f86:	fb0a 9707 	mla	r7, sl, r7, r9
 8014f8a:	4470      	add	r0, lr
 8014f8c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014f90:	f828 7b02 	strh.w	r7, [r8], #2
 8014f94:	4462      	add	r2, ip
 8014f96:	3e01      	subs	r6, #1
 8014f98:	e7ed      	b.n	8014f76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8014f9a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014f9e:	d414      	bmi.n	8014fca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014fa0:	68ae      	ldr	r6, [r5, #8]
 8014fa2:	454e      	cmp	r6, r9
 8014fa4:	dd11      	ble.n	8014fca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014fa6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014faa:	d40e      	bmi.n	8014fca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014fac:	68ef      	ldr	r7, [r5, #12]
 8014fae:	4557      	cmp	r7, sl
 8014fb0:	dd0b      	ble.n	8014fca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014fb2:	b236      	sxth	r6, r6
 8014fb4:	fb0a 9606 	mla	r6, sl, r6, r9
 8014fb8:	9f02      	ldr	r7, [sp, #8]
 8014fba:	f06f 0101 	mvn.w	r1, #1
 8014fbe:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014fc2:	fb01 f608 	mul.w	r6, r1, r8
 8014fc6:	9903      	ldr	r1, [sp, #12]
 8014fc8:	538f      	strh	r7, [r1, r6]
 8014fca:	4470      	add	r0, lr
 8014fcc:	4462      	add	r2, ip
 8014fce:	f108 38ff 	add.w	r8, r8, #4294967295
 8014fd2:	e788      	b.n	8014ee6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014fd4:	b005      	add	sp, #20
 8014fd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014fda <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014fda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fde:	b087      	sub	sp, #28
 8014fe0:	468b      	mov	fp, r1
 8014fe2:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014fe4:	9203      	str	r2, [sp, #12]
 8014fe6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014fea:	9204      	str	r2, [sp, #16]
 8014fec:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8014ff0:	6841      	ldr	r1, [r0, #4]
 8014ff2:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8014ff6:	fb01 2505 	mla	r5, r1, r5, r2
 8014ffa:	6802      	ldr	r2, [r0, #0]
 8014ffc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015000:	f8d9 2000 	ldr.w	r2, [r9]
 8015004:	9201      	str	r2, [sp, #4]
 8015006:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801500a:	f1bb 0f00 	cmp.w	fp, #0
 801500e:	dc03      	bgt.n	8015018 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015010:	9a03      	ldr	r2, [sp, #12]
 8015012:	2a00      	cmp	r2, #0
 8015014:	f340 8159 	ble.w	80152ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015018:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801501a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801501e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015022:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015026:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015028:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801502c:	2b00      	cmp	r3, #0
 801502e:	dd0e      	ble.n	801504e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015030:	1402      	asrs	r2, r0, #16
 8015032:	d405      	bmi.n	8015040 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015034:	42ba      	cmp	r2, r7
 8015036:	da03      	bge.n	8015040 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015038:	140a      	asrs	r2, r1, #16
 801503a:	d401      	bmi.n	8015040 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801503c:	42b2      	cmp	r2, r6
 801503e:	db07      	blt.n	8015050 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015040:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015042:	4410      	add	r0, r2
 8015044:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015046:	3b01      	subs	r3, #1
 8015048:	4411      	add	r1, r2
 801504a:	3502      	adds	r5, #2
 801504c:	e7ee      	b.n	801502c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801504e:	d017      	beq.n	8015080 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015050:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015052:	1e5a      	subs	r2, r3, #1
 8015054:	fb04 0402 	mla	r4, r4, r2, r0
 8015058:	1424      	asrs	r4, r4, #16
 801505a:	d409      	bmi.n	8015070 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801505c:	42bc      	cmp	r4, r7
 801505e:	da07      	bge.n	8015070 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015060:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015062:	fb04 1202 	mla	r2, r4, r2, r1
 8015066:	1412      	asrs	r2, r2, #16
 8015068:	d402      	bmi.n	8015070 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801506a:	42b2      	cmp	r2, r6
 801506c:	f2c0 80bf 	blt.w	80151ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015070:	2700      	movs	r7, #0
 8015072:	19da      	adds	r2, r3, r7
 8015074:	2a00      	cmp	r2, #0
 8015076:	dc3e      	bgt.n	80150f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015078:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801507c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015080:	f1bb 0f00 	cmp.w	fp, #0
 8015084:	f340 8121 	ble.w	80152ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015088:	ee30 0a04 	vadd.f32	s0, s0, s8
 801508c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015090:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015094:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015096:	f1bb 0b01 	subs.w	fp, fp, #1
 801509a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801509e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150a2:	eeb0 6a62 	vmov.f32	s12, s5
 80150a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80150b2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80150b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80150ba:	eeb0 6a43 	vmov.f32	s12, s6
 80150be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80150c2:	ee12 2a90 	vmov	r2, s5
 80150c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80150ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80150ce:	ee13 2a10 	vmov	r2, s6
 80150d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150d6:	9313      	str	r3, [sp, #76]	; 0x4c
 80150d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80150da:	fb92 f3f3 	sdiv	r3, r2, r3
 80150de:	9a03      	ldr	r2, [sp, #12]
 80150e0:	9314      	str	r3, [sp, #80]	; 0x50
 80150e2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80150e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80150e8:	eeb0 3a67 	vmov.f32	s6, s15
 80150ec:	bf08      	it	eq
 80150ee:	4613      	moveq	r3, r2
 80150f0:	eef0 2a47 	vmov.f32	s5, s14
 80150f4:	e789      	b.n	801500a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80150f6:	1406      	asrs	r6, r0, #16
 80150f8:	d42d      	bmi.n	8015156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80150fa:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80150fe:	42b4      	cmp	r4, r6
 8015100:	dd29      	ble.n	8015156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015102:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8015106:	d426      	bmi.n	8015156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015108:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801510c:	4562      	cmp	r2, ip
 801510e:	dd22      	ble.n	8015156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015110:	b224      	sxth	r4, r4
 8015112:	9a01      	ldr	r2, [sp, #4]
 8015114:	fb0c 6404 	mla	r4, ip, r4, r6
 8015118:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801511c:	0e22      	lsrs	r2, r4, #24
 801511e:	d01a      	beq.n	8015156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015120:	9e04      	ldr	r6, [sp, #16]
 8015122:	4372      	muls	r2, r6
 8015124:	1c56      	adds	r6, r2, #1
 8015126:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801512a:	1212      	asrs	r2, r2, #8
 801512c:	0a26      	lsrs	r6, r4, #8
 801512e:	2aff      	cmp	r2, #255	; 0xff
 8015130:	9605      	str	r6, [sp, #20]
 8015132:	d116      	bne.n	8015162 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8015134:	f06f 0201 	mvn.w	r2, #1
 8015138:	fb02 fc07 	mul.w	ip, r2, r7
 801513c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015140:	0962      	lsrs	r2, r4, #5
 8015142:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015146:	f026 0607 	bic.w	r6, r6, #7
 801514a:	4316      	orrs	r6, r2
 801514c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015150:	4326      	orrs	r6, r4
 8015152:	f825 600c 	strh.w	r6, [r5, ip]
 8015156:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015158:	4410      	add	r0, r2
 801515a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801515c:	3f01      	subs	r7, #1
 801515e:	4411      	add	r1, r2
 8015160:	e787      	b.n	8015072 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015162:	f06f 0601 	mvn.w	r6, #1
 8015166:	437e      	muls	r6, r7
 8015168:	fa1f fa82 	uxth.w	sl, r2
 801516c:	f835 8006 	ldrh.w	r8, [r5, r6]
 8015170:	9602      	str	r6, [sp, #8]
 8015172:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015176:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801517a:	43d2      	mvns	r2, r2
 801517c:	b2d2      	uxtb	r2, r2
 801517e:	fb1c fc0a 	smulbb	ip, ip, sl
 8015182:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015186:	fb0e ce02 	mla	lr, lr, r2, ip
 801518a:	b2e4      	uxtb	r4, r4
 801518c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015190:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015194:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015198:	fa5f f888 	uxtb.w	r8, r8
 801519c:	fb14 f40a 	smulbb	r4, r4, sl
 80151a0:	fb08 4402 	mla	r4, r8, r2, r4
 80151a4:	fa1f fe8e 	uxth.w	lr, lr
 80151a8:	fb16 f60a 	smulbb	r6, r6, sl
 80151ac:	b2a4      	uxth	r4, r4
 80151ae:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80151b2:	fb0c 6c02 	mla	ip, ip, r2, r6
 80151b6:	f10e 0201 	add.w	r2, lr, #1
 80151ba:	1c66      	adds	r6, r4, #1
 80151bc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80151c0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80151c4:	fa1f fc8c 	uxth.w	ip, ip
 80151c8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80151cc:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80151d0:	ea46 0e0e 	orr.w	lr, r6, lr
 80151d4:	f10c 0601 	add.w	r6, ip, #1
 80151d8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80151dc:	0976      	lsrs	r6, r6, #5
 80151de:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80151e2:	9a02      	ldr	r2, [sp, #8]
 80151e4:	ea4e 0e06 	orr.w	lr, lr, r6
 80151e8:	f825 e002 	strh.w	lr, [r5, r2]
 80151ec:	e7b3      	b.n	8015156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151ee:	f04f 0800 	mov.w	r8, #0
 80151f2:	eba3 0208 	sub.w	r2, r3, r8
 80151f6:	2a00      	cmp	r2, #0
 80151f8:	f77f af3e 	ble.w	8015078 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80151fc:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8015200:	1404      	asrs	r4, r0, #16
 8015202:	140a      	asrs	r2, r1, #16
 8015204:	fb06 4202 	mla	r2, r6, r2, r4
 8015208:	9c01      	ldr	r4, [sp, #4]
 801520a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801520e:	0e22      	lsrs	r2, r4, #24
 8015210:	d016      	beq.n	8015240 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015212:	9e04      	ldr	r6, [sp, #16]
 8015214:	4372      	muls	r2, r6
 8015216:	1c56      	adds	r6, r2, #1
 8015218:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801521c:	1212      	asrs	r2, r2, #8
 801521e:	2aff      	cmp	r2, #255	; 0xff
 8015220:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8015224:	d113      	bne.n	801524e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8015226:	0962      	lsrs	r2, r4, #5
 8015228:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801522c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015230:	f026 0607 	bic.w	r6, r6, #7
 8015234:	4316      	orrs	r6, r2
 8015236:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801523a:	4326      	orrs	r6, r4
 801523c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8015240:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015242:	4410      	add	r0, r2
 8015244:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015246:	f108 0801 	add.w	r8, r8, #1
 801524a:	4411      	add	r1, r2
 801524c:	e7d1      	b.n	80151f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801524e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8015252:	fa1f fa82 	uxth.w	sl, r2
 8015256:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801525a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801525e:	43d2      	mvns	r2, r2
 8015260:	b2d2      	uxtb	r2, r2
 8015262:	fb17 f70a 	smulbb	r7, r7, sl
 8015266:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801526a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801526e:	b2e4      	uxtb	r4, r4
 8015270:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015274:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015278:	fa5f fe8e 	uxtb.w	lr, lr
 801527c:	fb14 f40a 	smulbb	r4, r4, sl
 8015280:	fb0e 4402 	mla	r4, lr, r2, r4
 8015284:	b2f6      	uxtb	r6, r6
 8015286:	fa1f fc8c 	uxth.w	ip, ip
 801528a:	fb16 f60a 	smulbb	r6, r6, sl
 801528e:	b2a4      	uxth	r4, r4
 8015290:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015294:	fb07 6702 	mla	r7, r7, r2, r6
 8015298:	f10c 0201 	add.w	r2, ip, #1
 801529c:	1c66      	adds	r6, r4, #1
 801529e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80152a2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80152a6:	b2bf      	uxth	r7, r7
 80152a8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80152ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80152b0:	ea46 0c0c 	orr.w	ip, r6, ip
 80152b4:	1c7e      	adds	r6, r7, #1
 80152b6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80152ba:	0976      	lsrs	r6, r6, #5
 80152bc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80152c0:	ea4c 0c06 	orr.w	ip, ip, r6
 80152c4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80152c8:	e7ba      	b.n	8015240 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80152ca:	b007      	add	sp, #28
 80152cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080152d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80152d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152d4:	b085      	sub	sp, #20
 80152d6:	468b      	mov	fp, r1
 80152d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80152da:	9203      	str	r2, [sp, #12]
 80152dc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80152e0:	6841      	ldr	r1, [r0, #4]
 80152e2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80152e6:	fb01 2404 	mla	r4, r1, r4, r2
 80152ea:	6802      	ldr	r2, [r0, #0]
 80152ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80152f0:	f8d8 2000 	ldr.w	r2, [r8]
 80152f4:	9201      	str	r2, [sp, #4]
 80152f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80152fa:	f1bb 0f00 	cmp.w	fp, #0
 80152fe:	dc03      	bgt.n	8015308 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015300:	9a03      	ldr	r2, [sp, #12]
 8015302:	2a00      	cmp	r2, #0
 8015304:	f340 814f 	ble.w	80155a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015308:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801530a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801530e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015312:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015316:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015318:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801531c:	2b00      	cmp	r3, #0
 801531e:	dd0e      	ble.n	801533e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015320:	1408      	asrs	r0, r1, #16
 8015322:	d405      	bmi.n	8015330 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015324:	42b8      	cmp	r0, r7
 8015326:	da03      	bge.n	8015330 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015328:	1410      	asrs	r0, r2, #16
 801532a:	d401      	bmi.n	8015330 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801532c:	42b0      	cmp	r0, r6
 801532e:	db07      	blt.n	8015340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015330:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015332:	4401      	add	r1, r0
 8015334:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015336:	3b01      	subs	r3, #1
 8015338:	4402      	add	r2, r0
 801533a:	3402      	adds	r4, #2
 801533c:	e7ee      	b.n	801531c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801533e:	d017      	beq.n	8015370 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015340:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015342:	1e58      	subs	r0, r3, #1
 8015344:	fb05 1500 	mla	r5, r5, r0, r1
 8015348:	142d      	asrs	r5, r5, #16
 801534a:	d409      	bmi.n	8015360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801534c:	42bd      	cmp	r5, r7
 801534e:	da07      	bge.n	8015360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015350:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015352:	fb05 2000 	mla	r0, r5, r0, r2
 8015356:	1400      	asrs	r0, r0, #16
 8015358:	d402      	bmi.n	8015360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801535a:	42b0      	cmp	r0, r6
 801535c:	f2c0 80ba 	blt.w	80154d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015360:	2600      	movs	r6, #0
 8015362:	1998      	adds	r0, r3, r6
 8015364:	2800      	cmp	r0, #0
 8015366:	dc3e      	bgt.n	80153e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015368:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801536c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015370:	f1bb 0f00 	cmp.w	fp, #0
 8015374:	f340 8117 	ble.w	80155a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015378:	ee30 0a04 	vadd.f32	s0, s0, s8
 801537c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015380:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015384:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015386:	f1bb 0b01 	subs.w	fp, fp, #1
 801538a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801538e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015392:	eeb0 6a62 	vmov.f32	s12, s5
 8015396:	ee61 7a27 	vmul.f32	s15, s2, s15
 801539a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801539e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80153a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80153a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80153aa:	eeb0 6a43 	vmov.f32	s12, s6
 80153ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80153b2:	ee12 2a90 	vmov	r2, s5
 80153b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80153ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80153be:	ee13 2a10 	vmov	r2, s6
 80153c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80153c6:	9311      	str	r3, [sp, #68]	; 0x44
 80153c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80153ce:	9a03      	ldr	r2, [sp, #12]
 80153d0:	9312      	str	r3, [sp, #72]	; 0x48
 80153d2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80153d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153d8:	eeb0 3a67 	vmov.f32	s6, s15
 80153dc:	bf08      	it	eq
 80153de:	4613      	moveq	r3, r2
 80153e0:	eef0 2a47 	vmov.f32	s5, s14
 80153e4:	e789      	b.n	80152fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80153e6:	140f      	asrs	r7, r1, #16
 80153e8:	d424      	bmi.n	8015434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80153ea:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80153ee:	42bd      	cmp	r5, r7
 80153f0:	dd20      	ble.n	8015434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80153f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80153f6:	d41d      	bmi.n	8015434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80153f8:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80153fc:	4560      	cmp	r0, ip
 80153fe:	dd19      	ble.n	8015434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015400:	b22d      	sxth	r5, r5
 8015402:	fb0c 7505 	mla	r5, ip, r5, r7
 8015406:	9801      	ldr	r0, [sp, #4]
 8015408:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801540c:	0e07      	lsrs	r7, r0, #24
 801540e:	2fff      	cmp	r7, #255	; 0xff
 8015410:	d116      	bne.n	8015440 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015412:	f06f 0501 	mvn.w	r5, #1
 8015416:	fb05 f706 	mul.w	r7, r5, r6
 801541a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801541e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015422:	0945      	lsrs	r5, r0, #5
 8015424:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015428:	ea4c 0505 	orr.w	r5, ip, r5
 801542c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015430:	4305      	orrs	r5, r0
 8015432:	53e5      	strh	r5, [r4, r7]
 8015434:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015436:	4401      	add	r1, r0
 8015438:	9812      	ldr	r0, [sp, #72]	; 0x48
 801543a:	3e01      	subs	r6, #1
 801543c:	4402      	add	r2, r0
 801543e:	e790      	b.n	8015362 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015440:	b2fd      	uxtb	r5, r7
 8015442:	2f00      	cmp	r7, #0
 8015444:	d0f6      	beq.n	8015434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015446:	f06f 0701 	mvn.w	r7, #1
 801544a:	4377      	muls	r7, r6
 801544c:	fa1f f985 	uxth.w	r9, r5
 8015450:	f834 e007 	ldrh.w	lr, [r4, r7]
 8015454:	9702      	str	r7, [sp, #8]
 8015456:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801545a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801545e:	43ed      	mvns	r5, r5
 8015460:	b2ed      	uxtb	r5, r5
 8015462:	fb17 f709 	smulbb	r7, r7, r9
 8015466:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801546a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801546e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015472:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015476:	b2c0      	uxtb	r0, r0
 8015478:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801547c:	fa5f fe8e 	uxtb.w	lr, lr
 8015480:	fb10 f009 	smulbb	r0, r0, r9
 8015484:	fb0e 0005 	mla	r0, lr, r5, r0
 8015488:	b280      	uxth	r0, r0
 801548a:	fa1f fc8c 	uxth.w	ip, ip
 801548e:	fb1a fa09 	smulbb	sl, sl, r9
 8015492:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015496:	fb07 a705 	mla	r7, r7, r5, sl
 801549a:	f100 0a01 	add.w	sl, r0, #1
 801549e:	f10c 0501 	add.w	r5, ip, #1
 80154a2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80154a6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80154aa:	b2bf      	uxth	r7, r7
 80154ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80154b0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80154b4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80154b8:	f107 0a01 	add.w	sl, r7, #1
 80154bc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80154c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80154c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80154c8:	9802      	ldr	r0, [sp, #8]
 80154ca:	ea4c 0c0a 	orr.w	ip, ip, sl
 80154ce:	f824 c000 	strh.w	ip, [r4, r0]
 80154d2:	e7af      	b.n	8015434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80154d4:	f04f 0e00 	mov.w	lr, #0
 80154d8:	eba3 000e 	sub.w	r0, r3, lr
 80154dc:	2800      	cmp	r0, #0
 80154de:	f77f af43 	ble.w	8015368 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80154e2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80154e6:	140d      	asrs	r5, r1, #16
 80154e8:	1410      	asrs	r0, r2, #16
 80154ea:	fb06 5000 	mla	r0, r6, r0, r5
 80154ee:	9d01      	ldr	r5, [sp, #4]
 80154f0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80154f4:	0e2e      	lsrs	r6, r5, #24
 80154f6:	2eff      	cmp	r6, #255	; 0xff
 80154f8:	d112      	bne.n	8015520 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80154fa:	482c      	ldr	r0, [pc, #176]	; (80155ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80154fc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015500:	0968      	lsrs	r0, r5, #5
 8015502:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015506:	4330      	orrs	r0, r6
 8015508:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801550c:	4328      	orrs	r0, r5
 801550e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8015512:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015514:	4401      	add	r1, r0
 8015516:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015518:	f10e 0e01 	add.w	lr, lr, #1
 801551c:	4402      	add	r2, r0
 801551e:	e7db      	b.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015520:	b2f0      	uxtb	r0, r6
 8015522:	2e00      	cmp	r6, #0
 8015524:	d0f5      	beq.n	8015512 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015526:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801552a:	fa1f f980 	uxth.w	r9, r0
 801552e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015532:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015536:	43c0      	mvns	r0, r0
 8015538:	b2c0      	uxtb	r0, r0
 801553a:	fb16 f609 	smulbb	r6, r6, r9
 801553e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015542:	fb07 6700 	mla	r7, r7, r0, r6
 8015546:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801554a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801554e:	b2ed      	uxtb	r5, r5
 8015550:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015554:	fa5f fc8c 	uxtb.w	ip, ip
 8015558:	fb15 f509 	smulbb	r5, r5, r9
 801555c:	fb0c 5500 	mla	r5, ip, r0, r5
 8015560:	b2bf      	uxth	r7, r7
 8015562:	fb1a fa09 	smulbb	sl, sl, r9
 8015566:	b2ad      	uxth	r5, r5
 8015568:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801556c:	fb06 a600 	mla	r6, r6, r0, sl
 8015570:	1c78      	adds	r0, r7, #1
 8015572:	f105 0a01 	add.w	sl, r5, #1
 8015576:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801557a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801557e:	b2b6      	uxth	r6, r6
 8015580:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015584:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015588:	ea4a 0707 	orr.w	r7, sl, r7
 801558c:	f106 0a01 	add.w	sl, r6, #1
 8015590:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015594:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015598:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801559c:	ea47 070a 	orr.w	r7, r7, sl
 80155a0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80155a4:	e7b5      	b.n	8015512 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80155a6:	b005      	add	sp, #20
 80155a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155ac:	fffff800 	.word	0xfffff800

080155b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80155b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155b4:	b087      	sub	sp, #28
 80155b6:	468b      	mov	fp, r1
 80155b8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80155ba:	9203      	str	r2, [sp, #12]
 80155bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80155c0:	9204      	str	r2, [sp, #16]
 80155c2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80155c6:	6841      	ldr	r1, [r0, #4]
 80155c8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80155cc:	fb01 2404 	mla	r4, r1, r4, r2
 80155d0:	6802      	ldr	r2, [r0, #0]
 80155d2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80155d6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80155da:	3201      	adds	r2, #1
 80155dc:	f022 0201 	bic.w	r2, r2, #1
 80155e0:	9200      	str	r2, [sp, #0]
 80155e2:	f8d9 2000 	ldr.w	r2, [r9]
 80155e6:	9201      	str	r2, [sp, #4]
 80155e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80155ec:	f1bb 0f00 	cmp.w	fp, #0
 80155f0:	dc03      	bgt.n	80155fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80155f2:	9a03      	ldr	r2, [sp, #12]
 80155f4:	2a00      	cmp	r2, #0
 80155f6:	f340 8169 	ble.w	80158cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80155fa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80155fc:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015600:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015604:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015608:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801560a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801560e:	2b00      	cmp	r3, #0
 8015610:	dd0e      	ble.n	8015630 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015612:	1402      	asrs	r2, r0, #16
 8015614:	d405      	bmi.n	8015622 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015616:	42ba      	cmp	r2, r7
 8015618:	da03      	bge.n	8015622 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801561a:	140a      	asrs	r2, r1, #16
 801561c:	d401      	bmi.n	8015622 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801561e:	42b2      	cmp	r2, r6
 8015620:	db07      	blt.n	8015632 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8015622:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015624:	4410      	add	r0, r2
 8015626:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015628:	3b01      	subs	r3, #1
 801562a:	4411      	add	r1, r2
 801562c:	3402      	adds	r4, #2
 801562e:	e7ee      	b.n	801560e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015630:	d017      	beq.n	8015662 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015632:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015634:	1e5a      	subs	r2, r3, #1
 8015636:	fb05 0502 	mla	r5, r5, r2, r0
 801563a:	142d      	asrs	r5, r5, #16
 801563c:	d409      	bmi.n	8015652 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801563e:	42bd      	cmp	r5, r7
 8015640:	da07      	bge.n	8015652 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015642:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015644:	fb05 1202 	mla	r2, r5, r2, r1
 8015648:	1412      	asrs	r2, r2, #16
 801564a:	d402      	bmi.n	8015652 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801564c:	42b2      	cmp	r2, r6
 801564e:	f2c0 80c7 	blt.w	80157e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8015652:	2700      	movs	r7, #0
 8015654:	19da      	adds	r2, r3, r7
 8015656:	2a00      	cmp	r2, #0
 8015658:	dc3e      	bgt.n	80156d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801565a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801565e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015662:	f1bb 0f00 	cmp.w	fp, #0
 8015666:	f340 8131 	ble.w	80158cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801566a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801566e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015672:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015676:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015678:	f1bb 0b01 	subs.w	fp, fp, #1
 801567c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015680:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015684:	eeb0 6a62 	vmov.f32	s12, s5
 8015688:	ee61 7a27 	vmul.f32	s15, s2, s15
 801568c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015690:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015694:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015698:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801569c:	eeb0 6a43 	vmov.f32	s12, s6
 80156a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80156a4:	ee12 2a90 	vmov	r2, s5
 80156a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80156ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80156b0:	ee13 2a10 	vmov	r2, s6
 80156b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80156ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80156c0:	9a03      	ldr	r2, [sp, #12]
 80156c2:	9314      	str	r3, [sp, #80]	; 0x50
 80156c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80156c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156ca:	eeb0 3a67 	vmov.f32	s6, s15
 80156ce:	bf08      	it	eq
 80156d0:	4613      	moveq	r3, r2
 80156d2:	eef0 2a47 	vmov.f32	s5, s14
 80156d6:	e789      	b.n	80155ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80156d8:	1405      	asrs	r5, r0, #16
 80156da:	d435      	bmi.n	8015748 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80156dc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80156e0:	42aa      	cmp	r2, r5
 80156e2:	dd31      	ble.n	8015748 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80156e4:	140e      	asrs	r6, r1, #16
 80156e6:	d42f      	bmi.n	8015748 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80156e8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80156ec:	42b2      	cmp	r2, r6
 80156ee:	dd2b      	ble.n	8015748 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80156f0:	9a00      	ldr	r2, [sp, #0]
 80156f2:	fb06 5502 	mla	r5, r6, r2, r5
 80156f6:	086a      	lsrs	r2, r5, #1
 80156f8:	9e01      	ldr	r6, [sp, #4]
 80156fa:	5cb2      	ldrb	r2, [r6, r2]
 80156fc:	07ee      	lsls	r6, r5, #31
 80156fe:	bf54      	ite	pl
 8015700:	f002 020f 	andpl.w	r2, r2, #15
 8015704:	1112      	asrmi	r2, r2, #4
 8015706:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801570a:	b2d2      	uxtb	r2, r2
 801570c:	b1e2      	cbz	r2, 8015748 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801570e:	9d04      	ldr	r5, [sp, #16]
 8015710:	436a      	muls	r2, r5
 8015712:	1c55      	adds	r5, r2, #1
 8015714:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015718:	4d6e      	ldr	r5, [pc, #440]	; (80158d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801571a:	682d      	ldr	r5, [r5, #0]
 801571c:	1212      	asrs	r2, r2, #8
 801571e:	0a2e      	lsrs	r6, r5, #8
 8015720:	2aff      	cmp	r2, #255	; 0xff
 8015722:	9605      	str	r6, [sp, #20]
 8015724:	d116      	bne.n	8015754 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8015726:	f06f 0201 	mvn.w	r2, #1
 801572a:	fb02 fc07 	mul.w	ip, r2, r7
 801572e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015732:	096a      	lsrs	r2, r5, #5
 8015734:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015738:	f026 0607 	bic.w	r6, r6, #7
 801573c:	4316      	orrs	r6, r2
 801573e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015742:	432e      	orrs	r6, r5
 8015744:	f824 600c 	strh.w	r6, [r4, ip]
 8015748:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801574a:	4410      	add	r0, r2
 801574c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801574e:	3f01      	subs	r7, #1
 8015750:	4411      	add	r1, r2
 8015752:	e77f      	b.n	8015654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8015754:	f06f 0601 	mvn.w	r6, #1
 8015758:	437e      	muls	r6, r7
 801575a:	fa1f fa82 	uxth.w	sl, r2
 801575e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8015762:	9602      	str	r6, [sp, #8]
 8015764:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015768:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801576c:	43d2      	mvns	r2, r2
 801576e:	b2d2      	uxtb	r2, r2
 8015770:	fb1c fc0a 	smulbb	ip, ip, sl
 8015774:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015778:	fb0e ce02 	mla	lr, lr, r2, ip
 801577c:	b2ed      	uxtb	r5, r5
 801577e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015782:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015786:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801578a:	fa5f f888 	uxtb.w	r8, r8
 801578e:	fb15 f50a 	smulbb	r5, r5, sl
 8015792:	fb08 5502 	mla	r5, r8, r2, r5
 8015796:	fa1f fe8e 	uxth.w	lr, lr
 801579a:	fb16 f60a 	smulbb	r6, r6, sl
 801579e:	b2ad      	uxth	r5, r5
 80157a0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80157a4:	fb0c 6c02 	mla	ip, ip, r2, r6
 80157a8:	f10e 0201 	add.w	r2, lr, #1
 80157ac:	1c6e      	adds	r6, r5, #1
 80157ae:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80157b2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80157b6:	fa1f fc8c 	uxth.w	ip, ip
 80157ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80157be:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80157c2:	ea46 0e0e 	orr.w	lr, r6, lr
 80157c6:	f10c 0601 	add.w	r6, ip, #1
 80157ca:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80157ce:	0976      	lsrs	r6, r6, #5
 80157d0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80157d4:	9a02      	ldr	r2, [sp, #8]
 80157d6:	ea4e 0e06 	orr.w	lr, lr, r6
 80157da:	f824 e002 	strh.w	lr, [r4, r2]
 80157de:	e7b3      	b.n	8015748 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80157e0:	f04f 0800 	mov.w	r8, #0
 80157e4:	eba3 0208 	sub.w	r2, r3, r8
 80157e8:	2a00      	cmp	r2, #0
 80157ea:	f77f af36 	ble.w	801565a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80157ee:	9e00      	ldr	r6, [sp, #0]
 80157f0:	1402      	asrs	r2, r0, #16
 80157f2:	140d      	asrs	r5, r1, #16
 80157f4:	fb06 2505 	mla	r5, r6, r5, r2
 80157f8:	086a      	lsrs	r2, r5, #1
 80157fa:	9e01      	ldr	r6, [sp, #4]
 80157fc:	5cb2      	ldrb	r2, [r6, r2]
 80157fe:	07ed      	lsls	r5, r5, #31
 8015800:	bf54      	ite	pl
 8015802:	f002 020f 	andpl.w	r2, r2, #15
 8015806:	1112      	asrmi	r2, r2, #4
 8015808:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801580c:	b2d2      	uxtb	r2, r2
 801580e:	b1c2      	cbz	r2, 8015842 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015810:	9d04      	ldr	r5, [sp, #16]
 8015812:	436a      	muls	r2, r5
 8015814:	1c55      	adds	r5, r2, #1
 8015816:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801581a:	4d2e      	ldr	r5, [pc, #184]	; (80158d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801581c:	1212      	asrs	r2, r2, #8
 801581e:	682e      	ldr	r6, [r5, #0]
 8015820:	2aff      	cmp	r2, #255	; 0xff
 8015822:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8015826:	d113      	bne.n	8015850 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015828:	0972      	lsrs	r2, r6, #5
 801582a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801582e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015832:	f025 0507 	bic.w	r5, r5, #7
 8015836:	4315      	orrs	r5, r2
 8015838:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801583c:	4335      	orrs	r5, r6
 801583e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8015842:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015844:	4410      	add	r0, r2
 8015846:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015848:	f108 0801 	add.w	r8, r8, #1
 801584c:	4411      	add	r1, r2
 801584e:	e7c9      	b.n	80157e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8015850:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015854:	fa1f fa82 	uxth.w	sl, r2
 8015858:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801585c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8015860:	43d2      	mvns	r2, r2
 8015862:	b2d2      	uxtb	r2, r2
 8015864:	fb17 f70a 	smulbb	r7, r7, sl
 8015868:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801586c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015870:	b2f6      	uxtb	r6, r6
 8015872:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015876:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801587a:	fa5f fe8e 	uxtb.w	lr, lr
 801587e:	fb16 f60a 	smulbb	r6, r6, sl
 8015882:	fb0e 6602 	mla	r6, lr, r2, r6
 8015886:	b2ed      	uxtb	r5, r5
 8015888:	fa1f fc8c 	uxth.w	ip, ip
 801588c:	fb15 f50a 	smulbb	r5, r5, sl
 8015890:	b2b6      	uxth	r6, r6
 8015892:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015896:	fb07 5702 	mla	r7, r7, r2, r5
 801589a:	f10c 0201 	add.w	r2, ip, #1
 801589e:	1c75      	adds	r5, r6, #1
 80158a0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80158a4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80158a8:	b2bf      	uxth	r7, r7
 80158aa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80158ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80158b2:	ea45 0c0c 	orr.w	ip, r5, ip
 80158b6:	1c7d      	adds	r5, r7, #1
 80158b8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80158bc:	096d      	lsrs	r5, r5, #5
 80158be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80158c2:	ea4c 0c05 	orr.w	ip, ip, r5
 80158c6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80158ca:	e7ba      	b.n	8015842 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80158cc:	b007      	add	sp, #28
 80158ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158d2:	bf00      	nop
 80158d4:	20017574 	.word	0x20017574

080158d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80158d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158dc:	b087      	sub	sp, #28
 80158de:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8015bec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80158e2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80158e4:	9205      	str	r2, [sp, #20]
 80158e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80158ea:	9101      	str	r1, [sp, #4]
 80158ec:	6841      	ldr	r1, [r0, #4]
 80158ee:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 80158f2:	fb01 2404 	mla	r4, r1, r4, r2
 80158f6:	6802      	ldr	r2, [r0, #0]
 80158f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80158fc:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015900:	3201      	adds	r2, #1
 8015902:	f022 0201 	bic.w	r2, r2, #1
 8015906:	9202      	str	r2, [sp, #8]
 8015908:	f8db 2000 	ldr.w	r2, [fp]
 801590c:	9203      	str	r2, [sp, #12]
 801590e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015912:	9a01      	ldr	r2, [sp, #4]
 8015914:	2a00      	cmp	r2, #0
 8015916:	dc03      	bgt.n	8015920 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015918:	9a05      	ldr	r2, [sp, #20]
 801591a:	2a00      	cmp	r2, #0
 801591c:	f340 8162 	ble.w	8015be4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015920:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015922:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8015926:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801592a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801592e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015930:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015934:	2b00      	cmp	r3, #0
 8015936:	dd0e      	ble.n	8015956 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015938:	1402      	asrs	r2, r0, #16
 801593a:	d405      	bmi.n	8015948 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801593c:	42ba      	cmp	r2, r7
 801593e:	da03      	bge.n	8015948 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015940:	140a      	asrs	r2, r1, #16
 8015942:	d401      	bmi.n	8015948 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015944:	42b2      	cmp	r2, r6
 8015946:	db07      	blt.n	8015958 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015948:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801594a:	4410      	add	r0, r2
 801594c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801594e:	3b01      	subs	r3, #1
 8015950:	4411      	add	r1, r2
 8015952:	3402      	adds	r4, #2
 8015954:	e7ee      	b.n	8015934 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015956:	d017      	beq.n	8015988 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015958:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801595a:	1e5a      	subs	r2, r3, #1
 801595c:	fb05 0502 	mla	r5, r5, r2, r0
 8015960:	142d      	asrs	r5, r5, #16
 8015962:	d409      	bmi.n	8015978 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015964:	42bd      	cmp	r5, r7
 8015966:	da07      	bge.n	8015978 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015968:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801596a:	fb05 1202 	mla	r2, r5, r2, r1
 801596e:	1412      	asrs	r2, r2, #16
 8015970:	d402      	bmi.n	8015978 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015972:	42b2      	cmp	r2, r6
 8015974:	f2c0 80c3 	blt.w	8015afe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8015978:	2500      	movs	r5, #0
 801597a:	195a      	adds	r2, r3, r5
 801597c:	2a00      	cmp	r2, #0
 801597e:	dc3f      	bgt.n	8015a00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015980:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015984:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015988:	9b01      	ldr	r3, [sp, #4]
 801598a:	2b00      	cmp	r3, #0
 801598c:	f340 812a 	ble.w	8015be4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015990:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015994:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015998:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801599c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801599e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80159a6:	eeb0 6a62 	vmov.f32	s12, s5
 80159aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80159ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80159b6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80159ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80159be:	eeb0 6a43 	vmov.f32	s12, s6
 80159c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80159c6:	ee12 2a90 	vmov	r2, s5
 80159ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80159ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80159d2:	ee13 2a10 	vmov	r2, s6
 80159d6:	9313      	str	r3, [sp, #76]	; 0x4c
 80159d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159da:	fb92 f3f3 	sdiv	r3, r2, r3
 80159de:	9314      	str	r3, [sp, #80]	; 0x50
 80159e0:	9b01      	ldr	r3, [sp, #4]
 80159e2:	9a05      	ldr	r2, [sp, #20]
 80159e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159e8:	3b01      	subs	r3, #1
 80159ea:	9301      	str	r3, [sp, #4]
 80159ec:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80159f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159f2:	eeb0 3a67 	vmov.f32	s6, s15
 80159f6:	bf08      	it	eq
 80159f8:	4613      	moveq	r3, r2
 80159fa:	eef0 2a47 	vmov.f32	s5, s14
 80159fe:	e788      	b.n	8015912 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015a00:	1406      	asrs	r6, r0, #16
 8015a02:	d42c      	bmi.n	8015a5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015a04:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015a08:	42b2      	cmp	r2, r6
 8015a0a:	dd28      	ble.n	8015a5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015a0c:	140f      	asrs	r7, r1, #16
 8015a0e:	d426      	bmi.n	8015a5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015a10:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015a14:	42ba      	cmp	r2, r7
 8015a16:	dd22      	ble.n	8015a5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015a18:	9a02      	ldr	r2, [sp, #8]
 8015a1a:	fb07 6602 	mla	r6, r7, r2, r6
 8015a1e:	0872      	lsrs	r2, r6, #1
 8015a20:	9f03      	ldr	r7, [sp, #12]
 8015a22:	5cba      	ldrb	r2, [r7, r2]
 8015a24:	07f6      	lsls	r6, r6, #31
 8015a26:	bf54      	ite	pl
 8015a28:	f002 020f 	andpl.w	r2, r2, #15
 8015a2c:	1112      	asrmi	r2, r2, #4
 8015a2e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015a32:	b2d2      	uxtb	r2, r2
 8015a34:	2aff      	cmp	r2, #255	; 0xff
 8015a36:	d118      	bne.n	8015a6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015a38:	f8d8 2000 	ldr.w	r2, [r8]
 8015a3c:	f06f 0601 	mvn.w	r6, #1
 8015a40:	fb06 f705 	mul.w	r7, r6, r5
 8015a44:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8015a48:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8015a4c:	0956      	lsrs	r6, r2, #5
 8015a4e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015a52:	ea4c 0606 	orr.w	r6, ip, r6
 8015a56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015a5a:	4316      	orrs	r6, r2
 8015a5c:	53e6      	strh	r6, [r4, r7]
 8015a5e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015a60:	4410      	add	r0, r2
 8015a62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015a64:	3d01      	subs	r5, #1
 8015a66:	4411      	add	r1, r2
 8015a68:	e787      	b.n	801597a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015a6a:	2a00      	cmp	r2, #0
 8015a6c:	d0f7      	beq.n	8015a5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015a6e:	f06f 0601 	mvn.w	r6, #1
 8015a72:	436e      	muls	r6, r5
 8015a74:	f8d8 c000 	ldr.w	ip, [r8]
 8015a78:	f834 e006 	ldrh.w	lr, [r4, r6]
 8015a7c:	9604      	str	r6, [sp, #16]
 8015a7e:	fa1f f982 	uxth.w	r9, r2
 8015a82:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015a86:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8015a8a:	43d2      	mvns	r2, r2
 8015a8c:	b2d2      	uxtb	r2, r2
 8015a8e:	fb16 f609 	smulbb	r6, r6, r9
 8015a92:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015a96:	fb07 6702 	mla	r7, r7, r2, r6
 8015a9a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8015a9e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015aa2:	fa5f fc8c 	uxtb.w	ip, ip
 8015aa6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015aaa:	fa5f fe8e 	uxtb.w	lr, lr
 8015aae:	fb1c fc09 	smulbb	ip, ip, r9
 8015ab2:	fb0e cc02 	mla	ip, lr, r2, ip
 8015ab6:	b2bf      	uxth	r7, r7
 8015ab8:	fb1a fa09 	smulbb	sl, sl, r9
 8015abc:	fa1f fc8c 	uxth.w	ip, ip
 8015ac0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015ac4:	fb06 a602 	mla	r6, r6, r2, sl
 8015ac8:	1c7a      	adds	r2, r7, #1
 8015aca:	f10c 0a01 	add.w	sl, ip, #1
 8015ace:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015ad2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015ad6:	b2b6      	uxth	r6, r6
 8015ad8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015adc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015ae0:	ea4a 0707 	orr.w	r7, sl, r7
 8015ae4:	f106 0a01 	add.w	sl, r6, #1
 8015ae8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015aec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015af0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015af4:	9a04      	ldr	r2, [sp, #16]
 8015af6:	ea47 070a 	orr.w	r7, r7, sl
 8015afa:	52a7      	strh	r7, [r4, r2]
 8015afc:	e7af      	b.n	8015a5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015afe:	f04f 0e00 	mov.w	lr, #0
 8015b02:	eba3 020e 	sub.w	r2, r3, lr
 8015b06:	2a00      	cmp	r2, #0
 8015b08:	f77f af3a 	ble.w	8015980 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015b0c:	9e02      	ldr	r6, [sp, #8]
 8015b0e:	1402      	asrs	r2, r0, #16
 8015b10:	140d      	asrs	r5, r1, #16
 8015b12:	fb06 2505 	mla	r5, r6, r5, r2
 8015b16:	086a      	lsrs	r2, r5, #1
 8015b18:	9e03      	ldr	r6, [sp, #12]
 8015b1a:	5cb2      	ldrb	r2, [r6, r2]
 8015b1c:	07ed      	lsls	r5, r5, #31
 8015b1e:	bf54      	ite	pl
 8015b20:	f002 020f 	andpl.w	r2, r2, #15
 8015b24:	1112      	asrmi	r2, r2, #4
 8015b26:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015b2a:	b2d2      	uxtb	r2, r2
 8015b2c:	2aff      	cmp	r2, #255	; 0xff
 8015b2e:	d115      	bne.n	8015b5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015b30:	f8d8 5000 	ldr.w	r5, [r8]
 8015b34:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8015b38:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015b3c:	096a      	lsrs	r2, r5, #5
 8015b3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015b42:	4332      	orrs	r2, r6
 8015b44:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015b48:	432a      	orrs	r2, r5
 8015b4a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8015b4e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015b50:	4410      	add	r0, r2
 8015b52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015b54:	f10e 0e01 	add.w	lr, lr, #1
 8015b58:	4411      	add	r1, r2
 8015b5a:	e7d2      	b.n	8015b02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015b5c:	2a00      	cmp	r2, #0
 8015b5e:	d0f6      	beq.n	8015b4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015b60:	f8d8 7000 	ldr.w	r7, [r8]
 8015b64:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015b68:	fa1f f982 	uxth.w	r9, r2
 8015b6c:	ea4f 262c 	mov.w	r6, ip, asr #8
 8015b70:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8015b74:	43d2      	mvns	r2, r2
 8015b76:	b2d2      	uxtb	r2, r2
 8015b78:	fb15 f509 	smulbb	r5, r5, r9
 8015b7c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015b80:	fb06 5602 	mla	r6, r6, r2, r5
 8015b84:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8015b88:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015b8c:	b2ff      	uxtb	r7, r7
 8015b8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015b92:	fa5f fc8c 	uxtb.w	ip, ip
 8015b96:	fb17 f709 	smulbb	r7, r7, r9
 8015b9a:	fb0c 7702 	mla	r7, ip, r2, r7
 8015b9e:	b2b6      	uxth	r6, r6
 8015ba0:	fb1a fa09 	smulbb	sl, sl, r9
 8015ba4:	b2bf      	uxth	r7, r7
 8015ba6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015baa:	fb05 a502 	mla	r5, r5, r2, sl
 8015bae:	1c72      	adds	r2, r6, #1
 8015bb0:	f107 0a01 	add.w	sl, r7, #1
 8015bb4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015bb8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015bbc:	b2ad      	uxth	r5, r5
 8015bbe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015bc2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015bc6:	ea4a 0606 	orr.w	r6, sl, r6
 8015bca:	f105 0a01 	add.w	sl, r5, #1
 8015bce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015bd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015bd6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015bda:	ea46 060a 	orr.w	r6, r6, sl
 8015bde:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015be2:	e7b4      	b.n	8015b4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015be4:	b007      	add	sp, #28
 8015be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015bea:	bf00      	nop
 8015bec:	20017574 	.word	0x20017574

08015bf0 <_ZN8touchgfx8LCD16bppD1Ev>:
 8015bf0:	4770      	bx	lr

08015bf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8015bf2:	4770      	bx	lr

08015bf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8015bf4:	4770      	bx	lr

08015bf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015bf6:	4770      	bx	lr

08015bf8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015bf8:	4770      	bx	lr

08015bfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015bfa:	4770      	bx	lr

08015bfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015bfc:	4770      	bx	lr

08015bfe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015bfe:	4770      	bx	lr

08015c00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015c00:	4770      	bx	lr

08015c02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015c02:	4770      	bx	lr

08015c04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015c04:	4770      	bx	lr

08015c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015c06:	4770      	bx	lr

08015c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015c08:	4770      	bx	lr

08015c0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015c0a:	4770      	bx	lr

08015c0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015c0c:	4770      	bx	lr

08015c0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015c0e:	4770      	bx	lr

08015c10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015c10:	4770      	bx	lr

08015c12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015c12:	4770      	bx	lr

08015c14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015c14:	4770      	bx	lr

08015c16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015c16:	4770      	bx	lr

08015c18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015c18:	4770      	bx	lr

08015c1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015c1a:	4770      	bx	lr

08015c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015c1c:	4770      	bx	lr

08015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015c1e:	4770      	bx	lr

08015c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8015c20:	4770      	bx	lr

08015c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015c22:	4770      	bx	lr

08015c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015c24:	4770      	bx	lr

08015c26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015c26:	4770      	bx	lr

08015c28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015c28:	4770      	bx	lr

08015c2a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015c2a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015c2e:	b088      	sub	sp, #32
 8015c30:	ac08      	add	r4, sp, #32
 8015c32:	4606      	mov	r6, r0
 8015c34:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8015c38:	4620      	mov	r0, r4
 8015c3a:	4688      	mov	r8, r1
 8015c3c:	4691      	mov	r9, r2
 8015c3e:	f7fd fc65 	bl	801350c <_ZNK8touchgfx6Bitmap7getDataEv>
 8015c42:	6833      	ldr	r3, [r6, #0]
 8015c44:	4605      	mov	r5, r0
 8015c46:	4620      	mov	r0, r4
 8015c48:	699f      	ldr	r7, [r3, #24]
 8015c4a:	f7fd fb73 	bl	8013334 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015c4e:	4682      	mov	sl, r0
 8015c50:	4620      	mov	r0, r4
 8015c52:	f7fd fba3 	bl	801339c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015c56:	9500      	str	r5, [sp, #0]
 8015c58:	e9cd a001 	strd	sl, r0, [sp, #4]
 8015c5c:	464b      	mov	r3, r9
 8015c5e:	a806      	add	r0, sp, #24
 8015c60:	4642      	mov	r2, r8
 8015c62:	4631      	mov	r1, r6
 8015c64:	47b8      	blx	r7
 8015c66:	4628      	mov	r0, r5
 8015c68:	b008      	add	sp, #32
 8015c6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08015c70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8015c70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015c74:	2300      	movs	r3, #0
 8015c76:	9300      	str	r3, [sp, #0]
 8015c78:	4b3d      	ldr	r3, [pc, #244]	; (8015d70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8015c7a:	781b      	ldrb	r3, [r3, #0]
 8015c7c:	2b00      	cmp	r3, #0
 8015c7e:	d137      	bne.n	8015cf0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8015c80:	4a3c      	ldr	r2, [pc, #240]	; (8015d74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015c82:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015c86:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015c8a:	2b00      	cmp	r3, #0
 8015c8c:	d132      	bne.n	8015cf4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015c8e:	4b3a      	ldr	r3, [pc, #232]	; (8015d78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015c90:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015c94:	6808      	ldr	r0, [r1, #0]
 8015c96:	6849      	ldr	r1, [r1, #4]
 8015c98:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015c9c:	ac02      	add	r4, sp, #8
 8015c9e:	ab02      	add	r3, sp, #8
 8015ca0:	c303      	stmia	r3!, {r0, r1}
 8015ca2:	4669      	mov	r1, sp
 8015ca4:	4620      	mov	r0, r4
 8015ca6:	f7f9 ff7f 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015caa:	4668      	mov	r0, sp
 8015cac:	f7f9 ff54 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015cb0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015cb4:	f8bd 2000 	ldrh.w	r2, [sp]
 8015cb8:	4d30      	ldr	r5, [pc, #192]	; (8015d7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015cba:	4413      	add	r3, r2
 8015cbc:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015cc0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8015cc4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015cc8:	6828      	ldr	r0, [r5, #0]
 8015cca:	4413      	add	r3, r2
 8015ccc:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015cd0:	6803      	ldr	r3, [r0, #0]
 8015cd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015cd4:	4798      	blx	r3
 8015cd6:	f010 0f01 	tst.w	r0, #1
 8015cda:	462f      	mov	r7, r5
 8015cdc:	d00c      	beq.n	8015cf8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015cde:	6828      	ldr	r0, [r5, #0]
 8015ce0:	6803      	ldr	r3, [r0, #0]
 8015ce2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8015ce6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8015ce8:	4798      	blx	r3
 8015cea:	b004      	add	sp, #16
 8015cec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015cf0:	4a21      	ldr	r2, [pc, #132]	; (8015d78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015cf2:	e7c6      	b.n	8015c82 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8015cf4:	4b1f      	ldr	r3, [pc, #124]	; (8015d74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015cf6:	e7cb      	b.n	8015c90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015cf8:	6838      	ldr	r0, [r7, #0]
 8015cfa:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015cfe:	6803      	ldr	r3, [r0, #0]
 8015d00:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8015d04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015d06:	4798      	blx	r3
 8015d08:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015d0c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015d10:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8015d14:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015d18:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015d1c:	6838      	ldr	r0, [r7, #0]
 8015d1e:	6803      	ldr	r3, [r0, #0]
 8015d20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015d22:	4798      	blx	r3
 8015d24:	4a13      	ldr	r2, [pc, #76]	; (8015d74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015d26:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8015d2a:	8813      	ldrh	r3, [r2, #0]
 8015d2c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015d30:	fb03 1404 	mla	r4, r3, r4, r1
 8015d34:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015d38:	435d      	muls	r5, r3
 8015d3a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015d3e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015d42:	4691      	mov	r9, r2
 8015d44:	6838      	ldr	r0, [r7, #0]
 8015d46:	42ac      	cmp	r4, r5
 8015d48:	6803      	ldr	r3, [r0, #0]
 8015d4a:	d20e      	bcs.n	8015d6a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015d4c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8015d50:	4632      	mov	r2, r6
 8015d52:	4643      	mov	r3, r8
 8015d54:	4621      	mov	r1, r4
 8015d56:	47d0      	blx	sl
 8015d58:	f8b9 3000 	ldrh.w	r3, [r9]
 8015d5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015d60:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015d64:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015d68:	e7ec      	b.n	8015d44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8015d6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015d6c:	4798      	blx	r3
 8015d6e:	e7bc      	b.n	8015cea <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8015d70:	2001755c 	.word	0x2001755c
 8015d74:	2001755e 	.word	0x2001755e
 8015d78:	20017560 	.word	0x20017560
 8015d7c:	20017564 	.word	0x20017564

08015d80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d84:	b08b      	sub	sp, #44	; 0x2c
 8015d86:	460f      	mov	r7, r1
 8015d88:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8015d8c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8015d90:	4616      	mov	r6, r2
 8015d92:	f1bb 0f00 	cmp.w	fp, #0
 8015d96:	d049      	beq.n	8015e2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8015d98:	6810      	ldr	r0, [r2, #0]
 8015d9a:	6851      	ldr	r1, [r2, #4]
 8015d9c:	ad06      	add	r5, sp, #24
 8015d9e:	c503      	stmia	r5!, {r0, r1}
 8015da0:	6818      	ldr	r0, [r3, #0]
 8015da2:	6859      	ldr	r1, [r3, #4]
 8015da4:	ad08      	add	r5, sp, #32
 8015da6:	c503      	stmia	r5!, {r0, r1}
 8015da8:	a806      	add	r0, sp, #24
 8015daa:	f7f9 fed5 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015dae:	4631      	mov	r1, r6
 8015db0:	a808      	add	r0, sp, #32
 8015db2:	f7f9 fef9 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015db6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015dba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015dbe:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8015dc2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8015dc6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8015dca:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015dce:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015dd2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8015dd6:	4f5f      	ldr	r7, [pc, #380]	; (8015f54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015dd8:	440a      	add	r2, r1
 8015dda:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015dde:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015de2:	6838      	ldr	r0, [r7, #0]
 8015de4:	4413      	add	r3, r2
 8015de6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015dea:	6803      	ldr	r3, [r0, #0]
 8015dec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015dee:	4798      	blx	r3
 8015df0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015df4:	46b9      	mov	r9, r7
 8015df6:	d01c      	beq.n	8015e32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8015df8:	f010 0f04 	tst.w	r0, #4
 8015dfc:	d01d      	beq.n	8015e3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015dfe:	f8d9 0000 	ldr.w	r0, [r9]
 8015e02:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8015e06:	6801      	ldr	r1, [r0, #0]
 8015e08:	f8cd b00c 	str.w	fp, [sp, #12]
 8015e0c:	2700      	movs	r7, #0
 8015e0e:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015e12:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015e16:	9402      	str	r4, [sp, #8]
 8015e18:	b2ad      	uxth	r5, r5
 8015e1a:	fa1f f488 	uxth.w	r4, r8
 8015e1e:	9501      	str	r5, [sp, #4]
 8015e20:	9400      	str	r4, [sp, #0]
 8015e22:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8015e24:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015e28:	4631      	mov	r1, r6
 8015e2a:	47a0      	blx	r4
 8015e2c:	b00b      	add	sp, #44	; 0x2c
 8015e2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e32:	b914      	cbnz	r4, 8015e3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015e34:	f010 0f01 	tst.w	r0, #1
 8015e38:	e7e0      	b.n	8015dfc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8015e3a:	f8d9 0000 	ldr.w	r0, [r9]
 8015e3e:	6803      	ldr	r3, [r0, #0]
 8015e40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015e42:	4798      	blx	r3
 8015e44:	4b44      	ldr	r3, [pc, #272]	; (8015f58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8015e46:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8015e4a:	881a      	ldrh	r2, [r3, #0]
 8015e4c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015e50:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015e54:	fb02 1404 	mla	r4, r2, r4, r1
 8015e58:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015e5c:	469a      	mov	sl, r3
 8015e5e:	fb05 f502 	mul.w	r5, r5, r2
 8015e62:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8015e66:	d059      	beq.n	8015f1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8015e68:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8015e6c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015e70:	fa1f f28b 	uxth.w	r2, fp
 8015e74:	fa1f f989 	uxth.w	r9, r9
 8015e78:	469e      	mov	lr, r3
 8015e7a:	42ac      	cmp	r4, r5
 8015e7c:	d264      	bcs.n	8015f48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015e7e:	eb04 0a07 	add.w	sl, r4, r7
 8015e82:	4554      	cmp	r4, sl
 8015e84:	d23d      	bcs.n	8015f02 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8015e86:	8821      	ldrh	r1, [r4, #0]
 8015e88:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015e8c:	1208      	asrs	r0, r1, #8
 8015e8e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015e92:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015e96:	fb10 f009 	smulbb	r0, r0, r9
 8015e9a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015e9e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015ea2:	00c9      	lsls	r1, r1, #3
 8015ea4:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015ea8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015eac:	10d8      	asrs	r0, r3, #3
 8015eae:	b2c9      	uxtb	r1, r1
 8015eb0:	00db      	lsls	r3, r3, #3
 8015eb2:	fa1f fc8c 	uxth.w	ip, ip
 8015eb6:	fb1b fb09 	smulbb	fp, fp, r9
 8015eba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015ebe:	b2db      	uxtb	r3, r3
 8015ec0:	fb11 f109 	smulbb	r1, r1, r9
 8015ec4:	fb00 b002 	mla	r0, r0, r2, fp
 8015ec8:	fb03 1302 	mla	r3, r3, r2, r1
 8015ecc:	f10c 0b01 	add.w	fp, ip, #1
 8015ed0:	b29b      	uxth	r3, r3
 8015ed2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8015ed6:	b280      	uxth	r0, r0
 8015ed8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015edc:	f103 0c01 	add.w	ip, r3, #1
 8015ee0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015ee4:	1c43      	adds	r3, r0, #1
 8015ee6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015eea:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015eee:	0940      	lsrs	r0, r0, #5
 8015ef0:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015ef4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015ef8:	ea4c 0c00 	orr.w	ip, ip, r0
 8015efc:	f824 cb02 	strh.w	ip, [r4], #2
 8015f00:	e7bf      	b.n	8015e82 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8015f02:	f8be 3000 	ldrh.w	r3, [lr]
 8015f06:	eba3 0308 	sub.w	r3, r3, r8
 8015f0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015f0e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015f12:	eba3 0308 	sub.w	r3, r3, r8
 8015f16:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015f1a:	e7ae      	b.n	8015e7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015f1c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015f20:	f8d9 0000 	ldr.w	r0, [r9]
 8015f24:	42ac      	cmp	r4, r5
 8015f26:	6803      	ldr	r3, [r0, #0]
 8015f28:	d20e      	bcs.n	8015f48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015f2a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8015f2e:	4632      	mov	r2, r6
 8015f30:	463b      	mov	r3, r7
 8015f32:	4621      	mov	r1, r4
 8015f34:	47c0      	blx	r8
 8015f36:	f8ba 3000 	ldrh.w	r3, [sl]
 8015f3a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015f3e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015f42:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015f46:	e7eb      	b.n	8015f20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8015f48:	4b02      	ldr	r3, [pc, #8]	; (8015f54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015f4a:	6818      	ldr	r0, [r3, #0]
 8015f4c:	6803      	ldr	r3, [r0, #0]
 8015f4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015f50:	4798      	blx	r3
 8015f52:	e76b      	b.n	8015e2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8015f54:	20017564 	.word	0x20017564
 8015f58:	2001755e 	.word	0x2001755e

08015f5c <_ZN8touchgfx8LCD16bppD0Ev>:
 8015f5c:	b510      	push	{r4, lr}
 8015f5e:	2178      	movs	r1, #120	; 0x78
 8015f60:	4604      	mov	r4, r0
 8015f62:	f009 fad3 	bl	801f50c <_ZdlPvj>
 8015f66:	4620      	mov	r0, r4
 8015f68:	bd10      	pop	{r4, pc}

08015f6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015f6a:	b510      	push	{r4, lr}
 8015f6c:	2104      	movs	r1, #4
 8015f6e:	4604      	mov	r4, r0
 8015f70:	f009 facc 	bl	801f50c <_ZdlPvj>
 8015f74:	4620      	mov	r0, r4
 8015f76:	bd10      	pop	{r4, pc}

08015f78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015f78:	b510      	push	{r4, lr}
 8015f7a:	2104      	movs	r1, #4
 8015f7c:	4604      	mov	r4, r0
 8015f7e:	f009 fac5 	bl	801f50c <_ZdlPvj>
 8015f82:	4620      	mov	r0, r4
 8015f84:	bd10      	pop	{r4, pc}

08015f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015f86:	b510      	push	{r4, lr}
 8015f88:	2104      	movs	r1, #4
 8015f8a:	4604      	mov	r4, r0
 8015f8c:	f009 fabe 	bl	801f50c <_ZdlPvj>
 8015f90:	4620      	mov	r0, r4
 8015f92:	bd10      	pop	{r4, pc}

08015f94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015f94:	b510      	push	{r4, lr}
 8015f96:	2104      	movs	r1, #4
 8015f98:	4604      	mov	r4, r0
 8015f9a:	f009 fab7 	bl	801f50c <_ZdlPvj>
 8015f9e:	4620      	mov	r0, r4
 8015fa0:	bd10      	pop	{r4, pc}

08015fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015fa2:	b510      	push	{r4, lr}
 8015fa4:	2104      	movs	r1, #4
 8015fa6:	4604      	mov	r4, r0
 8015fa8:	f009 fab0 	bl	801f50c <_ZdlPvj>
 8015fac:	4620      	mov	r0, r4
 8015fae:	bd10      	pop	{r4, pc}

08015fb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015fb0:	b510      	push	{r4, lr}
 8015fb2:	2104      	movs	r1, #4
 8015fb4:	4604      	mov	r4, r0
 8015fb6:	f009 faa9 	bl	801f50c <_ZdlPvj>
 8015fba:	4620      	mov	r0, r4
 8015fbc:	bd10      	pop	{r4, pc}

08015fbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015fbe:	b510      	push	{r4, lr}
 8015fc0:	2104      	movs	r1, #4
 8015fc2:	4604      	mov	r4, r0
 8015fc4:	f009 faa2 	bl	801f50c <_ZdlPvj>
 8015fc8:	4620      	mov	r0, r4
 8015fca:	bd10      	pop	{r4, pc}

08015fcc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015fcc:	b510      	push	{r4, lr}
 8015fce:	2104      	movs	r1, #4
 8015fd0:	4604      	mov	r4, r0
 8015fd2:	f009 fa9b 	bl	801f50c <_ZdlPvj>
 8015fd6:	4620      	mov	r0, r4
 8015fd8:	bd10      	pop	{r4, pc}

08015fda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015fda:	b510      	push	{r4, lr}
 8015fdc:	2104      	movs	r1, #4
 8015fde:	4604      	mov	r4, r0
 8015fe0:	f009 fa94 	bl	801f50c <_ZdlPvj>
 8015fe4:	4620      	mov	r0, r4
 8015fe6:	bd10      	pop	{r4, pc}

08015fe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015fe8:	b510      	push	{r4, lr}
 8015fea:	2104      	movs	r1, #4
 8015fec:	4604      	mov	r4, r0
 8015fee:	f009 fa8d 	bl	801f50c <_ZdlPvj>
 8015ff2:	4620      	mov	r0, r4
 8015ff4:	bd10      	pop	{r4, pc}

08015ff6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015ff6:	b510      	push	{r4, lr}
 8015ff8:	2104      	movs	r1, #4
 8015ffa:	4604      	mov	r4, r0
 8015ffc:	f009 fa86 	bl	801f50c <_ZdlPvj>
 8016000:	4620      	mov	r0, r4
 8016002:	bd10      	pop	{r4, pc}

08016004 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016004:	b510      	push	{r4, lr}
 8016006:	2104      	movs	r1, #4
 8016008:	4604      	mov	r4, r0
 801600a:	f009 fa7f 	bl	801f50c <_ZdlPvj>
 801600e:	4620      	mov	r0, r4
 8016010:	bd10      	pop	{r4, pc}

08016012 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016012:	b510      	push	{r4, lr}
 8016014:	2104      	movs	r1, #4
 8016016:	4604      	mov	r4, r0
 8016018:	f009 fa78 	bl	801f50c <_ZdlPvj>
 801601c:	4620      	mov	r0, r4
 801601e:	bd10      	pop	{r4, pc}

08016020 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016020:	b510      	push	{r4, lr}
 8016022:	2104      	movs	r1, #4
 8016024:	4604      	mov	r4, r0
 8016026:	f009 fa71 	bl	801f50c <_ZdlPvj>
 801602a:	4620      	mov	r0, r4
 801602c:	bd10      	pop	{r4, pc}

0801602e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801602e:	b510      	push	{r4, lr}
 8016030:	2104      	movs	r1, #4
 8016032:	4604      	mov	r4, r0
 8016034:	f009 fa6a 	bl	801f50c <_ZdlPvj>
 8016038:	4620      	mov	r0, r4
 801603a:	bd10      	pop	{r4, pc}

0801603c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801603c:	b510      	push	{r4, lr}
 801603e:	2104      	movs	r1, #4
 8016040:	4604      	mov	r4, r0
 8016042:	f009 fa63 	bl	801f50c <_ZdlPvj>
 8016046:	4620      	mov	r0, r4
 8016048:	bd10      	pop	{r4, pc}

0801604a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801604a:	b510      	push	{r4, lr}
 801604c:	2104      	movs	r1, #4
 801604e:	4604      	mov	r4, r0
 8016050:	f009 fa5c 	bl	801f50c <_ZdlPvj>
 8016054:	4620      	mov	r0, r4
 8016056:	bd10      	pop	{r4, pc}

08016058 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016058:	b510      	push	{r4, lr}
 801605a:	2104      	movs	r1, #4
 801605c:	4604      	mov	r4, r0
 801605e:	f009 fa55 	bl	801f50c <_ZdlPvj>
 8016062:	4620      	mov	r0, r4
 8016064:	bd10      	pop	{r4, pc}

08016066 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016066:	b510      	push	{r4, lr}
 8016068:	2104      	movs	r1, #4
 801606a:	4604      	mov	r4, r0
 801606c:	f009 fa4e 	bl	801f50c <_ZdlPvj>
 8016070:	4620      	mov	r0, r4
 8016072:	bd10      	pop	{r4, pc}

08016074 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016074:	b510      	push	{r4, lr}
 8016076:	2104      	movs	r1, #4
 8016078:	4604      	mov	r4, r0
 801607a:	f009 fa47 	bl	801f50c <_ZdlPvj>
 801607e:	4620      	mov	r0, r4
 8016080:	bd10      	pop	{r4, pc}

08016082 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016082:	b510      	push	{r4, lr}
 8016084:	2104      	movs	r1, #4
 8016086:	4604      	mov	r4, r0
 8016088:	f009 fa40 	bl	801f50c <_ZdlPvj>
 801608c:	4620      	mov	r0, r4
 801608e:	bd10      	pop	{r4, pc}

08016090 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016090:	b510      	push	{r4, lr}
 8016092:	2104      	movs	r1, #4
 8016094:	4604      	mov	r4, r0
 8016096:	f009 fa39 	bl	801f50c <_ZdlPvj>
 801609a:	4620      	mov	r0, r4
 801609c:	bd10      	pop	{r4, pc}

0801609e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801609e:	b510      	push	{r4, lr}
 80160a0:	2104      	movs	r1, #4
 80160a2:	4604      	mov	r4, r0
 80160a4:	f009 fa32 	bl	801f50c <_ZdlPvj>
 80160a8:	4620      	mov	r0, r4
 80160aa:	bd10      	pop	{r4, pc}

080160ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80160ac:	b510      	push	{r4, lr}
 80160ae:	2104      	movs	r1, #4
 80160b0:	4604      	mov	r4, r0
 80160b2:	f009 fa2b 	bl	801f50c <_ZdlPvj>
 80160b6:	4620      	mov	r0, r4
 80160b8:	bd10      	pop	{r4, pc}

080160ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80160ba:	b510      	push	{r4, lr}
 80160bc:	2104      	movs	r1, #4
 80160be:	4604      	mov	r4, r0
 80160c0:	f009 fa24 	bl	801f50c <_ZdlPvj>
 80160c4:	4620      	mov	r0, r4
 80160c6:	bd10      	pop	{r4, pc}

080160c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80160c8:	b510      	push	{r4, lr}
 80160ca:	2104      	movs	r1, #4
 80160cc:	4604      	mov	r4, r0
 80160ce:	f009 fa1d 	bl	801f50c <_ZdlPvj>
 80160d2:	4620      	mov	r0, r4
 80160d4:	bd10      	pop	{r4, pc}

080160d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80160d6:	b510      	push	{r4, lr}
 80160d8:	2104      	movs	r1, #4
 80160da:	4604      	mov	r4, r0
 80160dc:	f009 fa16 	bl	801f50c <_ZdlPvj>
 80160e0:	4620      	mov	r0, r4
 80160e2:	bd10      	pop	{r4, pc}

080160e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80160e4:	b510      	push	{r4, lr}
 80160e6:	2104      	movs	r1, #4
 80160e8:	4604      	mov	r4, r0
 80160ea:	f009 fa0f 	bl	801f50c <_ZdlPvj>
 80160ee:	4620      	mov	r0, r4
 80160f0:	bd10      	pop	{r4, pc}
	...

080160f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80160f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80160f8:	b091      	sub	sp, #68	; 0x44
 80160fa:	469b      	mov	fp, r3
 80160fc:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8016100:	4616      	mov	r6, r2
 8016102:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8016106:	f9b3 2000 	ldrsh.w	r2, [r3]
 801610a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801610e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8016112:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016116:	4604      	mov	r4, r0
 8016118:	460d      	mov	r5, r1
 801611a:	4640      	mov	r0, r8
 801611c:	4659      	mov	r1, fp
 801611e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016122:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8016126:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801612a:	f7f3 ff77 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 801612e:	4631      	mov	r1, r6
 8016130:	4640      	mov	r0, r8
 8016132:	f7f3 ff73 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 8016136:	4b74      	ldr	r3, [pc, #464]	; (8016308 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8016138:	8818      	ldrh	r0, [r3, #0]
 801613a:	4b74      	ldr	r3, [pc, #464]	; (801630c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801613c:	8819      	ldrh	r1, [r3, #0]
 801613e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016142:	2b00      	cmp	r3, #0
 8016144:	b202      	sxth	r2, r0
 8016146:	b20e      	sxth	r6, r1
 8016148:	da07      	bge.n	801615a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801614a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801614e:	4463      	add	r3, ip
 8016150:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016154:	2300      	movs	r3, #0
 8016156:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801615a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801615e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8016162:	1ad2      	subs	r2, r2, r3
 8016164:	4594      	cmp	ip, r2
 8016166:	bfc4      	itt	gt
 8016168:	1ac2      	subgt	r2, r0, r3
 801616a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801616e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016172:	2a00      	cmp	r2, #0
 8016174:	da07      	bge.n	8016186 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8016176:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801617a:	4462      	add	r2, ip
 801617c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016180:	2200      	movs	r2, #0
 8016182:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016186:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801618a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801618e:	eba6 060a 	sub.w	r6, r6, sl
 8016192:	42b2      	cmp	r2, r6
 8016194:	bfc4      	itt	gt
 8016196:	eba1 020a 	subgt.w	r2, r1, sl
 801619a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801619e:	4a5c      	ldr	r2, [pc, #368]	; (8016310 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80161a0:	7812      	ldrb	r2, [r2, #0]
 80161a2:	b9a2      	cbnz	r2, 80161ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80161a4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80161a8:	4286      	cmp	r6, r0
 80161aa:	4640      	mov	r0, r8
 80161ac:	9303      	str	r3, [sp, #12]
 80161ae:	bf14      	ite	ne
 80161b0:	2600      	movne	r6, #0
 80161b2:	2601      	moveq	r6, #1
 80161b4:	f7f3 ff75 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80161b8:	9b03      	ldr	r3, [sp, #12]
 80161ba:	b160      	cbz	r0, 80161d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80161bc:	2300      	movs	r3, #0
 80161be:	8023      	strh	r3, [r4, #0]
 80161c0:	8063      	strh	r3, [r4, #2]
 80161c2:	80a3      	strh	r3, [r4, #4]
 80161c4:	4620      	mov	r0, r4
 80161c6:	80e3      	strh	r3, [r4, #6]
 80161c8:	b011      	add	sp, #68	; 0x44
 80161ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80161ce:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80161d2:	428e      	cmp	r6, r1
 80161d4:	e7e9      	b.n	80161aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80161d6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80161da:	9205      	str	r2, [sp, #20]
 80161dc:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80161e0:	9206      	str	r2, [sp, #24]
 80161e2:	f8bb 2000 	ldrh.w	r2, [fp]
 80161e6:	900e      	str	r0, [sp, #56]	; 0x38
 80161e8:	1a9b      	subs	r3, r3, r2
 80161ea:	b21b      	sxth	r3, r3
 80161ec:	9303      	str	r3, [sp, #12]
 80161ee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80161f2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80161f6:	ebaa 0a03 	sub.w	sl, sl, r3
 80161fa:	fa0f f38a 	sxth.w	r3, sl
 80161fe:	9304      	str	r3, [sp, #16]
 8016200:	9b03      	ldr	r3, [sp, #12]
 8016202:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8016206:	9b04      	ldr	r3, [sp, #16]
 8016208:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801620c:	9b05      	ldr	r3, [sp, #20]
 801620e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8016212:	a90e      	add	r1, sp, #56	; 0x38
 8016214:	9b06      	ldr	r3, [sp, #24]
 8016216:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801621a:	a80c      	add	r0, sp, #48	; 0x30
 801621c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8016220:	f7f9 fcc2 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016224:	4640      	mov	r0, r8
 8016226:	f7f9 fc97 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801622a:	a80e      	add	r0, sp, #56	; 0x38
 801622c:	f7f9 fc94 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016230:	4b38      	ldr	r3, [pc, #224]	; (8016314 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8016232:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8016236:	881b      	ldrh	r3, [r3, #0]
 8016238:	9307      	str	r3, [sp, #28]
 801623a:	682b      	ldr	r3, [r5, #0]
 801623c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8016318 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8016240:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016242:	4628      	mov	r0, r5
 8016244:	4798      	blx	r3
 8016246:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801624a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801624e:	4681      	mov	r9, r0
 8016250:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8016254:	f8db 0000 	ldr.w	r0, [fp]
 8016258:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801625a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801625e:	6803      	ldr	r3, [r0, #0]
 8016260:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016262:	4798      	blx	r3
 8016264:	4607      	mov	r7, r0
 8016266:	f8db 0000 	ldr.w	r0, [fp]
 801626a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801626e:	6803      	ldr	r3, [r0, #0]
 8016270:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016274:	9109      	str	r1, [sp, #36]	; 0x24
 8016276:	9208      	str	r2, [sp, #32]
 8016278:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801627a:	4798      	blx	r3
 801627c:	f010 0f01 	tst.w	r0, #1
 8016280:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016284:	d012      	beq.n	80162ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8016286:	f8db 0000 	ldr.w	r0, [fp]
 801628a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801628e:	6803      	ldr	r3, [r0, #0]
 8016290:	9200      	str	r2, [sp, #0]
 8016292:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8016294:	e898 0006 	ldmia.w	r8, {r1, r2}
 8016298:	462b      	mov	r3, r5
 801629a:	47b0      	blx	r6
 801629c:	9b03      	ldr	r3, [sp, #12]
 801629e:	8023      	strh	r3, [r4, #0]
 80162a0:	9b04      	ldr	r3, [sp, #16]
 80162a2:	8063      	strh	r3, [r4, #2]
 80162a4:	9b05      	ldr	r3, [sp, #20]
 80162a6:	80a3      	strh	r3, [r4, #4]
 80162a8:	9b06      	ldr	r3, [sp, #24]
 80162aa:	e78b      	b.n	80161c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80162ac:	fb09 f202 	mul.w	r2, r9, r2
 80162b0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80162b4:	440f      	add	r7, r1
 80162b6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 80162ba:	b166      	cbz	r6, 80162d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80162bc:	9a07      	ldr	r2, [sp, #28]
 80162be:	4592      	cmp	sl, r2
 80162c0:	d109      	bne.n	80162d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80162c2:	f8db 0000 	ldr.w	r0, [fp]
 80162c6:	6802      	ldr	r2, [r0, #0]
 80162c8:	fb09 f303 	mul.w	r3, r9, r3
 80162cc:	6b56      	ldr	r6, [r2, #52]	; 0x34
 80162ce:	4629      	mov	r1, r5
 80162d0:	463a      	mov	r2, r7
 80162d2:	47b0      	blx	r6
 80162d4:	e7e2      	b.n	801629c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80162d6:	fb0a f303 	mul.w	r3, sl, r3
 80162da:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8016318 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80162de:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80162e2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80162e6:	4545      	cmp	r5, r8
 80162e8:	d2d8      	bcs.n	801629c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80162ea:	f8db 0000 	ldr.w	r0, [fp]
 80162ee:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80162f2:	6802      	ldr	r2, [r0, #0]
 80162f4:	4629      	mov	r1, r5
 80162f6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80162fa:	005b      	lsls	r3, r3, #1
 80162fc:	463a      	mov	r2, r7
 80162fe:	47d0      	blx	sl
 8016300:	444f      	add	r7, r9
 8016302:	4435      	add	r5, r6
 8016304:	e7ef      	b.n	80162e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8016306:	bf00      	nop
 8016308:	20017558 	.word	0x20017558
 801630c:	2001755a 	.word	0x2001755a
 8016310:	2001755c 	.word	0x2001755c
 8016314:	2001755e 	.word	0x2001755e
 8016318:	20017564 	.word	0x20017564

0801631c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801631c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801631e:	4606      	mov	r6, r0
 8016320:	b087      	sub	sp, #28
 8016322:	460c      	mov	r4, r1
 8016324:	4617      	mov	r7, r2
 8016326:	461d      	mov	r5, r3
 8016328:	b333      	cbz	r3, 8016378 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801632a:	4608      	mov	r0, r1
 801632c:	f7f3 feb9 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016330:	bb10      	cbnz	r0, 8016378 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016332:	6820      	ldr	r0, [r4, #0]
 8016334:	6861      	ldr	r1, [r4, #4]
 8016336:	4c1c      	ldr	r4, [pc, #112]	; (80163a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8016338:	ab04      	add	r3, sp, #16
 801633a:	c303      	stmia	r3!, {r0, r1}
 801633c:	a804      	add	r0, sp, #16
 801633e:	f7f9 fc0b 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016342:	6820      	ldr	r0, [r4, #0]
 8016344:	6803      	ldr	r3, [r0, #0]
 8016346:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016348:	4798      	blx	r3
 801634a:	2dff      	cmp	r5, #255	; 0xff
 801634c:	d016      	beq.n	801637c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801634e:	f010 0f08 	tst.w	r0, #8
 8016352:	6820      	ldr	r0, [r4, #0]
 8016354:	d015      	beq.n	8016382 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8016356:	2400      	movs	r4, #0
 8016358:	6801      	ldr	r1, [r0, #0]
 801635a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801635e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016362:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8016366:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801636a:	9401      	str	r4, [sp, #4]
 801636c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8016370:	9400      	str	r4, [sp, #0]
 8016372:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8016374:	4639      	mov	r1, r7
 8016376:	47a0      	blx	r4
 8016378:	b007      	add	sp, #28
 801637a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801637c:	f010 0f02 	tst.w	r0, #2
 8016380:	e7e7      	b.n	8016352 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8016382:	6803      	ldr	r3, [r0, #0]
 8016384:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016386:	4798      	blx	r3
 8016388:	4b08      	ldr	r3, [pc, #32]	; (80163ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801638a:	881a      	ldrh	r2, [r3, #0]
 801638c:	6833      	ldr	r3, [r6, #0]
 801638e:	e9cd 7500 	strd	r7, r5, [sp]
 8016392:	4601      	mov	r1, r0
 8016394:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8016396:	4630      	mov	r0, r6
 8016398:	ab04      	add	r3, sp, #16
 801639a:	47a8      	blx	r5
 801639c:	6820      	ldr	r0, [r4, #0]
 801639e:	6803      	ldr	r3, [r0, #0]
 80163a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80163a2:	4798      	blx	r3
 80163a4:	e7e8      	b.n	8016378 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80163a6:	bf00      	nop
 80163a8:	20017564 	.word	0x20017564
 80163ac:	2001755e 	.word	0x2001755e

080163b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80163b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80163b4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80163b8:	9e08      	ldr	r6, [sp, #32]
 80163ba:	4688      	mov	r8, r1
 80163bc:	4614      	mov	r4, r2
 80163be:	461d      	mov	r5, r3
 80163c0:	2f00      	cmp	r7, #0
 80163c2:	f000 80a9 	beq.w	8016518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80163c6:	4618      	mov	r0, r3
 80163c8:	f7f3 fe6b 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80163cc:	2800      	cmp	r0, #0
 80163ce:	f040 80a3 	bne.w	8016518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80163d2:	f9b5 1000 	ldrsh.w	r1, [r5]
 80163d6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80163da:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80163de:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80163e2:	fb04 1303 	mla	r3, r4, r3, r1
 80163e6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80163ea:	4365      	muls	r5, r4
 80163ec:	2fff      	cmp	r7, #255	; 0xff
 80163ee:	eba4 0200 	sub.w	r2, r4, r0
 80163f2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80163f6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80163fa:	d04a      	beq.n	8016492 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80163fc:	b2bc      	uxth	r4, r7
 80163fe:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8016402:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8016406:	fa5f f788 	uxtb.w	r7, r8
 801640a:	b2f3      	uxtb	r3, r6
 801640c:	0040      	lsls	r0, r0, #1
 801640e:	fb0e fe04 	mul.w	lr, lr, r4
 8016412:	4367      	muls	r7, r4
 8016414:	4363      	muls	r3, r4
 8016416:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801641a:	fa1f fc8c 	uxth.w	ip, ip
 801641e:	42a9      	cmp	r1, r5
 8016420:	d27a      	bcs.n	8016518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016422:	eb01 0900 	add.w	r9, r1, r0
 8016426:	4549      	cmp	r1, r9
 8016428:	d231      	bcs.n	801648e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801642a:	880a      	ldrh	r2, [r1, #0]
 801642c:	1214      	asrs	r4, r2, #8
 801642e:	10d6      	asrs	r6, r2, #3
 8016430:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8016434:	00d2      	lsls	r2, r2, #3
 8016436:	b2d2      	uxtb	r2, r2
 8016438:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801643c:	fb14 f40c 	smulbb	r4, r4, ip
 8016440:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016444:	4474      	add	r4, lr
 8016446:	fb12 f20c 	smulbb	r2, r2, ip
 801644a:	b2a4      	uxth	r4, r4
 801644c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016450:	441a      	add	r2, r3
 8016452:	b292      	uxth	r2, r2
 8016454:	f104 0a01 	add.w	sl, r4, #1
 8016458:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801645c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016460:	fb16 f60c 	smulbb	r6, r6, ip
 8016464:	f102 0a01 	add.w	sl, r2, #1
 8016468:	443e      	add	r6, r7
 801646a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801646e:	b2b6      	uxth	r6, r6
 8016470:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8016474:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016478:	4322      	orrs	r2, r4
 801647a:	1c74      	adds	r4, r6, #1
 801647c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8016480:	0976      	lsrs	r6, r6, #5
 8016482:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016486:	4332      	orrs	r2, r6
 8016488:	f821 2b02 	strh.w	r2, [r1], #2
 801648c:	e7cb      	b.n	8016426 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801648e:	4441      	add	r1, r8
 8016490:	e7c5      	b.n	801641e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8016492:	4f22      	ldr	r7, [pc, #136]	; (801651c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8016494:	0973      	lsrs	r3, r6, #5
 8016496:	ea08 0707 	and.w	r7, r8, r7
 801649a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801649e:	433b      	orrs	r3, r7
 80164a0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80164a4:	4333      	orrs	r3, r6
 80164a6:	07e7      	lsls	r7, r4, #31
 80164a8:	b29b      	uxth	r3, r3
 80164aa:	d50b      	bpl.n	80164c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80164ac:	0040      	lsls	r0, r0, #1
 80164ae:	0052      	lsls	r2, r2, #1
 80164b0:	42a9      	cmp	r1, r5
 80164b2:	d231      	bcs.n	8016518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80164b4:	180c      	adds	r4, r1, r0
 80164b6:	42a1      	cmp	r1, r4
 80164b8:	d202      	bcs.n	80164c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80164ba:	f821 3b02 	strh.w	r3, [r1], #2
 80164be:	e7fa      	b.n	80164b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80164c0:	4411      	add	r1, r2
 80164c2:	e7f5      	b.n	80164b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80164c4:	078e      	lsls	r6, r1, #30
 80164c6:	d008      	beq.n	80164da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80164c8:	0066      	lsls	r6, r4, #1
 80164ca:	460a      	mov	r2, r1
 80164cc:	42aa      	cmp	r2, r5
 80164ce:	d202      	bcs.n	80164d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80164d0:	8013      	strh	r3, [r2, #0]
 80164d2:	4432      	add	r2, r6
 80164d4:	e7fa      	b.n	80164cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80164d6:	3102      	adds	r1, #2
 80164d8:	3801      	subs	r0, #1
 80164da:	07c2      	lsls	r2, r0, #31
 80164dc:	d50b      	bpl.n	80164f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80164de:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80164e2:	3a01      	subs	r2, #1
 80164e4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80164e8:	0066      	lsls	r6, r4, #1
 80164ea:	42aa      	cmp	r2, r5
 80164ec:	d202      	bcs.n	80164f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80164ee:	8013      	strh	r3, [r2, #0]
 80164f0:	4432      	add	r2, r6
 80164f2:	e7fa      	b.n	80164ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80164f4:	3801      	subs	r0, #1
 80164f6:	b178      	cbz	r0, 8016518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80164f8:	1040      	asrs	r0, r0, #1
 80164fa:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80164fe:	0080      	lsls	r0, r0, #2
 8016500:	0064      	lsls	r4, r4, #1
 8016502:	42a9      	cmp	r1, r5
 8016504:	d208      	bcs.n	8016518 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016506:	180e      	adds	r6, r1, r0
 8016508:	460a      	mov	r2, r1
 801650a:	42b2      	cmp	r2, r6
 801650c:	d202      	bcs.n	8016514 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801650e:	f842 3b04 	str.w	r3, [r2], #4
 8016512:	e7fa      	b.n	801650a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8016514:	4421      	add	r1, r4
 8016516:	e7f4      	b.n	8016502 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8016518:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801651c:	00fff800 	.word	0x00fff800

08016520 <_ZN8touchgfx8LCD16bppC1Ev>:
 8016520:	2200      	movs	r2, #0
 8016522:	4910      	ldr	r1, [pc, #64]	; (8016564 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8016524:	6042      	str	r2, [r0, #4]
 8016526:	6001      	str	r1, [r0, #0]
 8016528:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801652c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8016530:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8016534:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8016538:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801653c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8016540:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8016544:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8016548:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801654c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8016550:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8016554:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8016558:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801655c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8016560:	4770      	bx	lr
 8016562:	bf00      	nop
 8016564:	08022fe0 	.word	0x08022fe0

08016568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8016568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801656c:	460d      	mov	r5, r1
 801656e:	b08d      	sub	sp, #52	; 0x34
 8016570:	4604      	mov	r4, r0
 8016572:	6808      	ldr	r0, [r1, #0]
 8016574:	6849      	ldr	r1, [r1, #4]
 8016576:	4699      	mov	r9, r3
 8016578:	ab08      	add	r3, sp, #32
 801657a:	c303      	stmia	r3!, {r0, r1}
 801657c:	6810      	ldr	r0, [r2, #0]
 801657e:	6851      	ldr	r1, [r2, #4]
 8016580:	ab0a      	add	r3, sp, #40	; 0x28
 8016582:	c303      	stmia	r3!, {r0, r1}
 8016584:	a808      	add	r0, sp, #32
 8016586:	f7f9 fae7 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801658a:	4629      	mov	r1, r5
 801658c:	a80a      	add	r0, sp, #40	; 0x28
 801658e:	f7f9 fb0b 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016592:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8016596:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801659a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801659e:	4d63      	ldr	r5, [pc, #396]	; (801672c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80165a0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80165a4:	6828      	ldr	r0, [r5, #0]
 80165a6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80165aa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80165ae:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80165b2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80165b6:	440a      	add	r2, r1
 80165b8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80165bc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80165c0:	4413      	add	r3, r2
 80165c2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80165c6:	6803      	ldr	r3, [r0, #0]
 80165c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80165ca:	4798      	blx	r3
 80165cc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80165d0:	d119      	bne.n	8016606 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80165d2:	f010 0f20 	tst.w	r0, #32
 80165d6:	6828      	ldr	r0, [r5, #0]
 80165d8:	d018      	beq.n	801660c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80165da:	2500      	movs	r5, #0
 80165dc:	6801      	ldr	r1, [r0, #0]
 80165de:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80165e2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80165e6:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80165ea:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 80165ee:	9502      	str	r5, [sp, #8]
 80165f0:	b2b6      	uxth	r6, r6
 80165f2:	fa1f f588 	uxth.w	r5, r8
 80165f6:	9601      	str	r6, [sp, #4]
 80165f8:	9500      	str	r5, [sp, #0]
 80165fa:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80165fc:	4621      	mov	r1, r4
 80165fe:	47a8      	blx	r5
 8016600:	b00d      	add	sp, #52	; 0x34
 8016602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016606:	f010 0f40 	tst.w	r0, #64	; 0x40
 801660a:	e7e4      	b.n	80165d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801660c:	6803      	ldr	r3, [r0, #0]
 801660e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016610:	4798      	blx	r3
 8016612:	4947      	ldr	r1, [pc, #284]	; (8016730 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8016614:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016618:	880b      	ldrh	r3, [r1, #0]
 801661a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801661e:	fb03 5202 	mla	r2, r3, r2, r5
 8016622:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016626:	4373      	muls	r3, r6
 8016628:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801662c:	9307      	str	r3, [sp, #28]
 801662e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016632:	9306      	str	r3, [sp, #24]
 8016634:	468a      	mov	sl, r1
 8016636:	9b07      	ldr	r3, [sp, #28]
 8016638:	4298      	cmp	r0, r3
 801663a:	d270      	bcs.n	801671e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801663c:	9b06      	ldr	r3, [sp, #24]
 801663e:	4621      	mov	r1, r4
 8016640:	eb00 0b03 	add.w	fp, r0, r3
 8016644:	4558      	cmp	r0, fp
 8016646:	d25d      	bcs.n	8016704 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8016648:	f851 4b04 	ldr.w	r4, [r1], #4
 801664c:	0e23      	lsrs	r3, r4, #24
 801664e:	d014      	beq.n	801667a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8016650:	2bff      	cmp	r3, #255	; 0xff
 8016652:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8016656:	d112      	bne.n	801667e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8016658:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801665c:	d10f      	bne.n	801667e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801665e:	0963      	lsrs	r3, r4, #5
 8016660:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8016664:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016668:	f02c 0c07 	bic.w	ip, ip, #7
 801666c:	ea43 0c0c 	orr.w	ip, r3, ip
 8016670:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016674:	ea4c 0404 	orr.w	r4, ip, r4
 8016678:	8004      	strh	r4, [r0, #0]
 801667a:	3002      	adds	r0, #2
 801667c:	e7e2      	b.n	8016644 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801667e:	fb09 f303 	mul.w	r3, r9, r3
 8016682:	8807      	ldrh	r7, [r0, #0]
 8016684:	1c5a      	adds	r2, r3, #1
 8016686:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801668a:	1212      	asrs	r2, r2, #8
 801668c:	123e      	asrs	r6, r7, #8
 801668e:	b293      	uxth	r3, r2
 8016690:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8016694:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016698:	43d2      	mvns	r2, r2
 801669a:	b2d2      	uxtb	r2, r2
 801669c:	10fd      	asrs	r5, r7, #3
 801669e:	fb1e fe03 	smulbb	lr, lr, r3
 80166a2:	00ff      	lsls	r7, r7, #3
 80166a4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80166a8:	fb06 e602 	mla	r6, r6, r2, lr
 80166ac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80166b0:	b2ff      	uxtb	r7, r7
 80166b2:	fa5f fc8c 	uxtb.w	ip, ip
 80166b6:	b2e4      	uxtb	r4, r4
 80166b8:	b2b6      	uxth	r6, r6
 80166ba:	fb1c fc03 	smulbb	ip, ip, r3
 80166be:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80166c2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80166c6:	fb14 f403 	smulbb	r4, r4, r3
 80166ca:	fb05 c502 	mla	r5, r5, r2, ip
 80166ce:	f106 0e01 	add.w	lr, r6, #1
 80166d2:	fb07 4702 	mla	r7, r7, r2, r4
 80166d6:	b2ad      	uxth	r5, r5
 80166d8:	b2bf      	uxth	r7, r7
 80166da:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80166de:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 80166e2:	f105 0c01 	add.w	ip, r5, #1
 80166e6:	1c7e      	adds	r6, r7, #1
 80166e8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80166ec:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80166f0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80166f4:	096d      	lsrs	r5, r5, #5
 80166f6:	ea46 060e 	orr.w	r6, r6, lr
 80166fa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80166fe:	432e      	orrs	r6, r5
 8016700:	8006      	strh	r6, [r0, #0]
 8016702:	e7ba      	b.n	801667a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8016704:	f8ba 3000 	ldrh.w	r3, [sl]
 8016708:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801670c:	eba3 0308 	sub.w	r3, r3, r8
 8016710:	eba4 0408 	sub.w	r4, r4, r8
 8016714:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016718:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801671c:	e78b      	b.n	8016636 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801671e:	4b03      	ldr	r3, [pc, #12]	; (801672c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8016720:	6818      	ldr	r0, [r3, #0]
 8016722:	6803      	ldr	r3, [r0, #0]
 8016724:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016726:	4798      	blx	r3
 8016728:	e76a      	b.n	8016600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801672a:	bf00      	nop
 801672c:	20017564 	.word	0x20017564
 8016730:	2001755e 	.word	0x2001755e

08016734 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8016734:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016738:	460c      	mov	r4, r1
 801673a:	b085      	sub	sp, #20
 801673c:	6810      	ldr	r0, [r2, #0]
 801673e:	6851      	ldr	r1, [r2, #4]
 8016740:	466d      	mov	r5, sp
 8016742:	c503      	stmia	r5!, {r0, r1}
 8016744:	6818      	ldr	r0, [r3, #0]
 8016746:	6859      	ldr	r1, [r3, #4]
 8016748:	4616      	mov	r6, r2
 801674a:	c503      	stmia	r5!, {r0, r1}
 801674c:	4668      	mov	r0, sp
 801674e:	f7f9 fa03 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016752:	4631      	mov	r1, r6
 8016754:	a802      	add	r0, sp, #8
 8016756:	f7f9 fa27 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801675a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801675e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8016762:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016766:	4d28      	ldr	r5, [pc, #160]	; (8016808 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8016768:	4e28      	ldr	r6, [pc, #160]	; (801680c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801676a:	6828      	ldr	r0, [r5, #0]
 801676c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016770:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8016774:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016778:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801677c:	f8bd 1000 	ldrh.w	r1, [sp]
 8016780:	440a      	add	r2, r1
 8016782:	f8ad 2008 	strh.w	r2, [sp, #8]
 8016786:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801678a:	4413      	add	r3, r2
 801678c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016790:	6803      	ldr	r3, [r0, #0]
 8016792:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016794:	4798      	blx	r3
 8016796:	8833      	ldrh	r3, [r6, #0]
 8016798:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801679c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80167a0:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8016810 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80167a4:	fb03 1202 	mla	r2, r3, r2, r1
 80167a8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80167ac:	fb08 f303 	mul.w	r3, r8, r3
 80167b0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80167b4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80167b8:	4298      	cmp	r0, r3
 80167ba:	d21d      	bcs.n	80167f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80167bc:	eb00 080c 	add.w	r8, r0, ip
 80167c0:	4540      	cmp	r0, r8
 80167c2:	d20f      	bcs.n	80167e4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80167c4:	f854 1b04 	ldr.w	r1, [r4], #4
 80167c8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80167cc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80167d0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80167d4:	ea42 0209 	orr.w	r2, r2, r9
 80167d8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80167dc:	430a      	orrs	r2, r1
 80167de:	f820 2b02 	strh.w	r2, [r0], #2
 80167e2:	e7ed      	b.n	80167c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80167e4:	8832      	ldrh	r2, [r6, #0]
 80167e6:	1bd2      	subs	r2, r2, r7
 80167e8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80167ec:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80167f0:	1bd2      	subs	r2, r2, r7
 80167f2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80167f6:	e7df      	b.n	80167b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80167f8:	6828      	ldr	r0, [r5, #0]
 80167fa:	6803      	ldr	r3, [r0, #0]
 80167fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80167fe:	4798      	blx	r3
 8016800:	b005      	add	sp, #20
 8016802:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016806:	bf00      	nop
 8016808:	20017564 	.word	0x20017564
 801680c:	2001755e 	.word	0x2001755e
 8016810:	fffff800 	.word	0xfffff800

08016814 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8016814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016818:	460e      	mov	r6, r1
 801681a:	b08e      	sub	sp, #56	; 0x38
 801681c:	4604      	mov	r4, r0
 801681e:	6808      	ldr	r0, [r1, #0]
 8016820:	6849      	ldr	r1, [r1, #4]
 8016822:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80169fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8016826:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8016a00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801682a:	461d      	mov	r5, r3
 801682c:	ab0a      	add	r3, sp, #40	; 0x28
 801682e:	c303      	stmia	r3!, {r0, r1}
 8016830:	6810      	ldr	r0, [r2, #0]
 8016832:	6851      	ldr	r1, [r2, #4]
 8016834:	ab0c      	add	r3, sp, #48	; 0x30
 8016836:	c303      	stmia	r3!, {r0, r1}
 8016838:	a80a      	add	r0, sp, #40	; 0x28
 801683a:	f7f9 f98d 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801683e:	4631      	mov	r1, r6
 8016840:	a80c      	add	r0, sp, #48	; 0x30
 8016842:	f7f9 f9b1 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016846:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801684a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801684e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8016852:	f8d8 0000 	ldr.w	r0, [r8]
 8016856:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801685a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801685e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016862:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8016866:	440c      	add	r4, r1
 8016868:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801686c:	440a      	add	r2, r1
 801686e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8016872:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8016876:	4413      	add	r3, r2
 8016878:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801687c:	6803      	ldr	r3, [r0, #0]
 801687e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016880:	4798      	blx	r3
 8016882:	2dff      	cmp	r5, #255	; 0xff
 8016884:	d124      	bne.n	80168d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8016886:	f010 0f01 	tst.w	r0, #1
 801688a:	f8d8 0000 	ldr.w	r0, [r8]
 801688e:	d022      	beq.n	80168d6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8016890:	2100      	movs	r1, #0
 8016892:	f8d0 c000 	ldr.w	ip, [r0]
 8016896:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801689a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801689e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80168a2:	f04f 0e01 	mov.w	lr, #1
 80168a6:	f8cd e018 	str.w	lr, [sp, #24]
 80168aa:	f8b9 e000 	ldrh.w	lr, [r9]
 80168ae:	9503      	str	r5, [sp, #12]
 80168b0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80168b4:	b2b6      	uxth	r6, r6
 80168b6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80168ba:	9102      	str	r1, [sp, #8]
 80168bc:	b2bf      	uxth	r7, r7
 80168be:	9601      	str	r6, [sp, #4]
 80168c0:	9700      	str	r7, [sp, #0]
 80168c2:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80168c6:	4621      	mov	r1, r4
 80168c8:	47a8      	blx	r5
 80168ca:	b00e      	add	sp, #56	; 0x38
 80168cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80168d0:	f010 0f04 	tst.w	r0, #4
 80168d4:	e7d9      	b.n	801688a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80168d6:	6803      	ldr	r3, [r0, #0]
 80168d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80168da:	4798      	blx	r3
 80168dc:	f8b9 3000 	ldrh.w	r3, [r9]
 80168e0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80168e4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 80168e8:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80168ec:	fb03 1202 	mla	r2, r3, r2, r1
 80168f0:	ebac 0c07 	sub.w	ip, ip, r7
 80168f4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80168f8:	435e      	muls	r6, r3
 80168fa:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80168fe:	2dff      	cmp	r5, #255	; 0xff
 8016900:	eba3 0707 	sub.w	r7, r3, r7
 8016904:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016908:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801690c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8016910:	d049      	beq.n	80169a6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8016912:	43eb      	mvns	r3, r5
 8016914:	fa1f f985 	uxth.w	r9, r5
 8016918:	b2db      	uxtb	r3, r3
 801691a:	42b0      	cmp	r0, r6
 801691c:	d266      	bcs.n	80169ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801691e:	eb00 0a0e 	add.w	sl, r0, lr
 8016922:	4550      	cmp	r0, sl
 8016924:	4621      	mov	r1, r4
 8016926:	f104 0403 	add.w	r4, r4, #3
 801692a:	d25b      	bcs.n	80169e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801692c:	8802      	ldrh	r2, [r0, #0]
 801692e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8016932:	ea4f 2822 	mov.w	r8, r2, asr #8
 8016936:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801693a:	fb11 f109 	smulbb	r1, r1, r9
 801693e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8016942:	10d5      	asrs	r5, r2, #3
 8016944:	fb08 1803 	mla	r8, r8, r3, r1
 8016948:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801694c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016950:	fb11 f109 	smulbb	r1, r1, r9
 8016954:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016958:	fb05 1503 	mla	r5, r5, r3, r1
 801695c:	00d2      	lsls	r2, r2, #3
 801695e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8016962:	b2d2      	uxtb	r2, r2
 8016964:	fb11 f109 	smulbb	r1, r1, r9
 8016968:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801696c:	fa1f f888 	uxth.w	r8, r8
 8016970:	fb02 1203 	mla	r2, r2, r3, r1
 8016974:	b292      	uxth	r2, r2
 8016976:	f108 0101 	add.w	r1, r8, #1
 801697a:	b2ad      	uxth	r5, r5
 801697c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8016980:	1c51      	adds	r1, r2, #1
 8016982:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016986:	1c69      	adds	r1, r5, #1
 8016988:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801698c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8016990:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016994:	096d      	lsrs	r5, r5, #5
 8016996:	ea42 0208 	orr.w	r2, r2, r8
 801699a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801699e:	432a      	orrs	r2, r5
 80169a0:	f820 2b02 	strh.w	r2, [r0], #2
 80169a4:	e7bd      	b.n	8016922 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80169a6:	4a14      	ldr	r2, [pc, #80]	; (80169f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80169a8:	42b0      	cmp	r0, r6
 80169aa:	d21f      	bcs.n	80169ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80169ac:	eb00 050e 	add.w	r5, r0, lr
 80169b0:	42a8      	cmp	r0, r5
 80169b2:	4621      	mov	r1, r4
 80169b4:	f104 0403 	add.w	r4, r4, #3
 80169b8:	d210      	bcs.n	80169dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80169ba:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80169be:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80169c2:	00db      	lsls	r3, r3, #3
 80169c4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80169c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80169cc:	430b      	orrs	r3, r1
 80169ce:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80169d2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80169d6:	f820 3b02 	strh.w	r3, [r0], #2
 80169da:	e7e9      	b.n	80169b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80169dc:	4438      	add	r0, r7
 80169de:	eb01 040c 	add.w	r4, r1, ip
 80169e2:	e7e1      	b.n	80169a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80169e4:	4438      	add	r0, r7
 80169e6:	eb01 040c 	add.w	r4, r1, ip
 80169ea:	e796      	b.n	801691a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80169ec:	4b03      	ldr	r3, [pc, #12]	; (80169fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80169ee:	6818      	ldr	r0, [r3, #0]
 80169f0:	6803      	ldr	r3, [r0, #0]
 80169f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80169f4:	4798      	blx	r3
 80169f6:	e768      	b.n	80168ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80169f8:	fffff800 	.word	0xfffff800
 80169fc:	20017564 	.word	0x20017564
 8016a00:	2001755e 	.word	0x2001755e

08016a04 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8016a04:	b4f0      	push	{r4, r5, r6, r7}
 8016a06:	4616      	mov	r6, r2
 8016a08:	2e01      	cmp	r6, #1
 8016a0a:	461c      	mov	r4, r3
 8016a0c:	460d      	mov	r5, r1
 8016a0e:	9a04      	ldr	r2, [sp, #16]
 8016a10:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016a14:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8016a18:	d012      	beq.n	8016a40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8016a1a:	d303      	bcc.n	8016a24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8016a1c:	2e02      	cmp	r6, #2
 8016a1e:	d00a      	beq.n	8016a36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8016a20:	bcf0      	pop	{r4, r5, r6, r7}
 8016a22:	4770      	bx	lr
 8016a24:	6805      	ldr	r5, [r0, #0]
 8016a26:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8016a2a:	68ed      	ldr	r5, [r5, #12]
 8016a2c:	4613      	mov	r3, r2
 8016a2e:	46ac      	mov	ip, r5
 8016a30:	4622      	mov	r2, r4
 8016a32:	bcf0      	pop	{r4, r5, r6, r7}
 8016a34:	4760      	bx	ip
 8016a36:	4621      	mov	r1, r4
 8016a38:	4628      	mov	r0, r5
 8016a3a:	bcf0      	pop	{r4, r5, r6, r7}
 8016a3c:	f7ff bd94 	b.w	8016568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016a40:	4621      	mov	r1, r4
 8016a42:	4628      	mov	r0, r5
 8016a44:	bcf0      	pop	{r4, r5, r6, r7}
 8016a46:	f7ff bee5 	b.w	8016814 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08016a4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8016a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a50:	4681      	mov	r9, r0
 8016a52:	b093      	sub	sp, #76	; 0x4c
 8016a54:	6810      	ldr	r0, [r2, #0]
 8016a56:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8016a5a:	4f6d      	ldr	r7, [pc, #436]	; (8016c10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8016a5c:	4688      	mov	r8, r1
 8016a5e:	6851      	ldr	r1, [r2, #4]
 8016a60:	ac0e      	add	r4, sp, #56	; 0x38
 8016a62:	c403      	stmia	r4!, {r0, r1}
 8016a64:	6818      	ldr	r0, [r3, #0]
 8016a66:	6859      	ldr	r1, [r3, #4]
 8016a68:	ac10      	add	r4, sp, #64	; 0x40
 8016a6a:	4616      	mov	r6, r2
 8016a6c:	c403      	stmia	r4!, {r0, r1}
 8016a6e:	a80e      	add	r0, sp, #56	; 0x38
 8016a70:	f7f9 f872 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a74:	4631      	mov	r1, r6
 8016a76:	a810      	add	r0, sp, #64	; 0x40
 8016a78:	f7f9 f896 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016a7c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8016a80:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8016a84:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8016a88:	4e62      	ldr	r6, [pc, #392]	; (8016c14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8016a8a:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8016a8e:	6830      	ldr	r0, [r6, #0]
 8016a90:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8016a94:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016a98:	4489      	add	r9, r1
 8016a9a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8016a9e:	440a      	add	r2, r1
 8016aa0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8016aa4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8016aa8:	4413      	add	r3, r2
 8016aaa:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8016aae:	6803      	ldr	r3, [r0, #0]
 8016ab0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016ab2:	4798      	blx	r3
 8016ab4:	f010 0f80 	tst.w	r0, #128	; 0x80
 8016ab8:	6830      	ldr	r0, [r6, #0]
 8016aba:	d01d      	beq.n	8016af8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8016abc:	2200      	movs	r2, #0
 8016abe:	6801      	ldr	r1, [r0, #0]
 8016ac0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8016ac4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8016ac8:	220b      	movs	r2, #11
 8016aca:	9207      	str	r2, [sp, #28]
 8016acc:	883a      	ldrh	r2, [r7, #0]
 8016ace:	9206      	str	r2, [sp, #24]
 8016ad0:	2201      	movs	r2, #1
 8016ad2:	e9cd a204 	strd	sl, r2, [sp, #16]
 8016ad6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8016ada:	9203      	str	r2, [sp, #12]
 8016adc:	b2a4      	uxth	r4, r4
 8016ade:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8016ae2:	9200      	str	r2, [sp, #0]
 8016ae4:	b2ad      	uxth	r5, r5
 8016ae6:	9502      	str	r5, [sp, #8]
 8016ae8:	9401      	str	r4, [sp, #4]
 8016aea:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8016aec:	4642      	mov	r2, r8
 8016aee:	4649      	mov	r1, r9
 8016af0:	47a0      	blx	r4
 8016af2:	b013      	add	sp, #76	; 0x4c
 8016af4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016af8:	6803      	ldr	r3, [r0, #0]
 8016afa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016afc:	4798      	blx	r3
 8016afe:	883b      	ldrh	r3, [r7, #0]
 8016b00:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8016b04:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8016b08:	fb03 1202 	mla	r2, r3, r2, r1
 8016b0c:	435d      	muls	r5, r3
 8016b0e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016b12:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8016b16:	920c      	str	r2, [sp, #48]	; 0x30
 8016b18:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8016b1c:	1b12      	subs	r2, r2, r4
 8016b1e:	920d      	str	r2, [sp, #52]	; 0x34
 8016b20:	0062      	lsls	r2, r4, #1
 8016b22:	1b1c      	subs	r4, r3, r4
 8016b24:	0063      	lsls	r3, r4, #1
 8016b26:	920a      	str	r2, [sp, #40]	; 0x28
 8016b28:	930b      	str	r3, [sp, #44]	; 0x2c
 8016b2a:	f04f 0e04 	mov.w	lr, #4
 8016b2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016b30:	4298      	cmp	r0, r3
 8016b32:	d266      	bcs.n	8016c02 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8016b34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016b36:	eb00 0b03 	add.w	fp, r0, r3
 8016b3a:	4558      	cmp	r0, fp
 8016b3c:	d25c      	bcs.n	8016bf8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8016b3e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8016b42:	fb1e e303 	smlabb	r3, lr, r3, lr
 8016b46:	f858 2003 	ldr.w	r2, [r8, r3]
 8016b4a:	0e11      	lsrs	r1, r2, #24
 8016b4c:	d012      	beq.n	8016b74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8016b4e:	29ff      	cmp	r1, #255	; 0xff
 8016b50:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8016b54:	d110      	bne.n	8016b78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8016b56:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016b5a:	d10d      	bne.n	8016b78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8016b5c:	0953      	lsrs	r3, r2, #5
 8016b5e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8016b62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016b66:	f027 0707 	bic.w	r7, r7, #7
 8016b6a:	431f      	orrs	r7, r3
 8016b6c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016b70:	433a      	orrs	r2, r7
 8016b72:	8002      	strh	r2, [r0, #0]
 8016b74:	3002      	adds	r0, #2
 8016b76:	e7e0      	b.n	8016b3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8016b78:	fb0a f101 	mul.w	r1, sl, r1
 8016b7c:	8806      	ldrh	r6, [r0, #0]
 8016b7e:	1c4b      	adds	r3, r1, #1
 8016b80:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8016b84:	1235      	asrs	r5, r6, #8
 8016b86:	10f4      	asrs	r4, r6, #3
 8016b88:	121b      	asrs	r3, r3, #8
 8016b8a:	00f6      	lsls	r6, r6, #3
 8016b8c:	b299      	uxth	r1, r3
 8016b8e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8016b92:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016b96:	b2f6      	uxtb	r6, r6
 8016b98:	43db      	mvns	r3, r3
 8016b9a:	b2d2      	uxtb	r2, r2
 8016b9c:	b2db      	uxtb	r3, r3
 8016b9e:	fb1c fc01 	smulbb	ip, ip, r1
 8016ba2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8016ba6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016baa:	fb12 f201 	smulbb	r2, r2, r1
 8016bae:	fb05 c503 	mla	r5, r5, r3, ip
 8016bb2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8016bb6:	b2ff      	uxtb	r7, r7
 8016bb8:	fb06 2203 	mla	r2, r6, r3, r2
 8016bbc:	b2ad      	uxth	r5, r5
 8016bbe:	fb17 f701 	smulbb	r7, r7, r1
 8016bc2:	b292      	uxth	r2, r2
 8016bc4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8016bc8:	fb04 7403 	mla	r4, r4, r3, r7
 8016bcc:	f105 0c01 	add.w	ip, r5, #1
 8016bd0:	1c57      	adds	r7, r2, #1
 8016bd2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016bd6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8016bda:	b2a4      	uxth	r4, r4
 8016bdc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016be0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016be4:	433d      	orrs	r5, r7
 8016be6:	1c67      	adds	r7, r4, #1
 8016be8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8016bec:	0964      	lsrs	r4, r4, #5
 8016bee:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8016bf2:	4325      	orrs	r5, r4
 8016bf4:	8005      	strh	r5, [r0, #0]
 8016bf6:	e7bd      	b.n	8016b74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8016bf8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016bfa:	4418      	add	r0, r3
 8016bfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016bfe:	4499      	add	r9, r3
 8016c00:	e795      	b.n	8016b2e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8016c02:	4b04      	ldr	r3, [pc, #16]	; (8016c14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8016c04:	6818      	ldr	r0, [r3, #0]
 8016c06:	6803      	ldr	r3, [r0, #0]
 8016c08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016c0a:	4798      	blx	r3
 8016c0c:	e771      	b.n	8016af2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8016c0e:	bf00      	nop
 8016c10:	2001755e 	.word	0x2001755e
 8016c14:	20017564 	.word	0x20017564

08016c18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8016c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c1c:	b087      	sub	sp, #28
 8016c1e:	4680      	mov	r8, r0
 8016c20:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8016c24:	460d      	mov	r5, r1
 8016c26:	4614      	mov	r4, r2
 8016c28:	2e00      	cmp	r6, #0
 8016c2a:	f000 80b9 	beq.w	8016da0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8016c2e:	6810      	ldr	r0, [r2, #0]
 8016c30:	6851      	ldr	r1, [r2, #4]
 8016c32:	af02      	add	r7, sp, #8
 8016c34:	c703      	stmia	r7!, {r0, r1}
 8016c36:	6818      	ldr	r0, [r3, #0]
 8016c38:	6859      	ldr	r1, [r3, #4]
 8016c3a:	af04      	add	r7, sp, #16
 8016c3c:	c703      	stmia	r7!, {r0, r1}
 8016c3e:	a802      	add	r0, sp, #8
 8016c40:	f7f8 ff8a 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c44:	4621      	mov	r1, r4
 8016c46:	a804      	add	r0, sp, #16
 8016c48:	f7f8 ffae 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c4c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016c50:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016c54:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8016c58:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8016c5c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8016c60:	eb08 0401 	add.w	r4, r8, r1
 8016c64:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016c68:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8016c6c:	440a      	add	r2, r1
 8016c6e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016c72:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016c76:	4413      	add	r3, r2
 8016c78:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016c7c:	4b4a      	ldr	r3, [pc, #296]	; (8016da8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8016c7e:	6818      	ldr	r0, [r3, #0]
 8016c80:	6803      	ldr	r3, [r0, #0]
 8016c82:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016c84:	4798      	blx	r3
 8016c86:	4b49      	ldr	r3, [pc, #292]	; (8016dac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8016c88:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8016c8c:	881a      	ldrh	r2, [r3, #0]
 8016c8e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8016c92:	2eff      	cmp	r6, #255	; 0xff
 8016c94:	fb02 c101 	mla	r1, r2, r1, ip
 8016c98:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016c9c:	fb02 f207 	mul.w	r2, r2, r7
 8016ca0:	f105 0104 	add.w	r1, r5, #4
 8016ca4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8016ca8:	461d      	mov	r5, r3
 8016caa:	d05a      	beq.n	8016d62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8016cac:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8016cb0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016cb4:	b2b6      	uxth	r6, r6
 8016cb6:	fa1f fe8e 	uxth.w	lr, lr
 8016cba:	9301      	str	r3, [sp, #4]
 8016cbc:	4282      	cmp	r2, r0
 8016cbe:	d96a      	bls.n	8016d96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8016cc0:	eb00 0b0a 	add.w	fp, r0, sl
 8016cc4:	4583      	cmp	fp, r0
 8016cc6:	d940      	bls.n	8016d4a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8016cc8:	f814 3b01 	ldrb.w	r3, [r4], #1
 8016ccc:	8805      	ldrh	r5, [r0, #0]
 8016cce:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8016cd2:	122f      	asrs	r7, r5, #8
 8016cd4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016cd8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016cdc:	fb17 f70e 	smulbb	r7, r7, lr
 8016ce0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016ce4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016ce8:	00ed      	lsls	r5, r5, #3
 8016cea:	fb0c 7c06 	mla	ip, ip, r6, r7
 8016cee:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8016cf2:	10df      	asrs	r7, r3, #3
 8016cf4:	b2ed      	uxtb	r5, r5
 8016cf6:	00db      	lsls	r3, r3, #3
 8016cf8:	fa1f fc8c 	uxth.w	ip, ip
 8016cfc:	fb19 f90e 	smulbb	r9, r9, lr
 8016d00:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016d04:	b2db      	uxtb	r3, r3
 8016d06:	fb15 f50e 	smulbb	r5, r5, lr
 8016d0a:	fb07 9706 	mla	r7, r7, r6, r9
 8016d0e:	fb03 5306 	mla	r3, r3, r6, r5
 8016d12:	f10c 0901 	add.w	r9, ip, #1
 8016d16:	b29b      	uxth	r3, r3
 8016d18:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8016d1c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8016d20:	f103 0c01 	add.w	ip, r3, #1
 8016d24:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8016d28:	b2bf      	uxth	r7, r7
 8016d2a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016d2e:	ea4c 0c09 	orr.w	ip, ip, r9
 8016d32:	f107 0901 	add.w	r9, r7, #1
 8016d36:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8016d3a:	097f      	lsrs	r7, r7, #5
 8016d3c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016d40:	ea4c 0c07 	orr.w	ip, ip, r7
 8016d44:	f820 cb02 	strh.w	ip, [r0], #2
 8016d48:	e7bc      	b.n	8016cc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8016d4a:	9b01      	ldr	r3, [sp, #4]
 8016d4c:	881b      	ldrh	r3, [r3, #0]
 8016d4e:	eba3 0308 	sub.w	r3, r3, r8
 8016d52:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016d56:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8016d5a:	eba3 0308 	sub.w	r3, r3, r8
 8016d5e:	441c      	add	r4, r3
 8016d60:	e7ac      	b.n	8016cbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8016d62:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016d66:	4282      	cmp	r2, r0
 8016d68:	d915      	bls.n	8016d96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8016d6a:	eb00 060a 	add.w	r6, r0, sl
 8016d6e:	4286      	cmp	r6, r0
 8016d70:	d906      	bls.n	8016d80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8016d72:	f814 3b01 	ldrb.w	r3, [r4], #1
 8016d76:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8016d7a:	f820 3b02 	strh.w	r3, [r0], #2
 8016d7e:	e7f6      	b.n	8016d6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8016d80:	882b      	ldrh	r3, [r5, #0]
 8016d82:	eba3 0308 	sub.w	r3, r3, r8
 8016d86:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016d8a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8016d8e:	eba3 0308 	sub.w	r3, r3, r8
 8016d92:	441c      	add	r4, r3
 8016d94:	e7e7      	b.n	8016d66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8016d96:	4b04      	ldr	r3, [pc, #16]	; (8016da8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8016d98:	6818      	ldr	r0, [r3, #0]
 8016d9a:	6803      	ldr	r3, [r0, #0]
 8016d9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016d9e:	4798      	blx	r3
 8016da0:	b007      	add	sp, #28
 8016da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016da6:	bf00      	nop
 8016da8:	20017564 	.word	0x20017564
 8016dac:	2001755e 	.word	0x2001755e

08016db0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8016db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016db4:	b091      	sub	sp, #68	; 0x44
 8016db6:	4680      	mov	r8, r0
 8016db8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8016dbc:	460f      	mov	r7, r1
 8016dbe:	4614      	mov	r4, r2
 8016dc0:	2d00      	cmp	r5, #0
 8016dc2:	d051      	beq.n	8016e68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8016dc4:	6810      	ldr	r0, [r2, #0]
 8016dc6:	6851      	ldr	r1, [r2, #4]
 8016dc8:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8016fcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8016dcc:	ae0c      	add	r6, sp, #48	; 0x30
 8016dce:	c603      	stmia	r6!, {r0, r1}
 8016dd0:	6818      	ldr	r0, [r3, #0]
 8016dd2:	6859      	ldr	r1, [r3, #4]
 8016dd4:	ae0e      	add	r6, sp, #56	; 0x38
 8016dd6:	c603      	stmia	r6!, {r0, r1}
 8016dd8:	a80c      	add	r0, sp, #48	; 0x30
 8016dda:	f7f8 febd 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016dde:	4621      	mov	r1, r4
 8016de0:	a80e      	add	r0, sp, #56	; 0x38
 8016de2:	f7f8 fee1 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016de6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8016dea:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8016dee:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016df2:	f8d9 0000 	ldr.w	r0, [r9]
 8016df6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8016dfa:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8016dfe:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016e02:	eb08 0401 	add.w	r4, r8, r1
 8016e06:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8016e0a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8016fd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8016e0e:	440a      	add	r2, r1
 8016e10:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8016e14:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8016e18:	4413      	add	r3, r2
 8016e1a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8016e1e:	6803      	ldr	r3, [r0, #0]
 8016e20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016e22:	4798      	blx	r3
 8016e24:	f010 0f80 	tst.w	r0, #128	; 0x80
 8016e28:	f8d9 0000 	ldr.w	r0, [r9]
 8016e2c:	d01f      	beq.n	8016e6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8016e2e:	2200      	movs	r2, #0
 8016e30:	6801      	ldr	r1, [r0, #0]
 8016e32:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016e36:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8016e3a:	220b      	movs	r2, #11
 8016e3c:	9207      	str	r2, [sp, #28]
 8016e3e:	f8b8 2000 	ldrh.w	r2, [r8]
 8016e42:	9206      	str	r2, [sp, #24]
 8016e44:	2201      	movs	r2, #1
 8016e46:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8016e4a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8016e4e:	9203      	str	r2, [sp, #12]
 8016e50:	fa1f f28a 	uxth.w	r2, sl
 8016e54:	9202      	str	r2, [sp, #8]
 8016e56:	b2b6      	uxth	r6, r6
 8016e58:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8016e5c:	9200      	str	r2, [sp, #0]
 8016e5e:	9601      	str	r6, [sp, #4]
 8016e60:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8016e62:	463a      	mov	r2, r7
 8016e64:	4621      	mov	r1, r4
 8016e66:	47a8      	blx	r5
 8016e68:	b011      	add	sp, #68	; 0x44
 8016e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e6e:	6803      	ldr	r3, [r0, #0]
 8016e70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016e72:	4798      	blx	r3
 8016e74:	f8b8 2000 	ldrh.w	r2, [r8]
 8016e78:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8016e7c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8016e80:	2dff      	cmp	r5, #255	; 0xff
 8016e82:	fb02 1303 	mla	r3, r2, r3, r1
 8016e86:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016e8a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8016e8e:	fb0a fa02 	mul.w	sl, sl, r2
 8016e92:	d062      	beq.n	8016f5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8016e94:	ea6f 0c05 	mvn.w	ip, r5
 8016e98:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8016e9c:	930a      	str	r3, [sp, #40]	; 0x28
 8016e9e:	b2ad      	uxth	r5, r5
 8016ea0:	fa5f fc8c 	uxtb.w	ip, ip
 8016ea4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8016ea8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016eaa:	4298      	cmp	r0, r3
 8016eac:	f080 8085 	bcs.w	8016fba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8016eb0:	eb00 0b09 	add.w	fp, r0, r9
 8016eb4:	4558      	cmp	r0, fp
 8016eb6:	d246      	bcs.n	8016f46 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8016eb8:	f814 eb01 	ldrb.w	lr, [r4], #1
 8016ebc:	2303      	movs	r3, #3
 8016ebe:	2204      	movs	r2, #4
 8016ec0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8016ec4:	eb07 0a0e 	add.w	sl, r7, lr
 8016ec8:	8803      	ldrh	r3, [r0, #0]
 8016eca:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8016ece:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016ed2:	1219      	asrs	r1, r3, #8
 8016ed4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016ed8:	fb18 f805 	smulbb	r8, r8, r5
 8016edc:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8016ee0:	10da      	asrs	r2, r3, #3
 8016ee2:	fb01 810c 	mla	r1, r1, ip, r8
 8016ee6:	00db      	lsls	r3, r3, #3
 8016ee8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016eec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016ef0:	b2db      	uxtb	r3, r3
 8016ef2:	fb18 f805 	smulbb	r8, r8, r5
 8016ef6:	fb1e fe05 	smulbb	lr, lr, r5
 8016efa:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8016efe:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8016f02:	b289      	uxth	r1, r1
 8016f04:	fb02 820c 	mla	r2, r2, ip, r8
 8016f08:	fb03 e30c 	mla	r3, r3, ip, lr
 8016f0c:	b292      	uxth	r2, r2
 8016f0e:	b29b      	uxth	r3, r3
 8016f10:	f101 0801 	add.w	r8, r1, #1
 8016f14:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8016f18:	f103 0e01 	add.w	lr, r3, #1
 8016f1c:	f102 0801 	add.w	r8, r2, #1
 8016f20:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8016f24:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8016f28:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8016f2c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016f30:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016f34:	ea4e 0101 	orr.w	r1, lr, r1
 8016f38:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016f3c:	ea41 0108 	orr.w	r1, r1, r8
 8016f40:	f820 1b02 	strh.w	r1, [r0], #2
 8016f44:	e7b6      	b.n	8016eb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8016f46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016f48:	881b      	ldrh	r3, [r3, #0]
 8016f4a:	1b9b      	subs	r3, r3, r6
 8016f4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016f50:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8016f54:	1b9b      	subs	r3, r3, r6
 8016f56:	441c      	add	r4, r3
 8016f58:	e7a6      	b.n	8016ea8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8016f5a:	491b      	ldr	r1, [pc, #108]	; (8016fc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8016f5c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8016f60:	2203      	movs	r2, #3
 8016f62:	2504      	movs	r5, #4
 8016f64:	4550      	cmp	r0, sl
 8016f66:	d228      	bcs.n	8016fba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8016f68:	eb00 0c09 	add.w	ip, r0, r9
 8016f6c:	4560      	cmp	r0, ip
 8016f6e:	4623      	mov	r3, r4
 8016f70:	d219      	bcs.n	8016fa6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8016f72:	f893 e000 	ldrb.w	lr, [r3]
 8016f76:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8016f7a:	eb07 0b0e 	add.w	fp, r7, lr
 8016f7e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016f82:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8016f86:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016f8a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8016f8e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8016f92:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016f96:	ea43 030b 	orr.w	r3, r3, fp
 8016f9a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8016f9e:	3401      	adds	r4, #1
 8016fa0:	f820 3b02 	strh.w	r3, [r0], #2
 8016fa4:	e7e2      	b.n	8016f6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8016fa6:	f8b8 3000 	ldrh.w	r3, [r8]
 8016faa:	1b9b      	subs	r3, r3, r6
 8016fac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016fb0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8016fb4:	1b9b      	subs	r3, r3, r6
 8016fb6:	441c      	add	r4, r3
 8016fb8:	e7d4      	b.n	8016f64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8016fba:	4b04      	ldr	r3, [pc, #16]	; (8016fcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8016fbc:	6818      	ldr	r0, [r3, #0]
 8016fbe:	6803      	ldr	r3, [r0, #0]
 8016fc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fc2:	4798      	blx	r3
 8016fc4:	e750      	b.n	8016e68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8016fc6:	bf00      	nop
 8016fc8:	fffff800 	.word	0xfffff800
 8016fcc:	20017564 	.word	0x20017564
 8016fd0:	2001755e 	.word	0x2001755e

08016fd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8016fd4:	b430      	push	{r4, r5}
 8016fd6:	780d      	ldrb	r5, [r1, #0]
 8016fd8:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8016fdc:	2d01      	cmp	r5, #1
 8016fde:	d00a      	beq.n	8016ff6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8016fe0:	d305      	bcc.n	8016fee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8016fe2:	2d02      	cmp	r5, #2
 8016fe4:	d10b      	bne.n	8016ffe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8016fe6:	9402      	str	r4, [sp, #8]
 8016fe8:	bc30      	pop	{r4, r5}
 8016fea:	f7ff be15 	b.w	8016c18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8016fee:	9402      	str	r4, [sp, #8]
 8016ff0:	bc30      	pop	{r4, r5}
 8016ff2:	f7ff bd2b 	b.w	8016a4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8016ff6:	9402      	str	r4, [sp, #8]
 8016ff8:	bc30      	pop	{r4, r5}
 8016ffa:	f7ff bed9 	b.w	8016db0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8016ffe:	bc30      	pop	{r4, r5}
 8017000:	4770      	bx	lr
	...

08017004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8017004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017008:	4604      	mov	r4, r0
 801700a:	b087      	sub	sp, #28
 801700c:	6810      	ldr	r0, [r2, #0]
 801700e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8017012:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801724c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8017016:	460e      	mov	r6, r1
 8017018:	6851      	ldr	r1, [r2, #4]
 801701a:	ad02      	add	r5, sp, #8
 801701c:	c503      	stmia	r5!, {r0, r1}
 801701e:	6818      	ldr	r0, [r3, #0]
 8017020:	6859      	ldr	r1, [r3, #4]
 8017022:	ad04      	add	r5, sp, #16
 8017024:	4617      	mov	r7, r2
 8017026:	c503      	stmia	r5!, {r0, r1}
 8017028:	a802      	add	r0, sp, #8
 801702a:	f7f8 fd95 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801702e:	4639      	mov	r1, r7
 8017030:	a804      	add	r0, sp, #16
 8017032:	f7f8 fdb9 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017036:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801703a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801703e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8017042:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017046:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801704a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801704e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017052:	440e      	add	r6, r1
 8017054:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017058:	440a      	add	r2, r1
 801705a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801705e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017062:	4413      	add	r3, r2
 8017064:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017068:	4b77      	ldr	r3, [pc, #476]	; (8017248 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801706a:	6818      	ldr	r0, [r3, #0]
 801706c:	6803      	ldr	r3, [r0, #0]
 801706e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017070:	4798      	blx	r3
 8017072:	f8b9 b000 	ldrh.w	fp, [r9]
 8017076:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801707a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801707e:	fb0b 2303 	mla	r3, fp, r3, r2
 8017082:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017086:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801708a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801708e:	fb05 f50b 	mul.w	r5, r5, fp
 8017092:	9300      	str	r3, [sp, #0]
 8017094:	d069      	beq.n	801716a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8017096:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801709a:	4558      	cmp	r0, fp
 801709c:	f080 80cc 	bcs.w	8017238 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80170a0:	9b00      	ldr	r3, [sp, #0]
 80170a2:	18c3      	adds	r3, r0, r3
 80170a4:	9301      	str	r3, [sp, #4]
 80170a6:	4631      	mov	r1, r6
 80170a8:	9b01      	ldr	r3, [sp, #4]
 80170aa:	4298      	cmp	r0, r3
 80170ac:	d24f      	bcs.n	801714e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80170ae:	f811 2b01 	ldrb.w	r2, [r1], #1
 80170b2:	2a00      	cmp	r2, #0
 80170b4:	d048      	beq.n	8017148 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80170b6:	fb0a f202 	mul.w	r2, sl, r2
 80170ba:	1c53      	adds	r3, r2, #1
 80170bc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80170c0:	121b      	asrs	r3, r3, #8
 80170c2:	d041      	beq.n	8017148 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80170c4:	8802      	ldrh	r2, [r0, #0]
 80170c6:	f8b4 c000 	ldrh.w	ip, [r4]
 80170ca:	b29e      	uxth	r6, r3
 80170cc:	1215      	asrs	r5, r2, #8
 80170ce:	43db      	mvns	r3, r3
 80170d0:	b2db      	uxtb	r3, r3
 80170d2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80170d6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80170da:	fb15 f503 	smulbb	r5, r5, r3
 80170de:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80170e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80170e6:	00d2      	lsls	r2, r2, #3
 80170e8:	fb07 5706 	mla	r7, r7, r6, r5
 80170ec:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80170f0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80170f4:	b2d2      	uxtb	r2, r2
 80170f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80170fa:	b2bf      	uxth	r7, r7
 80170fc:	fb1e fe03 	smulbb	lr, lr, r3
 8017100:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017104:	fa5f fc8c 	uxtb.w	ip, ip
 8017108:	fb12 f203 	smulbb	r2, r2, r3
 801710c:	fb05 e506 	mla	r5, r5, r6, lr
 8017110:	fb0c 2c06 	mla	ip, ip, r6, r2
 8017114:	f107 0e01 	add.w	lr, r7, #1
 8017118:	fa1f fc8c 	uxth.w	ip, ip
 801711c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8017120:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8017124:	f10c 0701 	add.w	r7, ip, #1
 8017128:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801712c:	b2ad      	uxth	r5, r5
 801712e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017132:	ea47 070e 	orr.w	r7, r7, lr
 8017136:	f105 0e01 	add.w	lr, r5, #1
 801713a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801713e:	096d      	lsrs	r5, r5, #5
 8017140:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017144:	432f      	orrs	r7, r5
 8017146:	8007      	strh	r7, [r0, #0]
 8017148:	3002      	adds	r0, #2
 801714a:	3402      	adds	r4, #2
 801714c:	e7ac      	b.n	80170a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801714e:	f8b9 3000 	ldrh.w	r3, [r9]
 8017152:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8017156:	eba3 0308 	sub.w	r3, r3, r8
 801715a:	eba6 0608 	sub.w	r6, r6, r8
 801715e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8017162:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017166:	440e      	add	r6, r1
 8017168:	e797      	b.n	801709a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801716a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801716e:	42a8      	cmp	r0, r5
 8017170:	d262      	bcs.n	8017238 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017172:	9b00      	ldr	r3, [sp, #0]
 8017174:	4631      	mov	r1, r6
 8017176:	eb00 0b03 	add.w	fp, r0, r3
 801717a:	4558      	cmp	r0, fp
 801717c:	d24e      	bcs.n	801721c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801717e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8017182:	b12b      	cbz	r3, 8017190 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8017184:	2bff      	cmp	r3, #255	; 0xff
 8017186:	f8b4 e000 	ldrh.w	lr, [r4]
 801718a:	d104      	bne.n	8017196 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801718c:	f8a0 e000 	strh.w	lr, [r0]
 8017190:	3002      	adds	r0, #2
 8017192:	3402      	adds	r4, #2
 8017194:	e7f1      	b.n	801717a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8017196:	8802      	ldrh	r2, [r0, #0]
 8017198:	b29f      	uxth	r7, r3
 801719a:	1216      	asrs	r6, r2, #8
 801719c:	43db      	mvns	r3, r3
 801719e:	b2db      	uxtb	r3, r3
 80171a0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80171a4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80171a8:	fb16 f603 	smulbb	r6, r6, r3
 80171ac:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80171b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80171b4:	00d2      	lsls	r2, r2, #3
 80171b6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80171ba:	b2d2      	uxtb	r2, r2
 80171bc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80171c0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80171c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80171c8:	fb1a fa03 	smulbb	sl, sl, r3
 80171cc:	fa1f fc8c 	uxth.w	ip, ip
 80171d0:	fb12 f303 	smulbb	r3, r2, r3
 80171d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80171d8:	fa5f fe8e 	uxtb.w	lr, lr
 80171dc:	fb06 a607 	mla	r6, r6, r7, sl
 80171e0:	f10c 0201 	add.w	r2, ip, #1
 80171e4:	fb0e 3307 	mla	r3, lr, r7, r3
 80171e8:	b2b6      	uxth	r6, r6
 80171ea:	b29b      	uxth	r3, r3
 80171ec:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80171f0:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80171f4:	f106 0a01 	add.w	sl, r6, #1
 80171f8:	f103 0c01 	add.w	ip, r3, #1
 80171fc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017200:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017204:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017208:	0976      	lsrs	r6, r6, #5
 801720a:	ea4c 0c02 	orr.w	ip, ip, r2
 801720e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017212:	ea4c 0c06 	orr.w	ip, ip, r6
 8017216:	f8a0 c000 	strh.w	ip, [r0]
 801721a:	e7b9      	b.n	8017190 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801721c:	f8b9 3000 	ldrh.w	r3, [r9]
 8017220:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8017224:	eba3 0308 	sub.w	r3, r3, r8
 8017228:	eba6 0608 	sub.w	r6, r6, r8
 801722c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8017230:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017234:	440e      	add	r6, r1
 8017236:	e79a      	b.n	801716e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8017238:	4b03      	ldr	r3, [pc, #12]	; (8017248 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801723a:	6818      	ldr	r0, [r3, #0]
 801723c:	6803      	ldr	r3, [r0, #0]
 801723e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017240:	4798      	blx	r3
 8017242:	b007      	add	sp, #28
 8017244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017248:	20017564 	.word	0x20017564
 801724c:	2001755e 	.word	0x2001755e

08017250 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8017250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017254:	b089      	sub	sp, #36	; 0x24
 8017256:	4682      	mov	sl, r0
 8017258:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801725c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801725e:	460f      	mov	r7, r1
 8017260:	4691      	mov	r9, r2
 8017262:	4698      	mov	r8, r3
 8017264:	2e00      	cmp	r6, #0
 8017266:	d036      	beq.n	80172d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017268:	4608      	mov	r0, r1
 801726a:	f7fc f863 	bl	8013334 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801726e:	4605      	mov	r5, r0
 8017270:	4638      	mov	r0, r7
 8017272:	f7fc f893 	bl	801339c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017276:	f8ad 000e 	strh.w	r0, [sp, #14]
 801727a:	4638      	mov	r0, r7
 801727c:	f8ad 9008 	strh.w	r9, [sp, #8]
 8017280:	f8ad 500c 	strh.w	r5, [sp, #12]
 8017284:	f8ad 800a 	strh.w	r8, [sp, #10]
 8017288:	f7fc f940 	bl	801350c <_ZNK8touchgfx6Bitmap7getDataEv>
 801728c:	4605      	mov	r5, r0
 801728e:	4638      	mov	r0, r7
 8017290:	f7fc f96c 	bl	801356c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8017294:	4681      	mov	r9, r0
 8017296:	4638      	mov	r0, r7
 8017298:	f7fc f9bc 	bl	8013614 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801729c:	280b      	cmp	r0, #11
 801729e:	d81a      	bhi.n	80172d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80172a0:	e8df f000 	tbb	[pc, r0]
 80172a4:	1906aebd 	.word	0x1906aebd
 80172a8:	19191919 	.word	0x19191919
 80172ac:	b5191919 	.word	0xb5191919
 80172b0:	4bb0      	ldr	r3, [pc, #704]	; (8017574 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80172b2:	6818      	ldr	r0, [r3, #0]
 80172b4:	6803      	ldr	r3, [r0, #0]
 80172b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80172b8:	4798      	blx	r3
 80172ba:	2eff      	cmp	r6, #255	; 0xff
 80172bc:	d121      	bne.n	8017302 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 80172be:	0683      	lsls	r3, r0, #26
 80172c0:	d41f      	bmi.n	8017302 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 80172c2:	4638      	mov	r0, r7
 80172c4:	f7fc f8ea 	bl	801349c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80172c8:	b940      	cbnz	r0, 80172dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 80172ca:	4623      	mov	r3, r4
 80172cc:	aa02      	add	r2, sp, #8
 80172ce:	4629      	mov	r1, r5
 80172d0:	4650      	mov	r0, sl
 80172d2:	f7ff fa2f 	bl	8016734 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80172d6:	b009      	add	sp, #36	; 0x24
 80172d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172dc:	f10d 0818 	add.w	r8, sp, #24
 80172e0:	4639      	mov	r1, r7
 80172e2:	4640      	mov	r0, r8
 80172e4:	f7fc f88e 	bl	8013404 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80172e8:	e898 0003 	ldmia.w	r8, {r0, r1}
 80172ec:	af04      	add	r7, sp, #16
 80172ee:	e887 0003 	stmia.w	r7, {r0, r1}
 80172f2:	4638      	mov	r0, r7
 80172f4:	4621      	mov	r1, r4
 80172f6:	f7f2 fe91 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 80172fa:	4638      	mov	r0, r7
 80172fc:	f7f2 fed1 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017300:	b130      	cbz	r0, 8017310 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8017302:	4633      	mov	r3, r6
 8017304:	4622      	mov	r2, r4
 8017306:	a902      	add	r1, sp, #8
 8017308:	4628      	mov	r0, r5
 801730a:	f7ff f92d 	bl	8016568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801730e:	e7e2      	b.n	80172d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017310:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017314:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017318:	4293      	cmp	r3, r2
 801731a:	dd12      	ble.n	8017342 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 801731c:	1a9b      	subs	r3, r3, r2
 801731e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017322:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017326:	f8ad 0018 	strh.w	r0, [sp, #24]
 801732a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801732e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017332:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017336:	4642      	mov	r2, r8
 8017338:	4633      	mov	r3, r6
 801733a:	a902      	add	r1, sp, #8
 801733c:	4628      	mov	r0, r5
 801733e:	f7ff f913 	bl	8016568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017342:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8017346:	f9b4 2000 	ldrsh.w	r2, [r4]
 801734a:	4293      	cmp	r3, r2
 801734c:	dd12      	ble.n	8017374 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 801734e:	1a9b      	subs	r3, r3, r2
 8017350:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017354:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8017358:	f8ad 2018 	strh.w	r2, [sp, #24]
 801735c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017360:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017364:	f8ad 101e 	strh.w	r1, [sp, #30]
 8017368:	23ff      	movs	r3, #255	; 0xff
 801736a:	4642      	mov	r2, r8
 801736c:	a902      	add	r1, sp, #8
 801736e:	4628      	mov	r0, r5
 8017370:	f7ff f8fa 	bl	8016568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017374:	463b      	mov	r3, r7
 8017376:	aa02      	add	r2, sp, #8
 8017378:	4629      	mov	r1, r5
 801737a:	4650      	mov	r0, sl
 801737c:	f7ff f9da 	bl	8016734 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8017380:	88a2      	ldrh	r2, [r4, #4]
 8017382:	8823      	ldrh	r3, [r4, #0]
 8017384:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8017388:	4413      	add	r3, r2
 801738a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801738e:	440a      	add	r2, r1
 8017390:	b29b      	uxth	r3, r3
 8017392:	b292      	uxth	r2, r2
 8017394:	b211      	sxth	r1, r2
 8017396:	b218      	sxth	r0, r3
 8017398:	4288      	cmp	r0, r1
 801739a:	dd12      	ble.n	80173c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 801739c:	1a9b      	subs	r3, r3, r2
 801739e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80173a2:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80173a6:	f8ad 1018 	strh.w	r1, [sp, #24]
 80173aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80173ae:	f8ad 001e 	strh.w	r0, [sp, #30]
 80173b2:	23ff      	movs	r3, #255	; 0xff
 80173b4:	4642      	mov	r2, r8
 80173b6:	a902      	add	r1, sp, #8
 80173b8:	4628      	mov	r0, r5
 80173ba:	f8ad 601a 	strh.w	r6, [sp, #26]
 80173be:	f7ff f8d3 	bl	8016568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80173c2:	88e2      	ldrh	r2, [r4, #6]
 80173c4:	8863      	ldrh	r3, [r4, #2]
 80173c6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80173ca:	4413      	add	r3, r2
 80173cc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80173d0:	440a      	add	r2, r1
 80173d2:	b29b      	uxth	r3, r3
 80173d4:	b292      	uxth	r2, r2
 80173d6:	b211      	sxth	r1, r2
 80173d8:	b218      	sxth	r0, r3
 80173da:	4288      	cmp	r0, r1
 80173dc:	f77f af7b 	ble.w	80172d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80173e0:	1a9b      	subs	r3, r3, r2
 80173e2:	f9b4 6000 	ldrsh.w	r6, [r4]
 80173e6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80173ea:	f8ad 301e 	strh.w	r3, [sp, #30]
 80173ee:	f8ad 6018 	strh.w	r6, [sp, #24]
 80173f2:	f8ad 101a 	strh.w	r1, [sp, #26]
 80173f6:	f8ad 001c 	strh.w	r0, [sp, #28]
 80173fa:	23ff      	movs	r3, #255	; 0xff
 80173fc:	4642      	mov	r2, r8
 80173fe:	e782      	b.n	8017306 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8017400:	4633      	mov	r3, r6
 8017402:	4622      	mov	r2, r4
 8017404:	a902      	add	r1, sp, #8
 8017406:	4628      	mov	r0, r5
 8017408:	f7ff fa04 	bl	8016814 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801740c:	e763      	b.n	80172d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801740e:	9600      	str	r6, [sp, #0]
 8017410:	4623      	mov	r3, r4
 8017412:	aa02      	add	r2, sp, #8
 8017414:	4649      	mov	r1, r9
 8017416:	4628      	mov	r0, r5
 8017418:	f7ff fddc 	bl	8016fd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801741c:	e75b      	b.n	80172d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801741e:	4638      	mov	r0, r7
 8017420:	f7fc f83c 	bl	801349c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017424:	b950      	cbnz	r0, 801743c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8017426:	e9cd 6000 	strd	r6, r0, [sp]
 801742a:	f8da 3000 	ldr.w	r3, [sl]
 801742e:	aa02      	add	r2, sp, #8
 8017430:	68de      	ldr	r6, [r3, #12]
 8017432:	4629      	mov	r1, r5
 8017434:	4623      	mov	r3, r4
 8017436:	4650      	mov	r0, sl
 8017438:	47b0      	blx	r6
 801743a:	e74c      	b.n	80172d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801743c:	f10d 0818 	add.w	r8, sp, #24
 8017440:	4639      	mov	r1, r7
 8017442:	4640      	mov	r0, r8
 8017444:	f7fb ffde 	bl	8013404 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017448:	e898 0003 	ldmia.w	r8, {r0, r1}
 801744c:	af04      	add	r7, sp, #16
 801744e:	e887 0003 	stmia.w	r7, {r0, r1}
 8017452:	4638      	mov	r0, r7
 8017454:	4621      	mov	r1, r4
 8017456:	f7f2 fde1 	bl	800a01c <_ZN8touchgfx4RectaNERKS0_>
 801745a:	4638      	mov	r0, r7
 801745c:	f7f2 fe21 	bl	800a0a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017460:	b138      	cbz	r0, 8017472 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 8017462:	9600      	str	r6, [sp, #0]
 8017464:	4623      	mov	r3, r4
 8017466:	aa02      	add	r2, sp, #8
 8017468:	4649      	mov	r1, r9
 801746a:	4628      	mov	r0, r5
 801746c:	f7ff fdca 	bl	8017004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017470:	e731      	b.n	80172d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017472:	e9cd 6000 	strd	r6, r0, [sp]
 8017476:	f8da 3000 	ldr.w	r3, [sl]
 801747a:	aa02      	add	r2, sp, #8
 801747c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8017480:	4629      	mov	r1, r5
 8017482:	463b      	mov	r3, r7
 8017484:	4650      	mov	r0, sl
 8017486:	47d8      	blx	fp
 8017488:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801748c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017490:	4293      	cmp	r3, r2
 8017492:	dd13      	ble.n	80174bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8017494:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017498:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801749c:	f8ad 0018 	strh.w	r0, [sp, #24]
 80174a0:	1a9b      	subs	r3, r3, r2
 80174a2:	f8ad 201a 	strh.w	r2, [sp, #26]
 80174a6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80174aa:	f8ad 301e 	strh.w	r3, [sp, #30]
 80174ae:	9600      	str	r6, [sp, #0]
 80174b0:	4643      	mov	r3, r8
 80174b2:	aa02      	add	r2, sp, #8
 80174b4:	4649      	mov	r1, r9
 80174b6:	4628      	mov	r0, r5
 80174b8:	f7ff fda4 	bl	8017004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80174bc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80174c0:	f9b4 2000 	ldrsh.w	r2, [r4]
 80174c4:	4293      	cmp	r3, r2
 80174c6:	dd13      	ble.n	80174f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 80174c8:	1a9b      	subs	r3, r3, r2
 80174ca:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80174ce:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80174d2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80174d6:	f8ad 001a 	strh.w	r0, [sp, #26]
 80174da:	f8ad 301c 	strh.w	r3, [sp, #28]
 80174de:	f8ad 101e 	strh.w	r1, [sp, #30]
 80174e2:	9600      	str	r6, [sp, #0]
 80174e4:	4643      	mov	r3, r8
 80174e6:	aa02      	add	r2, sp, #8
 80174e8:	4649      	mov	r1, r9
 80174ea:	4628      	mov	r0, r5
 80174ec:	f7ff fd8a 	bl	8017004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80174f0:	88a2      	ldrh	r2, [r4, #4]
 80174f2:	8823      	ldrh	r3, [r4, #0]
 80174f4:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80174f8:	4413      	add	r3, r2
 80174fa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80174fe:	440a      	add	r2, r1
 8017500:	b29b      	uxth	r3, r3
 8017502:	b292      	uxth	r2, r2
 8017504:	b211      	sxth	r1, r2
 8017506:	b218      	sxth	r0, r3
 8017508:	4288      	cmp	r0, r1
 801750a:	dd13      	ble.n	8017534 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 801750c:	1a9b      	subs	r3, r3, r2
 801750e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8017512:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8017516:	f8ad 1018 	strh.w	r1, [sp, #24]
 801751a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801751e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8017522:	9600      	str	r6, [sp, #0]
 8017524:	4643      	mov	r3, r8
 8017526:	aa02      	add	r2, sp, #8
 8017528:	4649      	mov	r1, r9
 801752a:	4628      	mov	r0, r5
 801752c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8017530:	f7ff fd68 	bl	8017004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017534:	88e2      	ldrh	r2, [r4, #6]
 8017536:	8863      	ldrh	r3, [r4, #2]
 8017538:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801753c:	4413      	add	r3, r2
 801753e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8017542:	440a      	add	r2, r1
 8017544:	b29b      	uxth	r3, r3
 8017546:	b292      	uxth	r2, r2
 8017548:	b211      	sxth	r1, r2
 801754a:	b218      	sxth	r0, r3
 801754c:	4288      	cmp	r0, r1
 801754e:	f77f aec2 	ble.w	80172d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017552:	f9b4 7000 	ldrsh.w	r7, [r4]
 8017556:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801755a:	f8ad 7018 	strh.w	r7, [sp, #24]
 801755e:	1a9b      	subs	r3, r3, r2
 8017560:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017564:	f8ad 101a 	strh.w	r1, [sp, #26]
 8017568:	f8ad 001c 	strh.w	r0, [sp, #28]
 801756c:	9600      	str	r6, [sp, #0]
 801756e:	4643      	mov	r3, r8
 8017570:	e779      	b.n	8017466 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 8017572:	bf00      	nop
 8017574:	20017564 	.word	0x20017564

08017578 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8017578:	b180      	cbz	r0, 801759c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801757a:	2903      	cmp	r1, #3
 801757c:	d81c      	bhi.n	80175b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801757e:	e8df f001 	tbb	[pc, r1]
 8017582:	1d02      	.short	0x1d02
 8017584:	1f08      	.short	0x1f08
 8017586:	4b10      	ldr	r3, [pc, #64]	; (80175c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017588:	8818      	ldrh	r0, [r3, #0]
 801758a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801758e:	4240      	negs	r0, r0
 8017590:	4770      	bx	lr
 8017592:	4b0d      	ldr	r3, [pc, #52]	; (80175c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017594:	8818      	ldrh	r0, [r3, #0]
 8017596:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801759a:	4770      	bx	lr
 801759c:	2903      	cmp	r1, #3
 801759e:	d80b      	bhi.n	80175b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80175a0:	a301      	add	r3, pc, #4	; (adr r3, 80175a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80175a2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80175a6:	bf00      	nop
 80175a8:	080175bd 	.word	0x080175bd
 80175ac:	08017593 	.word	0x08017593
 80175b0:	080175c1 	.word	0x080175c1
 80175b4:	08017587 	.word	0x08017587
 80175b8:	2000      	movs	r0, #0
 80175ba:	4770      	bx	lr
 80175bc:	2001      	movs	r0, #1
 80175be:	4770      	bx	lr
 80175c0:	f04f 30ff 	mov.w	r0, #4294967295
 80175c4:	4770      	bx	lr
 80175c6:	bf00      	nop
 80175c8:	2001755e 	.word	0x2001755e

080175cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80175cc:	b180      	cbz	r0, 80175f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80175ce:	2903      	cmp	r1, #3
 80175d0:	d81c      	bhi.n	801760c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80175d2:	e8df f001 	tbb	[pc, r1]
 80175d6:	021d      	.short	0x021d
 80175d8:	071f      	.short	0x071f
 80175da:	4b10      	ldr	r3, [pc, #64]	; (801761c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80175dc:	8818      	ldrh	r0, [r3, #0]
 80175de:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80175e2:	4770      	bx	lr
 80175e4:	4b0d      	ldr	r3, [pc, #52]	; (801761c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80175e6:	8818      	ldrh	r0, [r3, #0]
 80175e8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80175ec:	4240      	negs	r0, r0
 80175ee:	4770      	bx	lr
 80175f0:	2903      	cmp	r1, #3
 80175f2:	d80b      	bhi.n	801760c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80175f4:	a301      	add	r3, pc, #4	; (adr r3, 80175fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80175f6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80175fa:	bf00      	nop
 80175fc:	080175db 	.word	0x080175db
 8017600:	08017615 	.word	0x08017615
 8017604:	080175e5 	.word	0x080175e5
 8017608:	08017611 	.word	0x08017611
 801760c:	2000      	movs	r0, #0
 801760e:	4770      	bx	lr
 8017610:	2001      	movs	r0, #1
 8017612:	4770      	bx	lr
 8017614:	f04f 30ff 	mov.w	r0, #4294967295
 8017618:	4770      	bx	lr
 801761a:	bf00      	nop
 801761c:	2001755e 	.word	0x2001755e

08017620 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8017620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017624:	b099      	sub	sp, #100	; 0x64
 8017626:	910b      	str	r1, [sp, #44]	; 0x2c
 8017628:	a914      	add	r1, sp, #80	; 0x50
 801762a:	e881 000c 	stmia.w	r1, {r2, r3}
 801762e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8017632:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8017636:	f891 900d 	ldrb.w	r9, [r1, #13]
 801763a:	9309      	str	r3, [sp, #36]	; 0x24
 801763c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8017640:	9310      	str	r3, [sp, #64]	; 0x40
 8017642:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8017646:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801764a:	930c      	str	r3, [sp, #48]	; 0x30
 801764c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8017650:	798f      	ldrb	r7, [r1, #6]
 8017652:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8017656:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801765a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801765e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8017662:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8017666:	431f      	orrs	r7, r3
 8017668:	f000 8195 	beq.w	8017996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801766c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8017670:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017674:	f891 9007 	ldrb.w	r9, [r1, #7]
 8017678:	ea59 0903 	orrs.w	r9, r9, r3
 801767c:	f000 818b 	beq.w	8017996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017680:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8017684:	b29b      	uxth	r3, r3
 8017686:	2d00      	cmp	r5, #0
 8017688:	f000 812e 	beq.w	80178e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801768c:	1aed      	subs	r5, r5, r3
 801768e:	b2ad      	uxth	r5, r5
 8017690:	042b      	lsls	r3, r5, #16
 8017692:	d502      	bpl.n	801769a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8017694:	1b64      	subs	r4, r4, r5
 8017696:	b224      	sxth	r4, r4
 8017698:	2500      	movs	r5, #0
 801769a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801769e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80176a2:	428c      	cmp	r4, r1
 80176a4:	b28b      	uxth	r3, r1
 80176a6:	bfbf      	itttt	lt
 80176a8:	18ed      	addlt	r5, r5, r3
 80176aa:	1b2c      	sublt	r4, r5, r4
 80176ac:	b2a5      	uxthlt	r5, r4
 80176ae:	460c      	movlt	r4, r1
 80176b0:	8891      	ldrh	r1, [r2, #4]
 80176b2:	440b      	add	r3, r1
 80176b4:	b21b      	sxth	r3, r3
 80176b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80176b8:	88d3      	ldrh	r3, [r2, #6]
 80176ba:	8852      	ldrh	r2, [r2, #2]
 80176bc:	4413      	add	r3, r2
 80176be:	b21b      	sxth	r3, r3
 80176c0:	930d      	str	r3, [sp, #52]	; 0x34
 80176c2:	4bbe      	ldr	r3, [pc, #760]	; (80179bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80176c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80176c6:	f893 b000 	ldrb.w	fp, [r3]
 80176ca:	f10b 3cff 	add.w	ip, fp, #4294967295
 80176ce:	f1dc 0300 	rsbs	r3, ip, #0
 80176d2:	eb43 030c 	adc.w	r3, r3, ip
 80176d6:	930e      	str	r3, [sp, #56]	; 0x38
 80176d8:	4621      	mov	r1, r4
 80176da:	4653      	mov	r3, sl
 80176dc:	a814      	add	r0, sp, #80	; 0x50
 80176de:	f7f8 f8b5 	bl	800f84c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80176e2:	4621      	mov	r1, r4
 80176e4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80176e8:	4653      	mov	r3, sl
 80176ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80176ec:	a814      	add	r0, sp, #80	; 0x50
 80176ee:	f7f8 f8ca 	bl	800f886 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80176f2:	a918      	add	r1, sp, #96	; 0x60
 80176f4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80176f8:	a817      	add	r0, sp, #92	; 0x5c
 80176fa:	f7f8 f9eb 	bl	800fad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80176fe:	f1ba 0f00 	cmp.w	sl, #0
 8017702:	f040 80f4 	bne.w	80178ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8017706:	f1bb 0f01 	cmp.w	fp, #1
 801770a:	f040 80f8 	bne.w	80178fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801770e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017710:	2b00      	cmp	r3, #0
 8017712:	f040 8145 	bne.w	80179a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8017716:	b2ba      	uxth	r2, r7
 8017718:	b905      	cbnz	r5, 801771c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801771a:	b16e      	cbz	r6, 8017738 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801771c:	fb06 5302 	mla	r3, r6, r2, r5
 8017720:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8017722:	fb08 f303 	mul.w	r3, r8, r3
 8017726:	4631      	mov	r1, r6
 8017728:	f003 0607 	and.w	r6, r3, #7
 801772c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8017730:	9328      	str	r3, [sp, #160]	; 0xa0
 8017732:	eba9 0301 	sub.w	r3, r9, r1
 8017736:	930a      	str	r3, [sp, #40]	; 0x28
 8017738:	4651      	mov	r1, sl
 801773a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801773c:	f7ff ff1c 	bl	8017578 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8017740:	4681      	mov	r9, r0
 8017742:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017744:	f7ff ff42 	bl	80175cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8017748:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801774a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801774c:	eba3 0a01 	sub.w	sl, r3, r1
 8017750:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017752:	459a      	cmp	sl, r3
 8017754:	bfa8      	it	ge
 8017756:	469a      	movge	sl, r3
 8017758:	f1ba 0f00 	cmp.w	sl, #0
 801775c:	4683      	mov	fp, r0
 801775e:	f340 811a 	ble.w	8017996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017762:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017764:	1b64      	subs	r4, r4, r5
 8017766:	1b1c      	subs	r4, r3, r4
 8017768:	42bc      	cmp	r4, r7
 801776a:	bfd4      	ite	le
 801776c:	ebc5 0504 	rsble	r5, r5, r4
 8017770:	ebc5 0507 	rsbgt	r5, r5, r7
 8017774:	2d00      	cmp	r5, #0
 8017776:	f340 810e 	ble.w	8017996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801777a:	1b52      	subs	r2, r2, r5
 801777c:	fb08 f302 	mul.w	r3, r8, r2
 8017780:	930f      	str	r3, [sp, #60]	; 0x3c
 8017782:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017784:	2b00      	cmp	r3, #0
 8017786:	f040 8116 	bne.w	80179b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801778a:	4b8d      	ldr	r3, [pc, #564]	; (80179c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801778c:	6818      	ldr	r0, [r3, #0]
 801778e:	6803      	ldr	r3, [r0, #0]
 8017790:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017792:	4798      	blx	r3
 8017794:	2301      	movs	r3, #1
 8017796:	fa03 f308 	lsl.w	r3, r3, r8
 801779a:	4a8a      	ldr	r2, [pc, #552]	; (80179c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801779c:	3b01      	subs	r3, #1
 801779e:	b2db      	uxtb	r3, r3
 80177a0:	8811      	ldrh	r1, [r2, #0]
 80177a2:	930e      	str	r3, [sp, #56]	; 0x38
 80177a4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 80177a8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80177ac:	fb01 2303 	mla	r3, r1, r3, r2
 80177b0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80177b4:	930a      	str	r3, [sp, #40]	; 0x28
 80177b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80177b8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80177bc:	9313      	str	r3, [sp, #76]	; 0x4c
 80177be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80177c0:	0a19      	lsrs	r1, r3, #8
 80177c2:	b2cb      	uxtb	r3, r1
 80177c4:	9312      	str	r3, [sp, #72]	; 0x48
 80177c6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80177c8:	b2db      	uxtb	r3, r3
 80177ca:	9311      	str	r3, [sp, #68]	; 0x44
 80177cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80177ce:	095a      	lsrs	r2, r3, #5
 80177d0:	4b7d      	ldr	r3, [pc, #500]	; (80179c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80177d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80177d6:	400b      	ands	r3, r1
 80177d8:	4313      	orrs	r3, r2
 80177da:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80177dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80177e0:	4313      	orrs	r3, r2
 80177e2:	b29b      	uxth	r3, r3
 80177e4:	9310      	str	r3, [sp, #64]	; 0x40
 80177e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80177e8:	781a      	ldrb	r2, [r3, #0]
 80177ea:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80177ee:	4132      	asrs	r2, r6
 80177f0:	fb05 b919 	mls	r9, r5, r9, fp
 80177f4:	fb03 fb05 	mul.w	fp, r3, r5
 80177f8:	b2d2      	uxtb	r2, r2
 80177fa:	930d      	str	r3, [sp, #52]	; 0x34
 80177fc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8017800:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8017804:	f0c0 80f5 	bcc.w	80179f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8017808:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801780c:	46ae      	mov	lr, r5
 801780e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8017812:	f0c0 80dd 	bcc.w	80179d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8017816:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017818:	4013      	ands	r3, r2
 801781a:	d055      	beq.n	80178c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801781c:	20ff      	movs	r0, #255	; 0xff
 801781e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017820:	fb90 f1f1 	sdiv	r1, r0, r1
 8017824:	434b      	muls	r3, r1
 8017826:	2bfe      	cmp	r3, #254	; 0xfe
 8017828:	dd03      	ble.n	8017832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801782a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801782c:	4281      	cmp	r1, r0
 801782e:	f000 80cd 	beq.w	80179cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8017832:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017834:	f8bc 4000 	ldrh.w	r4, [ip]
 8017838:	fb11 f303 	smulbb	r3, r1, r3
 801783c:	b29b      	uxth	r3, r3
 801783e:	1c59      	adds	r1, r3, #1
 8017840:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017844:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017848:	b29f      	uxth	r7, r3
 801784a:	43db      	mvns	r3, r3
 801784c:	b2db      	uxtb	r3, r3
 801784e:	9309      	str	r3, [sp, #36]	; 0x24
 8017850:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017852:	1220      	asrs	r0, r4, #8
 8017854:	fb13 f907 	smulbb	r9, r3, r7
 8017858:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801785c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801785e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8017862:	fb00 9003 	mla	r0, r0, r3, r9
 8017866:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017868:	10e1      	asrs	r1, r4, #3
 801786a:	fb13 f907 	smulbb	r9, r3, r7
 801786e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017872:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017874:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8017878:	fb01 9103 	mla	r1, r1, r3, r9
 801787c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801787e:	00e4      	lsls	r4, r4, #3
 8017880:	fb13 f707 	smulbb	r7, r3, r7
 8017884:	b2e4      	uxtb	r4, r4
 8017886:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017888:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801788c:	fb04 7403 	mla	r4, r4, r3, r7
 8017890:	b280      	uxth	r0, r0
 8017892:	b2a4      	uxth	r4, r4
 8017894:	1c43      	adds	r3, r0, #1
 8017896:	f104 0901 	add.w	r9, r4, #1
 801789a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801789e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80178a2:	b289      	uxth	r1, r1
 80178a4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80178a8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80178ac:	ea49 0000 	orr.w	r0, r9, r0
 80178b0:	f101 0901 	add.w	r9, r1, #1
 80178b4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80178b8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80178bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80178c0:	ea40 0009 	orr.w	r0, r0, r9
 80178c4:	f8ac 0000 	strh.w	r0, [ip]
 80178c8:	4446      	add	r6, r8
 80178ca:	b2b6      	uxth	r6, r6
 80178cc:	2e07      	cmp	r6, #7
 80178ce:	bf81      	itttt	hi
 80178d0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 80178d2:	785a      	ldrbhi	r2, [r3, #1]
 80178d4:	3301      	addhi	r3, #1
 80178d6:	9328      	strhi	r3, [sp, #160]	; 0xa0
 80178d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80178da:	bf9a      	itte	ls
 80178dc:	fa42 f208 	asrls.w	r2, r2, r8
 80178e0:	b2d2      	uxtbls	r2, r2
 80178e2:	2600      	movhi	r6, #0
 80178e4:	449c      	add	ip, r3
 80178e6:	e792      	b.n	801780e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80178e8:	441c      	add	r4, r3
 80178ea:	b224      	sxth	r4, r4
 80178ec:	e6d5      	b.n	801769a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80178ee:	f1ba 0f01 	cmp.w	sl, #1
 80178f2:	f47f af0c 	bne.w	801770e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80178f6:	f1bb 0f01 	cmp.w	fp, #1
 80178fa:	f47f af08 	bne.w	801770e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80178fe:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 80179c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8017902:	f8db 0000 	ldr.w	r0, [fp]
 8017906:	6803      	ldr	r3, [r0, #0]
 8017908:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801790a:	4798      	blx	r3
 801790c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8017910:	465a      	mov	r2, fp
 8017912:	d006      	beq.n	8017922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8017914:	f1b8 0f04 	cmp.w	r8, #4
 8017918:	d140      	bne.n	801799c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801791a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801791c:	3300      	adds	r3, #0
 801791e:	bf18      	it	ne
 8017920:	2301      	movne	r3, #1
 8017922:	0580      	lsls	r0, r0, #22
 8017924:	d56e      	bpl.n	8017a04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8017926:	f1b8 0f08 	cmp.w	r8, #8
 801792a:	d16b      	bne.n	8017a04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801792c:	2b00      	cmp	r3, #0
 801792e:	bf0c      	ite	eq
 8017930:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8017934:	f44f 7180 	movne.w	r1, #256	; 0x100
 8017938:	2d00      	cmp	r5, #0
 801793a:	f47f aee8 	bne.w	801770e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801793e:	2e00      	cmp	r6, #0
 8017940:	f47f aee5 	bne.w	801770e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017944:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017946:	19e3      	adds	r3, r4, r7
 8017948:	4283      	cmp	r3, r0
 801794a:	f73f aee0 	bgt.w	801770e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801794e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017950:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017952:	444b      	add	r3, r9
 8017954:	4283      	cmp	r3, r0
 8017956:	f73f aeda 	bgt.w	801770e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801795a:	6810      	ldr	r0, [r2, #0]
 801795c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8017960:	6804      	ldr	r4, [r0, #0]
 8017962:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8017966:	b2bf      	uxth	r7, r7
 8017968:	f1b8 0f08 	cmp.w	r8, #8
 801796c:	f04f 0500 	mov.w	r5, #0
 8017970:	bf18      	it	ne
 8017972:	3701      	addne	r7, #1
 8017974:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8017978:	990c      	ldr	r1, [sp, #48]	; 0x30
 801797a:	9104      	str	r1, [sp, #16]
 801797c:	bf18      	it	ne
 801797e:	f027 0701 	bicne.w	r7, r7, #1
 8017982:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8017984:	bf18      	it	ne
 8017986:	b2bf      	uxthne	r7, r7
 8017988:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801798c:	e9cd 7900 	strd	r7, r9, [sp]
 8017990:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017992:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8017994:	47a0      	blx	r4
 8017996:	b019      	add	sp, #100	; 0x64
 8017998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801799c:	2300      	movs	r3, #0
 801799e:	e7c0      	b.n	8017922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80179a0:	2208      	movs	r2, #8
 80179a2:	fb92 f3f8 	sdiv	r3, r2, r8
 80179a6:	1e5a      	subs	r2, r3, #1
 80179a8:	443a      	add	r2, r7
 80179aa:	fb92 f2f3 	sdiv	r2, r2, r3
 80179ae:	fb12 f203 	smulbb	r2, r2, r3
 80179b2:	b292      	uxth	r2, r2
 80179b4:	e6b0      	b.n	8017718 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80179b6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80179b8:	e6ec      	b.n	8017794 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80179ba:	bf00      	nop
 80179bc:	2001755c 	.word	0x2001755c
 80179c0:	20017564 	.word	0x20017564
 80179c4:	2001755e 	.word	0x2001755e
 80179c8:	00fff800 	.word	0x00fff800
 80179cc:	9810      	ldr	r0, [sp, #64]	; 0x40
 80179ce:	e779      	b.n	80178c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 80179d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80179d2:	b153      	cbz	r3, 80179ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80179d4:	441e      	add	r6, r3
 80179d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80179d8:	b2b6      	uxth	r6, r6
 80179da:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 80179de:	f006 0607 	and.w	r6, r6, #7
 80179e2:	781a      	ldrb	r2, [r3, #0]
 80179e4:	9328      	str	r3, [sp, #160]	; 0xa0
 80179e6:	4132      	asrs	r2, r6
 80179e8:	b2d2      	uxtb	r2, r2
 80179ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80179ec:	445b      	add	r3, fp
 80179ee:	930a      	str	r3, [sp, #40]	; 0x28
 80179f0:	e706      	b.n	8017800 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80179f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80179f4:	2b00      	cmp	r3, #0
 80179f6:	d1ce      	bne.n	8017996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80179f8:	4b05      	ldr	r3, [pc, #20]	; (8017a10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80179fa:	6818      	ldr	r0, [r3, #0]
 80179fc:	6803      	ldr	r3, [r0, #0]
 80179fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017a00:	4798      	blx	r3
 8017a02:	e7c8      	b.n	8017996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017a04:	2b00      	cmp	r3, #0
 8017a06:	f43f ae82 	beq.w	801770e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017a0a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8017a0e:	e793      	b.n	8017938 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8017a10:	20017564 	.word	0x20017564

08017a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8017a14:	b538      	push	{r3, r4, r5, lr}
 8017a16:	4c15      	ldr	r4, [pc, #84]	; (8017a6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8017a18:	7823      	ldrb	r3, [r4, #0]
 8017a1a:	f3bf 8f5b 	dmb	ish
 8017a1e:	07da      	lsls	r2, r3, #31
 8017a20:	4605      	mov	r5, r0
 8017a22:	d40b      	bmi.n	8017a3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017a24:	4620      	mov	r0, r4
 8017a26:	f007 fd73 	bl	801f510 <__cxa_guard_acquire>
 8017a2a:	b138      	cbz	r0, 8017a3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017a2c:	4620      	mov	r0, r4
 8017a2e:	f007 fd7b 	bl	801f528 <__cxa_guard_release>
 8017a32:	4a0f      	ldr	r2, [pc, #60]	; (8017a70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8017a34:	490f      	ldr	r1, [pc, #60]	; (8017a74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8017a36:	4810      	ldr	r0, [pc, #64]	; (8017a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8017a38:	f007 fd63 	bl	801f502 <__aeabi_atexit>
 8017a3c:	4c0f      	ldr	r4, [pc, #60]	; (8017a7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8017a3e:	7823      	ldrb	r3, [r4, #0]
 8017a40:	f3bf 8f5b 	dmb	ish
 8017a44:	07db      	lsls	r3, r3, #31
 8017a46:	d40b      	bmi.n	8017a60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8017a48:	4620      	mov	r0, r4
 8017a4a:	f007 fd61 	bl	801f510 <__cxa_guard_acquire>
 8017a4e:	b138      	cbz	r0, 8017a60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8017a50:	4620      	mov	r0, r4
 8017a52:	f007 fd69 	bl	801f528 <__cxa_guard_release>
 8017a56:	4a06      	ldr	r2, [pc, #24]	; (8017a70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8017a58:	4909      	ldr	r1, [pc, #36]	; (8017a80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8017a5a:	480a      	ldr	r0, [pc, #40]	; (8017a84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8017a5c:	f007 fd51 	bl	801f502 <__aeabi_atexit>
 8017a60:	4b05      	ldr	r3, [pc, #20]	; (8017a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8017a62:	612b      	str	r3, [r5, #16]
 8017a64:	4b07      	ldr	r3, [pc, #28]	; (8017a84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8017a66:	616b      	str	r3, [r5, #20]
 8017a68:	bd38      	pop	{r3, r4, r5, pc}
 8017a6a:	bf00      	nop
 8017a6c:	20017638 	.word	0x20017638
 8017a70:	20000000 	.word	0x20000000
 8017a74:	08015c25 	.word	0x08015c25
 8017a78:	200000cc 	.word	0x200000cc
 8017a7c:	2001763c 	.word	0x2001763c
 8017a80:	08015c23 	.word	0x08015c23
 8017a84:	200000d0 	.word	0x200000d0

08017a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8017a88:	b538      	push	{r3, r4, r5, lr}
 8017a8a:	4c15      	ldr	r4, [pc, #84]	; (8017ae0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8017a8c:	7823      	ldrb	r3, [r4, #0]
 8017a8e:	f3bf 8f5b 	dmb	ish
 8017a92:	07da      	lsls	r2, r3, #31
 8017a94:	4605      	mov	r5, r0
 8017a96:	d40b      	bmi.n	8017ab0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017a98:	4620      	mov	r0, r4
 8017a9a:	f007 fd39 	bl	801f510 <__cxa_guard_acquire>
 8017a9e:	b138      	cbz	r0, 8017ab0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017aa0:	4620      	mov	r0, r4
 8017aa2:	f007 fd41 	bl	801f528 <__cxa_guard_release>
 8017aa6:	4a0f      	ldr	r2, [pc, #60]	; (8017ae4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017aa8:	490f      	ldr	r1, [pc, #60]	; (8017ae8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8017aaa:	4810      	ldr	r0, [pc, #64]	; (8017aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017aac:	f007 fd29 	bl	801f502 <__aeabi_atexit>
 8017ab0:	4c0f      	ldr	r4, [pc, #60]	; (8017af0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8017ab2:	7823      	ldrb	r3, [r4, #0]
 8017ab4:	f3bf 8f5b 	dmb	ish
 8017ab8:	07db      	lsls	r3, r3, #31
 8017aba:	d40b      	bmi.n	8017ad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017abc:	4620      	mov	r0, r4
 8017abe:	f007 fd27 	bl	801f510 <__cxa_guard_acquire>
 8017ac2:	b138      	cbz	r0, 8017ad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017ac4:	4620      	mov	r0, r4
 8017ac6:	f007 fd2f 	bl	801f528 <__cxa_guard_release>
 8017aca:	4a06      	ldr	r2, [pc, #24]	; (8017ae4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017acc:	4909      	ldr	r1, [pc, #36]	; (8017af4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8017ace:	480a      	ldr	r0, [pc, #40]	; (8017af8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017ad0:	f007 fd17 	bl	801f502 <__aeabi_atexit>
 8017ad4:	4b05      	ldr	r3, [pc, #20]	; (8017aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017ad6:	60ab      	str	r3, [r5, #8]
 8017ad8:	4b07      	ldr	r3, [pc, #28]	; (8017af8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017ada:	60eb      	str	r3, [r5, #12]
 8017adc:	bd38      	pop	{r3, r4, r5, pc}
 8017ade:	bf00      	nop
 8017ae0:	20017610 	.word	0x20017610
 8017ae4:	20000000 	.word	0x20000000
 8017ae8:	08015c29 	.word	0x08015c29
 8017aec:	200000a4 	.word	0x200000a4
 8017af0:	20017614 	.word	0x20017614
 8017af4:	08015c27 	.word	0x08015c27
 8017af8:	200000a8 	.word	0x200000a8

08017afc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8017afc:	b510      	push	{r4, lr}
 8017afe:	4604      	mov	r4, r0
 8017b00:	f7ff ff88 	bl	8017a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8017b04:	4620      	mov	r0, r4
 8017b06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017b0a:	f7ff bfbd 	b.w	8017a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08017b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8017b10:	b538      	push	{r3, r4, r5, lr}
 8017b12:	4c15      	ldr	r4, [pc, #84]	; (8017b68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8017b14:	7823      	ldrb	r3, [r4, #0]
 8017b16:	f3bf 8f5b 	dmb	ish
 8017b1a:	07da      	lsls	r2, r3, #31
 8017b1c:	4605      	mov	r5, r0
 8017b1e:	d40b      	bmi.n	8017b38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017b20:	4620      	mov	r0, r4
 8017b22:	f007 fcf5 	bl	801f510 <__cxa_guard_acquire>
 8017b26:	b138      	cbz	r0, 8017b38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017b28:	4620      	mov	r0, r4
 8017b2a:	f007 fcfd 	bl	801f528 <__cxa_guard_release>
 8017b2e:	4a0f      	ldr	r2, [pc, #60]	; (8017b6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017b30:	490f      	ldr	r1, [pc, #60]	; (8017b70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8017b32:	4810      	ldr	r0, [pc, #64]	; (8017b74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017b34:	f007 fce5 	bl	801f502 <__aeabi_atexit>
 8017b38:	4c0f      	ldr	r4, [pc, #60]	; (8017b78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8017b3a:	7823      	ldrb	r3, [r4, #0]
 8017b3c:	f3bf 8f5b 	dmb	ish
 8017b40:	07db      	lsls	r3, r3, #31
 8017b42:	d40b      	bmi.n	8017b5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017b44:	4620      	mov	r0, r4
 8017b46:	f007 fce3 	bl	801f510 <__cxa_guard_acquire>
 8017b4a:	b138      	cbz	r0, 8017b5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017b4c:	4620      	mov	r0, r4
 8017b4e:	f007 fceb 	bl	801f528 <__cxa_guard_release>
 8017b52:	4a06      	ldr	r2, [pc, #24]	; (8017b6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017b54:	4909      	ldr	r1, [pc, #36]	; (8017b7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8017b56:	480a      	ldr	r0, [pc, #40]	; (8017b80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017b58:	f007 fcd3 	bl	801f502 <__aeabi_atexit>
 8017b5c:	4b05      	ldr	r3, [pc, #20]	; (8017b74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017b5e:	622b      	str	r3, [r5, #32]
 8017b60:	4b07      	ldr	r3, [pc, #28]	; (8017b80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017b62:	626b      	str	r3, [r5, #36]	; 0x24
 8017b64:	bd38      	pop	{r3, r4, r5, pc}
 8017b66:	bf00      	nop
 8017b68:	20017640 	.word	0x20017640
 8017b6c:	20000000 	.word	0x20000000
 8017b70:	08015c1d 	.word	0x08015c1d
 8017b74:	200000d4 	.word	0x200000d4
 8017b78:	20017644 	.word	0x20017644
 8017b7c:	08015c1b 	.word	0x08015c1b
 8017b80:	200000d8 	.word	0x200000d8

08017b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8017b84:	b538      	push	{r3, r4, r5, lr}
 8017b86:	4c15      	ldr	r4, [pc, #84]	; (8017bdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8017b88:	7823      	ldrb	r3, [r4, #0]
 8017b8a:	f3bf 8f5b 	dmb	ish
 8017b8e:	07da      	lsls	r2, r3, #31
 8017b90:	4605      	mov	r5, r0
 8017b92:	d40b      	bmi.n	8017bac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017b94:	4620      	mov	r0, r4
 8017b96:	f007 fcbb 	bl	801f510 <__cxa_guard_acquire>
 8017b9a:	b138      	cbz	r0, 8017bac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017b9c:	4620      	mov	r0, r4
 8017b9e:	f007 fcc3 	bl	801f528 <__cxa_guard_release>
 8017ba2:	4a0f      	ldr	r2, [pc, #60]	; (8017be0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017ba4:	490f      	ldr	r1, [pc, #60]	; (8017be4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8017ba6:	4810      	ldr	r0, [pc, #64]	; (8017be8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017ba8:	f007 fcab 	bl	801f502 <__aeabi_atexit>
 8017bac:	4c0f      	ldr	r4, [pc, #60]	; (8017bec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8017bae:	7823      	ldrb	r3, [r4, #0]
 8017bb0:	f3bf 8f5b 	dmb	ish
 8017bb4:	07db      	lsls	r3, r3, #31
 8017bb6:	d40b      	bmi.n	8017bd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017bb8:	4620      	mov	r0, r4
 8017bba:	f007 fca9 	bl	801f510 <__cxa_guard_acquire>
 8017bbe:	b138      	cbz	r0, 8017bd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017bc0:	4620      	mov	r0, r4
 8017bc2:	f007 fcb1 	bl	801f528 <__cxa_guard_release>
 8017bc6:	4a06      	ldr	r2, [pc, #24]	; (8017be0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017bc8:	4909      	ldr	r1, [pc, #36]	; (8017bf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8017bca:	480a      	ldr	r0, [pc, #40]	; (8017bf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017bcc:	f007 fc99 	bl	801f502 <__aeabi_atexit>
 8017bd0:	4b05      	ldr	r3, [pc, #20]	; (8017be8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017bd2:	61ab      	str	r3, [r5, #24]
 8017bd4:	4b07      	ldr	r3, [pc, #28]	; (8017bf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017bd6:	61eb      	str	r3, [r5, #28]
 8017bd8:	bd38      	pop	{r3, r4, r5, pc}
 8017bda:	bf00      	nop
 8017bdc:	20017618 	.word	0x20017618
 8017be0:	20000000 	.word	0x20000000
 8017be4:	08015c21 	.word	0x08015c21
 8017be8:	200000ac 	.word	0x200000ac
 8017bec:	2001761c 	.word	0x2001761c
 8017bf0:	08015c1f 	.word	0x08015c1f
 8017bf4:	200000b0 	.word	0x200000b0

08017bf8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8017bf8:	b510      	push	{r4, lr}
 8017bfa:	4604      	mov	r4, r0
 8017bfc:	f7ff ff88 	bl	8017b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8017c00:	4620      	mov	r0, r4
 8017c02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017c06:	f7ff bfbd 	b.w	8017b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08017c0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8017c0c:	b538      	push	{r3, r4, r5, lr}
 8017c0e:	4c15      	ldr	r4, [pc, #84]	; (8017c64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8017c10:	7823      	ldrb	r3, [r4, #0]
 8017c12:	f3bf 8f5b 	dmb	ish
 8017c16:	07da      	lsls	r2, r3, #31
 8017c18:	4605      	mov	r5, r0
 8017c1a:	d40b      	bmi.n	8017c34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017c1c:	4620      	mov	r0, r4
 8017c1e:	f007 fc77 	bl	801f510 <__cxa_guard_acquire>
 8017c22:	b138      	cbz	r0, 8017c34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017c24:	4620      	mov	r0, r4
 8017c26:	f007 fc7f 	bl	801f528 <__cxa_guard_release>
 8017c2a:	4a0f      	ldr	r2, [pc, #60]	; (8017c68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017c2c:	490f      	ldr	r1, [pc, #60]	; (8017c6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8017c2e:	4810      	ldr	r0, [pc, #64]	; (8017c70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017c30:	f007 fc67 	bl	801f502 <__aeabi_atexit>
 8017c34:	4c0f      	ldr	r4, [pc, #60]	; (8017c74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8017c36:	7823      	ldrb	r3, [r4, #0]
 8017c38:	f3bf 8f5b 	dmb	ish
 8017c3c:	07db      	lsls	r3, r3, #31
 8017c3e:	d40b      	bmi.n	8017c58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017c40:	4620      	mov	r0, r4
 8017c42:	f007 fc65 	bl	801f510 <__cxa_guard_acquire>
 8017c46:	b138      	cbz	r0, 8017c58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017c48:	4620      	mov	r0, r4
 8017c4a:	f007 fc6d 	bl	801f528 <__cxa_guard_release>
 8017c4e:	4a06      	ldr	r2, [pc, #24]	; (8017c68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017c50:	4909      	ldr	r1, [pc, #36]	; (8017c78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8017c52:	480a      	ldr	r0, [pc, #40]	; (8017c7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017c54:	f007 fc55 	bl	801f502 <__aeabi_atexit>
 8017c58:	4b05      	ldr	r3, [pc, #20]	; (8017c70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017c5a:	632b      	str	r3, [r5, #48]	; 0x30
 8017c5c:	4b07      	ldr	r3, [pc, #28]	; (8017c7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017c5e:	636b      	str	r3, [r5, #52]	; 0x34
 8017c60:	bd38      	pop	{r3, r4, r5, pc}
 8017c62:	bf00      	nop
 8017c64:	20017650 	.word	0x20017650
 8017c68:	20000000 	.word	0x20000000
 8017c6c:	08015c15 	.word	0x08015c15
 8017c70:	200000e4 	.word	0x200000e4
 8017c74:	20017654 	.word	0x20017654
 8017c78:	08015c13 	.word	0x08015c13
 8017c7c:	200000e8 	.word	0x200000e8

08017c80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8017c80:	b538      	push	{r3, r4, r5, lr}
 8017c82:	4c15      	ldr	r4, [pc, #84]	; (8017cd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8017c84:	7823      	ldrb	r3, [r4, #0]
 8017c86:	f3bf 8f5b 	dmb	ish
 8017c8a:	07da      	lsls	r2, r3, #31
 8017c8c:	4605      	mov	r5, r0
 8017c8e:	d40b      	bmi.n	8017ca8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017c90:	4620      	mov	r0, r4
 8017c92:	f007 fc3d 	bl	801f510 <__cxa_guard_acquire>
 8017c96:	b138      	cbz	r0, 8017ca8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017c98:	4620      	mov	r0, r4
 8017c9a:	f007 fc45 	bl	801f528 <__cxa_guard_release>
 8017c9e:	4a0f      	ldr	r2, [pc, #60]	; (8017cdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017ca0:	490f      	ldr	r1, [pc, #60]	; (8017ce0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8017ca2:	4810      	ldr	r0, [pc, #64]	; (8017ce4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017ca4:	f007 fc2d 	bl	801f502 <__aeabi_atexit>
 8017ca8:	4c0f      	ldr	r4, [pc, #60]	; (8017ce8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8017caa:	7823      	ldrb	r3, [r4, #0]
 8017cac:	f3bf 8f5b 	dmb	ish
 8017cb0:	07db      	lsls	r3, r3, #31
 8017cb2:	d40b      	bmi.n	8017ccc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017cb4:	4620      	mov	r0, r4
 8017cb6:	f007 fc2b 	bl	801f510 <__cxa_guard_acquire>
 8017cba:	b138      	cbz	r0, 8017ccc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017cbc:	4620      	mov	r0, r4
 8017cbe:	f007 fc33 	bl	801f528 <__cxa_guard_release>
 8017cc2:	4a06      	ldr	r2, [pc, #24]	; (8017cdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017cc4:	4909      	ldr	r1, [pc, #36]	; (8017cec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8017cc6:	480a      	ldr	r0, [pc, #40]	; (8017cf0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017cc8:	f007 fc1b 	bl	801f502 <__aeabi_atexit>
 8017ccc:	4b05      	ldr	r3, [pc, #20]	; (8017ce4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017cce:	62ab      	str	r3, [r5, #40]	; 0x28
 8017cd0:	4b07      	ldr	r3, [pc, #28]	; (8017cf0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017cd2:	62eb      	str	r3, [r5, #44]	; 0x2c
 8017cd4:	bd38      	pop	{r3, r4, r5, pc}
 8017cd6:	bf00      	nop
 8017cd8:	20017620 	.word	0x20017620
 8017cdc:	20000000 	.word	0x20000000
 8017ce0:	08015c19 	.word	0x08015c19
 8017ce4:	200000b4 	.word	0x200000b4
 8017ce8:	20017624 	.word	0x20017624
 8017cec:	08015c17 	.word	0x08015c17
 8017cf0:	200000b8 	.word	0x200000b8

08017cf4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8017cf4:	b510      	push	{r4, lr}
 8017cf6:	4604      	mov	r4, r0
 8017cf8:	f7ff ff88 	bl	8017c0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8017cfc:	4620      	mov	r0, r4
 8017cfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017d02:	f7ff bfbd 	b.w	8017c80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08017d08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8017d08:	b538      	push	{r3, r4, r5, lr}
 8017d0a:	4c15      	ldr	r4, [pc, #84]	; (8017d60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8017d0c:	7823      	ldrb	r3, [r4, #0]
 8017d0e:	f3bf 8f5b 	dmb	ish
 8017d12:	07da      	lsls	r2, r3, #31
 8017d14:	4605      	mov	r5, r0
 8017d16:	d40b      	bmi.n	8017d30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8017d18:	4620      	mov	r0, r4
 8017d1a:	f007 fbf9 	bl	801f510 <__cxa_guard_acquire>
 8017d1e:	b138      	cbz	r0, 8017d30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8017d20:	4620      	mov	r0, r4
 8017d22:	f007 fc01 	bl	801f528 <__cxa_guard_release>
 8017d26:	4a0f      	ldr	r2, [pc, #60]	; (8017d64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8017d28:	490f      	ldr	r1, [pc, #60]	; (8017d68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8017d2a:	4810      	ldr	r0, [pc, #64]	; (8017d6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8017d2c:	f007 fbe9 	bl	801f502 <__aeabi_atexit>
 8017d30:	4c0f      	ldr	r4, [pc, #60]	; (8017d70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8017d32:	7823      	ldrb	r3, [r4, #0]
 8017d34:	f3bf 8f5b 	dmb	ish
 8017d38:	07db      	lsls	r3, r3, #31
 8017d3a:	d40b      	bmi.n	8017d54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017d3c:	4620      	mov	r0, r4
 8017d3e:	f007 fbe7 	bl	801f510 <__cxa_guard_acquire>
 8017d42:	b138      	cbz	r0, 8017d54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017d44:	4620      	mov	r0, r4
 8017d46:	f007 fbef 	bl	801f528 <__cxa_guard_release>
 8017d4a:	4a06      	ldr	r2, [pc, #24]	; (8017d64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8017d4c:	4909      	ldr	r1, [pc, #36]	; (8017d74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8017d4e:	480a      	ldr	r0, [pc, #40]	; (8017d78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8017d50:	f007 fbd7 	bl	801f502 <__aeabi_atexit>
 8017d54:	4b05      	ldr	r3, [pc, #20]	; (8017d6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8017d56:	652b      	str	r3, [r5, #80]	; 0x50
 8017d58:	4b07      	ldr	r3, [pc, #28]	; (8017d78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8017d5a:	656b      	str	r3, [r5, #84]	; 0x54
 8017d5c:	bd38      	pop	{r3, r4, r5, pc}
 8017d5e:	bf00      	nop
 8017d60:	20017658 	.word	0x20017658
 8017d64:	20000000 	.word	0x20000000
 8017d68:	08015c05 	.word	0x08015c05
 8017d6c:	200000ec 	.word	0x200000ec
 8017d70:	2001765c 	.word	0x2001765c
 8017d74:	08015c03 	.word	0x08015c03
 8017d78:	200000f0 	.word	0x200000f0

08017d7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8017d7c:	b538      	push	{r3, r4, r5, lr}
 8017d7e:	4c15      	ldr	r4, [pc, #84]	; (8017dd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8017d80:	7823      	ldrb	r3, [r4, #0]
 8017d82:	f3bf 8f5b 	dmb	ish
 8017d86:	07da      	lsls	r2, r3, #31
 8017d88:	4605      	mov	r5, r0
 8017d8a:	d40b      	bmi.n	8017da4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8017d8c:	4620      	mov	r0, r4
 8017d8e:	f007 fbbf 	bl	801f510 <__cxa_guard_acquire>
 8017d92:	b138      	cbz	r0, 8017da4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8017d94:	4620      	mov	r0, r4
 8017d96:	f007 fbc7 	bl	801f528 <__cxa_guard_release>
 8017d9a:	4a0f      	ldr	r2, [pc, #60]	; (8017dd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8017d9c:	490f      	ldr	r1, [pc, #60]	; (8017ddc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8017d9e:	4810      	ldr	r0, [pc, #64]	; (8017de0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8017da0:	f007 fbaf 	bl	801f502 <__aeabi_atexit>
 8017da4:	4c0f      	ldr	r4, [pc, #60]	; (8017de4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8017da6:	7823      	ldrb	r3, [r4, #0]
 8017da8:	f3bf 8f5b 	dmb	ish
 8017dac:	07db      	lsls	r3, r3, #31
 8017dae:	d40b      	bmi.n	8017dc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8017db0:	4620      	mov	r0, r4
 8017db2:	f007 fbad 	bl	801f510 <__cxa_guard_acquire>
 8017db6:	b138      	cbz	r0, 8017dc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8017db8:	4620      	mov	r0, r4
 8017dba:	f007 fbb5 	bl	801f528 <__cxa_guard_release>
 8017dbe:	4a06      	ldr	r2, [pc, #24]	; (8017dd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8017dc0:	4909      	ldr	r1, [pc, #36]	; (8017de8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8017dc2:	480a      	ldr	r0, [pc, #40]	; (8017dec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8017dc4:	f007 fb9d 	bl	801f502 <__aeabi_atexit>
 8017dc8:	4b05      	ldr	r3, [pc, #20]	; (8017de0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8017dca:	64ab      	str	r3, [r5, #72]	; 0x48
 8017dcc:	4b07      	ldr	r3, [pc, #28]	; (8017dec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8017dce:	64eb      	str	r3, [r5, #76]	; 0x4c
 8017dd0:	bd38      	pop	{r3, r4, r5, pc}
 8017dd2:	bf00      	nop
 8017dd4:	20017660 	.word	0x20017660
 8017dd8:	20000000 	.word	0x20000000
 8017ddc:	08015c09 	.word	0x08015c09
 8017de0:	200000f4 	.word	0x200000f4
 8017de4:	20017664 	.word	0x20017664
 8017de8:	08015c07 	.word	0x08015c07
 8017dec:	200000f8 	.word	0x200000f8

08017df0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8017df0:	b538      	push	{r3, r4, r5, lr}
 8017df2:	4c15      	ldr	r4, [pc, #84]	; (8017e48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8017df4:	7823      	ldrb	r3, [r4, #0]
 8017df6:	f3bf 8f5b 	dmb	ish
 8017dfa:	07da      	lsls	r2, r3, #31
 8017dfc:	4605      	mov	r5, r0
 8017dfe:	d40b      	bmi.n	8017e18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8017e00:	4620      	mov	r0, r4
 8017e02:	f007 fb85 	bl	801f510 <__cxa_guard_acquire>
 8017e06:	b138      	cbz	r0, 8017e18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8017e08:	4620      	mov	r0, r4
 8017e0a:	f007 fb8d 	bl	801f528 <__cxa_guard_release>
 8017e0e:	4a0f      	ldr	r2, [pc, #60]	; (8017e4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8017e10:	490f      	ldr	r1, [pc, #60]	; (8017e50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8017e12:	4810      	ldr	r0, [pc, #64]	; (8017e54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8017e14:	f007 fb75 	bl	801f502 <__aeabi_atexit>
 8017e18:	4c0f      	ldr	r4, [pc, #60]	; (8017e58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8017e1a:	7823      	ldrb	r3, [r4, #0]
 8017e1c:	f3bf 8f5b 	dmb	ish
 8017e20:	07db      	lsls	r3, r3, #31
 8017e22:	d40b      	bmi.n	8017e3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8017e24:	4620      	mov	r0, r4
 8017e26:	f007 fb73 	bl	801f510 <__cxa_guard_acquire>
 8017e2a:	b138      	cbz	r0, 8017e3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8017e2c:	4620      	mov	r0, r4
 8017e2e:	f007 fb7b 	bl	801f528 <__cxa_guard_release>
 8017e32:	4a06      	ldr	r2, [pc, #24]	; (8017e4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8017e34:	4909      	ldr	r1, [pc, #36]	; (8017e5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8017e36:	480a      	ldr	r0, [pc, #40]	; (8017e60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017e38:	f007 fb63 	bl	801f502 <__aeabi_atexit>
 8017e3c:	4b05      	ldr	r3, [pc, #20]	; (8017e54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8017e3e:	642b      	str	r3, [r5, #64]	; 0x40
 8017e40:	4b07      	ldr	r3, [pc, #28]	; (8017e60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017e42:	646b      	str	r3, [r5, #68]	; 0x44
 8017e44:	bd38      	pop	{r3, r4, r5, pc}
 8017e46:	bf00      	nop
 8017e48:	20017628 	.word	0x20017628
 8017e4c:	20000000 	.word	0x20000000
 8017e50:	08015c0d 	.word	0x08015c0d
 8017e54:	200000bc 	.word	0x200000bc
 8017e58:	2001762c 	.word	0x2001762c
 8017e5c:	08015c0b 	.word	0x08015c0b
 8017e60:	200000c0 	.word	0x200000c0

08017e64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8017e64:	b538      	push	{r3, r4, r5, lr}
 8017e66:	4c15      	ldr	r4, [pc, #84]	; (8017ebc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8017e68:	7823      	ldrb	r3, [r4, #0]
 8017e6a:	f3bf 8f5b 	dmb	ish
 8017e6e:	07da      	lsls	r2, r3, #31
 8017e70:	4605      	mov	r5, r0
 8017e72:	d40b      	bmi.n	8017e8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017e74:	4620      	mov	r0, r4
 8017e76:	f007 fb4b 	bl	801f510 <__cxa_guard_acquire>
 8017e7a:	b138      	cbz	r0, 8017e8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017e7c:	4620      	mov	r0, r4
 8017e7e:	f007 fb53 	bl	801f528 <__cxa_guard_release>
 8017e82:	4a0f      	ldr	r2, [pc, #60]	; (8017ec0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8017e84:	490f      	ldr	r1, [pc, #60]	; (8017ec4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8017e86:	4810      	ldr	r0, [pc, #64]	; (8017ec8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8017e88:	f007 fb3b 	bl	801f502 <__aeabi_atexit>
 8017e8c:	4c0f      	ldr	r4, [pc, #60]	; (8017ecc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8017e8e:	7823      	ldrb	r3, [r4, #0]
 8017e90:	f3bf 8f5b 	dmb	ish
 8017e94:	07db      	lsls	r3, r3, #31
 8017e96:	d40b      	bmi.n	8017eb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8017e98:	4620      	mov	r0, r4
 8017e9a:	f007 fb39 	bl	801f510 <__cxa_guard_acquire>
 8017e9e:	b138      	cbz	r0, 8017eb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8017ea0:	4620      	mov	r0, r4
 8017ea2:	f007 fb41 	bl	801f528 <__cxa_guard_release>
 8017ea6:	4a06      	ldr	r2, [pc, #24]	; (8017ec0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8017ea8:	4909      	ldr	r1, [pc, #36]	; (8017ed0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8017eaa:	480a      	ldr	r0, [pc, #40]	; (8017ed4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8017eac:	f007 fb29 	bl	801f502 <__aeabi_atexit>
 8017eb0:	4b05      	ldr	r3, [pc, #20]	; (8017ec8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8017eb2:	63ab      	str	r3, [r5, #56]	; 0x38
 8017eb4:	4b07      	ldr	r3, [pc, #28]	; (8017ed4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8017eb6:	63eb      	str	r3, [r5, #60]	; 0x3c
 8017eb8:	bd38      	pop	{r3, r4, r5, pc}
 8017eba:	bf00      	nop
 8017ebc:	20017648 	.word	0x20017648
 8017ec0:	20000000 	.word	0x20000000
 8017ec4:	08015c11 	.word	0x08015c11
 8017ec8:	200000dc 	.word	0x200000dc
 8017ecc:	2001764c 	.word	0x2001764c
 8017ed0:	08015c0f 	.word	0x08015c0f
 8017ed4:	200000e0 	.word	0x200000e0

08017ed8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8017ed8:	b510      	push	{r4, lr}
 8017eda:	4604      	mov	r4, r0
 8017edc:	f7ff ff14 	bl	8017d08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8017ee0:	4620      	mov	r0, r4
 8017ee2:	f7ff ff85 	bl	8017df0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8017ee6:	4620      	mov	r0, r4
 8017ee8:	f7ff ff48 	bl	8017d7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8017eec:	4620      	mov	r0, r4
 8017eee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017ef2:	f7ff bfb7 	b.w	8017e64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08017ef8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8017ef8:	b538      	push	{r3, r4, r5, lr}
 8017efa:	4c15      	ldr	r4, [pc, #84]	; (8017f50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8017efc:	7823      	ldrb	r3, [r4, #0]
 8017efe:	f3bf 8f5b 	dmb	ish
 8017f02:	07da      	lsls	r2, r3, #31
 8017f04:	4605      	mov	r5, r0
 8017f06:	d40b      	bmi.n	8017f20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8017f08:	4620      	mov	r0, r4
 8017f0a:	f007 fb01 	bl	801f510 <__cxa_guard_acquire>
 8017f0e:	b138      	cbz	r0, 8017f20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8017f10:	4620      	mov	r0, r4
 8017f12:	f007 fb09 	bl	801f528 <__cxa_guard_release>
 8017f16:	4a0f      	ldr	r2, [pc, #60]	; (8017f54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8017f18:	490f      	ldr	r1, [pc, #60]	; (8017f58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8017f1a:	4810      	ldr	r0, [pc, #64]	; (8017f5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8017f1c:	f007 faf1 	bl	801f502 <__aeabi_atexit>
 8017f20:	4c0f      	ldr	r4, [pc, #60]	; (8017f60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8017f22:	7823      	ldrb	r3, [r4, #0]
 8017f24:	f3bf 8f5b 	dmb	ish
 8017f28:	07db      	lsls	r3, r3, #31
 8017f2a:	d40b      	bmi.n	8017f44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8017f2c:	4620      	mov	r0, r4
 8017f2e:	f007 faef 	bl	801f510 <__cxa_guard_acquire>
 8017f32:	b138      	cbz	r0, 8017f44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8017f34:	4620      	mov	r0, r4
 8017f36:	f007 faf7 	bl	801f528 <__cxa_guard_release>
 8017f3a:	4a06      	ldr	r2, [pc, #24]	; (8017f54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8017f3c:	4909      	ldr	r1, [pc, #36]	; (8017f64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8017f3e:	480a      	ldr	r0, [pc, #40]	; (8017f68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8017f40:	f007 fadf 	bl	801f502 <__aeabi_atexit>
 8017f44:	4b05      	ldr	r3, [pc, #20]	; (8017f5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8017f46:	662b      	str	r3, [r5, #96]	; 0x60
 8017f48:	4b07      	ldr	r3, [pc, #28]	; (8017f68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8017f4a:	666b      	str	r3, [r5, #100]	; 0x64
 8017f4c:	bd38      	pop	{r3, r4, r5, pc}
 8017f4e:	bf00      	nop
 8017f50:	20017630 	.word	0x20017630
 8017f54:	20000000 	.word	0x20000000
 8017f58:	08015bfd 	.word	0x08015bfd
 8017f5c:	200000c4 	.word	0x200000c4
 8017f60:	20017634 	.word	0x20017634
 8017f64:	08015bfb 	.word	0x08015bfb
 8017f68:	200000c8 	.word	0x200000c8

08017f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8017f6c:	b538      	push	{r3, r4, r5, lr}
 8017f6e:	4c15      	ldr	r4, [pc, #84]	; (8017fc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8017f70:	7823      	ldrb	r3, [r4, #0]
 8017f72:	f3bf 8f5b 	dmb	ish
 8017f76:	07da      	lsls	r2, r3, #31
 8017f78:	4605      	mov	r5, r0
 8017f7a:	d40b      	bmi.n	8017f94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8017f7c:	4620      	mov	r0, r4
 8017f7e:	f007 fac7 	bl	801f510 <__cxa_guard_acquire>
 8017f82:	b138      	cbz	r0, 8017f94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8017f84:	4620      	mov	r0, r4
 8017f86:	f007 facf 	bl	801f528 <__cxa_guard_release>
 8017f8a:	4a0f      	ldr	r2, [pc, #60]	; (8017fc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8017f8c:	490f      	ldr	r1, [pc, #60]	; (8017fcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8017f8e:	4810      	ldr	r0, [pc, #64]	; (8017fd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8017f90:	f007 fab7 	bl	801f502 <__aeabi_atexit>
 8017f94:	4c0f      	ldr	r4, [pc, #60]	; (8017fd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8017f96:	7823      	ldrb	r3, [r4, #0]
 8017f98:	f3bf 8f5b 	dmb	ish
 8017f9c:	07db      	lsls	r3, r3, #31
 8017f9e:	d40b      	bmi.n	8017fb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8017fa0:	4620      	mov	r0, r4
 8017fa2:	f007 fab5 	bl	801f510 <__cxa_guard_acquire>
 8017fa6:	b138      	cbz	r0, 8017fb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8017fa8:	4620      	mov	r0, r4
 8017faa:	f007 fabd 	bl	801f528 <__cxa_guard_release>
 8017fae:	4a06      	ldr	r2, [pc, #24]	; (8017fc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8017fb0:	4909      	ldr	r1, [pc, #36]	; (8017fd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8017fb2:	480a      	ldr	r0, [pc, #40]	; (8017fdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8017fb4:	f007 faa5 	bl	801f502 <__aeabi_atexit>
 8017fb8:	4b05      	ldr	r3, [pc, #20]	; (8017fd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8017fba:	65ab      	str	r3, [r5, #88]	; 0x58
 8017fbc:	4b07      	ldr	r3, [pc, #28]	; (8017fdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8017fbe:	65eb      	str	r3, [r5, #92]	; 0x5c
 8017fc0:	bd38      	pop	{r3, r4, r5, pc}
 8017fc2:	bf00      	nop
 8017fc4:	20017608 	.word	0x20017608
 8017fc8:	20000000 	.word	0x20000000
 8017fcc:	08015c01 	.word	0x08015c01
 8017fd0:	2000009c 	.word	0x2000009c
 8017fd4:	2001760c 	.word	0x2001760c
 8017fd8:	08015bff 	.word	0x08015bff
 8017fdc:	200000a0 	.word	0x200000a0

08017fe0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8017fe0:	b510      	push	{r4, lr}
 8017fe2:	4604      	mov	r4, r0
 8017fe4:	f7ff ff88 	bl	8017ef8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8017fe8:	4620      	mov	r0, r4
 8017fea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017fee:	f7ff bfbd 	b.w	8017f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08017ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8017ff4:	b538      	push	{r3, r4, r5, lr}
 8017ff6:	4c15      	ldr	r4, [pc, #84]	; (801804c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8017ff8:	7823      	ldrb	r3, [r4, #0]
 8017ffa:	f3bf 8f5b 	dmb	ish
 8017ffe:	07da      	lsls	r2, r3, #31
 8018000:	4605      	mov	r5, r0
 8018002:	d40b      	bmi.n	801801c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018004:	4620      	mov	r0, r4
 8018006:	f007 fa83 	bl	801f510 <__cxa_guard_acquire>
 801800a:	b138      	cbz	r0, 801801c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801800c:	4620      	mov	r0, r4
 801800e:	f007 fa8b 	bl	801f528 <__cxa_guard_release>
 8018012:	4a0f      	ldr	r2, [pc, #60]	; (8018050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018014:	490f      	ldr	r1, [pc, #60]	; (8018054 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8018016:	4810      	ldr	r0, [pc, #64]	; (8018058 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018018:	f007 fa73 	bl	801f502 <__aeabi_atexit>
 801801c:	4c0f      	ldr	r4, [pc, #60]	; (801805c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801801e:	7823      	ldrb	r3, [r4, #0]
 8018020:	f3bf 8f5b 	dmb	ish
 8018024:	07db      	lsls	r3, r3, #31
 8018026:	d40b      	bmi.n	8018040 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018028:	4620      	mov	r0, r4
 801802a:	f007 fa71 	bl	801f510 <__cxa_guard_acquire>
 801802e:	b138      	cbz	r0, 8018040 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018030:	4620      	mov	r0, r4
 8018032:	f007 fa79 	bl	801f528 <__cxa_guard_release>
 8018036:	4a06      	ldr	r2, [pc, #24]	; (8018050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018038:	4909      	ldr	r1, [pc, #36]	; (8018060 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801803a:	480a      	ldr	r0, [pc, #40]	; (8018064 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801803c:	f007 fa61 	bl	801f502 <__aeabi_atexit>
 8018040:	4b05      	ldr	r3, [pc, #20]	; (8018058 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018042:	672b      	str	r3, [r5, #112]	; 0x70
 8018044:	4b07      	ldr	r3, [pc, #28]	; (8018064 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018046:	676b      	str	r3, [r5, #116]	; 0x74
 8018048:	bd38      	pop	{r3, r4, r5, pc}
 801804a:	bf00      	nop
 801804c:	20017600 	.word	0x20017600
 8018050:	20000000 	.word	0x20000000
 8018054:	08015bf5 	.word	0x08015bf5
 8018058:	20000094 	.word	0x20000094
 801805c:	20017604 	.word	0x20017604
 8018060:	08015bf3 	.word	0x08015bf3
 8018064:	20000098 	.word	0x20000098

08018068 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8018068:	b538      	push	{r3, r4, r5, lr}
 801806a:	4c15      	ldr	r4, [pc, #84]	; (80180c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801806c:	7823      	ldrb	r3, [r4, #0]
 801806e:	f3bf 8f5b 	dmb	ish
 8018072:	07da      	lsls	r2, r3, #31
 8018074:	4605      	mov	r5, r0
 8018076:	d40b      	bmi.n	8018090 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018078:	4620      	mov	r0, r4
 801807a:	f007 fa49 	bl	801f510 <__cxa_guard_acquire>
 801807e:	b138      	cbz	r0, 8018090 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018080:	4620      	mov	r0, r4
 8018082:	f007 fa51 	bl	801f528 <__cxa_guard_release>
 8018086:	4a0f      	ldr	r2, [pc, #60]	; (80180c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018088:	490f      	ldr	r1, [pc, #60]	; (80180c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801808a:	4810      	ldr	r0, [pc, #64]	; (80180cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801808c:	f007 fa39 	bl	801f502 <__aeabi_atexit>
 8018090:	4c0f      	ldr	r4, [pc, #60]	; (80180d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8018092:	7823      	ldrb	r3, [r4, #0]
 8018094:	f3bf 8f5b 	dmb	ish
 8018098:	07db      	lsls	r3, r3, #31
 801809a:	d40b      	bmi.n	80180b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801809c:	4620      	mov	r0, r4
 801809e:	f007 fa37 	bl	801f510 <__cxa_guard_acquire>
 80180a2:	b138      	cbz	r0, 80180b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80180a4:	4620      	mov	r0, r4
 80180a6:	f007 fa3f 	bl	801f528 <__cxa_guard_release>
 80180aa:	4a06      	ldr	r2, [pc, #24]	; (80180c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80180ac:	4909      	ldr	r1, [pc, #36]	; (80180d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80180ae:	480a      	ldr	r0, [pc, #40]	; (80180d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80180b0:	f007 fa27 	bl	801f502 <__aeabi_atexit>
 80180b4:	4b05      	ldr	r3, [pc, #20]	; (80180cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80180b6:	66ab      	str	r3, [r5, #104]	; 0x68
 80180b8:	4b07      	ldr	r3, [pc, #28]	; (80180d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80180ba:	66eb      	str	r3, [r5, #108]	; 0x6c
 80180bc:	bd38      	pop	{r3, r4, r5, pc}
 80180be:	bf00      	nop
 80180c0:	200175f8 	.word	0x200175f8
 80180c4:	20000000 	.word	0x20000000
 80180c8:	08015bf9 	.word	0x08015bf9
 80180cc:	2000008c 	.word	0x2000008c
 80180d0:	200175fc 	.word	0x200175fc
 80180d4:	08015bf7 	.word	0x08015bf7
 80180d8:	20000090 	.word	0x20000090

080180dc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80180dc:	b510      	push	{r4, lr}
 80180de:	4604      	mov	r4, r0
 80180e0:	f7ff ff88 	bl	8017ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80180e4:	4620      	mov	r0, r4
 80180e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80180ea:	f7ff bfbd 	b.w	8018068 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080180ee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80180ee:	b510      	push	{r4, lr}
 80180f0:	4604      	mov	r4, r0
 80180f2:	f7ff fff3 	bl	80180dc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80180f6:	4620      	mov	r0, r4
 80180f8:	f7ff ff72 	bl	8017fe0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80180fc:	4620      	mov	r0, r4
 80180fe:	f7ff fdf9 	bl	8017cf4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8018102:	4620      	mov	r0, r4
 8018104:	f7ff fcfa 	bl	8017afc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8018108:	4620      	mov	r0, r4
 801810a:	f7ff fd75 	bl	8017bf8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801810e:	4620      	mov	r0, r4
 8018110:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018114:	f7ff bee0 	b.w	8017ed8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08018118 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8018118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801811c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8018120:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8018124:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8018128:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801812c:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8018130:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8018134:	8808      	ldrh	r0, [r1, #0]
 8018136:	fb05 4c0e 	mla	ip, r5, lr, r4
 801813a:	2d00      	cmp	r5, #0
 801813c:	eb02 0a0c 	add.w	sl, r2, ip
 8018140:	f2c0 80b0 	blt.w	80182a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8018144:	45ab      	cmp	fp, r5
 8018146:	f340 80ad 	ble.w	80182a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801814a:	2c00      	cmp	r4, #0
 801814c:	f2c0 80a8 	blt.w	80182a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8018150:	45a6      	cmp	lr, r4
 8018152:	f340 80a5 	ble.w	80182a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8018156:	f812 200c 	ldrb.w	r2, [r2, ip]
 801815a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801815e:	1c62      	adds	r2, r4, #1
 8018160:	f100 80a3 	bmi.w	80182aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018164:	4596      	cmp	lr, r2
 8018166:	f340 80a0 	ble.w	80182aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801816a:	f1b9 0f00 	cmp.w	r9, #0
 801816e:	f000 809c 	beq.w	80182aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018172:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8018176:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801817a:	3501      	adds	r5, #1
 801817c:	f100 8099 	bmi.w	80182b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018180:	45ab      	cmp	fp, r5
 8018182:	f340 8096 	ble.w	80182b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018186:	2f00      	cmp	r7, #0
 8018188:	f000 8093 	beq.w	80182b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801818c:	2c00      	cmp	r4, #0
 801818e:	f2c0 808e 	blt.w	80182ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8018192:	45a6      	cmp	lr, r4
 8018194:	f340 808b 	ble.w	80182ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8018198:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801819c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80181a0:	3401      	adds	r4, #1
 80181a2:	f100 8089 	bmi.w	80182b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80181a6:	45a6      	cmp	lr, r4
 80181a8:	f340 8086 	ble.w	80182b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80181ac:	f1b9 0f00 	cmp.w	r9, #0
 80181b0:	f000 8082 	beq.w	80182b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80181b4:	44d6      	add	lr, sl
 80181b6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80181ba:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80181be:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80181c2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80181c6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80181ca:	fb19 fe07 	smulbb	lr, r9, r7
 80181ce:	ea44 0808 	orr.w	r8, r4, r8
 80181d2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80181d6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80181da:	f1c7 0210 	rsb	r2, r7, #16
 80181de:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80181e2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80181e6:	ea44 0c0c 	orr.w	ip, r4, ip
 80181ea:	eba2 0209 	sub.w	r2, r2, r9
 80181ee:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80181f2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80181f6:	fb04 f40c 	mul.w	r4, r4, ip
 80181fa:	fb02 4808 	mla	r8, r2, r8, r4
 80181fe:	041a      	lsls	r2, r3, #16
 8018200:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018204:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018208:	4313      	orrs	r3, r2
 801820a:	042a      	lsls	r2, r5, #16
 801820c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018210:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018214:	fb0e 8303 	mla	r3, lr, r3, r8
 8018218:	432a      	orrs	r2, r5
 801821a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801821e:	fb07 3202 	mla	r2, r7, r2, r3
 8018222:	0d53      	lsrs	r3, r2, #21
 8018224:	0952      	lsrs	r2, r2, #5
 8018226:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801822a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801822e:	431a      	orrs	r2, r3
 8018230:	b293      	uxth	r3, r2
 8018232:	b2b4      	uxth	r4, r6
 8018234:	1202      	asrs	r2, r0, #8
 8018236:	43f6      	mvns	r6, r6
 8018238:	b2f6      	uxtb	r6, r6
 801823a:	121d      	asrs	r5, r3, #8
 801823c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018240:	fb12 f206 	smulbb	r2, r2, r6
 8018244:	10c7      	asrs	r7, r0, #3
 8018246:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801824a:	00c0      	lsls	r0, r0, #3
 801824c:	fb05 2504 	mla	r5, r5, r4, r2
 8018250:	b2c0      	uxtb	r0, r0
 8018252:	10da      	asrs	r2, r3, #3
 8018254:	00db      	lsls	r3, r3, #3
 8018256:	b2db      	uxtb	r3, r3
 8018258:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801825c:	fb10 f006 	smulbb	r0, r0, r6
 8018260:	b2ad      	uxth	r5, r5
 8018262:	fb03 0004 	mla	r0, r3, r4, r0
 8018266:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801826a:	fb17 f706 	smulbb	r7, r7, r6
 801826e:	b280      	uxth	r0, r0
 8018270:	1c6b      	adds	r3, r5, #1
 8018272:	fb02 7204 	mla	r2, r2, r4, r7
 8018276:	b292      	uxth	r2, r2
 8018278:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801827c:	1c43      	adds	r3, r0, #1
 801827e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018282:	1c50      	adds	r0, r2, #1
 8018284:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018288:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801828c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018290:	0952      	lsrs	r2, r2, #5
 8018292:	432b      	orrs	r3, r5
 8018294:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018298:	4313      	orrs	r3, r2
 801829a:	800b      	strh	r3, [r1, #0]
 801829c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182a0:	4680      	mov	r8, r0
 80182a2:	e75c      	b.n	801815e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80182a4:	4684      	mov	ip, r0
 80182a6:	4680      	mov	r8, r0
 80182a8:	e767      	b.n	801817a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80182aa:	4684      	mov	ip, r0
 80182ac:	e765      	b.n	801817a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80182ae:	4605      	mov	r5, r0
 80182b0:	e776      	b.n	80181a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80182b2:	4603      	mov	r3, r0
 80182b4:	4605      	mov	r5, r0
 80182b6:	e782      	b.n	80181be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80182b8:	4603      	mov	r3, r0
 80182ba:	e780      	b.n	80181be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080182bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80182bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182c0:	b099      	sub	sp, #100	; 0x64
 80182c2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80182c6:	9215      	str	r2, [sp, #84]	; 0x54
 80182c8:	9309      	str	r3, [sp, #36]	; 0x24
 80182ca:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80182cc:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80182d0:	930d      	str	r3, [sp, #52]	; 0x34
 80182d2:	910c      	str	r1, [sp, #48]	; 0x30
 80182d4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80182d8:	9016      	str	r0, [sp, #88]	; 0x58
 80182da:	6850      	ldr	r0, [r2, #4]
 80182dc:	6812      	ldr	r2, [r2, #0]
 80182de:	fb00 1303 	mla	r3, r0, r3, r1
 80182e2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80182e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80182e8:	681b      	ldr	r3, [r3, #0]
 80182ea:	930b      	str	r3, [sp, #44]	; 0x2c
 80182ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80182ee:	685e      	ldr	r6, [r3, #4]
 80182f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80182f2:	43db      	mvns	r3, r3
 80182f4:	b2db      	uxtb	r3, r3
 80182f6:	3604      	adds	r6, #4
 80182f8:	930a      	str	r3, [sp, #40]	; 0x28
 80182fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80182fc:	2b00      	cmp	r3, #0
 80182fe:	dc03      	bgt.n	8018308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018300:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8018302:	2b00      	cmp	r3, #0
 8018304:	f340 8225 	ble.w	8018752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8018308:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801830a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801830e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018312:	1e48      	subs	r0, r1, #1
 8018314:	1e57      	subs	r7, r2, #1
 8018316:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018318:	2b00      	cmp	r3, #0
 801831a:	f340 80e3 	ble.w	80184e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801831e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8018322:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018326:	d406      	bmi.n	8018336 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018328:	4584      	cmp	ip, r0
 801832a:	da04      	bge.n	8018336 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801832c:	2b00      	cmp	r3, #0
 801832e:	db02      	blt.n	8018336 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018330:	42bb      	cmp	r3, r7
 8018332:	f2c0 80d8 	blt.w	80184e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8018336:	f11c 0c01 	adds.w	ip, ip, #1
 801833a:	f100 80c9 	bmi.w	80184d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801833e:	4561      	cmp	r1, ip
 8018340:	f2c0 80c6 	blt.w	80184d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018344:	3301      	adds	r3, #1
 8018346:	f100 80c3 	bmi.w	80184d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801834a:	429a      	cmp	r2, r3
 801834c:	f2c0 80c0 	blt.w	80184d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018350:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8018354:	4647      	mov	r7, r8
 8018356:	f1bb 0f00 	cmp.w	fp, #0
 801835a:	f340 80e3 	ble.w	8018524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801835e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018360:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018362:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018366:	689b      	ldr	r3, [r3, #8]
 8018368:	ea5f 422a 	movs.w	r2, sl, asr #16
 801836c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018370:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8018374:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018378:	f100 8121 	bmi.w	80185be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801837c:	f103 39ff 	add.w	r9, r3, #4294967295
 8018380:	454a      	cmp	r2, r9
 8018382:	f280 811c 	bge.w	80185be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018386:	f1bc 0f00 	cmp.w	ip, #0
 801838a:	f2c0 8118 	blt.w	80185be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801838e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8018392:	45cc      	cmp	ip, r9
 8018394:	f280 8113 	bge.w	80185be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018398:	b21b      	sxth	r3, r3
 801839a:	fb0c 2203 	mla	r2, ip, r3, r2
 801839e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80183a0:	eb04 0902 	add.w	r9, r4, r2
 80183a4:	5ca2      	ldrb	r2, [r4, r2]
 80183a6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80183aa:	2800      	cmp	r0, #0
 80183ac:	f000 80fe 	beq.w	80185ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80183b0:	f899 2001 	ldrb.w	r2, [r9, #1]
 80183b4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80183b8:	9211      	str	r2, [sp, #68]	; 0x44
 80183ba:	b151      	cbz	r1, 80183d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80183bc:	eb09 0203 	add.w	r2, r9, r3
 80183c0:	f819 3003 	ldrb.w	r3, [r9, r3]
 80183c4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80183c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80183ca:	7853      	ldrb	r3, [r2, #1]
 80183cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80183d0:	9312      	str	r3, [sp, #72]	; 0x48
 80183d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80183d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80183d6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80183da:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80183de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80183e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80183e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80183e8:	041b      	lsls	r3, r3, #16
 80183ea:	fb10 f201 	smulbb	r2, r0, r1
 80183ee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80183f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80183f6:	10d2      	asrs	r2, r2, #3
 80183f8:	4323      	orrs	r3, r4
 80183fa:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80183fe:	4353      	muls	r3, r2
 8018400:	fb09 330c 	mla	r3, r9, ip, r3
 8018404:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018408:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801840c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018410:	ea4c 0e0e 	orr.w	lr, ip, lr
 8018414:	f1c1 0c10 	rsb	ip, r1, #16
 8018418:	ebac 0c00 	sub.w	ip, ip, r0
 801841c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018420:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8018424:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018426:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018428:	0418      	lsls	r0, r3, #16
 801842a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801842e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018432:	4318      	orrs	r0, r3
 8018434:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8018438:	fb02 c200 	mla	r2, r2, r0, ip
 801843c:	0d53      	lsrs	r3, r2, #21
 801843e:	0952      	lsrs	r2, r2, #5
 8018440:	8838      	ldrh	r0, [r7, #0]
 8018442:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018446:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801844a:	431a      	orrs	r2, r3
 801844c:	b292      	uxth	r2, r2
 801844e:	1201      	asrs	r1, r0, #8
 8018450:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8018454:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8018458:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801845c:	fb11 f104 	smulbb	r1, r1, r4
 8018460:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018464:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018468:	00c0      	lsls	r0, r0, #3
 801846a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801846e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018472:	10d1      	asrs	r1, r2, #3
 8018474:	b2c0      	uxtb	r0, r0
 8018476:	00d2      	lsls	r2, r2, #3
 8018478:	b2d2      	uxtb	r2, r2
 801847a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801847e:	fb1e fe04 	smulbb	lr, lr, r4
 8018482:	fb10 f004 	smulbb	r0, r0, r4
 8018486:	fa1f fc8c 	uxth.w	ip, ip
 801848a:	fb01 e103 	mla	r1, r1, r3, lr
 801848e:	fb02 0303 	mla	r3, r2, r3, r0
 8018492:	b29a      	uxth	r2, r3
 8018494:	f10c 0301 	add.w	r3, ip, #1
 8018498:	b289      	uxth	r1, r1
 801849a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801849e:	1c53      	adds	r3, r2, #1
 80184a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80184a4:	1c4a      	adds	r2, r1, #1
 80184a6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80184aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80184ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80184b2:	0949      	lsrs	r1, r1, #5
 80184b4:	ea43 030c 	orr.w	r3, r3, ip
 80184b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80184bc:	430b      	orrs	r3, r1
 80184be:	803b      	strh	r3, [r7, #0]
 80184c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80184c2:	449a      	add	sl, r3
 80184c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80184c6:	3702      	adds	r7, #2
 80184c8:	441d      	add	r5, r3
 80184ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 80184ce:	e742      	b.n	8018356 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80184d0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80184d2:	449a      	add	sl, r3
 80184d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80184d6:	441d      	add	r5, r3
 80184d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80184da:	3b01      	subs	r3, #1
 80184dc:	9309      	str	r3, [sp, #36]	; 0x24
 80184de:	f108 0802 	add.w	r8, r8, #2
 80184e2:	e718      	b.n	8018316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80184e4:	d023      	beq.n	801852e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80184e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80184e8:	9825      	ldr	r0, [sp, #148]	; 0x94
 80184ea:	3b01      	subs	r3, #1
 80184ec:	fb00 a003 	mla	r0, r0, r3, sl
 80184f0:	1400      	asrs	r0, r0, #16
 80184f2:	f53f af2d 	bmi.w	8018350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80184f6:	3901      	subs	r1, #1
 80184f8:	4288      	cmp	r0, r1
 80184fa:	f6bf af29 	bge.w	8018350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80184fe:	9926      	ldr	r1, [sp, #152]	; 0x98
 8018500:	fb01 5303 	mla	r3, r1, r3, r5
 8018504:	141b      	asrs	r3, r3, #16
 8018506:	f53f af23 	bmi.w	8018350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801850a:	3a01      	subs	r2, #1
 801850c:	4293      	cmp	r3, r2
 801850e:	f6bf af1f 	bge.w	8018350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018512:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8018516:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801851a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801851e:	f1be 0f00 	cmp.w	lr, #0
 8018522:	dc6c      	bgt.n	80185fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8018524:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018526:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801852a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801852e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018530:	2b00      	cmp	r3, #0
 8018532:	f340 810e 	ble.w	8018752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8018536:	ee30 0a04 	vadd.f32	s0, s0, s8
 801853a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801853e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018542:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018544:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018548:	ee31 1a05 	vadd.f32	s2, s2, s10
 801854c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018550:	eef0 6a62 	vmov.f32	s13, s5
 8018554:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018558:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801855c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018560:	ee16 aa90 	vmov	sl, s13
 8018564:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018568:	eef0 6a43 	vmov.f32	s13, s6
 801856c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018570:	ee12 2a90 	vmov	r2, s5
 8018574:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018578:	fb92 f3f3 	sdiv	r3, r2, r3
 801857c:	ee13 2a10 	vmov	r2, s6
 8018580:	9325      	str	r3, [sp, #148]	; 0x94
 8018582:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018584:	fb92 f3f3 	sdiv	r3, r2, r3
 8018588:	9326      	str	r3, [sp, #152]	; 0x98
 801858a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801858c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801858e:	3b01      	subs	r3, #1
 8018590:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018594:	930c      	str	r3, [sp, #48]	; 0x30
 8018596:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018598:	bf08      	it	eq
 801859a:	4613      	moveq	r3, r2
 801859c:	ee16 5a90 	vmov	r5, s13
 80185a0:	9309      	str	r3, [sp, #36]	; 0x24
 80185a2:	eeb0 3a67 	vmov.f32	s6, s15
 80185a6:	eef0 2a47 	vmov.f32	s5, s14
 80185aa:	e6a6      	b.n	80182fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80185ac:	2900      	cmp	r1, #0
 80185ae:	f43f af10 	beq.w	80183d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80185b2:	f819 3003 	ldrb.w	r3, [r9, r3]
 80185b6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80185ba:	930f      	str	r3, [sp, #60]	; 0x3c
 80185bc:	e709      	b.n	80183d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80185be:	f112 0901 	adds.w	r9, r2, #1
 80185c2:	f53f af7d 	bmi.w	80184c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80185c6:	454b      	cmp	r3, r9
 80185c8:	f6ff af7a 	blt.w	80184c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80185cc:	f11c 0901 	adds.w	r9, ip, #1
 80185d0:	f53f af76 	bmi.w	80184c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80185d4:	45ce      	cmp	lr, r9
 80185d6:	f6ff af73 	blt.w	80184c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80185da:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80185dc:	9202      	str	r2, [sp, #8]
 80185de:	b21b      	sxth	r3, r3
 80185e0:	fa0f f28e 	sxth.w	r2, lr
 80185e4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80185e8:	e9cd c003 	strd	ip, r0, [sp, #12]
 80185ec:	9201      	str	r2, [sp, #4]
 80185ee:	9300      	str	r3, [sp, #0]
 80185f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80185f2:	9816      	ldr	r0, [sp, #88]	; 0x58
 80185f4:	4633      	mov	r3, r6
 80185f6:	4639      	mov	r1, r7
 80185f8:	f7ff fd8e 	bl	8018118 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80185fc:	e760      	b.n	80184c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80185fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018600:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018602:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018606:	ea4f 422a 	mov.w	r2, sl, asr #16
 801860a:	1429      	asrs	r1, r5, #16
 801860c:	fb03 2101 	mla	r1, r3, r1, r2
 8018610:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018612:	440a      	add	r2, r1
 8018614:	5c61      	ldrb	r1, [r4, r1]
 8018616:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801861a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801861e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8018622:	f1bc 0f00 	cmp.w	ip, #0
 8018626:	f000 808c 	beq.w	8018742 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801862a:	7857      	ldrb	r7, [r2, #1]
 801862c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8018630:	9413      	str	r4, [sp, #76]	; 0x4c
 8018632:	b140      	cbz	r0, 8018646 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018634:	18d7      	adds	r7, r2, r3
 8018636:	5cd3      	ldrb	r3, [r2, r3]
 8018638:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801863c:	9310      	str	r3, [sp, #64]	; 0x40
 801863e:	787b      	ldrb	r3, [r7, #1]
 8018640:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018644:	9314      	str	r3, [sp, #80]	; 0x50
 8018646:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018648:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801864a:	fb1c f200 	smulbb	r2, ip, r0
 801864e:	041f      	lsls	r7, r3, #16
 8018650:	10d2      	asrs	r2, r2, #3
 8018652:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018656:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801865a:	431f      	orrs	r7, r3
 801865c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8018660:	9317      	str	r3, [sp, #92]	; 0x5c
 8018662:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018664:	041b      	lsls	r3, r3, #16
 8018666:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801866a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801866e:	ea43 030b 	orr.w	r3, r3, fp
 8018672:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8018674:	4353      	muls	r3, r2
 8018676:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801867a:	fb04 3707 	mla	r7, r4, r7, r3
 801867e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018682:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8018686:	ea43 0b01 	orr.w	fp, r3, r1
 801868a:	f1c0 0110 	rsb	r1, r0, #16
 801868e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018690:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018692:	eba1 0c0c 	sub.w	ip, r1, ip
 8018696:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801869a:	fb0c 770b 	mla	r7, ip, fp, r7
 801869e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80186a2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80186a6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80186aa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80186ae:	ea4c 0c0b 	orr.w	ip, ip, fp
 80186b2:	fb02 770c 	mla	r7, r2, ip, r7
 80186b6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80186b8:	0d79      	lsrs	r1, r7, #21
 80186ba:	097f      	lsrs	r7, r7, #5
 80186bc:	8812      	ldrh	r2, [r2, #0]
 80186be:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80186c2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80186c6:	430f      	orrs	r7, r1
 80186c8:	b2bb      	uxth	r3, r7
 80186ca:	1211      	asrs	r1, r2, #8
 80186cc:	1218      	asrs	r0, r3, #8
 80186ce:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80186d2:	fb11 f104 	smulbb	r1, r1, r4
 80186d6:	10d7      	asrs	r7, r2, #3
 80186d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80186dc:	00d2      	lsls	r2, r2, #3
 80186de:	fb00 1009 	mla	r0, r0, r9, r1
 80186e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80186e6:	10d9      	asrs	r1, r3, #3
 80186e8:	b2d2      	uxtb	r2, r2
 80186ea:	00db      	lsls	r3, r3, #3
 80186ec:	fb17 f704 	smulbb	r7, r7, r4
 80186f0:	fb12 f204 	smulbb	r2, r2, r4
 80186f4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80186f8:	b2db      	uxtb	r3, r3
 80186fa:	b280      	uxth	r0, r0
 80186fc:	fb01 7109 	mla	r1, r1, r9, r7
 8018700:	fb03 2309 	mla	r3, r3, r9, r2
 8018704:	b29b      	uxth	r3, r3
 8018706:	b289      	uxth	r1, r1
 8018708:	1c42      	adds	r2, r0, #1
 801870a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801870e:	1c4f      	adds	r7, r1, #1
 8018710:	1c5a      	adds	r2, r3, #1
 8018712:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018716:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801871a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801871e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018722:	0949      	lsrs	r1, r1, #5
 8018724:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018726:	4310      	orrs	r0, r2
 8018728:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801872c:	4308      	orrs	r0, r1
 801872e:	f823 0b02 	strh.w	r0, [r3], #2
 8018732:	930e      	str	r3, [sp, #56]	; 0x38
 8018734:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018736:	449a      	add	sl, r3
 8018738:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801873a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801873e:	441d      	add	r5, r3
 8018740:	e6ed      	b.n	801851e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8018742:	2800      	cmp	r0, #0
 8018744:	f43f af7f 	beq.w	8018646 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018748:	5cd3      	ldrb	r3, [r2, r3]
 801874a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801874e:	9310      	str	r3, [sp, #64]	; 0x40
 8018750:	e779      	b.n	8018646 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018752:	b019      	add	sp, #100	; 0x64
 8018754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018758:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801875c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8018760:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8018764:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8018768:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801876c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8018770:	8808      	ldrh	r0, [r1, #0]
 8018772:	fb08 470e 	mla	r7, r8, lr, r4
 8018776:	f1b8 0f00 	cmp.w	r8, #0
 801877a:	eb02 0907 	add.w	r9, r2, r7
 801877e:	db67      	blt.n	8018850 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8018780:	45c2      	cmp	sl, r8
 8018782:	dd65      	ble.n	8018850 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8018784:	2c00      	cmp	r4, #0
 8018786:	db61      	blt.n	801884c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8018788:	45a6      	cmp	lr, r4
 801878a:	dd5f      	ble.n	801884c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801878c:	5dd2      	ldrb	r2, [r2, r7]
 801878e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8018792:	1c62      	adds	r2, r4, #1
 8018794:	d45f      	bmi.n	8018856 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018796:	4596      	cmp	lr, r2
 8018798:	dd5d      	ble.n	8018856 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801879a:	2d00      	cmp	r5, #0
 801879c:	d05b      	beq.n	8018856 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801879e:	f899 2001 	ldrb.w	r2, [r9, #1]
 80187a2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80187a6:	f118 0801 	adds.w	r8, r8, #1
 80187aa:	d458      	bmi.n	801885e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80187ac:	45c2      	cmp	sl, r8
 80187ae:	dd56      	ble.n	801885e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80187b0:	2e00      	cmp	r6, #0
 80187b2:	d054      	beq.n	801885e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80187b4:	2c00      	cmp	r4, #0
 80187b6:	db50      	blt.n	801885a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80187b8:	45a6      	cmp	lr, r4
 80187ba:	dd4e      	ble.n	801885a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80187bc:	f819 200e 	ldrb.w	r2, [r9, lr]
 80187c0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80187c4:	3401      	adds	r4, #1
 80187c6:	d407      	bmi.n	80187d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80187c8:	45a6      	cmp	lr, r4
 80187ca:	dd05      	ble.n	80187d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80187cc:	b125      	cbz	r5, 80187d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80187ce:	44ce      	add	lr, r9
 80187d0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80187d4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80187d8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80187dc:	fb15 f406 	smulbb	r4, r5, r6
 80187e0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80187e4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80187e8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80187ec:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80187f0:	ea43 0c0c 	orr.w	ip, r3, ip
 80187f4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80187f8:	f1c6 0310 	rsb	r3, r6, #16
 80187fc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018800:	1b5b      	subs	r3, r3, r5
 8018802:	ea4e 0707 	orr.w	r7, lr, r7
 8018806:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801880a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801880e:	437d      	muls	r5, r7
 8018810:	fb03 5c0c 	mla	ip, r3, ip, r5
 8018814:	0403      	lsls	r3, r0, #16
 8018816:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801881a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801881e:	4318      	orrs	r0, r3
 8018820:	0413      	lsls	r3, r2, #16
 8018822:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018826:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801882a:	4313      	orrs	r3, r2
 801882c:	fb04 c000 	mla	r0, r4, r0, ip
 8018830:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8018834:	fb06 0003 	mla	r0, r6, r3, r0
 8018838:	0d43      	lsrs	r3, r0, #21
 801883a:	0940      	lsrs	r0, r0, #5
 801883c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018840:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018844:	4318      	orrs	r0, r3
 8018846:	8008      	strh	r0, [r1, #0]
 8018848:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801884c:	4684      	mov	ip, r0
 801884e:	e7a0      	b.n	8018792 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8018850:	4607      	mov	r7, r0
 8018852:	4684      	mov	ip, r0
 8018854:	e7a7      	b.n	80187a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8018856:	4607      	mov	r7, r0
 8018858:	e7a5      	b.n	80187a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801885a:	4602      	mov	r2, r0
 801885c:	e7b2      	b.n	80187c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801885e:	4602      	mov	r2, r0
 8018860:	e7ba      	b.n	80187d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08018862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018862:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018866:	b093      	sub	sp, #76	; 0x4c
 8018868:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801886c:	920f      	str	r2, [sp, #60]	; 0x3c
 801886e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8018870:	9108      	str	r1, [sp, #32]
 8018872:	9306      	str	r3, [sp, #24]
 8018874:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8018878:	9010      	str	r0, [sp, #64]	; 0x40
 801887a:	6850      	ldr	r0, [r2, #4]
 801887c:	6812      	ldr	r2, [r2, #0]
 801887e:	fb00 1303 	mla	r3, r0, r3, r1
 8018882:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018886:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018888:	681b      	ldr	r3, [r3, #0]
 801888a:	9307      	str	r3, [sp, #28]
 801888c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801888e:	685f      	ldr	r7, [r3, #4]
 8018890:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018894:	3704      	adds	r7, #4
 8018896:	9b08      	ldr	r3, [sp, #32]
 8018898:	2b00      	cmp	r3, #0
 801889a:	dc03      	bgt.n	80188a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801889c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801889e:	2b00      	cmp	r3, #0
 80188a0:	f340 81b2 	ble.w	8018c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80188a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80188a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80188aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80188ae:	1e48      	subs	r0, r1, #1
 80188b0:	f102 3cff 	add.w	ip, r2, #4294967295
 80188b4:	9b06      	ldr	r3, [sp, #24]
 80188b6:	2b00      	cmp	r3, #0
 80188b8:	f340 80a9 	ble.w	8018a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80188bc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80188c0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80188c4:	d406      	bmi.n	80188d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80188c6:	4586      	cmp	lr, r0
 80188c8:	da04      	bge.n	80188d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80188ca:	2b00      	cmp	r3, #0
 80188cc:	db02      	blt.n	80188d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80188ce:	4563      	cmp	r3, ip
 80188d0:	f2c0 809e 	blt.w	8018a10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80188d4:	f11e 0e01 	adds.w	lr, lr, #1
 80188d8:	f100 808f 	bmi.w	80189fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80188dc:	4571      	cmp	r1, lr
 80188de:	f2c0 808c 	blt.w	80189fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80188e2:	3301      	adds	r3, #1
 80188e4:	f100 8089 	bmi.w	80189fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80188e8:	429a      	cmp	r2, r3
 80188ea:	f2c0 8086 	blt.w	80189fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80188ee:	f8dd b018 	ldr.w	fp, [sp, #24]
 80188f2:	46c8      	mov	r8, r9
 80188f4:	f1bb 0f00 	cmp.w	fp, #0
 80188f8:	f340 80a6 	ble.w	8018a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80188fc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80188fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018900:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018904:	689b      	ldr	r3, [r3, #8]
 8018906:	1422      	asrs	r2, r4, #16
 8018908:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801890c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018910:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018914:	f100 80e3 	bmi.w	8018ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018918:	f103 3aff 	add.w	sl, r3, #4294967295
 801891c:	4552      	cmp	r2, sl
 801891e:	f280 80de 	bge.w	8018ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018922:	f1bc 0f00 	cmp.w	ip, #0
 8018926:	f2c0 80da 	blt.w	8018ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801892a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801892e:	45d4      	cmp	ip, sl
 8018930:	f280 80d5 	bge.w	8018ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018934:	b21b      	sxth	r3, r3
 8018936:	fb0c 2203 	mla	r2, ip, r3, r2
 801893a:	9d07      	ldr	r5, [sp, #28]
 801893c:	eb05 0a02 	add.w	sl, r5, r2
 8018940:	5caa      	ldrb	r2, [r5, r2]
 8018942:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8018946:	2800      	cmp	r0, #0
 8018948:	f000 80c0 	beq.w	8018acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801894c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8018950:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8018954:	920b      	str	r2, [sp, #44]	; 0x2c
 8018956:	b151      	cbz	r1, 801896e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8018958:	eb0a 0203 	add.w	r2, sl, r3
 801895c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018960:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018964:	9309      	str	r3, [sp, #36]	; 0x24
 8018966:	7853      	ldrb	r3, [r2, #1]
 8018968:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801896c:	930c      	str	r3, [sp, #48]	; 0x30
 801896e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018970:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018972:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018976:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801897a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801897e:	ea4c 0c03 	orr.w	ip, ip, r3
 8018982:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018984:	041b      	lsls	r3, r3, #16
 8018986:	fb10 f201 	smulbb	r2, r0, r1
 801898a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801898e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018992:	10d2      	asrs	r2, r2, #3
 8018994:	432b      	orrs	r3, r5
 8018996:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801899a:	4353      	muls	r3, r2
 801899c:	fb0a 330c 	mla	r3, sl, ip, r3
 80189a0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80189a4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80189a8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80189ac:	ea4c 0e0e 	orr.w	lr, ip, lr
 80189b0:	f1c1 0c10 	rsb	ip, r1, #16
 80189b4:	ebac 0c00 	sub.w	ip, ip, r0
 80189b8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80189bc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80189c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80189c2:	0418      	lsls	r0, r3, #16
 80189c4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80189c8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80189cc:	4318      	orrs	r0, r3
 80189ce:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80189d2:	fb02 c200 	mla	r2, r2, r0, ip
 80189d6:	0d53      	lsrs	r3, r2, #21
 80189d8:	0952      	lsrs	r2, r2, #5
 80189da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80189de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80189e2:	431a      	orrs	r2, r3
 80189e4:	f8a8 2000 	strh.w	r2, [r8]
 80189e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80189ea:	441c      	add	r4, r3
 80189ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80189ee:	f108 0802 	add.w	r8, r8, #2
 80189f2:	441e      	add	r6, r3
 80189f4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80189f8:	e77c      	b.n	80188f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80189fa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80189fc:	441c      	add	r4, r3
 80189fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018a00:	441e      	add	r6, r3
 8018a02:	9b06      	ldr	r3, [sp, #24]
 8018a04:	3b01      	subs	r3, #1
 8018a06:	9306      	str	r3, [sp, #24]
 8018a08:	f109 0902 	add.w	r9, r9, #2
 8018a0c:	e752      	b.n	80188b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018a0e:	d020      	beq.n	8018a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018a10:	9b06      	ldr	r3, [sp, #24]
 8018a12:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8018a14:	3b01      	subs	r3, #1
 8018a16:	fb00 4003 	mla	r0, r0, r3, r4
 8018a1a:	1400      	asrs	r0, r0, #16
 8018a1c:	f53f af67 	bmi.w	80188ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018a20:	3901      	subs	r1, #1
 8018a22:	4288      	cmp	r0, r1
 8018a24:	f6bf af63 	bge.w	80188ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018a28:	9920      	ldr	r1, [sp, #128]	; 0x80
 8018a2a:	fb01 6303 	mla	r3, r1, r3, r6
 8018a2e:	141b      	asrs	r3, r3, #16
 8018a30:	f53f af5d 	bmi.w	80188ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018a34:	3a01      	subs	r2, #1
 8018a36:	4293      	cmp	r3, r2
 8018a38:	f6bf af59 	bge.w	80188ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018a3c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8018a40:	46ca      	mov	sl, r9
 8018a42:	f1b8 0f00 	cmp.w	r8, #0
 8018a46:	dc67      	bgt.n	8018b18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018a48:	9b06      	ldr	r3, [sp, #24]
 8018a4a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018a4e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8018a52:	9b08      	ldr	r3, [sp, #32]
 8018a54:	2b00      	cmp	r3, #0
 8018a56:	f340 80d7 	ble.w	8018c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8018a5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018a5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018a62:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018a66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018a68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018a6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018a70:	eeb0 6a62 	vmov.f32	s12, s5
 8018a74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018a78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018a7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018a80:	ee16 4a10 	vmov	r4, s12
 8018a84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a88:	eeb0 6a43 	vmov.f32	s12, s6
 8018a8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a90:	ee12 2a90 	vmov	r2, s5
 8018a94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a98:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a9c:	ee13 2a10 	vmov	r2, s6
 8018aa0:	931f      	str	r3, [sp, #124]	; 0x7c
 8018aa2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018aa4:	fb92 f3f3 	sdiv	r3, r2, r3
 8018aa8:	9320      	str	r3, [sp, #128]	; 0x80
 8018aaa:	9b08      	ldr	r3, [sp, #32]
 8018aac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018aae:	3b01      	subs	r3, #1
 8018ab0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ab4:	9308      	str	r3, [sp, #32]
 8018ab6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018ab8:	bf08      	it	eq
 8018aba:	4613      	moveq	r3, r2
 8018abc:	ee16 6a10 	vmov	r6, s12
 8018ac0:	9306      	str	r3, [sp, #24]
 8018ac2:	eeb0 3a67 	vmov.f32	s6, s15
 8018ac6:	eef0 2a47 	vmov.f32	s5, s14
 8018aca:	e6e4      	b.n	8018896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8018acc:	2900      	cmp	r1, #0
 8018ace:	f43f af4e 	beq.w	801896e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8018ad2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018ad6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018ada:	9309      	str	r3, [sp, #36]	; 0x24
 8018adc:	e747      	b.n	801896e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8018ade:	f112 0a01 	adds.w	sl, r2, #1
 8018ae2:	d481      	bmi.n	80189e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018ae4:	4553      	cmp	r3, sl
 8018ae6:	f6ff af7f 	blt.w	80189e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018aea:	f11c 0a01 	adds.w	sl, ip, #1
 8018aee:	f53f af7b 	bmi.w	80189e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018af2:	45d6      	cmp	lr, sl
 8018af4:	f6ff af78 	blt.w	80189e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018af8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8018afc:	b21b      	sxth	r3, r3
 8018afe:	fa0f f28e 	sxth.w	r2, lr
 8018b02:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8018b06:	9201      	str	r2, [sp, #4]
 8018b08:	9300      	str	r3, [sp, #0]
 8018b0a:	9a07      	ldr	r2, [sp, #28]
 8018b0c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018b0e:	463b      	mov	r3, r7
 8018b10:	4641      	mov	r1, r8
 8018b12:	f7ff fe21 	bl	8018758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018b16:	e767      	b.n	80189e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018b18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018b1a:	9d07      	ldr	r5, [sp, #28]
 8018b1c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018b20:	1422      	asrs	r2, r4, #16
 8018b22:	1431      	asrs	r1, r6, #16
 8018b24:	fb03 2101 	mla	r1, r3, r1, r2
 8018b28:	9a07      	ldr	r2, [sp, #28]
 8018b2a:	440a      	add	r2, r1
 8018b2c:	5c69      	ldrb	r1, [r5, r1]
 8018b2e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8018b32:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018b36:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8018b3a:	f1be 0f00 	cmp.w	lr, #0
 8018b3e:	d05c      	beq.n	8018bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8018b40:	f892 c001 	ldrb.w	ip, [r2, #1]
 8018b44:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8018b48:	950d      	str	r5, [sp, #52]	; 0x34
 8018b4a:	b150      	cbz	r0, 8018b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8018b4c:	eb02 0c03 	add.w	ip, r2, r3
 8018b50:	5cd3      	ldrb	r3, [r2, r3]
 8018b52:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018b56:	930a      	str	r3, [sp, #40]	; 0x28
 8018b58:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8018b5c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018b60:	930e      	str	r3, [sp, #56]	; 0x38
 8018b62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018b64:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018b66:	fb1e f200 	smulbb	r2, lr, r0
 8018b6a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018b6e:	10d2      	asrs	r2, r2, #3
 8018b70:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018b74:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018b78:	ea4c 0c03 	orr.w	ip, ip, r3
 8018b7c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8018b80:	9311      	str	r3, [sp, #68]	; 0x44
 8018b82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018b84:	041b      	lsls	r3, r3, #16
 8018b86:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8018b8a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018b8e:	ea43 030b 	orr.w	r3, r3, fp
 8018b92:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018b94:	4353      	muls	r3, r2
 8018b96:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018b9a:	fb05 3c0c 	mla	ip, r5, ip, r3
 8018b9e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018ba2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8018ba6:	ea43 0b01 	orr.w	fp, r3, r1
 8018baa:	f1c0 0110 	rsb	r1, r0, #16
 8018bae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018bb0:	eba1 0e0e 	sub.w	lr, r1, lr
 8018bb4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018bb8:	fb0e cc0b 	mla	ip, lr, fp, ip
 8018bbc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018bc0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8018bc4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018bc8:	ea4b 0e0e 	orr.w	lr, fp, lr
 8018bcc:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018bd0:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018bd4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8018bd8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018bdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018be0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018be4:	ea43 0c0c 	orr.w	ip, r3, ip
 8018be8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018bea:	f82a cb02 	strh.w	ip, [sl], #2
 8018bee:	441c      	add	r4, r3
 8018bf0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018bf2:	f108 38ff 	add.w	r8, r8, #4294967295
 8018bf6:	441e      	add	r6, r3
 8018bf8:	e723      	b.n	8018a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018bfa:	2800      	cmp	r0, #0
 8018bfc:	d0b1      	beq.n	8018b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8018bfe:	5cd3      	ldrb	r3, [r2, r3]
 8018c00:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018c04:	930a      	str	r3, [sp, #40]	; 0x28
 8018c06:	e7ac      	b.n	8018b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8018c08:	b013      	add	sp, #76	; 0x4c
 8018c0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8018c0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c12:	880d      	ldrh	r5, [r1, #0]
 8018c14:	b087      	sub	sp, #28
 8018c16:	10ef      	asrs	r7, r5, #3
 8018c18:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8018c1c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018c20:	00ed      	lsls	r5, r5, #3
 8018c22:	9701      	str	r7, [sp, #4]
 8018c24:	b2ed      	uxtb	r5, r5
 8018c26:	9502      	str	r5, [sp, #8]
 8018c28:	9d01      	ldr	r5, [sp, #4]
 8018c2a:	9103      	str	r1, [sp, #12]
 8018c2c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8018c30:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8018c34:	9902      	ldr	r1, [sp, #8]
 8018c36:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8018c3a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8018c3e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8018c42:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8018c46:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8018c4a:	022d      	lsls	r5, r5, #8
 8018c4c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8018c50:	fb06 0709 	mla	r7, r6, r9, r0
 8018c54:	430d      	orrs	r5, r1
 8018c56:	2e00      	cmp	r6, #0
 8018c58:	eb02 0c07 	add.w	ip, r2, r7
 8018c5c:	9505      	str	r5, [sp, #20]
 8018c5e:	f2c0 80b6 	blt.w	8018dce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8018c62:	45b3      	cmp	fp, r6
 8018c64:	f340 80b3 	ble.w	8018dce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8018c68:	2800      	cmp	r0, #0
 8018c6a:	f2c0 80ae 	blt.w	8018dca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8018c6e:	4581      	cmp	r9, r0
 8018c70:	f340 80ab 	ble.w	8018dca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8018c74:	5dd7      	ldrb	r7, [r2, r7]
 8018c76:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018c7a:	441f      	add	r7, r3
 8018c7c:	1c42      	adds	r2, r0, #1
 8018c7e:	f100 80a9 	bmi.w	8018dd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8018c82:	4591      	cmp	r9, r2
 8018c84:	f340 80a6 	ble.w	8018dd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8018c88:	2c00      	cmp	r4, #0
 8018c8a:	f000 80a3 	beq.w	8018dd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8018c8e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8018c92:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018c96:	441d      	add	r5, r3
 8018c98:	3601      	adds	r6, #1
 8018c9a:	f100 809f 	bmi.w	8018ddc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8018c9e:	45b3      	cmp	fp, r6
 8018ca0:	f340 809c 	ble.w	8018ddc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8018ca4:	f1be 0f00 	cmp.w	lr, #0
 8018ca8:	f000 8098 	beq.w	8018ddc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8018cac:	2800      	cmp	r0, #0
 8018cae:	f2c0 8093 	blt.w	8018dd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8018cb2:	4581      	cmp	r9, r0
 8018cb4:	f340 8090 	ble.w	8018dd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8018cb8:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8018cbc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018cc0:	441e      	add	r6, r3
 8018cc2:	3001      	adds	r0, #1
 8018cc4:	f100 808d 	bmi.w	8018de2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8018cc8:	4581      	cmp	r9, r0
 8018cca:	f340 808a 	ble.w	8018de2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8018cce:	2c00      	cmp	r4, #0
 8018cd0:	f000 8087 	beq.w	8018de2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8018cd4:	44e1      	add	r9, ip
 8018cd6:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018cda:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018cde:	4413      	add	r3, r2
 8018ce0:	b2a4      	uxth	r4, r4
 8018ce2:	fa1f fe8e 	uxth.w	lr, lr
 8018ce6:	fb04 fb0e 	mul.w	fp, r4, lr
 8018cea:	0124      	lsls	r4, r4, #4
 8018cec:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8018cf0:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8018cf4:	eba4 040b 	sub.w	r4, r4, fp
 8018cf8:	fa1f f08e 	uxth.w	r0, lr
 8018cfc:	b2a2      	uxth	r2, r4
 8018cfe:	78ac      	ldrb	r4, [r5, #2]
 8018d00:	f897 c002 	ldrb.w	ip, [r7, #2]
 8018d04:	9901      	ldr	r1, [sp, #4]
 8018d06:	eba9 0900 	sub.w	r9, r9, r0
 8018d0a:	fa1f f989 	uxth.w	r9, r9
 8018d0e:	4354      	muls	r4, r2
 8018d10:	fb09 440c 	mla	r4, r9, ip, r4
 8018d14:	f896 c002 	ldrb.w	ip, [r6, #2]
 8018d18:	fb00 440c 	mla	r4, r0, ip, r4
 8018d1c:	f893 c002 	ldrb.w	ip, [r3, #2]
 8018d20:	fa1f fe88 	uxth.w	lr, r8
 8018d24:	ea6f 0808 	mvn.w	r8, r8
 8018d28:	fa5f f888 	uxtb.w	r8, r8
 8018d2c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8018d30:	fb1a fa08 	smulbb	sl, sl, r8
 8018d34:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018d38:	fb0c ac0e 	mla	ip, ip, lr, sl
 8018d3c:	f895 a001 	ldrb.w	sl, [r5, #1]
 8018d40:	787c      	ldrb	r4, [r7, #1]
 8018d42:	782d      	ldrb	r5, [r5, #0]
 8018d44:	783f      	ldrb	r7, [r7, #0]
 8018d46:	fb02 fa0a 	mul.w	sl, r2, sl
 8018d4a:	fb09 aa04 	mla	sl, r9, r4, sl
 8018d4e:	7874      	ldrb	r4, [r6, #1]
 8018d50:	436a      	muls	r2, r5
 8018d52:	7835      	ldrb	r5, [r6, #0]
 8018d54:	fb00 aa04 	mla	sl, r0, r4, sl
 8018d58:	fb09 2207 	mla	r2, r9, r7, r2
 8018d5c:	785c      	ldrb	r4, [r3, #1]
 8018d5e:	781b      	ldrb	r3, [r3, #0]
 8018d60:	fb00 2005 	mla	r0, r0, r5, r2
 8018d64:	fb0b a404 	mla	r4, fp, r4, sl
 8018d68:	fb0b 0b03 	mla	fp, fp, r3, r0
 8018d6c:	9b02      	ldr	r3, [sp, #8]
 8018d6e:	fb11 fa08 	smulbb	sl, r1, r8
 8018d72:	fa1f fc8c 	uxth.w	ip, ip
 8018d76:	fb13 f808 	smulbb	r8, r3, r8
 8018d7a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8018d7e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8018d82:	fb04 a40e 	mla	r4, r4, lr, sl
 8018d86:	f10c 0301 	add.w	r3, ip, #1
 8018d8a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8018d8e:	fa1f fe8e 	uxth.w	lr, lr
 8018d92:	b2a4      	uxth	r4, r4
 8018d94:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018d98:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8018d9c:	f104 0a01 	add.w	sl, r4, #1
 8018da0:	f10e 0c01 	add.w	ip, lr, #1
 8018da4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018da8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8018dac:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018db0:	0964      	lsrs	r4, r4, #5
 8018db2:	ea4c 0c03 	orr.w	ip, ip, r3
 8018db6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8018dba:	9b03      	ldr	r3, [sp, #12]
 8018dbc:	ea4c 0c04 	orr.w	ip, ip, r4
 8018dc0:	f8a3 c000 	strh.w	ip, [r3]
 8018dc4:	b007      	add	sp, #28
 8018dc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dca:	af05      	add	r7, sp, #20
 8018dcc:	e756      	b.n	8018c7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8018dce:	ad05      	add	r5, sp, #20
 8018dd0:	462f      	mov	r7, r5
 8018dd2:	e761      	b.n	8018c98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8018dd4:	ad05      	add	r5, sp, #20
 8018dd6:	e75f      	b.n	8018c98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8018dd8:	ae05      	add	r6, sp, #20
 8018dda:	e772      	b.n	8018cc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8018ddc:	ab05      	add	r3, sp, #20
 8018dde:	461e      	mov	r6, r3
 8018de0:	e77e      	b.n	8018ce0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8018de2:	ab05      	add	r3, sp, #20
 8018de4:	e77c      	b.n	8018ce0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08018de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018de6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dea:	b095      	sub	sp, #84	; 0x54
 8018dec:	9212      	str	r2, [sp, #72]	; 0x48
 8018dee:	9309      	str	r3, [sp, #36]	; 0x24
 8018df0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8018df2:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8018df6:	930f      	str	r3, [sp, #60]	; 0x3c
 8018df8:	910e      	str	r1, [sp, #56]	; 0x38
 8018dfa:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8018dfe:	9013      	str	r0, [sp, #76]	; 0x4c
 8018e00:	6850      	ldr	r0, [r2, #4]
 8018e02:	6812      	ldr	r2, [r2, #0]
 8018e04:	fb00 1303 	mla	r3, r0, r3, r1
 8018e08:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018e0c:	930a      	str	r3, [sp, #40]	; 0x28
 8018e0e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018e10:	681b      	ldr	r3, [r3, #0]
 8018e12:	930d      	str	r3, [sp, #52]	; 0x34
 8018e14:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018e16:	685c      	ldr	r4, [r3, #4]
 8018e18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018e1a:	43db      	mvns	r3, r3
 8018e1c:	b2db      	uxtb	r3, r3
 8018e1e:	3404      	adds	r4, #4
 8018e20:	930b      	str	r3, [sp, #44]	; 0x2c
 8018e22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018e24:	2b00      	cmp	r3, #0
 8018e26:	dc03      	bgt.n	8018e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018e28:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018e2a:	2b00      	cmp	r3, #0
 8018e2c:	f340 8255 	ble.w	80192da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8018e30:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018e32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018e36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018e3a:	1e48      	subs	r0, r1, #1
 8018e3c:	1e55      	subs	r5, r2, #1
 8018e3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018e40:	2b00      	cmp	r3, #0
 8018e42:	f340 80f9 	ble.w	8019038 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018e46:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8018e48:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018e4a:	1436      	asrs	r6, r6, #16
 8018e4c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018e50:	d406      	bmi.n	8018e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018e52:	4286      	cmp	r6, r0
 8018e54:	da04      	bge.n	8018e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018e56:	2b00      	cmp	r3, #0
 8018e58:	db02      	blt.n	8018e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018e5a:	42ab      	cmp	r3, r5
 8018e5c:	f2c0 80ed 	blt.w	801903a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8018e60:	3601      	adds	r6, #1
 8018e62:	f100 80da 	bmi.w	801901a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018e66:	42b1      	cmp	r1, r6
 8018e68:	f2c0 80d7 	blt.w	801901a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018e6c:	3301      	adds	r3, #1
 8018e6e:	f100 80d4 	bmi.w	801901a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018e72:	429a      	cmp	r2, r3
 8018e74:	f2c0 80d1 	blt.w	801901a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018e78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018e7a:	9311      	str	r3, [sp, #68]	; 0x44
 8018e7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018e7e:	930c      	str	r3, [sp, #48]	; 0x30
 8018e80:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018e82:	2b00      	cmp	r3, #0
 8018e84:	f340 80fa 	ble.w	801907c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8018e88:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018e8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018e8c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8018e8e:	68c6      	ldr	r6, [r0, #12]
 8018e90:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8018e92:	141d      	asrs	r5, r3, #16
 8018e94:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018e98:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018e9a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018e9c:	1400      	asrs	r0, r0, #16
 8018e9e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8018ea2:	6892      	ldr	r2, [r2, #8]
 8018ea4:	f100 813e 	bmi.w	8019124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018ea8:	1e57      	subs	r7, r2, #1
 8018eaa:	42b8      	cmp	r0, r7
 8018eac:	f280 813a 	bge.w	8019124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018eb0:	2d00      	cmp	r5, #0
 8018eb2:	f2c0 8137 	blt.w	8019124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018eb6:	1e77      	subs	r7, r6, #1
 8018eb8:	42bd      	cmp	r5, r7
 8018eba:	f280 8133 	bge.w	8019124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018ebe:	b212      	sxth	r2, r2
 8018ec0:	fb05 0002 	mla	r0, r5, r2, r0
 8018ec4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018ec6:	f815 a000 	ldrb.w	sl, [r5, r0]
 8018eca:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8018ece:	182e      	adds	r6, r5, r0
 8018ed0:	eb04 050a 	add.w	r5, r4, sl
 8018ed4:	2b00      	cmp	r3, #0
 8018ed6:	f000 8117 	beq.w	8019108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8018eda:	f896 c001 	ldrb.w	ip, [r6, #1]
 8018ede:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018ee2:	44a4      	add	ip, r4
 8018ee4:	2900      	cmp	r1, #0
 8018ee6:	f000 8117 	beq.w	8019118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8018eea:	18b0      	adds	r0, r6, r2
 8018eec:	5cb2      	ldrb	r2, [r6, r2]
 8018eee:	7840      	ldrb	r0, [r0, #1]
 8018ef0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018ef4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018ef8:	4422      	add	r2, r4
 8018efa:	4420      	add	r0, r4
 8018efc:	b29b      	uxth	r3, r3
 8018efe:	b289      	uxth	r1, r1
 8018f00:	fb03 f901 	mul.w	r9, r3, r1
 8018f04:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018f08:	011b      	lsls	r3, r3, #4
 8018f0a:	b289      	uxth	r1, r1
 8018f0c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8018f10:	f895 b002 	ldrb.w	fp, [r5, #2]
 8018f14:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018f16:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8018f1a:	f8b6 e000 	ldrh.w	lr, [r6]
 8018f1e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8018f22:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8018f26:	eba3 0309 	sub.w	r3, r3, r9
 8018f2a:	b29b      	uxth	r3, r3
 8018f2c:	eba8 0801 	sub.w	r8, r8, r1
 8018f30:	fa1f f888 	uxth.w	r8, r8
 8018f34:	435f      	muls	r7, r3
 8018f36:	fb08 770b 	mla	r7, r8, fp, r7
 8018f3a:	f892 b002 	ldrb.w	fp, [r2, #2]
 8018f3e:	9310      	str	r3, [sp, #64]	; 0x40
 8018f40:	fb01 770b 	mla	r7, r1, fp, r7
 8018f44:	f890 b002 	ldrb.w	fp, [r0, #2]
 8018f48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018f4a:	fb09 770b 	mla	r7, r9, fp, r7
 8018f4e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8018f52:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8018f56:	fb1b fb03 	smulbb	fp, fp, r3
 8018f5a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018f5e:	fb07 b706 	mla	r7, r7, r6, fp
 8018f62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f64:	f895 b001 	ldrb.w	fp, [r5, #1]
 8018f68:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8018f6c:	f89c c000 	ldrb.w	ip, [ip]
 8018f70:	435d      	muls	r5, r3
 8018f72:	fb08 550b 	mla	r5, r8, fp, r5
 8018f76:	f892 b001 	ldrb.w	fp, [r2, #1]
 8018f7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018f7c:	fb01 550b 	mla	r5, r1, fp, r5
 8018f80:	f890 b001 	ldrb.w	fp, [r0, #1]
 8018f84:	fb09 550b 	mla	r5, r9, fp, r5
 8018f88:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8018f8c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8018f90:	fb1b fb03 	smulbb	fp, fp, r3
 8018f94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f96:	fb03 f30c 	mul.w	r3, r3, ip
 8018f9a:	f892 c000 	ldrb.w	ip, [r2]
 8018f9e:	fb08 330a 	mla	r3, r8, sl, r3
 8018fa2:	fb01 330c 	mla	r3, r1, ip, r3
 8018fa6:	f890 c000 	ldrb.w	ip, [r0]
 8018faa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018fae:	fb09 3c0c 	mla	ip, r9, ip, r3
 8018fb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018fb4:	fa5f fe8e 	uxtb.w	lr, lr
 8018fb8:	b2bf      	uxth	r7, r7
 8018fba:	fb1e fe03 	smulbb	lr, lr, r3
 8018fbe:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8018fc2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018fc6:	fb05 b506 	mla	r5, r5, r6, fp
 8018fca:	1c7b      	adds	r3, r7, #1
 8018fcc:	fb0c e606 	mla	r6, ip, r6, lr
 8018fd0:	b2ad      	uxth	r5, r5
 8018fd2:	b2b6      	uxth	r6, r6
 8018fd4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8018fd8:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8018fdc:	f105 0b01 	add.w	fp, r5, #1
 8018fe0:	1c77      	adds	r7, r6, #1
 8018fe2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8018fe6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8018fea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018fee:	096d      	lsrs	r5, r5, #5
 8018ff0:	431f      	orrs	r7, r3
 8018ff2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018ff6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018ff8:	433d      	orrs	r5, r7
 8018ffa:	801d      	strh	r5, [r3, #0]
 8018ffc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018ffe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019000:	3302      	adds	r3, #2
 8019002:	930c      	str	r3, [sp, #48]	; 0x30
 8019004:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019006:	4413      	add	r3, r2
 8019008:	931f      	str	r3, [sp, #124]	; 0x7c
 801900a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801900c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801900e:	4413      	add	r3, r2
 8019010:	9320      	str	r3, [sp, #128]	; 0x80
 8019012:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019014:	3b01      	subs	r3, #1
 8019016:	9311      	str	r3, [sp, #68]	; 0x44
 8019018:	e732      	b.n	8018e80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801901a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801901c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801901e:	4433      	add	r3, r6
 8019020:	931f      	str	r3, [sp, #124]	; 0x7c
 8019022:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8019024:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019026:	4433      	add	r3, r6
 8019028:	9320      	str	r3, [sp, #128]	; 0x80
 801902a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801902c:	3b01      	subs	r3, #1
 801902e:	9309      	str	r3, [sp, #36]	; 0x24
 8019030:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019032:	3302      	adds	r3, #2
 8019034:	930a      	str	r3, [sp, #40]	; 0x28
 8019036:	e702      	b.n	8018e3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019038:	d027      	beq.n	801908a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801903a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801903c:	9821      	ldr	r0, [sp, #132]	; 0x84
 801903e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8019040:	3b01      	subs	r3, #1
 8019042:	fb00 5003 	mla	r0, r0, r3, r5
 8019046:	1400      	asrs	r0, r0, #16
 8019048:	f53f af16 	bmi.w	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801904c:	3901      	subs	r1, #1
 801904e:	4288      	cmp	r0, r1
 8019050:	f6bf af12 	bge.w	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019054:	9922      	ldr	r1, [sp, #136]	; 0x88
 8019056:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019058:	fb01 0303 	mla	r3, r1, r3, r0
 801905c:	141b      	asrs	r3, r3, #16
 801905e:	f53f af0b 	bmi.w	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019062:	3a01      	subs	r2, #1
 8019064:	4293      	cmp	r3, r2
 8019066:	f6bf af07 	bge.w	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801906a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801906c:	9311      	str	r3, [sp, #68]	; 0x44
 801906e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8019072:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019074:	930c      	str	r3, [sp, #48]	; 0x30
 8019076:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019078:	2b00      	cmp	r3, #0
 801907a:	dc70      	bgt.n	801915e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801907c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801907e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019080:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019084:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019088:	930a      	str	r3, [sp, #40]	; 0x28
 801908a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801908c:	2b00      	cmp	r3, #0
 801908e:	f340 8124 	ble.w	80192da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019092:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019096:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801909a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801909e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80190a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80190a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80190a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80190ac:	eef0 6a62 	vmov.f32	s13, s5
 80190b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80190b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80190bc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80190c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80190c4:	eef0 6a43 	vmov.f32	s13, s6
 80190c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80190cc:	ee12 2a90 	vmov	r2, s5
 80190d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80190d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80190d8:	ee13 2a10 	vmov	r2, s6
 80190dc:	9321      	str	r3, [sp, #132]	; 0x84
 80190de:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80190e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80190e4:	9322      	str	r3, [sp, #136]	; 0x88
 80190e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80190e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80190ea:	3b01      	subs	r3, #1
 80190ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190f0:	930e      	str	r3, [sp, #56]	; 0x38
 80190f2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80190f4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80190f8:	bf08      	it	eq
 80190fa:	4613      	moveq	r3, r2
 80190fc:	9309      	str	r3, [sp, #36]	; 0x24
 80190fe:	eeb0 3a67 	vmov.f32	s6, s15
 8019102:	eef0 2a47 	vmov.f32	s5, s14
 8019106:	e68c      	b.n	8018e22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019108:	b149      	cbz	r1, 801911e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801910a:	5cb2      	ldrb	r2, [r6, r2]
 801910c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019110:	4422      	add	r2, r4
 8019112:	4628      	mov	r0, r5
 8019114:	46ac      	mov	ip, r5
 8019116:	e6f1      	b.n	8018efc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019118:	4628      	mov	r0, r5
 801911a:	462a      	mov	r2, r5
 801911c:	e6ee      	b.n	8018efc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801911e:	4628      	mov	r0, r5
 8019120:	462a      	mov	r2, r5
 8019122:	e7f7      	b.n	8019114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8019124:	1c47      	adds	r7, r0, #1
 8019126:	f53f af69 	bmi.w	8018ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801912a:	42ba      	cmp	r2, r7
 801912c:	f6ff af66 	blt.w	8018ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019130:	1c6f      	adds	r7, r5, #1
 8019132:	f53f af63 	bmi.w	8018ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019136:	42be      	cmp	r6, r7
 8019138:	f6ff af60 	blt.w	8018ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801913c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801913e:	9002      	str	r0, [sp, #8]
 8019140:	b236      	sxth	r6, r6
 8019142:	b212      	sxth	r2, r2
 8019144:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8019148:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801914c:	9200      	str	r2, [sp, #0]
 801914e:	9601      	str	r6, [sp, #4]
 8019150:	4623      	mov	r3, r4
 8019152:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8019156:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019158:	f7ff fd59 	bl	8018c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801915c:	e74e      	b.n	8018ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801915e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019160:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019162:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8019164:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019166:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801916a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801916c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019170:	142d      	asrs	r5, r5, #16
 8019172:	1400      	asrs	r0, r0, #16
 8019174:	fb02 5000 	mla	r0, r2, r0, r5
 8019178:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801917a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801917e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019182:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8019186:	182e      	adds	r6, r5, r0
 8019188:	eb04 0509 	add.w	r5, r4, r9
 801918c:	2b00      	cmp	r3, #0
 801918e:	f000 8096 	beq.w	80192be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8019192:	7877      	ldrb	r7, [r6, #1]
 8019194:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019198:	4427      	add	r7, r4
 801919a:	2900      	cmp	r1, #0
 801919c:	f000 8097 	beq.w	80192ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80191a0:	18b0      	adds	r0, r6, r2
 80191a2:	5cb2      	ldrb	r2, [r6, r2]
 80191a4:	7840      	ldrb	r0, [r0, #1]
 80191a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80191aa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80191ae:	4422      	add	r2, r4
 80191b0:	4420      	add	r0, r4
 80191b2:	b29b      	uxth	r3, r3
 80191b4:	b289      	uxth	r1, r1
 80191b6:	fb03 f801 	mul.w	r8, r3, r1
 80191ba:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80191bc:	f895 b002 	ldrb.w	fp, [r5, #2]
 80191c0:	f8b6 c000 	ldrh.w	ip, [r6]
 80191c4:	78be      	ldrb	r6, [r7, #2]
 80191c6:	f814 9009 	ldrb.w	r9, [r4, r9]
 80191ca:	011b      	lsls	r3, r3, #4
 80191cc:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80191d0:	b289      	uxth	r1, r1
 80191d2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80191d6:	eba3 0308 	sub.w	r3, r3, r8
 80191da:	b29b      	uxth	r3, r3
 80191dc:	ebae 0e01 	sub.w	lr, lr, r1
 80191e0:	fa1f fe8e 	uxth.w	lr, lr
 80191e4:	435e      	muls	r6, r3
 80191e6:	fb0e 660b 	mla	r6, lr, fp, r6
 80191ea:	f892 b002 	ldrb.w	fp, [r2, #2]
 80191ee:	9310      	str	r3, [sp, #64]	; 0x40
 80191f0:	fb01 660b 	mla	r6, r1, fp, r6
 80191f4:	f890 b002 	ldrb.w	fp, [r0, #2]
 80191f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80191fa:	fb08 660b 	mla	r6, r8, fp, r6
 80191fe:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8019202:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019206:	fb1b fb03 	smulbb	fp, fp, r3
 801920a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801920e:	fb06 b60a 	mla	r6, r6, sl, fp
 8019212:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019214:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019218:	787d      	ldrb	r5, [r7, #1]
 801921a:	783f      	ldrb	r7, [r7, #0]
 801921c:	435d      	muls	r5, r3
 801921e:	fb0e 550b 	mla	r5, lr, fp, r5
 8019222:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019226:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019228:	fb01 550b 	mla	r5, r1, fp, r5
 801922c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019230:	fb08 550b 	mla	r5, r8, fp, r5
 8019234:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8019238:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801923c:	fb1b fb03 	smulbb	fp, fp, r3
 8019240:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019242:	437b      	muls	r3, r7
 8019244:	7817      	ldrb	r7, [r2, #0]
 8019246:	fb0e 3309 	mla	r3, lr, r9, r3
 801924a:	fb01 3307 	mla	r3, r1, r7, r3
 801924e:	7807      	ldrb	r7, [r0, #0]
 8019250:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019254:	fb08 3707 	mla	r7, r8, r7, r3
 8019258:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801925a:	fa5f fc8c 	uxtb.w	ip, ip
 801925e:	fb1c fc03 	smulbb	ip, ip, r3
 8019262:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019266:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801926a:	fb05 b50a 	mla	r5, r5, sl, fp
 801926e:	fb07 c70a 	mla	r7, r7, sl, ip
 8019272:	b2b6      	uxth	r6, r6
 8019274:	b2ad      	uxth	r5, r5
 8019276:	b2bf      	uxth	r7, r7
 8019278:	1c73      	adds	r3, r6, #1
 801927a:	1c7a      	adds	r2, r7, #1
 801927c:	f105 0b01 	add.w	fp, r5, #1
 8019280:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8019284:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8019288:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801928c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019290:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8019294:	096d      	lsrs	r5, r5, #5
 8019296:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019298:	4316      	orrs	r6, r2
 801929a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801929e:	432e      	orrs	r6, r5
 80192a0:	f823 6b02 	strh.w	r6, [r3], #2
 80192a4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80192a6:	930c      	str	r3, [sp, #48]	; 0x30
 80192a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80192aa:	4413      	add	r3, r2
 80192ac:	931f      	str	r3, [sp, #124]	; 0x7c
 80192ae:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80192b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80192b2:	4413      	add	r3, r2
 80192b4:	9320      	str	r3, [sp, #128]	; 0x80
 80192b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80192b8:	3b01      	subs	r3, #1
 80192ba:	9311      	str	r3, [sp, #68]	; 0x44
 80192bc:	e6db      	b.n	8019076 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80192be:	b149      	cbz	r1, 80192d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80192c0:	5cb2      	ldrb	r2, [r6, r2]
 80192c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80192c6:	4422      	add	r2, r4
 80192c8:	4628      	mov	r0, r5
 80192ca:	462f      	mov	r7, r5
 80192cc:	e771      	b.n	80191b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80192ce:	4628      	mov	r0, r5
 80192d0:	462a      	mov	r2, r5
 80192d2:	e76e      	b.n	80191b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80192d4:	4628      	mov	r0, r5
 80192d6:	462a      	mov	r2, r5
 80192d8:	e7f7      	b.n	80192ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80192da:	b015      	add	sp, #84	; 0x54
 80192dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080192e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80192e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192e4:	880f      	ldrh	r7, [r1, #0]
 80192e6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80192ea:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80192ee:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80192f2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80192f6:	023c      	lsls	r4, r7, #8
 80192f8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80192fc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8019300:	017c      	lsls	r4, r7, #5
 8019302:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8019306:	00ff      	lsls	r7, r7, #3
 8019308:	ea4b 0404 	orr.w	r4, fp, r4
 801930c:	b2ff      	uxtb	r7, r7
 801930e:	fb05 ca0e 	mla	sl, r5, lr, ip
 8019312:	4327      	orrs	r7, r4
 8019314:	2d00      	cmp	r5, #0
 8019316:	eb02 080a 	add.w	r8, r2, sl
 801931a:	9701      	str	r7, [sp, #4]
 801931c:	db7e      	blt.n	801941c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801931e:	45a9      	cmp	r9, r5
 8019320:	dd7c      	ble.n	801941c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8019322:	f1bc 0f00 	cmp.w	ip, #0
 8019326:	db77      	blt.n	8019418 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8019328:	45e6      	cmp	lr, ip
 801932a:	dd75      	ble.n	8019418 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801932c:	f812 700a 	ldrb.w	r7, [r2, sl]
 8019330:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019334:	441f      	add	r7, r3
 8019336:	f11c 0201 	adds.w	r2, ip, #1
 801933a:	d472      	bmi.n	8019422 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801933c:	4596      	cmp	lr, r2
 801933e:	dd70      	ble.n	8019422 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8019340:	2800      	cmp	r0, #0
 8019342:	d06e      	beq.n	8019422 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8019344:	f898 4001 	ldrb.w	r4, [r8, #1]
 8019348:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801934c:	441c      	add	r4, r3
 801934e:	3501      	adds	r5, #1
 8019350:	d46b      	bmi.n	801942a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8019352:	45a9      	cmp	r9, r5
 8019354:	dd69      	ble.n	801942a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8019356:	2e00      	cmp	r6, #0
 8019358:	d067      	beq.n	801942a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801935a:	f1bc 0f00 	cmp.w	ip, #0
 801935e:	db62      	blt.n	8019426 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8019360:	45e6      	cmp	lr, ip
 8019362:	dd60      	ble.n	8019426 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8019364:	f818 500e 	ldrb.w	r5, [r8, lr]
 8019368:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801936c:	441d      	add	r5, r3
 801936e:	f11c 0201 	adds.w	r2, ip, #1
 8019372:	d45d      	bmi.n	8019430 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019374:	4596      	cmp	lr, r2
 8019376:	dd5b      	ble.n	8019430 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019378:	2800      	cmp	r0, #0
 801937a:	d059      	beq.n	8019430 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801937c:	44c6      	add	lr, r8
 801937e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019382:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019386:	4413      	add	r3, r2
 8019388:	b280      	uxth	r0, r0
 801938a:	b2b2      	uxth	r2, r6
 801938c:	fb00 f602 	mul.w	r6, r0, r2
 8019390:	0100      	lsls	r0, r0, #4
 8019392:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8019396:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801939a:	1b80      	subs	r0, r0, r6
 801939c:	fa1f fc82 	uxth.w	ip, r2
 80193a0:	b282      	uxth	r2, r0
 80193a2:	78a0      	ldrb	r0, [r4, #2]
 80193a4:	f897 e002 	ldrb.w	lr, [r7, #2]
 80193a8:	f897 9000 	ldrb.w	r9, [r7]
 80193ac:	787f      	ldrb	r7, [r7, #1]
 80193ae:	eba8 080c 	sub.w	r8, r8, ip
 80193b2:	fa1f f888 	uxth.w	r8, r8
 80193b6:	4350      	muls	r0, r2
 80193b8:	fb08 0e0e 	mla	lr, r8, lr, r0
 80193bc:	78a8      	ldrb	r0, [r5, #2]
 80193be:	fb0c e000 	mla	r0, ip, r0, lr
 80193c2:	f893 e002 	ldrb.w	lr, [r3, #2]
 80193c6:	fb06 0e0e 	mla	lr, r6, lr, r0
 80193ca:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80193ce:	f894 e000 	ldrb.w	lr, [r4]
 80193d2:	fb02 fe0e 	mul.w	lr, r2, lr
 80193d6:	fb08 e909 	mla	r9, r8, r9, lr
 80193da:	f895 e000 	ldrb.w	lr, [r5]
 80193de:	fb0c 990e 	mla	r9, ip, lr, r9
 80193e2:	f893 e000 	ldrb.w	lr, [r3]
 80193e6:	785b      	ldrb	r3, [r3, #1]
 80193e8:	fb06 9e0e 	mla	lr, r6, lr, r9
 80193ec:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80193f0:	ea4e 0e00 	orr.w	lr, lr, r0
 80193f4:	7860      	ldrb	r0, [r4, #1]
 80193f6:	4350      	muls	r0, r2
 80193f8:	786a      	ldrb	r2, [r5, #1]
 80193fa:	fb08 0007 	mla	r0, r8, r7, r0
 80193fe:	fb0c 0202 	mla	r2, ip, r2, r0
 8019402:	fb06 2303 	mla	r3, r6, r3, r2
 8019406:	095b      	lsrs	r3, r3, #5
 8019408:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801940c:	ea4e 0303 	orr.w	r3, lr, r3
 8019410:	800b      	strh	r3, [r1, #0]
 8019412:	b003      	add	sp, #12
 8019414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019418:	af01      	add	r7, sp, #4
 801941a:	e78c      	b.n	8019336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801941c:	ac01      	add	r4, sp, #4
 801941e:	4627      	mov	r7, r4
 8019420:	e795      	b.n	801934e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8019422:	ac01      	add	r4, sp, #4
 8019424:	e793      	b.n	801934e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8019426:	ad01      	add	r5, sp, #4
 8019428:	e7a1      	b.n	801936e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801942a:	ab01      	add	r3, sp, #4
 801942c:	461d      	mov	r5, r3
 801942e:	e7ab      	b.n	8019388 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8019430:	ab01      	add	r3, sp, #4
 8019432:	e7a9      	b.n	8019388 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08019434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019438:	b08f      	sub	sp, #60	; 0x3c
 801943a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801943e:	920c      	str	r2, [sp, #48]	; 0x30
 8019440:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8019442:	910a      	str	r1, [sp, #40]	; 0x28
 8019444:	9306      	str	r3, [sp, #24]
 8019446:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801944a:	900d      	str	r0, [sp, #52]	; 0x34
 801944c:	6850      	ldr	r0, [r2, #4]
 801944e:	6812      	ldr	r2, [r2, #0]
 8019450:	fb00 1303 	mla	r3, r0, r3, r1
 8019454:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019458:	9307      	str	r3, [sp, #28]
 801945a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801945c:	681b      	ldr	r3, [r3, #0]
 801945e:	9308      	str	r3, [sp, #32]
 8019460:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019462:	685c      	ldr	r4, [r3, #4]
 8019464:	3404      	adds	r4, #4
 8019466:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019468:	2b00      	cmp	r3, #0
 801946a:	dc03      	bgt.n	8019474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801946c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801946e:	2b00      	cmp	r3, #0
 8019470:	f340 81d6 	ble.w	8019820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8019474:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019476:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801947a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801947e:	1e48      	subs	r0, r1, #1
 8019480:	1e56      	subs	r6, r2, #1
 8019482:	9b06      	ldr	r3, [sp, #24]
 8019484:	2b00      	cmp	r3, #0
 8019486:	f340 80b7 	ble.w	80195f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801948a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801948e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019492:	d406      	bmi.n	80194a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019494:	4287      	cmp	r7, r0
 8019496:	da04      	bge.n	80194a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019498:	2b00      	cmp	r3, #0
 801949a:	db02      	blt.n	80194a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801949c:	42b3      	cmp	r3, r6
 801949e:	f2c0 80ac 	blt.w	80195fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80194a2:	3701      	adds	r7, #1
 80194a4:	f100 809d 	bmi.w	80195e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80194a8:	42b9      	cmp	r1, r7
 80194aa:	f2c0 809a 	blt.w	80195e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80194ae:	3301      	adds	r3, #1
 80194b0:	f100 8097 	bmi.w	80195e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80194b4:	429a      	cmp	r2, r3
 80194b6:	f2c0 8094 	blt.w	80195e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80194ba:	9b06      	ldr	r3, [sp, #24]
 80194bc:	930b      	str	r3, [sp, #44]	; 0x2c
 80194be:	9b07      	ldr	r3, [sp, #28]
 80194c0:	9309      	str	r3, [sp, #36]	; 0x24
 80194c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80194c4:	2b00      	cmp	r3, #0
 80194c6:	f340 80b5 	ble.w	8019634 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80194ca:	9820      	ldr	r0, [sp, #128]	; 0x80
 80194cc:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80194ce:	68c7      	ldr	r7, [r0, #12]
 80194d0:	6892      	ldr	r2, [r2, #8]
 80194d2:	ea5f 402b 	movs.w	r0, fp, asr #16
 80194d6:	ea4f 4625 	mov.w	r6, r5, asr #16
 80194da:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80194de:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80194e2:	f100 80fb 	bmi.w	80196dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80194e6:	f102 3cff 	add.w	ip, r2, #4294967295
 80194ea:	4560      	cmp	r0, ip
 80194ec:	f280 80f6 	bge.w	80196dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80194f0:	2e00      	cmp	r6, #0
 80194f2:	f2c0 80f3 	blt.w	80196dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80194f6:	f107 3cff 	add.w	ip, r7, #4294967295
 80194fa:	4566      	cmp	r6, ip
 80194fc:	f280 80ee 	bge.w	80196dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019500:	b212      	sxth	r2, r2
 8019502:	fb06 0002 	mla	r0, r6, r2, r0
 8019506:	9e08      	ldr	r6, [sp, #32]
 8019508:	1837      	adds	r7, r6, r0
 801950a:	5c30      	ldrb	r0, [r6, r0]
 801950c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8019510:	eb04 0c08 	add.w	ip, r4, r8
 8019514:	2b00      	cmp	r3, #0
 8019516:	f000 80d3 	beq.w	80196c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801951a:	787e      	ldrb	r6, [r7, #1]
 801951c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019520:	4426      	add	r6, r4
 8019522:	2900      	cmp	r1, #0
 8019524:	f000 80d4 	beq.w	80196d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019528:	18b8      	adds	r0, r7, r2
 801952a:	5cba      	ldrb	r2, [r7, r2]
 801952c:	7840      	ldrb	r0, [r0, #1]
 801952e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019532:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019536:	4422      	add	r2, r4
 8019538:	4420      	add	r0, r4
 801953a:	b29b      	uxth	r3, r3
 801953c:	b289      	uxth	r1, r1
 801953e:	fb03 f901 	mul.w	r9, r3, r1
 8019542:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019546:	011b      	lsls	r3, r3, #4
 8019548:	b289      	uxth	r1, r1
 801954a:	78b7      	ldrb	r7, [r6, #2]
 801954c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019550:	f89c c001 	ldrb.w	ip, [ip, #1]
 8019554:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8019558:	eba3 0309 	sub.w	r3, r3, r9
 801955c:	b29b      	uxth	r3, r3
 801955e:	ebae 0e01 	sub.w	lr, lr, r1
 8019562:	fa1f fe8e 	uxth.w	lr, lr
 8019566:	435f      	muls	r7, r3
 8019568:	fb0e 770a 	mla	r7, lr, sl, r7
 801956c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019570:	fb01 770a 	mla	r7, r1, sl, r7
 8019574:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019578:	fb09 7a0a 	mla	sl, r9, sl, r7
 801957c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019580:	f896 8000 	ldrb.w	r8, [r6]
 8019584:	7876      	ldrb	r6, [r6, #1]
 8019586:	fb03 f808 	mul.w	r8, r3, r8
 801958a:	fb0e 8807 	mla	r8, lr, r7, r8
 801958e:	7817      	ldrb	r7, [r2, #0]
 8019590:	fb01 8807 	mla	r8, r1, r7, r8
 8019594:	7807      	ldrb	r7, [r0, #0]
 8019596:	fb09 8707 	mla	r7, r9, r7, r8
 801959a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801959e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80195a2:	ea47 070a 	orr.w	r7, r7, sl
 80195a6:	4373      	muls	r3, r6
 80195a8:	f892 a001 	ldrb.w	sl, [r2, #1]
 80195ac:	fb0e 330c 	mla	r3, lr, ip, r3
 80195b0:	fb01 310a 	mla	r1, r1, sl, r3
 80195b4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80195b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195ba:	fb09 1a0a 	mla	sl, r9, sl, r1
 80195be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80195c6:	ea47 070a 	orr.w	r7, r7, sl
 80195ca:	801f      	strh	r7, [r3, #0]
 80195cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195ce:	3302      	adds	r3, #2
 80195d0:	9309      	str	r3, [sp, #36]	; 0x24
 80195d2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80195d4:	449b      	add	fp, r3
 80195d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80195d8:	441d      	add	r5, r3
 80195da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80195dc:	3b01      	subs	r3, #1
 80195de:	930b      	str	r3, [sp, #44]	; 0x2c
 80195e0:	e76f      	b.n	80194c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80195e2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80195e4:	449b      	add	fp, r3
 80195e6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80195e8:	441d      	add	r5, r3
 80195ea:	9b06      	ldr	r3, [sp, #24]
 80195ec:	3b01      	subs	r3, #1
 80195ee:	9306      	str	r3, [sp, #24]
 80195f0:	9b07      	ldr	r3, [sp, #28]
 80195f2:	3302      	adds	r3, #2
 80195f4:	9307      	str	r3, [sp, #28]
 80195f6:	e744      	b.n	8019482 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80195f8:	d023      	beq.n	8019642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80195fa:	9b06      	ldr	r3, [sp, #24]
 80195fc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80195fe:	3b01      	subs	r3, #1
 8019600:	fb00 b003 	mla	r0, r0, r3, fp
 8019604:	1400      	asrs	r0, r0, #16
 8019606:	f53f af58 	bmi.w	80194ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801960a:	3901      	subs	r1, #1
 801960c:	4288      	cmp	r0, r1
 801960e:	f6bf af54 	bge.w	80194ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019612:	991c      	ldr	r1, [sp, #112]	; 0x70
 8019614:	fb01 5303 	mla	r3, r1, r3, r5
 8019618:	141b      	asrs	r3, r3, #16
 801961a:	f53f af4e 	bmi.w	80194ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801961e:	3a01      	subs	r2, #1
 8019620:	4293      	cmp	r3, r2
 8019622:	f6bf af4a 	bge.w	80194ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019626:	9b06      	ldr	r3, [sp, #24]
 8019628:	9309      	str	r3, [sp, #36]	; 0x24
 801962a:	9b07      	ldr	r3, [sp, #28]
 801962c:	930b      	str	r3, [sp, #44]	; 0x2c
 801962e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019630:	2b00      	cmp	r3, #0
 8019632:	dc70      	bgt.n	8019716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8019634:	9b06      	ldr	r3, [sp, #24]
 8019636:	9a07      	ldr	r2, [sp, #28]
 8019638:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801963c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019640:	9307      	str	r3, [sp, #28]
 8019642:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019644:	2b00      	cmp	r3, #0
 8019646:	f340 80eb 	ble.w	8019820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801964a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801964e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019652:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019656:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019658:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801965c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019660:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019664:	eef0 6a62 	vmov.f32	s13, s5
 8019668:	ee61 7a27 	vmul.f32	s15, s2, s15
 801966c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019670:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019674:	ee16 ba90 	vmov	fp, s13
 8019678:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801967c:	eef0 6a43 	vmov.f32	s13, s6
 8019680:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019684:	ee12 2a90 	vmov	r2, s5
 8019688:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801968c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019690:	ee13 2a10 	vmov	r2, s6
 8019694:	931b      	str	r3, [sp, #108]	; 0x6c
 8019696:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019698:	fb92 f3f3 	sdiv	r3, r2, r3
 801969c:	931c      	str	r3, [sp, #112]	; 0x70
 801969e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80196a0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80196a2:	3b01      	subs	r3, #1
 80196a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80196a8:	930a      	str	r3, [sp, #40]	; 0x28
 80196aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80196ac:	bf08      	it	eq
 80196ae:	4613      	moveq	r3, r2
 80196b0:	ee16 5a90 	vmov	r5, s13
 80196b4:	9306      	str	r3, [sp, #24]
 80196b6:	eeb0 3a67 	vmov.f32	s6, s15
 80196ba:	eef0 2a47 	vmov.f32	s5, s14
 80196be:	e6d2      	b.n	8019466 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80196c0:	b149      	cbz	r1, 80196d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80196c2:	5cba      	ldrb	r2, [r7, r2]
 80196c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80196c8:	4422      	add	r2, r4
 80196ca:	4660      	mov	r0, ip
 80196cc:	4666      	mov	r6, ip
 80196ce:	e734      	b.n	801953a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80196d0:	4660      	mov	r0, ip
 80196d2:	4662      	mov	r2, ip
 80196d4:	e731      	b.n	801953a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80196d6:	4660      	mov	r0, ip
 80196d8:	4662      	mov	r2, ip
 80196da:	e7f7      	b.n	80196cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80196dc:	f110 0c01 	adds.w	ip, r0, #1
 80196e0:	f53f af74 	bmi.w	80195cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80196e4:	4562      	cmp	r2, ip
 80196e6:	f6ff af71 	blt.w	80195cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80196ea:	f116 0c01 	adds.w	ip, r6, #1
 80196ee:	f53f af6d 	bmi.w	80195cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80196f2:	4567      	cmp	r7, ip
 80196f4:	f6ff af6a 	blt.w	80195cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80196f8:	b23f      	sxth	r7, r7
 80196fa:	b212      	sxth	r2, r2
 80196fc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8019700:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8019704:	9200      	str	r2, [sp, #0]
 8019706:	9701      	str	r7, [sp, #4]
 8019708:	4623      	mov	r3, r4
 801970a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801970e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019710:	f7ff fde6 	bl	80192e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8019714:	e75a      	b.n	80195cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019716:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019718:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801971c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8019720:	1428      	asrs	r0, r5, #16
 8019722:	fb02 6000 	mla	r0, r2, r0, r6
 8019726:	9e08      	ldr	r6, [sp, #32]
 8019728:	f816 8000 	ldrb.w	r8, [r6, r0]
 801972c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8019730:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019734:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019738:	1837      	adds	r7, r6, r0
 801973a:	eb04 0c08 	add.w	ip, r4, r8
 801973e:	2b00      	cmp	r3, #0
 8019740:	d060      	beq.n	8019804 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8019742:	787e      	ldrb	r6, [r7, #1]
 8019744:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019748:	4426      	add	r6, r4
 801974a:	2900      	cmp	r1, #0
 801974c:	d062      	beq.n	8019814 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801974e:	18b8      	adds	r0, r7, r2
 8019750:	5cba      	ldrb	r2, [r7, r2]
 8019752:	7840      	ldrb	r0, [r0, #1]
 8019754:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019758:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801975c:	4422      	add	r2, r4
 801975e:	4420      	add	r0, r4
 8019760:	b29b      	uxth	r3, r3
 8019762:	b289      	uxth	r1, r1
 8019764:	fb03 f901 	mul.w	r9, r3, r1
 8019768:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801976c:	011b      	lsls	r3, r3, #4
 801976e:	b289      	uxth	r1, r1
 8019770:	78b7      	ldrb	r7, [r6, #2]
 8019772:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019776:	f89c c001 	ldrb.w	ip, [ip, #1]
 801977a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801977e:	eba3 0309 	sub.w	r3, r3, r9
 8019782:	b29b      	uxth	r3, r3
 8019784:	ebae 0e01 	sub.w	lr, lr, r1
 8019788:	fa1f fe8e 	uxth.w	lr, lr
 801978c:	435f      	muls	r7, r3
 801978e:	fb0e 770a 	mla	r7, lr, sl, r7
 8019792:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019796:	fb01 770a 	mla	r7, r1, sl, r7
 801979a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801979e:	fb09 7a0a 	mla	sl, r9, sl, r7
 80197a2:	f814 7008 	ldrb.w	r7, [r4, r8]
 80197a6:	f896 8000 	ldrb.w	r8, [r6]
 80197aa:	7876      	ldrb	r6, [r6, #1]
 80197ac:	fb03 f808 	mul.w	r8, r3, r8
 80197b0:	fb0e 8807 	mla	r8, lr, r7, r8
 80197b4:	7817      	ldrb	r7, [r2, #0]
 80197b6:	fb01 8807 	mla	r8, r1, r7, r8
 80197ba:	7807      	ldrb	r7, [r0, #0]
 80197bc:	fb09 8707 	mla	r7, r9, r7, r8
 80197c0:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80197c4:	4373      	muls	r3, r6
 80197c6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80197ca:	7856      	ldrb	r6, [r2, #1]
 80197cc:	ea47 070a 	orr.w	r7, r7, sl
 80197d0:	fb0e 330c 	mla	r3, lr, ip, r3
 80197d4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80197d8:	fb01 3306 	mla	r3, r1, r6, r3
 80197dc:	fb09 3a0a 	mla	sl, r9, sl, r3
 80197e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80197e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80197e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80197ea:	ea47 070a 	orr.w	r7, r7, sl
 80197ee:	f823 7b02 	strh.w	r7, [r3], #2
 80197f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80197f4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80197f6:	449b      	add	fp, r3
 80197f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80197fa:	441d      	add	r5, r3
 80197fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80197fe:	3b01      	subs	r3, #1
 8019800:	9309      	str	r3, [sp, #36]	; 0x24
 8019802:	e714      	b.n	801962e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019804:	b149      	cbz	r1, 801981a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019806:	5cba      	ldrb	r2, [r7, r2]
 8019808:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801980c:	4422      	add	r2, r4
 801980e:	4660      	mov	r0, ip
 8019810:	4666      	mov	r6, ip
 8019812:	e7a5      	b.n	8019760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8019814:	4660      	mov	r0, ip
 8019816:	4662      	mov	r2, ip
 8019818:	e7a2      	b.n	8019760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801981a:	4660      	mov	r0, ip
 801981c:	4662      	mov	r2, ip
 801981e:	e7f7      	b.n	8019810 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8019820:	b00f      	add	sp, #60	; 0x3c
 8019822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019826 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8019826:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801982a:	b085      	sub	sp, #20
 801982c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8019830:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019834:	9102      	str	r1, [sp, #8]
 8019836:	2c00      	cmp	r4, #0
 8019838:	fb04 710c 	mla	r1, r4, ip, r7
 801983c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019840:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8019844:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8019848:	eb02 0e01 	add.w	lr, r2, r1
 801984c:	f2c0 8122 	blt.w	8019a94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8019850:	45a0      	cmp	r8, r4
 8019852:	f340 811f 	ble.w	8019a94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8019856:	2f00      	cmp	r7, #0
 8019858:	f2c0 811a 	blt.w	8019a90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801985c:	45bc      	cmp	ip, r7
 801985e:	f340 8117 	ble.w	8019a90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8019862:	5c52      	ldrb	r2, [r2, r1]
 8019864:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8019868:	1c7a      	adds	r2, r7, #1
 801986a:	f100 8116 	bmi.w	8019a9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801986e:	4594      	cmp	ip, r2
 8019870:	f340 8113 	ble.w	8019a9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8019874:	2e00      	cmp	r6, #0
 8019876:	f000 8112 	beq.w	8019a9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801987a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801987e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8019882:	3401      	adds	r4, #1
 8019884:	f100 810f 	bmi.w	8019aa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8019888:	45a0      	cmp	r8, r4
 801988a:	f340 810c 	ble.w	8019aa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801988e:	2800      	cmp	r0, #0
 8019890:	f000 810c 	beq.w	8019aac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8019894:	2f00      	cmp	r7, #0
 8019896:	f2c0 8104 	blt.w	8019aa2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801989a:	45bc      	cmp	ip, r7
 801989c:	f340 8101 	ble.w	8019aa2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80198a0:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80198a4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80198a8:	3701      	adds	r7, #1
 80198aa:	f100 8102 	bmi.w	8019ab2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80198ae:	45bc      	cmp	ip, r7
 80198b0:	f340 80ff 	ble.w	8019ab2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80198b4:	2e00      	cmp	r6, #0
 80198b6:	f000 80fe 	beq.w	8019ab6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 80198ba:	44f4      	add	ip, lr
 80198bc:	f89c 2001 	ldrb.w	r2, [ip, #1]
 80198c0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80198c4:	b2b6      	uxth	r6, r6
 80198c6:	b280      	uxth	r0, r0
 80198c8:	fb00 fe06 	mul.w	lr, r0, r6
 80198cc:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80198d0:	0136      	lsls	r6, r6, #4
 80198d2:	eba6 070e 	sub.w	r7, r6, lr
 80198d6:	b280      	uxth	r0, r0
 80198d8:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80198dc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80198e0:	b2bf      	uxth	r7, r7
 80198e2:	1a1b      	subs	r3, r3, r0
 80198e4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80198e8:	b29b      	uxth	r3, r3
 80198ea:	fb0a f607 	mul.w	r6, sl, r7
 80198ee:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80198f2:	fb0b 6603 	mla	r6, fp, r3, r6
 80198f6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80198fa:	fb00 6609 	mla	r6, r0, r9, r6
 80198fe:	fb0e 6608 	mla	r6, lr, r8, r6
 8019902:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8019906:	9600      	str	r6, [sp, #0]
 8019908:	2e00      	cmp	r6, #0
 801990a:	f000 80be 	beq.w	8019a8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801990e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019912:	fb0b fc0c 	mul.w	ip, fp, ip
 8019916:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801991a:	fb0b f505 	mul.w	r5, fp, r5
 801991e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8019922:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8019926:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801992a:	44dc      	add	ip, fp
 801992c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019930:	9501      	str	r5, [sp, #4]
 8019932:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8019936:	9503      	str	r5, [sp, #12]
 8019938:	9d01      	ldr	r5, [sp, #4]
 801993a:	9e02      	ldr	r6, [sp, #8]
 801993c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8019940:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019944:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8019948:	fb0a fc0c 	mul.w	ip, sl, ip
 801994c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8019950:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8019954:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019958:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801995c:	4465      	add	r5, ip
 801995e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019962:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019966:	fb09 fc0c 	mul.w	ip, r9, ip
 801996a:	fb09 f904 	mul.w	r9, r9, r4
 801996e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8019972:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8019976:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801997a:	fb08 f404 	mul.w	r4, r8, r4
 801997e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8019982:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019986:	fb08 f802 	mul.w	r8, r8, r2
 801998a:	fb0a fa01 	mul.w	sl, sl, r1
 801998e:	0a22      	lsrs	r2, r4, #8
 8019990:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8019994:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019998:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801999c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80199a0:	4414      	add	r4, r2
 80199a2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80199a6:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80199aa:	0a2d      	lsrs	r5, r5, #8
 80199ac:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80199b0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80199b4:	9a03      	ldr	r2, [sp, #12]
 80199b6:	8836      	ldrh	r6, [r6, #0]
 80199b8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80199bc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80199c0:	437d      	muls	r5, r7
 80199c2:	4461      	add	r1, ip
 80199c4:	0a24      	lsrs	r4, r4, #8
 80199c6:	fb02 5503 	mla	r5, r2, r3, r5
 80199ca:	0a09      	lsrs	r1, r1, #8
 80199cc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80199d0:	fb04 540e 	mla	r4, r4, lr, r5
 80199d4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80199d8:	fb01 4100 	mla	r1, r1, r0, r4
 80199dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80199e0:	0a09      	lsrs	r1, r1, #8
 80199e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80199e6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80199ea:	fb07 f70a 	mul.w	r7, r7, sl
 80199ee:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80199f2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80199f6:	fb03 7101 	mla	r1, r3, r1, r7
 80199fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80199fe:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019a02:	fb0e 1e08 	mla	lr, lr, r8, r1
 8019a06:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8019a0a:	fb00 e101 	mla	r1, r0, r1, lr
 8019a0e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8019a12:	9a00      	ldr	r2, [sp, #0]
 8019a14:	b287      	uxth	r7, r0
 8019a16:	437a      	muls	r2, r7
 8019a18:	0a09      	lsrs	r1, r1, #8
 8019a1a:	1c53      	adds	r3, r2, #1
 8019a1c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8019a20:	4321      	orrs	r1, r4
 8019a22:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019a26:	1235      	asrs	r5, r6, #8
 8019a28:	0c0a      	lsrs	r2, r1, #16
 8019a2a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8019a2e:	b2db      	uxtb	r3, r3
 8019a30:	fb12 f207 	smulbb	r2, r2, r7
 8019a34:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019a38:	fb05 2503 	mla	r5, r5, r3, r2
 8019a3c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8019a40:	10f2      	asrs	r2, r6, #3
 8019a42:	b2c8      	uxtb	r0, r1
 8019a44:	00f6      	lsls	r6, r6, #3
 8019a46:	fb14 f407 	smulbb	r4, r4, r7
 8019a4a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019a4e:	b2f6      	uxtb	r6, r6
 8019a50:	fb10 f007 	smulbb	r0, r0, r7
 8019a54:	fb02 4203 	mla	r2, r2, r3, r4
 8019a58:	b2ad      	uxth	r5, r5
 8019a5a:	fb06 0303 	mla	r3, r6, r3, r0
 8019a5e:	b299      	uxth	r1, r3
 8019a60:	b294      	uxth	r4, r2
 8019a62:	1c6b      	adds	r3, r5, #1
 8019a64:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019a68:	1c62      	adds	r2, r4, #1
 8019a6a:	1c4b      	adds	r3, r1, #1
 8019a6c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019a70:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019a74:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019a78:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019a7c:	0952      	lsrs	r2, r2, #5
 8019a7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019a82:	432b      	orrs	r3, r5
 8019a84:	4313      	orrs	r3, r2
 8019a86:	9a02      	ldr	r2, [sp, #8]
 8019a88:	8013      	strh	r3, [r2, #0]
 8019a8a:	b005      	add	sp, #20
 8019a8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a90:	2500      	movs	r5, #0
 8019a92:	e6e9      	b.n	8019868 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8019a94:	2100      	movs	r1, #0
 8019a96:	460d      	mov	r5, r1
 8019a98:	e6f3      	b.n	8019882 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8019a9a:	2100      	movs	r1, #0
 8019a9c:	e6f1      	b.n	8019882 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8019a9e:	4631      	mov	r1, r6
 8019aa0:	e6ef      	b.n	8019882 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8019aa2:	2400      	movs	r4, #0
 8019aa4:	e700      	b.n	80198a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8019aa6:	2200      	movs	r2, #0
 8019aa8:	4614      	mov	r4, r2
 8019aaa:	e70b      	b.n	80198c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8019aac:	4602      	mov	r2, r0
 8019aae:	4604      	mov	r4, r0
 8019ab0:	e708      	b.n	80198c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8019ab2:	2200      	movs	r2, #0
 8019ab4:	e706      	b.n	80198c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8019ab6:	4632      	mov	r2, r6
 8019ab8:	e704      	b.n	80198c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08019aba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019aba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019abe:	b09f      	sub	sp, #124	; 0x7c
 8019ac0:	921b      	str	r2, [sp, #108]	; 0x6c
 8019ac2:	9309      	str	r3, [sp, #36]	; 0x24
 8019ac4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019ac6:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8019aca:	931c      	str	r3, [sp, #112]	; 0x70
 8019acc:	9119      	str	r1, [sp, #100]	; 0x64
 8019ace:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8019ad2:	901d      	str	r0, [sp, #116]	; 0x74
 8019ad4:	6850      	ldr	r0, [r2, #4]
 8019ad6:	6812      	ldr	r2, [r2, #0]
 8019ad8:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8019ada:	fb00 1303 	mla	r3, r0, r3, r1
 8019ade:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019ae2:	930c      	str	r3, [sp, #48]	; 0x30
 8019ae4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019ae6:	681b      	ldr	r3, [r3, #0]
 8019ae8:	9312      	str	r3, [sp, #72]	; 0x48
 8019aea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019aec:	685e      	ldr	r6, [r3, #4]
 8019aee:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8019af2:	930d      	str	r3, [sp, #52]	; 0x34
 8019af4:	3604      	adds	r6, #4
 8019af6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019af8:	2b00      	cmp	r3, #0
 8019afa:	dc03      	bgt.n	8019b04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019afc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019afe:	2b00      	cmp	r3, #0
 8019b00:	f340 8388 	ble.w	801a214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8019b04:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019b06:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019b0a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019b0e:	1e48      	subs	r0, r1, #1
 8019b10:	1e57      	subs	r7, r2, #1
 8019b12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b14:	2b00      	cmp	r3, #0
 8019b16:	f340 8195 	ble.w	8019e44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019b1a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8019b1c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019b20:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019b24:	d406      	bmi.n	8019b34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019b26:	4584      	cmp	ip, r0
 8019b28:	da04      	bge.n	8019b34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019b2a:	2b00      	cmp	r3, #0
 8019b2c:	db02      	blt.n	8019b34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019b2e:	42bb      	cmp	r3, r7
 8019b30:	f2c0 8189 	blt.w	8019e46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8019b34:	f11c 0c01 	adds.w	ip, ip, #1
 8019b38:	f100 8177 	bmi.w	8019e2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019b3c:	4561      	cmp	r1, ip
 8019b3e:	f2c0 8174 	blt.w	8019e2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019b42:	3301      	adds	r3, #1
 8019b44:	f100 8171 	bmi.w	8019e2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019b48:	429a      	cmp	r2, r3
 8019b4a:	f2c0 816e 	blt.w	8019e2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019b4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b50:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8019b52:	931a      	str	r3, [sp, #104]	; 0x68
 8019b54:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019b56:	2b00      	cmp	r3, #0
 8019b58:	f340 8193 	ble.w	8019e82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8019b5c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019b5e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019b62:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019b64:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8019b68:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019b6a:	141b      	asrs	r3, r3, #16
 8019b6c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019b70:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019b74:	f100 81d6 	bmi.w	8019f24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8019b78:	f100 38ff 	add.w	r8, r0, #4294967295
 8019b7c:	4543      	cmp	r3, r8
 8019b7e:	f280 81d1 	bge.w	8019f24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8019b82:	f1bc 0f00 	cmp.w	ip, #0
 8019b86:	f2c0 81cd 	blt.w	8019f24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8019b8a:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019b8e:	45c4      	cmp	ip, r8
 8019b90:	f280 81c8 	bge.w	8019f24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8019b94:	b200      	sxth	r0, r0
 8019b96:	fb0c 3300 	mla	r3, ip, r0, r3
 8019b9a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019b9c:	eb04 0803 	add.w	r8, r4, r3
 8019ba0:	5ce3      	ldrb	r3, [r4, r3]
 8019ba2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019ba6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8019baa:	2a00      	cmp	r2, #0
 8019bac:	f000 81af 	beq.w	8019f0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8019bb0:	f898 c001 	ldrb.w	ip, [r8, #1]
 8019bb4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8019bb8:	940e      	str	r4, [sp, #56]	; 0x38
 8019bba:	0e24      	lsrs	r4, r4, #24
 8019bbc:	9415      	str	r4, [sp, #84]	; 0x54
 8019bbe:	b179      	cbz	r1, 8019be0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019bc0:	eb08 0c00 	add.w	ip, r8, r0
 8019bc4:	f818 0000 	ldrb.w	r0, [r8, r0]
 8019bc8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019bcc:	900a      	str	r0, [sp, #40]	; 0x28
 8019bce:	0e00      	lsrs	r0, r0, #24
 8019bd0:	9013      	str	r0, [sp, #76]	; 0x4c
 8019bd2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8019bd6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019bda:	900f      	str	r0, [sp, #60]	; 0x3c
 8019bdc:	0e00      	lsrs	r0, r0, #24
 8019bde:	9016      	str	r0, [sp, #88]	; 0x58
 8019be0:	b292      	uxth	r2, r2
 8019be2:	b289      	uxth	r1, r1
 8019be4:	fb02 f901 	mul.w	r9, r2, r1
 8019be8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019bec:	0112      	lsls	r2, r2, #4
 8019bee:	eba2 0809 	sub.w	r8, r2, r9
 8019bf2:	b289      	uxth	r1, r1
 8019bf4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019bf8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019bfa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019bfc:	fa1f f888 	uxth.w	r8, r8
 8019c00:	1a52      	subs	r2, r2, r1
 8019c02:	b292      	uxth	r2, r2
 8019c04:	fb08 f000 	mul.w	r0, r8, r0
 8019c08:	fb02 000e 	mla	r0, r2, lr, r0
 8019c0c:	fb01 0004 	mla	r0, r1, r4, r0
 8019c10:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019c12:	fb09 0004 	mla	r0, r9, r4, r0
 8019c16:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019c1a:	2800      	cmp	r0, #0
 8019c1c:	f000 80fa 	beq.w	8019e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019c20:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019c24:	d01b      	beq.n	8019c5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8019c26:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019c2a:	fb0e fa0a 	mul.w	sl, lr, sl
 8019c2e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019c32:	fb0e fe03 	mul.w	lr, lr, r3
 8019c36:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019c3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019c3e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019c42:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019c46:	4453      	add	r3, sl
 8019c48:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019c4c:	0a1b      	lsrs	r3, r3, #8
 8019c4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019c52:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019c56:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019c5a:	ea43 030c 	orr.w	r3, r3, ip
 8019c5e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019c60:	2cff      	cmp	r4, #255	; 0xff
 8019c62:	d021      	beq.n	8019ca8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019c64:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019c66:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019c6a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019c6c:	fb04 fb0b 	mul.w	fp, r4, fp
 8019c70:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019c72:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019c76:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019c78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019c7c:	fb04 fa0a 	mul.w	sl, r4, sl
 8019c80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019c88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019c8c:	44de      	add	lr, fp
 8019c8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019c92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ca2:	ea4e 040a 	orr.w	r4, lr, sl
 8019ca6:	940e      	str	r4, [sp, #56]	; 0x38
 8019ca8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019caa:	2cff      	cmp	r4, #255	; 0xff
 8019cac:	d021      	beq.n	8019cf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8019cae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019cb0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019cb4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019cb6:	fb04 fb0b 	mul.w	fp, r4, fp
 8019cba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019cbc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019cc0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019cc2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019cc6:	fb04 fa0a 	mul.w	sl, r4, sl
 8019cca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019cce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019cd2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019cd6:	44de      	add	lr, fp
 8019cd8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019cdc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019ce0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019ce4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019ce8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019cec:	ea4e 040a 	orr.w	r4, lr, sl
 8019cf0:	940a      	str	r4, [sp, #40]	; 0x28
 8019cf2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019cf4:	2cff      	cmp	r4, #255	; 0xff
 8019cf6:	d021      	beq.n	8019d3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8019cf8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019cfa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019cfe:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019d00:	fb04 fb0b 	mul.w	fp, r4, fp
 8019d04:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019d06:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019d0a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019d0c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019d10:	fb04 fa0a 	mul.w	sl, r4, sl
 8019d14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019d18:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019d1c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019d20:	44de      	add	lr, fp
 8019d22:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019d26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019d2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019d2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019d32:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019d36:	ea4e 040a 	orr.w	r4, lr, sl
 8019d3a:	940f      	str	r4, [sp, #60]	; 0x3c
 8019d3c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019d3e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019d42:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019d44:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019d48:	fb08 fc0c 	mul.w	ip, r8, ip
 8019d4c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019d50:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019d54:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019d56:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019d5a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019d5e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019d60:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019d64:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019d68:	fb08 f80e 	mul.w	r8, r8, lr
 8019d6c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019d70:	fb02 8303 	mla	r3, r2, r3, r8
 8019d74:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019d76:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019d78:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019d7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019d7e:	fb01 330a 	mla	r3, r1, sl, r3
 8019d82:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8019d86:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019d88:	fb09 3901 	mla	r9, r9, r1, r3
 8019d8c:	4342      	muls	r2, r0
 8019d8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d92:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019d96:	883b      	ldrh	r3, [r7, #0]
 8019d98:	1c50      	adds	r0, r2, #1
 8019d9a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d9e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019da2:	ea4c 0c09 	orr.w	ip, ip, r9
 8019da6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019daa:	1219      	asrs	r1, r3, #8
 8019dac:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019db0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019db4:	b2c0      	uxtb	r0, r0
 8019db6:	fb12 f204 	smulbb	r2, r2, r4
 8019dba:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019dbe:	fb01 2100 	mla	r1, r1, r0, r2
 8019dc2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019dc6:	10da      	asrs	r2, r3, #3
 8019dc8:	fa5f fc8c 	uxtb.w	ip, ip
 8019dcc:	00db      	lsls	r3, r3, #3
 8019dce:	fb1c fc04 	smulbb	ip, ip, r4
 8019dd2:	b2db      	uxtb	r3, r3
 8019dd4:	b289      	uxth	r1, r1
 8019dd6:	fb03 c300 	mla	r3, r3, r0, ip
 8019dda:	fa1f fc83 	uxth.w	ip, r3
 8019dde:	1c4b      	adds	r3, r1, #1
 8019de0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019de4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019de8:	fb1e fe04 	smulbb	lr, lr, r4
 8019dec:	f10c 0301 	add.w	r3, ip, #1
 8019df0:	fb02 e200 	mla	r2, r2, r0, lr
 8019df4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019df8:	b292      	uxth	r2, r2
 8019dfa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019dfe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019e02:	430b      	orrs	r3, r1
 8019e04:	1c51      	adds	r1, r2, #1
 8019e06:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019e0a:	0952      	lsrs	r2, r2, #5
 8019e0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019e10:	4313      	orrs	r3, r2
 8019e12:	803b      	strh	r3, [r7, #0]
 8019e14:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019e16:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019e18:	441a      	add	r2, r3
 8019e1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019e1c:	9229      	str	r2, [sp, #164]	; 0xa4
 8019e1e:	441d      	add	r5, r3
 8019e20:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019e22:	3b01      	subs	r3, #1
 8019e24:	3702      	adds	r7, #2
 8019e26:	931a      	str	r3, [sp, #104]	; 0x68
 8019e28:	e694      	b.n	8019b54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019e2a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019e2c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8019e2e:	441c      	add	r4, r3
 8019e30:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019e32:	9429      	str	r4, [sp, #164]	; 0xa4
 8019e34:	441d      	add	r5, r3
 8019e36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e38:	3b01      	subs	r3, #1
 8019e3a:	9309      	str	r3, [sp, #36]	; 0x24
 8019e3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019e3e:	3302      	adds	r3, #2
 8019e40:	930c      	str	r3, [sp, #48]	; 0x30
 8019e42:	e666      	b.n	8019b12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019e44:	d024      	beq.n	8019e90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8019e46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e48:	982b      	ldr	r0, [sp, #172]	; 0xac
 8019e4a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8019e4c:	3b01      	subs	r3, #1
 8019e4e:	fb00 4003 	mla	r0, r0, r3, r4
 8019e52:	1400      	asrs	r0, r0, #16
 8019e54:	f53f ae7b 	bmi.w	8019b4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e58:	3901      	subs	r1, #1
 8019e5a:	4288      	cmp	r0, r1
 8019e5c:	f6bf ae77 	bge.w	8019b4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e60:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8019e62:	fb01 5303 	mla	r3, r1, r3, r5
 8019e66:	141b      	asrs	r3, r3, #16
 8019e68:	f53f ae71 	bmi.w	8019b4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e6c:	3a01      	subs	r2, #1
 8019e6e:	4293      	cmp	r3, r2
 8019e70:	f6bf ae6d 	bge.w	8019b4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e74:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019e78:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8019e7c:	f1bb 0f00 	cmp.w	fp, #0
 8019e80:	dc70      	bgt.n	8019f64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8019e82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e84:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019e88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019e8a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019e8e:	930c      	str	r3, [sp, #48]	; 0x30
 8019e90:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019e92:	2b00      	cmp	r3, #0
 8019e94:	f340 81be 	ble.w	801a214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8019e98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019ea0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019ea4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019ea6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019eaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019eae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019eb2:	eef0 6a62 	vmov.f32	s13, s5
 8019eb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019eba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ebe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ec2:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8019ec6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019eca:	eef0 6a43 	vmov.f32	s13, s6
 8019ece:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ed2:	ee12 2a90 	vmov	r2, s5
 8019ed6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019eda:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ede:	ee13 2a10 	vmov	r2, s6
 8019ee2:	932b      	str	r3, [sp, #172]	; 0xac
 8019ee4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019ee6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019eea:	932c      	str	r3, [sp, #176]	; 0xb0
 8019eec:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019eee:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8019ef0:	3b01      	subs	r3, #1
 8019ef2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ef6:	9319      	str	r3, [sp, #100]	; 0x64
 8019ef8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019efa:	bf08      	it	eq
 8019efc:	4613      	moveq	r3, r2
 8019efe:	ee16 5a90 	vmov	r5, s13
 8019f02:	9309      	str	r3, [sp, #36]	; 0x24
 8019f04:	eeb0 3a67 	vmov.f32	s6, s15
 8019f08:	eef0 2a47 	vmov.f32	s5, s14
 8019f0c:	e5f3      	b.n	8019af6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019f0e:	2900      	cmp	r1, #0
 8019f10:	f43f ae66 	beq.w	8019be0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019f14:	f818 0000 	ldrb.w	r0, [r8, r0]
 8019f18:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019f1c:	900a      	str	r0, [sp, #40]	; 0x28
 8019f1e:	0e00      	lsrs	r0, r0, #24
 8019f20:	9013      	str	r0, [sp, #76]	; 0x4c
 8019f22:	e65d      	b.n	8019be0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019f24:	f113 0801 	adds.w	r8, r3, #1
 8019f28:	f53f af74 	bmi.w	8019e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019f2c:	4540      	cmp	r0, r8
 8019f2e:	f6ff af71 	blt.w	8019e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019f32:	f11c 0801 	adds.w	r8, ip, #1
 8019f36:	f53f af6d 	bmi.w	8019e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019f3a:	45c6      	cmp	lr, r8
 8019f3c:	f6ff af6a 	blt.w	8019e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019f40:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8019f42:	9302      	str	r3, [sp, #8]
 8019f44:	b200      	sxth	r0, r0
 8019f46:	fa0f f38e 	sxth.w	r3, lr
 8019f4a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019f4e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8019f52:	9301      	str	r3, [sp, #4]
 8019f54:	9000      	str	r0, [sp, #0]
 8019f56:	4633      	mov	r3, r6
 8019f58:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019f5a:	981d      	ldr	r0, [sp, #116]	; 0x74
 8019f5c:	4639      	mov	r1, r7
 8019f5e:	f7ff fc62 	bl	8019826 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8019f62:	e757      	b.n	8019e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019f64:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019f66:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8019f68:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019f6c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019f6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019f72:	1427      	asrs	r7, r4, #16
 8019f74:	142b      	asrs	r3, r5, #16
 8019f76:	fb01 7303 	mla	r3, r1, r3, r7
 8019f7a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019f7c:	18e7      	adds	r7, r4, r3
 8019f7e:	5ce3      	ldrb	r3, [r4, r3]
 8019f80:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019f84:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019f88:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019f8c:	2a00      	cmp	r2, #0
 8019f8e:	f000 8137 	beq.w	801a200 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8019f92:	f897 e001 	ldrb.w	lr, [r7, #1]
 8019f96:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8019f9a:	9410      	str	r4, [sp, #64]	; 0x40
 8019f9c:	0e24      	lsrs	r4, r4, #24
 8019f9e:	9417      	str	r4, [sp, #92]	; 0x5c
 8019fa0:	b170      	cbz	r0, 8019fc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019fa2:	eb07 0e01 	add.w	lr, r7, r1
 8019fa6:	5c79      	ldrb	r1, [r7, r1]
 8019fa8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019fac:	910b      	str	r1, [sp, #44]	; 0x2c
 8019fae:	0e09      	lsrs	r1, r1, #24
 8019fb0:	9114      	str	r1, [sp, #80]	; 0x50
 8019fb2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8019fb6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019fba:	9111      	str	r1, [sp, #68]	; 0x44
 8019fbc:	0e09      	lsrs	r1, r1, #24
 8019fbe:	9118      	str	r1, [sp, #96]	; 0x60
 8019fc0:	b292      	uxth	r2, r2
 8019fc2:	b280      	uxth	r0, r0
 8019fc4:	fb02 f800 	mul.w	r8, r2, r0
 8019fc8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019fcc:	0112      	lsls	r2, r2, #4
 8019fce:	eba2 0e08 	sub.w	lr, r2, r8
 8019fd2:	b280      	uxth	r0, r0
 8019fd4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019fd8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8019fda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019fdc:	fa1f fe8e 	uxth.w	lr, lr
 8019fe0:	1a12      	subs	r2, r2, r0
 8019fe2:	b292      	uxth	r2, r2
 8019fe4:	fb0e f101 	mul.w	r1, lr, r1
 8019fe8:	fb02 110c 	mla	r1, r2, ip, r1
 8019fec:	fb00 1104 	mla	r1, r0, r4, r1
 8019ff0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019ff2:	fb08 1104 	mla	r1, r8, r4, r1
 8019ff6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019ffa:	2900      	cmp	r1, #0
 8019ffc:	f000 80f5 	beq.w	801a1ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a000:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a004:	d019      	beq.n	801a03a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801a006:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a00a:	fb0c fa0a 	mul.w	sl, ip, sl
 801a00e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a012:	fb0c fc03 	mul.w	ip, ip, r3
 801a016:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a01a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a01e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a022:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a026:	4453      	add	r3, sl
 801a028:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a02c:	0a1b      	lsrs	r3, r3, #8
 801a02e:	0a3f      	lsrs	r7, r7, #8
 801a030:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a034:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a038:	433b      	orrs	r3, r7
 801a03a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a03c:	2cff      	cmp	r4, #255	; 0xff
 801a03e:	d020      	beq.n	801a082 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801a040:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a042:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a046:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a048:	4367      	muls	r7, r4
 801a04a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a04c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a050:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a052:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a056:	fb04 fa0a 	mul.w	sl, r4, sl
 801a05a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a05e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a062:	44bc      	add	ip, r7
 801a064:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a068:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a06c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a070:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a074:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a078:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a07c:	ea4c 040a 	orr.w	r4, ip, sl
 801a080:	9410      	str	r4, [sp, #64]	; 0x40
 801a082:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a084:	2cff      	cmp	r4, #255	; 0xff
 801a086:	d020      	beq.n	801a0ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801a088:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a08a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a08e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a090:	4367      	muls	r7, r4
 801a092:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a094:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a098:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a09a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a09e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a0a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a0a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a0aa:	44bc      	add	ip, r7
 801a0ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a0b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a0b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a0b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a0bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a0c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a0c4:	ea4c 040a 	orr.w	r4, ip, sl
 801a0c8:	940b      	str	r4, [sp, #44]	; 0x2c
 801a0ca:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a0cc:	2cff      	cmp	r4, #255	; 0xff
 801a0ce:	d020      	beq.n	801a112 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801a0d0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a0d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a0d6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a0d8:	4367      	muls	r7, r4
 801a0da:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a0dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a0e0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a0e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a0e6:	fb04 fa0a 	mul.w	sl, r4, sl
 801a0ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a0ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a0f2:	44bc      	add	ip, r7
 801a0f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a0f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a0fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a100:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a104:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a108:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a10c:	ea4c 040a 	orr.w	r4, ip, sl
 801a110:	9411      	str	r4, [sp, #68]	; 0x44
 801a112:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a114:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a118:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a11a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a11e:	fb0e f707 	mul.w	r7, lr, r7
 801a122:	fb02 770c 	mla	r7, r2, ip, r7
 801a126:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a12a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a12c:	fb00 770c 	mla	r7, r0, ip, r7
 801a130:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a134:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a136:	fb08 770c 	mla	r7, r8, ip, r7
 801a13a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a13e:	fb0e fe0c 	mul.w	lr, lr, ip
 801a142:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a146:	fb02 e303 	mla	r3, r2, r3, lr
 801a14a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a14c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a14e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a152:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a154:	fb00 330a 	mla	r3, r0, sl, r3
 801a158:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801a15c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a160:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a162:	f8b9 0000 	ldrh.w	r0, [r9]
 801a166:	434b      	muls	r3, r1
 801a168:	0a3f      	lsrs	r7, r7, #8
 801a16a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a16e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a172:	1c59      	adds	r1, r3, #1
 801a174:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a178:	ea47 070c 	orr.w	r7, r7, ip
 801a17c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a180:	1202      	asrs	r2, r0, #8
 801a182:	0c3b      	lsrs	r3, r7, #16
 801a184:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a188:	b2c9      	uxtb	r1, r1
 801a18a:	fb13 f304 	smulbb	r3, r3, r4
 801a18e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a192:	fb02 3201 	mla	r2, r2, r1, r3
 801a196:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801a19a:	10c3      	asrs	r3, r0, #3
 801a19c:	b2ff      	uxtb	r7, r7
 801a19e:	00c0      	lsls	r0, r0, #3
 801a1a0:	b292      	uxth	r2, r2
 801a1a2:	fb1c fc04 	smulbb	ip, ip, r4
 801a1a6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801a1aa:	b2c0      	uxtb	r0, r0
 801a1ac:	fb17 f704 	smulbb	r7, r7, r4
 801a1b0:	fb03 c301 	mla	r3, r3, r1, ip
 801a1b4:	fb00 7001 	mla	r0, r0, r1, r7
 801a1b8:	f102 0c01 	add.w	ip, r2, #1
 801a1bc:	b280      	uxth	r0, r0
 801a1be:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801a1c2:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801a1c6:	1c42      	adds	r2, r0, #1
 801a1c8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a1cc:	b29b      	uxth	r3, r3
 801a1ce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a1d2:	ea42 020c 	orr.w	r2, r2, ip
 801a1d6:	f103 0c01 	add.w	ip, r3, #1
 801a1da:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a1de:	095b      	lsrs	r3, r3, #5
 801a1e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a1e4:	431a      	orrs	r2, r3
 801a1e6:	f8a9 2000 	strh.w	r2, [r9]
 801a1ea:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a1ec:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a1ee:	441a      	add	r2, r3
 801a1f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a1f2:	9229      	str	r2, [sp, #164]	; 0xa4
 801a1f4:	f109 0902 	add.w	r9, r9, #2
 801a1f8:	441d      	add	r5, r3
 801a1fa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a1fe:	e63d      	b.n	8019e7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801a200:	2800      	cmp	r0, #0
 801a202:	f43f aedd 	beq.w	8019fc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a206:	5c79      	ldrb	r1, [r7, r1]
 801a208:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a20c:	910b      	str	r1, [sp, #44]	; 0x2c
 801a20e:	0e09      	lsrs	r1, r1, #24
 801a210:	9114      	str	r1, [sp, #80]	; 0x50
 801a212:	e6d5      	b.n	8019fc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a214:	b01f      	add	sp, #124	; 0x7c
 801a216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a21a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801a21a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a21e:	b089      	sub	sp, #36	; 0x24
 801a220:	9101      	str	r1, [sp, #4]
 801a222:	9801      	ldr	r0, [sp, #4]
 801a224:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801a228:	8800      	ldrh	r0, [r0, #0]
 801a22a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801a22e:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801a232:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801a236:	1206      	asrs	r6, r0, #8
 801a238:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801a23c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a240:	9602      	str	r6, [sp, #8]
 801a242:	10c6      	asrs	r6, r0, #3
 801a244:	00c0      	lsls	r0, r0, #3
 801a246:	b2c0      	uxtb	r0, r0
 801a248:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a24c:	9004      	str	r0, [sp, #16]
 801a24e:	2f00      	cmp	r7, #0
 801a250:	fb07 100c 	mla	r0, r7, ip, r1
 801a254:	9603      	str	r6, [sp, #12]
 801a256:	eb02 0e00 	add.w	lr, r2, r0
 801a25a:	f2c0 810a 	blt.w	801a472 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801a25e:	45b8      	cmp	r8, r7
 801a260:	f340 8107 	ble.w	801a472 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801a264:	2900      	cmp	r1, #0
 801a266:	f2c0 8102 	blt.w	801a46e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801a26a:	458c      	cmp	ip, r1
 801a26c:	f340 80ff 	ble.w	801a46e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801a270:	5c12      	ldrb	r2, [r2, r0]
 801a272:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801a276:	1c4a      	adds	r2, r1, #1
 801a278:	f100 80fe 	bmi.w	801a478 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801a27c:	4594      	cmp	ip, r2
 801a27e:	f340 80fb 	ble.w	801a478 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801a282:	2d00      	cmp	r5, #0
 801a284:	f000 80fa 	beq.w	801a47c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801a288:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a28c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801a290:	3701      	adds	r7, #1
 801a292:	f100 80f7 	bmi.w	801a484 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801a296:	45b8      	cmp	r8, r7
 801a298:	f340 80f4 	ble.w	801a484 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801a29c:	2c00      	cmp	r4, #0
 801a29e:	f000 80f4 	beq.w	801a48a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801a2a2:	2900      	cmp	r1, #0
 801a2a4:	eb0e 020c 	add.w	r2, lr, ip
 801a2a8:	f2c0 80ea 	blt.w	801a480 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801a2ac:	458c      	cmp	ip, r1
 801a2ae:	f340 80e7 	ble.w	801a480 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801a2b2:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801a2b6:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801a2ba:	3101      	adds	r1, #1
 801a2bc:	f100 80e8 	bmi.w	801a490 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801a2c0:	458c      	cmp	ip, r1
 801a2c2:	f340 80e5 	ble.w	801a490 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801a2c6:	2d00      	cmp	r5, #0
 801a2c8:	f000 80e4 	beq.w	801a494 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801a2cc:	7852      	ldrb	r2, [r2, #1]
 801a2ce:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a2d2:	0e0b      	lsrs	r3, r1, #24
 801a2d4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801a2d8:	9300      	str	r3, [sp, #0]
 801a2da:	b2a4      	uxth	r4, r4
 801a2dc:	b2ab      	uxth	r3, r5
 801a2de:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801a2e2:	fb03 f904 	mul.w	r9, r3, r4
 801a2e6:	fb0a f505 	mul.w	r5, sl, r5
 801a2ea:	011b      	lsls	r3, r3, #4
 801a2ec:	eba3 0e09 	sub.w	lr, r3, r9
 801a2f0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801a2f4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801a2f8:	0a28      	lsrs	r0, r5, #8
 801a2fa:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a2fe:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801a302:	4405      	add	r5, r0
 801a304:	0a2d      	lsrs	r5, r5, #8
 801a306:	fb0a f303 	mul.w	r3, sl, r3
 801a30a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801a30e:	9005      	str	r0, [sp, #20]
 801a310:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801a314:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801a318:	0a1b      	lsrs	r3, r3, #8
 801a31a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801a31e:	9306      	str	r3, [sp, #24]
 801a320:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801a324:	fb0b f303 	mul.w	r3, fp, r3
 801a328:	0a1d      	lsrs	r5, r3, #8
 801a32a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a32e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801a332:	fb0b f606 	mul.w	r6, fp, r6
 801a336:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801a33a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801a33e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a342:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a346:	fb08 f707 	mul.w	r7, r8, r7
 801a34a:	441d      	add	r5, r3
 801a34c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801a350:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a354:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801a358:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801a35c:	fb08 fc0c 	mul.w	ip, r8, ip
 801a360:	0a1b      	lsrs	r3, r3, #8
 801a362:	9307      	str	r3, [sp, #28]
 801a364:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801a368:	0e0b      	lsrs	r3, r1, #24
 801a36a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801a36e:	435f      	muls	r7, r3
 801a370:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a374:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a378:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801a37c:	4460      	add	r0, ip
 801a37e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a382:	b2a4      	uxth	r4, r4
 801a384:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a388:	0a2d      	lsrs	r5, r5, #8
 801a38a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a38e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a392:	fa1f fe8e 	uxth.w	lr, lr
 801a396:	4359      	muls	r1, r3
 801a398:	1b12      	subs	r2, r2, r4
 801a39a:	9b05      	ldr	r3, [sp, #20]
 801a39c:	44bc      	add	ip, r7
 801a39e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a3a2:	b292      	uxth	r2, r2
 801a3a4:	fb05 f50e 	mul.w	r5, r5, lr
 801a3a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a3ac:	fb03 5502 	mla	r5, r3, r2, r5
 801a3b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a3b4:	9b06      	ldr	r3, [sp, #24]
 801a3b6:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801a3ba:	0a36      	lsrs	r6, r6, #8
 801a3bc:	0a00      	lsrs	r0, r0, #8
 801a3be:	fb0c 5509 	mla	r5, ip, r9, r5
 801a3c2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a3c6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a3ca:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a3ce:	fb00 5504 	mla	r5, r0, r4, r5
 801a3d2:	fb0e f606 	mul.w	r6, lr, r6
 801a3d6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801a3da:	0a09      	lsrs	r1, r1, #8
 801a3dc:	9b07      	ldr	r3, [sp, #28]
 801a3de:	fb02 6000 	mla	r0, r2, r0, r6
 801a3e2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a3e6:	fb09 0001 	mla	r0, r9, r1, r0
 801a3ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a3ee:	fb0e fe0b 	mul.w	lr, lr, fp
 801a3f2:	fb04 0003 	mla	r0, r4, r3, r0
 801a3f6:	fb02 e20a 	mla	r2, r2, sl, lr
 801a3fa:	9b00      	ldr	r3, [sp, #0]
 801a3fc:	fb04 2408 	mla	r4, r4, r8, r2
 801a400:	fb09 4903 	mla	r9, r9, r3, r4
 801a404:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801a408:	9b02      	ldr	r3, [sp, #8]
 801a40a:	9a04      	ldr	r2, [sp, #16]
 801a40c:	fa5f f989 	uxtb.w	r9, r9
 801a410:	fb03 f109 	mul.w	r1, r3, r9
 801a414:	9b03      	ldr	r3, [sp, #12]
 801a416:	0a2d      	lsrs	r5, r5, #8
 801a418:	0a00      	lsrs	r0, r0, #8
 801a41a:	fb03 f309 	mul.w	r3, r3, r9
 801a41e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a422:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a426:	4305      	orrs	r5, r0
 801a428:	fb02 f909 	mul.w	r9, r2, r9
 801a42c:	1c58      	adds	r0, r3, #1
 801a42e:	1c4a      	adds	r2, r1, #1
 801a430:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a434:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a438:	0a2b      	lsrs	r3, r5, #8
 801a43a:	0c2a      	lsrs	r2, r5, #16
 801a43c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a440:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801a444:	00db      	lsls	r3, r3, #3
 801a446:	0212      	lsls	r2, r2, #8
 801a448:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801a44c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a450:	4313      	orrs	r3, r2
 801a452:	f109 0201 	add.w	r2, r9, #1
 801a456:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801a45a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801a45e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a462:	431d      	orrs	r5, r3
 801a464:	9b01      	ldr	r3, [sp, #4]
 801a466:	801d      	strh	r5, [r3, #0]
 801a468:	b009      	add	sp, #36	; 0x24
 801a46a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a46e:	2000      	movs	r0, #0
 801a470:	e701      	b.n	801a276 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801a472:	2600      	movs	r6, #0
 801a474:	4630      	mov	r0, r6
 801a476:	e70b      	b.n	801a290 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801a478:	2600      	movs	r6, #0
 801a47a:	e709      	b.n	801a290 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801a47c:	462e      	mov	r6, r5
 801a47e:	e707      	b.n	801a290 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801a480:	2700      	movs	r7, #0
 801a482:	e71a      	b.n	801a2ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801a484:	2100      	movs	r1, #0
 801a486:	460f      	mov	r7, r1
 801a488:	e723      	b.n	801a2d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801a48a:	4621      	mov	r1, r4
 801a48c:	4627      	mov	r7, r4
 801a48e:	e720      	b.n	801a2d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801a490:	2100      	movs	r1, #0
 801a492:	e71e      	b.n	801a2d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801a494:	4629      	mov	r1, r5
 801a496:	e71c      	b.n	801a2d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801a498 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a49c:	b09b      	sub	sp, #108	; 0x6c
 801a49e:	9218      	str	r2, [sp, #96]	; 0x60
 801a4a0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a4a2:	9116      	str	r1, [sp, #88]	; 0x58
 801a4a4:	9307      	str	r3, [sp, #28]
 801a4a6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801a4aa:	9019      	str	r0, [sp, #100]	; 0x64
 801a4ac:	6850      	ldr	r0, [r2, #4]
 801a4ae:	6812      	ldr	r2, [r2, #0]
 801a4b0:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801a4b2:	fb00 1303 	mla	r3, r0, r3, r1
 801a4b6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a4ba:	930a      	str	r3, [sp, #40]	; 0x28
 801a4bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a4be:	681b      	ldr	r3, [r3, #0]
 801a4c0:	930f      	str	r3, [sp, #60]	; 0x3c
 801a4c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a4c4:	685e      	ldr	r6, [r3, #4]
 801a4c6:	3604      	adds	r6, #4
 801a4c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a4ca:	2b00      	cmp	r3, #0
 801a4cc:	dc03      	bgt.n	801a4d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a4ce:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a4d0:	2b00      	cmp	r3, #0
 801a4d2:	f340 8373 	ble.w	801abbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801a4d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a4d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a4dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a4e0:	1e48      	subs	r0, r1, #1
 801a4e2:	1e57      	subs	r7, r2, #1
 801a4e4:	9b07      	ldr	r3, [sp, #28]
 801a4e6:	2b00      	cmp	r3, #0
 801a4e8:	f340 8190 	ble.w	801a80c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801a4ec:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801a4ee:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a4f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a4f6:	d406      	bmi.n	801a506 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a4f8:	4584      	cmp	ip, r0
 801a4fa:	da04      	bge.n	801a506 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a4fc:	2b00      	cmp	r3, #0
 801a4fe:	db02      	blt.n	801a506 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a500:	42bb      	cmp	r3, r7
 801a502:	f2c0 8184 	blt.w	801a80e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801a506:	f11c 0c01 	adds.w	ip, ip, #1
 801a50a:	f100 8172 	bmi.w	801a7f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a50e:	4561      	cmp	r1, ip
 801a510:	f2c0 816f 	blt.w	801a7f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a514:	3301      	adds	r3, #1
 801a516:	f100 816c 	bmi.w	801a7f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a51a:	429a      	cmp	r2, r3
 801a51c:	f2c0 8169 	blt.w	801a7f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a520:	9b07      	ldr	r3, [sp, #28]
 801a522:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a524:	9317      	str	r3, [sp, #92]	; 0x5c
 801a526:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a528:	2b00      	cmp	r3, #0
 801a52a:	f340 818e 	ble.w	801a84a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801a52e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a530:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a534:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a536:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801a53a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a53c:	141b      	asrs	r3, r3, #16
 801a53e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a542:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a546:	f100 81d1 	bmi.w	801a8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a54a:	f101 38ff 	add.w	r8, r1, #4294967295
 801a54e:	4543      	cmp	r3, r8
 801a550:	f280 81cc 	bge.w	801a8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a554:	f1bc 0f00 	cmp.w	ip, #0
 801a558:	f2c0 81c8 	blt.w	801a8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a55c:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a560:	45c4      	cmp	ip, r8
 801a562:	f280 81c3 	bge.w	801a8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a566:	b209      	sxth	r1, r1
 801a568:	fb0c 3301 	mla	r3, ip, r1, r3
 801a56c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a56e:	eb04 0803 	add.w	r8, r4, r3
 801a572:	5ce3      	ldrb	r3, [r4, r3]
 801a574:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a578:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a57c:	2a00      	cmp	r2, #0
 801a57e:	f000 81aa 	beq.w	801a8d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801a582:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a586:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a58a:	940b      	str	r4, [sp, #44]	; 0x2c
 801a58c:	0e24      	lsrs	r4, r4, #24
 801a58e:	9412      	str	r4, [sp, #72]	; 0x48
 801a590:	b178      	cbz	r0, 801a5b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801a592:	eb08 0c01 	add.w	ip, r8, r1
 801a596:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a59a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a59e:	9108      	str	r1, [sp, #32]
 801a5a0:	0e09      	lsrs	r1, r1, #24
 801a5a2:	9110      	str	r1, [sp, #64]	; 0x40
 801a5a4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801a5a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a5ac:	910c      	str	r1, [sp, #48]	; 0x30
 801a5ae:	0e09      	lsrs	r1, r1, #24
 801a5b0:	9113      	str	r1, [sp, #76]	; 0x4c
 801a5b2:	b292      	uxth	r2, r2
 801a5b4:	b280      	uxth	r0, r0
 801a5b6:	fb02 f900 	mul.w	r9, r2, r0
 801a5ba:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a5be:	0112      	lsls	r2, r2, #4
 801a5c0:	eba2 0809 	sub.w	r8, r2, r9
 801a5c4:	b280      	uxth	r0, r0
 801a5c6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a5ca:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a5cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a5ce:	fa1f f888 	uxth.w	r8, r8
 801a5d2:	1a12      	subs	r2, r2, r0
 801a5d4:	b292      	uxth	r2, r2
 801a5d6:	fb08 f101 	mul.w	r1, r8, r1
 801a5da:	fb02 110e 	mla	r1, r2, lr, r1
 801a5de:	fb00 1104 	mla	r1, r0, r4, r1
 801a5e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a5e4:	fb09 1104 	mla	r1, r9, r4, r1
 801a5e8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a5ec:	2900      	cmp	r1, #0
 801a5ee:	f000 80f5 	beq.w	801a7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a5f2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a5f6:	d01b      	beq.n	801a630 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a5f8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a5fc:	fb0e fa0a 	mul.w	sl, lr, sl
 801a600:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a604:	fb0e fe03 	mul.w	lr, lr, r3
 801a608:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a60c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a610:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a614:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a618:	4453      	add	r3, sl
 801a61a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a61e:	0a1b      	lsrs	r3, r3, #8
 801a620:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a624:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a628:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a62c:	ea43 030c 	orr.w	r3, r3, ip
 801a630:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a632:	2cff      	cmp	r4, #255	; 0xff
 801a634:	d021      	beq.n	801a67a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801a636:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a638:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a63c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a63e:	fb04 fb0b 	mul.w	fp, r4, fp
 801a642:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a644:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a648:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a64a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a64e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a652:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a656:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a65a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a65e:	44de      	add	lr, fp
 801a660:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a664:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a668:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a66c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a670:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a674:	ea4e 040a 	orr.w	r4, lr, sl
 801a678:	940b      	str	r4, [sp, #44]	; 0x2c
 801a67a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a67c:	2cff      	cmp	r4, #255	; 0xff
 801a67e:	d021      	beq.n	801a6c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801a680:	9c08      	ldr	r4, [sp, #32]
 801a682:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a686:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a688:	fb04 fb0b 	mul.w	fp, r4, fp
 801a68c:	9c08      	ldr	r4, [sp, #32]
 801a68e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a692:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a694:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a698:	fb04 fa0a 	mul.w	sl, r4, sl
 801a69c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a6a0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a6a4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a6a8:	44de      	add	lr, fp
 801a6aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a6ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a6b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a6b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a6ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a6be:	ea4e 040a 	orr.w	r4, lr, sl
 801a6c2:	9408      	str	r4, [sp, #32]
 801a6c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a6c6:	2cff      	cmp	r4, #255	; 0xff
 801a6c8:	d021      	beq.n	801a70e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a6ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a6cc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a6d0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a6d2:	fb04 fb0b 	mul.w	fp, r4, fp
 801a6d6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a6d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a6dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a6de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a6e2:	fb04 fa0a 	mul.w	sl, r4, sl
 801a6e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a6ea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a6ee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a6f2:	44de      	add	lr, fp
 801a6f4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a6f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a6fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a700:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a704:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a708:	ea4e 040a 	orr.w	r4, lr, sl
 801a70c:	940c      	str	r4, [sp, #48]	; 0x30
 801a70e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a710:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a714:	9c08      	ldr	r4, [sp, #32]
 801a716:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a71a:	fb08 fc0c 	mul.w	ip, r8, ip
 801a71e:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a722:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a726:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a728:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a72c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a730:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a732:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a736:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a73a:	fb08 f80e 	mul.w	r8, r8, lr
 801a73e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a742:	fb02 8303 	mla	r3, r2, r3, r8
 801a746:	9a08      	ldr	r2, [sp, #32]
 801a748:	f8b7 8000 	ldrh.w	r8, [r7]
 801a74c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a750:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a752:	fb00 330a 	mla	r3, r0, sl, r3
 801a756:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801a75a:	fb09 3900 	mla	r9, r9, r0, r3
 801a75e:	43c9      	mvns	r1, r1
 801a760:	ea4f 2228 	mov.w	r2, r8, asr #8
 801a764:	fa5f fe81 	uxtb.w	lr, r1
 801a768:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a76c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a770:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a774:	fb02 f20e 	mul.w	r2, r2, lr
 801a778:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a77c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a780:	ea4c 0c09 	orr.w	ip, ip, r9
 801a784:	1c53      	adds	r3, r2, #1
 801a786:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a78a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801a78e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801a792:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a796:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a79a:	4a63      	ldr	r2, [pc, #396]	; (801a928 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801a79c:	fb00 f00e 	mul.w	r0, r0, lr
 801a7a0:	b2db      	uxtb	r3, r3
 801a7a2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801a7a6:	1c43      	adds	r3, r0, #1
 801a7a8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a7ac:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801a7b0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801a7b4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a7b8:	b2c9      	uxtb	r1, r1
 801a7ba:	00db      	lsls	r3, r3, #3
 801a7bc:	fb01 f10e 	mul.w	r1, r1, lr
 801a7c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a7c4:	4313      	orrs	r3, r2
 801a7c6:	1c4a      	adds	r2, r1, #1
 801a7c8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a7cc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a7d0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a7d4:	ea4c 0c03 	orr.w	ip, ip, r3
 801a7d8:	f8a7 c000 	strh.w	ip, [r7]
 801a7dc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a7de:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801a7e0:	441a      	add	r2, r3
 801a7e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a7e4:	9225      	str	r2, [sp, #148]	; 0x94
 801a7e6:	441d      	add	r5, r3
 801a7e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a7ea:	3b01      	subs	r3, #1
 801a7ec:	3702      	adds	r7, #2
 801a7ee:	9317      	str	r3, [sp, #92]	; 0x5c
 801a7f0:	e699      	b.n	801a526 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a7f2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a7f4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801a7f6:	441c      	add	r4, r3
 801a7f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a7fa:	9425      	str	r4, [sp, #148]	; 0x94
 801a7fc:	441d      	add	r5, r3
 801a7fe:	9b07      	ldr	r3, [sp, #28]
 801a800:	3b01      	subs	r3, #1
 801a802:	9307      	str	r3, [sp, #28]
 801a804:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a806:	3302      	adds	r3, #2
 801a808:	930a      	str	r3, [sp, #40]	; 0x28
 801a80a:	e66b      	b.n	801a4e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a80c:	d024      	beq.n	801a858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801a80e:	9b07      	ldr	r3, [sp, #28]
 801a810:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801a812:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801a814:	3b01      	subs	r3, #1
 801a816:	fb00 4003 	mla	r0, r0, r3, r4
 801a81a:	1400      	asrs	r0, r0, #16
 801a81c:	f53f ae80 	bmi.w	801a520 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a820:	3901      	subs	r1, #1
 801a822:	4288      	cmp	r0, r1
 801a824:	f6bf ae7c 	bge.w	801a520 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a828:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a82a:	fb01 5303 	mla	r3, r1, r3, r5
 801a82e:	141b      	asrs	r3, r3, #16
 801a830:	f53f ae76 	bmi.w	801a520 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a834:	3a01      	subs	r2, #1
 801a836:	4293      	cmp	r3, r2
 801a838:	f6bf ae72 	bge.w	801a520 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a83c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a840:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801a844:	f1bb 0f00 	cmp.w	fp, #0
 801a848:	dc70      	bgt.n	801a92c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801a84a:	9b07      	ldr	r3, [sp, #28]
 801a84c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a850:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a852:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a856:	930a      	str	r3, [sp, #40]	; 0x28
 801a858:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a85a:	2b00      	cmp	r3, #0
 801a85c:	f340 81ae 	ble.w	801abbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801a860:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a864:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a868:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a86c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a86e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a872:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a876:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a87a:	eef0 6a62 	vmov.f32	s13, s5
 801a87e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a882:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a886:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a88a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801a88e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a892:	eef0 6a43 	vmov.f32	s13, s6
 801a896:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a89a:	ee12 2a90 	vmov	r2, s5
 801a89e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a8a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8a6:	ee13 2a10 	vmov	r2, s6
 801a8aa:	9327      	str	r3, [sp, #156]	; 0x9c
 801a8ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a8ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8b2:	9328      	str	r3, [sp, #160]	; 0xa0
 801a8b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a8b6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a8b8:	3b01      	subs	r3, #1
 801a8ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a8be:	9316      	str	r3, [sp, #88]	; 0x58
 801a8c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a8c2:	bf08      	it	eq
 801a8c4:	4613      	moveq	r3, r2
 801a8c6:	ee16 5a90 	vmov	r5, s13
 801a8ca:	9307      	str	r3, [sp, #28]
 801a8cc:	eeb0 3a67 	vmov.f32	s6, s15
 801a8d0:	eef0 2a47 	vmov.f32	s5, s14
 801a8d4:	e5f8      	b.n	801a4c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a8d6:	2800      	cmp	r0, #0
 801a8d8:	f43f ae6b 	beq.w	801a5b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801a8dc:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a8e0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a8e4:	9108      	str	r1, [sp, #32]
 801a8e6:	0e09      	lsrs	r1, r1, #24
 801a8e8:	9110      	str	r1, [sp, #64]	; 0x40
 801a8ea:	e662      	b.n	801a5b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801a8ec:	f113 0801 	adds.w	r8, r3, #1
 801a8f0:	f53f af74 	bmi.w	801a7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a8f4:	4541      	cmp	r1, r8
 801a8f6:	f6ff af71 	blt.w	801a7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a8fa:	f11c 0801 	adds.w	r8, ip, #1
 801a8fe:	f53f af6d 	bmi.w	801a7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a902:	45c6      	cmp	lr, r8
 801a904:	f6ff af6a 	blt.w	801a7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a908:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801a90c:	b209      	sxth	r1, r1
 801a90e:	fa0f f38e 	sxth.w	r3, lr
 801a912:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801a916:	9301      	str	r3, [sp, #4]
 801a918:	9100      	str	r1, [sp, #0]
 801a91a:	4633      	mov	r3, r6
 801a91c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a91e:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a920:	4639      	mov	r1, r7
 801a922:	f7ff fc7a 	bl	801a21a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801a926:	e759      	b.n	801a7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a928:	fffff800 	.word	0xfffff800
 801a92c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a92e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801a930:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a934:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a936:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a93a:	1427      	asrs	r7, r4, #16
 801a93c:	142b      	asrs	r3, r5, #16
 801a93e:	fb01 7303 	mla	r3, r1, r3, r7
 801a942:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a944:	18e7      	adds	r7, r4, r3
 801a946:	5ce3      	ldrb	r3, [r4, r3]
 801a948:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a94c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a950:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a954:	2a00      	cmp	r2, #0
 801a956:	f000 8127 	beq.w	801aba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801a95a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801a95e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801a962:	940d      	str	r4, [sp, #52]	; 0x34
 801a964:	0e24      	lsrs	r4, r4, #24
 801a966:	9414      	str	r4, [sp, #80]	; 0x50
 801a968:	b170      	cbz	r0, 801a988 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801a96a:	eb07 0e01 	add.w	lr, r7, r1
 801a96e:	5c79      	ldrb	r1, [r7, r1]
 801a970:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a974:	9109      	str	r1, [sp, #36]	; 0x24
 801a976:	0e09      	lsrs	r1, r1, #24
 801a978:	9111      	str	r1, [sp, #68]	; 0x44
 801a97a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801a97e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a982:	910e      	str	r1, [sp, #56]	; 0x38
 801a984:	0e09      	lsrs	r1, r1, #24
 801a986:	9115      	str	r1, [sp, #84]	; 0x54
 801a988:	b292      	uxth	r2, r2
 801a98a:	b280      	uxth	r0, r0
 801a98c:	fb02 f800 	mul.w	r8, r2, r0
 801a990:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801a994:	0112      	lsls	r2, r2, #4
 801a996:	eba2 0e08 	sub.w	lr, r2, r8
 801a99a:	b280      	uxth	r0, r0
 801a99c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a9a0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a9a2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a9a4:	fa1f fe8e 	uxth.w	lr, lr
 801a9a8:	1a09      	subs	r1, r1, r0
 801a9aa:	b289      	uxth	r1, r1
 801a9ac:	fb0e f202 	mul.w	r2, lr, r2
 801a9b0:	fb01 220c 	mla	r2, r1, ip, r2
 801a9b4:	fb00 2204 	mla	r2, r0, r4, r2
 801a9b8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a9ba:	fb08 2204 	mla	r2, r8, r4, r2
 801a9be:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a9c2:	2a00      	cmp	r2, #0
 801a9c4:	f000 80e5 	beq.w	801ab92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801a9c8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a9cc:	d019      	beq.n	801aa02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801a9ce:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a9d2:	fb0c fa0a 	mul.w	sl, ip, sl
 801a9d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a9da:	fb0c fc03 	mul.w	ip, ip, r3
 801a9de:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a9e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a9e6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a9ea:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a9ee:	4453      	add	r3, sl
 801a9f0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a9f4:	0a1b      	lsrs	r3, r3, #8
 801a9f6:	0a3f      	lsrs	r7, r7, #8
 801a9f8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a9fc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801aa00:	433b      	orrs	r3, r7
 801aa02:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aa04:	2cff      	cmp	r4, #255	; 0xff
 801aa06:	d020      	beq.n	801aa4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801aa08:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aa0a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801aa0e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aa10:	4367      	muls	r7, r4
 801aa12:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aa14:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aa18:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aa1a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aa1e:	fb04 fa0a 	mul.w	sl, r4, sl
 801aa22:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aa26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa2a:	44bc      	add	ip, r7
 801aa2c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aa30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aa34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aa38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa44:	ea4c 040a 	orr.w	r4, ip, sl
 801aa48:	940d      	str	r4, [sp, #52]	; 0x34
 801aa4a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aa4c:	2cff      	cmp	r4, #255	; 0xff
 801aa4e:	d020      	beq.n	801aa92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801aa50:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801aa52:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801aa56:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aa58:	4367      	muls	r7, r4
 801aa5a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801aa5c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aa60:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aa62:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aa66:	fb04 fa0a 	mul.w	sl, r4, sl
 801aa6a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aa6e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa72:	44bc      	add	ip, r7
 801aa74:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aa78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aa7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aa80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa8c:	ea4c 040a 	orr.w	r4, ip, sl
 801aa90:	9409      	str	r4, [sp, #36]	; 0x24
 801aa92:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aa94:	2cff      	cmp	r4, #255	; 0xff
 801aa96:	d020      	beq.n	801aada <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801aa98:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aa9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801aa9e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aaa0:	4367      	muls	r7, r4
 801aaa2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aaa4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aaa8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aaaa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aaae:	fb04 fa0a 	mul.w	sl, r4, sl
 801aab2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aab6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aaba:	44bc      	add	ip, r7
 801aabc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aac0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aac4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aac8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aacc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aad0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aad4:	ea4c 040a 	orr.w	r4, ip, sl
 801aad8:	940e      	str	r4, [sp, #56]	; 0x38
 801aada:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aadc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801aae0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801aae2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801aae6:	fb0e f707 	mul.w	r7, lr, r7
 801aaea:	fb01 770c 	mla	r7, r1, ip, r7
 801aaee:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aaf2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aaf4:	fb00 770c 	mla	r7, r0, ip, r7
 801aaf8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aafc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aafe:	fb08 770c 	mla	r7, r8, ip, r7
 801ab02:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801ab06:	fb0e fe0c 	mul.w	lr, lr, ip
 801ab0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ab0e:	fb01 e303 	mla	r3, r1, r3, lr
 801ab12:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ab14:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ab18:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ab1a:	fb00 330a 	mla	r3, r0, sl, r3
 801ab1e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ab22:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ab26:	f8b9 3000 	ldrh.w	r3, [r9]
 801ab2a:	43d2      	mvns	r2, r2
 801ab2c:	1218      	asrs	r0, r3, #8
 801ab2e:	b2d2      	uxtb	r2, r2
 801ab30:	10d9      	asrs	r1, r3, #3
 801ab32:	0a3f      	lsrs	r7, r7, #8
 801ab34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ab38:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ab3c:	00db      	lsls	r3, r3, #3
 801ab3e:	4350      	muls	r0, r2
 801ab40:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ab44:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ab48:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ab4c:	b2db      	uxtb	r3, r3
 801ab4e:	ea47 070c 	orr.w	r7, r7, ip
 801ab52:	4351      	muls	r1, r2
 801ab54:	4353      	muls	r3, r2
 801ab56:	1c42      	adds	r2, r0, #1
 801ab58:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ab5c:	0c3a      	lsrs	r2, r7, #16
 801ab5e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ab62:	4a18      	ldr	r2, [pc, #96]	; (801abc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801ab64:	b2c0      	uxtb	r0, r0
 801ab66:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801ab6a:	1c4a      	adds	r2, r1, #1
 801ab6c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ab70:	0a3a      	lsrs	r2, r7, #8
 801ab72:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ab76:	00c9      	lsls	r1, r1, #3
 801ab78:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ab7c:	4301      	orrs	r1, r0
 801ab7e:	1c58      	adds	r0, r3, #1
 801ab80:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ab84:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ab88:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801ab8c:	4308      	orrs	r0, r1
 801ab8e:	f8a9 0000 	strh.w	r0, [r9]
 801ab92:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ab94:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ab96:	441a      	add	r2, r3
 801ab98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ab9a:	9225      	str	r2, [sp, #148]	; 0x94
 801ab9c:	f109 0902 	add.w	r9, r9, #2
 801aba0:	441d      	add	r5, r3
 801aba2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801aba6:	e64d      	b.n	801a844 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801aba8:	2800      	cmp	r0, #0
 801abaa:	f43f aeed 	beq.w	801a988 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801abae:	5c79      	ldrb	r1, [r7, r1]
 801abb0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801abb4:	9109      	str	r1, [sp, #36]	; 0x24
 801abb6:	0e09      	lsrs	r1, r1, #24
 801abb8:	9111      	str	r1, [sp, #68]	; 0x44
 801abba:	e6e5      	b.n	801a988 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801abbc:	b01b      	add	sp, #108	; 0x6c
 801abbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801abc2:	bf00      	nop
 801abc4:	fffff800 	.word	0xfffff800

0801abc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801abc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abcc:	b085      	sub	sp, #20
 801abce:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801abd2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801abd6:	9103      	str	r1, [sp, #12]
 801abd8:	fb00 7406 	mla	r4, r0, r6, r7
 801abdc:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801abe0:	2800      	cmp	r0, #0
 801abe2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801abe6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801abea:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801abee:	9501      	str	r5, [sp, #4]
 801abf0:	eb03 0904 	add.w	r9, r3, r4
 801abf4:	f2c0 8150 	blt.w	801ae98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801abf8:	4583      	cmp	fp, r0
 801abfa:	f340 814d 	ble.w	801ae98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801abfe:	2f00      	cmp	r7, #0
 801ac00:	f2c0 8146 	blt.w	801ae90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ac04:	42be      	cmp	r6, r7
 801ac06:	f340 8143 	ble.w	801ae90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ac0a:	f813 c004 	ldrb.w	ip, [r3, r4]
 801ac0e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801ac12:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ac16:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801ac1a:	4355      	muls	r5, r2
 801ac1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ac20:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801ac24:	fb0c f203 	mul.w	r2, ip, r3
 801ac28:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801ac2c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801ac30:	441d      	add	r5, r3
 801ac32:	f102 0320 	add.w	r3, r2, #32
 801ac36:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ac3a:	0a1b      	lsrs	r3, r3, #8
 801ac3c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801ac40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ac44:	431c      	orrs	r4, r3
 801ac46:	1c7b      	adds	r3, r7, #1
 801ac48:	f100 812b 	bmi.w	801aea2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ac4c:	429e      	cmp	r6, r3
 801ac4e:	f340 8128 	ble.w	801aea2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ac52:	2900      	cmp	r1, #0
 801ac54:	f000 8128 	beq.w	801aea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801ac58:	9a01      	ldr	r2, [sp, #4]
 801ac5a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ac5e:	8855      	ldrh	r5, [r2, #2]
 801ac60:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801ac64:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801ac68:	fb08 f802 	mul.w	r8, r8, r2
 801ac6c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ac70:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801ac74:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ac78:	435d      	muls	r5, r3
 801ac7a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ac7e:	44d0      	add	r8, sl
 801ac80:	f105 0a20 	add.w	sl, r5, #32
 801ac84:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ac88:	0a2d      	lsrs	r5, r5, #8
 801ac8a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ac8e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ac92:	432a      	orrs	r2, r5
 801ac94:	3001      	adds	r0, #1
 801ac96:	f100 810d 	bmi.w	801aeb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ac9a:	4583      	cmp	fp, r0
 801ac9c:	f340 810a 	ble.w	801aeb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801aca0:	f1be 0f00 	cmp.w	lr, #0
 801aca4:	f000 810b 	beq.w	801aebe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801aca8:	2f00      	cmp	r7, #0
 801acaa:	f2c0 8100 	blt.w	801aeae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801acae:	42be      	cmp	r6, r7
 801acb0:	f340 80fd 	ble.w	801aeae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801acb4:	9801      	ldr	r0, [sp, #4]
 801acb6:	f819 5006 	ldrb.w	r5, [r9, r6]
 801acba:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801acbe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801acc2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801acc6:	fb0a fa00 	mul.w	sl, sl, r0
 801acca:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801acce:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801acd2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801acd6:	fb05 f808 	mul.w	r8, r5, r8
 801acda:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801acde:	4482      	add	sl, r0
 801ace0:	f108 0020 	add.w	r0, r8, #32
 801ace4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ace8:	0a00      	lsrs	r0, r0, #8
 801acea:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801acee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801acf2:	ea4b 0b00 	orr.w	fp, fp, r0
 801acf6:	3701      	adds	r7, #1
 801acf8:	f100 80e6 	bmi.w	801aec8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801acfc:	42be      	cmp	r6, r7
 801acfe:	f340 80e3 	ble.w	801aec8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ad02:	2900      	cmp	r1, #0
 801ad04:	f000 80e3 	beq.w	801aece <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801ad08:	3601      	adds	r6, #1
 801ad0a:	9801      	ldr	r0, [sp, #4]
 801ad0c:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ad10:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ad14:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ad18:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801ad1c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ad20:	fb09 f906 	mul.w	r9, r9, r6
 801ad24:	fb07 f800 	mul.w	r8, r7, r0
 801ad28:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801ad2c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ad30:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801ad34:	44d1      	add	r9, sl
 801ad36:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ad3a:	f108 0020 	add.w	r0, r8, #32
 801ad3e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ad42:	0a00      	lsrs	r0, r0, #8
 801ad44:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ad48:	4330      	orrs	r0, r6
 801ad4a:	b28e      	uxth	r6, r1
 801ad4c:	fa1f f98e 	uxth.w	r9, lr
 801ad50:	fb06 f809 	mul.w	r8, r6, r9
 801ad54:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ad58:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ad5c:	0136      	lsls	r6, r6, #4
 801ad5e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ad62:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ad66:	9601      	str	r6, [sp, #4]
 801ad68:	ea4a 0404 	orr.w	r4, sl, r4
 801ad6c:	fa1f f689 	uxth.w	r6, r9
 801ad70:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ad74:	fb11 f90e 	smulbb	r9, r1, lr
 801ad78:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ad7c:	9602      	str	r6, [sp, #8]
 801ad7e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ad82:	4626      	mov	r6, r4
 801ad84:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ad88:	f1ce 0410 	rsb	r4, lr, #16
 801ad8c:	1a64      	subs	r4, r4, r1
 801ad8e:	ea4a 0202 	orr.w	r2, sl, r2
 801ad92:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ad96:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ad9a:	434a      	muls	r2, r1
 801ad9c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ada0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ada4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ada8:	fb04 2406 	mla	r4, r4, r6, r2
 801adac:	ea4a 0000 	orr.w	r0, sl, r0
 801adb0:	fb09 4200 	mla	r2, r9, r0, r4
 801adb4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801adb8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801adbc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801adc0:	ea44 0b0b 	orr.w	fp, r4, fp
 801adc4:	9c01      	ldr	r4, [sp, #4]
 801adc6:	9e02      	ldr	r6, [sp, #8]
 801adc8:	9903      	ldr	r1, [sp, #12]
 801adca:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801adce:	1ba4      	subs	r4, r4, r6
 801add0:	9e01      	ldr	r6, [sp, #4]
 801add2:	8808      	ldrh	r0, [r1, #0]
 801add4:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801add8:	eba6 0608 	sub.w	r6, r6, r8
 801addc:	b2b6      	uxth	r6, r6
 801adde:	b2a4      	uxth	r4, r4
 801ade0:	4373      	muls	r3, r6
 801ade2:	fb0c 3304 	mla	r3, ip, r4, r3
 801ade6:	9c02      	ldr	r4, [sp, #8]
 801ade8:	fb04 3505 	mla	r5, r4, r5, r3
 801adec:	fb08 5707 	mla	r7, r8, r7, r5
 801adf0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801adf4:	b289      	uxth	r1, r1
 801adf6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801adfa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801adfe:	434f      	muls	r7, r1
 801ae00:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ae04:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ae08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ae0c:	1c7b      	adds	r3, r7, #1
 801ae0e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ae12:	ea42 0e0e 	orr.w	lr, r2, lr
 801ae16:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801ae1a:	fa1f f28e 	uxth.w	r2, lr
 801ae1e:	1203      	asrs	r3, r0, #8
 801ae20:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801ae24:	b2ff      	uxtb	r7, r7
 801ae26:	1215      	asrs	r5, r2, #8
 801ae28:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ae2c:	fb13 f307 	smulbb	r3, r3, r7
 801ae30:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ae34:	fb05 3501 	mla	r5, r5, r1, r3
 801ae38:	10c3      	asrs	r3, r0, #3
 801ae3a:	10d4      	asrs	r4, r2, #3
 801ae3c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801ae40:	fb13 f307 	smulbb	r3, r3, r7
 801ae44:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801ae48:	fb04 3401 	mla	r4, r4, r1, r3
 801ae4c:	00c3      	lsls	r3, r0, #3
 801ae4e:	00d2      	lsls	r2, r2, #3
 801ae50:	b2db      	uxtb	r3, r3
 801ae52:	fb13 f307 	smulbb	r3, r3, r7
 801ae56:	b2d2      	uxtb	r2, r2
 801ae58:	fb02 3101 	mla	r1, r2, r1, r3
 801ae5c:	b2ad      	uxth	r5, r5
 801ae5e:	b289      	uxth	r1, r1
 801ae60:	b2a4      	uxth	r4, r4
 801ae62:	1c6b      	adds	r3, r5, #1
 801ae64:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ae68:	1c62      	adds	r2, r4, #1
 801ae6a:	1c4b      	adds	r3, r1, #1
 801ae6c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ae70:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ae74:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ae78:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ae7c:	0964      	lsrs	r4, r4, #5
 801ae7e:	432b      	orrs	r3, r5
 801ae80:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ae84:	9a03      	ldr	r2, [sp, #12]
 801ae86:	4323      	orrs	r3, r4
 801ae88:	8013      	strh	r3, [r2, #0]
 801ae8a:	b005      	add	sp, #20
 801ae8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae90:	f04f 0c00 	mov.w	ip, #0
 801ae94:	4664      	mov	r4, ip
 801ae96:	e6d6      	b.n	801ac46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801ae98:	2300      	movs	r3, #0
 801ae9a:	469c      	mov	ip, r3
 801ae9c:	461a      	mov	r2, r3
 801ae9e:	461c      	mov	r4, r3
 801aea0:	e6f8      	b.n	801ac94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801aea2:	2300      	movs	r3, #0
 801aea4:	461a      	mov	r2, r3
 801aea6:	e6f5      	b.n	801ac94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801aea8:	460b      	mov	r3, r1
 801aeaa:	460a      	mov	r2, r1
 801aeac:	e6f2      	b.n	801ac94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801aeae:	2500      	movs	r5, #0
 801aeb0:	46ab      	mov	fp, r5
 801aeb2:	e720      	b.n	801acf6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801aeb4:	2700      	movs	r7, #0
 801aeb6:	463d      	mov	r5, r7
 801aeb8:	4638      	mov	r0, r7
 801aeba:	46bb      	mov	fp, r7
 801aebc:	e745      	b.n	801ad4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801aebe:	4677      	mov	r7, lr
 801aec0:	4675      	mov	r5, lr
 801aec2:	4670      	mov	r0, lr
 801aec4:	46f3      	mov	fp, lr
 801aec6:	e740      	b.n	801ad4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801aec8:	2700      	movs	r7, #0
 801aeca:	4638      	mov	r0, r7
 801aecc:	e73d      	b.n	801ad4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801aece:	460f      	mov	r7, r1
 801aed0:	4608      	mov	r0, r1
 801aed2:	e73a      	b.n	801ad4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801aed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aed4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aed8:	b097      	sub	sp, #92	; 0x5c
 801aeda:	9214      	str	r2, [sp, #80]	; 0x50
 801aedc:	9308      	str	r3, [sp, #32]
 801aede:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801aee0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801aee4:	9312      	str	r3, [sp, #72]	; 0x48
 801aee6:	9111      	str	r1, [sp, #68]	; 0x44
 801aee8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801aeec:	9015      	str	r0, [sp, #84]	; 0x54
 801aeee:	6850      	ldr	r0, [r2, #4]
 801aef0:	6812      	ldr	r2, [r2, #0]
 801aef2:	fb00 1303 	mla	r3, r0, r3, r1
 801aef6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aefa:	9309      	str	r3, [sp, #36]	; 0x24
 801aefc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aefe:	681b      	ldr	r3, [r3, #0]
 801af00:	930b      	str	r3, [sp, #44]	; 0x2c
 801af02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af04:	685b      	ldr	r3, [r3, #4]
 801af06:	930c      	str	r3, [sp, #48]	; 0x30
 801af08:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801af0c:	930a      	str	r3, [sp, #40]	; 0x28
 801af0e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801af10:	2b00      	cmp	r3, #0
 801af12:	dc03      	bgt.n	801af1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801af14:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801af16:	2b00      	cmp	r3, #0
 801af18:	f340 83cb 	ble.w	801b6b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801af1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af1e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801af22:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801af26:	1e48      	subs	r0, r1, #1
 801af28:	1e55      	subs	r5, r2, #1
 801af2a:	9b08      	ldr	r3, [sp, #32]
 801af2c:	2b00      	cmp	r3, #0
 801af2e:	f340 81a3 	ble.w	801b278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801af32:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801af34:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801af36:	1436      	asrs	r6, r6, #16
 801af38:	ea4f 4323 	mov.w	r3, r3, asr #16
 801af3c:	d406      	bmi.n	801af4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801af3e:	4286      	cmp	r6, r0
 801af40:	da04      	bge.n	801af4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801af42:	2b00      	cmp	r3, #0
 801af44:	db02      	blt.n	801af4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801af46:	42ab      	cmp	r3, r5
 801af48:	f2c0 8197 	blt.w	801b27a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801af4c:	3601      	adds	r6, #1
 801af4e:	f100 8184 	bmi.w	801b25a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801af52:	42b1      	cmp	r1, r6
 801af54:	f2c0 8181 	blt.w	801b25a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801af58:	3301      	adds	r3, #1
 801af5a:	f100 817e 	bmi.w	801b25a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801af5e:	429a      	cmp	r2, r3
 801af60:	f2c0 817b 	blt.w	801b25a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801af64:	9b08      	ldr	r3, [sp, #32]
 801af66:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801af68:	9313      	str	r3, [sp, #76]	; 0x4c
 801af6a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801af6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801af70:	2b00      	cmp	r3, #0
 801af72:	f340 81a4 	ble.w	801b2be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801af76:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801af78:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801af7a:	1418      	asrs	r0, r3, #16
 801af7c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801af7e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801af82:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801af84:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801af88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af8a:	142d      	asrs	r5, r5, #16
 801af8c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801af90:	f100 81f8 	bmi.w	801b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801af94:	f102 3eff 	add.w	lr, r2, #4294967295
 801af98:	4575      	cmp	r5, lr
 801af9a:	f280 81f3 	bge.w	801b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801af9e:	2800      	cmp	r0, #0
 801afa0:	f2c0 81f0 	blt.w	801b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801afa4:	f103 3eff 	add.w	lr, r3, #4294967295
 801afa8:	4570      	cmp	r0, lr
 801afaa:	f280 81eb 	bge.w	801b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801afae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801afb0:	b212      	sxth	r2, r2
 801afb2:	fb00 5002 	mla	r0, r0, r2, r5
 801afb6:	fa1f fe81 	uxth.w	lr, r1
 801afba:	eb03 0a00 	add.w	sl, r3, r0
 801afbe:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801afc2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801afc6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801afca:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801afce:	b29b      	uxth	r3, r3
 801afd0:	f1bc 0f00 	cmp.w	ip, #0
 801afd4:	f000 81b9 	beq.w	801b34a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801afd8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801afdc:	940d      	str	r4, [sp, #52]	; 0x34
 801afde:	eb0a 0b02 	add.w	fp, sl, r2
 801afe2:	fa1f fa8c 	uxth.w	sl, ip
 801afe6:	fb0a fe0e 	mul.w	lr, sl, lr
 801afea:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801afee:	fa1f fa8a 	uxth.w	sl, sl
 801aff2:	eba5 050e 	sub.w	r5, r5, lr
 801aff6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801affa:	940e      	str	r4, [sp, #56]	; 0x38
 801affc:	eba3 030a 	sub.w	r3, r3, sl
 801b000:	b2ad      	uxth	r5, r5
 801b002:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b004:	b29b      	uxth	r3, r3
 801b006:	fb08 f505 	mul.w	r5, r8, r5
 801b00a:	fb09 5303 	mla	r3, r9, r3, r5
 801b00e:	fb0a 3304 	mla	r3, sl, r4, r3
 801b012:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b014:	fb0e 3304 	mla	r3, lr, r4, r3
 801b018:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b01c:	2b00      	cmp	r3, #0
 801b01e:	f000 810f 	beq.w	801b240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b022:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b024:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b028:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801b02c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801b030:	f000 8190 	beq.w	801b354 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801b034:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b038:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b03c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b040:	fb09 f000 	mul.w	r0, r9, r0
 801b044:	fb0a fe0e 	mul.w	lr, sl, lr
 801b048:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801b04c:	f100 0b20 	add.w	fp, r0, #32
 801b050:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b054:	44ce      	add	lr, r9
 801b056:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801b05a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b05e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b062:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b066:	ea4e 0909 	orr.w	r9, lr, r9
 801b06a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b06e:	8868      	ldrh	r0, [r5, #2]
 801b070:	d019      	beq.n	801b0a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b072:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b076:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b07a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b07e:	fb08 f800 	mul.w	r8, r8, r0
 801b082:	fb0a fe0e 	mul.w	lr, sl, lr
 801b086:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801b08a:	f108 0b20 	add.w	fp, r8, #32
 801b08e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b092:	4486      	add	lr, r0
 801b094:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801b098:	0a00      	lsrs	r0, r0, #8
 801b09a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b09e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b0a2:	ea4e 0000 	orr.w	r0, lr, r0
 801b0a6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801b0aa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b0ae:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801b0b2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b0b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b0ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b0be:	ea4e 0909 	orr.w	r9, lr, r9
 801b0c2:	ea4a 0000 	orr.w	r0, sl, r0
 801b0c6:	f1bc 0f00 	cmp.w	ip, #0
 801b0ca:	f000 8145 	beq.w	801b358 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b0ce:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801b0d2:	3a01      	subs	r2, #1
 801b0d4:	0052      	lsls	r2, r2, #1
 801b0d6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b0d8:	3202      	adds	r2, #2
 801b0da:	2cff      	cmp	r4, #255	; 0xff
 801b0dc:	eb05 0e02 	add.w	lr, r5, r2
 801b0e0:	5aaa      	ldrh	r2, [r5, r2]
 801b0e2:	d018      	beq.n	801b116 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b0e4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801b0e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b0ec:	fb04 fa02 	mul.w	sl, r4, r2
 801b0f0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b0f4:	fb08 f805 	mul.w	r8, r8, r5
 801b0f8:	f10a 0520 	add.w	r5, sl, #32
 801b0fc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801b100:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801b104:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b108:	4442      	add	r2, r8
 801b10a:	0a2d      	lsrs	r5, r5, #8
 801b10c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801b110:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b114:	432a      	orrs	r2, r5
 801b116:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b118:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801b11c:	2cff      	cmp	r4, #255	; 0xff
 801b11e:	d01a      	beq.n	801b156 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b120:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801b124:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b128:	fb04 fa05 	mul.w	sl, r4, r5
 801b12c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b130:	fb08 f80e 	mul.w	r8, r8, lr
 801b134:	f10a 0e20 	add.w	lr, sl, #32
 801b138:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801b13c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801b140:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b144:	4445      	add	r5, r8
 801b146:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b14a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801b14e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801b152:	ea45 050e 	orr.w	r5, r5, lr
 801b156:	fb1c fe01 	smulbb	lr, ip, r1
 801b15a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801b15e:	f1cc 0810 	rsb	r8, ip, #16
 801b162:	eba8 0801 	sub.w	r8, r8, r1
 801b166:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b16a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801b16e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801b172:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801b176:	4341      	muls	r1, r0
 801b178:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b17c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b180:	ea4a 0202 	orr.w	r2, sl, r2
 801b184:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801b188:	fb09 1108 	mla	r1, r9, r8, r1
 801b18c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b190:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801b194:	fb0c 1102 	mla	r1, ip, r2, r1
 801b198:	ea4b 0505 	orr.w	r5, fp, r5
 801b19c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801b1a0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b1a4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b1a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b1ac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b1b0:	ea42 0e0e 	orr.w	lr, r2, lr
 801b1b4:	fa1f f28e 	uxth.w	r2, lr
 801b1b8:	2bff      	cmp	r3, #255	; 0xff
 801b1ba:	d103      	bne.n	801b1c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b1bc:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b1be:	29ff      	cmp	r1, #255	; 0xff
 801b1c0:	f000 80de 	beq.w	801b380 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801b1c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801b1c6:	8838      	ldrh	r0, [r7, #0]
 801b1c8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b1ca:	434b      	muls	r3, r1
 801b1cc:	f103 0c01 	add.w	ip, r3, #1
 801b1d0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801b1d4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b1d8:	fa5f fc83 	uxtb.w	ip, r3
 801b1dc:	1203      	asrs	r3, r0, #8
 801b1de:	1215      	asrs	r5, r2, #8
 801b1e0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b1e4:	fb13 f30c 	smulbb	r3, r3, ip
 801b1e8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b1ec:	fb05 3501 	mla	r5, r5, r1, r3
 801b1f0:	10c3      	asrs	r3, r0, #3
 801b1f2:	10d1      	asrs	r1, r2, #3
 801b1f4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b1f8:	fb13 f30c 	smulbb	r3, r3, ip
 801b1fc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b200:	fb01 3104 	mla	r1, r1, r4, r3
 801b204:	00c3      	lsls	r3, r0, #3
 801b206:	00d2      	lsls	r2, r2, #3
 801b208:	b2db      	uxtb	r3, r3
 801b20a:	b2d2      	uxtb	r2, r2
 801b20c:	fb13 f30c 	smulbb	r3, r3, ip
 801b210:	b2ad      	uxth	r5, r5
 801b212:	fb02 3304 	mla	r3, r2, r4, r3
 801b216:	b29a      	uxth	r2, r3
 801b218:	1c6b      	adds	r3, r5, #1
 801b21a:	b289      	uxth	r1, r1
 801b21c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b220:	1c53      	adds	r3, r2, #1
 801b222:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b226:	1c4a      	adds	r2, r1, #1
 801b228:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b22c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b230:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b234:	0949      	lsrs	r1, r1, #5
 801b236:	432b      	orrs	r3, r5
 801b238:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b23c:	430b      	orrs	r3, r1
 801b23e:	803b      	strh	r3, [r7, #0]
 801b240:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b242:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801b244:	4413      	add	r3, r2
 801b246:	9321      	str	r3, [sp, #132]	; 0x84
 801b248:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801b24a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b24c:	441a      	add	r2, r3
 801b24e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b250:	9222      	str	r2, [sp, #136]	; 0x88
 801b252:	3b01      	subs	r3, #1
 801b254:	3702      	adds	r7, #2
 801b256:	9313      	str	r3, [sp, #76]	; 0x4c
 801b258:	e689      	b.n	801af6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b25a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b25c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801b25e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801b260:	4433      	add	r3, r6
 801b262:	9321      	str	r3, [sp, #132]	; 0x84
 801b264:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b266:	441c      	add	r4, r3
 801b268:	9b08      	ldr	r3, [sp, #32]
 801b26a:	9422      	str	r4, [sp, #136]	; 0x88
 801b26c:	3b01      	subs	r3, #1
 801b26e:	9308      	str	r3, [sp, #32]
 801b270:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b272:	3302      	adds	r3, #2
 801b274:	9309      	str	r3, [sp, #36]	; 0x24
 801b276:	e658      	b.n	801af2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801b278:	d028      	beq.n	801b2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801b27a:	9b08      	ldr	r3, [sp, #32]
 801b27c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801b27e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801b280:	3b01      	subs	r3, #1
 801b282:	fb00 5003 	mla	r0, r0, r3, r5
 801b286:	1400      	asrs	r0, r0, #16
 801b288:	f53f ae6c 	bmi.w	801af64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b28c:	3901      	subs	r1, #1
 801b28e:	4288      	cmp	r0, r1
 801b290:	f6bf ae68 	bge.w	801af64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b294:	9924      	ldr	r1, [sp, #144]	; 0x90
 801b296:	9822      	ldr	r0, [sp, #136]	; 0x88
 801b298:	fb01 0303 	mla	r3, r1, r3, r0
 801b29c:	141b      	asrs	r3, r3, #16
 801b29e:	f53f ae61 	bmi.w	801af64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b2a2:	3a01      	subs	r2, #1
 801b2a4:	4293      	cmp	r3, r2
 801b2a6:	f6bf ae5d 	bge.w	801af64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b2aa:	9b08      	ldr	r3, [sp, #32]
 801b2ac:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801b2b0:	9313      	str	r3, [sp, #76]	; 0x4c
 801b2b2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b2b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b2b8:	2b00      	cmp	r3, #0
 801b2ba:	f300 8082 	bgt.w	801b3c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801b2be:	9b08      	ldr	r3, [sp, #32]
 801b2c0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b2c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2c6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b2ca:	9309      	str	r3, [sp, #36]	; 0x24
 801b2cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b2ce:	2b00      	cmp	r3, #0
 801b2d0:	f340 81ef 	ble.w	801b6b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801b2d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b2d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b2dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b2e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b2e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b2e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b2ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b2ee:	eef0 6a62 	vmov.f32	s13, s5
 801b2f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b2f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b2fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b2fe:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801b302:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b306:	eef0 6a43 	vmov.f32	s13, s6
 801b30a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b30e:	ee12 2a90 	vmov	r2, s5
 801b312:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b316:	fb92 f3f3 	sdiv	r3, r2, r3
 801b31a:	ee13 2a10 	vmov	r2, s6
 801b31e:	9323      	str	r3, [sp, #140]	; 0x8c
 801b320:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b322:	fb92 f3f3 	sdiv	r3, r2, r3
 801b326:	9324      	str	r3, [sp, #144]	; 0x90
 801b328:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b32a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b32c:	3b01      	subs	r3, #1
 801b32e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b332:	9311      	str	r3, [sp, #68]	; 0x44
 801b334:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b336:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801b33a:	bf08      	it	eq
 801b33c:	4613      	moveq	r3, r2
 801b33e:	9308      	str	r3, [sp, #32]
 801b340:	eeb0 3a67 	vmov.f32	s6, s15
 801b344:	eef0 2a47 	vmov.f32	s5, s14
 801b348:	e5e1      	b.n	801af0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b34a:	fb08 f505 	mul.w	r5, r8, r5
 801b34e:	fb09 5303 	mla	r3, r9, r3, r5
 801b352:	e661      	b.n	801b018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801b354:	4681      	mov	r9, r0
 801b356:	e688      	b.n	801b06a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b358:	f1c1 0210 	rsb	r2, r1, #16
 801b35c:	4341      	muls	r1, r0
 801b35e:	fb09 1902 	mla	r9, r9, r2, r1
 801b362:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b366:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801b36a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b36e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b372:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b376:	ea42 0909 	orr.w	r9, r2, r9
 801b37a:	fa1f f289 	uxth.w	r2, r9
 801b37e:	e71b      	b.n	801b1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b380:	803a      	strh	r2, [r7, #0]
 801b382:	e75d      	b.n	801b240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b384:	f115 0e01 	adds.w	lr, r5, #1
 801b388:	f53f af5a 	bmi.w	801b240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b38c:	4572      	cmp	r2, lr
 801b38e:	f6ff af57 	blt.w	801b240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b392:	f110 0e01 	adds.w	lr, r0, #1
 801b396:	f53f af53 	bmi.w	801b240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b39a:	4573      	cmp	r3, lr
 801b39c:	f6ff af50 	blt.w	801b240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b3a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b3a2:	9502      	str	r5, [sp, #8]
 801b3a4:	b21b      	sxth	r3, r3
 801b3a6:	b212      	sxth	r2, r2
 801b3a8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801b3ac:	9301      	str	r3, [sp, #4]
 801b3ae:	9200      	str	r2, [sp, #0]
 801b3b0:	e9cd c405 	strd	ip, r4, [sp, #20]
 801b3b4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801b3b8:	4639      	mov	r1, r7
 801b3ba:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b3bc:	f7ff fc04 	bl	801abc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801b3c0:	e73e      	b.n	801b240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b3c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b3c4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b3c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b3ca:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801b3ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b3d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b3d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b3d6:	141f      	asrs	r7, r3, #16
 801b3d8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b3da:	141b      	asrs	r3, r3, #16
 801b3dc:	fb01 3707 	mla	r7, r1, r7, r3
 801b3e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b3e2:	fa1f fc82 	uxth.w	ip, r2
 801b3e6:	eb03 0a07 	add.w	sl, r3, r7
 801b3ea:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801b3ee:	f813 9007 	ldrb.w	r9, [r3, r7]
 801b3f2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b3f6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b3fa:	b29b      	uxth	r3, r3
 801b3fc:	2d00      	cmp	r5, #0
 801b3fe:	f000 813d 	beq.w	801b67c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801b402:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801b406:	940f      	str	r4, [sp, #60]	; 0x3c
 801b408:	eb0a 0b01 	add.w	fp, sl, r1
 801b40c:	fa1f fa85 	uxth.w	sl, r5
 801b410:	fb0a fc0c 	mul.w	ip, sl, ip
 801b414:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801b418:	fa1f fa8a 	uxth.w	sl, sl
 801b41c:	eba0 000c 	sub.w	r0, r0, ip
 801b420:	eba3 030a 	sub.w	r3, r3, sl
 801b424:	b280      	uxth	r0, r0
 801b426:	fb08 f000 	mul.w	r0, r8, r0
 801b42a:	b29b      	uxth	r3, r3
 801b42c:	fb09 0303 	mla	r3, r9, r3, r0
 801b430:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b432:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b436:	9410      	str	r4, [sp, #64]	; 0x40
 801b438:	fb0a 3300 	mla	r3, sl, r0, r3
 801b43c:	fb0c 3304 	mla	r3, ip, r4, r3
 801b440:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b444:	2b00      	cmp	r3, #0
 801b446:	f000 810b 	beq.w	801b660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801b44a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b44c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b44e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b452:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801b456:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801b45a:	f000 8114 	beq.w	801b686 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801b45e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b462:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b466:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b46a:	fb09 f707 	mul.w	r7, r9, r7
 801b46e:	fb0a fc0c 	mul.w	ip, sl, ip
 801b472:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801b476:	f107 0b20 	add.w	fp, r7, #32
 801b47a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b47e:	44cc      	add	ip, r9
 801b480:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801b484:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b488:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b48c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b490:	ea4c 0909 	orr.w	r9, ip, r9
 801b494:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b498:	8847      	ldrh	r7, [r0, #2]
 801b49a:	d019      	beq.n	801b4d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801b49c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b4a0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b4a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b4a8:	fb08 f807 	mul.w	r8, r8, r7
 801b4ac:	fb0a fc0c 	mul.w	ip, sl, ip
 801b4b0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801b4b4:	f108 0b20 	add.w	fp, r8, #32
 801b4b8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b4bc:	44bc      	add	ip, r7
 801b4be:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801b4c2:	0a3f      	lsrs	r7, r7, #8
 801b4c4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b4c8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b4cc:	ea4c 0707 	orr.w	r7, ip, r7
 801b4d0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801b4d4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801b4d8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b4dc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b4e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b4e4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801b4e8:	ea4c 0909 	orr.w	r9, ip, r9
 801b4ec:	ea4a 0707 	orr.w	r7, sl, r7
 801b4f0:	2d00      	cmp	r5, #0
 801b4f2:	f000 80ca 	beq.w	801b68a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801b4f6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801b4fa:	3901      	subs	r1, #1
 801b4fc:	0049      	lsls	r1, r1, #1
 801b4fe:	3102      	adds	r1, #2
 801b500:	eb00 0c01 	add.w	ip, r0, r1
 801b504:	5a41      	ldrh	r1, [r0, r1]
 801b506:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b508:	28ff      	cmp	r0, #255	; 0xff
 801b50a:	d019      	beq.n	801b540 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801b50c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b50e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801b512:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b516:	fb04 fa01 	mul.w	sl, r4, r1
 801b51a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b51e:	fb08 f800 	mul.w	r8, r8, r0
 801b522:	f10a 0020 	add.w	r0, sl, #32
 801b526:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801b52a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801b52e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b532:	4441      	add	r1, r8
 801b534:	0a00      	lsrs	r0, r0, #8
 801b536:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801b53a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b53e:	4301      	orrs	r1, r0
 801b540:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b542:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801b546:	2cff      	cmp	r4, #255	; 0xff
 801b548:	d01a      	beq.n	801b580 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801b54a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801b54e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b552:	fb04 fa00 	mul.w	sl, r4, r0
 801b556:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b55a:	fb08 f80c 	mul.w	r8, r8, ip
 801b55e:	f10a 0c20 	add.w	ip, sl, #32
 801b562:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801b566:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801b56a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b56e:	4440      	add	r0, r8
 801b570:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b574:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801b578:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b57c:	ea40 000c 	orr.w	r0, r0, ip
 801b580:	fb15 fc02 	smulbb	ip, r5, r2
 801b584:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801b588:	f1c5 0810 	rsb	r8, r5, #16
 801b58c:	eba8 0802 	sub.w	r8, r8, r2
 801b590:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b594:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801b598:	437a      	muls	r2, r7
 801b59a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b59e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801b5a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b5a6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b5aa:	fb09 2208 	mla	r2, r9, r8, r2
 801b5ae:	ea4a 0101 	orr.w	r1, sl, r1
 801b5b2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801b5b6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b5ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b5be:	fb05 2201 	mla	r2, r5, r1, r2
 801b5c2:	ea4b 0000 	orr.w	r0, fp, r0
 801b5c6:	fb0c 2200 	mla	r2, ip, r0, r2
 801b5ca:	0d57      	lsrs	r7, r2, #21
 801b5cc:	0952      	lsrs	r2, r2, #5
 801b5ce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b5d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b5d6:	433a      	orrs	r2, r7
 801b5d8:	2bff      	cmp	r3, #255	; 0xff
 801b5da:	b292      	uxth	r2, r2
 801b5dc:	d102      	bne.n	801b5e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801b5de:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b5e0:	29ff      	cmp	r1, #255	; 0xff
 801b5e2:	d063      	beq.n	801b6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801b5e4:	980a      	ldr	r0, [sp, #40]	; 0x28
 801b5e6:	f8be 1000 	ldrh.w	r1, [lr]
 801b5ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b5ec:	4343      	muls	r3, r0
 801b5ee:	1c58      	adds	r0, r3, #1
 801b5f0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801b5f4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b5f8:	1208      	asrs	r0, r1, #8
 801b5fa:	b2db      	uxtb	r3, r3
 801b5fc:	1215      	asrs	r5, r2, #8
 801b5fe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b602:	fb10 f003 	smulbb	r0, r0, r3
 801b606:	10cf      	asrs	r7, r1, #3
 801b608:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b60c:	00c9      	lsls	r1, r1, #3
 801b60e:	fb05 0504 	mla	r5, r5, r4, r0
 801b612:	b2c9      	uxtb	r1, r1
 801b614:	10d0      	asrs	r0, r2, #3
 801b616:	00d2      	lsls	r2, r2, #3
 801b618:	fb11 f103 	smulbb	r1, r1, r3
 801b61c:	b2d2      	uxtb	r2, r2
 801b61e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b622:	fb02 1204 	mla	r2, r2, r4, r1
 801b626:	fb17 f703 	smulbb	r7, r7, r3
 801b62a:	b2ad      	uxth	r5, r5
 801b62c:	b292      	uxth	r2, r2
 801b62e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b632:	fb00 7004 	mla	r0, r0, r4, r7
 801b636:	1c6b      	adds	r3, r5, #1
 801b638:	1c57      	adds	r7, r2, #1
 801b63a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b63e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801b642:	b280      	uxth	r0, r0
 801b644:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b648:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b64c:	433d      	orrs	r5, r7
 801b64e:	1c47      	adds	r7, r0, #1
 801b650:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b654:	097f      	lsrs	r7, r7, #5
 801b656:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b65a:	433d      	orrs	r5, r7
 801b65c:	f8ae 5000 	strh.w	r5, [lr]
 801b660:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b662:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801b664:	4413      	add	r3, r2
 801b666:	9321      	str	r3, [sp, #132]	; 0x84
 801b668:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801b66a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b66c:	441a      	add	r2, r3
 801b66e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b670:	9222      	str	r2, [sp, #136]	; 0x88
 801b672:	3b01      	subs	r3, #1
 801b674:	f10e 0e02 	add.w	lr, lr, #2
 801b678:	9313      	str	r3, [sp, #76]	; 0x4c
 801b67a:	e61c      	b.n	801b2b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801b67c:	fb08 f000 	mul.w	r0, r8, r0
 801b680:	fb09 0303 	mla	r3, r9, r3, r0
 801b684:	e6dc      	b.n	801b440 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801b686:	46b9      	mov	r9, r7
 801b688:	e704      	b.n	801b494 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801b68a:	f1c2 0110 	rsb	r1, r2, #16
 801b68e:	437a      	muls	r2, r7
 801b690:	fb09 2901 	mla	r9, r9, r1, r2
 801b694:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b698:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801b69c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801b6a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b6a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b6a8:	4302      	orrs	r2, r0
 801b6aa:	e795      	b.n	801b5d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801b6ac:	f8ae 2000 	strh.w	r2, [lr]
 801b6b0:	e7d6      	b.n	801b660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801b6b2:	b017      	add	sp, #92	; 0x5c
 801b6b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b6b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801b6b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6bc:	b085      	sub	sp, #20
 801b6be:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801b6c2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801b6c6:	9103      	str	r1, [sp, #12]
 801b6c8:	fb00 7406 	mla	r4, r0, r6, r7
 801b6cc:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801b6d0:	2800      	cmp	r0, #0
 801b6d2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801b6d6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801b6da:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801b6de:	9501      	str	r5, [sp, #4]
 801b6e0:	eb02 0904 	add.w	r9, r2, r4
 801b6e4:	f2c0 8141 	blt.w	801b96a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801b6e8:	4583      	cmp	fp, r0
 801b6ea:	f340 813e 	ble.w	801b96a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801b6ee:	2f00      	cmp	r7, #0
 801b6f0:	f2c0 8137 	blt.w	801b962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801b6f4:	42be      	cmp	r6, r7
 801b6f6:	f340 8134 	ble.w	801b962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801b6fa:	f812 c004 	ldrb.w	ip, [r2, r4]
 801b6fe:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801b702:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b706:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801b70a:	4355      	muls	r5, r2
 801b70c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b710:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801b714:	fb0c f203 	mul.w	r2, ip, r3
 801b718:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801b71c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801b720:	441d      	add	r5, r3
 801b722:	f102 0320 	add.w	r3, r2, #32
 801b726:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b72a:	0a1b      	lsrs	r3, r3, #8
 801b72c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801b730:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b734:	431c      	orrs	r4, r3
 801b736:	1c7b      	adds	r3, r7, #1
 801b738:	f100 811c 	bmi.w	801b974 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801b73c:	429e      	cmp	r6, r3
 801b73e:	f340 8119 	ble.w	801b974 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801b742:	2900      	cmp	r1, #0
 801b744:	f000 8119 	beq.w	801b97a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801b748:	9a01      	ldr	r2, [sp, #4]
 801b74a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801b74e:	8855      	ldrh	r5, [r2, #2]
 801b750:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801b754:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801b758:	fb08 f802 	mul.w	r8, r8, r2
 801b75c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b760:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801b764:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801b768:	435d      	muls	r5, r3
 801b76a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b76e:	44d0      	add	r8, sl
 801b770:	f105 0a20 	add.w	sl, r5, #32
 801b774:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801b778:	0a2d      	lsrs	r5, r5, #8
 801b77a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801b77e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b782:	432a      	orrs	r2, r5
 801b784:	3001      	adds	r0, #1
 801b786:	f100 80fe 	bmi.w	801b986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801b78a:	4583      	cmp	fp, r0
 801b78c:	f340 80fb 	ble.w	801b986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801b790:	f1be 0f00 	cmp.w	lr, #0
 801b794:	f000 80fc 	beq.w	801b990 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801b798:	2f00      	cmp	r7, #0
 801b79a:	f2c0 80f1 	blt.w	801b980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801b79e:	42be      	cmp	r6, r7
 801b7a0:	f340 80ee 	ble.w	801b980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801b7a4:	9801      	ldr	r0, [sp, #4]
 801b7a6:	f819 5006 	ldrb.w	r5, [r9, r6]
 801b7aa:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801b7ae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b7b2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801b7b6:	fb0a fa00 	mul.w	sl, sl, r0
 801b7ba:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801b7be:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b7c2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801b7c6:	fb05 f808 	mul.w	r8, r5, r8
 801b7ca:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801b7ce:	4482      	add	sl, r0
 801b7d0:	f108 0020 	add.w	r0, r8, #32
 801b7d4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b7d8:	0a00      	lsrs	r0, r0, #8
 801b7da:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801b7de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b7e2:	ea4b 0b00 	orr.w	fp, fp, r0
 801b7e6:	3701      	adds	r7, #1
 801b7e8:	f100 80d7 	bmi.w	801b99a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801b7ec:	42be      	cmp	r6, r7
 801b7ee:	f340 80d4 	ble.w	801b99a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801b7f2:	2900      	cmp	r1, #0
 801b7f4:	f000 80d4 	beq.w	801b9a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801b7f8:	3601      	adds	r6, #1
 801b7fa:	9801      	ldr	r0, [sp, #4]
 801b7fc:	f819 7006 	ldrb.w	r7, [r9, r6]
 801b800:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801b804:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801b808:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801b80c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b810:	fb09 f906 	mul.w	r9, r9, r6
 801b814:	fb07 f800 	mul.w	r8, r7, r0
 801b818:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801b81c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801b820:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801b824:	44d1      	add	r9, sl
 801b826:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801b82a:	f108 0020 	add.w	r0, r8, #32
 801b82e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b832:	0a00      	lsrs	r0, r0, #8
 801b834:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b838:	4330      	orrs	r0, r6
 801b83a:	b28e      	uxth	r6, r1
 801b83c:	fa1f f98e 	uxth.w	r9, lr
 801b840:	fb06 f809 	mul.w	r8, r6, r9
 801b844:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801b848:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801b84c:	0136      	lsls	r6, r6, #4
 801b84e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b852:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801b856:	9601      	str	r6, [sp, #4]
 801b858:	ea4a 0404 	orr.w	r4, sl, r4
 801b85c:	fa1f f689 	uxth.w	r6, r9
 801b860:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b864:	fb11 f90e 	smulbb	r9, r1, lr
 801b868:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801b86c:	9602      	str	r6, [sp, #8]
 801b86e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b872:	4626      	mov	r6, r4
 801b874:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b878:	f1ce 0410 	rsb	r4, lr, #16
 801b87c:	1a64      	subs	r4, r4, r1
 801b87e:	ea4a 0202 	orr.w	r2, sl, r2
 801b882:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801b886:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b88a:	434a      	muls	r2, r1
 801b88c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801b890:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b894:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b898:	fb04 2406 	mla	r4, r4, r6, r2
 801b89c:	ea4a 0000 	orr.w	r0, sl, r0
 801b8a0:	fb09 4200 	mla	r2, r9, r0, r4
 801b8a4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801b8a8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801b8ac:	9801      	ldr	r0, [sp, #4]
 801b8ae:	9903      	ldr	r1, [sp, #12]
 801b8b0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801b8b4:	ea44 0b0b 	orr.w	fp, r4, fp
 801b8b8:	9c02      	ldr	r4, [sp, #8]
 801b8ba:	8809      	ldrh	r1, [r1, #0]
 801b8bc:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801b8c0:	1b00      	subs	r0, r0, r4
 801b8c2:	9c01      	ldr	r4, [sp, #4]
 801b8c4:	eba4 0608 	sub.w	r6, r4, r8
 801b8c8:	b2b6      	uxth	r6, r6
 801b8ca:	b280      	uxth	r0, r0
 801b8cc:	4373      	muls	r3, r6
 801b8ce:	fb0c 3300 	mla	r3, ip, r0, r3
 801b8d2:	9802      	ldr	r0, [sp, #8]
 801b8d4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801b8d8:	fb00 3505 	mla	r5, r0, r5, r3
 801b8dc:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801b8e0:	fb08 5707 	mla	r7, r8, r7, r5
 801b8e4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b8e8:	120b      	asrs	r3, r1, #8
 801b8ea:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b8ee:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801b8f2:	b2ff      	uxtb	r7, r7
 801b8f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b8f8:	10c8      	asrs	r0, r1, #3
 801b8fa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b8fe:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b902:	00c9      	lsls	r1, r1, #3
 801b904:	437b      	muls	r3, r7
 801b906:	ea42 0e0e 	orr.w	lr, r2, lr
 801b90a:	b2c9      	uxtb	r1, r1
 801b90c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b910:	fa1f f28e 	uxth.w	r2, lr
 801b914:	4378      	muls	r0, r7
 801b916:	434f      	muls	r7, r1
 801b918:	1c59      	adds	r1, r3, #1
 801b91a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b91e:	1213      	asrs	r3, r2, #8
 801b920:	f023 0307 	bic.w	r3, r3, #7
 801b924:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b928:	1c41      	adds	r1, r0, #1
 801b92a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801b92e:	10d1      	asrs	r1, r2, #3
 801b930:	f021 0103 	bic.w	r1, r1, #3
 801b934:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801b938:	021b      	lsls	r3, r3, #8
 801b93a:	00c9      	lsls	r1, r1, #3
 801b93c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b940:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b944:	430b      	orrs	r3, r1
 801b946:	1c79      	adds	r1, r7, #1
 801b948:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801b94c:	00d2      	lsls	r2, r2, #3
 801b94e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801b952:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b956:	431a      	orrs	r2, r3
 801b958:	9b03      	ldr	r3, [sp, #12]
 801b95a:	801a      	strh	r2, [r3, #0]
 801b95c:	b005      	add	sp, #20
 801b95e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b962:	f04f 0c00 	mov.w	ip, #0
 801b966:	4664      	mov	r4, ip
 801b968:	e6e5      	b.n	801b736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801b96a:	2300      	movs	r3, #0
 801b96c:	469c      	mov	ip, r3
 801b96e:	461a      	mov	r2, r3
 801b970:	461c      	mov	r4, r3
 801b972:	e707      	b.n	801b784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801b974:	2300      	movs	r3, #0
 801b976:	461a      	mov	r2, r3
 801b978:	e704      	b.n	801b784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801b97a:	460b      	mov	r3, r1
 801b97c:	460a      	mov	r2, r1
 801b97e:	e701      	b.n	801b784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801b980:	2500      	movs	r5, #0
 801b982:	46ab      	mov	fp, r5
 801b984:	e72f      	b.n	801b7e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801b986:	2700      	movs	r7, #0
 801b988:	463d      	mov	r5, r7
 801b98a:	4638      	mov	r0, r7
 801b98c:	46bb      	mov	fp, r7
 801b98e:	e754      	b.n	801b83a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801b990:	4677      	mov	r7, lr
 801b992:	4675      	mov	r5, lr
 801b994:	4670      	mov	r0, lr
 801b996:	46f3      	mov	fp, lr
 801b998:	e74f      	b.n	801b83a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801b99a:	2700      	movs	r7, #0
 801b99c:	4638      	mov	r0, r7
 801b99e:	e74c      	b.n	801b83a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801b9a0:	460f      	mov	r7, r1
 801b9a2:	4608      	mov	r0, r1
 801b9a4:	e749      	b.n	801b83a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801b9a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9ac:	b093      	sub	sp, #76	; 0x4c
 801b9ae:	9210      	str	r2, [sp, #64]	; 0x40
 801b9b0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b9b2:	910e      	str	r1, [sp, #56]	; 0x38
 801b9b4:	9306      	str	r3, [sp, #24]
 801b9b6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801b9ba:	9011      	str	r0, [sp, #68]	; 0x44
 801b9bc:	6850      	ldr	r0, [r2, #4]
 801b9be:	6812      	ldr	r2, [r2, #0]
 801b9c0:	fb00 1303 	mla	r3, r0, r3, r1
 801b9c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b9c8:	9307      	str	r3, [sp, #28]
 801b9ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9cc:	681b      	ldr	r3, [r3, #0]
 801b9ce:	9308      	str	r3, [sp, #32]
 801b9d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9d2:	685b      	ldr	r3, [r3, #4]
 801b9d4:	9309      	str	r3, [sp, #36]	; 0x24
 801b9d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b9d8:	2b00      	cmp	r3, #0
 801b9da:	dc03      	bgt.n	801b9e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b9dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b9de:	2b00      	cmp	r3, #0
 801b9e0:	f340 83b4 	ble.w	801c14c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801b9e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b9ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b9ee:	1e48      	subs	r0, r1, #1
 801b9f0:	1e55      	subs	r5, r2, #1
 801b9f2:	9b06      	ldr	r3, [sp, #24]
 801b9f4:	2b00      	cmp	r3, #0
 801b9f6:	f340 8163 	ble.w	801bcc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b9fa:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801b9fc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b9fe:	1436      	asrs	r6, r6, #16
 801ba00:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ba04:	d406      	bmi.n	801ba14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba06:	4286      	cmp	r6, r0
 801ba08:	da04      	bge.n	801ba14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba0a:	2b00      	cmp	r3, #0
 801ba0c:	db02      	blt.n	801ba14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba0e:	42ab      	cmp	r3, r5
 801ba10:	f2c0 8157 	blt.w	801bcc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801ba14:	3601      	adds	r6, #1
 801ba16:	f100 8144 	bmi.w	801bca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ba1a:	42b1      	cmp	r1, r6
 801ba1c:	f2c0 8141 	blt.w	801bca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ba20:	3301      	adds	r3, #1
 801ba22:	f100 813e 	bmi.w	801bca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ba26:	429a      	cmp	r2, r3
 801ba28:	f2c0 813b 	blt.w	801bca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ba2c:	9b06      	ldr	r3, [sp, #24]
 801ba2e:	9f07      	ldr	r7, [sp, #28]
 801ba30:	930f      	str	r3, [sp, #60]	; 0x3c
 801ba32:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ba36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ba38:	2b00      	cmp	r3, #0
 801ba3a:	f340 8164 	ble.w	801bd06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801ba3e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ba40:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ba42:	1418      	asrs	r0, r3, #16
 801ba44:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ba46:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ba4a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ba4c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ba50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba52:	142d      	asrs	r5, r5, #16
 801ba54:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ba58:	f100 81ee 	bmi.w	801be38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ba5c:	f102 3eff 	add.w	lr, r2, #4294967295
 801ba60:	4575      	cmp	r5, lr
 801ba62:	f280 81e9 	bge.w	801be38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ba66:	2800      	cmp	r0, #0
 801ba68:	f2c0 81e6 	blt.w	801be38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ba6c:	f103 3eff 	add.w	lr, r3, #4294967295
 801ba70:	4570      	cmp	r0, lr
 801ba72:	f280 81e1 	bge.w	801be38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ba76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba78:	b212      	sxth	r2, r2
 801ba7a:	fb00 5002 	mla	r0, r0, r2, r5
 801ba7e:	fa1f fe81 	uxth.w	lr, r1
 801ba82:	eb03 0a00 	add.w	sl, r3, r0
 801ba86:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ba8a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ba8e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ba92:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801ba96:	b29b      	uxth	r3, r3
 801ba98:	f1bc 0f00 	cmp.w	ip, #0
 801ba9c:	f000 8179 	beq.w	801bd92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801baa0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801baa4:	940a      	str	r4, [sp, #40]	; 0x28
 801baa6:	eb0a 0b02 	add.w	fp, sl, r2
 801baaa:	fa1f fa8c 	uxth.w	sl, ip
 801baae:	fb0a fe0e 	mul.w	lr, sl, lr
 801bab2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801bab6:	fa1f fa8a 	uxth.w	sl, sl
 801baba:	eba5 050e 	sub.w	r5, r5, lr
 801babe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801bac2:	940b      	str	r4, [sp, #44]	; 0x2c
 801bac4:	eba3 030a 	sub.w	r3, r3, sl
 801bac8:	b2ad      	uxth	r5, r5
 801baca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bacc:	b29b      	uxth	r3, r3
 801bace:	fb08 f505 	mul.w	r5, r8, r5
 801bad2:	fb09 5303 	mla	r3, r9, r3, r5
 801bad6:	fb0a 3304 	mla	r3, sl, r4, r3
 801bada:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801badc:	fb0e 3304 	mla	r3, lr, r4, r3
 801bae0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bae4:	2b00      	cmp	r3, #0
 801bae6:	f000 80cf 	beq.w	801bc88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801baea:	9c08      	ldr	r4, [sp, #32]
 801baec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801baf0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801baf4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801baf8:	f000 8150 	beq.w	801bd9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801bafc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801bb00:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bb04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bb08:	fb09 f000 	mul.w	r0, r9, r0
 801bb0c:	fb0a fe0e 	mul.w	lr, sl, lr
 801bb10:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801bb14:	f100 0b20 	add.w	fp, r0, #32
 801bb18:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bb1c:	44ce      	add	lr, r9
 801bb1e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801bb22:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bb26:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bb2a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bb2e:	ea4e 0909 	orr.w	r9, lr, r9
 801bb32:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801bb36:	8868      	ldrh	r0, [r5, #2]
 801bb38:	d019      	beq.n	801bb6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801bb3a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801bb3e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bb42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bb46:	fb08 f800 	mul.w	r8, r8, r0
 801bb4a:	fb0a fe0e 	mul.w	lr, sl, lr
 801bb4e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801bb52:	f108 0b20 	add.w	fp, r8, #32
 801bb56:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bb5a:	4486      	add	lr, r0
 801bb5c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801bb60:	0a00      	lsrs	r0, r0, #8
 801bb62:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bb66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bb6a:	ea4e 0000 	orr.w	r0, lr, r0
 801bb6e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801bb72:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bb76:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801bb7a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bb7e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bb82:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bb86:	ea4e 0909 	orr.w	r9, lr, r9
 801bb8a:	ea4a 0000 	orr.w	r0, sl, r0
 801bb8e:	f1bc 0f00 	cmp.w	ip, #0
 801bb92:	f000 8105 	beq.w	801bda0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801bb96:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801bb9a:	3a01      	subs	r2, #1
 801bb9c:	0052      	lsls	r2, r2, #1
 801bb9e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bba0:	3202      	adds	r2, #2
 801bba2:	2cff      	cmp	r4, #255	; 0xff
 801bba4:	eb05 0e02 	add.w	lr, r5, r2
 801bba8:	5aaa      	ldrh	r2, [r5, r2]
 801bbaa:	d018      	beq.n	801bbde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801bbac:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801bbb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bbb4:	fb04 fa02 	mul.w	sl, r4, r2
 801bbb8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bbbc:	fb08 f805 	mul.w	r8, r8, r5
 801bbc0:	f10a 0520 	add.w	r5, sl, #32
 801bbc4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801bbc8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801bbcc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bbd0:	4442      	add	r2, r8
 801bbd2:	0a2d      	lsrs	r5, r5, #8
 801bbd4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801bbd8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bbdc:	432a      	orrs	r2, r5
 801bbde:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bbe0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801bbe4:	2cff      	cmp	r4, #255	; 0xff
 801bbe6:	d01a      	beq.n	801bc1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bbe8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801bbec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bbf0:	fb04 fa05 	mul.w	sl, r4, r5
 801bbf4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bbf8:	fb08 f80e 	mul.w	r8, r8, lr
 801bbfc:	f10a 0e20 	add.w	lr, sl, #32
 801bc00:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801bc04:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801bc08:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bc0c:	4445      	add	r5, r8
 801bc0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bc12:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801bc16:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801bc1a:	ea45 050e 	orr.w	r5, r5, lr
 801bc1e:	fb1c fe01 	smulbb	lr, ip, r1
 801bc22:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801bc26:	f1cc 0810 	rsb	r8, ip, #16
 801bc2a:	eba8 0801 	sub.w	r8, r8, r1
 801bc2e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bc32:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801bc36:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801bc3a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801bc3e:	4341      	muls	r1, r0
 801bc40:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bc44:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bc48:	ea4a 0202 	orr.w	r2, sl, r2
 801bc4c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801bc50:	fb09 1108 	mla	r1, r9, r8, r1
 801bc54:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801bc58:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801bc5c:	fb0c 1102 	mla	r1, ip, r2, r1
 801bc60:	ea4b 0505 	orr.w	r5, fp, r5
 801bc64:	fb0e 1e05 	mla	lr, lr, r5, r1
 801bc68:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bc6c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bc70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bc74:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bc78:	ea42 0e0e 	orr.w	lr, r2, lr
 801bc7c:	fa1f f28e 	uxth.w	r2, lr
 801bc80:	2bff      	cmp	r3, #255	; 0xff
 801bc82:	f040 80a1 	bne.w	801bdc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801bc86:	803a      	strh	r2, [r7, #0]
 801bc88:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801bc8a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801bc8c:	4413      	add	r3, r2
 801bc8e:	931d      	str	r3, [sp, #116]	; 0x74
 801bc90:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801bc92:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bc94:	441a      	add	r2, r3
 801bc96:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bc98:	921e      	str	r2, [sp, #120]	; 0x78
 801bc9a:	3b01      	subs	r3, #1
 801bc9c:	3702      	adds	r7, #2
 801bc9e:	930f      	str	r3, [sp, #60]	; 0x3c
 801bca0:	e6c9      	b.n	801ba36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bca2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801bca4:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801bca6:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801bca8:	4433      	add	r3, r6
 801bcaa:	931d      	str	r3, [sp, #116]	; 0x74
 801bcac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bcae:	441c      	add	r4, r3
 801bcb0:	9b06      	ldr	r3, [sp, #24]
 801bcb2:	941e      	str	r4, [sp, #120]	; 0x78
 801bcb4:	3b01      	subs	r3, #1
 801bcb6:	9306      	str	r3, [sp, #24]
 801bcb8:	9b07      	ldr	r3, [sp, #28]
 801bcba:	3302      	adds	r3, #2
 801bcbc:	9307      	str	r3, [sp, #28]
 801bcbe:	e698      	b.n	801b9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bcc0:	d028      	beq.n	801bd14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bcc2:	9b06      	ldr	r3, [sp, #24]
 801bcc4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801bcc6:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801bcc8:	3b01      	subs	r3, #1
 801bcca:	fb00 5003 	mla	r0, r0, r3, r5
 801bcce:	1400      	asrs	r0, r0, #16
 801bcd0:	f53f aeac 	bmi.w	801ba2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bcd4:	3901      	subs	r1, #1
 801bcd6:	4288      	cmp	r0, r1
 801bcd8:	f6bf aea8 	bge.w	801ba2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bcdc:	9920      	ldr	r1, [sp, #128]	; 0x80
 801bcde:	981e      	ldr	r0, [sp, #120]	; 0x78
 801bce0:	fb01 0303 	mla	r3, r1, r3, r0
 801bce4:	141b      	asrs	r3, r3, #16
 801bce6:	f53f aea1 	bmi.w	801ba2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bcea:	3a01      	subs	r2, #1
 801bcec:	4293      	cmp	r3, r2
 801bcee:	f6bf ae9d 	bge.w	801ba2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bcf2:	9b06      	ldr	r3, [sp, #24]
 801bcf4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801bcf8:	930f      	str	r3, [sp, #60]	; 0x3c
 801bcfa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bcfe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bd00:	2b00      	cmp	r3, #0
 801bd02:	f300 80b6 	bgt.w	801be72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801bd06:	9b06      	ldr	r3, [sp, #24]
 801bd08:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bd0c:	9b07      	ldr	r3, [sp, #28]
 801bd0e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bd12:	9307      	str	r3, [sp, #28]
 801bd14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bd16:	2b00      	cmp	r3, #0
 801bd18:	f340 8218 	ble.w	801c14c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801bd1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bd24:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bd28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bd2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd36:	eef0 6a62 	vmov.f32	s13, s5
 801bd3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bd42:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd46:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801bd4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd4e:	eef0 6a43 	vmov.f32	s13, s6
 801bd52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd56:	ee12 2a90 	vmov	r2, s5
 801bd5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd62:	ee13 2a10 	vmov	r2, s6
 801bd66:	931f      	str	r3, [sp, #124]	; 0x7c
 801bd68:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bd6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd6e:	9320      	str	r3, [sp, #128]	; 0x80
 801bd70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bd72:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bd74:	3b01      	subs	r3, #1
 801bd76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bd7a:	930e      	str	r3, [sp, #56]	; 0x38
 801bd7c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bd7e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801bd82:	bf08      	it	eq
 801bd84:	4613      	moveq	r3, r2
 801bd86:	9306      	str	r3, [sp, #24]
 801bd88:	eeb0 3a67 	vmov.f32	s6, s15
 801bd8c:	eef0 2a47 	vmov.f32	s5, s14
 801bd90:	e621      	b.n	801b9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801bd92:	fb08 f505 	mul.w	r5, r8, r5
 801bd96:	fb09 5303 	mla	r3, r9, r3, r5
 801bd9a:	e6a1      	b.n	801bae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801bd9c:	4681      	mov	r9, r0
 801bd9e:	e6c8      	b.n	801bb32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801bda0:	f1c1 0210 	rsb	r2, r1, #16
 801bda4:	4341      	muls	r1, r0
 801bda6:	fb09 1902 	mla	r9, r9, r2, r1
 801bdaa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bdae:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801bdb2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bdb6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bdba:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bdbe:	ea42 0909 	orr.w	r9, r2, r9
 801bdc2:	fa1f f289 	uxth.w	r2, r9
 801bdc6:	e75b      	b.n	801bc80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801bdc8:	f8b7 c000 	ldrh.w	ip, [r7]
 801bdcc:	43db      	mvns	r3, r3
 801bdce:	ea4f 202c 	mov.w	r0, ip, asr #8
 801bdd2:	fa5f fe83 	uxtb.w	lr, r3
 801bdd6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bdda:	fb00 f00e 	mul.w	r0, r0, lr
 801bdde:	1c41      	adds	r1, r0, #1
 801bde0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801bde4:	1211      	asrs	r1, r2, #8
 801bde6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bdea:	f021 0107 	bic.w	r1, r1, #7
 801bdee:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801bdf2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bdf6:	48d7      	ldr	r0, [pc, #860]	; (801c154 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801bdf8:	fb05 f50e 	mul.w	r5, r5, lr
 801bdfc:	b2c9      	uxtb	r1, r1
 801bdfe:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801be02:	1c69      	adds	r1, r5, #1
 801be04:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801be08:	10d1      	asrs	r1, r2, #3
 801be0a:	f021 0103 	bic.w	r1, r1, #3
 801be0e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801be12:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801be16:	b2db      	uxtb	r3, r3
 801be18:	00c9      	lsls	r1, r1, #3
 801be1a:	fb03 f30e 	mul.w	r3, r3, lr
 801be1e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801be22:	4301      	orrs	r1, r0
 801be24:	1c58      	adds	r0, r3, #1
 801be26:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801be2a:	00d2      	lsls	r2, r2, #3
 801be2c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801be30:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801be34:	430a      	orrs	r2, r1
 801be36:	e726      	b.n	801bc86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801be38:	f115 0e01 	adds.w	lr, r5, #1
 801be3c:	f53f af24 	bmi.w	801bc88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801be40:	4572      	cmp	r2, lr
 801be42:	f6ff af21 	blt.w	801bc88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801be46:	f110 0e01 	adds.w	lr, r0, #1
 801be4a:	f53f af1d 	bmi.w	801bc88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801be4e:	4573      	cmp	r3, lr
 801be50:	f6ff af1a 	blt.w	801bc88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801be54:	b21b      	sxth	r3, r3
 801be56:	b212      	sxth	r2, r2
 801be58:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801be5c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801be60:	9301      	str	r3, [sp, #4]
 801be62:	9200      	str	r2, [sp, #0]
 801be64:	4639      	mov	r1, r7
 801be66:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801be6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801be6c:	f7ff fc24 	bl	801b6b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801be70:	e70a      	b.n	801bc88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801be72:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801be74:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801be78:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801be7a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801be7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801be80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be84:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801be86:	141f      	asrs	r7, r3, #16
 801be88:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801be8a:	141b      	asrs	r3, r3, #16
 801be8c:	fb01 3707 	mla	r7, r1, r7, r3
 801be90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be92:	fa1f fc82 	uxth.w	ip, r2
 801be96:	eb03 0a07 	add.w	sl, r3, r7
 801be9a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801be9e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801bea2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bea6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801beaa:	b29b      	uxth	r3, r3
 801beac:	2d00      	cmp	r5, #0
 801beae:	f000 80fe 	beq.w	801c0ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801beb2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801beb6:	940c      	str	r4, [sp, #48]	; 0x30
 801beb8:	eb0a 0b01 	add.w	fp, sl, r1
 801bebc:	fa1f fa85 	uxth.w	sl, r5
 801bec0:	fb0a fc0c 	mul.w	ip, sl, ip
 801bec4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801bec8:	fa1f fa8a 	uxth.w	sl, sl
 801becc:	eba0 000c 	sub.w	r0, r0, ip
 801bed0:	eba3 030a 	sub.w	r3, r3, sl
 801bed4:	b280      	uxth	r0, r0
 801bed6:	fb08 f000 	mul.w	r0, r8, r0
 801beda:	b29b      	uxth	r3, r3
 801bedc:	fb09 0303 	mla	r3, r9, r3, r0
 801bee0:	980c      	ldr	r0, [sp, #48]	; 0x30
 801bee2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801bee6:	940d      	str	r4, [sp, #52]	; 0x34
 801bee8:	fb0a 3300 	mla	r3, sl, r0, r3
 801beec:	fb0c 3304 	mla	r3, ip, r4, r3
 801bef0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bef4:	2b00      	cmp	r3, #0
 801bef6:	f000 80cc 	beq.w	801c092 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801befa:	9808      	ldr	r0, [sp, #32]
 801befc:	9c08      	ldr	r4, [sp, #32]
 801befe:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801bf02:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801bf06:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801bf0a:	f000 80d5 	beq.w	801c0b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bf0e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801bf12:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bf16:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bf1a:	fb09 f707 	mul.w	r7, r9, r7
 801bf1e:	fb0a fc0c 	mul.w	ip, sl, ip
 801bf22:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801bf26:	f107 0b20 	add.w	fp, r7, #32
 801bf2a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801bf2e:	44cc      	add	ip, r9
 801bf30:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801bf34:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bf38:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bf3c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bf40:	ea4c 0909 	orr.w	r9, ip, r9
 801bf44:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801bf48:	8847      	ldrh	r7, [r0, #2]
 801bf4a:	d019      	beq.n	801bf80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801bf4c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801bf50:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bf54:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bf58:	fb08 f807 	mul.w	r8, r8, r7
 801bf5c:	fb0a fc0c 	mul.w	ip, sl, ip
 801bf60:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801bf64:	f108 0b20 	add.w	fp, r8, #32
 801bf68:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801bf6c:	44bc      	add	ip, r7
 801bf6e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801bf72:	0a3f      	lsrs	r7, r7, #8
 801bf74:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bf78:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bf7c:	ea4c 0707 	orr.w	r7, ip, r7
 801bf80:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801bf84:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801bf88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bf8c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bf90:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf94:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801bf98:	ea4c 0909 	orr.w	r9, ip, r9
 801bf9c:	ea4a 0707 	orr.w	r7, sl, r7
 801bfa0:	2d00      	cmp	r5, #0
 801bfa2:	f000 808b 	beq.w	801c0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801bfa6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801bfaa:	3901      	subs	r1, #1
 801bfac:	0049      	lsls	r1, r1, #1
 801bfae:	3102      	adds	r1, #2
 801bfb0:	eb00 0c01 	add.w	ip, r0, r1
 801bfb4:	5a41      	ldrh	r1, [r0, r1]
 801bfb6:	980c      	ldr	r0, [sp, #48]	; 0x30
 801bfb8:	28ff      	cmp	r0, #255	; 0xff
 801bfba:	d019      	beq.n	801bff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801bfbc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801bfbe:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801bfc2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bfc6:	fb04 fa01 	mul.w	sl, r4, r1
 801bfca:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bfce:	fb08 f800 	mul.w	r8, r8, r0
 801bfd2:	f10a 0020 	add.w	r0, sl, #32
 801bfd6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801bfda:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801bfde:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bfe2:	4441      	add	r1, r8
 801bfe4:	0a00      	lsrs	r0, r0, #8
 801bfe6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801bfea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfee:	4301      	orrs	r1, r0
 801bff0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bff2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801bff6:	2cff      	cmp	r4, #255	; 0xff
 801bff8:	d01a      	beq.n	801c030 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801bffa:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801bffe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c002:	fb04 fa00 	mul.w	sl, r4, r0
 801c006:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c00a:	fb08 f80c 	mul.w	r8, r8, ip
 801c00e:	f10a 0c20 	add.w	ip, sl, #32
 801c012:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c016:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c01a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c01e:	4440      	add	r0, r8
 801c020:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c024:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c028:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c02c:	ea40 000c 	orr.w	r0, r0, ip
 801c030:	fb15 fc02 	smulbb	ip, r5, r2
 801c034:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c038:	f1c5 0810 	rsb	r8, r5, #16
 801c03c:	eba8 0802 	sub.w	r8, r8, r2
 801c040:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c044:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c048:	437a      	muls	r2, r7
 801c04a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c04e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c052:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c056:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c05a:	fb09 2208 	mla	r2, r9, r8, r2
 801c05e:	ea4a 0101 	orr.w	r1, sl, r1
 801c062:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c066:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c06a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c06e:	fb05 2201 	mla	r2, r5, r1, r2
 801c072:	ea4b 0000 	orr.w	r0, fp, r0
 801c076:	fb0c 2200 	mla	r2, ip, r0, r2
 801c07a:	0d57      	lsrs	r7, r2, #21
 801c07c:	0952      	lsrs	r2, r2, #5
 801c07e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c082:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c086:	433a      	orrs	r2, r7
 801c088:	2bff      	cmp	r3, #255	; 0xff
 801c08a:	b292      	uxth	r2, r2
 801c08c:	d127      	bne.n	801c0de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801c08e:	f8ae 2000 	strh.w	r2, [lr]
 801c092:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c094:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801c096:	4413      	add	r3, r2
 801c098:	931d      	str	r3, [sp, #116]	; 0x74
 801c09a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801c09c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c09e:	441a      	add	r2, r3
 801c0a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c0a2:	921e      	str	r2, [sp, #120]	; 0x78
 801c0a4:	3b01      	subs	r3, #1
 801c0a6:	f10e 0e02 	add.w	lr, lr, #2
 801c0aa:	930f      	str	r3, [sp, #60]	; 0x3c
 801c0ac:	e627      	b.n	801bcfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c0ae:	fb08 f000 	mul.w	r0, r8, r0
 801c0b2:	fb09 0303 	mla	r3, r9, r3, r0
 801c0b6:	e71b      	b.n	801bef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801c0b8:	46b9      	mov	r9, r7
 801c0ba:	e743      	b.n	801bf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801c0bc:	f1c2 0110 	rsb	r1, r2, #16
 801c0c0:	437a      	muls	r2, r7
 801c0c2:	fb09 2901 	mla	r9, r9, r1, r2
 801c0c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c0ca:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c0ce:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c0d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c0d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c0da:	4302      	orrs	r2, r0
 801c0dc:	e7d4      	b.n	801c088 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801c0de:	f8be 7000 	ldrh.w	r7, [lr]
 801c0e2:	4c1c      	ldr	r4, [pc, #112]	; (801c154 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801c0e4:	43db      	mvns	r3, r3
 801c0e6:	1238      	asrs	r0, r7, #8
 801c0e8:	fa5f fc83 	uxtb.w	ip, r3
 801c0ec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c0f0:	10fd      	asrs	r5, r7, #3
 801c0f2:	fb00 f00c 	mul.w	r0, r0, ip
 801c0f6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c0fa:	fb05 f10c 	mul.w	r1, r5, ip
 801c0fe:	1c45      	adds	r5, r0, #1
 801c100:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c104:	1215      	asrs	r5, r2, #8
 801c106:	f025 0507 	bic.w	r5, r5, #7
 801c10a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c10e:	1c4d      	adds	r5, r1, #1
 801c110:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801c114:	10d1      	asrs	r1, r2, #3
 801c116:	f021 0103 	bic.w	r1, r1, #3
 801c11a:	00fb      	lsls	r3, r7, #3
 801c11c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c120:	b2db      	uxtb	r3, r3
 801c122:	b2c0      	uxtb	r0, r0
 801c124:	00c9      	lsls	r1, r1, #3
 801c126:	fb03 f30c 	mul.w	r3, r3, ip
 801c12a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c12e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801c132:	4308      	orrs	r0, r1
 801c134:	1c59      	adds	r1, r3, #1
 801c136:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c13a:	00d2      	lsls	r2, r2, #3
 801c13c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c140:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801c144:	4318      	orrs	r0, r3
 801c146:	f8ae 0000 	strh.w	r0, [lr]
 801c14a:	e7a2      	b.n	801c092 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801c14c:	b013      	add	sp, #76	; 0x4c
 801c14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c152:	bf00      	nop
 801c154:	fffff800 	.word	0xfffff800

0801c158 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801c158:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c15c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801c160:	fb05 4c03 	mla	ip, r5, r3, r4
 801c164:	2d00      	cmp	r5, #0
 801c166:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801c16a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801c16e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801c172:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801c176:	8808      	ldrh	r0, [r1, #0]
 801c178:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801c17c:	f2c0 80a7 	blt.w	801c2ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c180:	45aa      	cmp	sl, r5
 801c182:	f340 80a4 	ble.w	801c2ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c186:	2c00      	cmp	r4, #0
 801c188:	f2c0 809f 	blt.w	801c2ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c18c:	42a3      	cmp	r3, r4
 801c18e:	f340 809c 	ble.w	801c2ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c192:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801c196:	1c62      	adds	r2, r4, #1
 801c198:	f100 809c 	bmi.w	801c2d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c19c:	4293      	cmp	r3, r2
 801c19e:	f340 8099 	ble.w	801c2d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c1a2:	f1b9 0f00 	cmp.w	r9, #0
 801c1a6:	f000 8095 	beq.w	801c2d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c1aa:	f8be c002 	ldrh.w	ip, [lr, #2]
 801c1ae:	3501      	adds	r5, #1
 801c1b0:	f100 8094 	bmi.w	801c2dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c1b4:	45aa      	cmp	sl, r5
 801c1b6:	f340 8091 	ble.w	801c2dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c1ba:	2f00      	cmp	r7, #0
 801c1bc:	f000 808e 	beq.w	801c2dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c1c0:	2c00      	cmp	r4, #0
 801c1c2:	f2c0 8089 	blt.w	801c2d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c1c6:	42a3      	cmp	r3, r4
 801c1c8:	f340 8086 	ble.w	801c2d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c1cc:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801c1d0:	3401      	adds	r4, #1
 801c1d2:	f100 8086 	bmi.w	801c2e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c1d6:	42a3      	cmp	r3, r4
 801c1d8:	f340 8083 	ble.w	801c2e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c1dc:	f1b9 0f00 	cmp.w	r9, #0
 801c1e0:	d07f      	beq.n	801c2e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c1e2:	3301      	adds	r3, #1
 801c1e4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801c1e8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c1ec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c1f0:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801c1f4:	fb19 fe07 	smulbb	lr, r9, r7
 801c1f8:	ea44 0808 	orr.w	r8, r4, r8
 801c1fc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c200:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c204:	f1c7 0210 	rsb	r2, r7, #16
 801c208:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c20c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c210:	ea44 0c0c 	orr.w	ip, r4, ip
 801c214:	eba2 0209 	sub.w	r2, r2, r9
 801c218:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c21c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c220:	fb04 f40c 	mul.w	r4, r4, ip
 801c224:	fb02 4808 	mla	r8, r2, r8, r4
 801c228:	041a      	lsls	r2, r3, #16
 801c22a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c22e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c232:	4313      	orrs	r3, r2
 801c234:	042a      	lsls	r2, r5, #16
 801c236:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c23a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c23e:	fb0e 8303 	mla	r3, lr, r3, r8
 801c242:	432a      	orrs	r2, r5
 801c244:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801c248:	fb07 3202 	mla	r2, r7, r2, r3
 801c24c:	0d53      	lsrs	r3, r2, #21
 801c24e:	0952      	lsrs	r2, r2, #5
 801c250:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c254:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c258:	431a      	orrs	r2, r3
 801c25a:	b293      	uxth	r3, r2
 801c25c:	b2b4      	uxth	r4, r6
 801c25e:	1202      	asrs	r2, r0, #8
 801c260:	43f6      	mvns	r6, r6
 801c262:	b2f6      	uxtb	r6, r6
 801c264:	121d      	asrs	r5, r3, #8
 801c266:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c26a:	fb12 f206 	smulbb	r2, r2, r6
 801c26e:	10c7      	asrs	r7, r0, #3
 801c270:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c274:	00c0      	lsls	r0, r0, #3
 801c276:	fb05 2504 	mla	r5, r5, r4, r2
 801c27a:	b2c0      	uxtb	r0, r0
 801c27c:	10da      	asrs	r2, r3, #3
 801c27e:	00db      	lsls	r3, r3, #3
 801c280:	b2db      	uxtb	r3, r3
 801c282:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c286:	fb10 f006 	smulbb	r0, r0, r6
 801c28a:	b2ad      	uxth	r5, r5
 801c28c:	fb03 0004 	mla	r0, r3, r4, r0
 801c290:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c294:	fb17 f706 	smulbb	r7, r7, r6
 801c298:	b280      	uxth	r0, r0
 801c29a:	1c6b      	adds	r3, r5, #1
 801c29c:	fb02 7204 	mla	r2, r2, r4, r7
 801c2a0:	b292      	uxth	r2, r2
 801c2a2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c2a6:	1c43      	adds	r3, r0, #1
 801c2a8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c2ac:	1c50      	adds	r0, r2, #1
 801c2ae:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c2b2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c2b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c2ba:	0952      	lsrs	r2, r2, #5
 801c2bc:	432b      	orrs	r3, r5
 801c2be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c2c2:	4313      	orrs	r3, r2
 801c2c4:	800b      	strh	r3, [r1, #0]
 801c2c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c2ca:	4680      	mov	r8, r0
 801c2cc:	e763      	b.n	801c196 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801c2ce:	4684      	mov	ip, r0
 801c2d0:	4680      	mov	r8, r0
 801c2d2:	e76c      	b.n	801c1ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801c2d4:	4684      	mov	ip, r0
 801c2d6:	e76a      	b.n	801c1ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801c2d8:	4605      	mov	r5, r0
 801c2da:	e779      	b.n	801c1d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801c2dc:	4603      	mov	r3, r0
 801c2de:	4605      	mov	r5, r0
 801c2e0:	e782      	b.n	801c1e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801c2e2:	4603      	mov	r3, r0
 801c2e4:	e780      	b.n	801c1e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801c2e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c2e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2ea:	b093      	sub	sp, #76	; 0x4c
 801c2ec:	461d      	mov	r5, r3
 801c2ee:	9210      	str	r2, [sp, #64]	; 0x40
 801c2f0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c2f2:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801c2f6:	920b      	str	r2, [sp, #44]	; 0x2c
 801c2f8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801c2fc:	910a      	str	r1, [sp, #40]	; 0x28
 801c2fe:	6859      	ldr	r1, [r3, #4]
 801c300:	681b      	ldr	r3, [r3, #0]
 801c302:	9011      	str	r0, [sp, #68]	; 0x44
 801c304:	fb01 2707 	mla	r7, r1, r7, r2
 801c308:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801c30c:	9307      	str	r3, [sp, #28]
 801c30e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c310:	681b      	ldr	r3, [r3, #0]
 801c312:	9309      	str	r3, [sp, #36]	; 0x24
 801c314:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c316:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801c31a:	43db      	mvns	r3, r3
 801c31c:	b2db      	uxtb	r3, r3
 801c31e:	9308      	str	r3, [sp, #32]
 801c320:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c322:	2b00      	cmp	r3, #0
 801c324:	dc03      	bgt.n	801c32e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c326:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c328:	2b00      	cmp	r3, #0
 801c32a:	f340 8203 	ble.w	801c734 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c32e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c330:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c334:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c338:	1e48      	subs	r0, r1, #1
 801c33a:	f102 3cff 	add.w	ip, r2, #4294967295
 801c33e:	2d00      	cmp	r5, #0
 801c340:	f340 80da 	ble.w	801c4f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801c344:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c348:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c34c:	d406      	bmi.n	801c35c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c34e:	4586      	cmp	lr, r0
 801c350:	da04      	bge.n	801c35c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c352:	2b00      	cmp	r3, #0
 801c354:	db02      	blt.n	801c35c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c356:	4563      	cmp	r3, ip
 801c358:	f2c0 80cf 	blt.w	801c4fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c35c:	f11e 0e01 	adds.w	lr, lr, #1
 801c360:	f100 80c1 	bmi.w	801c4e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c364:	4571      	cmp	r1, lr
 801c366:	f2c0 80be 	blt.w	801c4e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c36a:	3301      	adds	r3, #1
 801c36c:	f100 80bb 	bmi.w	801c4e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c370:	429a      	cmp	r2, r3
 801c372:	f2c0 80b8 	blt.w	801c4e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c376:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801c37a:	46a9      	mov	r9, r5
 801c37c:	f1b9 0f00 	cmp.w	r9, #0
 801c380:	f340 80d8 	ble.w	801c534 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801c384:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c386:	1421      	asrs	r1, r4, #16
 801c388:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c38c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c390:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c394:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801c398:	f100 8111 	bmi.w	801c5be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c39c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801c3a0:	4551      	cmp	r1, sl
 801c3a2:	f280 810c 	bge.w	801c5be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c3a6:	2800      	cmp	r0, #0
 801c3a8:	f2c0 8109 	blt.w	801c5be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c3ac:	f103 3aff 	add.w	sl, r3, #4294967295
 801c3b0:	4550      	cmp	r0, sl
 801c3b2:	f280 8104 	bge.w	801c5be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c3b6:	fa0f f38e 	sxth.w	r3, lr
 801c3ba:	fb00 1103 	mla	r1, r0, r3, r1
 801c3be:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c3c0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801c3c4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801c3c8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801c3cc:	f1bc 0f00 	cmp.w	ip, #0
 801c3d0:	d007      	beq.n	801c3e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801c3d2:	005b      	lsls	r3, r3, #1
 801c3d4:	eb0a 0003 	add.w	r0, sl, r3
 801c3d8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801c3dc:	930c      	str	r3, [sp, #48]	; 0x30
 801c3de:	8843      	ldrh	r3, [r0, #2]
 801c3e0:	930d      	str	r3, [sp, #52]	; 0x34
 801c3e2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801c3e6:	fb12 f30c 	smulbb	r3, r2, ip
 801c3ea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c3ee:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c3f2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c3f6:	10db      	asrs	r3, r3, #3
 801c3f8:	ea40 000e 	orr.w	r0, r0, lr
 801c3fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c400:	f1cc 0e10 	rsb	lr, ip, #16
 801c404:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c408:	ebae 0e02 	sub.w	lr, lr, r2
 801c40c:	ea4a 0101 	orr.w	r1, sl, r1
 801c410:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c414:	4351      	muls	r1, r2
 801c416:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c418:	9f08      	ldr	r7, [sp, #32]
 801c41a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801c41e:	fb0e 1e00 	mla	lr, lr, r0, r1
 801c422:	0410      	lsls	r0, r2, #16
 801c424:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c428:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c42c:	4310      	orrs	r0, r2
 801c42e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c430:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c432:	0412      	lsls	r2, r2, #16
 801c434:	fb03 e000 	mla	r0, r3, r0, lr
 801c438:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c43c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801c440:	ea42 020e 	orr.w	r2, r2, lr
 801c444:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c448:	fb03 0302 	mla	r3, r3, r2, r0
 801c44c:	0d5a      	lsrs	r2, r3, #21
 801c44e:	095b      	lsrs	r3, r3, #5
 801c450:	f8b8 0000 	ldrh.w	r0, [r8]
 801c454:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c458:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c45c:	4313      	orrs	r3, r2
 801c45e:	b29b      	uxth	r3, r3
 801c460:	1201      	asrs	r1, r0, #8
 801c462:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801c466:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c46a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c46e:	fb11 f107 	smulbb	r1, r1, r7
 801c472:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801c476:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c47a:	00c0      	lsls	r0, r0, #3
 801c47c:	fb0c 1c02 	mla	ip, ip, r2, r1
 801c480:	b2c0      	uxtb	r0, r0
 801c482:	10d9      	asrs	r1, r3, #3
 801c484:	00db      	lsls	r3, r3, #3
 801c486:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c48a:	b2db      	uxtb	r3, r3
 801c48c:	fb10 f007 	smulbb	r0, r0, r7
 801c490:	fa1f fc8c 	uxth.w	ip, ip
 801c494:	fb03 0302 	mla	r3, r3, r2, r0
 801c498:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c49c:	fb1e fe07 	smulbb	lr, lr, r7
 801c4a0:	fb01 e102 	mla	r1, r1, r2, lr
 801c4a4:	b29a      	uxth	r2, r3
 801c4a6:	f10c 0301 	add.w	r3, ip, #1
 801c4aa:	b289      	uxth	r1, r1
 801c4ac:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c4b0:	1c53      	adds	r3, r2, #1
 801c4b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c4b6:	1c4a      	adds	r2, r1, #1
 801c4b8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c4bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c4c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c4c4:	0949      	lsrs	r1, r1, #5
 801c4c6:	ea43 030c 	orr.w	r3, r3, ip
 801c4ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c4ce:	430b      	orrs	r3, r1
 801c4d0:	f8a8 3000 	strh.w	r3, [r8]
 801c4d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c4d6:	441c      	add	r4, r3
 801c4d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4da:	f108 0802 	add.w	r8, r8, #2
 801c4de:	441e      	add	r6, r3
 801c4e0:	f109 39ff 	add.w	r9, r9, #4294967295
 801c4e4:	e74a      	b.n	801c37c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c4e6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c4e8:	441c      	add	r4, r3
 801c4ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4ec:	441e      	add	r6, r3
 801c4ee:	9b07      	ldr	r3, [sp, #28]
 801c4f0:	3302      	adds	r3, #2
 801c4f2:	3d01      	subs	r5, #1
 801c4f4:	9307      	str	r3, [sp, #28]
 801c4f6:	e722      	b.n	801c33e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c4f8:	d022      	beq.n	801c540 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801c4fa:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801c4fc:	1e6b      	subs	r3, r5, #1
 801c4fe:	fb00 4003 	mla	r0, r0, r3, r4
 801c502:	1400      	asrs	r0, r0, #16
 801c504:	f53f af37 	bmi.w	801c376 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c508:	3901      	subs	r1, #1
 801c50a:	4288      	cmp	r0, r1
 801c50c:	f6bf af33 	bge.w	801c376 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c510:	9920      	ldr	r1, [sp, #128]	; 0x80
 801c512:	fb01 6303 	mla	r3, r1, r3, r6
 801c516:	141b      	asrs	r3, r3, #16
 801c518:	f53f af2d 	bmi.w	801c376 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c51c:	3a01      	subs	r2, #1
 801c51e:	4293      	cmp	r3, r2
 801c520:	f6bf af29 	bge.w	801c376 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c524:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801c528:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801c52c:	46a8      	mov	r8, r5
 801c52e:	f1b8 0f00 	cmp.w	r8, #0
 801c532:	dc5e      	bgt.n	801c5f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c534:	9b07      	ldr	r3, [sp, #28]
 801c536:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c53a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c53e:	9307      	str	r3, [sp, #28]
 801c540:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c542:	2b00      	cmp	r3, #0
 801c544:	f340 80f6 	ble.w	801c734 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c548:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c54c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c550:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c554:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c556:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c55a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c55e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c562:	eef0 6a62 	vmov.f32	s13, s5
 801c566:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c56a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c56e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c572:	ee16 4a90 	vmov	r4, s13
 801c576:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c57a:	eef0 6a43 	vmov.f32	s13, s6
 801c57e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c582:	ee12 2a90 	vmov	r2, s5
 801c586:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c58a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c58e:	ee13 2a10 	vmov	r2, s6
 801c592:	931f      	str	r3, [sp, #124]	; 0x7c
 801c594:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c596:	fb92 f3f3 	sdiv	r3, r2, r3
 801c59a:	9320      	str	r3, [sp, #128]	; 0x80
 801c59c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c59e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c5a0:	3b01      	subs	r3, #1
 801c5a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c5a6:	930a      	str	r3, [sp, #40]	; 0x28
 801c5a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c5aa:	ee16 6a90 	vmov	r6, s13
 801c5ae:	bf14      	ite	ne
 801c5b0:	461d      	movne	r5, r3
 801c5b2:	4615      	moveq	r5, r2
 801c5b4:	eeb0 3a67 	vmov.f32	s6, s15
 801c5b8:	eef0 2a47 	vmov.f32	s5, s14
 801c5bc:	e6b0      	b.n	801c320 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c5be:	f111 0a01 	adds.w	sl, r1, #1
 801c5c2:	d487      	bmi.n	801c4d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c5c4:	45d6      	cmp	lr, sl
 801c5c6:	db85      	blt.n	801c4d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c5c8:	f110 0a01 	adds.w	sl, r0, #1
 801c5cc:	d482      	bmi.n	801c4d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c5ce:	4553      	cmp	r3, sl
 801c5d0:	db80      	blt.n	801c4d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c5d2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801c5d4:	9101      	str	r1, [sp, #4]
 801c5d6:	b21b      	sxth	r3, r3
 801c5d8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801c5dc:	9300      	str	r3, [sp, #0]
 801c5de:	e9cd c704 	strd	ip, r7, [sp, #16]
 801c5e2:	fa0f f38e 	sxth.w	r3, lr
 801c5e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c5e8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c5ea:	4641      	mov	r1, r8
 801c5ec:	f7ff fdb4 	bl	801c158 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801c5f0:	e770      	b.n	801c4d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c5f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c5f4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c5f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5fa:	1430      	asrs	r0, r6, #16
 801c5fc:	1423      	asrs	r3, r4, #16
 801c5fe:	fb01 3000 	mla	r0, r1, r0, r3
 801c602:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c604:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801c608:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801c60c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801c610:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c614:	8858      	ldrh	r0, [r3, #2]
 801c616:	f1be 0f00 	cmp.w	lr, #0
 801c61a:	d00b      	beq.n	801c634 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801c61c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c620:	3901      	subs	r1, #1
 801c622:	0049      	lsls	r1, r1, #1
 801c624:	3102      	adds	r1, #2
 801c626:	eb03 0b01 	add.w	fp, r3, r1
 801c62a:	5a5b      	ldrh	r3, [r3, r1]
 801c62c:	930e      	str	r3, [sp, #56]	; 0x38
 801c62e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c632:	930f      	str	r3, [sp, #60]	; 0x3c
 801c634:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801c638:	fb12 f30e 	smulbb	r3, r2, lr
 801c63c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c640:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c644:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801c648:	10db      	asrs	r3, r3, #3
 801c64a:	ea41 010c 	orr.w	r1, r1, ip
 801c64e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c652:	f1ce 0c10 	rsb	ip, lr, #16
 801c656:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c65a:	ebac 0c02 	sub.w	ip, ip, r2
 801c65e:	ea4b 0000 	orr.w	r0, fp, r0
 801c662:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c666:	4350      	muls	r0, r2
 801c668:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c66a:	9f08      	ldr	r7, [sp, #32]
 801c66c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801c670:	fb0c 0c01 	mla	ip, ip, r1, r0
 801c674:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801c678:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801c67c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c67e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c680:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c684:	0412      	lsls	r2, r2, #16
 801c686:	ea4b 0101 	orr.w	r1, fp, r1
 801c68a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c68e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c692:	fb03 c101 	mla	r1, r3, r1, ip
 801c696:	4302      	orrs	r2, r0
 801c698:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801c69c:	fb03 1202 	mla	r2, r3, r2, r1
 801c6a0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801c6a4:	0952      	lsrs	r2, r2, #5
 801c6a6:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801c6aa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801c6ae:	f8b9 2000 	ldrh.w	r2, [r9]
 801c6b2:	ea4b 0303 	orr.w	r3, fp, r3
 801c6b6:	b29b      	uxth	r3, r3
 801c6b8:	1211      	asrs	r1, r2, #8
 801c6ba:	1218      	asrs	r0, r3, #8
 801c6bc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c6c0:	fb11 f107 	smulbb	r1, r1, r7
 801c6c4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801c6c8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c6cc:	00d2      	lsls	r2, r2, #3
 801c6ce:	fb00 100a 	mla	r0, r0, sl, r1
 801c6d2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c6d6:	10d9      	asrs	r1, r3, #3
 801c6d8:	b2d2      	uxtb	r2, r2
 801c6da:	00db      	lsls	r3, r3, #3
 801c6dc:	fb1c fc07 	smulbb	ip, ip, r7
 801c6e0:	fb12 f207 	smulbb	r2, r2, r7
 801c6e4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c6e8:	b2db      	uxtb	r3, r3
 801c6ea:	b280      	uxth	r0, r0
 801c6ec:	fb01 c10a 	mla	r1, r1, sl, ip
 801c6f0:	fb03 230a 	mla	r3, r3, sl, r2
 801c6f4:	b29b      	uxth	r3, r3
 801c6f6:	b289      	uxth	r1, r1
 801c6f8:	1c42      	adds	r2, r0, #1
 801c6fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c6fe:	f101 0c01 	add.w	ip, r1, #1
 801c702:	1c5a      	adds	r2, r3, #1
 801c704:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c708:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c70c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c70e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c712:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c716:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c71a:	4310      	orrs	r0, r2
 801c71c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c720:	441c      	add	r4, r3
 801c722:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c724:	ea40 000c 	orr.w	r0, r0, ip
 801c728:	f829 0b02 	strh.w	r0, [r9], #2
 801c72c:	441e      	add	r6, r3
 801c72e:	f108 38ff 	add.w	r8, r8, #4294967295
 801c732:	e6fc      	b.n	801c52e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801c734:	b013      	add	sp, #76	; 0x4c
 801c736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c73a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801c73a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c73e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801c742:	fb0e 4703 	mla	r7, lr, r3, r4
 801c746:	f1be 0f00 	cmp.w	lr, #0
 801c74a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801c74e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801c752:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801c756:	8808      	ldrh	r0, [r1, #0]
 801c758:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801c75c:	db60      	blt.n	801c820 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801c75e:	45f1      	cmp	r9, lr
 801c760:	dd5e      	ble.n	801c820 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801c762:	2c00      	cmp	r4, #0
 801c764:	db5a      	blt.n	801c81c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801c766:	42a3      	cmp	r3, r4
 801c768:	dd58      	ble.n	801c81c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801c76a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801c76e:	1c62      	adds	r2, r4, #1
 801c770:	d459      	bmi.n	801c826 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801c772:	4293      	cmp	r3, r2
 801c774:	dd57      	ble.n	801c826 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801c776:	2d00      	cmp	r5, #0
 801c778:	d055      	beq.n	801c826 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801c77a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801c77e:	f11e 0e01 	adds.w	lr, lr, #1
 801c782:	d454      	bmi.n	801c82e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801c784:	45f1      	cmp	r9, lr
 801c786:	dd52      	ble.n	801c82e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801c788:	2e00      	cmp	r6, #0
 801c78a:	d050      	beq.n	801c82e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801c78c:	2c00      	cmp	r4, #0
 801c78e:	db4c      	blt.n	801c82a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801c790:	42a3      	cmp	r3, r4
 801c792:	dd4a      	ble.n	801c82a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801c794:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801c798:	3401      	adds	r4, #1
 801c79a:	d405      	bmi.n	801c7a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801c79c:	42a3      	cmp	r3, r4
 801c79e:	dd03      	ble.n	801c7a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801c7a0:	b115      	cbz	r5, 801c7a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801c7a2:	3301      	adds	r3, #1
 801c7a4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801c7a8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801c7ac:	fb15 f406 	smulbb	r4, r5, r6
 801c7b0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c7b4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801c7b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c7bc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801c7c0:	ea43 0c0c 	orr.w	ip, r3, ip
 801c7c4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c7c8:	f1c6 0310 	rsb	r3, r6, #16
 801c7cc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c7d0:	1b5b      	subs	r3, r3, r5
 801c7d2:	ea4e 0707 	orr.w	r7, lr, r7
 801c7d6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801c7da:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801c7de:	437d      	muls	r5, r7
 801c7e0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801c7e4:	0403      	lsls	r3, r0, #16
 801c7e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c7ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c7ee:	4318      	orrs	r0, r3
 801c7f0:	0413      	lsls	r3, r2, #16
 801c7f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c7f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c7fa:	4313      	orrs	r3, r2
 801c7fc:	fb04 c000 	mla	r0, r4, r0, ip
 801c800:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801c804:	fb06 0003 	mla	r0, r6, r3, r0
 801c808:	0d43      	lsrs	r3, r0, #21
 801c80a:	0940      	lsrs	r0, r0, #5
 801c80c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c810:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c814:	4318      	orrs	r0, r3
 801c816:	8008      	strh	r0, [r1, #0]
 801c818:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c81c:	4684      	mov	ip, r0
 801c81e:	e7a6      	b.n	801c76e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801c820:	4607      	mov	r7, r0
 801c822:	4684      	mov	ip, r0
 801c824:	e7ab      	b.n	801c77e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801c826:	4607      	mov	r7, r0
 801c828:	e7a9      	b.n	801c77e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801c82a:	4602      	mov	r2, r0
 801c82c:	e7b4      	b.n	801c798 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801c82e:	4602      	mov	r2, r0
 801c830:	e7ba      	b.n	801c7a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801c832 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c832:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c836:	b08f      	sub	sp, #60	; 0x3c
 801c838:	461d      	mov	r5, r3
 801c83a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c83c:	920c      	str	r2, [sp, #48]	; 0x30
 801c83e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801c842:	9107      	str	r1, [sp, #28]
 801c844:	6859      	ldr	r1, [r3, #4]
 801c846:	681b      	ldr	r3, [r3, #0]
 801c848:	900d      	str	r0, [sp, #52]	; 0x34
 801c84a:	fb01 2707 	mla	r7, r1, r7, r2
 801c84e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801c852:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c854:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801c858:	f8d3 8000 	ldr.w	r8, [r3]
 801c85c:	9b07      	ldr	r3, [sp, #28]
 801c85e:	2b00      	cmp	r3, #0
 801c860:	dc03      	bgt.n	801c86a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c862:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c864:	2b00      	cmp	r3, #0
 801c866:	f340 8181 	ble.w	801cb6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801c86a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c86c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c870:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c874:	1e48      	subs	r0, r1, #1
 801c876:	f102 3cff 	add.w	ip, r2, #4294967295
 801c87a:	2d00      	cmp	r5, #0
 801c87c:	f340 809b 	ble.w	801c9b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801c880:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c884:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c888:	d406      	bmi.n	801c898 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c88a:	4586      	cmp	lr, r0
 801c88c:	da04      	bge.n	801c898 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c88e:	2b00      	cmp	r3, #0
 801c890:	db02      	blt.n	801c898 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c892:	4563      	cmp	r3, ip
 801c894:	f2c0 8090 	blt.w	801c9b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c898:	f11e 0e01 	adds.w	lr, lr, #1
 801c89c:	f100 8084 	bmi.w	801c9a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c8a0:	4571      	cmp	r1, lr
 801c8a2:	f2c0 8081 	blt.w	801c9a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c8a6:	3301      	adds	r3, #1
 801c8a8:	d47e      	bmi.n	801c9a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c8aa:	429a      	cmp	r2, r3
 801c8ac:	db7c      	blt.n	801c9a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c8ae:	46aa      	mov	sl, r5
 801c8b0:	46b9      	mov	r9, r7
 801c8b2:	f1ba 0f00 	cmp.w	sl, #0
 801c8b6:	f340 8099 	ble.w	801c9ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801c8ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c8bc:	1421      	asrs	r1, r4, #16
 801c8be:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c8c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c8c6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c8ca:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801c8ce:	f100 80d0 	bmi.w	801ca72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801c8d2:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c8d6:	4559      	cmp	r1, fp
 801c8d8:	f280 80cb 	bge.w	801ca72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801c8dc:	2800      	cmp	r0, #0
 801c8de:	f2c0 80c8 	blt.w	801ca72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801c8e2:	f103 3bff 	add.w	fp, r3, #4294967295
 801c8e6:	4558      	cmp	r0, fp
 801c8e8:	f280 80c3 	bge.w	801ca72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801c8ec:	fa0f fe8e 	sxth.w	lr, lr
 801c8f0:	fb00 110e 	mla	r1, r0, lr, r1
 801c8f4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801c8f8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801c8fc:	8841      	ldrh	r1, [r0, #2]
 801c8fe:	f1bc 0f00 	cmp.w	ip, #0
 801c902:	d00b      	beq.n	801c91c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801c904:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801c908:	3b01      	subs	r3, #1
 801c90a:	005b      	lsls	r3, r3, #1
 801c90c:	3302      	adds	r3, #2
 801c90e:	eb00 0e03 	add.w	lr, r0, r3
 801c912:	5ac3      	ldrh	r3, [r0, r3]
 801c914:	9308      	str	r3, [sp, #32]
 801c916:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801c91a:	9309      	str	r3, [sp, #36]	; 0x24
 801c91c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801c920:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c924:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c928:	ea40 000b 	orr.w	r0, r0, fp
 801c92c:	fb12 f30c 	smulbb	r3, r2, ip
 801c930:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c934:	10db      	asrs	r3, r3, #3
 801c936:	f1cc 0e10 	rsb	lr, ip, #16
 801c93a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c93e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c942:	ebae 0e02 	sub.w	lr, lr, r2
 801c946:	ea4b 0101 	orr.w	r1, fp, r1
 801c94a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c94e:	4351      	muls	r1, r2
 801c950:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c952:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801c956:	fb0e 1e00 	mla	lr, lr, r0, r1
 801c95a:	0410      	lsls	r0, r2, #16
 801c95c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c960:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c964:	4310      	orrs	r0, r2
 801c966:	9a08      	ldr	r2, [sp, #32]
 801c968:	9908      	ldr	r1, [sp, #32]
 801c96a:	0412      	lsls	r2, r2, #16
 801c96c:	fb03 e000 	mla	r0, r3, r0, lr
 801c970:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c974:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801c978:	ea42 020e 	orr.w	r2, r2, lr
 801c97c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c980:	fb03 0302 	mla	r3, r3, r2, r0
 801c984:	0d5a      	lsrs	r2, r3, #21
 801c986:	095b      	lsrs	r3, r3, #5
 801c988:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c98c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c990:	4313      	orrs	r3, r2
 801c992:	f8a9 3000 	strh.w	r3, [r9]
 801c996:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c998:	441c      	add	r4, r3
 801c99a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c99c:	f109 0902 	add.w	r9, r9, #2
 801c9a0:	441e      	add	r6, r3
 801c9a2:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c9a6:	e784      	b.n	801c8b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c9a8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c9aa:	441c      	add	r4, r3
 801c9ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c9ae:	3d01      	subs	r5, #1
 801c9b0:	441e      	add	r6, r3
 801c9b2:	3702      	adds	r7, #2
 801c9b4:	e761      	b.n	801c87a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c9b6:	d01d      	beq.n	801c9f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c9b8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801c9ba:	1e6b      	subs	r3, r5, #1
 801c9bc:	fb00 4003 	mla	r0, r0, r3, r4
 801c9c0:	1400      	asrs	r0, r0, #16
 801c9c2:	f53f af74 	bmi.w	801c8ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c9c6:	3901      	subs	r1, #1
 801c9c8:	4288      	cmp	r0, r1
 801c9ca:	f6bf af70 	bge.w	801c8ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c9ce:	991c      	ldr	r1, [sp, #112]	; 0x70
 801c9d0:	fb01 6303 	mla	r3, r1, r3, r6
 801c9d4:	141b      	asrs	r3, r3, #16
 801c9d6:	f53f af6a 	bmi.w	801c8ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c9da:	3a01      	subs	r2, #1
 801c9dc:	4293      	cmp	r3, r2
 801c9de:	f6bf af66 	bge.w	801c8ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c9e2:	46a9      	mov	r9, r5
 801c9e4:	46ba      	mov	sl, r7
 801c9e6:	f1b9 0f00 	cmp.w	r9, #0
 801c9ea:	dc5a      	bgt.n	801caa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801c9ec:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c9f0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801c9f4:	9b07      	ldr	r3, [sp, #28]
 801c9f6:	2b00      	cmp	r3, #0
 801c9f8:	f340 80b8 	ble.w	801cb6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801c9fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca00:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ca04:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ca08:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ca0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca16:	eef0 6a62 	vmov.f32	s13, s5
 801ca1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca22:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca26:	ee16 4a90 	vmov	r4, s13
 801ca2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca2e:	eef0 6a43 	vmov.f32	s13, s6
 801ca32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca36:	ee12 2a90 	vmov	r2, s5
 801ca3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca42:	ee13 2a10 	vmov	r2, s6
 801ca46:	931b      	str	r3, [sp, #108]	; 0x6c
 801ca48:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ca4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca4e:	931c      	str	r3, [sp, #112]	; 0x70
 801ca50:	9b07      	ldr	r3, [sp, #28]
 801ca52:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ca54:	3b01      	subs	r3, #1
 801ca56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca5a:	9307      	str	r3, [sp, #28]
 801ca5c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ca5e:	ee16 6a90 	vmov	r6, s13
 801ca62:	bf14      	ite	ne
 801ca64:	461d      	movne	r5, r3
 801ca66:	4615      	moveq	r5, r2
 801ca68:	eeb0 3a67 	vmov.f32	s6, s15
 801ca6c:	eef0 2a47 	vmov.f32	s5, s14
 801ca70:	e6f4      	b.n	801c85c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ca72:	f111 0b01 	adds.w	fp, r1, #1
 801ca76:	d48e      	bmi.n	801c996 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ca78:	45de      	cmp	lr, fp
 801ca7a:	db8c      	blt.n	801c996 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ca7c:	f110 0b01 	adds.w	fp, r0, #1
 801ca80:	d489      	bmi.n	801c996 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ca82:	455b      	cmp	r3, fp
 801ca84:	db87      	blt.n	801c996 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ca86:	b21b      	sxth	r3, r3
 801ca88:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ca8c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ca90:	9300      	str	r3, [sp, #0]
 801ca92:	4642      	mov	r2, r8
 801ca94:	fa0f f38e 	sxth.w	r3, lr
 801ca98:	4649      	mov	r1, r9
 801ca9a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ca9c:	f7ff fe4d 	bl	801c73a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801caa0:	e779      	b.n	801c996 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801caa2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801caa4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801caa8:	1420      	asrs	r0, r4, #16
 801caaa:	1431      	asrs	r1, r6, #16
 801caac:	fb03 0101 	mla	r1, r3, r1, r0
 801cab0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801cab4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801cab8:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801cabc:	8841      	ldrh	r1, [r0, #2]
 801cabe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cac2:	f1be 0f00 	cmp.w	lr, #0
 801cac6:	d00b      	beq.n	801cae0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801cac8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801cacc:	3b01      	subs	r3, #1
 801cace:	005b      	lsls	r3, r3, #1
 801cad0:	3302      	adds	r3, #2
 801cad2:	eb00 0b03 	add.w	fp, r0, r3
 801cad6:	5ac3      	ldrh	r3, [r0, r3]
 801cad8:	930a      	str	r3, [sp, #40]	; 0x28
 801cada:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cade:	930b      	str	r3, [sp, #44]	; 0x2c
 801cae0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801cae4:	fb12 f30e 	smulbb	r3, r2, lr
 801cae8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801caec:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801caf0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801caf4:	10db      	asrs	r3, r3, #3
 801caf6:	ea40 000c 	orr.w	r0, r0, ip
 801cafa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cafe:	f1ce 0c10 	rsb	ip, lr, #16
 801cb02:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cb06:	ebac 0c02 	sub.w	ip, ip, r2
 801cb0a:	ea4b 0101 	orr.w	r1, fp, r1
 801cb0e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cb12:	4351      	muls	r1, r2
 801cb14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801cb16:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801cb1a:	fb0c 1c00 	mla	ip, ip, r0, r1
 801cb1e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801cb22:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801cb26:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cb28:	990a      	ldr	r1, [sp, #40]	; 0x28
 801cb2a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cb2e:	0412      	lsls	r2, r2, #16
 801cb30:	ea4b 0000 	orr.w	r0, fp, r0
 801cb34:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801cb38:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801cb3c:	fb03 c000 	mla	r0, r3, r0, ip
 801cb40:	ea42 0b0b 	orr.w	fp, r2, fp
 801cb44:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801cb48:	fb03 000b 	mla	r0, r3, fp, r0
 801cb4c:	0d43      	lsrs	r3, r0, #21
 801cb4e:	0940      	lsrs	r0, r0, #5
 801cb50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cb54:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cb58:	4318      	orrs	r0, r3
 801cb5a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801cb5c:	f82a 0b02 	strh.w	r0, [sl], #2
 801cb60:	441c      	add	r4, r3
 801cb62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cb64:	f109 39ff 	add.w	r9, r9, #4294967295
 801cb68:	441e      	add	r6, r3
 801cb6a:	e73c      	b.n	801c9e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801cb6c:	b00f      	add	sp, #60	; 0x3c
 801cb6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cb72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801cb72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb76:	b085      	sub	sp, #20
 801cb78:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801cb7c:	9102      	str	r1, [sp, #8]
 801cb7e:	2c00      	cmp	r4, #0
 801cb80:	fb04 7103 	mla	r1, r4, r3, r7
 801cb84:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801cb88:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801cb8c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801cb90:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801cb94:	f2c0 811b 	blt.w	801cdce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801cb98:	45a6      	cmp	lr, r4
 801cb9a:	f340 8118 	ble.w	801cdce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801cb9e:	2f00      	cmp	r7, #0
 801cba0:	f2c0 8113 	blt.w	801cdca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801cba4:	42bb      	cmp	r3, r7
 801cba6:	f340 8110 	ble.w	801cdca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801cbaa:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801cbae:	1c7a      	adds	r2, r7, #1
 801cbb0:	f100 8110 	bmi.w	801cdd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801cbb4:	4293      	cmp	r3, r2
 801cbb6:	f340 810d 	ble.w	801cdd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801cbba:	2e00      	cmp	r6, #0
 801cbbc:	f000 810c 	beq.w	801cdd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801cbc0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801cbc4:	3401      	adds	r4, #1
 801cbc6:	f100 810b 	bmi.w	801cde0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801cbca:	45a6      	cmp	lr, r4
 801cbcc:	f340 8108 	ble.w	801cde0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801cbd0:	2800      	cmp	r0, #0
 801cbd2:	f000 8108 	beq.w	801cde6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801cbd6:	2f00      	cmp	r7, #0
 801cbd8:	f2c0 8100 	blt.w	801cddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801cbdc:	42bb      	cmp	r3, r7
 801cbde:	f340 80fd 	ble.w	801cddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801cbe2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801cbe6:	3701      	adds	r7, #1
 801cbe8:	f100 8100 	bmi.w	801cdec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801cbec:	42bb      	cmp	r3, r7
 801cbee:	f340 80fd 	ble.w	801cdec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801cbf2:	2e00      	cmp	r6, #0
 801cbf4:	f000 80fc 	beq.w	801cdf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801cbf8:	3301      	adds	r3, #1
 801cbfa:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801cbfe:	b2b6      	uxth	r6, r6
 801cc00:	b280      	uxth	r0, r0
 801cc02:	fb00 fe06 	mul.w	lr, r0, r6
 801cc06:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801cc0a:	0136      	lsls	r6, r6, #4
 801cc0c:	eba6 070e 	sub.w	r7, r6, lr
 801cc10:	b280      	uxth	r0, r0
 801cc12:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801cc16:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801cc1a:	b2bf      	uxth	r7, r7
 801cc1c:	1a1b      	subs	r3, r3, r0
 801cc1e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801cc22:	b29b      	uxth	r3, r3
 801cc24:	fb0a f607 	mul.w	r6, sl, r7
 801cc28:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801cc2c:	fb0b 6603 	mla	r6, fp, r3, r6
 801cc30:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801cc34:	fb00 6609 	mla	r6, r0, r9, r6
 801cc38:	fb0e 6608 	mla	r6, lr, r8, r6
 801cc3c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801cc40:	9600      	str	r6, [sp, #0]
 801cc42:	2e00      	cmp	r6, #0
 801cc44:	f000 80be 	beq.w	801cdc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801cc48:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801cc4c:	fb0b fc0c 	mul.w	ip, fp, ip
 801cc50:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801cc54:	fb0b f505 	mul.w	r5, fp, r5
 801cc58:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801cc5c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801cc60:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cc64:	44dc      	add	ip, fp
 801cc66:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cc6a:	9501      	str	r5, [sp, #4]
 801cc6c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801cc70:	9503      	str	r5, [sp, #12]
 801cc72:	9d01      	ldr	r5, [sp, #4]
 801cc74:	9e02      	ldr	r6, [sp, #8]
 801cc76:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801cc7a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cc7e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801cc82:	fb0a fc0c 	mul.w	ip, sl, ip
 801cc86:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801cc8a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801cc8e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801cc92:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cc96:	4465      	add	r5, ip
 801cc98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801cc9c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801cca0:	fb09 fc0c 	mul.w	ip, r9, ip
 801cca4:	fb09 f904 	mul.w	r9, r9, r4
 801cca8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ccac:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ccb0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ccb4:	fb08 f404 	mul.w	r4, r8, r4
 801ccb8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ccbc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ccc0:	fb08 f802 	mul.w	r8, r8, r2
 801ccc4:	fb0a fa01 	mul.w	sl, sl, r1
 801ccc8:	0a22      	lsrs	r2, r4, #8
 801ccca:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ccce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ccd2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ccd6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ccda:	4414      	add	r4, r2
 801ccdc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801cce0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801cce4:	0a2d      	lsrs	r5, r5, #8
 801cce6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ccea:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ccee:	9a03      	ldr	r2, [sp, #12]
 801ccf0:	8836      	ldrh	r6, [r6, #0]
 801ccf2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ccf6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ccfa:	437d      	muls	r5, r7
 801ccfc:	4461      	add	r1, ip
 801ccfe:	0a24      	lsrs	r4, r4, #8
 801cd00:	fb02 5503 	mla	r5, r2, r3, r5
 801cd04:	0a09      	lsrs	r1, r1, #8
 801cd06:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801cd0a:	fb04 540e 	mla	r4, r4, lr, r5
 801cd0e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801cd12:	fb01 4100 	mla	r1, r1, r0, r4
 801cd16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd1a:	0a09      	lsrs	r1, r1, #8
 801cd1c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cd20:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801cd24:	fb07 f70a 	mul.w	r7, r7, sl
 801cd28:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801cd2c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801cd30:	fb03 7101 	mla	r1, r3, r1, r7
 801cd34:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cd38:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801cd3c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801cd40:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801cd44:	fb00 e101 	mla	r1, r0, r1, lr
 801cd48:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801cd4c:	9a00      	ldr	r2, [sp, #0]
 801cd4e:	b287      	uxth	r7, r0
 801cd50:	437a      	muls	r2, r7
 801cd52:	0a09      	lsrs	r1, r1, #8
 801cd54:	1c53      	adds	r3, r2, #1
 801cd56:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801cd5a:	4321      	orrs	r1, r4
 801cd5c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cd60:	1235      	asrs	r5, r6, #8
 801cd62:	0c0a      	lsrs	r2, r1, #16
 801cd64:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801cd68:	b2db      	uxtb	r3, r3
 801cd6a:	fb12 f207 	smulbb	r2, r2, r7
 801cd6e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cd72:	fb05 2503 	mla	r5, r5, r3, r2
 801cd76:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801cd7a:	10f2      	asrs	r2, r6, #3
 801cd7c:	b2c8      	uxtb	r0, r1
 801cd7e:	00f6      	lsls	r6, r6, #3
 801cd80:	fb14 f407 	smulbb	r4, r4, r7
 801cd84:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801cd88:	b2f6      	uxtb	r6, r6
 801cd8a:	fb10 f007 	smulbb	r0, r0, r7
 801cd8e:	fb02 4203 	mla	r2, r2, r3, r4
 801cd92:	b2ad      	uxth	r5, r5
 801cd94:	fb06 0303 	mla	r3, r6, r3, r0
 801cd98:	b299      	uxth	r1, r3
 801cd9a:	b294      	uxth	r4, r2
 801cd9c:	1c6b      	adds	r3, r5, #1
 801cd9e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cda2:	1c62      	adds	r2, r4, #1
 801cda4:	1c4b      	adds	r3, r1, #1
 801cda6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cdaa:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801cdae:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cdb2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cdb6:	0952      	lsrs	r2, r2, #5
 801cdb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cdbc:	432b      	orrs	r3, r5
 801cdbe:	4313      	orrs	r3, r2
 801cdc0:	9a02      	ldr	r2, [sp, #8]
 801cdc2:	8013      	strh	r3, [r2, #0]
 801cdc4:	b005      	add	sp, #20
 801cdc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdca:	2500      	movs	r5, #0
 801cdcc:	e6ef      	b.n	801cbae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801cdce:	2100      	movs	r1, #0
 801cdd0:	460d      	mov	r5, r1
 801cdd2:	e6f7      	b.n	801cbc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801cdd4:	2100      	movs	r1, #0
 801cdd6:	e6f5      	b.n	801cbc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801cdd8:	4631      	mov	r1, r6
 801cdda:	e6f3      	b.n	801cbc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801cddc:	2400      	movs	r4, #0
 801cdde:	e702      	b.n	801cbe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801cde0:	2200      	movs	r2, #0
 801cde2:	4614      	mov	r4, r2
 801cde4:	e70b      	b.n	801cbfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801cde6:	4602      	mov	r2, r0
 801cde8:	4604      	mov	r4, r0
 801cdea:	e708      	b.n	801cbfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801cdec:	2200      	movs	r2, #0
 801cdee:	e706      	b.n	801cbfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801cdf0:	4632      	mov	r2, r6
 801cdf2:	e704      	b.n	801cbfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801cdf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cdf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdf8:	b09d      	sub	sp, #116	; 0x74
 801cdfa:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801cdfe:	9219      	str	r2, [sp, #100]	; 0x64
 801ce00:	9307      	str	r3, [sp, #28]
 801ce02:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801ce04:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801ce08:	931a      	str	r3, [sp, #104]	; 0x68
 801ce0a:	9117      	str	r1, [sp, #92]	; 0x5c
 801ce0c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801ce10:	901b      	str	r0, [sp, #108]	; 0x6c
 801ce12:	6850      	ldr	r0, [r2, #4]
 801ce14:	6812      	ldr	r2, [r2, #0]
 801ce16:	fb00 1303 	mla	r3, r0, r3, r1
 801ce1a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ce1e:	930a      	str	r3, [sp, #40]	; 0x28
 801ce20:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ce22:	681b      	ldr	r3, [r3, #0]
 801ce24:	9310      	str	r3, [sp, #64]	; 0x40
 801ce26:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801ce2a:	930b      	str	r3, [sp, #44]	; 0x2c
 801ce2c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ce2e:	2b00      	cmp	r3, #0
 801ce30:	dc03      	bgt.n	801ce3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ce32:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ce34:	2b00      	cmp	r3, #0
 801ce36:	f340 8375 	ble.w	801d524 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ce3a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ce3c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ce40:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ce44:	1e48      	subs	r0, r1, #1
 801ce46:	1e57      	subs	r7, r2, #1
 801ce48:	9b07      	ldr	r3, [sp, #28]
 801ce4a:	2b00      	cmp	r3, #0
 801ce4c:	f340 818e 	ble.w	801d16c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ce50:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ce54:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ce58:	d406      	bmi.n	801ce68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ce5a:	4584      	cmp	ip, r0
 801ce5c:	da04      	bge.n	801ce68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ce5e:	2b00      	cmp	r3, #0
 801ce60:	db02      	blt.n	801ce68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ce62:	42bb      	cmp	r3, r7
 801ce64:	f2c0 8183 	blt.w	801d16e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ce68:	f11c 0c01 	adds.w	ip, ip, #1
 801ce6c:	f100 8173 	bmi.w	801d156 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ce70:	4561      	cmp	r1, ip
 801ce72:	f2c0 8170 	blt.w	801d156 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ce76:	3301      	adds	r3, #1
 801ce78:	f100 816d 	bmi.w	801d156 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ce7c:	429a      	cmp	r2, r3
 801ce7e:	f2c0 816a 	blt.w	801d156 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ce82:	9b07      	ldr	r3, [sp, #28]
 801ce84:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ce86:	9318      	str	r3, [sp, #96]	; 0x60
 801ce88:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ce8a:	2b00      	cmp	r3, #0
 801ce8c:	f340 818c 	ble.w	801d1a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801ce90:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801ce92:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ce94:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ce98:	689b      	ldr	r3, [r3, #8]
 801ce9a:	1422      	asrs	r2, r4, #16
 801ce9c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801cea0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801cea4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801cea8:	f100 81cd 	bmi.w	801d246 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ceac:	f103 38ff 	add.w	r8, r3, #4294967295
 801ceb0:	4542      	cmp	r2, r8
 801ceb2:	f280 81c8 	bge.w	801d246 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ceb6:	f1bc 0f00 	cmp.w	ip, #0
 801ceba:	f2c0 81c4 	blt.w	801d246 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801cebe:	f10e 38ff 	add.w	r8, lr, #4294967295
 801cec2:	45c4      	cmp	ip, r8
 801cec4:	f280 81bf 	bge.w	801d246 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801cec8:	b21b      	sxth	r3, r3
 801ceca:	fb0c 2203 	mla	r2, ip, r3, r2
 801cece:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ced0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ced4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ced8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801cedc:	2800      	cmp	r0, #0
 801cede:	f000 81a9 	beq.w	801d234 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801cee2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801cee6:	950c      	str	r5, [sp, #48]	; 0x30
 801cee8:	0e2d      	lsrs	r5, r5, #24
 801ceea:	9513      	str	r5, [sp, #76]	; 0x4c
 801ceec:	b181      	cbz	r1, 801cf10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ceee:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801cef2:	3b01      	subs	r3, #1
 801cef4:	009b      	lsls	r3, r3, #2
 801cef6:	3304      	adds	r3, #4
 801cef8:	eb08 0c03 	add.w	ip, r8, r3
 801cefc:	f858 3003 	ldr.w	r3, [r8, r3]
 801cf00:	9308      	str	r3, [sp, #32]
 801cf02:	0e1b      	lsrs	r3, r3, #24
 801cf04:	9311      	str	r3, [sp, #68]	; 0x44
 801cf06:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801cf0a:	930d      	str	r3, [sp, #52]	; 0x34
 801cf0c:	0e1b      	lsrs	r3, r3, #24
 801cf0e:	9314      	str	r3, [sp, #80]	; 0x50
 801cf10:	b280      	uxth	r0, r0
 801cf12:	b289      	uxth	r1, r1
 801cf14:	fb00 f901 	mul.w	r9, r0, r1
 801cf18:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801cf1c:	0100      	lsls	r0, r0, #4
 801cf1e:	eba0 0809 	sub.w	r8, r0, r9
 801cf22:	b289      	uxth	r1, r1
 801cf24:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801cf28:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cf2a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cf2c:	fa1f f888 	uxth.w	r8, r8
 801cf30:	1a5b      	subs	r3, r3, r1
 801cf32:	b29b      	uxth	r3, r3
 801cf34:	fb08 f000 	mul.w	r0, r8, r0
 801cf38:	fb03 000e 	mla	r0, r3, lr, r0
 801cf3c:	fb01 0005 	mla	r0, r1, r5, r0
 801cf40:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cf42:	fb09 0005 	mla	r0, r9, r5, r0
 801cf46:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801cf4a:	2800      	cmp	r0, #0
 801cf4c:	f000 80fa 	beq.w	801d144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801cf50:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801cf54:	d01b      	beq.n	801cf8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801cf56:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801cf5a:	fb0e fa0a 	mul.w	sl, lr, sl
 801cf5e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801cf62:	fb0e fe02 	mul.w	lr, lr, r2
 801cf66:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801cf6a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cf6e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801cf72:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801cf76:	4452      	add	r2, sl
 801cf78:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801cf7c:	0a12      	lsrs	r2, r2, #8
 801cf7e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cf82:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cf86:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801cf8a:	ea42 020c 	orr.w	r2, r2, ip
 801cf8e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cf90:	2dff      	cmp	r5, #255	; 0xff
 801cf92:	d021      	beq.n	801cfd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801cf94:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cf96:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801cf9a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cf9c:	fb05 fb0b 	mul.w	fp, r5, fp
 801cfa0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cfa2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801cfa6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cfa8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cfac:	fb05 fa0a 	mul.w	sl, r5, sl
 801cfb0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cfb4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cfb8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cfbc:	44de      	add	lr, fp
 801cfbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cfc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cfc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cfca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cfce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cfd2:	ea4e 050a 	orr.w	r5, lr, sl
 801cfd6:	950c      	str	r5, [sp, #48]	; 0x30
 801cfd8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cfda:	2dff      	cmp	r5, #255	; 0xff
 801cfdc:	d021      	beq.n	801d022 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801cfde:	9d08      	ldr	r5, [sp, #32]
 801cfe0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801cfe4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cfe6:	fb05 fb0b 	mul.w	fp, r5, fp
 801cfea:	9d08      	ldr	r5, [sp, #32]
 801cfec:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801cff0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cff2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cff6:	fb05 fa0a 	mul.w	sl, r5, sl
 801cffa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cffe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d002:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d006:	44de      	add	lr, fp
 801d008:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d00c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d010:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d014:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d018:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d01c:	ea4e 050a 	orr.w	r5, lr, sl
 801d020:	9508      	str	r5, [sp, #32]
 801d022:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d024:	2dff      	cmp	r5, #255	; 0xff
 801d026:	d021      	beq.n	801d06c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801d028:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d02a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d02e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d030:	fb05 fb0b 	mul.w	fp, r5, fp
 801d034:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d036:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d03a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d03c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d040:	fb05 fa0a 	mul.w	sl, r5, sl
 801d044:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d048:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d04c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d050:	44de      	add	lr, fp
 801d052:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d056:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d05a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d05e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d062:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d066:	ea4e 050a 	orr.w	r5, lr, sl
 801d06a:	950d      	str	r5, [sp, #52]	; 0x34
 801d06c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d06e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d072:	9d08      	ldr	r5, [sp, #32]
 801d074:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801d078:	fb08 fc0c 	mul.w	ip, r8, ip
 801d07c:	fb03 cc0e 	mla	ip, r3, lr, ip
 801d080:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d084:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d086:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d08a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d08e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d090:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d094:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d098:	fb08 f80e 	mul.w	r8, r8, lr
 801d09c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d0a0:	fb03 8202 	mla	r2, r3, r2, r8
 801d0a4:	9b08      	ldr	r3, [sp, #32]
 801d0a6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d0a8:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801d0ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d0ae:	fb01 220a 	mla	r2, r1, sl, r2
 801d0b2:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801d0b6:	fb09 2901 	mla	r9, r9, r1, r2
 801d0ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d0bc:	883b      	ldrh	r3, [r7, #0]
 801d0be:	4342      	muls	r2, r0
 801d0c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d0c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d0c8:	1c50      	adds	r0, r2, #1
 801d0ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d0ce:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d0d2:	ea4c 0c09 	orr.w	ip, ip, r9
 801d0d6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d0da:	1219      	asrs	r1, r3, #8
 801d0dc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801d0e0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d0e4:	b2c0      	uxtb	r0, r0
 801d0e6:	fb12 f205 	smulbb	r2, r2, r5
 801d0ea:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d0ee:	fb01 2100 	mla	r1, r1, r0, r2
 801d0f2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801d0f6:	10da      	asrs	r2, r3, #3
 801d0f8:	fa5f fc8c 	uxtb.w	ip, ip
 801d0fc:	00db      	lsls	r3, r3, #3
 801d0fe:	fb1c fc05 	smulbb	ip, ip, r5
 801d102:	b2db      	uxtb	r3, r3
 801d104:	b289      	uxth	r1, r1
 801d106:	fb03 c300 	mla	r3, r3, r0, ip
 801d10a:	fa1f fc83 	uxth.w	ip, r3
 801d10e:	1c4b      	adds	r3, r1, #1
 801d110:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d114:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d118:	fb1e fe05 	smulbb	lr, lr, r5
 801d11c:	f10c 0301 	add.w	r3, ip, #1
 801d120:	fb02 e200 	mla	r2, r2, r0, lr
 801d124:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801d128:	b292      	uxth	r2, r2
 801d12a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d12e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d132:	430b      	orrs	r3, r1
 801d134:	1c51      	adds	r1, r2, #1
 801d136:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d13a:	0952      	lsrs	r2, r2, #5
 801d13c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d140:	4313      	orrs	r3, r2
 801d142:	803b      	strh	r3, [r7, #0]
 801d144:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d146:	441c      	add	r4, r3
 801d148:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d14a:	441e      	add	r6, r3
 801d14c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d14e:	3b01      	subs	r3, #1
 801d150:	3702      	adds	r7, #2
 801d152:	9318      	str	r3, [sp, #96]	; 0x60
 801d154:	e698      	b.n	801ce88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d156:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d158:	441c      	add	r4, r3
 801d15a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d15c:	441e      	add	r6, r3
 801d15e:	9b07      	ldr	r3, [sp, #28]
 801d160:	3b01      	subs	r3, #1
 801d162:	9307      	str	r3, [sp, #28]
 801d164:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d166:	3302      	adds	r3, #2
 801d168:	930a      	str	r3, [sp, #40]	; 0x28
 801d16a:	e66d      	b.n	801ce48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d16c:	d023      	beq.n	801d1b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801d16e:	9b07      	ldr	r3, [sp, #28]
 801d170:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801d172:	3b01      	subs	r3, #1
 801d174:	fb00 4003 	mla	r0, r0, r3, r4
 801d178:	1400      	asrs	r0, r0, #16
 801d17a:	f53f ae82 	bmi.w	801ce82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d17e:	3901      	subs	r1, #1
 801d180:	4288      	cmp	r0, r1
 801d182:	f6bf ae7e 	bge.w	801ce82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d186:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801d188:	fb01 6303 	mla	r3, r1, r3, r6
 801d18c:	141b      	asrs	r3, r3, #16
 801d18e:	f53f ae78 	bmi.w	801ce82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d192:	3a01      	subs	r2, #1
 801d194:	4293      	cmp	r3, r2
 801d196:	f6bf ae74 	bge.w	801ce82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d19a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d19e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801d1a2:	f1bb 0f00 	cmp.w	fp, #0
 801d1a6:	dc6c      	bgt.n	801d282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801d1a8:	9b07      	ldr	r3, [sp, #28]
 801d1aa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d1ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d1b0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d1b4:	930a      	str	r3, [sp, #40]	; 0x28
 801d1b6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d1b8:	2b00      	cmp	r3, #0
 801d1ba:	f340 81b3 	ble.w	801d524 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d1be:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d1c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d1c6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d1ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d1cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d1d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d1d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d1d8:	eef0 6a62 	vmov.f32	s13, s5
 801d1dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d1e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d1e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d1e8:	ee16 4a90 	vmov	r4, s13
 801d1ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d1f0:	eef0 6a43 	vmov.f32	s13, s6
 801d1f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d1f8:	ee12 2a90 	vmov	r2, s5
 801d1fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d200:	fb92 f3f3 	sdiv	r3, r2, r3
 801d204:	ee13 2a10 	vmov	r2, s6
 801d208:	9329      	str	r3, [sp, #164]	; 0xa4
 801d20a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d20c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d210:	932a      	str	r3, [sp, #168]	; 0xa8
 801d212:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d214:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801d216:	3b01      	subs	r3, #1
 801d218:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d21c:	9317      	str	r3, [sp, #92]	; 0x5c
 801d21e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d220:	bf08      	it	eq
 801d222:	4613      	moveq	r3, r2
 801d224:	ee16 6a90 	vmov	r6, s13
 801d228:	9307      	str	r3, [sp, #28]
 801d22a:	eeb0 3a67 	vmov.f32	s6, s15
 801d22e:	eef0 2a47 	vmov.f32	s5, s14
 801d232:	e5fb      	b.n	801ce2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d234:	2900      	cmp	r1, #0
 801d236:	f43f ae6b 	beq.w	801cf10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d23a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801d23e:	9308      	str	r3, [sp, #32]
 801d240:	0e1b      	lsrs	r3, r3, #24
 801d242:	9311      	str	r3, [sp, #68]	; 0x44
 801d244:	e664      	b.n	801cf10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d246:	f112 0801 	adds.w	r8, r2, #1
 801d24a:	f53f af7b 	bmi.w	801d144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d24e:	4543      	cmp	r3, r8
 801d250:	f6ff af78 	blt.w	801d144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d254:	f11c 0801 	adds.w	r8, ip, #1
 801d258:	f53f af74 	bmi.w	801d144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d25c:	45c6      	cmp	lr, r8
 801d25e:	f6ff af71 	blt.w	801d144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d262:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d264:	9201      	str	r2, [sp, #4]
 801d266:	fa0f f28e 	sxth.w	r2, lr
 801d26a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801d26e:	e9cd c002 	strd	ip, r0, [sp, #8]
 801d272:	9200      	str	r2, [sp, #0]
 801d274:	b21b      	sxth	r3, r3
 801d276:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d278:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d27a:	4639      	mov	r1, r7
 801d27c:	f7ff fc79 	bl	801cb72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801d280:	e760      	b.n	801d144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d282:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d284:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d286:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d28a:	1427      	asrs	r7, r4, #16
 801d28c:	1433      	asrs	r3, r6, #16
 801d28e:	fb01 7303 	mla	r3, r1, r3, r7
 801d292:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801d296:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801d29a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d29e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d2a2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d2a6:	2a00      	cmp	r2, #0
 801d2a8:	f000 8133 	beq.w	801d512 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801d2ac:	687d      	ldr	r5, [r7, #4]
 801d2ae:	950e      	str	r5, [sp, #56]	; 0x38
 801d2b0:	0e2d      	lsrs	r5, r5, #24
 801d2b2:	9515      	str	r5, [sp, #84]	; 0x54
 801d2b4:	b178      	cbz	r0, 801d2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d2b6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801d2ba:	3901      	subs	r1, #1
 801d2bc:	0089      	lsls	r1, r1, #2
 801d2be:	3104      	adds	r1, #4
 801d2c0:	eb07 0e01 	add.w	lr, r7, r1
 801d2c4:	5879      	ldr	r1, [r7, r1]
 801d2c6:	9109      	str	r1, [sp, #36]	; 0x24
 801d2c8:	0e09      	lsrs	r1, r1, #24
 801d2ca:	9112      	str	r1, [sp, #72]	; 0x48
 801d2cc:	f8de 1004 	ldr.w	r1, [lr, #4]
 801d2d0:	910f      	str	r1, [sp, #60]	; 0x3c
 801d2d2:	0e09      	lsrs	r1, r1, #24
 801d2d4:	9116      	str	r1, [sp, #88]	; 0x58
 801d2d6:	b292      	uxth	r2, r2
 801d2d8:	b280      	uxth	r0, r0
 801d2da:	fb02 f800 	mul.w	r8, r2, r0
 801d2de:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d2e2:	0112      	lsls	r2, r2, #4
 801d2e4:	eba2 0e08 	sub.w	lr, r2, r8
 801d2e8:	b280      	uxth	r0, r0
 801d2ea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d2ee:	9915      	ldr	r1, [sp, #84]	; 0x54
 801d2f0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d2f2:	fa1f fe8e 	uxth.w	lr, lr
 801d2f6:	1a12      	subs	r2, r2, r0
 801d2f8:	b292      	uxth	r2, r2
 801d2fa:	fb0e f101 	mul.w	r1, lr, r1
 801d2fe:	fb02 110c 	mla	r1, r2, ip, r1
 801d302:	fb00 1105 	mla	r1, r0, r5, r1
 801d306:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d308:	fb08 1105 	mla	r1, r8, r5, r1
 801d30c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d310:	2900      	cmp	r1, #0
 801d312:	f000 80f5 	beq.w	801d500 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801d316:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801d31a:	d019      	beq.n	801d350 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801d31c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d320:	fb0c fa0a 	mul.w	sl, ip, sl
 801d324:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d328:	fb0c fc03 	mul.w	ip, ip, r3
 801d32c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d330:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d334:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d338:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801d33c:	4453      	add	r3, sl
 801d33e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d342:	0a1b      	lsrs	r3, r3, #8
 801d344:	0a3f      	lsrs	r7, r7, #8
 801d346:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d34a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d34e:	433b      	orrs	r3, r7
 801d350:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d352:	2dff      	cmp	r5, #255	; 0xff
 801d354:	d020      	beq.n	801d398 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801d356:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d358:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d35c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d35e:	436f      	muls	r7, r5
 801d360:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d362:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d366:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d368:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d36c:	fb05 fa0a 	mul.w	sl, r5, sl
 801d370:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d374:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d378:	44bc      	add	ip, r7
 801d37a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d37e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d382:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d386:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d38a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d38e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d392:	ea4c 050a 	orr.w	r5, ip, sl
 801d396:	950e      	str	r5, [sp, #56]	; 0x38
 801d398:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d39a:	2dff      	cmp	r5, #255	; 0xff
 801d39c:	d020      	beq.n	801d3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801d39e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d3a0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d3a4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d3a6:	436f      	muls	r7, r5
 801d3a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d3aa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d3ae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d3b0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d3b4:	fb05 fa0a 	mul.w	sl, r5, sl
 801d3b8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d3bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d3c0:	44bc      	add	ip, r7
 801d3c2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d3c6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d3ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d3ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d3d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d3d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d3da:	ea4c 050a 	orr.w	r5, ip, sl
 801d3de:	9509      	str	r5, [sp, #36]	; 0x24
 801d3e0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d3e2:	2dff      	cmp	r5, #255	; 0xff
 801d3e4:	d020      	beq.n	801d428 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801d3e6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d3e8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d3ec:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d3ee:	436f      	muls	r7, r5
 801d3f0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d3f2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d3f6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d3f8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d3fc:	fb05 fa0a 	mul.w	sl, r5, sl
 801d400:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d404:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d408:	44bc      	add	ip, r7
 801d40a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d40e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d412:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d416:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d41a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d41e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d422:	ea4c 050a 	orr.w	r5, ip, sl
 801d426:	950f      	str	r5, [sp, #60]	; 0x3c
 801d428:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d42a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d42e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d430:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801d434:	fb0e f707 	mul.w	r7, lr, r7
 801d438:	fb02 770c 	mla	r7, r2, ip, r7
 801d43c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d440:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d442:	fb00 770c 	mla	r7, r0, ip, r7
 801d446:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d44a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d44c:	fb08 770c 	mla	r7, r8, ip, r7
 801d450:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801d454:	fb0e fe0c 	mul.w	lr, lr, ip
 801d458:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d45c:	fb02 e303 	mla	r3, r2, r3, lr
 801d460:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d462:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d464:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801d468:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d46a:	fb00 330a 	mla	r3, r0, sl, r3
 801d46e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801d472:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d476:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d478:	f8b9 0000 	ldrh.w	r0, [r9]
 801d47c:	4359      	muls	r1, r3
 801d47e:	0a3f      	lsrs	r7, r7, #8
 801d480:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d484:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d488:	1c4b      	adds	r3, r1, #1
 801d48a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801d48e:	ea47 070c 	orr.w	r7, r7, ip
 801d492:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d496:	1202      	asrs	r2, r0, #8
 801d498:	0c3b      	lsrs	r3, r7, #16
 801d49a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801d49e:	b2c9      	uxtb	r1, r1
 801d4a0:	fb13 f305 	smulbb	r3, r3, r5
 801d4a4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d4a8:	fb02 3201 	mla	r2, r2, r1, r3
 801d4ac:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801d4b0:	10c3      	asrs	r3, r0, #3
 801d4b2:	b2ff      	uxtb	r7, r7
 801d4b4:	00c0      	lsls	r0, r0, #3
 801d4b6:	b2c0      	uxtb	r0, r0
 801d4b8:	fb17 f705 	smulbb	r7, r7, r5
 801d4bc:	fb00 7001 	mla	r0, r0, r1, r7
 801d4c0:	b292      	uxth	r2, r2
 801d4c2:	fb1c fc05 	smulbb	ip, ip, r5
 801d4c6:	b280      	uxth	r0, r0
 801d4c8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d4cc:	fb03 c301 	mla	r3, r3, r1, ip
 801d4d0:	1c51      	adds	r1, r2, #1
 801d4d2:	f100 0c01 	add.w	ip, r0, #1
 801d4d6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d4da:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801d4de:	b29b      	uxth	r3, r3
 801d4e0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d4e4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801d4e8:	ea4c 0202 	orr.w	r2, ip, r2
 801d4ec:	f103 0c01 	add.w	ip, r3, #1
 801d4f0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801d4f4:	095b      	lsrs	r3, r3, #5
 801d4f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d4fa:	431a      	orrs	r2, r3
 801d4fc:	f8a9 2000 	strh.w	r2, [r9]
 801d500:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d502:	441c      	add	r4, r3
 801d504:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d506:	f109 0902 	add.w	r9, r9, #2
 801d50a:	441e      	add	r6, r3
 801d50c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d510:	e647      	b.n	801d1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801d512:	2800      	cmp	r0, #0
 801d514:	f43f aedf 	beq.w	801d2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d518:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801d51c:	9109      	str	r1, [sp, #36]	; 0x24
 801d51e:	0e09      	lsrs	r1, r1, #24
 801d520:	9112      	str	r1, [sp, #72]	; 0x48
 801d522:	e6d8      	b.n	801d2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d524:	b01d      	add	sp, #116	; 0x74
 801d526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d52a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801d52a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d52e:	b085      	sub	sp, #20
 801d530:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801d534:	9102      	str	r1, [sp, #8]
 801d536:	2c00      	cmp	r4, #0
 801d538:	fb04 7103 	mla	r1, r4, r3, r7
 801d53c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801d540:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801d544:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801d548:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801d54c:	f2c0 810c 	blt.w	801d768 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801d550:	45a6      	cmp	lr, r4
 801d552:	f340 8109 	ble.w	801d768 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801d556:	2f00      	cmp	r7, #0
 801d558:	f2c0 8104 	blt.w	801d764 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801d55c:	42bb      	cmp	r3, r7
 801d55e:	f340 8101 	ble.w	801d764 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801d562:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801d566:	1c7a      	adds	r2, r7, #1
 801d568:	f100 8101 	bmi.w	801d76e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801d56c:	4293      	cmp	r3, r2
 801d56e:	f340 80fe 	ble.w	801d76e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801d572:	2e00      	cmp	r6, #0
 801d574:	f000 80fd 	beq.w	801d772 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801d578:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801d57c:	3401      	adds	r4, #1
 801d57e:	f100 80fc 	bmi.w	801d77a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801d582:	45a6      	cmp	lr, r4
 801d584:	f340 80f9 	ble.w	801d77a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801d588:	2800      	cmp	r0, #0
 801d58a:	f000 80f9 	beq.w	801d780 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801d58e:	2f00      	cmp	r7, #0
 801d590:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801d594:	f2c0 80ef 	blt.w	801d776 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801d598:	42bb      	cmp	r3, r7
 801d59a:	f340 80ec 	ble.w	801d776 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801d59e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801d5a2:	3701      	adds	r7, #1
 801d5a4:	f100 80ef 	bmi.w	801d786 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801d5a8:	42bb      	cmp	r3, r7
 801d5aa:	f340 80ec 	ble.w	801d786 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801d5ae:	2e00      	cmp	r6, #0
 801d5b0:	f000 80eb 	beq.w	801d78a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801d5b4:	6852      	ldr	r2, [r2, #4]
 801d5b6:	b2b6      	uxth	r6, r6
 801d5b8:	b280      	uxth	r0, r0
 801d5ba:	fb00 fe06 	mul.w	lr, r0, r6
 801d5be:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801d5c2:	0136      	lsls	r6, r6, #4
 801d5c4:	eba6 070e 	sub.w	r7, r6, lr
 801d5c8:	b280      	uxth	r0, r0
 801d5ca:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801d5ce:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801d5d2:	b2bf      	uxth	r7, r7
 801d5d4:	1a1b      	subs	r3, r3, r0
 801d5d6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801d5da:	b29b      	uxth	r3, r3
 801d5dc:	fb07 f60a 	mul.w	r6, r7, sl
 801d5e0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d5e4:	fb0b 6603 	mla	r6, fp, r3, r6
 801d5e8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801d5ec:	fb00 6609 	mla	r6, r0, r9, r6
 801d5f0:	fb0e 6608 	mla	r6, lr, r8, r6
 801d5f4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d5f8:	9600      	str	r6, [sp, #0]
 801d5fa:	2e00      	cmp	r6, #0
 801d5fc:	f000 80af 	beq.w	801d75e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801d600:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d604:	fb0b fc0c 	mul.w	ip, fp, ip
 801d608:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801d60c:	fb0b f505 	mul.w	r5, fp, r5
 801d610:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801d614:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801d618:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d61c:	44dc      	add	ip, fp
 801d61e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d622:	9501      	str	r5, [sp, #4]
 801d624:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801d628:	9503      	str	r5, [sp, #12]
 801d62a:	9d01      	ldr	r5, [sp, #4]
 801d62c:	9e02      	ldr	r6, [sp, #8]
 801d62e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801d632:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d636:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801d63a:	fb0a fc0c 	mul.w	ip, sl, ip
 801d63e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801d642:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801d646:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d64a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d64e:	4465      	add	r5, ip
 801d650:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d654:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d658:	fb09 fc0c 	mul.w	ip, r9, ip
 801d65c:	fb09 f904 	mul.w	r9, r9, r4
 801d660:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801d664:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801d668:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801d66c:	fb08 f404 	mul.w	r4, r8, r4
 801d670:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d674:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d678:	fb08 f802 	mul.w	r8, r8, r2
 801d67c:	fb0a fa01 	mul.w	sl, sl, r1
 801d680:	0a22      	lsrs	r2, r4, #8
 801d682:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801d686:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d68a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801d68e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801d692:	4414      	add	r4, r2
 801d694:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801d698:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801d69c:	0a2d      	lsrs	r5, r5, #8
 801d69e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801d6a2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d6a6:	9a03      	ldr	r2, [sp, #12]
 801d6a8:	8836      	ldrh	r6, [r6, #0]
 801d6aa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801d6ae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d6b2:	437d      	muls	r5, r7
 801d6b4:	4461      	add	r1, ip
 801d6b6:	0a24      	lsrs	r4, r4, #8
 801d6b8:	fb02 5503 	mla	r5, r2, r3, r5
 801d6bc:	0a09      	lsrs	r1, r1, #8
 801d6be:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d6c2:	fb04 540e 	mla	r4, r4, lr, r5
 801d6c6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801d6ca:	fb01 4100 	mla	r1, r1, r0, r4
 801d6ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d6d2:	0a09      	lsrs	r1, r1, #8
 801d6d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d6d8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801d6dc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801d6e0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801d6e4:	fb07 f70a 	mul.w	r7, r7, sl
 801d6e8:	fb03 7101 	mla	r1, r3, r1, r7
 801d6ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d6f0:	9b00      	ldr	r3, [sp, #0]
 801d6f2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801d6f6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801d6fa:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801d6fe:	fb00 e101 	mla	r1, r0, r1, lr
 801d702:	43da      	mvns	r2, r3
 801d704:	1233      	asrs	r3, r6, #8
 801d706:	b2d2      	uxtb	r2, r2
 801d708:	10f0      	asrs	r0, r6, #3
 801d70a:	0a09      	lsrs	r1, r1, #8
 801d70c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d710:	00f6      	lsls	r6, r6, #3
 801d712:	4353      	muls	r3, r2
 801d714:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d718:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d71c:	b2f6      	uxtb	r6, r6
 801d71e:	4321      	orrs	r1, r4
 801d720:	4350      	muls	r0, r2
 801d722:	4356      	muls	r6, r2
 801d724:	1c5a      	adds	r2, r3, #1
 801d726:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d72a:	0c0b      	lsrs	r3, r1, #16
 801d72c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d730:	1c42      	adds	r2, r0, #1
 801d732:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d736:	0a0a      	lsrs	r2, r1, #8
 801d738:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801d73c:	021b      	lsls	r3, r3, #8
 801d73e:	00d2      	lsls	r2, r2, #3
 801d740:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d744:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801d748:	4313      	orrs	r3, r2
 801d74a:	1c72      	adds	r2, r6, #1
 801d74c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801d750:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801d754:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d758:	4319      	orrs	r1, r3
 801d75a:	9b02      	ldr	r3, [sp, #8]
 801d75c:	8019      	strh	r1, [r3, #0]
 801d75e:	b005      	add	sp, #20
 801d760:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d764:	2500      	movs	r5, #0
 801d766:	e6fe      	b.n	801d566 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801d768:	2100      	movs	r1, #0
 801d76a:	460d      	mov	r5, r1
 801d76c:	e706      	b.n	801d57c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801d76e:	2100      	movs	r1, #0
 801d770:	e704      	b.n	801d57c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801d772:	4631      	mov	r1, r6
 801d774:	e702      	b.n	801d57c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801d776:	2400      	movs	r4, #0
 801d778:	e713      	b.n	801d5a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801d77a:	2200      	movs	r2, #0
 801d77c:	4614      	mov	r4, r2
 801d77e:	e71a      	b.n	801d5b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801d780:	4602      	mov	r2, r0
 801d782:	4604      	mov	r4, r0
 801d784:	e717      	b.n	801d5b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801d786:	2200      	movs	r2, #0
 801d788:	e715      	b.n	801d5b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801d78a:	4632      	mov	r2, r6
 801d78c:	e713      	b.n	801d5b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801d790 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d794:	b09b      	sub	sp, #108	; 0x6c
 801d796:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801d79a:	9218      	str	r2, [sp, #96]	; 0x60
 801d79c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801d79e:	9116      	str	r1, [sp, #88]	; 0x58
 801d7a0:	9307      	str	r3, [sp, #28]
 801d7a2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801d7a6:	9019      	str	r0, [sp, #100]	; 0x64
 801d7a8:	6850      	ldr	r0, [r2, #4]
 801d7aa:	6812      	ldr	r2, [r2, #0]
 801d7ac:	fb00 1303 	mla	r3, r0, r3, r1
 801d7b0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d7b4:	930a      	str	r3, [sp, #40]	; 0x28
 801d7b6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d7b8:	681b      	ldr	r3, [r3, #0]
 801d7ba:	930f      	str	r3, [sp, #60]	; 0x3c
 801d7bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801d7be:	2b00      	cmp	r3, #0
 801d7c0:	dc03      	bgt.n	801d7ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d7c2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d7c4:	2b00      	cmp	r3, #0
 801d7c6:	f340 8386 	ble.w	801ded6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801d7ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d7cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d7d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d7d4:	1e48      	subs	r0, r1, #1
 801d7d6:	1e57      	subs	r7, r2, #1
 801d7d8:	9b07      	ldr	r3, [sp, #28]
 801d7da:	2b00      	cmp	r3, #0
 801d7dc:	f340 8166 	ble.w	801daac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801d7e0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d7e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d7e8:	d406      	bmi.n	801d7f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d7ea:	4584      	cmp	ip, r0
 801d7ec:	da04      	bge.n	801d7f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d7ee:	2b00      	cmp	r3, #0
 801d7f0:	db02      	blt.n	801d7f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d7f2:	42bb      	cmp	r3, r7
 801d7f4:	f2c0 815b 	blt.w	801daae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801d7f8:	f11c 0c01 	adds.w	ip, ip, #1
 801d7fc:	f100 814b 	bmi.w	801da96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801d800:	4561      	cmp	r1, ip
 801d802:	f2c0 8148 	blt.w	801da96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801d806:	3301      	adds	r3, #1
 801d808:	f100 8145 	bmi.w	801da96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801d80c:	429a      	cmp	r2, r3
 801d80e:	f2c0 8142 	blt.w	801da96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801d812:	9b07      	ldr	r3, [sp, #28]
 801d814:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d816:	9317      	str	r3, [sp, #92]	; 0x5c
 801d818:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d81a:	2b00      	cmp	r3, #0
 801d81c:	f340 8165 	ble.w	801daea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d820:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801d822:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d824:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d828:	689b      	ldr	r3, [r3, #8]
 801d82a:	1422      	asrs	r2, r4, #16
 801d82c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d830:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801d834:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d838:	f100 81d5 	bmi.w	801dbe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801d83c:	f103 38ff 	add.w	r8, r3, #4294967295
 801d840:	4542      	cmp	r2, r8
 801d842:	f280 81d0 	bge.w	801dbe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801d846:	f1bc 0f00 	cmp.w	ip, #0
 801d84a:	f2c0 81cc 	blt.w	801dbe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801d84e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d852:	45c4      	cmp	ip, r8
 801d854:	f280 81c7 	bge.w	801dbe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801d858:	b21b      	sxth	r3, r3
 801d85a:	fb0c 2203 	mla	r2, ip, r3, r2
 801d85e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d860:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801d864:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801d868:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801d86c:	2900      	cmp	r1, #0
 801d86e:	f000 8182 	beq.w	801db76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801d872:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801d876:	950b      	str	r5, [sp, #44]	; 0x2c
 801d878:	0e2d      	lsrs	r5, r5, #24
 801d87a:	9512      	str	r5, [sp, #72]	; 0x48
 801d87c:	b180      	cbz	r0, 801d8a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801d87e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801d882:	3b01      	subs	r3, #1
 801d884:	009b      	lsls	r3, r3, #2
 801d886:	3304      	adds	r3, #4
 801d888:	eb08 0c03 	add.w	ip, r8, r3
 801d88c:	f858 3003 	ldr.w	r3, [r8, r3]
 801d890:	9308      	str	r3, [sp, #32]
 801d892:	0e1b      	lsrs	r3, r3, #24
 801d894:	9310      	str	r3, [sp, #64]	; 0x40
 801d896:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801d89a:	930c      	str	r3, [sp, #48]	; 0x30
 801d89c:	0e1b      	lsrs	r3, r3, #24
 801d89e:	9313      	str	r3, [sp, #76]	; 0x4c
 801d8a0:	b289      	uxth	r1, r1
 801d8a2:	b280      	uxth	r0, r0
 801d8a4:	fb01 f900 	mul.w	r9, r1, r0
 801d8a8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801d8ac:	0109      	lsls	r1, r1, #4
 801d8ae:	eba1 0809 	sub.w	r8, r1, r9
 801d8b2:	b280      	uxth	r0, r0
 801d8b4:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801d8b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d8ba:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d8bc:	fa1f f888 	uxth.w	r8, r8
 801d8c0:	1a09      	subs	r1, r1, r0
 801d8c2:	b289      	uxth	r1, r1
 801d8c4:	fb08 f303 	mul.w	r3, r8, r3
 801d8c8:	fb01 330e 	mla	r3, r1, lr, r3
 801d8cc:	fb00 3305 	mla	r3, r0, r5, r3
 801d8d0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d8d2:	fb09 3305 	mla	r3, r9, r5, r3
 801d8d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d8da:	2b00      	cmp	r3, #0
 801d8dc:	f000 80d2 	beq.w	801da84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801d8e0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d8e4:	d01b      	beq.n	801d91e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801d8e6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801d8ea:	fb0e fa0a 	mul.w	sl, lr, sl
 801d8ee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d8f2:	fb0e fe02 	mul.w	lr, lr, r2
 801d8f6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801d8fa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d8fe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d902:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d906:	4452      	add	r2, sl
 801d908:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d90c:	0a12      	lsrs	r2, r2, #8
 801d90e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d912:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d916:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d91a:	ea42 020c 	orr.w	r2, r2, ip
 801d91e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d920:	2dff      	cmp	r5, #255	; 0xff
 801d922:	d021      	beq.n	801d968 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801d924:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d926:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d92a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d92c:	fb05 fb0b 	mul.w	fp, r5, fp
 801d930:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d932:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d936:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d938:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d93c:	fb05 fa0a 	mul.w	sl, r5, sl
 801d940:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d944:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d948:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d94c:	44de      	add	lr, fp
 801d94e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d952:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d956:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d95a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d95e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d962:	ea4e 050a 	orr.w	r5, lr, sl
 801d966:	950b      	str	r5, [sp, #44]	; 0x2c
 801d968:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d96a:	2dff      	cmp	r5, #255	; 0xff
 801d96c:	d021      	beq.n	801d9b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801d96e:	9d08      	ldr	r5, [sp, #32]
 801d970:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d974:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d976:	fb05 fb0b 	mul.w	fp, r5, fp
 801d97a:	9d08      	ldr	r5, [sp, #32]
 801d97c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d980:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d982:	fb05 fa0e 	mul.w	sl, r5, lr
 801d986:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d98a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d98e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d992:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d996:	44de      	add	lr, fp
 801d998:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d99c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d9a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d9a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d9a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d9ac:	ea4e 050a 	orr.w	r5, lr, sl
 801d9b0:	9508      	str	r5, [sp, #32]
 801d9b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d9b4:	2dff      	cmp	r5, #255	; 0xff
 801d9b6:	d021      	beq.n	801d9fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801d9b8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d9ba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d9be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d9c0:	fb05 fb0b 	mul.w	fp, r5, fp
 801d9c4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d9c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d9ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d9cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d9d0:	fb05 fa0a 	mul.w	sl, r5, sl
 801d9d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d9d8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d9dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d9e0:	44de      	add	lr, fp
 801d9e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d9e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d9ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d9ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d9f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d9f6:	ea4e 050a 	orr.w	r5, lr, sl
 801d9fa:	950c      	str	r5, [sp, #48]	; 0x30
 801d9fc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d9fe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801da02:	9d08      	ldr	r5, [sp, #32]
 801da04:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801da08:	fb08 fc0c 	mul.w	ip, r8, ip
 801da0c:	fb01 cc0e 	mla	ip, r1, lr, ip
 801da10:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801da14:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801da16:	fb00 cc0e 	mla	ip, r0, lr, ip
 801da1a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801da1e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801da20:	fb09 cc0e 	mla	ip, r9, lr, ip
 801da24:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801da28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801da2c:	fb08 f80e 	mul.w	r8, r8, lr
 801da30:	fb01 8202 	mla	r2, r1, r2, r8
 801da34:	9908      	ldr	r1, [sp, #32]
 801da36:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801da3a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801da3c:	fb00 220a 	mla	r2, r0, sl, r2
 801da40:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801da44:	fb09 2900 	mla	r9, r9, r0, r2
 801da48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801da4c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801da50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801da54:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801da58:	ea4c 0c09 	orr.w	ip, ip, r9
 801da5c:	2bff      	cmp	r3, #255	; 0xff
 801da5e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801da62:	f040 8091 	bne.w	801db88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801da66:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801da6a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801da6e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801da72:	f022 0207 	bic.w	r2, r2, #7
 801da76:	431a      	orrs	r2, r3
 801da78:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801da7c:	ea4c 0c02 	orr.w	ip, ip, r2
 801da80:	f8a7 c000 	strh.w	ip, [r7]
 801da84:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801da86:	441c      	add	r4, r3
 801da88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801da8a:	441e      	add	r6, r3
 801da8c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801da8e:	3b01      	subs	r3, #1
 801da90:	3702      	adds	r7, #2
 801da92:	9317      	str	r3, [sp, #92]	; 0x5c
 801da94:	e6c0      	b.n	801d818 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801da96:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801da98:	441c      	add	r4, r3
 801da9a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801da9c:	441e      	add	r6, r3
 801da9e:	9b07      	ldr	r3, [sp, #28]
 801daa0:	3b01      	subs	r3, #1
 801daa2:	9307      	str	r3, [sp, #28]
 801daa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801daa6:	3302      	adds	r3, #2
 801daa8:	930a      	str	r3, [sp, #40]	; 0x28
 801daaa:	e695      	b.n	801d7d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801daac:	d024      	beq.n	801daf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801daae:	9b07      	ldr	r3, [sp, #28]
 801dab0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801dab2:	3b01      	subs	r3, #1
 801dab4:	fb00 4003 	mla	r0, r0, r3, r4
 801dab8:	1400      	asrs	r0, r0, #16
 801daba:	f53f aeaa 	bmi.w	801d812 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801dabe:	3901      	subs	r1, #1
 801dac0:	4288      	cmp	r0, r1
 801dac2:	f6bf aea6 	bge.w	801d812 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801dac6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801dac8:	fb01 6303 	mla	r3, r1, r3, r6
 801dacc:	141b      	asrs	r3, r3, #16
 801dace:	f53f aea0 	bmi.w	801d812 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801dad2:	3a01      	subs	r2, #1
 801dad4:	4293      	cmp	r3, r2
 801dad6:	f6bf ae9c 	bge.w	801d812 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801dada:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801dade:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801dae2:	f1bb 0f00 	cmp.w	fp, #0
 801dae6:	f300 809a 	bgt.w	801dc1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801daea:	9b07      	ldr	r3, [sp, #28]
 801daec:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801daf0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801daf2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801daf6:	930a      	str	r3, [sp, #40]	; 0x28
 801daf8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801dafa:	2b00      	cmp	r3, #0
 801dafc:	f340 81eb 	ble.w	801ded6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801db00:	ee30 0a04 	vadd.f32	s0, s0, s8
 801db04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801db08:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801db0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801db0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801db12:	ee31 1a05 	vadd.f32	s2, s2, s10
 801db16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801db1a:	eef0 6a62 	vmov.f32	s13, s5
 801db1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801db22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db26:	ee77 2a62 	vsub.f32	s5, s14, s5
 801db2a:	ee16 4a90 	vmov	r4, s13
 801db2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801db32:	eef0 6a43 	vmov.f32	s13, s6
 801db36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801db3a:	ee12 2a90 	vmov	r2, s5
 801db3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801db42:	fb92 f3f3 	sdiv	r3, r2, r3
 801db46:	ee13 2a10 	vmov	r2, s6
 801db4a:	9327      	str	r3, [sp, #156]	; 0x9c
 801db4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801db4e:	fb92 f3f3 	sdiv	r3, r2, r3
 801db52:	9328      	str	r3, [sp, #160]	; 0xa0
 801db54:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801db56:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801db58:	3b01      	subs	r3, #1
 801db5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db5e:	9316      	str	r3, [sp, #88]	; 0x58
 801db60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801db62:	bf08      	it	eq
 801db64:	4613      	moveq	r3, r2
 801db66:	ee16 6a90 	vmov	r6, s13
 801db6a:	9307      	str	r3, [sp, #28]
 801db6c:	eeb0 3a67 	vmov.f32	s6, s15
 801db70:	eef0 2a47 	vmov.f32	s5, s14
 801db74:	e622      	b.n	801d7bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801db76:	2800      	cmp	r0, #0
 801db78:	f43f ae92 	beq.w	801d8a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801db7c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801db80:	9308      	str	r3, [sp, #32]
 801db82:	0e1b      	lsrs	r3, r3, #24
 801db84:	9310      	str	r3, [sp, #64]	; 0x40
 801db86:	e68b      	b.n	801d8a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801db88:	8839      	ldrh	r1, [r7, #0]
 801db8a:	4dd4      	ldr	r5, [pc, #848]	; (801dedc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801db8c:	43db      	mvns	r3, r3
 801db8e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801db92:	fa5f f883 	uxtb.w	r8, r3
 801db96:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801db9a:	fb0e fe08 	mul.w	lr, lr, r8
 801db9e:	10c8      	asrs	r0, r1, #3
 801dba0:	00cb      	lsls	r3, r1, #3
 801dba2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801dba6:	f10e 0101 	add.w	r1, lr, #1
 801dbaa:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801dbae:	fb00 f008 	mul.w	r0, r0, r8
 801dbb2:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801dbb6:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801dbba:	f100 0e01 	add.w	lr, r0, #1
 801dbbe:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801dbc2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801dbc6:	b2db      	uxtb	r3, r3
 801dbc8:	b2c9      	uxtb	r1, r1
 801dbca:	00d2      	lsls	r2, r2, #3
 801dbcc:	fb03 f308 	mul.w	r3, r3, r8
 801dbd0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801dbd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dbd8:	430a      	orrs	r2, r1
 801dbda:	1c59      	adds	r1, r3, #1
 801dbdc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dbe0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801dbe4:	e748      	b.n	801da78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801dbe6:	f112 0801 	adds.w	r8, r2, #1
 801dbea:	f53f af4b 	bmi.w	801da84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801dbee:	4543      	cmp	r3, r8
 801dbf0:	f6ff af48 	blt.w	801da84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801dbf4:	f11c 0801 	adds.w	r8, ip, #1
 801dbf8:	f53f af44 	bmi.w	801da84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801dbfc:	45c6      	cmp	lr, r8
 801dbfe:	f6ff af41 	blt.w	801da84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801dc02:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801dc06:	fa0f f28e 	sxth.w	r2, lr
 801dc0a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801dc0e:	9200      	str	r2, [sp, #0]
 801dc10:	b21b      	sxth	r3, r3
 801dc12:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dc14:	9819      	ldr	r0, [sp, #100]	; 0x64
 801dc16:	4639      	mov	r1, r7
 801dc18:	f7ff fc87 	bl	801d52a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801dc1c:	e732      	b.n	801da84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801dc1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801dc20:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801dc22:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801dc26:	1421      	asrs	r1, r4, #16
 801dc28:	1433      	asrs	r3, r6, #16
 801dc2a:	fb07 1303 	mla	r3, r7, r3, r1
 801dc2e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801dc30:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801dc34:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801dc38:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dc3c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801dc40:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801dc44:	2a00      	cmp	r2, #0
 801dc46:	f000 8107 	beq.w	801de58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801dc4a:	684d      	ldr	r5, [r1, #4]
 801dc4c:	950d      	str	r5, [sp, #52]	; 0x34
 801dc4e:	0e2d      	lsrs	r5, r5, #24
 801dc50:	9514      	str	r5, [sp, #80]	; 0x50
 801dc52:	b178      	cbz	r0, 801dc74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801dc54:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801dc58:	3f01      	subs	r7, #1
 801dc5a:	00bf      	lsls	r7, r7, #2
 801dc5c:	3704      	adds	r7, #4
 801dc5e:	eb01 0e07 	add.w	lr, r1, r7
 801dc62:	59c9      	ldr	r1, [r1, r7]
 801dc64:	9109      	str	r1, [sp, #36]	; 0x24
 801dc66:	0e09      	lsrs	r1, r1, #24
 801dc68:	9111      	str	r1, [sp, #68]	; 0x44
 801dc6a:	f8de 1004 	ldr.w	r1, [lr, #4]
 801dc6e:	910e      	str	r1, [sp, #56]	; 0x38
 801dc70:	0e09      	lsrs	r1, r1, #24
 801dc72:	9115      	str	r1, [sp, #84]	; 0x54
 801dc74:	b292      	uxth	r2, r2
 801dc76:	b280      	uxth	r0, r0
 801dc78:	fb02 f900 	mul.w	r9, r2, r0
 801dc7c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801dc80:	0112      	lsls	r2, r2, #4
 801dc82:	eba2 0e09 	sub.w	lr, r2, r9
 801dc86:	b280      	uxth	r0, r0
 801dc88:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801dc8c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dc8e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dc90:	fa1f fe8e 	uxth.w	lr, lr
 801dc94:	1a09      	subs	r1, r1, r0
 801dc96:	b289      	uxth	r1, r1
 801dc98:	fb0e f202 	mul.w	r2, lr, r2
 801dc9c:	fb01 220c 	mla	r2, r1, ip, r2
 801dca0:	fb00 2205 	mla	r2, r0, r5, r2
 801dca4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dca6:	fb09 2205 	mla	r2, r9, r5, r2
 801dcaa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801dcae:	2a00      	cmp	r2, #0
 801dcb0:	f000 80c9 	beq.w	801de46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801dcb4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801dcb8:	d019      	beq.n	801dcee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801dcba:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801dcbe:	fb0c fa0a 	mul.w	sl, ip, sl
 801dcc2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dcc6:	fb0c fc03 	mul.w	ip, ip, r3
 801dcca:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801dcce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dcd2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801dcd6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801dcda:	4453      	add	r3, sl
 801dcdc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801dce0:	0a1b      	lsrs	r3, r3, #8
 801dce2:	0a3f      	lsrs	r7, r7, #8
 801dce4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dce8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801dcec:	433b      	orrs	r3, r7
 801dcee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dcf0:	2dff      	cmp	r5, #255	; 0xff
 801dcf2:	d020      	beq.n	801dd36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801dcf4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dcf6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dcfa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dcfc:	436f      	muls	r7, r5
 801dcfe:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dd00:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dd04:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dd06:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dd0a:	fb05 fa0a 	mul.w	sl, r5, sl
 801dd0e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dd12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd16:	44bc      	add	ip, r7
 801dd18:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dd1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dd20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd28:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd2c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd30:	ea4c 050a 	orr.w	r5, ip, sl
 801dd34:	950d      	str	r5, [sp, #52]	; 0x34
 801dd36:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd38:	2dff      	cmp	r5, #255	; 0xff
 801dd3a:	d020      	beq.n	801dd7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801dd3c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801dd3e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dd42:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd44:	436f      	muls	r7, r5
 801dd46:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801dd48:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801dd4c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd4e:	fb05 fa0c 	mul.w	sl, r5, ip
 801dd52:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dd56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd5a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dd5e:	44bc      	add	ip, r7
 801dd60:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dd64:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dd68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd78:	ea4c 050a 	orr.w	r5, ip, sl
 801dd7c:	9509      	str	r5, [sp, #36]	; 0x24
 801dd7e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dd80:	2dff      	cmp	r5, #255	; 0xff
 801dd82:	d020      	beq.n	801ddc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801dd84:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dd86:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dd8a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dd8c:	436f      	muls	r7, r5
 801dd8e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dd90:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dd94:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dd96:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dd9a:	fb05 fa0a 	mul.w	sl, r5, sl
 801dd9e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dda2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dda6:	44bc      	add	ip, r7
 801dda8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ddac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ddb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ddb4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ddb8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ddbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ddc0:	ea4c 050a 	orr.w	r5, ip, sl
 801ddc4:	950e      	str	r5, [sp, #56]	; 0x38
 801ddc6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ddc8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ddcc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ddce:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ddd2:	fb0e f707 	mul.w	r7, lr, r7
 801ddd6:	fb01 770c 	mla	r7, r1, ip, r7
 801ddda:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ddde:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dde0:	fb00 770c 	mla	r7, r0, ip, r7
 801dde4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dde8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ddea:	fb09 770c 	mla	r7, r9, ip, r7
 801ddee:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ddf2:	fb0e fe0c 	mul.w	lr, lr, ip
 801ddf6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ddfa:	fb01 e303 	mla	r3, r1, r3, lr
 801ddfe:	9909      	ldr	r1, [sp, #36]	; 0x24
 801de00:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801de04:	990e      	ldr	r1, [sp, #56]	; 0x38
 801de06:	fb00 330a 	mla	r3, r0, sl, r3
 801de0a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801de0e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801de12:	0a3f      	lsrs	r7, r7, #8
 801de14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de18:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801de1c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801de20:	ea47 070c 	orr.w	r7, r7, ip
 801de24:	2aff      	cmp	r2, #255	; 0xff
 801de26:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801de2a:	d11e      	bne.n	801de6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801de2c:	097a      	lsrs	r2, r7, #5
 801de2e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801de32:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801de36:	f023 0307 	bic.w	r3, r3, #7
 801de3a:	4313      	orrs	r3, r2
 801de3c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801de40:	431f      	orrs	r7, r3
 801de42:	f8a8 7000 	strh.w	r7, [r8]
 801de46:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801de48:	441c      	add	r4, r3
 801de4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801de4c:	f108 0802 	add.w	r8, r8, #2
 801de50:	441e      	add	r6, r3
 801de52:	f10b 3bff 	add.w	fp, fp, #4294967295
 801de56:	e644      	b.n	801dae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801de58:	2800      	cmp	r0, #0
 801de5a:	f43f af0b 	beq.w	801dc74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801de5e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801de62:	9109      	str	r1, [sp, #36]	; 0x24
 801de64:	0e09      	lsrs	r1, r1, #24
 801de66:	9111      	str	r1, [sp, #68]	; 0x44
 801de68:	e704      	b.n	801dc74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801de6a:	f8b8 1000 	ldrh.w	r1, [r8]
 801de6e:	43d2      	mvns	r2, r2
 801de70:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801de74:	fa5f fe82 	uxtb.w	lr, r2
 801de78:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801de7c:	fb0c fc0e 	mul.w	ip, ip, lr
 801de80:	10c8      	asrs	r0, r1, #3
 801de82:	00ca      	lsls	r2, r1, #3
 801de84:	f10c 0101 	add.w	r1, ip, #1
 801de88:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801de8c:	0c39      	lsrs	r1, r7, #16
 801de8e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801de92:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801de96:	4911      	ldr	r1, [pc, #68]	; (801dedc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801de98:	fb00 f00e 	mul.w	r0, r0, lr
 801de9c:	fa5f fc8c 	uxtb.w	ip, ip
 801dea0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801dea4:	b2d2      	uxtb	r2, r2
 801dea6:	1c41      	adds	r1, r0, #1
 801dea8:	fb02 f20e 	mul.w	r2, r2, lr
 801deac:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801deb0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801deb4:	1c51      	adds	r1, r2, #1
 801deb6:	00c0      	lsls	r0, r0, #3
 801deb8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801debc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dec0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801dec4:	ea4c 0c00 	orr.w	ip, ip, r0
 801dec8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801decc:	ea47 0c0c 	orr.w	ip, r7, ip
 801ded0:	f8a8 c000 	strh.w	ip, [r8]
 801ded4:	e7b7      	b.n	801de46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ded6:	b01b      	add	sp, #108	; 0x6c
 801ded8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dedc:	fffff800 	.word	0xfffff800

0801dee0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801dee0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dee4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801dee8:	2d00      	cmp	r5, #0
 801deea:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801deee:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801def2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801def6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801defa:	fb05 0e03 	mla	lr, r5, r3, r0
 801defe:	f2c0 808c 	blt.w	801e01a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801df02:	45a9      	cmp	r9, r5
 801df04:	f340 8089 	ble.w	801e01a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801df08:	2800      	cmp	r0, #0
 801df0a:	f2c0 8084 	blt.w	801e016 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801df0e:	4580      	cmp	r8, r0
 801df10:	f340 8081 	ble.w	801e016 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801df14:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801df18:	f01e 0f01 	tst.w	lr, #1
 801df1c:	5d16      	ldrb	r6, [r2, r4]
 801df1e:	bf0c      	ite	eq
 801df20:	f006 060f 	andeq.w	r6, r6, #15
 801df24:	1136      	asrne	r6, r6, #4
 801df26:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801df2a:	b2f6      	uxtb	r6, r6
 801df2c:	1c44      	adds	r4, r0, #1
 801df2e:	d477      	bmi.n	801e020 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801df30:	45a0      	cmp	r8, r4
 801df32:	dd75      	ble.n	801e020 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801df34:	2f00      	cmp	r7, #0
 801df36:	d075      	beq.n	801e024 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801df38:	f10e 0a01 	add.w	sl, lr, #1
 801df3c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801df40:	f01a 0f01 	tst.w	sl, #1
 801df44:	5d14      	ldrb	r4, [r2, r4]
 801df46:	bf0c      	ite	eq
 801df48:	f004 040f 	andeq.w	r4, r4, #15
 801df4c:	1124      	asrne	r4, r4, #4
 801df4e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801df52:	b2e4      	uxtb	r4, r4
 801df54:	3501      	adds	r5, #1
 801df56:	d469      	bmi.n	801e02c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801df58:	45a9      	cmp	r9, r5
 801df5a:	dd67      	ble.n	801e02c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801df5c:	f1bc 0f00 	cmp.w	ip, #0
 801df60:	d067      	beq.n	801e032 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801df62:	2800      	cmp	r0, #0
 801df64:	db60      	blt.n	801e028 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801df66:	4580      	cmp	r8, r0
 801df68:	dd5e      	ble.n	801e028 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801df6a:	eb03 090e 	add.w	r9, r3, lr
 801df6e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801df72:	f019 0f01 	tst.w	r9, #1
 801df76:	5d55      	ldrb	r5, [r2, r5]
 801df78:	bf0c      	ite	eq
 801df7a:	f005 050f 	andeq.w	r5, r5, #15
 801df7e:	112d      	asrne	r5, r5, #4
 801df80:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801df84:	b2ed      	uxtb	r5, r5
 801df86:	3001      	adds	r0, #1
 801df88:	d456      	bmi.n	801e038 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801df8a:	4580      	cmp	r8, r0
 801df8c:	dd54      	ble.n	801e038 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801df8e:	2f00      	cmp	r7, #0
 801df90:	d054      	beq.n	801e03c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801df92:	3301      	adds	r3, #1
 801df94:	449e      	add	lr, r3
 801df96:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801df9a:	f01e 0f01 	tst.w	lr, #1
 801df9e:	5cd0      	ldrb	r0, [r2, r3]
 801dfa0:	bf0c      	ite	eq
 801dfa2:	f000 000f 	andeq.w	r0, r0, #15
 801dfa6:	1100      	asrne	r0, r0, #4
 801dfa8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801dfac:	b2c3      	uxtb	r3, r0
 801dfae:	b2ba      	uxth	r2, r7
 801dfb0:	fa1f fc8c 	uxth.w	ip, ip
 801dfb4:	fb02 f00c 	mul.w	r0, r2, ip
 801dfb8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801dfbc:	0112      	lsls	r2, r2, #4
 801dfbe:	fa1f fc8c 	uxth.w	ip, ip
 801dfc2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801dfc6:	1a12      	subs	r2, r2, r0
 801dfc8:	eba7 070c 	sub.w	r7, r7, ip
 801dfcc:	b292      	uxth	r2, r2
 801dfce:	b2bf      	uxth	r7, r7
 801dfd0:	4362      	muls	r2, r4
 801dfd2:	fb06 2207 	mla	r2, r6, r7, r2
 801dfd6:	fb0c 2505 	mla	r5, ip, r5, r2
 801dfda:	fb00 5303 	mla	r3, r0, r3, r5
 801dfde:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dfe2:	b1b3      	cbz	r3, 801e012 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801dfe4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801dfe8:	435a      	muls	r2, r3
 801dfea:	1c53      	adds	r3, r2, #1
 801dfec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dff0:	4a2d      	ldr	r2, [pc, #180]	; (801e0a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801dff2:	121b      	asrs	r3, r3, #8
 801dff4:	6812      	ldr	r2, [r2, #0]
 801dff6:	2bff      	cmp	r3, #255	; 0xff
 801dff8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801dffc:	d120      	bne.n	801e040 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801dffe:	4b2b      	ldr	r3, [pc, #172]	; (801e0ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801e000:	0950      	lsrs	r0, r2, #5
 801e002:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e006:	4033      	ands	r3, r6
 801e008:	4318      	orrs	r0, r3
 801e00a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e00e:	4302      	orrs	r2, r0
 801e010:	800a      	strh	r2, [r1, #0]
 801e012:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e016:	2600      	movs	r6, #0
 801e018:	e788      	b.n	801df2c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801e01a:	2400      	movs	r4, #0
 801e01c:	4626      	mov	r6, r4
 801e01e:	e799      	b.n	801df54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e020:	2400      	movs	r4, #0
 801e022:	e797      	b.n	801df54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e024:	463c      	mov	r4, r7
 801e026:	e795      	b.n	801df54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e028:	2500      	movs	r5, #0
 801e02a:	e7ac      	b.n	801df86 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801e02c:	2300      	movs	r3, #0
 801e02e:	461d      	mov	r5, r3
 801e030:	e7bd      	b.n	801dfae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e032:	4663      	mov	r3, ip
 801e034:	4665      	mov	r5, ip
 801e036:	e7ba      	b.n	801dfae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e038:	2300      	movs	r3, #0
 801e03a:	e7b8      	b.n	801dfae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e03c:	463b      	mov	r3, r7
 801e03e:	e7b6      	b.n	801dfae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e040:	880d      	ldrh	r5, [r1, #0]
 801e042:	b29f      	uxth	r7, r3
 801e044:	122c      	asrs	r4, r5, #8
 801e046:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801e04a:	43db      	mvns	r3, r3
 801e04c:	b2db      	uxtb	r3, r3
 801e04e:	fb10 f007 	smulbb	r0, r0, r7
 801e052:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e056:	fb04 0403 	mla	r4, r4, r3, r0
 801e05a:	b2f6      	uxtb	r6, r6
 801e05c:	10e8      	asrs	r0, r5, #3
 801e05e:	b2d2      	uxtb	r2, r2
 801e060:	00ed      	lsls	r5, r5, #3
 801e062:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e066:	fb12 f207 	smulbb	r2, r2, r7
 801e06a:	fb16 f607 	smulbb	r6, r6, r7
 801e06e:	b2ed      	uxtb	r5, r5
 801e070:	b2a4      	uxth	r4, r4
 801e072:	fb00 6603 	mla	r6, r0, r3, r6
 801e076:	fb05 2303 	mla	r3, r5, r3, r2
 801e07a:	b29a      	uxth	r2, r3
 801e07c:	1c63      	adds	r3, r4, #1
 801e07e:	b2b0      	uxth	r0, r6
 801e080:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801e084:	1c53      	adds	r3, r2, #1
 801e086:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e08a:	1c42      	adds	r2, r0, #1
 801e08c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e090:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e094:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e098:	0940      	lsrs	r0, r0, #5
 801e09a:	4323      	orrs	r3, r4
 801e09c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e0a0:	4303      	orrs	r3, r0
 801e0a2:	800b      	strh	r3, [r1, #0]
 801e0a4:	e7b5      	b.n	801e012 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801e0a6:	bf00      	nop
 801e0a8:	20017574 	.word	0x20017574
 801e0ac:	00fff800 	.word	0x00fff800

0801e0b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0b4:	b097      	sub	sp, #92	; 0x5c
 801e0b6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801e0ba:	9214      	str	r2, [sp, #80]	; 0x50
 801e0bc:	9309      	str	r3, [sp, #36]	; 0x24
 801e0be:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801e0c0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801e0c4:	910d      	str	r1, [sp, #52]	; 0x34
 801e0c6:	930f      	str	r3, [sp, #60]	; 0x3c
 801e0c8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801e0cc:	9015      	str	r0, [sp, #84]	; 0x54
 801e0ce:	6850      	ldr	r0, [r2, #4]
 801e0d0:	6812      	ldr	r2, [r2, #0]
 801e0d2:	fb00 1303 	mla	r3, r0, r3, r1
 801e0d6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e0da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e0dc:	689b      	ldr	r3, [r3, #8]
 801e0de:	3301      	adds	r3, #1
 801e0e0:	f023 0301 	bic.w	r3, r3, #1
 801e0e4:	930a      	str	r3, [sp, #40]	; 0x28
 801e0e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e0e8:	681f      	ldr	r7, [r3, #0]
 801e0ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e0ec:	2b00      	cmp	r3, #0
 801e0ee:	dc03      	bgt.n	801e0f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e0f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e0f2:	2b00      	cmp	r3, #0
 801e0f4:	f340 8287 	ble.w	801e606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801e0f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e0fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e0fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e102:	1e48      	subs	r0, r1, #1
 801e104:	f102 3cff 	add.w	ip, r2, #4294967295
 801e108:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e10a:	2b00      	cmp	r3, #0
 801e10c:	f340 80c4 	ble.w	801e298 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801e110:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e114:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e118:	d406      	bmi.n	801e128 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e11a:	4586      	cmp	lr, r0
 801e11c:	da04      	bge.n	801e128 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e11e:	2b00      	cmp	r3, #0
 801e120:	db02      	blt.n	801e128 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e122:	4563      	cmp	r3, ip
 801e124:	f2c0 80b9 	blt.w	801e29a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801e128:	f11e 0e01 	adds.w	lr, lr, #1
 801e12c:	f100 80aa 	bmi.w	801e284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e130:	4571      	cmp	r1, lr
 801e132:	f2c0 80a7 	blt.w	801e284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e136:	3301      	adds	r3, #1
 801e138:	f100 80a4 	bmi.w	801e284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e13c:	429a      	cmp	r2, r3
 801e13e:	f2c0 80a1 	blt.w	801e284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e142:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e144:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801e148:	930e      	str	r3, [sp, #56]	; 0x38
 801e14a:	46c8      	mov	r8, r9
 801e14c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e14e:	2b00      	cmp	r3, #0
 801e150:	f340 80c3 	ble.w	801e2da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e154:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e156:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e15a:	1423      	asrs	r3, r4, #16
 801e15c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e160:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e164:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e168:	f100 814d 	bmi.w	801e406 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e16c:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e170:	455b      	cmp	r3, fp
 801e172:	f280 8148 	bge.w	801e406 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e176:	2800      	cmp	r0, #0
 801e178:	f2c0 8145 	blt.w	801e406 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e17c:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e180:	4558      	cmp	r0, fp
 801e182:	f280 8140 	bge.w	801e406 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e186:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e188:	fb00 3305 	mla	r3, r0, r5, r3
 801e18c:	0858      	lsrs	r0, r3, #1
 801e18e:	07dd      	lsls	r5, r3, #31
 801e190:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e194:	bf54      	ite	pl
 801e196:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e19a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e19e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e1a2:	fa5f fc8c 	uxtb.w	ip, ip
 801e1a6:	2a00      	cmp	r2, #0
 801e1a8:	f000 80db 	beq.w	801e362 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801e1ac:	1c58      	adds	r0, r3, #1
 801e1ae:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e1b2:	07c0      	lsls	r0, r0, #31
 801e1b4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e1b8:	bf54      	ite	pl
 801e1ba:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e1be:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e1c2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e1c6:	fa5f f08e 	uxtb.w	r0, lr
 801e1ca:	9010      	str	r0, [sp, #64]	; 0x40
 801e1cc:	b1c9      	cbz	r1, 801e202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e1ce:	4453      	add	r3, sl
 801e1d0:	0858      	lsrs	r0, r3, #1
 801e1d2:	07dd      	lsls	r5, r3, #31
 801e1d4:	5c38      	ldrb	r0, [r7, r0]
 801e1d6:	bf54      	ite	pl
 801e1d8:	f000 000f 	andpl.w	r0, r0, #15
 801e1dc:	1100      	asrmi	r0, r0, #4
 801e1de:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e1e2:	3301      	adds	r3, #1
 801e1e4:	b2c0      	uxtb	r0, r0
 801e1e6:	900b      	str	r0, [sp, #44]	; 0x2c
 801e1e8:	0858      	lsrs	r0, r3, #1
 801e1ea:	07dd      	lsls	r5, r3, #31
 801e1ec:	f817 e000 	ldrb.w	lr, [r7, r0]
 801e1f0:	bf54      	ite	pl
 801e1f2:	f00e 030f 	andpl.w	r3, lr, #15
 801e1f6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801e1fa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e1fe:	b2db      	uxtb	r3, r3
 801e200:	9311      	str	r3, [sp, #68]	; 0x44
 801e202:	b292      	uxth	r2, r2
 801e204:	b289      	uxth	r1, r1
 801e206:	fb02 f301 	mul.w	r3, r2, r1
 801e20a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e20e:	0112      	lsls	r2, r2, #4
 801e210:	b289      	uxth	r1, r1
 801e212:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801e216:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e218:	1ad2      	subs	r2, r2, r3
 801e21a:	1a40      	subs	r0, r0, r1
 801e21c:	b292      	uxth	r2, r2
 801e21e:	436a      	muls	r2, r5
 801e220:	b280      	uxth	r0, r0
 801e222:	fb0c 2c00 	mla	ip, ip, r0, r2
 801e226:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e228:	fb01 c102 	mla	r1, r1, r2, ip
 801e22c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e22e:	fb03 1302 	mla	r3, r3, r2, r1
 801e232:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e236:	b1db      	cbz	r3, 801e270 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e238:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e23a:	4353      	muls	r3, r2
 801e23c:	1c5a      	adds	r2, r3, #1
 801e23e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e242:	4ac6      	ldr	r2, [pc, #792]	; (801e55c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801e244:	121b      	asrs	r3, r3, #8
 801e246:	6812      	ldr	r2, [r2, #0]
 801e248:	2bff      	cmp	r3, #255	; 0xff
 801e24a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801e24e:	f040 8099 	bne.w	801e384 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801e252:	0953      	lsrs	r3, r2, #5
 801e254:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e258:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e25c:	f02c 0c07 	bic.w	ip, ip, #7
 801e260:	ea43 0c0c 	orr.w	ip, r3, ip
 801e264:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e268:	ea4c 0202 	orr.w	r2, ip, r2
 801e26c:	f8a8 2000 	strh.w	r2, [r8]
 801e270:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801e272:	441c      	add	r4, r3
 801e274:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e276:	441e      	add	r6, r3
 801e278:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e27a:	3b01      	subs	r3, #1
 801e27c:	f108 0802 	add.w	r8, r8, #2
 801e280:	930e      	str	r3, [sp, #56]	; 0x38
 801e282:	e763      	b.n	801e14c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e284:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801e286:	441c      	add	r4, r3
 801e288:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e28a:	441e      	add	r6, r3
 801e28c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e28e:	3b01      	subs	r3, #1
 801e290:	9309      	str	r3, [sp, #36]	; 0x24
 801e292:	f109 0902 	add.w	r9, r9, #2
 801e296:	e737      	b.n	801e108 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e298:	d024      	beq.n	801e2e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e29a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e29c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801e29e:	3b01      	subs	r3, #1
 801e2a0:	fb00 4003 	mla	r0, r0, r3, r4
 801e2a4:	1400      	asrs	r0, r0, #16
 801e2a6:	f53f af4c 	bmi.w	801e142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e2aa:	3901      	subs	r1, #1
 801e2ac:	4288      	cmp	r0, r1
 801e2ae:	f6bf af48 	bge.w	801e142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e2b2:	9924      	ldr	r1, [sp, #144]	; 0x90
 801e2b4:	fb01 6303 	mla	r3, r1, r3, r6
 801e2b8:	141b      	asrs	r3, r3, #16
 801e2ba:	f53f af42 	bmi.w	801e142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e2be:	3a01      	subs	r2, #1
 801e2c0:	4293      	cmp	r3, r2
 801e2c2:	f6bf af3e 	bge.w	801e142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e2c6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e2ca:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e2ce:	930e      	str	r3, [sp, #56]	; 0x38
 801e2d0:	46c8      	mov	r8, r9
 801e2d2:	f1bb 0f00 	cmp.w	fp, #0
 801e2d6:	f300 80b7 	bgt.w	801e448 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801e2da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e2dc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e2e0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801e2e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e2e6:	2b00      	cmp	r3, #0
 801e2e8:	f340 818d 	ble.w	801e606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801e2ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e2f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e2f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e2f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e2fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e2fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e302:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e306:	eef0 6a62 	vmov.f32	s13, s5
 801e30a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e30e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e312:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e316:	ee16 4a90 	vmov	r4, s13
 801e31a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e31e:	eef0 6a43 	vmov.f32	s13, s6
 801e322:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e326:	ee12 2a90 	vmov	r2, s5
 801e32a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e32e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e332:	ee13 2a10 	vmov	r2, s6
 801e336:	9323      	str	r3, [sp, #140]	; 0x8c
 801e338:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e33a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e33e:	9324      	str	r3, [sp, #144]	; 0x90
 801e340:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e342:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e344:	3b01      	subs	r3, #1
 801e346:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e34a:	930d      	str	r3, [sp, #52]	; 0x34
 801e34c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e34e:	bf08      	it	eq
 801e350:	4613      	moveq	r3, r2
 801e352:	ee16 6a90 	vmov	r6, s13
 801e356:	9309      	str	r3, [sp, #36]	; 0x24
 801e358:	eeb0 3a67 	vmov.f32	s6, s15
 801e35c:	eef0 2a47 	vmov.f32	s5, s14
 801e360:	e6c3      	b.n	801e0ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e362:	2900      	cmp	r1, #0
 801e364:	f43f af4d 	beq.w	801e202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e368:	eb0a 0003 	add.w	r0, sl, r3
 801e36c:	0843      	lsrs	r3, r0, #1
 801e36e:	07c0      	lsls	r0, r0, #31
 801e370:	5cfb      	ldrb	r3, [r7, r3]
 801e372:	bf54      	ite	pl
 801e374:	f003 030f 	andpl.w	r3, r3, #15
 801e378:	111b      	asrmi	r3, r3, #4
 801e37a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e37e:	b2db      	uxtb	r3, r3
 801e380:	930b      	str	r3, [sp, #44]	; 0x2c
 801e382:	e73e      	b.n	801e202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e384:	f8b8 e000 	ldrh.w	lr, [r8]
 801e388:	fa1f fb83 	uxth.w	fp, r3
 801e38c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801e390:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801e394:	43db      	mvns	r3, r3
 801e396:	b2db      	uxtb	r3, r3
 801e398:	fb11 f10b 	smulbb	r1, r1, fp
 801e39c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e3a0:	fb00 1003 	mla	r0, r0, r3, r1
 801e3a4:	fa5f fc8c 	uxtb.w	ip, ip
 801e3a8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801e3ac:	b2d2      	uxtb	r2, r2
 801e3ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e3b2:	b280      	uxth	r0, r0
 801e3b4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e3b8:	fb1c fc0b 	smulbb	ip, ip, fp
 801e3bc:	fa5f fe8e 	uxtb.w	lr, lr
 801e3c0:	fb12 fb0b 	smulbb	fp, r2, fp
 801e3c4:	fb01 cc03 	mla	ip, r1, r3, ip
 801e3c8:	fb0e bb03 	mla	fp, lr, r3, fp
 801e3cc:	1c43      	adds	r3, r0, #1
 801e3ce:	fa1f fc8c 	uxth.w	ip, ip
 801e3d2:	fa1f fb8b 	uxth.w	fp, fp
 801e3d6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e3da:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801e3de:	f10c 0101 	add.w	r1, ip, #1
 801e3e2:	f10b 0001 	add.w	r0, fp, #1
 801e3e6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801e3ea:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e3ee:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e3f2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e3f6:	4318      	orrs	r0, r3
 801e3f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e3fc:	ea40 000c 	orr.w	r0, r0, ip
 801e400:	f8a8 0000 	strh.w	r0, [r8]
 801e404:	e734      	b.n	801e270 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e406:	f113 0b01 	adds.w	fp, r3, #1
 801e40a:	f53f af31 	bmi.w	801e270 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e40e:	45dc      	cmp	ip, fp
 801e410:	f6ff af2e 	blt.w	801e270 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e414:	f110 0b01 	adds.w	fp, r0, #1
 801e418:	f53f af2a 	bmi.w	801e270 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e41c:	45de      	cmp	lr, fp
 801e41e:	f6ff af27 	blt.w	801e270 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e422:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e424:	9302      	str	r3, [sp, #8]
 801e426:	fa0f f38e 	sxth.w	r3, lr
 801e42a:	9301      	str	r3, [sp, #4]
 801e42c:	fa0f f38c 	sxth.w	r3, ip
 801e430:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801e434:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e438:	9300      	str	r3, [sp, #0]
 801e43a:	463a      	mov	r2, r7
 801e43c:	4653      	mov	r3, sl
 801e43e:	4641      	mov	r1, r8
 801e440:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e442:	f7ff fd4d 	bl	801dee0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801e446:	e713      	b.n	801e270 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e448:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e44a:	1422      	asrs	r2, r4, #16
 801e44c:	1433      	asrs	r3, r6, #16
 801e44e:	fb05 2303 	mla	r3, r5, r3, r2
 801e452:	085a      	lsrs	r2, r3, #1
 801e454:	07dd      	lsls	r5, r3, #31
 801e456:	5cba      	ldrb	r2, [r7, r2]
 801e458:	bf54      	ite	pl
 801e45a:	f002 020f 	andpl.w	r2, r2, #15
 801e45e:	1112      	asrmi	r2, r2, #4
 801e460:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e464:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e468:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e46c:	b2d2      	uxtb	r2, r2
 801e46e:	2900      	cmp	r1, #0
 801e470:	d076      	beq.n	801e560 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e472:	f103 0e01 	add.w	lr, r3, #1
 801e476:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801e47a:	f01e 0f01 	tst.w	lr, #1
 801e47e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e482:	bf0c      	ite	eq
 801e484:	f00c 0c0f 	andeq.w	ip, ip, #15
 801e488:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801e48c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e490:	fa5f f58c 	uxtb.w	r5, ip
 801e494:	9512      	str	r5, [sp, #72]	; 0x48
 801e496:	b300      	cbz	r0, 801e4da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801e498:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e49a:	442b      	add	r3, r5
 801e49c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e4a0:	07dd      	lsls	r5, r3, #31
 801e4a2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e4a6:	bf54      	ite	pl
 801e4a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e4ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e4b0:	3301      	adds	r3, #1
 801e4b2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e4b6:	fa5f f58c 	uxtb.w	r5, ip
 801e4ba:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e4be:	950c      	str	r5, [sp, #48]	; 0x30
 801e4c0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e4c4:	07dd      	lsls	r5, r3, #31
 801e4c6:	bf54      	ite	pl
 801e4c8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e4cc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e4d0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e4d4:	fa5f f38c 	uxtb.w	r3, ip
 801e4d8:	9313      	str	r3, [sp, #76]	; 0x4c
 801e4da:	b289      	uxth	r1, r1
 801e4dc:	b280      	uxth	r0, r0
 801e4de:	fb01 f300 	mul.w	r3, r1, r0
 801e4e2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801e4e6:	0109      	lsls	r1, r1, #4
 801e4e8:	b280      	uxth	r0, r0
 801e4ea:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801e4ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e4f0:	1ac9      	subs	r1, r1, r3
 801e4f2:	ebac 0c00 	sub.w	ip, ip, r0
 801e4f6:	b289      	uxth	r1, r1
 801e4f8:	4369      	muls	r1, r5
 801e4fa:	fa1f fc8c 	uxth.w	ip, ip
 801e4fe:	fb02 120c 	mla	r2, r2, ip, r1
 801e502:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e504:	fb00 2001 	mla	r0, r0, r1, r2
 801e508:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e50a:	fb03 0302 	mla	r3, r3, r2, r0
 801e50e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e512:	b1d3      	cbz	r3, 801e54a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801e514:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e516:	4353      	muls	r3, r2
 801e518:	1c5a      	adds	r2, r3, #1
 801e51a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e51e:	4a0f      	ldr	r2, [pc, #60]	; (801e55c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801e520:	121b      	asrs	r3, r3, #8
 801e522:	6812      	ldr	r2, [r2, #0]
 801e524:	2bff      	cmp	r3, #255	; 0xff
 801e526:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801e52a:	d12d      	bne.n	801e588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801e52c:	0953      	lsrs	r3, r2, #5
 801e52e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e532:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e536:	f02c 0c07 	bic.w	ip, ip, #7
 801e53a:	ea43 0c0c 	orr.w	ip, r3, ip
 801e53e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e542:	ea4c 0202 	orr.w	r2, ip, r2
 801e546:	f8a8 2000 	strh.w	r2, [r8]
 801e54a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801e54c:	441c      	add	r4, r3
 801e54e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e550:	f108 0802 	add.w	r8, r8, #2
 801e554:	441e      	add	r6, r3
 801e556:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e55a:	e6ba      	b.n	801e2d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801e55c:	20017574 	.word	0x20017574
 801e560:	2800      	cmp	r0, #0
 801e562:	d0ba      	beq.n	801e4da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801e564:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e566:	442b      	add	r3, r5
 801e568:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e56c:	07db      	lsls	r3, r3, #31
 801e56e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e572:	bf54      	ite	pl
 801e574:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e578:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e57c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e580:	fa5f f38c 	uxtb.w	r3, ip
 801e584:	930c      	str	r3, [sp, #48]	; 0x30
 801e586:	e7a8      	b.n	801e4da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801e588:	f8b8 e000 	ldrh.w	lr, [r8]
 801e58c:	fa1f fa83 	uxth.w	sl, r3
 801e590:	ea4f 202e 	mov.w	r0, lr, asr #8
 801e594:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801e598:	43db      	mvns	r3, r3
 801e59a:	b2db      	uxtb	r3, r3
 801e59c:	fb11 f10a 	smulbb	r1, r1, sl
 801e5a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e5a4:	fb00 1003 	mla	r0, r0, r3, r1
 801e5a8:	b2d2      	uxtb	r2, r2
 801e5aa:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801e5ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e5b2:	fa5f fe8e 	uxtb.w	lr, lr
 801e5b6:	fb12 f20a 	smulbb	r2, r2, sl
 801e5ba:	fb0e 2203 	mla	r2, lr, r3, r2
 801e5be:	fa5f fc8c 	uxtb.w	ip, ip
 801e5c2:	b280      	uxth	r0, r0
 801e5c4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e5c8:	b292      	uxth	r2, r2
 801e5ca:	fb1c fc0a 	smulbb	ip, ip, sl
 801e5ce:	fb01 cc03 	mla	ip, r1, r3, ip
 801e5d2:	1c43      	adds	r3, r0, #1
 801e5d4:	1c51      	adds	r1, r2, #1
 801e5d6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e5da:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801e5de:	fa1f fc8c 	uxth.w	ip, ip
 801e5e2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801e5e6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e5ea:	4308      	orrs	r0, r1
 801e5ec:	f10c 0101 	add.w	r1, ip, #1
 801e5f0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e5f4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e5f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e5fc:	ea40 000c 	orr.w	r0, r0, ip
 801e600:	f8a8 0000 	strh.w	r0, [r8]
 801e604:	e7a1      	b.n	801e54a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801e606:	b017      	add	sp, #92	; 0x5c
 801e608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e60c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801e60c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e610:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801e614:	2d00      	cmp	r5, #0
 801e616:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801e61a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801e61e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801e622:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801e626:	fb05 0e03 	mla	lr, r5, r3, r0
 801e62a:	f2c0 80b0 	blt.w	801e78e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801e62e:	45a9      	cmp	r9, r5
 801e630:	f340 80ad 	ble.w	801e78e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801e634:	2800      	cmp	r0, #0
 801e636:	f2c0 80a8 	blt.w	801e78a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801e63a:	4580      	cmp	r8, r0
 801e63c:	f340 80a5 	ble.w	801e78a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801e640:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801e644:	f01e 0f01 	tst.w	lr, #1
 801e648:	5d16      	ldrb	r6, [r2, r4]
 801e64a:	bf0c      	ite	eq
 801e64c:	f006 060f 	andeq.w	r6, r6, #15
 801e650:	1136      	asrne	r6, r6, #4
 801e652:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801e656:	b2f6      	uxtb	r6, r6
 801e658:	1c44      	adds	r4, r0, #1
 801e65a:	f100 809b 	bmi.w	801e794 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801e65e:	45a0      	cmp	r8, r4
 801e660:	f340 8098 	ble.w	801e794 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801e664:	2f00      	cmp	r7, #0
 801e666:	f000 8097 	beq.w	801e798 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801e66a:	f10e 0a01 	add.w	sl, lr, #1
 801e66e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801e672:	f01a 0f01 	tst.w	sl, #1
 801e676:	5d14      	ldrb	r4, [r2, r4]
 801e678:	bf0c      	ite	eq
 801e67a:	f004 040f 	andeq.w	r4, r4, #15
 801e67e:	1124      	asrne	r4, r4, #4
 801e680:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801e684:	b2e4      	uxtb	r4, r4
 801e686:	3501      	adds	r5, #1
 801e688:	f100 808a 	bmi.w	801e7a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801e68c:	45a9      	cmp	r9, r5
 801e68e:	f340 8087 	ble.w	801e7a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801e692:	f1bc 0f00 	cmp.w	ip, #0
 801e696:	f000 8086 	beq.w	801e7a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801e69a:	2800      	cmp	r0, #0
 801e69c:	db7e      	blt.n	801e79c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801e69e:	4580      	cmp	r8, r0
 801e6a0:	dd7c      	ble.n	801e79c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801e6a2:	eb03 090e 	add.w	r9, r3, lr
 801e6a6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801e6aa:	f019 0f01 	tst.w	r9, #1
 801e6ae:	5d55      	ldrb	r5, [r2, r5]
 801e6b0:	bf0c      	ite	eq
 801e6b2:	f005 050f 	andeq.w	r5, r5, #15
 801e6b6:	112d      	asrne	r5, r5, #4
 801e6b8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801e6bc:	b2ed      	uxtb	r5, r5
 801e6be:	3001      	adds	r0, #1
 801e6c0:	d474      	bmi.n	801e7ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801e6c2:	4580      	cmp	r8, r0
 801e6c4:	dd72      	ble.n	801e7ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801e6c6:	2f00      	cmp	r7, #0
 801e6c8:	d072      	beq.n	801e7b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801e6ca:	3301      	adds	r3, #1
 801e6cc:	449e      	add	lr, r3
 801e6ce:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801e6d2:	f01e 0f01 	tst.w	lr, #1
 801e6d6:	5cd0      	ldrb	r0, [r2, r3]
 801e6d8:	bf0c      	ite	eq
 801e6da:	f000 000f 	andeq.w	r0, r0, #15
 801e6de:	1100      	asrne	r0, r0, #4
 801e6e0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e6e4:	b2c3      	uxtb	r3, r0
 801e6e6:	b2ba      	uxth	r2, r7
 801e6e8:	fa1f fc8c 	uxth.w	ip, ip
 801e6ec:	fb02 f00c 	mul.w	r0, r2, ip
 801e6f0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801e6f4:	0112      	lsls	r2, r2, #4
 801e6f6:	fa1f fc8c 	uxth.w	ip, ip
 801e6fa:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801e6fe:	1a12      	subs	r2, r2, r0
 801e700:	eba7 070c 	sub.w	r7, r7, ip
 801e704:	b292      	uxth	r2, r2
 801e706:	b2bf      	uxth	r7, r7
 801e708:	4362      	muls	r2, r4
 801e70a:	fb06 2207 	mla	r2, r6, r7, r2
 801e70e:	fb0c 2505 	mla	r5, ip, r5, r2
 801e712:	fb00 5303 	mla	r3, r0, r3, r5
 801e716:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e71a:	b3a3      	cbz	r3, 801e786 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801e71c:	4a25      	ldr	r2, [pc, #148]	; (801e7b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801e71e:	880e      	ldrh	r6, [r1, #0]
 801e720:	6815      	ldr	r5, [r2, #0]
 801e722:	1234      	asrs	r4, r6, #8
 801e724:	b29a      	uxth	r2, r3
 801e726:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801e72a:	43db      	mvns	r3, r3
 801e72c:	b2db      	uxtb	r3, r3
 801e72e:	fb10 f002 	smulbb	r0, r0, r2
 801e732:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e736:	fb04 0403 	mla	r4, r4, r3, r0
 801e73a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801e73e:	10f0      	asrs	r0, r6, #3
 801e740:	b2ed      	uxtb	r5, r5
 801e742:	00f6      	lsls	r6, r6, #3
 801e744:	fb17 f702 	smulbb	r7, r7, r2
 801e748:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e74c:	fb15 f202 	smulbb	r2, r5, r2
 801e750:	b2f6      	uxtb	r6, r6
 801e752:	b2a4      	uxth	r4, r4
 801e754:	fb00 7003 	mla	r0, r0, r3, r7
 801e758:	fb06 2303 	mla	r3, r6, r3, r2
 801e75c:	b29a      	uxth	r2, r3
 801e75e:	1c63      	adds	r3, r4, #1
 801e760:	b280      	uxth	r0, r0
 801e762:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801e766:	1c53      	adds	r3, r2, #1
 801e768:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e76c:	1c42      	adds	r2, r0, #1
 801e76e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e772:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e776:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e77a:	0940      	lsrs	r0, r0, #5
 801e77c:	4323      	orrs	r3, r4
 801e77e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e782:	4303      	orrs	r3, r0
 801e784:	800b      	strh	r3, [r1, #0]
 801e786:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e78a:	2600      	movs	r6, #0
 801e78c:	e764      	b.n	801e658 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801e78e:	2400      	movs	r4, #0
 801e790:	4626      	mov	r6, r4
 801e792:	e778      	b.n	801e686 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801e794:	2400      	movs	r4, #0
 801e796:	e776      	b.n	801e686 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801e798:	463c      	mov	r4, r7
 801e79a:	e774      	b.n	801e686 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801e79c:	2500      	movs	r5, #0
 801e79e:	e78e      	b.n	801e6be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801e7a0:	2300      	movs	r3, #0
 801e7a2:	461d      	mov	r5, r3
 801e7a4:	e79f      	b.n	801e6e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801e7a6:	4663      	mov	r3, ip
 801e7a8:	4665      	mov	r5, ip
 801e7aa:	e79c      	b.n	801e6e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801e7ac:	2300      	movs	r3, #0
 801e7ae:	e79a      	b.n	801e6e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801e7b0:	463b      	mov	r3, r7
 801e7b2:	e798      	b.n	801e6e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801e7b4:	20017574 	.word	0x20017574

0801e7b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7bc:	b093      	sub	sp, #76	; 0x4c
 801e7be:	461d      	mov	r5, r3
 801e7c0:	920c      	str	r2, [sp, #48]	; 0x30
 801e7c2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e7c4:	9107      	str	r1, [sp, #28]
 801e7c6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801e7ca:	9011      	str	r0, [sp, #68]	; 0x44
 801e7cc:	6850      	ldr	r0, [r2, #4]
 801e7ce:	6812      	ldr	r2, [r2, #0]
 801e7d0:	fb00 1303 	mla	r3, r0, r3, r1
 801e7d4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e7d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e7da:	689b      	ldr	r3, [r3, #8]
 801e7dc:	3301      	adds	r3, #1
 801e7de:	f023 0301 	bic.w	r3, r3, #1
 801e7e2:	9306      	str	r3, [sp, #24]
 801e7e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e7e6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801e7ea:	681f      	ldr	r7, [r3, #0]
 801e7ec:	9b07      	ldr	r3, [sp, #28]
 801e7ee:	2b00      	cmp	r3, #0
 801e7f0:	dc03      	bgt.n	801e7fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801e7f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e7f4:	2b00      	cmp	r3, #0
 801e7f6:	f340 8267 	ble.w	801ecc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801e7fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e7fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e800:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e804:	1e48      	subs	r0, r1, #1
 801e806:	f102 3cff 	add.w	ip, r2, #4294967295
 801e80a:	2d00      	cmp	r5, #0
 801e80c:	f340 80b8 	ble.w	801e980 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801e810:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e814:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e818:	d406      	bmi.n	801e828 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e81a:	4586      	cmp	lr, r0
 801e81c:	da04      	bge.n	801e828 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e81e:	2b00      	cmp	r3, #0
 801e820:	db02      	blt.n	801e828 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e822:	4563      	cmp	r3, ip
 801e824:	f2c0 80ad 	blt.w	801e982 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801e828:	f11e 0e01 	adds.w	lr, lr, #1
 801e82c:	f100 80a0 	bmi.w	801e970 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801e830:	4571      	cmp	r1, lr
 801e832:	f2c0 809d 	blt.w	801e970 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801e836:	3301      	adds	r3, #1
 801e838:	f100 809a 	bmi.w	801e970 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801e83c:	429a      	cmp	r2, r3
 801e83e:	f2c0 8097 	blt.w	801e970 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801e842:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801e846:	9509      	str	r5, [sp, #36]	; 0x24
 801e848:	46c8      	mov	r8, r9
 801e84a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e84c:	2b00      	cmp	r3, #0
 801e84e:	f340 80b6 	ble.w	801e9be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801e852:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801e856:	9308      	str	r3, [sp, #32]
 801e858:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e85a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e85e:	1423      	asrs	r3, r4, #16
 801e860:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e864:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e868:	f100 813e 	bmi.w	801eae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801e86c:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e870:	455b      	cmp	r3, fp
 801e872:	f280 8139 	bge.w	801eae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801e876:	2800      	cmp	r0, #0
 801e878:	f2c0 8136 	blt.w	801eae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801e87c:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e880:	4558      	cmp	r0, fp
 801e882:	f280 8131 	bge.w	801eae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801e886:	9a06      	ldr	r2, [sp, #24]
 801e888:	fb00 3302 	mla	r3, r0, r2, r3
 801e88c:	0858      	lsrs	r0, r3, #1
 801e88e:	07da      	lsls	r2, r3, #31
 801e890:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e894:	9a08      	ldr	r2, [sp, #32]
 801e896:	bf54      	ite	pl
 801e898:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e89c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e8a0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e8a4:	fa5f fc8c 	uxtb.w	ip, ip
 801e8a8:	2a00      	cmp	r2, #0
 801e8aa:	f000 80cb 	beq.w	801ea44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e8ae:	1c58      	adds	r0, r3, #1
 801e8b0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e8b4:	07c0      	lsls	r0, r0, #31
 801e8b6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e8ba:	bf54      	ite	pl
 801e8bc:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e8c0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e8c4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e8c8:	fa5f fe8e 	uxtb.w	lr, lr
 801e8cc:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801e8d0:	b1b9      	cbz	r1, 801e902 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801e8d2:	4453      	add	r3, sl
 801e8d4:	0858      	lsrs	r0, r3, #1
 801e8d6:	07da      	lsls	r2, r3, #31
 801e8d8:	5c38      	ldrb	r0, [r7, r0]
 801e8da:	bf54      	ite	pl
 801e8dc:	f000 000f 	andpl.w	r0, r0, #15
 801e8e0:	1100      	asrmi	r0, r0, #4
 801e8e2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e8e6:	b2c0      	uxtb	r0, r0
 801e8e8:	900a      	str	r0, [sp, #40]	; 0x28
 801e8ea:	1c58      	adds	r0, r3, #1
 801e8ec:	0843      	lsrs	r3, r0, #1
 801e8ee:	07c2      	lsls	r2, r0, #31
 801e8f0:	5cfb      	ldrb	r3, [r7, r3]
 801e8f2:	bf54      	ite	pl
 801e8f4:	f003 030f 	andpl.w	r3, r3, #15
 801e8f8:	111b      	asrmi	r3, r3, #4
 801e8fa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e8fe:	b2db      	uxtb	r3, r3
 801e900:	930e      	str	r3, [sp, #56]	; 0x38
 801e902:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801e906:	b289      	uxth	r1, r1
 801e908:	fb02 f301 	mul.w	r3, r2, r1
 801e90c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e910:	0112      	lsls	r2, r2, #4
 801e912:	b289      	uxth	r1, r1
 801e914:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801e918:	1a40      	subs	r0, r0, r1
 801e91a:	fa1f fe80 	uxth.w	lr, r0
 801e91e:	1ad2      	subs	r2, r2, r3
 801e920:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e922:	b292      	uxth	r2, r2
 801e924:	4342      	muls	r2, r0
 801e926:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801e92a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e92c:	fb01 c102 	mla	r1, r1, r2, ip
 801e930:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e932:	fb03 1302 	mla	r3, r3, r2, r1
 801e936:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e93a:	2bff      	cmp	r3, #255	; 0xff
 801e93c:	f040 8093 	bne.w	801ea66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e940:	4bbe      	ldr	r3, [pc, #760]	; (801ec3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801e942:	681a      	ldr	r2, [r3, #0]
 801e944:	4bbe      	ldr	r3, [pc, #760]	; (801ec40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801e946:	0951      	lsrs	r1, r2, #5
 801e948:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801e94c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e950:	430b      	orrs	r3, r1
 801e952:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e956:	4313      	orrs	r3, r2
 801e958:	f8a8 3000 	strh.w	r3, [r8]
 801e95c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e95e:	441c      	add	r4, r3
 801e960:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e962:	441e      	add	r6, r3
 801e964:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e966:	3b01      	subs	r3, #1
 801e968:	f108 0802 	add.w	r8, r8, #2
 801e96c:	9309      	str	r3, [sp, #36]	; 0x24
 801e96e:	e76c      	b.n	801e84a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e970:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e972:	441c      	add	r4, r3
 801e974:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e976:	3d01      	subs	r5, #1
 801e978:	441e      	add	r6, r3
 801e97a:	f109 0902 	add.w	r9, r9, #2
 801e97e:	e744      	b.n	801e80a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e980:	d021      	beq.n	801e9c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801e982:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e984:	1e6b      	subs	r3, r5, #1
 801e986:	fb00 4003 	mla	r0, r0, r3, r4
 801e98a:	1400      	asrs	r0, r0, #16
 801e98c:	f53f af59 	bmi.w	801e842 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801e990:	3901      	subs	r1, #1
 801e992:	4288      	cmp	r0, r1
 801e994:	f6bf af55 	bge.w	801e842 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801e998:	9920      	ldr	r1, [sp, #128]	; 0x80
 801e99a:	fb01 6303 	mla	r3, r1, r3, r6
 801e99e:	141b      	asrs	r3, r3, #16
 801e9a0:	f53f af4f 	bmi.w	801e842 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801e9a4:	3a01      	subs	r2, #1
 801e9a6:	4293      	cmp	r3, r2
 801e9a8:	f6bf af4b 	bge.w	801e842 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801e9ac:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801e9b0:	9308      	str	r3, [sp, #32]
 801e9b2:	46a8      	mov	r8, r5
 801e9b4:	46ce      	mov	lr, r9
 801e9b6:	f1b8 0f00 	cmp.w	r8, #0
 801e9ba:	f300 80b5 	bgt.w	801eb28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e9be:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e9c2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801e9c6:	9b07      	ldr	r3, [sp, #28]
 801e9c8:	2b00      	cmp	r3, #0
 801e9ca:	f340 817d 	ble.w	801ecc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801e9ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e9d2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e9d6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e9da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e9dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e9e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e9e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e9e8:	eef0 6a62 	vmov.f32	s13, s5
 801e9ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e9f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e9f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e9f8:	ee16 4a90 	vmov	r4, s13
 801e9fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ea00:	eef0 6a43 	vmov.f32	s13, s6
 801ea04:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ea08:	ee12 2a90 	vmov	r2, s5
 801ea0c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ea10:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea14:	ee13 2a10 	vmov	r2, s6
 801ea18:	931f      	str	r3, [sp, #124]	; 0x7c
 801ea1a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ea1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea20:	9320      	str	r3, [sp, #128]	; 0x80
 801ea22:	9b07      	ldr	r3, [sp, #28]
 801ea24:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ea26:	3b01      	subs	r3, #1
 801ea28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea2c:	9307      	str	r3, [sp, #28]
 801ea2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ea30:	ee16 6a90 	vmov	r6, s13
 801ea34:	bf14      	ite	ne
 801ea36:	461d      	movne	r5, r3
 801ea38:	4615      	moveq	r5, r2
 801ea3a:	eeb0 3a67 	vmov.f32	s6, s15
 801ea3e:	eef0 2a47 	vmov.f32	s5, s14
 801ea42:	e6d3      	b.n	801e7ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ea44:	2900      	cmp	r1, #0
 801ea46:	f43f af5c 	beq.w	801e902 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ea4a:	eb0a 0003 	add.w	r0, sl, r3
 801ea4e:	0843      	lsrs	r3, r0, #1
 801ea50:	07c0      	lsls	r0, r0, #31
 801ea52:	5cfb      	ldrb	r3, [r7, r3]
 801ea54:	bf54      	ite	pl
 801ea56:	f003 030f 	andpl.w	r3, r3, #15
 801ea5a:	111b      	asrmi	r3, r3, #4
 801ea5c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ea60:	b2db      	uxtb	r3, r3
 801ea62:	930a      	str	r3, [sp, #40]	; 0x28
 801ea64:	e74d      	b.n	801e902 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ea66:	2b00      	cmp	r3, #0
 801ea68:	f43f af78 	beq.w	801e95c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ea6c:	4a73      	ldr	r2, [pc, #460]	; (801ec3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801ea6e:	f8b8 c000 	ldrh.w	ip, [r8]
 801ea72:	6810      	ldr	r0, [r2, #0]
 801ea74:	fa1f fe83 	uxth.w	lr, r3
 801ea78:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ea7c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ea80:	43db      	mvns	r3, r3
 801ea82:	b2db      	uxtb	r3, r3
 801ea84:	fb12 f20e 	smulbb	r2, r2, lr
 801ea88:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ea8c:	fb01 2103 	mla	r1, r1, r3, r2
 801ea90:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ea94:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ea98:	b2c0      	uxtb	r0, r0
 801ea9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ea9e:	fb1b fb0e 	smulbb	fp, fp, lr
 801eaa2:	b289      	uxth	r1, r1
 801eaa4:	fb10 fe0e 	smulbb	lr, r0, lr
 801eaa8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801eaac:	fa5f fc8c 	uxtb.w	ip, ip
 801eab0:	fb02 b203 	mla	r2, r2, r3, fp
 801eab4:	1c48      	adds	r0, r1, #1
 801eab6:	fb0c e303 	mla	r3, ip, r3, lr
 801eaba:	b292      	uxth	r2, r2
 801eabc:	b29b      	uxth	r3, r3
 801eabe:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801eac2:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801eac6:	f102 0b01 	add.w	fp, r2, #1
 801eaca:	1c59      	adds	r1, r3, #1
 801eacc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ead0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ead4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ead8:	0952      	lsrs	r2, r2, #5
 801eada:	4301      	orrs	r1, r0
 801eadc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eae0:	4311      	orrs	r1, r2
 801eae2:	f8a8 1000 	strh.w	r1, [r8]
 801eae6:	e739      	b.n	801e95c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801eae8:	f113 0b01 	adds.w	fp, r3, #1
 801eaec:	f53f af36 	bmi.w	801e95c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801eaf0:	45dc      	cmp	ip, fp
 801eaf2:	f6ff af33 	blt.w	801e95c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801eaf6:	f110 0b01 	adds.w	fp, r0, #1
 801eafa:	f53f af2f 	bmi.w	801e95c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801eafe:	45de      	cmp	lr, fp
 801eb00:	f6ff af2c 	blt.w	801e95c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801eb04:	9a08      	ldr	r2, [sp, #32]
 801eb06:	9302      	str	r3, [sp, #8]
 801eb08:	fa0f f38e 	sxth.w	r3, lr
 801eb0c:	9301      	str	r3, [sp, #4]
 801eb0e:	fa0f f38c 	sxth.w	r3, ip
 801eb12:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801eb16:	9105      	str	r1, [sp, #20]
 801eb18:	9300      	str	r3, [sp, #0]
 801eb1a:	463a      	mov	r2, r7
 801eb1c:	4653      	mov	r3, sl
 801eb1e:	4641      	mov	r1, r8
 801eb20:	9811      	ldr	r0, [sp, #68]	; 0x44
 801eb22:	f7ff fd73 	bl	801e60c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801eb26:	e719      	b.n	801e95c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801eb28:	9906      	ldr	r1, [sp, #24]
 801eb2a:	1422      	asrs	r2, r4, #16
 801eb2c:	1433      	asrs	r3, r6, #16
 801eb2e:	fb01 2303 	mla	r3, r1, r3, r2
 801eb32:	085a      	lsrs	r2, r3, #1
 801eb34:	07d9      	lsls	r1, r3, #31
 801eb36:	5cba      	ldrb	r2, [r7, r2]
 801eb38:	bf54      	ite	pl
 801eb3a:	f002 020f 	andpl.w	r2, r2, #15
 801eb3e:	1112      	asrmi	r2, r2, #4
 801eb40:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801eb44:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801eb48:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801eb4c:	b2d2      	uxtb	r2, r2
 801eb4e:	2800      	cmp	r0, #0
 801eb50:	d062      	beq.n	801ec18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801eb52:	f103 0a01 	add.w	sl, r3, #1
 801eb56:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801eb5a:	f01a 0f01 	tst.w	sl, #1
 801eb5e:	5c79      	ldrb	r1, [r7, r1]
 801eb60:	bf0c      	ite	eq
 801eb62:	f001 010f 	andeq.w	r1, r1, #15
 801eb66:	1109      	asrne	r1, r1, #4
 801eb68:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801eb6c:	b2c9      	uxtb	r1, r1
 801eb6e:	910f      	str	r1, [sp, #60]	; 0x3c
 801eb70:	f1bc 0f00 	cmp.w	ip, #0
 801eb74:	d019      	beq.n	801ebaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801eb76:	9908      	ldr	r1, [sp, #32]
 801eb78:	440b      	add	r3, r1
 801eb7a:	0859      	lsrs	r1, r3, #1
 801eb7c:	f013 0f01 	tst.w	r3, #1
 801eb80:	5c79      	ldrb	r1, [r7, r1]
 801eb82:	bf0c      	ite	eq
 801eb84:	f001 010f 	andeq.w	r1, r1, #15
 801eb88:	1109      	asrne	r1, r1, #4
 801eb8a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801eb8e:	b2c9      	uxtb	r1, r1
 801eb90:	3301      	adds	r3, #1
 801eb92:	910b      	str	r1, [sp, #44]	; 0x2c
 801eb94:	0859      	lsrs	r1, r3, #1
 801eb96:	07db      	lsls	r3, r3, #31
 801eb98:	5c79      	ldrb	r1, [r7, r1]
 801eb9a:	bf54      	ite	pl
 801eb9c:	f001 010f 	andpl.w	r1, r1, #15
 801eba0:	1109      	asrmi	r1, r1, #4
 801eba2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801eba6:	b2c9      	uxtb	r1, r1
 801eba8:	9110      	str	r1, [sp, #64]	; 0x40
 801ebaa:	b280      	uxth	r0, r0
 801ebac:	fa1f fc8c 	uxth.w	ip, ip
 801ebb0:	fb00 f30c 	mul.w	r3, r0, ip
 801ebb4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801ebb8:	0100      	lsls	r0, r0, #4
 801ebba:	fa1f fc8c 	uxth.w	ip, ip
 801ebbe:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801ebc2:	eba1 010c 	sub.w	r1, r1, ip
 801ebc6:	fa1f fa81 	uxth.w	sl, r1
 801ebca:	1ac0      	subs	r0, r0, r3
 801ebcc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ebce:	b280      	uxth	r0, r0
 801ebd0:	4348      	muls	r0, r1
 801ebd2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801ebd4:	fb02 020a 	mla	r2, r2, sl, r0
 801ebd8:	fb0c 2c01 	mla	ip, ip, r1, r2
 801ebdc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ebde:	fb03 c302 	mla	r3, r3, r2, ip
 801ebe2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ebe6:	2bff      	cmp	r3, #255	; 0xff
 801ebe8:	d12c      	bne.n	801ec44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801ebea:	4b14      	ldr	r3, [pc, #80]	; (801ec3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801ebec:	681a      	ldr	r2, [r3, #0]
 801ebee:	4b14      	ldr	r3, [pc, #80]	; (801ec40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801ebf0:	0951      	lsrs	r1, r2, #5
 801ebf2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801ebf6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ebfa:	430b      	orrs	r3, r1
 801ebfc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ec00:	4313      	orrs	r3, r2
 801ec02:	f8ae 3000 	strh.w	r3, [lr]
 801ec06:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ec08:	441c      	add	r4, r3
 801ec0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ec0c:	f10e 0e02 	add.w	lr, lr, #2
 801ec10:	441e      	add	r6, r3
 801ec12:	f108 38ff 	add.w	r8, r8, #4294967295
 801ec16:	e6ce      	b.n	801e9b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801ec18:	f1bc 0f00 	cmp.w	ip, #0
 801ec1c:	d0c5      	beq.n	801ebaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801ec1e:	9908      	ldr	r1, [sp, #32]
 801ec20:	440b      	add	r3, r1
 801ec22:	0859      	lsrs	r1, r3, #1
 801ec24:	07db      	lsls	r3, r3, #31
 801ec26:	5c79      	ldrb	r1, [r7, r1]
 801ec28:	bf54      	ite	pl
 801ec2a:	f001 010f 	andpl.w	r1, r1, #15
 801ec2e:	1109      	asrmi	r1, r1, #4
 801ec30:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ec34:	b2c9      	uxtb	r1, r1
 801ec36:	910b      	str	r1, [sp, #44]	; 0x2c
 801ec38:	e7b7      	b.n	801ebaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801ec3a:	bf00      	nop
 801ec3c:	20017574 	.word	0x20017574
 801ec40:	fffff800 	.word	0xfffff800
 801ec44:	2b00      	cmp	r3, #0
 801ec46:	d0de      	beq.n	801ec06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ec48:	4a21      	ldr	r2, [pc, #132]	; (801ecd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801ec4a:	f8be c000 	ldrh.w	ip, [lr]
 801ec4e:	6810      	ldr	r0, [r2, #0]
 801ec50:	fa1f fa83 	uxth.w	sl, r3
 801ec54:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ec58:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ec5c:	43db      	mvns	r3, r3
 801ec5e:	b2db      	uxtb	r3, r3
 801ec60:	fb12 f20a 	smulbb	r2, r2, sl
 801ec64:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ec68:	fb01 2103 	mla	r1, r1, r3, r2
 801ec6c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ec70:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ec74:	b2c0      	uxtb	r0, r0
 801ec76:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ec7a:	fa5f fc8c 	uxtb.w	ip, ip
 801ec7e:	fb10 f00a 	smulbb	r0, r0, sl
 801ec82:	fb0c 0003 	mla	r0, ip, r3, r0
 801ec86:	b289      	uxth	r1, r1
 801ec88:	fb1b fb0a 	smulbb	fp, fp, sl
 801ec8c:	b280      	uxth	r0, r0
 801ec8e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ec92:	fb02 b203 	mla	r2, r2, r3, fp
 801ec96:	1c4b      	adds	r3, r1, #1
 801ec98:	f100 0b01 	add.w	fp, r0, #1
 801ec9c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801eca0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801eca4:	b292      	uxth	r2, r2
 801eca6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801ecaa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ecae:	ea4b 0101 	orr.w	r1, fp, r1
 801ecb2:	f102 0b01 	add.w	fp, r2, #1
 801ecb6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ecba:	0952      	lsrs	r2, r2, #5
 801ecbc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ecc0:	4311      	orrs	r1, r2
 801ecc2:	f8ae 1000 	strh.w	r1, [lr]
 801ecc6:	e79e      	b.n	801ec06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ecc8:	b013      	add	sp, #76	; 0x4c
 801ecca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ecce:	bf00      	nop
 801ecd0:	20017574 	.word	0x20017574

0801ecd4 <CRC_Lock>:
 801ecd4:	b530      	push	{r4, r5, lr}
 801ecd6:	4a20      	ldr	r2, [pc, #128]	; (801ed58 <CRC_Lock+0x84>)
 801ecd8:	6813      	ldr	r3, [r2, #0]
 801ecda:	f023 0301 	bic.w	r3, r3, #1
 801ecde:	6013      	str	r3, [r2, #0]
 801ece0:	4b1e      	ldr	r3, [pc, #120]	; (801ed5c <CRC_Lock+0x88>)
 801ece2:	681a      	ldr	r2, [r3, #0]
 801ece4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801ece8:	4022      	ands	r2, r4
 801ecea:	f24c 2540 	movw	r5, #49728	; 0xc240
 801ecee:	42aa      	cmp	r2, r5
 801ecf0:	d005      	beq.n	801ecfe <CRC_Lock+0x2a>
 801ecf2:	681b      	ldr	r3, [r3, #0]
 801ecf4:	f24c 2270 	movw	r2, #49776	; 0xc270
 801ecf8:	4023      	ands	r3, r4
 801ecfa:	4293      	cmp	r3, r2
 801ecfc:	d124      	bne.n	801ed48 <CRC_Lock+0x74>
 801ecfe:	4b18      	ldr	r3, [pc, #96]	; (801ed60 <CRC_Lock+0x8c>)
 801ed00:	681b      	ldr	r3, [r3, #0]
 801ed02:	bb0b      	cbnz	r3, 801ed48 <CRC_Lock+0x74>
 801ed04:	4b17      	ldr	r3, [pc, #92]	; (801ed64 <CRC_Lock+0x90>)
 801ed06:	681a      	ldr	r2, [r3, #0]
 801ed08:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ed0c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801ed10:	d00d      	beq.n	801ed2e <CRC_Lock+0x5a>
 801ed12:	681a      	ldr	r2, [r3, #0]
 801ed14:	f240 4483 	movw	r4, #1155	; 0x483
 801ed18:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ed1c:	42a2      	cmp	r2, r4
 801ed1e:	d006      	beq.n	801ed2e <CRC_Lock+0x5a>
 801ed20:	681b      	ldr	r3, [r3, #0]
 801ed22:	f240 4285 	movw	r2, #1157	; 0x485
 801ed26:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ed2a:	4293      	cmp	r3, r2
 801ed2c:	d10c      	bne.n	801ed48 <CRC_Lock+0x74>
 801ed2e:	4b0e      	ldr	r3, [pc, #56]	; (801ed68 <CRC_Lock+0x94>)
 801ed30:	2201      	movs	r2, #1
 801ed32:	601a      	str	r2, [r3, #0]
 801ed34:	681a      	ldr	r2, [r3, #0]
 801ed36:	2a00      	cmp	r2, #0
 801ed38:	d1fc      	bne.n	801ed34 <CRC_Lock+0x60>
 801ed3a:	4b0c      	ldr	r3, [pc, #48]	; (801ed6c <CRC_Lock+0x98>)
 801ed3c:	6018      	str	r0, [r3, #0]
 801ed3e:	6818      	ldr	r0, [r3, #0]
 801ed40:	1a43      	subs	r3, r0, r1
 801ed42:	4258      	negs	r0, r3
 801ed44:	4158      	adcs	r0, r3
 801ed46:	bd30      	pop	{r4, r5, pc}
 801ed48:	4b09      	ldr	r3, [pc, #36]	; (801ed70 <CRC_Lock+0x9c>)
 801ed4a:	2201      	movs	r2, #1
 801ed4c:	601a      	str	r2, [r3, #0]
 801ed4e:	681a      	ldr	r2, [r3, #0]
 801ed50:	2a00      	cmp	r2, #0
 801ed52:	d1fc      	bne.n	801ed4e <CRC_Lock+0x7a>
 801ed54:	4b07      	ldr	r3, [pc, #28]	; (801ed74 <CRC_Lock+0xa0>)
 801ed56:	e7f1      	b.n	801ed3c <CRC_Lock+0x68>
 801ed58:	e0002000 	.word	0xe0002000
 801ed5c:	e000ed00 	.word	0xe000ed00
 801ed60:	e0042000 	.word	0xe0042000
 801ed64:	5c001000 	.word	0x5c001000
 801ed68:	58024c08 	.word	0x58024c08
 801ed6c:	58024c00 	.word	0x58024c00
 801ed70:	40023008 	.word	0x40023008
 801ed74:	40023000 	.word	0x40023000

0801ed78 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801ed78:	6101      	str	r1, [r0, #16]
 801ed7a:	4770      	bx	lr

0801ed7c <_ZN8touchgfx8Gestures4tickEv>:
 801ed7c:	7b83      	ldrb	r3, [r0, #14]
 801ed7e:	b14b      	cbz	r3, 801ed94 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801ed80:	8903      	ldrh	r3, [r0, #8]
 801ed82:	3301      	adds	r3, #1
 801ed84:	b29b      	uxth	r3, r3
 801ed86:	2b07      	cmp	r3, #7
 801ed88:	8103      	strh	r3, [r0, #8]
 801ed8a:	bf81      	itttt	hi
 801ed8c:	2300      	movhi	r3, #0
 801ed8e:	8143      	strhhi	r3, [r0, #10]
 801ed90:	8183      	strhhi	r3, [r0, #12]
 801ed92:	7383      	strbhi	r3, [r0, #14]
 801ed94:	4770      	bx	lr
	...

0801ed98 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801ed98:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801ed9c:	4698      	mov	r8, r3
 801ed9e:	8883      	ldrh	r3, [r0, #4]
 801eda0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801eda4:	eba8 0303 	sub.w	r3, r8, r3
 801eda8:	b21b      	sxth	r3, r3
 801edaa:	4604      	mov	r4, r0
 801edac:	2b00      	cmp	r3, #0
 801edae:	4617      	mov	r7, r2
 801edb0:	4a18      	ldr	r2, [pc, #96]	; (801ee14 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801edb2:	9200      	str	r2, [sp, #0]
 801edb4:	bfb8      	it	lt
 801edb6:	425b      	neglt	r3, r3
 801edb8:	8aa2      	ldrh	r2, [r4, #20]
 801edba:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801edbe:	f8ad 800a 	strh.w	r8, [sp, #10]
 801edc2:	b21b      	sxth	r3, r3
 801edc4:	460e      	mov	r6, r1
 801edc6:	4293      	cmp	r3, r2
 801edc8:	88c1      	ldrh	r1, [r0, #6]
 801edca:	f8ad 1008 	strh.w	r1, [sp, #8]
 801edce:	f04f 0000 	mov.w	r0, #0
 801edd2:	f88d 0004 	strb.w	r0, [sp, #4]
 801edd6:	f8ad 500c 	strh.w	r5, [sp, #12]
 801edda:	dc07      	bgt.n	801edec <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801eddc:	1a69      	subs	r1, r5, r1
 801edde:	b209      	sxth	r1, r1
 801ede0:	2900      	cmp	r1, #0
 801ede2:	bfb8      	it	lt
 801ede4:	4249      	neglt	r1, r1
 801ede6:	b209      	sxth	r1, r1
 801ede8:	428a      	cmp	r2, r1
 801edea:	da10      	bge.n	801ee0e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801edec:	6920      	ldr	r0, [r4, #16]
 801edee:	6803      	ldr	r3, [r0, #0]
 801edf0:	4669      	mov	r1, sp
 801edf2:	685b      	ldr	r3, [r3, #4]
 801edf4:	4798      	blx	r3
 801edf6:	eba8 0606 	sub.w	r6, r8, r6
 801edfa:	2300      	movs	r3, #0
 801edfc:	1bef      	subs	r7, r5, r7
 801edfe:	2001      	movs	r0, #1
 801ee00:	8123      	strh	r3, [r4, #8]
 801ee02:	8166      	strh	r6, [r4, #10]
 801ee04:	81a7      	strh	r7, [r4, #12]
 801ee06:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ee0a:	80e5      	strh	r5, [r4, #6]
 801ee0c:	73a0      	strb	r0, [r4, #14]
 801ee0e:	b004      	add	sp, #16
 801ee10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ee14:	08022d54 	.word	0x08022d54

0801ee18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801ee18:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ee1a:	461e      	mov	r6, r3
 801ee1c:	1e4b      	subs	r3, r1, #1
 801ee1e:	2b01      	cmp	r3, #1
 801ee20:	b085      	sub	sp, #20
 801ee22:	4604      	mov	r4, r0
 801ee24:	460d      	mov	r5, r1
 801ee26:	4617      	mov	r7, r2
 801ee28:	d84b      	bhi.n	801eec2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801ee2a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ee2e:	1cd3      	adds	r3, r2, #3
 801ee30:	b29b      	uxth	r3, r3
 801ee32:	2b06      	cmp	r3, #6
 801ee34:	d916      	bls.n	801ee64 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801ee36:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801eed8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ee3a:	f8cd c004 	str.w	ip, [sp, #4]
 801ee3e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ee42:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ee46:	6900      	ldr	r0, [r0, #16]
 801ee48:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ee4c:	f04f 0c00 	mov.w	ip, #0
 801ee50:	f88d c008 	strb.w	ip, [sp, #8]
 801ee54:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ee58:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ee5c:	6803      	ldr	r3, [r0, #0]
 801ee5e:	a901      	add	r1, sp, #4
 801ee60:	689b      	ldr	r3, [r3, #8]
 801ee62:	4798      	blx	r3
 801ee64:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ee68:	1cd3      	adds	r3, r2, #3
 801ee6a:	b29b      	uxth	r3, r3
 801ee6c:	2b06      	cmp	r3, #6
 801ee6e:	d916      	bls.n	801ee9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ee70:	f8df c064 	ldr.w	ip, [pc, #100]	; 801eed8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ee74:	f8cd c004 	str.w	ip, [sp, #4]
 801ee78:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ee7c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ee80:	6920      	ldr	r0, [r4, #16]
 801ee82:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ee86:	f04f 0c01 	mov.w	ip, #1
 801ee8a:	f88d c008 	strb.w	ip, [sp, #8]
 801ee8e:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ee92:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ee96:	6803      	ldr	r3, [r0, #0]
 801ee98:	a901      	add	r1, sp, #4
 801ee9a:	689b      	ldr	r3, [r3, #8]
 801ee9c:	4798      	blx	r3
 801ee9e:	4b0d      	ldr	r3, [pc, #52]	; (801eed4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801eea0:	9301      	str	r3, [sp, #4]
 801eea2:	6920      	ldr	r0, [r4, #16]
 801eea4:	f88d 5008 	strb.w	r5, [sp, #8]
 801eea8:	2300      	movs	r3, #0
 801eeaa:	f8ad 700a 	strh.w	r7, [sp, #10]
 801eeae:	f8ad 600c 	strh.w	r6, [sp, #12]
 801eeb2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801eeb6:	6803      	ldr	r3, [r0, #0]
 801eeb8:	a901      	add	r1, sp, #4
 801eeba:	681b      	ldr	r3, [r3, #0]
 801eebc:	4798      	blx	r3
 801eebe:	b005      	add	sp, #20
 801eec0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801eec2:	2900      	cmp	r1, #0
 801eec4:	d1eb      	bne.n	801ee9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801eec6:	80a2      	strh	r2, [r4, #4]
 801eec8:	80c6      	strh	r6, [r0, #6]
 801eeca:	60a1      	str	r1, [r4, #8]
 801eecc:	81a1      	strh	r1, [r4, #12]
 801eece:	73a1      	strb	r1, [r4, #14]
 801eed0:	e7e5      	b.n	801ee9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801eed2:	bf00      	nop
 801eed4:	08022d40 	.word	0x08022d40
 801eed8:	08022d68 	.word	0x08022d68

0801eedc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 801eedc:	10c9      	asrs	r1, r1, #3
 801eede:	2900      	cmp	r1, #0
 801eee0:	bfb8      	it	lt
 801eee2:	4249      	neglt	r1, r1
 801eee4:	2801      	cmp	r0, #1
 801eee6:	d108      	bne.n	801eefa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801eee8:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801eeec:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801eef0:	4601      	mov	r1, r0
 801eef2:	dd02      	ble.n	801eefa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801eef4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801eef8:	4770      	bx	lr
 801eefa:	29ff      	cmp	r1, #255	; 0xff
 801eefc:	bfa8      	it	ge
 801eefe:	21ff      	movge	r1, #255	; 0xff
 801ef00:	4608      	mov	r0, r1
 801ef02:	4770      	bx	lr

0801ef04 <_ZN8touchgfx10Rasterizer6lineToEii>:
 801ef04:	b410      	push	{r4}
 801ef06:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801ef0a:	429c      	cmp	r4, r3
 801ef0c:	d803      	bhi.n	801ef16 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 801ef0e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ef12:	f7ef b97d 	b.w	800e210 <_ZN8touchgfx7Outline6lineToEii>
 801ef16:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ef1a:	4770      	bx	lr

0801ef1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 801ef1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef20:	b08b      	sub	sp, #44	; 0x2c
 801ef22:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801ef26:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801ef2a:	9308      	str	r3, [sp, #32]
 801ef2c:	4606      	mov	r6, r0
 801ef2e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801ef32:	9309      	str	r3, [sp, #36]	; 0x24
 801ef34:	468a      	mov	sl, r1
 801ef36:	f7ef fad8 	bl	800e4ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801ef3a:	68b5      	ldr	r5, [r6, #8]
 801ef3c:	4604      	mov	r4, r0
 801ef3e:	2d00      	cmp	r5, #0
 801ef40:	d044      	beq.n	801efcc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801ef42:	6873      	ldr	r3, [r6, #4]
 801ef44:	42ab      	cmp	r3, r5
 801ef46:	d33d      	bcc.n	801efc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801ef48:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801ef4c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 801ef50:	eb02 0b03 	add.w	fp, r2, r3
 801ef54:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801ef58:	fb02 1203 	mla	r2, r2, r3, r1
 801ef5c:	9205      	str	r2, [sp, #20]
 801ef5e:	1e6a      	subs	r2, r5, #1
 801ef60:	9204      	str	r2, [sp, #16]
 801ef62:	f04f 0800 	mov.w	r8, #0
 801ef66:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801ef6a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ef6e:	454b      	cmp	r3, r9
 801ef70:	463a      	mov	r2, r7
 801ef72:	d008      	beq.n	801ef86 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 801ef74:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 801ef78:	eb03 0b09 	add.w	fp, r3, r9
 801ef7c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801ef80:	fb03 1309 	mla	r3, r3, r9, r1
 801ef84:	9305      	str	r3, [sp, #20]
 801ef86:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801ef8a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801ef8e:	4498      	add	r8, r3
 801ef90:	9b04      	ldr	r3, [sp, #16]
 801ef92:	3b01      	subs	r3, #1
 801ef94:	9304      	str	r3, [sp, #16]
 801ef96:	9b04      	ldr	r3, [sp, #16]
 801ef98:	3301      	adds	r3, #1
 801ef9a:	d015      	beq.n	801efc8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 801ef9c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 801efa0:	42bb      	cmp	r3, r7
 801efa2:	d117      	bne.n	801efd4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 801efa4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801efa8:	9b04      	ldr	r3, [sp, #16]
 801efaa:	4548      	cmp	r0, r9
 801efac:	f103 33ff 	add.w	r3, r3, #4294967295
 801efb0:	d17f      	bne.n	801f0b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 801efb2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 801efb6:	4401      	add	r1, r0
 801efb8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801efbc:	4480      	add	r8, r0
 801efbe:	e7e9      	b.n	801ef94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 801efc0:	461f      	mov	r7, r3
 801efc2:	e044      	b.n	801f04e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 801efc4:	2000      	movs	r0, #0
 801efc6:	e002      	b.n	801efce <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 801efc8:	2900      	cmp	r1, #0
 801efca:	d16f      	bne.n	801f0ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 801efcc:	2001      	movs	r0, #1
 801efce:	b00b      	add	sp, #44	; 0x2c
 801efd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801efd4:	2900      	cmp	r1, #0
 801efd6:	d030      	beq.n	801f03a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 801efd8:	2f00      	cmp	r7, #0
 801efda:	db29      	blt.n	801f030 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801efdc:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801efe0:	42bb      	cmp	r3, r7
 801efe2:	dd25      	ble.n	801f030 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801efe4:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 801efe8:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801efec:	f7ff ff76 	bl	801eedc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801eff0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eff2:	fb10 f003 	smulbb	r0, r0, r3
 801eff6:	b280      	uxth	r0, r0
 801eff8:	1c41      	adds	r1, r0, #1
 801effa:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801effe:	1209      	asrs	r1, r1, #8
 801f000:	f011 0fff 	tst.w	r1, #255	; 0xff
 801f004:	d014      	beq.n	801f030 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801f006:	9808      	ldr	r0, [sp, #32]
 801f008:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801f00a:	b2c9      	uxtb	r1, r1
 801f00c:	b2ba      	uxth	r2, r7
 801f00e:	9102      	str	r1, [sp, #8]
 801f010:	2101      	movs	r1, #1
 801f012:	4413      	add	r3, r2
 801f014:	9101      	str	r1, [sp, #4]
 801f016:	4402      	add	r2, r0
 801f018:	fa0f f18b 	sxth.w	r1, fp
 801f01c:	f8da 0000 	ldr.w	r0, [sl]
 801f020:	9100      	str	r1, [sp, #0]
 801f022:	6941      	ldr	r1, [r0, #20]
 801f024:	b21b      	sxth	r3, r3
 801f026:	460d      	mov	r5, r1
 801f028:	b212      	sxth	r2, r2
 801f02a:	9905      	ldr	r1, [sp, #20]
 801f02c:	4650      	mov	r0, sl
 801f02e:	47a8      	blx	r5
 801f030:	9b04      	ldr	r3, [sp, #16]
 801f032:	3301      	adds	r3, #1
 801f034:	f107 0201 	add.w	r2, r7, #1
 801f038:	d0c8      	beq.n	801efcc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801f03a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f03e:	1abb      	subs	r3, r7, r2
 801f040:	2b00      	cmp	r3, #0
 801f042:	dd31      	ble.n	801f0a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f044:	2a00      	cmp	r2, #0
 801f046:	dabb      	bge.n	801efc0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 801f048:	2f00      	cmp	r7, #0
 801f04a:	dd2d      	ble.n	801f0a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f04c:	2200      	movs	r2, #0
 801f04e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801f052:	19d1      	adds	r1, r2, r7
 801f054:	4299      	cmp	r1, r3
 801f056:	db02      	blt.n	801f05e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 801f058:	1a9f      	subs	r7, r3, r2
 801f05a:	2f00      	cmp	r7, #0
 801f05c:	dd24      	ble.n	801f0a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f05e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 801f062:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801f066:	f7ff ff39 	bl	801eedc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801f06a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f06c:	fb10 f003 	smulbb	r0, r0, r3
 801f070:	b280      	uxth	r0, r0
 801f072:	1c41      	adds	r1, r0, #1
 801f074:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801f078:	1209      	asrs	r1, r1, #8
 801f07a:	f011 0fff 	tst.w	r1, #255	; 0xff
 801f07e:	d013      	beq.n	801f0a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f080:	9808      	ldr	r0, [sp, #32]
 801f082:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801f084:	b292      	uxth	r2, r2
 801f086:	b2c9      	uxtb	r1, r1
 801f088:	4413      	add	r3, r2
 801f08a:	9102      	str	r1, [sp, #8]
 801f08c:	4402      	add	r2, r0
 801f08e:	b23f      	sxth	r7, r7
 801f090:	f8da 0000 	ldr.w	r0, [sl]
 801f094:	9701      	str	r7, [sp, #4]
 801f096:	fa0f f18b 	sxth.w	r1, fp
 801f09a:	9100      	str	r1, [sp, #0]
 801f09c:	6947      	ldr	r7, [r0, #20]
 801f09e:	9905      	ldr	r1, [sp, #20]
 801f0a0:	b21b      	sxth	r3, r3
 801f0a2:	b212      	sxth	r2, r2
 801f0a4:	4650      	mov	r0, sl
 801f0a6:	47b8      	blx	r7
 801f0a8:	464b      	mov	r3, r9
 801f0aa:	e75c      	b.n	801ef66 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 801f0ac:	2f00      	cmp	r7, #0
 801f0ae:	da95      	bge.n	801efdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 801f0b0:	e78c      	b.n	801efcc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801f0b2:	2900      	cmp	r1, #0
 801f0b4:	d0f8      	beq.n	801f0a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f0b6:	e78f      	b.n	801efd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0801f0b8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801f0b8:	4b4c      	ldr	r3, [pc, #304]	; (801f1ec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 801f0ba:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801f0be:	2500      	movs	r5, #0
 801f0c0:	f100 0620 	add.w	r6, r0, #32
 801f0c4:	4604      	mov	r4, r0
 801f0c6:	e9c0 3100 	strd	r3, r1, [r0]
 801f0ca:	e9c0 5502 	strd	r5, r5, [r0, #8]
 801f0ce:	e9c0 5504 	strd	r5, r5, [r0, #16]
 801f0d2:	e9c0 5506 	strd	r5, r5, [r0, #24]
 801f0d6:	f100 0718 	add.w	r7, r0, #24
 801f0da:	4630      	mov	r0, r6
 801f0dc:	4690      	mov	r8, r2
 801f0de:	f7ee fbcf 	bl	800d880 <_ZN8touchgfx7OutlineC1Ev>
 801f0e2:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 801f0e6:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 801f0ea:	2301      	movs	r3, #1
 801f0ec:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 801f0f0:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 801f0f4:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 801f0f8:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 801f0fc:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801f100:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 801f104:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 801f108:	f9b8 2000 	ldrsh.w	r2, [r8]
 801f10c:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801f110:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801f114:	9500      	str	r5, [sp, #0]
 801f116:	4410      	add	r0, r2
 801f118:	b280      	uxth	r0, r0
 801f11a:	fa0f fa80 	sxth.w	sl, r0
 801f11e:	45aa      	cmp	sl, r5
 801f120:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801f124:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801f128:	dd5c      	ble.n	801f1e4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f12a:	4591      	cmp	r9, r2
 801f12c:	dd5a      	ble.n	801f1e4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f12e:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801f132:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801f136:	440b      	add	r3, r1
 801f138:	b29b      	uxth	r3, r3
 801f13a:	b21d      	sxth	r5, r3
 801f13c:	2d00      	cmp	r5, #0
 801f13e:	dd51      	ble.n	801f1e4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f140:	458e      	cmp	lr, r1
 801f142:	dd4f      	ble.n	801f1e4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f144:	45d1      	cmp	r9, sl
 801f146:	bfb8      	it	lt
 801f148:	fa1f f089 	uxthlt.w	r0, r9
 801f14c:	45ae      	cmp	lr, r5
 801f14e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801f152:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801f156:	bfb8      	it	lt
 801f158:	fa1f f38e 	uxthlt.w	r3, lr
 801f15c:	1a80      	subs	r0, r0, r2
 801f15e:	1a5b      	subs	r3, r3, r1
 801f160:	f8ad 0004 	strh.w	r0, [sp, #4]
 801f164:	f8ad 3006 	strh.w	r3, [sp, #6]
 801f168:	f8ad 2000 	strh.w	r2, [sp]
 801f16c:	f8ad 1002 	strh.w	r1, [sp, #2]
 801f170:	466d      	mov	r5, sp
 801f172:	e895 0003 	ldmia.w	r5, {r0, r1}
 801f176:	e887 0003 	stmia.w	r7, {r0, r1}
 801f17a:	f8dc 3000 	ldr.w	r3, [ip]
 801f17e:	4660      	mov	r0, ip
 801f180:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f182:	4639      	mov	r1, r7
 801f184:	4798      	blx	r3
 801f186:	6861      	ldr	r1, [r4, #4]
 801f188:	4628      	mov	r0, r5
 801f18a:	3104      	adds	r1, #4
 801f18c:	f7f0 fd0c 	bl	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f190:	4638      	mov	r0, r7
 801f192:	f7f0 fce1 	bl	800fb58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f196:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801f19a:	f8bd 2000 	ldrh.w	r2, [sp]
 801f19e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 801f1a2:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 801f1a6:	4630      	mov	r0, r6
 801f1a8:	f7ee fb4e 	bl	800d848 <_ZN8touchgfx7Outline5resetEv>
 801f1ac:	f9bd 3000 	ldrsh.w	r3, [sp]
 801f1b0:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 801f1b4:	015b      	lsls	r3, r3, #5
 801f1b6:	60a3      	str	r3, [r4, #8]
 801f1b8:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801f1bc:	015b      	lsls	r3, r3, #5
 801f1be:	60e3      	str	r3, [r4, #12]
 801f1c0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801f1c4:	015b      	lsls	r3, r3, #5
 801f1c6:	6123      	str	r3, [r4, #16]
 801f1c8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801f1cc:	015b      	lsls	r3, r3, #5
 801f1ce:	6163      	str	r3, [r4, #20]
 801f1d0:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 801f1d4:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 801f1d8:	4620      	mov	r0, r4
 801f1da:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 801f1de:	b002      	add	sp, #8
 801f1e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f1e4:	2300      	movs	r3, #0
 801f1e6:	9301      	str	r3, [sp, #4]
 801f1e8:	e7c2      	b.n	801f170 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 801f1ea:	bf00      	nop
 801f1ec:	08022710 	.word	0x08022710

0801f1f0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801f1f0:	b510      	push	{r4, lr}
 801f1f2:	4b07      	ldr	r3, [pc, #28]	; (801f210 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801f1f4:	781b      	ldrb	r3, [r3, #0]
 801f1f6:	2b01      	cmp	r3, #1
 801f1f8:	d108      	bne.n	801f20c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801f1fa:	6843      	ldr	r3, [r0, #4]
 801f1fc:	6814      	ldr	r4, [r2, #0]
 801f1fe:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801f202:	680b      	ldr	r3, [r1, #0]
 801f204:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801f208:	6013      	str	r3, [r2, #0]
 801f20a:	600c      	str	r4, [r1, #0]
 801f20c:	bd10      	pop	{r4, pc}
 801f20e:	bf00      	nop
 801f210:	2001755c 	.word	0x2001755c

0801f214 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801f214:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801f216:	ab02      	add	r3, sp, #8
 801f218:	4604      	mov	r4, r0
 801f21a:	f843 2d08 	str.w	r2, [r3, #-8]!
 801f21e:	9101      	str	r1, [sp, #4]
 801f220:	461a      	mov	r2, r3
 801f222:	a901      	add	r1, sp, #4
 801f224:	f7ff ffe4 	bl	801f1f0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801f228:	68a3      	ldr	r3, [r4, #8]
 801f22a:	9901      	ldr	r1, [sp, #4]
 801f22c:	9a00      	ldr	r2, [sp, #0]
 801f22e:	1ac9      	subs	r1, r1, r3
 801f230:	68e3      	ldr	r3, [r4, #12]
 801f232:	9101      	str	r1, [sp, #4]
 801f234:	1ad2      	subs	r2, r2, r3
 801f236:	2a00      	cmp	r2, #0
 801f238:	9200      	str	r2, [sp, #0]
 801f23a:	db1c      	blt.n	801f276 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 801f23c:	6963      	ldr	r3, [r4, #20]
 801f23e:	429a      	cmp	r2, r3
 801f240:	bfac      	ite	ge
 801f242:	2002      	movge	r0, #2
 801f244:	2000      	movlt	r0, #0
 801f246:	2900      	cmp	r1, #0
 801f248:	db17      	blt.n	801f27a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 801f24a:	6923      	ldr	r3, [r4, #16]
 801f24c:	4299      	cmp	r1, r3
 801f24e:	bfac      	ite	ge
 801f250:	2308      	movge	r3, #8
 801f252:	2300      	movlt	r3, #0
 801f254:	4303      	orrs	r3, r0
 801f256:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 801f25a:	b2dd      	uxtb	r5, r3
 801f25c:	b978      	cbnz	r0, 801f27e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 801f25e:	f104 0020 	add.w	r0, r4, #32
 801f262:	f7ff fe4f 	bl	801ef04 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f266:	9b01      	ldr	r3, [sp, #4]
 801f268:	65e3      	str	r3, [r4, #92]	; 0x5c
 801f26a:	9b00      	ldr	r3, [sp, #0]
 801f26c:	6623      	str	r3, [r4, #96]	; 0x60
 801f26e:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 801f272:	b002      	add	sp, #8
 801f274:	bd70      	pop	{r4, r5, r6, pc}
 801f276:	2001      	movs	r0, #1
 801f278:	e7e5      	b.n	801f246 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 801f27a:	2304      	movs	r3, #4
 801f27c:	e7ea      	b.n	801f254 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 801f27e:	b113      	cbz	r3, 801f286 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 801f280:	ea10 0305 	ands.w	r3, r0, r5
 801f284:	d11d      	bne.n	801f2c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 801f286:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 801f28a:	f104 0620 	add.w	r6, r4, #32
 801f28e:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 801f292:	b193      	cbz	r3, 801f2ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 801f294:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 801f298:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 801f29c:	4298      	cmp	r0, r3
 801f29e:	d802      	bhi.n	801f2a6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 801f2a0:	4630      	mov	r0, r6
 801f2a2:	f7ee ffcf 	bl	800e244 <_ZN8touchgfx7Outline6moveToEii>
 801f2a6:	2300      	movs	r3, #0
 801f2a8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801f2ac:	2301      	movs	r3, #1
 801f2ae:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801f2b2:	e9dd 2100 	ldrd	r2, r1, [sp]
 801f2b6:	4630      	mov	r0, r6
 801f2b8:	e7d3      	b.n	801f262 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 801f2ba:	4630      	mov	r0, r6
 801f2bc:	f7ff fe22 	bl	801ef04 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f2c0:	e7f7      	b.n	801f2b2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 801f2c2:	461d      	mov	r5, r3
 801f2c4:	e7cf      	b.n	801f266 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

0801f2c6 <_ZN8touchgfx6Canvas5closeEv>:
 801f2c6:	b538      	push	{r3, r4, r5, lr}
 801f2c8:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 801f2cc:	4604      	mov	r4, r0
 801f2ce:	b993      	cbnz	r3, 801f2f6 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801f2d0:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 801f2d4:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 801f2d8:	4213      	tst	r3, r2
 801f2da:	d10c      	bne.n	801f2f6 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801f2dc:	f100 0520 	add.w	r5, r0, #32
 801f2e0:	b123      	cbz	r3, 801f2ec <_ZN8touchgfx6Canvas5closeEv+0x26>
 801f2e2:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 801f2e6:	4628      	mov	r0, r5
 801f2e8:	f7ff fe0c 	bl	801ef04 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f2ec:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 801f2f0:	4628      	mov	r0, r5
 801f2f2:	f7ff fe07 	bl	801ef04 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f2f6:	2300      	movs	r3, #0
 801f2f8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801f2fc:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 801f300:	4298      	cmp	r0, r3
 801f302:	bf34      	ite	cc
 801f304:	2000      	movcc	r0, #0
 801f306:	2001      	movcs	r0, #1
 801f308:	bd38      	pop	{r3, r4, r5, pc}
	...

0801f30c <_ZN8touchgfx6Canvas6renderEh>:
 801f30c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801f310:	4604      	mov	r4, r0
 801f312:	6840      	ldr	r0, [r0, #4]
 801f314:	6803      	ldr	r3, [r0, #0]
 801f316:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801f318:	460d      	mov	r5, r1
 801f31a:	4798      	blx	r3
 801f31c:	fb10 f105 	smulbb	r1, r0, r5
 801f320:	b289      	uxth	r1, r1
 801f322:	1c4d      	adds	r5, r1, #1
 801f324:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801f328:	122d      	asrs	r5, r5, #8
 801f32a:	f000 8098 	beq.w	801f45e <_ZN8touchgfx6Canvas6renderEh+0x152>
 801f32e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 801f332:	2b00      	cmp	r3, #0
 801f334:	f000 8093 	beq.w	801f45e <_ZN8touchgfx6Canvas6renderEh+0x152>
 801f338:	4620      	mov	r0, r4
 801f33a:	f7ff ffc4 	bl	801f2c6 <_ZN8touchgfx6Canvas5closeEv>
 801f33e:	4607      	mov	r7, r0
 801f340:	2800      	cmp	r0, #0
 801f342:	d043      	beq.n	801f3cc <_ZN8touchgfx6Canvas6renderEh+0xc0>
 801f344:	6863      	ldr	r3, [r4, #4]
 801f346:	4e47      	ldr	r6, [pc, #284]	; (801f464 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 801f348:	6a98      	ldr	r0, [r3, #40]	; 0x28
 801f34a:	6837      	ldr	r7, [r6, #0]
 801f34c:	6803      	ldr	r3, [r0, #0]
 801f34e:	689b      	ldr	r3, [r3, #8]
 801f350:	4798      	blx	r3
 801f352:	4601      	mov	r1, r0
 801f354:	4638      	mov	r0, r7
 801f356:	f7eb fd47 	bl	800ade8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 801f35a:	4607      	mov	r7, r0
 801f35c:	f7e3 f840 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 801f360:	6803      	ldr	r3, [r0, #0]
 801f362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f364:	4798      	blx	r3
 801f366:	4680      	mov	r8, r0
 801f368:	f7e3 f83a 	bl	80023e0 <_ZN8touchgfx3HAL3lcdEv>
 801f36c:	6803      	ldr	r3, [r0, #0]
 801f36e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f370:	4798      	blx	r3
 801f372:	280b      	cmp	r0, #11
 801f374:	d858      	bhi.n	801f428 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 801f376:	e8df f000 	tbb	[pc, r0]
 801f37a:	594e      	.short	0x594e
 801f37c:	2d570669 	.word	0x2d570669
 801f380:	6262623d 	.word	0x6262623d
 801f384:	6262      	.short	0x6262
 801f386:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f38a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801f38e:	2208      	movs	r2, #8
 801f390:	fb91 f2f2 	sdiv	r2, r1, r2
 801f394:	fb08 2303 	mla	r3, r8, r3, r2
 801f398:	441f      	add	r7, r3
 801f39a:	424b      	negs	r3, r1
 801f39c:	f003 0307 	and.w	r3, r3, #7
 801f3a0:	f001 0107 	and.w	r1, r1, #7
 801f3a4:	bf58      	it	pl
 801f3a6:	4259      	negpl	r1, r3
 801f3a8:	b2c9      	uxtb	r1, r1
 801f3aa:	b2ed      	uxtb	r5, r5
 801f3ac:	e9cd 1500 	strd	r1, r5, [sp]
 801f3b0:	6860      	ldr	r0, [r4, #4]
 801f3b2:	fa0f f388 	sxth.w	r3, r8
 801f3b6:	463a      	mov	r2, r7
 801f3b8:	6a81      	ldr	r1, [r0, #40]	; 0x28
 801f3ba:	f104 0020 	add.w	r0, r4, #32
 801f3be:	f7ff fdad 	bl	801ef1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 801f3c2:	4607      	mov	r7, r0
 801f3c4:	6830      	ldr	r0, [r6, #0]
 801f3c6:	6803      	ldr	r3, [r0, #0]
 801f3c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f3ca:	4798      	blx	r3
 801f3cc:	4638      	mov	r0, r7
 801f3ce:	b002      	add	sp, #8
 801f3d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f3d4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f3d8:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801f3dc:	2204      	movs	r2, #4
 801f3de:	fb91 f2f2 	sdiv	r2, r1, r2
 801f3e2:	fb08 2303 	mla	r3, r8, r3, r2
 801f3e6:	441f      	add	r7, r3
 801f3e8:	424b      	negs	r3, r1
 801f3ea:	f003 0303 	and.w	r3, r3, #3
 801f3ee:	f001 0103 	and.w	r1, r1, #3
 801f3f2:	e7d7      	b.n	801f3a4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 801f3f4:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801f3f8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f3fc:	2900      	cmp	r1, #0
 801f3fe:	f04f 0202 	mov.w	r2, #2
 801f402:	fb91 f2f2 	sdiv	r2, r1, r2
 801f406:	f001 0101 	and.w	r1, r1, #1
 801f40a:	fb08 2303 	mla	r3, r8, r3, r2
 801f40e:	441f      	add	r7, r3
 801f410:	bfb8      	it	lt
 801f412:	4249      	neglt	r1, r1
 801f414:	e7c8      	b.n	801f3a8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 801f416:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f41a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801f41e:	fb08 f303 	mul.w	r3, r8, r3
 801f422:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801f426:	441f      	add	r7, r3
 801f428:	2100      	movs	r1, #0
 801f42a:	e7be      	b.n	801f3aa <_ZN8touchgfx6Canvas6renderEh+0x9e>
 801f42c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f430:	fb08 f203 	mul.w	r2, r8, r3
 801f434:	8b23      	ldrh	r3, [r4, #24]
 801f436:	2103      	movs	r1, #3
 801f438:	fb13 2301 	smlabb	r3, r3, r1, r2
 801f43c:	e7f3      	b.n	801f426 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801f43e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f442:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801f446:	fb08 2303 	mla	r3, r8, r3, r2
 801f44a:	e7ec      	b.n	801f426 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801f44c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f450:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801f454:	fb08 f303 	mul.w	r3, r8, r3
 801f458:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801f45c:	e7e3      	b.n	801f426 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801f45e:	2701      	movs	r7, #1
 801f460:	e7b4      	b.n	801f3cc <_ZN8touchgfx6Canvas6renderEh+0xc0>
 801f462:	bf00      	nop
 801f464:	20017564 	.word	0x20017564

0801f468 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801f468:	b513      	push	{r0, r1, r4, lr}
 801f46a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 801f46e:	4604      	mov	r4, r0
 801f470:	e9cd 2100 	strd	r2, r1, [sp]
 801f474:	b1a3      	cbz	r3, 801f4a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 801f476:	466a      	mov	r2, sp
 801f478:	a901      	add	r1, sp, #4
 801f47a:	4620      	mov	r0, r4
 801f47c:	f7ff feb8 	bl	801f1f0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801f480:	68a3      	ldr	r3, [r4, #8]
 801f482:	9901      	ldr	r1, [sp, #4]
 801f484:	9a00      	ldr	r2, [sp, #0]
 801f486:	1ac9      	subs	r1, r1, r3
 801f488:	68e3      	ldr	r3, [r4, #12]
 801f48a:	9101      	str	r1, [sp, #4]
 801f48c:	1ad2      	subs	r2, r2, r3
 801f48e:	2a00      	cmp	r2, #0
 801f490:	9200      	str	r2, [sp, #0]
 801f492:	da0b      	bge.n	801f4ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 801f494:	2301      	movs	r3, #1
 801f496:	2900      	cmp	r1, #0
 801f498:	da0e      	bge.n	801f4b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 801f49a:	f043 0304 	orr.w	r3, r3, #4
 801f49e:	e013      	b.n	801f4c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 801f4a0:	f7ff ff11 	bl	801f2c6 <_ZN8touchgfx6Canvas5closeEv>
 801f4a4:	2800      	cmp	r0, #0
 801f4a6:	d1e6      	bne.n	801f476 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 801f4a8:	b002      	add	sp, #8
 801f4aa:	bd10      	pop	{r4, pc}
 801f4ac:	6963      	ldr	r3, [r4, #20]
 801f4ae:	429a      	cmp	r2, r3
 801f4b0:	bfac      	ite	ge
 801f4b2:	2302      	movge	r3, #2
 801f4b4:	2300      	movlt	r3, #0
 801f4b6:	e7ee      	b.n	801f496 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 801f4b8:	6920      	ldr	r0, [r4, #16]
 801f4ba:	4281      	cmp	r1, r0
 801f4bc:	bfac      	ite	ge
 801f4be:	2008      	movge	r0, #8
 801f4c0:	2000      	movlt	r0, #0
 801f4c2:	4318      	orrs	r0, r3
 801f4c4:	b2c3      	uxtb	r3, r0
 801f4c6:	b158      	cbz	r0, 801f4e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 801f4c8:	2201      	movs	r2, #1
 801f4ca:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 801f4ce:	9901      	ldr	r1, [sp, #4]
 801f4d0:	9a00      	ldr	r2, [sp, #0]
 801f4d2:	66a1      	str	r1, [r4, #104]	; 0x68
 801f4d4:	66e2      	str	r2, [r4, #108]	; 0x6c
 801f4d6:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 801f4da:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801f4de:	e7e3      	b.n	801f4a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 801f4e0:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 801f4e4:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 801f4e8:	4298      	cmp	r0, r3
 801f4ea:	d803      	bhi.n	801f4f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 801f4ec:	f104 0020 	add.w	r0, r4, #32
 801f4f0:	f7ee fea8 	bl	800e244 <_ZN8touchgfx7Outline6moveToEii>
 801f4f4:	2300      	movs	r3, #0
 801f4f6:	2201      	movs	r2, #1
 801f4f8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801f4fc:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801f500:	e7e5      	b.n	801f4ce <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0801f502 <__aeabi_atexit>:
 801f502:	460b      	mov	r3, r1
 801f504:	4601      	mov	r1, r0
 801f506:	4618      	mov	r0, r3
 801f508:	f000 b852 	b.w	801f5b0 <__cxa_atexit>

0801f50c <_ZdlPvj>:
 801f50c:	f000 b812 	b.w	801f534 <_ZdlPv>

0801f510 <__cxa_guard_acquire>:
 801f510:	6803      	ldr	r3, [r0, #0]
 801f512:	07db      	lsls	r3, r3, #31
 801f514:	d406      	bmi.n	801f524 <__cxa_guard_acquire+0x14>
 801f516:	7843      	ldrb	r3, [r0, #1]
 801f518:	b103      	cbz	r3, 801f51c <__cxa_guard_acquire+0xc>
 801f51a:	deff      	udf	#255	; 0xff
 801f51c:	2301      	movs	r3, #1
 801f51e:	7043      	strb	r3, [r0, #1]
 801f520:	4618      	mov	r0, r3
 801f522:	4770      	bx	lr
 801f524:	2000      	movs	r0, #0
 801f526:	4770      	bx	lr

0801f528 <__cxa_guard_release>:
 801f528:	2301      	movs	r3, #1
 801f52a:	6003      	str	r3, [r0, #0]
 801f52c:	4770      	bx	lr

0801f52e <__cxa_pure_virtual>:
 801f52e:	b508      	push	{r3, lr}
 801f530:	f000 f80e 	bl	801f550 <_ZSt9terminatev>

0801f534 <_ZdlPv>:
 801f534:	f000 b988 	b.w	801f848 <free>

0801f538 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801f538:	b508      	push	{r3, lr}
 801f53a:	4780      	blx	r0
 801f53c:	f000 f80d 	bl	801f55a <abort>

0801f540 <_ZSt13get_terminatev>:
 801f540:	4b02      	ldr	r3, [pc, #8]	; (801f54c <_ZSt13get_terminatev+0xc>)
 801f542:	6818      	ldr	r0, [r3, #0]
 801f544:	f3bf 8f5b 	dmb	ish
 801f548:	4770      	bx	lr
 801f54a:	bf00      	nop
 801f54c:	200000fc 	.word	0x200000fc

0801f550 <_ZSt9terminatev>:
 801f550:	b508      	push	{r3, lr}
 801f552:	f7ff fff5 	bl	801f540 <_ZSt13get_terminatev>
 801f556:	f7ff ffef 	bl	801f538 <_ZN10__cxxabiv111__terminateEPFvvE>

0801f55a <abort>:
 801f55a:	b508      	push	{r3, lr}
 801f55c:	2006      	movs	r0, #6
 801f55e:	f000 fe01 	bl	8020164 <raise>
 801f562:	2001      	movs	r0, #1
 801f564:	f7e2 fd36 	bl	8001fd4 <_exit>

0801f568 <__assert_func>:
 801f568:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801f56a:	4614      	mov	r4, r2
 801f56c:	461a      	mov	r2, r3
 801f56e:	4b09      	ldr	r3, [pc, #36]	; (801f594 <__assert_func+0x2c>)
 801f570:	681b      	ldr	r3, [r3, #0]
 801f572:	4605      	mov	r5, r0
 801f574:	68d8      	ldr	r0, [r3, #12]
 801f576:	b14c      	cbz	r4, 801f58c <__assert_func+0x24>
 801f578:	4b07      	ldr	r3, [pc, #28]	; (801f598 <__assert_func+0x30>)
 801f57a:	9100      	str	r1, [sp, #0]
 801f57c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801f580:	4906      	ldr	r1, [pc, #24]	; (801f59c <__assert_func+0x34>)
 801f582:	462b      	mov	r3, r5
 801f584:	f000 f8fe 	bl	801f784 <fiprintf>
 801f588:	f7ff ffe7 	bl	801f55a <abort>
 801f58c:	4b04      	ldr	r3, [pc, #16]	; (801f5a0 <__assert_func+0x38>)
 801f58e:	461c      	mov	r4, r3
 801f590:	e7f3      	b.n	801f57a <__assert_func+0x12>
 801f592:	bf00      	nop
 801f594:	20000100 	.word	0x20000100
 801f598:	08023030 	.word	0x08023030
 801f59c:	0802303d 	.word	0x0802303d
 801f5a0:	0802222b 	.word	0x0802222b

0801f5a4 <atexit>:
 801f5a4:	2300      	movs	r3, #0
 801f5a6:	4601      	mov	r1, r0
 801f5a8:	461a      	mov	r2, r3
 801f5aa:	4618      	mov	r0, r3
 801f5ac:	f000 bf0c 	b.w	80203c8 <__register_exitproc>

0801f5b0 <__cxa_atexit>:
 801f5b0:	b510      	push	{r4, lr}
 801f5b2:	4c05      	ldr	r4, [pc, #20]	; (801f5c8 <__cxa_atexit+0x18>)
 801f5b4:	4613      	mov	r3, r2
 801f5b6:	b12c      	cbz	r4, 801f5c4 <__cxa_atexit+0x14>
 801f5b8:	460a      	mov	r2, r1
 801f5ba:	4601      	mov	r1, r0
 801f5bc:	2002      	movs	r0, #2
 801f5be:	f000 ff03 	bl	80203c8 <__register_exitproc>
 801f5c2:	bd10      	pop	{r4, pc}
 801f5c4:	4620      	mov	r0, r4
 801f5c6:	e7fc      	b.n	801f5c2 <__cxa_atexit+0x12>
 801f5c8:	080203c9 	.word	0x080203c9

0801f5cc <__errno>:
 801f5cc:	4b01      	ldr	r3, [pc, #4]	; (801f5d4 <__errno+0x8>)
 801f5ce:	6818      	ldr	r0, [r3, #0]
 801f5d0:	4770      	bx	lr
 801f5d2:	bf00      	nop
 801f5d4:	20000100 	.word	0x20000100

0801f5d8 <std>:
 801f5d8:	2300      	movs	r3, #0
 801f5da:	b510      	push	{r4, lr}
 801f5dc:	4604      	mov	r4, r0
 801f5de:	e9c0 3300 	strd	r3, r3, [r0]
 801f5e2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801f5e6:	6083      	str	r3, [r0, #8]
 801f5e8:	8181      	strh	r1, [r0, #12]
 801f5ea:	6643      	str	r3, [r0, #100]	; 0x64
 801f5ec:	81c2      	strh	r2, [r0, #14]
 801f5ee:	6183      	str	r3, [r0, #24]
 801f5f0:	4619      	mov	r1, r3
 801f5f2:	2208      	movs	r2, #8
 801f5f4:	305c      	adds	r0, #92	; 0x5c
 801f5f6:	f000 f93d 	bl	801f874 <memset>
 801f5fa:	4b05      	ldr	r3, [pc, #20]	; (801f610 <std+0x38>)
 801f5fc:	6263      	str	r3, [r4, #36]	; 0x24
 801f5fe:	4b05      	ldr	r3, [pc, #20]	; (801f614 <std+0x3c>)
 801f600:	62a3      	str	r3, [r4, #40]	; 0x28
 801f602:	4b05      	ldr	r3, [pc, #20]	; (801f618 <std+0x40>)
 801f604:	62e3      	str	r3, [r4, #44]	; 0x2c
 801f606:	4b05      	ldr	r3, [pc, #20]	; (801f61c <std+0x44>)
 801f608:	6224      	str	r4, [r4, #32]
 801f60a:	6323      	str	r3, [r4, #48]	; 0x30
 801f60c:	bd10      	pop	{r4, pc}
 801f60e:	bf00      	nop
 801f610:	0802019d 	.word	0x0802019d
 801f614:	080201bf 	.word	0x080201bf
 801f618:	080201f7 	.word	0x080201f7
 801f61c:	0802021b 	.word	0x0802021b

0801f620 <_cleanup_r>:
 801f620:	4901      	ldr	r1, [pc, #4]	; (801f628 <_cleanup_r+0x8>)
 801f622:	f000 b8c1 	b.w	801f7a8 <_fwalk_reent>
 801f626:	bf00      	nop
 801f628:	080205b9 	.word	0x080205b9

0801f62c <__sfmoreglue>:
 801f62c:	b570      	push	{r4, r5, r6, lr}
 801f62e:	2268      	movs	r2, #104	; 0x68
 801f630:	1e4d      	subs	r5, r1, #1
 801f632:	4355      	muls	r5, r2
 801f634:	460e      	mov	r6, r1
 801f636:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801f63a:	f000 f98f 	bl	801f95c <_malloc_r>
 801f63e:	4604      	mov	r4, r0
 801f640:	b140      	cbz	r0, 801f654 <__sfmoreglue+0x28>
 801f642:	2100      	movs	r1, #0
 801f644:	e9c0 1600 	strd	r1, r6, [r0]
 801f648:	300c      	adds	r0, #12
 801f64a:	60a0      	str	r0, [r4, #8]
 801f64c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801f650:	f000 f910 	bl	801f874 <memset>
 801f654:	4620      	mov	r0, r4
 801f656:	bd70      	pop	{r4, r5, r6, pc}

0801f658 <__sfp_lock_acquire>:
 801f658:	4801      	ldr	r0, [pc, #4]	; (801f660 <__sfp_lock_acquire+0x8>)
 801f65a:	f000 b8ea 	b.w	801f832 <__retarget_lock_acquire_recursive>
 801f65e:	bf00      	nop
 801f660:	2001766a 	.word	0x2001766a

0801f664 <__sfp_lock_release>:
 801f664:	4801      	ldr	r0, [pc, #4]	; (801f66c <__sfp_lock_release+0x8>)
 801f666:	f000 b8e6 	b.w	801f836 <__retarget_lock_release_recursive>
 801f66a:	bf00      	nop
 801f66c:	2001766a 	.word	0x2001766a

0801f670 <__sinit_lock_acquire>:
 801f670:	4801      	ldr	r0, [pc, #4]	; (801f678 <__sinit_lock_acquire+0x8>)
 801f672:	f000 b8de 	b.w	801f832 <__retarget_lock_acquire_recursive>
 801f676:	bf00      	nop
 801f678:	2001766b 	.word	0x2001766b

0801f67c <__sinit_lock_release>:
 801f67c:	4801      	ldr	r0, [pc, #4]	; (801f684 <__sinit_lock_release+0x8>)
 801f67e:	f000 b8da 	b.w	801f836 <__retarget_lock_release_recursive>
 801f682:	bf00      	nop
 801f684:	2001766b 	.word	0x2001766b

0801f688 <__sinit>:
 801f688:	b510      	push	{r4, lr}
 801f68a:	4604      	mov	r4, r0
 801f68c:	f7ff fff0 	bl	801f670 <__sinit_lock_acquire>
 801f690:	69a3      	ldr	r3, [r4, #24]
 801f692:	b11b      	cbz	r3, 801f69c <__sinit+0x14>
 801f694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f698:	f7ff bff0 	b.w	801f67c <__sinit_lock_release>
 801f69c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801f6a0:	6523      	str	r3, [r4, #80]	; 0x50
 801f6a2:	4b13      	ldr	r3, [pc, #76]	; (801f6f0 <__sinit+0x68>)
 801f6a4:	4a13      	ldr	r2, [pc, #76]	; (801f6f4 <__sinit+0x6c>)
 801f6a6:	681b      	ldr	r3, [r3, #0]
 801f6a8:	62a2      	str	r2, [r4, #40]	; 0x28
 801f6aa:	42a3      	cmp	r3, r4
 801f6ac:	bf04      	itt	eq
 801f6ae:	2301      	moveq	r3, #1
 801f6b0:	61a3      	streq	r3, [r4, #24]
 801f6b2:	4620      	mov	r0, r4
 801f6b4:	f000 f820 	bl	801f6f8 <__sfp>
 801f6b8:	6060      	str	r0, [r4, #4]
 801f6ba:	4620      	mov	r0, r4
 801f6bc:	f000 f81c 	bl	801f6f8 <__sfp>
 801f6c0:	60a0      	str	r0, [r4, #8]
 801f6c2:	4620      	mov	r0, r4
 801f6c4:	f000 f818 	bl	801f6f8 <__sfp>
 801f6c8:	2200      	movs	r2, #0
 801f6ca:	60e0      	str	r0, [r4, #12]
 801f6cc:	2104      	movs	r1, #4
 801f6ce:	6860      	ldr	r0, [r4, #4]
 801f6d0:	f7ff ff82 	bl	801f5d8 <std>
 801f6d4:	68a0      	ldr	r0, [r4, #8]
 801f6d6:	2201      	movs	r2, #1
 801f6d8:	2109      	movs	r1, #9
 801f6da:	f7ff ff7d 	bl	801f5d8 <std>
 801f6de:	68e0      	ldr	r0, [r4, #12]
 801f6e0:	2202      	movs	r2, #2
 801f6e2:	2112      	movs	r1, #18
 801f6e4:	f7ff ff78 	bl	801f5d8 <std>
 801f6e8:	2301      	movs	r3, #1
 801f6ea:	61a3      	str	r3, [r4, #24]
 801f6ec:	e7d2      	b.n	801f694 <__sinit+0xc>
 801f6ee:	bf00      	nop
 801f6f0:	080230cc 	.word	0x080230cc
 801f6f4:	0801f621 	.word	0x0801f621

0801f6f8 <__sfp>:
 801f6f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f6fa:	4607      	mov	r7, r0
 801f6fc:	f7ff ffac 	bl	801f658 <__sfp_lock_acquire>
 801f700:	4b1e      	ldr	r3, [pc, #120]	; (801f77c <__sfp+0x84>)
 801f702:	681e      	ldr	r6, [r3, #0]
 801f704:	69b3      	ldr	r3, [r6, #24]
 801f706:	b913      	cbnz	r3, 801f70e <__sfp+0x16>
 801f708:	4630      	mov	r0, r6
 801f70a:	f7ff ffbd 	bl	801f688 <__sinit>
 801f70e:	3648      	adds	r6, #72	; 0x48
 801f710:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801f714:	3b01      	subs	r3, #1
 801f716:	d503      	bpl.n	801f720 <__sfp+0x28>
 801f718:	6833      	ldr	r3, [r6, #0]
 801f71a:	b30b      	cbz	r3, 801f760 <__sfp+0x68>
 801f71c:	6836      	ldr	r6, [r6, #0]
 801f71e:	e7f7      	b.n	801f710 <__sfp+0x18>
 801f720:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801f724:	b9d5      	cbnz	r5, 801f75c <__sfp+0x64>
 801f726:	4b16      	ldr	r3, [pc, #88]	; (801f780 <__sfp+0x88>)
 801f728:	60e3      	str	r3, [r4, #12]
 801f72a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801f72e:	6665      	str	r5, [r4, #100]	; 0x64
 801f730:	f000 f87e 	bl	801f830 <__retarget_lock_init_recursive>
 801f734:	f7ff ff96 	bl	801f664 <__sfp_lock_release>
 801f738:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801f73c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801f740:	6025      	str	r5, [r4, #0]
 801f742:	61a5      	str	r5, [r4, #24]
 801f744:	2208      	movs	r2, #8
 801f746:	4629      	mov	r1, r5
 801f748:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801f74c:	f000 f892 	bl	801f874 <memset>
 801f750:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801f754:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801f758:	4620      	mov	r0, r4
 801f75a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f75c:	3468      	adds	r4, #104	; 0x68
 801f75e:	e7d9      	b.n	801f714 <__sfp+0x1c>
 801f760:	2104      	movs	r1, #4
 801f762:	4638      	mov	r0, r7
 801f764:	f7ff ff62 	bl	801f62c <__sfmoreglue>
 801f768:	4604      	mov	r4, r0
 801f76a:	6030      	str	r0, [r6, #0]
 801f76c:	2800      	cmp	r0, #0
 801f76e:	d1d5      	bne.n	801f71c <__sfp+0x24>
 801f770:	f7ff ff78 	bl	801f664 <__sfp_lock_release>
 801f774:	230c      	movs	r3, #12
 801f776:	603b      	str	r3, [r7, #0]
 801f778:	e7ee      	b.n	801f758 <__sfp+0x60>
 801f77a:	bf00      	nop
 801f77c:	080230cc 	.word	0x080230cc
 801f780:	ffff0001 	.word	0xffff0001

0801f784 <fiprintf>:
 801f784:	b40e      	push	{r1, r2, r3}
 801f786:	b503      	push	{r0, r1, lr}
 801f788:	4601      	mov	r1, r0
 801f78a:	ab03      	add	r3, sp, #12
 801f78c:	4805      	ldr	r0, [pc, #20]	; (801f7a4 <fiprintf+0x20>)
 801f78e:	f853 2b04 	ldr.w	r2, [r3], #4
 801f792:	6800      	ldr	r0, [r0, #0]
 801f794:	9301      	str	r3, [sp, #4]
 801f796:	f000 f97f 	bl	801fa98 <_vfiprintf_r>
 801f79a:	b002      	add	sp, #8
 801f79c:	f85d eb04 	ldr.w	lr, [sp], #4
 801f7a0:	b003      	add	sp, #12
 801f7a2:	4770      	bx	lr
 801f7a4:	20000100 	.word	0x20000100

0801f7a8 <_fwalk_reent>:
 801f7a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f7ac:	4606      	mov	r6, r0
 801f7ae:	4688      	mov	r8, r1
 801f7b0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801f7b4:	2700      	movs	r7, #0
 801f7b6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801f7ba:	f1b9 0901 	subs.w	r9, r9, #1
 801f7be:	d505      	bpl.n	801f7cc <_fwalk_reent+0x24>
 801f7c0:	6824      	ldr	r4, [r4, #0]
 801f7c2:	2c00      	cmp	r4, #0
 801f7c4:	d1f7      	bne.n	801f7b6 <_fwalk_reent+0xe>
 801f7c6:	4638      	mov	r0, r7
 801f7c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f7cc:	89ab      	ldrh	r3, [r5, #12]
 801f7ce:	2b01      	cmp	r3, #1
 801f7d0:	d907      	bls.n	801f7e2 <_fwalk_reent+0x3a>
 801f7d2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801f7d6:	3301      	adds	r3, #1
 801f7d8:	d003      	beq.n	801f7e2 <_fwalk_reent+0x3a>
 801f7da:	4629      	mov	r1, r5
 801f7dc:	4630      	mov	r0, r6
 801f7de:	47c0      	blx	r8
 801f7e0:	4307      	orrs	r7, r0
 801f7e2:	3568      	adds	r5, #104	; 0x68
 801f7e4:	e7e9      	b.n	801f7ba <_fwalk_reent+0x12>
	...

0801f7e8 <__libc_init_array>:
 801f7e8:	b570      	push	{r4, r5, r6, lr}
 801f7ea:	4d0d      	ldr	r5, [pc, #52]	; (801f820 <__libc_init_array+0x38>)
 801f7ec:	4c0d      	ldr	r4, [pc, #52]	; (801f824 <__libc_init_array+0x3c>)
 801f7ee:	1b64      	subs	r4, r4, r5
 801f7f0:	10a4      	asrs	r4, r4, #2
 801f7f2:	2600      	movs	r6, #0
 801f7f4:	42a6      	cmp	r6, r4
 801f7f6:	d109      	bne.n	801f80c <__libc_init_array+0x24>
 801f7f8:	4d0b      	ldr	r5, [pc, #44]	; (801f828 <__libc_init_array+0x40>)
 801f7fa:	4c0c      	ldr	r4, [pc, #48]	; (801f82c <__libc_init_array+0x44>)
 801f7fc:	f000 ffd0 	bl	80207a0 <_init>
 801f800:	1b64      	subs	r4, r4, r5
 801f802:	10a4      	asrs	r4, r4, #2
 801f804:	2600      	movs	r6, #0
 801f806:	42a6      	cmp	r6, r4
 801f808:	d105      	bne.n	801f816 <__libc_init_array+0x2e>
 801f80a:	bd70      	pop	{r4, r5, r6, pc}
 801f80c:	f855 3b04 	ldr.w	r3, [r5], #4
 801f810:	4798      	blx	r3
 801f812:	3601      	adds	r6, #1
 801f814:	e7ee      	b.n	801f7f4 <__libc_init_array+0xc>
 801f816:	f855 3b04 	ldr.w	r3, [r5], #4
 801f81a:	4798      	blx	r3
 801f81c:	3601      	adds	r6, #1
 801f81e:	e7f2      	b.n	801f806 <__libc_init_array+0x1e>
 801f820:	080a7c38 	.word	0x080a7c38
 801f824:	080a7c38 	.word	0x080a7c38
 801f828:	080a7c38 	.word	0x080a7c38
 801f82c:	080a7c4c 	.word	0x080a7c4c

0801f830 <__retarget_lock_init_recursive>:
 801f830:	4770      	bx	lr

0801f832 <__retarget_lock_acquire_recursive>:
 801f832:	4770      	bx	lr

0801f834 <__retarget_lock_release>:
 801f834:	4770      	bx	lr

0801f836 <__retarget_lock_release_recursive>:
 801f836:	4770      	bx	lr

0801f838 <malloc>:
 801f838:	4b02      	ldr	r3, [pc, #8]	; (801f844 <malloc+0xc>)
 801f83a:	4601      	mov	r1, r0
 801f83c:	6818      	ldr	r0, [r3, #0]
 801f83e:	f000 b88d 	b.w	801f95c <_malloc_r>
 801f842:	bf00      	nop
 801f844:	20000100 	.word	0x20000100

0801f848 <free>:
 801f848:	4b02      	ldr	r3, [pc, #8]	; (801f854 <free+0xc>)
 801f84a:	4601      	mov	r1, r0
 801f84c:	6818      	ldr	r0, [r3, #0]
 801f84e:	f000 b819 	b.w	801f884 <_free_r>
 801f852:	bf00      	nop
 801f854:	20000100 	.word	0x20000100

0801f858 <memcpy>:
 801f858:	440a      	add	r2, r1
 801f85a:	4291      	cmp	r1, r2
 801f85c:	f100 33ff 	add.w	r3, r0, #4294967295
 801f860:	d100      	bne.n	801f864 <memcpy+0xc>
 801f862:	4770      	bx	lr
 801f864:	b510      	push	{r4, lr}
 801f866:	f811 4b01 	ldrb.w	r4, [r1], #1
 801f86a:	f803 4f01 	strb.w	r4, [r3, #1]!
 801f86e:	4291      	cmp	r1, r2
 801f870:	d1f9      	bne.n	801f866 <memcpy+0xe>
 801f872:	bd10      	pop	{r4, pc}

0801f874 <memset>:
 801f874:	4402      	add	r2, r0
 801f876:	4603      	mov	r3, r0
 801f878:	4293      	cmp	r3, r2
 801f87a:	d100      	bne.n	801f87e <memset+0xa>
 801f87c:	4770      	bx	lr
 801f87e:	f803 1b01 	strb.w	r1, [r3], #1
 801f882:	e7f9      	b.n	801f878 <memset+0x4>

0801f884 <_free_r>:
 801f884:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801f886:	2900      	cmp	r1, #0
 801f888:	d044      	beq.n	801f914 <_free_r+0x90>
 801f88a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801f88e:	9001      	str	r0, [sp, #4]
 801f890:	2b00      	cmp	r3, #0
 801f892:	f1a1 0404 	sub.w	r4, r1, #4
 801f896:	bfb8      	it	lt
 801f898:	18e4      	addlt	r4, r4, r3
 801f89a:	f000 ff41 	bl	8020720 <__malloc_lock>
 801f89e:	4a1e      	ldr	r2, [pc, #120]	; (801f918 <_free_r+0x94>)
 801f8a0:	9801      	ldr	r0, [sp, #4]
 801f8a2:	6813      	ldr	r3, [r2, #0]
 801f8a4:	b933      	cbnz	r3, 801f8b4 <_free_r+0x30>
 801f8a6:	6063      	str	r3, [r4, #4]
 801f8a8:	6014      	str	r4, [r2, #0]
 801f8aa:	b003      	add	sp, #12
 801f8ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801f8b0:	f000 bf3c 	b.w	802072c <__malloc_unlock>
 801f8b4:	42a3      	cmp	r3, r4
 801f8b6:	d908      	bls.n	801f8ca <_free_r+0x46>
 801f8b8:	6825      	ldr	r5, [r4, #0]
 801f8ba:	1961      	adds	r1, r4, r5
 801f8bc:	428b      	cmp	r3, r1
 801f8be:	bf01      	itttt	eq
 801f8c0:	6819      	ldreq	r1, [r3, #0]
 801f8c2:	685b      	ldreq	r3, [r3, #4]
 801f8c4:	1949      	addeq	r1, r1, r5
 801f8c6:	6021      	streq	r1, [r4, #0]
 801f8c8:	e7ed      	b.n	801f8a6 <_free_r+0x22>
 801f8ca:	461a      	mov	r2, r3
 801f8cc:	685b      	ldr	r3, [r3, #4]
 801f8ce:	b10b      	cbz	r3, 801f8d4 <_free_r+0x50>
 801f8d0:	42a3      	cmp	r3, r4
 801f8d2:	d9fa      	bls.n	801f8ca <_free_r+0x46>
 801f8d4:	6811      	ldr	r1, [r2, #0]
 801f8d6:	1855      	adds	r5, r2, r1
 801f8d8:	42a5      	cmp	r5, r4
 801f8da:	d10b      	bne.n	801f8f4 <_free_r+0x70>
 801f8dc:	6824      	ldr	r4, [r4, #0]
 801f8de:	4421      	add	r1, r4
 801f8e0:	1854      	adds	r4, r2, r1
 801f8e2:	42a3      	cmp	r3, r4
 801f8e4:	6011      	str	r1, [r2, #0]
 801f8e6:	d1e0      	bne.n	801f8aa <_free_r+0x26>
 801f8e8:	681c      	ldr	r4, [r3, #0]
 801f8ea:	685b      	ldr	r3, [r3, #4]
 801f8ec:	6053      	str	r3, [r2, #4]
 801f8ee:	4421      	add	r1, r4
 801f8f0:	6011      	str	r1, [r2, #0]
 801f8f2:	e7da      	b.n	801f8aa <_free_r+0x26>
 801f8f4:	d902      	bls.n	801f8fc <_free_r+0x78>
 801f8f6:	230c      	movs	r3, #12
 801f8f8:	6003      	str	r3, [r0, #0]
 801f8fa:	e7d6      	b.n	801f8aa <_free_r+0x26>
 801f8fc:	6825      	ldr	r5, [r4, #0]
 801f8fe:	1961      	adds	r1, r4, r5
 801f900:	428b      	cmp	r3, r1
 801f902:	bf04      	itt	eq
 801f904:	6819      	ldreq	r1, [r3, #0]
 801f906:	685b      	ldreq	r3, [r3, #4]
 801f908:	6063      	str	r3, [r4, #4]
 801f90a:	bf04      	itt	eq
 801f90c:	1949      	addeq	r1, r1, r5
 801f90e:	6021      	streq	r1, [r4, #0]
 801f910:	6054      	str	r4, [r2, #4]
 801f912:	e7ca      	b.n	801f8aa <_free_r+0x26>
 801f914:	b003      	add	sp, #12
 801f916:	bd30      	pop	{r4, r5, pc}
 801f918:	2001766c 	.word	0x2001766c

0801f91c <sbrk_aligned>:
 801f91c:	b570      	push	{r4, r5, r6, lr}
 801f91e:	4e0e      	ldr	r6, [pc, #56]	; (801f958 <sbrk_aligned+0x3c>)
 801f920:	460c      	mov	r4, r1
 801f922:	6831      	ldr	r1, [r6, #0]
 801f924:	4605      	mov	r5, r0
 801f926:	b911      	cbnz	r1, 801f92e <sbrk_aligned+0x12>
 801f928:	f000 fbe4 	bl	80200f4 <_sbrk_r>
 801f92c:	6030      	str	r0, [r6, #0]
 801f92e:	4621      	mov	r1, r4
 801f930:	4628      	mov	r0, r5
 801f932:	f000 fbdf 	bl	80200f4 <_sbrk_r>
 801f936:	1c43      	adds	r3, r0, #1
 801f938:	d00a      	beq.n	801f950 <sbrk_aligned+0x34>
 801f93a:	1cc4      	adds	r4, r0, #3
 801f93c:	f024 0403 	bic.w	r4, r4, #3
 801f940:	42a0      	cmp	r0, r4
 801f942:	d007      	beq.n	801f954 <sbrk_aligned+0x38>
 801f944:	1a21      	subs	r1, r4, r0
 801f946:	4628      	mov	r0, r5
 801f948:	f000 fbd4 	bl	80200f4 <_sbrk_r>
 801f94c:	3001      	adds	r0, #1
 801f94e:	d101      	bne.n	801f954 <sbrk_aligned+0x38>
 801f950:	f04f 34ff 	mov.w	r4, #4294967295
 801f954:	4620      	mov	r0, r4
 801f956:	bd70      	pop	{r4, r5, r6, pc}
 801f958:	20017670 	.word	0x20017670

0801f95c <_malloc_r>:
 801f95c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f960:	1ccd      	adds	r5, r1, #3
 801f962:	f025 0503 	bic.w	r5, r5, #3
 801f966:	3508      	adds	r5, #8
 801f968:	2d0c      	cmp	r5, #12
 801f96a:	bf38      	it	cc
 801f96c:	250c      	movcc	r5, #12
 801f96e:	2d00      	cmp	r5, #0
 801f970:	4607      	mov	r7, r0
 801f972:	db01      	blt.n	801f978 <_malloc_r+0x1c>
 801f974:	42a9      	cmp	r1, r5
 801f976:	d905      	bls.n	801f984 <_malloc_r+0x28>
 801f978:	230c      	movs	r3, #12
 801f97a:	603b      	str	r3, [r7, #0]
 801f97c:	2600      	movs	r6, #0
 801f97e:	4630      	mov	r0, r6
 801f980:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f984:	4e2e      	ldr	r6, [pc, #184]	; (801fa40 <_malloc_r+0xe4>)
 801f986:	f000 fecb 	bl	8020720 <__malloc_lock>
 801f98a:	6833      	ldr	r3, [r6, #0]
 801f98c:	461c      	mov	r4, r3
 801f98e:	bb34      	cbnz	r4, 801f9de <_malloc_r+0x82>
 801f990:	4629      	mov	r1, r5
 801f992:	4638      	mov	r0, r7
 801f994:	f7ff ffc2 	bl	801f91c <sbrk_aligned>
 801f998:	1c43      	adds	r3, r0, #1
 801f99a:	4604      	mov	r4, r0
 801f99c:	d14d      	bne.n	801fa3a <_malloc_r+0xde>
 801f99e:	6834      	ldr	r4, [r6, #0]
 801f9a0:	4626      	mov	r6, r4
 801f9a2:	2e00      	cmp	r6, #0
 801f9a4:	d140      	bne.n	801fa28 <_malloc_r+0xcc>
 801f9a6:	6823      	ldr	r3, [r4, #0]
 801f9a8:	4631      	mov	r1, r6
 801f9aa:	4638      	mov	r0, r7
 801f9ac:	eb04 0803 	add.w	r8, r4, r3
 801f9b0:	f000 fba0 	bl	80200f4 <_sbrk_r>
 801f9b4:	4580      	cmp	r8, r0
 801f9b6:	d13a      	bne.n	801fa2e <_malloc_r+0xd2>
 801f9b8:	6821      	ldr	r1, [r4, #0]
 801f9ba:	3503      	adds	r5, #3
 801f9bc:	1a6d      	subs	r5, r5, r1
 801f9be:	f025 0503 	bic.w	r5, r5, #3
 801f9c2:	3508      	adds	r5, #8
 801f9c4:	2d0c      	cmp	r5, #12
 801f9c6:	bf38      	it	cc
 801f9c8:	250c      	movcc	r5, #12
 801f9ca:	4629      	mov	r1, r5
 801f9cc:	4638      	mov	r0, r7
 801f9ce:	f7ff ffa5 	bl	801f91c <sbrk_aligned>
 801f9d2:	3001      	adds	r0, #1
 801f9d4:	d02b      	beq.n	801fa2e <_malloc_r+0xd2>
 801f9d6:	6823      	ldr	r3, [r4, #0]
 801f9d8:	442b      	add	r3, r5
 801f9da:	6023      	str	r3, [r4, #0]
 801f9dc:	e00e      	b.n	801f9fc <_malloc_r+0xa0>
 801f9de:	6822      	ldr	r2, [r4, #0]
 801f9e0:	1b52      	subs	r2, r2, r5
 801f9e2:	d41e      	bmi.n	801fa22 <_malloc_r+0xc6>
 801f9e4:	2a0b      	cmp	r2, #11
 801f9e6:	d916      	bls.n	801fa16 <_malloc_r+0xba>
 801f9e8:	1961      	adds	r1, r4, r5
 801f9ea:	42a3      	cmp	r3, r4
 801f9ec:	6025      	str	r5, [r4, #0]
 801f9ee:	bf18      	it	ne
 801f9f0:	6059      	strne	r1, [r3, #4]
 801f9f2:	6863      	ldr	r3, [r4, #4]
 801f9f4:	bf08      	it	eq
 801f9f6:	6031      	streq	r1, [r6, #0]
 801f9f8:	5162      	str	r2, [r4, r5]
 801f9fa:	604b      	str	r3, [r1, #4]
 801f9fc:	4638      	mov	r0, r7
 801f9fe:	f104 060b 	add.w	r6, r4, #11
 801fa02:	f000 fe93 	bl	802072c <__malloc_unlock>
 801fa06:	f026 0607 	bic.w	r6, r6, #7
 801fa0a:	1d23      	adds	r3, r4, #4
 801fa0c:	1af2      	subs	r2, r6, r3
 801fa0e:	d0b6      	beq.n	801f97e <_malloc_r+0x22>
 801fa10:	1b9b      	subs	r3, r3, r6
 801fa12:	50a3      	str	r3, [r4, r2]
 801fa14:	e7b3      	b.n	801f97e <_malloc_r+0x22>
 801fa16:	6862      	ldr	r2, [r4, #4]
 801fa18:	42a3      	cmp	r3, r4
 801fa1a:	bf0c      	ite	eq
 801fa1c:	6032      	streq	r2, [r6, #0]
 801fa1e:	605a      	strne	r2, [r3, #4]
 801fa20:	e7ec      	b.n	801f9fc <_malloc_r+0xa0>
 801fa22:	4623      	mov	r3, r4
 801fa24:	6864      	ldr	r4, [r4, #4]
 801fa26:	e7b2      	b.n	801f98e <_malloc_r+0x32>
 801fa28:	4634      	mov	r4, r6
 801fa2a:	6876      	ldr	r6, [r6, #4]
 801fa2c:	e7b9      	b.n	801f9a2 <_malloc_r+0x46>
 801fa2e:	230c      	movs	r3, #12
 801fa30:	603b      	str	r3, [r7, #0]
 801fa32:	4638      	mov	r0, r7
 801fa34:	f000 fe7a 	bl	802072c <__malloc_unlock>
 801fa38:	e7a1      	b.n	801f97e <_malloc_r+0x22>
 801fa3a:	6025      	str	r5, [r4, #0]
 801fa3c:	e7de      	b.n	801f9fc <_malloc_r+0xa0>
 801fa3e:	bf00      	nop
 801fa40:	2001766c 	.word	0x2001766c

0801fa44 <__sfputc_r>:
 801fa44:	6893      	ldr	r3, [r2, #8]
 801fa46:	3b01      	subs	r3, #1
 801fa48:	2b00      	cmp	r3, #0
 801fa4a:	b410      	push	{r4}
 801fa4c:	6093      	str	r3, [r2, #8]
 801fa4e:	da08      	bge.n	801fa62 <__sfputc_r+0x1e>
 801fa50:	6994      	ldr	r4, [r2, #24]
 801fa52:	42a3      	cmp	r3, r4
 801fa54:	db01      	blt.n	801fa5a <__sfputc_r+0x16>
 801fa56:	290a      	cmp	r1, #10
 801fa58:	d103      	bne.n	801fa62 <__sfputc_r+0x1e>
 801fa5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fa5e:	f000 bbe1 	b.w	8020224 <__swbuf_r>
 801fa62:	6813      	ldr	r3, [r2, #0]
 801fa64:	1c58      	adds	r0, r3, #1
 801fa66:	6010      	str	r0, [r2, #0]
 801fa68:	7019      	strb	r1, [r3, #0]
 801fa6a:	4608      	mov	r0, r1
 801fa6c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fa70:	4770      	bx	lr

0801fa72 <__sfputs_r>:
 801fa72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801fa74:	4606      	mov	r6, r0
 801fa76:	460f      	mov	r7, r1
 801fa78:	4614      	mov	r4, r2
 801fa7a:	18d5      	adds	r5, r2, r3
 801fa7c:	42ac      	cmp	r4, r5
 801fa7e:	d101      	bne.n	801fa84 <__sfputs_r+0x12>
 801fa80:	2000      	movs	r0, #0
 801fa82:	e007      	b.n	801fa94 <__sfputs_r+0x22>
 801fa84:	f814 1b01 	ldrb.w	r1, [r4], #1
 801fa88:	463a      	mov	r2, r7
 801fa8a:	4630      	mov	r0, r6
 801fa8c:	f7ff ffda 	bl	801fa44 <__sfputc_r>
 801fa90:	1c43      	adds	r3, r0, #1
 801fa92:	d1f3      	bne.n	801fa7c <__sfputs_r+0xa>
 801fa94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801fa98 <_vfiprintf_r>:
 801fa98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa9c:	460d      	mov	r5, r1
 801fa9e:	b09d      	sub	sp, #116	; 0x74
 801faa0:	4614      	mov	r4, r2
 801faa2:	4698      	mov	r8, r3
 801faa4:	4606      	mov	r6, r0
 801faa6:	b118      	cbz	r0, 801fab0 <_vfiprintf_r+0x18>
 801faa8:	6983      	ldr	r3, [r0, #24]
 801faaa:	b90b      	cbnz	r3, 801fab0 <_vfiprintf_r+0x18>
 801faac:	f7ff fdec 	bl	801f688 <__sinit>
 801fab0:	4b89      	ldr	r3, [pc, #548]	; (801fcd8 <_vfiprintf_r+0x240>)
 801fab2:	429d      	cmp	r5, r3
 801fab4:	d11b      	bne.n	801faee <_vfiprintf_r+0x56>
 801fab6:	6875      	ldr	r5, [r6, #4]
 801fab8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801faba:	07d9      	lsls	r1, r3, #31
 801fabc:	d405      	bmi.n	801faca <_vfiprintf_r+0x32>
 801fabe:	89ab      	ldrh	r3, [r5, #12]
 801fac0:	059a      	lsls	r2, r3, #22
 801fac2:	d402      	bmi.n	801faca <_vfiprintf_r+0x32>
 801fac4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801fac6:	f7ff feb4 	bl	801f832 <__retarget_lock_acquire_recursive>
 801faca:	89ab      	ldrh	r3, [r5, #12]
 801facc:	071b      	lsls	r3, r3, #28
 801face:	d501      	bpl.n	801fad4 <_vfiprintf_r+0x3c>
 801fad0:	692b      	ldr	r3, [r5, #16]
 801fad2:	b9eb      	cbnz	r3, 801fb10 <_vfiprintf_r+0x78>
 801fad4:	4629      	mov	r1, r5
 801fad6:	4630      	mov	r0, r6
 801fad8:	f000 fc08 	bl	80202ec <__swsetup_r>
 801fadc:	b1c0      	cbz	r0, 801fb10 <_vfiprintf_r+0x78>
 801fade:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801fae0:	07dc      	lsls	r4, r3, #31
 801fae2:	d50e      	bpl.n	801fb02 <_vfiprintf_r+0x6a>
 801fae4:	f04f 30ff 	mov.w	r0, #4294967295
 801fae8:	b01d      	add	sp, #116	; 0x74
 801faea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801faee:	4b7b      	ldr	r3, [pc, #492]	; (801fcdc <_vfiprintf_r+0x244>)
 801faf0:	429d      	cmp	r5, r3
 801faf2:	d101      	bne.n	801faf8 <_vfiprintf_r+0x60>
 801faf4:	68b5      	ldr	r5, [r6, #8]
 801faf6:	e7df      	b.n	801fab8 <_vfiprintf_r+0x20>
 801faf8:	4b79      	ldr	r3, [pc, #484]	; (801fce0 <_vfiprintf_r+0x248>)
 801fafa:	429d      	cmp	r5, r3
 801fafc:	bf08      	it	eq
 801fafe:	68f5      	ldreq	r5, [r6, #12]
 801fb00:	e7da      	b.n	801fab8 <_vfiprintf_r+0x20>
 801fb02:	89ab      	ldrh	r3, [r5, #12]
 801fb04:	0598      	lsls	r0, r3, #22
 801fb06:	d4ed      	bmi.n	801fae4 <_vfiprintf_r+0x4c>
 801fb08:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801fb0a:	f7ff fe94 	bl	801f836 <__retarget_lock_release_recursive>
 801fb0e:	e7e9      	b.n	801fae4 <_vfiprintf_r+0x4c>
 801fb10:	2300      	movs	r3, #0
 801fb12:	9309      	str	r3, [sp, #36]	; 0x24
 801fb14:	2320      	movs	r3, #32
 801fb16:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801fb1a:	f8cd 800c 	str.w	r8, [sp, #12]
 801fb1e:	2330      	movs	r3, #48	; 0x30
 801fb20:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801fce4 <_vfiprintf_r+0x24c>
 801fb24:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801fb28:	f04f 0901 	mov.w	r9, #1
 801fb2c:	4623      	mov	r3, r4
 801fb2e:	469a      	mov	sl, r3
 801fb30:	f813 2b01 	ldrb.w	r2, [r3], #1
 801fb34:	b10a      	cbz	r2, 801fb3a <_vfiprintf_r+0xa2>
 801fb36:	2a25      	cmp	r2, #37	; 0x25
 801fb38:	d1f9      	bne.n	801fb2e <_vfiprintf_r+0x96>
 801fb3a:	ebba 0b04 	subs.w	fp, sl, r4
 801fb3e:	d00b      	beq.n	801fb58 <_vfiprintf_r+0xc0>
 801fb40:	465b      	mov	r3, fp
 801fb42:	4622      	mov	r2, r4
 801fb44:	4629      	mov	r1, r5
 801fb46:	4630      	mov	r0, r6
 801fb48:	f7ff ff93 	bl	801fa72 <__sfputs_r>
 801fb4c:	3001      	adds	r0, #1
 801fb4e:	f000 80aa 	beq.w	801fca6 <_vfiprintf_r+0x20e>
 801fb52:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fb54:	445a      	add	r2, fp
 801fb56:	9209      	str	r2, [sp, #36]	; 0x24
 801fb58:	f89a 3000 	ldrb.w	r3, [sl]
 801fb5c:	2b00      	cmp	r3, #0
 801fb5e:	f000 80a2 	beq.w	801fca6 <_vfiprintf_r+0x20e>
 801fb62:	2300      	movs	r3, #0
 801fb64:	f04f 32ff 	mov.w	r2, #4294967295
 801fb68:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801fb6c:	f10a 0a01 	add.w	sl, sl, #1
 801fb70:	9304      	str	r3, [sp, #16]
 801fb72:	9307      	str	r3, [sp, #28]
 801fb74:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801fb78:	931a      	str	r3, [sp, #104]	; 0x68
 801fb7a:	4654      	mov	r4, sl
 801fb7c:	2205      	movs	r2, #5
 801fb7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801fb82:	4858      	ldr	r0, [pc, #352]	; (801fce4 <_vfiprintf_r+0x24c>)
 801fb84:	f7e0 fb34 	bl	80001f0 <memchr>
 801fb88:	9a04      	ldr	r2, [sp, #16]
 801fb8a:	b9d8      	cbnz	r0, 801fbc4 <_vfiprintf_r+0x12c>
 801fb8c:	06d1      	lsls	r1, r2, #27
 801fb8e:	bf44      	itt	mi
 801fb90:	2320      	movmi	r3, #32
 801fb92:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801fb96:	0713      	lsls	r3, r2, #28
 801fb98:	bf44      	itt	mi
 801fb9a:	232b      	movmi	r3, #43	; 0x2b
 801fb9c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801fba0:	f89a 3000 	ldrb.w	r3, [sl]
 801fba4:	2b2a      	cmp	r3, #42	; 0x2a
 801fba6:	d015      	beq.n	801fbd4 <_vfiprintf_r+0x13c>
 801fba8:	9a07      	ldr	r2, [sp, #28]
 801fbaa:	4654      	mov	r4, sl
 801fbac:	2000      	movs	r0, #0
 801fbae:	f04f 0c0a 	mov.w	ip, #10
 801fbb2:	4621      	mov	r1, r4
 801fbb4:	f811 3b01 	ldrb.w	r3, [r1], #1
 801fbb8:	3b30      	subs	r3, #48	; 0x30
 801fbba:	2b09      	cmp	r3, #9
 801fbbc:	d94e      	bls.n	801fc5c <_vfiprintf_r+0x1c4>
 801fbbe:	b1b0      	cbz	r0, 801fbee <_vfiprintf_r+0x156>
 801fbc0:	9207      	str	r2, [sp, #28]
 801fbc2:	e014      	b.n	801fbee <_vfiprintf_r+0x156>
 801fbc4:	eba0 0308 	sub.w	r3, r0, r8
 801fbc8:	fa09 f303 	lsl.w	r3, r9, r3
 801fbcc:	4313      	orrs	r3, r2
 801fbce:	9304      	str	r3, [sp, #16]
 801fbd0:	46a2      	mov	sl, r4
 801fbd2:	e7d2      	b.n	801fb7a <_vfiprintf_r+0xe2>
 801fbd4:	9b03      	ldr	r3, [sp, #12]
 801fbd6:	1d19      	adds	r1, r3, #4
 801fbd8:	681b      	ldr	r3, [r3, #0]
 801fbda:	9103      	str	r1, [sp, #12]
 801fbdc:	2b00      	cmp	r3, #0
 801fbde:	bfbb      	ittet	lt
 801fbe0:	425b      	neglt	r3, r3
 801fbe2:	f042 0202 	orrlt.w	r2, r2, #2
 801fbe6:	9307      	strge	r3, [sp, #28]
 801fbe8:	9307      	strlt	r3, [sp, #28]
 801fbea:	bfb8      	it	lt
 801fbec:	9204      	strlt	r2, [sp, #16]
 801fbee:	7823      	ldrb	r3, [r4, #0]
 801fbf0:	2b2e      	cmp	r3, #46	; 0x2e
 801fbf2:	d10c      	bne.n	801fc0e <_vfiprintf_r+0x176>
 801fbf4:	7863      	ldrb	r3, [r4, #1]
 801fbf6:	2b2a      	cmp	r3, #42	; 0x2a
 801fbf8:	d135      	bne.n	801fc66 <_vfiprintf_r+0x1ce>
 801fbfa:	9b03      	ldr	r3, [sp, #12]
 801fbfc:	1d1a      	adds	r2, r3, #4
 801fbfe:	681b      	ldr	r3, [r3, #0]
 801fc00:	9203      	str	r2, [sp, #12]
 801fc02:	2b00      	cmp	r3, #0
 801fc04:	bfb8      	it	lt
 801fc06:	f04f 33ff 	movlt.w	r3, #4294967295
 801fc0a:	3402      	adds	r4, #2
 801fc0c:	9305      	str	r3, [sp, #20]
 801fc0e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801fcf4 <_vfiprintf_r+0x25c>
 801fc12:	7821      	ldrb	r1, [r4, #0]
 801fc14:	2203      	movs	r2, #3
 801fc16:	4650      	mov	r0, sl
 801fc18:	f7e0 faea 	bl	80001f0 <memchr>
 801fc1c:	b140      	cbz	r0, 801fc30 <_vfiprintf_r+0x198>
 801fc1e:	2340      	movs	r3, #64	; 0x40
 801fc20:	eba0 000a 	sub.w	r0, r0, sl
 801fc24:	fa03 f000 	lsl.w	r0, r3, r0
 801fc28:	9b04      	ldr	r3, [sp, #16]
 801fc2a:	4303      	orrs	r3, r0
 801fc2c:	3401      	adds	r4, #1
 801fc2e:	9304      	str	r3, [sp, #16]
 801fc30:	f814 1b01 	ldrb.w	r1, [r4], #1
 801fc34:	482c      	ldr	r0, [pc, #176]	; (801fce8 <_vfiprintf_r+0x250>)
 801fc36:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801fc3a:	2206      	movs	r2, #6
 801fc3c:	f7e0 fad8 	bl	80001f0 <memchr>
 801fc40:	2800      	cmp	r0, #0
 801fc42:	d03f      	beq.n	801fcc4 <_vfiprintf_r+0x22c>
 801fc44:	4b29      	ldr	r3, [pc, #164]	; (801fcec <_vfiprintf_r+0x254>)
 801fc46:	bb1b      	cbnz	r3, 801fc90 <_vfiprintf_r+0x1f8>
 801fc48:	9b03      	ldr	r3, [sp, #12]
 801fc4a:	3307      	adds	r3, #7
 801fc4c:	f023 0307 	bic.w	r3, r3, #7
 801fc50:	3308      	adds	r3, #8
 801fc52:	9303      	str	r3, [sp, #12]
 801fc54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc56:	443b      	add	r3, r7
 801fc58:	9309      	str	r3, [sp, #36]	; 0x24
 801fc5a:	e767      	b.n	801fb2c <_vfiprintf_r+0x94>
 801fc5c:	fb0c 3202 	mla	r2, ip, r2, r3
 801fc60:	460c      	mov	r4, r1
 801fc62:	2001      	movs	r0, #1
 801fc64:	e7a5      	b.n	801fbb2 <_vfiprintf_r+0x11a>
 801fc66:	2300      	movs	r3, #0
 801fc68:	3401      	adds	r4, #1
 801fc6a:	9305      	str	r3, [sp, #20]
 801fc6c:	4619      	mov	r1, r3
 801fc6e:	f04f 0c0a 	mov.w	ip, #10
 801fc72:	4620      	mov	r0, r4
 801fc74:	f810 2b01 	ldrb.w	r2, [r0], #1
 801fc78:	3a30      	subs	r2, #48	; 0x30
 801fc7a:	2a09      	cmp	r2, #9
 801fc7c:	d903      	bls.n	801fc86 <_vfiprintf_r+0x1ee>
 801fc7e:	2b00      	cmp	r3, #0
 801fc80:	d0c5      	beq.n	801fc0e <_vfiprintf_r+0x176>
 801fc82:	9105      	str	r1, [sp, #20]
 801fc84:	e7c3      	b.n	801fc0e <_vfiprintf_r+0x176>
 801fc86:	fb0c 2101 	mla	r1, ip, r1, r2
 801fc8a:	4604      	mov	r4, r0
 801fc8c:	2301      	movs	r3, #1
 801fc8e:	e7f0      	b.n	801fc72 <_vfiprintf_r+0x1da>
 801fc90:	ab03      	add	r3, sp, #12
 801fc92:	9300      	str	r3, [sp, #0]
 801fc94:	462a      	mov	r2, r5
 801fc96:	4b16      	ldr	r3, [pc, #88]	; (801fcf0 <_vfiprintf_r+0x258>)
 801fc98:	a904      	add	r1, sp, #16
 801fc9a:	4630      	mov	r0, r6
 801fc9c:	f3af 8000 	nop.w
 801fca0:	4607      	mov	r7, r0
 801fca2:	1c78      	adds	r0, r7, #1
 801fca4:	d1d6      	bne.n	801fc54 <_vfiprintf_r+0x1bc>
 801fca6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801fca8:	07d9      	lsls	r1, r3, #31
 801fcaa:	d405      	bmi.n	801fcb8 <_vfiprintf_r+0x220>
 801fcac:	89ab      	ldrh	r3, [r5, #12]
 801fcae:	059a      	lsls	r2, r3, #22
 801fcb0:	d402      	bmi.n	801fcb8 <_vfiprintf_r+0x220>
 801fcb2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801fcb4:	f7ff fdbf 	bl	801f836 <__retarget_lock_release_recursive>
 801fcb8:	89ab      	ldrh	r3, [r5, #12]
 801fcba:	065b      	lsls	r3, r3, #25
 801fcbc:	f53f af12 	bmi.w	801fae4 <_vfiprintf_r+0x4c>
 801fcc0:	9809      	ldr	r0, [sp, #36]	; 0x24
 801fcc2:	e711      	b.n	801fae8 <_vfiprintf_r+0x50>
 801fcc4:	ab03      	add	r3, sp, #12
 801fcc6:	9300      	str	r3, [sp, #0]
 801fcc8:	462a      	mov	r2, r5
 801fcca:	4b09      	ldr	r3, [pc, #36]	; (801fcf0 <_vfiprintf_r+0x258>)
 801fccc:	a904      	add	r1, sp, #16
 801fcce:	4630      	mov	r0, r6
 801fcd0:	f000 f880 	bl	801fdd4 <_printf_i>
 801fcd4:	e7e4      	b.n	801fca0 <_vfiprintf_r+0x208>
 801fcd6:	bf00      	nop
 801fcd8:	0802308c 	.word	0x0802308c
 801fcdc:	080230ac 	.word	0x080230ac
 801fce0:	0802306c 	.word	0x0802306c
 801fce4:	080230d0 	.word	0x080230d0
 801fce8:	080230da 	.word	0x080230da
 801fcec:	00000000 	.word	0x00000000
 801fcf0:	0801fa73 	.word	0x0801fa73
 801fcf4:	080230d6 	.word	0x080230d6

0801fcf8 <_printf_common>:
 801fcf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fcfc:	4616      	mov	r6, r2
 801fcfe:	4699      	mov	r9, r3
 801fd00:	688a      	ldr	r2, [r1, #8]
 801fd02:	690b      	ldr	r3, [r1, #16]
 801fd04:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801fd08:	4293      	cmp	r3, r2
 801fd0a:	bfb8      	it	lt
 801fd0c:	4613      	movlt	r3, r2
 801fd0e:	6033      	str	r3, [r6, #0]
 801fd10:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801fd14:	4607      	mov	r7, r0
 801fd16:	460c      	mov	r4, r1
 801fd18:	b10a      	cbz	r2, 801fd1e <_printf_common+0x26>
 801fd1a:	3301      	adds	r3, #1
 801fd1c:	6033      	str	r3, [r6, #0]
 801fd1e:	6823      	ldr	r3, [r4, #0]
 801fd20:	0699      	lsls	r1, r3, #26
 801fd22:	bf42      	ittt	mi
 801fd24:	6833      	ldrmi	r3, [r6, #0]
 801fd26:	3302      	addmi	r3, #2
 801fd28:	6033      	strmi	r3, [r6, #0]
 801fd2a:	6825      	ldr	r5, [r4, #0]
 801fd2c:	f015 0506 	ands.w	r5, r5, #6
 801fd30:	d106      	bne.n	801fd40 <_printf_common+0x48>
 801fd32:	f104 0a19 	add.w	sl, r4, #25
 801fd36:	68e3      	ldr	r3, [r4, #12]
 801fd38:	6832      	ldr	r2, [r6, #0]
 801fd3a:	1a9b      	subs	r3, r3, r2
 801fd3c:	42ab      	cmp	r3, r5
 801fd3e:	dc26      	bgt.n	801fd8e <_printf_common+0x96>
 801fd40:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801fd44:	1e13      	subs	r3, r2, #0
 801fd46:	6822      	ldr	r2, [r4, #0]
 801fd48:	bf18      	it	ne
 801fd4a:	2301      	movne	r3, #1
 801fd4c:	0692      	lsls	r2, r2, #26
 801fd4e:	d42b      	bmi.n	801fda8 <_printf_common+0xb0>
 801fd50:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801fd54:	4649      	mov	r1, r9
 801fd56:	4638      	mov	r0, r7
 801fd58:	47c0      	blx	r8
 801fd5a:	3001      	adds	r0, #1
 801fd5c:	d01e      	beq.n	801fd9c <_printf_common+0xa4>
 801fd5e:	6823      	ldr	r3, [r4, #0]
 801fd60:	68e5      	ldr	r5, [r4, #12]
 801fd62:	6832      	ldr	r2, [r6, #0]
 801fd64:	f003 0306 	and.w	r3, r3, #6
 801fd68:	2b04      	cmp	r3, #4
 801fd6a:	bf08      	it	eq
 801fd6c:	1aad      	subeq	r5, r5, r2
 801fd6e:	68a3      	ldr	r3, [r4, #8]
 801fd70:	6922      	ldr	r2, [r4, #16]
 801fd72:	bf0c      	ite	eq
 801fd74:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801fd78:	2500      	movne	r5, #0
 801fd7a:	4293      	cmp	r3, r2
 801fd7c:	bfc4      	itt	gt
 801fd7e:	1a9b      	subgt	r3, r3, r2
 801fd80:	18ed      	addgt	r5, r5, r3
 801fd82:	2600      	movs	r6, #0
 801fd84:	341a      	adds	r4, #26
 801fd86:	42b5      	cmp	r5, r6
 801fd88:	d11a      	bne.n	801fdc0 <_printf_common+0xc8>
 801fd8a:	2000      	movs	r0, #0
 801fd8c:	e008      	b.n	801fda0 <_printf_common+0xa8>
 801fd8e:	2301      	movs	r3, #1
 801fd90:	4652      	mov	r2, sl
 801fd92:	4649      	mov	r1, r9
 801fd94:	4638      	mov	r0, r7
 801fd96:	47c0      	blx	r8
 801fd98:	3001      	adds	r0, #1
 801fd9a:	d103      	bne.n	801fda4 <_printf_common+0xac>
 801fd9c:	f04f 30ff 	mov.w	r0, #4294967295
 801fda0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fda4:	3501      	adds	r5, #1
 801fda6:	e7c6      	b.n	801fd36 <_printf_common+0x3e>
 801fda8:	18e1      	adds	r1, r4, r3
 801fdaa:	1c5a      	adds	r2, r3, #1
 801fdac:	2030      	movs	r0, #48	; 0x30
 801fdae:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801fdb2:	4422      	add	r2, r4
 801fdb4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801fdb8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801fdbc:	3302      	adds	r3, #2
 801fdbe:	e7c7      	b.n	801fd50 <_printf_common+0x58>
 801fdc0:	2301      	movs	r3, #1
 801fdc2:	4622      	mov	r2, r4
 801fdc4:	4649      	mov	r1, r9
 801fdc6:	4638      	mov	r0, r7
 801fdc8:	47c0      	blx	r8
 801fdca:	3001      	adds	r0, #1
 801fdcc:	d0e6      	beq.n	801fd9c <_printf_common+0xa4>
 801fdce:	3601      	adds	r6, #1
 801fdd0:	e7d9      	b.n	801fd86 <_printf_common+0x8e>
	...

0801fdd4 <_printf_i>:
 801fdd4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801fdd8:	7e0f      	ldrb	r7, [r1, #24]
 801fdda:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801fddc:	2f78      	cmp	r7, #120	; 0x78
 801fdde:	4691      	mov	r9, r2
 801fde0:	4680      	mov	r8, r0
 801fde2:	460c      	mov	r4, r1
 801fde4:	469a      	mov	sl, r3
 801fde6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801fdea:	d807      	bhi.n	801fdfc <_printf_i+0x28>
 801fdec:	2f62      	cmp	r7, #98	; 0x62
 801fdee:	d80a      	bhi.n	801fe06 <_printf_i+0x32>
 801fdf0:	2f00      	cmp	r7, #0
 801fdf2:	f000 80d8 	beq.w	801ffa6 <_printf_i+0x1d2>
 801fdf6:	2f58      	cmp	r7, #88	; 0x58
 801fdf8:	f000 80a3 	beq.w	801ff42 <_printf_i+0x16e>
 801fdfc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801fe00:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801fe04:	e03a      	b.n	801fe7c <_printf_i+0xa8>
 801fe06:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801fe0a:	2b15      	cmp	r3, #21
 801fe0c:	d8f6      	bhi.n	801fdfc <_printf_i+0x28>
 801fe0e:	a101      	add	r1, pc, #4	; (adr r1, 801fe14 <_printf_i+0x40>)
 801fe10:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801fe14:	0801fe6d 	.word	0x0801fe6d
 801fe18:	0801fe81 	.word	0x0801fe81
 801fe1c:	0801fdfd 	.word	0x0801fdfd
 801fe20:	0801fdfd 	.word	0x0801fdfd
 801fe24:	0801fdfd 	.word	0x0801fdfd
 801fe28:	0801fdfd 	.word	0x0801fdfd
 801fe2c:	0801fe81 	.word	0x0801fe81
 801fe30:	0801fdfd 	.word	0x0801fdfd
 801fe34:	0801fdfd 	.word	0x0801fdfd
 801fe38:	0801fdfd 	.word	0x0801fdfd
 801fe3c:	0801fdfd 	.word	0x0801fdfd
 801fe40:	0801ff8d 	.word	0x0801ff8d
 801fe44:	0801feb1 	.word	0x0801feb1
 801fe48:	0801ff6f 	.word	0x0801ff6f
 801fe4c:	0801fdfd 	.word	0x0801fdfd
 801fe50:	0801fdfd 	.word	0x0801fdfd
 801fe54:	0801ffaf 	.word	0x0801ffaf
 801fe58:	0801fdfd 	.word	0x0801fdfd
 801fe5c:	0801feb1 	.word	0x0801feb1
 801fe60:	0801fdfd 	.word	0x0801fdfd
 801fe64:	0801fdfd 	.word	0x0801fdfd
 801fe68:	0801ff77 	.word	0x0801ff77
 801fe6c:	682b      	ldr	r3, [r5, #0]
 801fe6e:	1d1a      	adds	r2, r3, #4
 801fe70:	681b      	ldr	r3, [r3, #0]
 801fe72:	602a      	str	r2, [r5, #0]
 801fe74:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801fe78:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801fe7c:	2301      	movs	r3, #1
 801fe7e:	e0a3      	b.n	801ffc8 <_printf_i+0x1f4>
 801fe80:	6820      	ldr	r0, [r4, #0]
 801fe82:	6829      	ldr	r1, [r5, #0]
 801fe84:	0606      	lsls	r6, r0, #24
 801fe86:	f101 0304 	add.w	r3, r1, #4
 801fe8a:	d50a      	bpl.n	801fea2 <_printf_i+0xce>
 801fe8c:	680e      	ldr	r6, [r1, #0]
 801fe8e:	602b      	str	r3, [r5, #0]
 801fe90:	2e00      	cmp	r6, #0
 801fe92:	da03      	bge.n	801fe9c <_printf_i+0xc8>
 801fe94:	232d      	movs	r3, #45	; 0x2d
 801fe96:	4276      	negs	r6, r6
 801fe98:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801fe9c:	485e      	ldr	r0, [pc, #376]	; (8020018 <_printf_i+0x244>)
 801fe9e:	230a      	movs	r3, #10
 801fea0:	e019      	b.n	801fed6 <_printf_i+0x102>
 801fea2:	680e      	ldr	r6, [r1, #0]
 801fea4:	602b      	str	r3, [r5, #0]
 801fea6:	f010 0f40 	tst.w	r0, #64	; 0x40
 801feaa:	bf18      	it	ne
 801feac:	b236      	sxthne	r6, r6
 801feae:	e7ef      	b.n	801fe90 <_printf_i+0xbc>
 801feb0:	682b      	ldr	r3, [r5, #0]
 801feb2:	6820      	ldr	r0, [r4, #0]
 801feb4:	1d19      	adds	r1, r3, #4
 801feb6:	6029      	str	r1, [r5, #0]
 801feb8:	0601      	lsls	r1, r0, #24
 801feba:	d501      	bpl.n	801fec0 <_printf_i+0xec>
 801febc:	681e      	ldr	r6, [r3, #0]
 801febe:	e002      	b.n	801fec6 <_printf_i+0xf2>
 801fec0:	0646      	lsls	r6, r0, #25
 801fec2:	d5fb      	bpl.n	801febc <_printf_i+0xe8>
 801fec4:	881e      	ldrh	r6, [r3, #0]
 801fec6:	4854      	ldr	r0, [pc, #336]	; (8020018 <_printf_i+0x244>)
 801fec8:	2f6f      	cmp	r7, #111	; 0x6f
 801feca:	bf0c      	ite	eq
 801fecc:	2308      	moveq	r3, #8
 801fece:	230a      	movne	r3, #10
 801fed0:	2100      	movs	r1, #0
 801fed2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801fed6:	6865      	ldr	r5, [r4, #4]
 801fed8:	60a5      	str	r5, [r4, #8]
 801feda:	2d00      	cmp	r5, #0
 801fedc:	bfa2      	ittt	ge
 801fede:	6821      	ldrge	r1, [r4, #0]
 801fee0:	f021 0104 	bicge.w	r1, r1, #4
 801fee4:	6021      	strge	r1, [r4, #0]
 801fee6:	b90e      	cbnz	r6, 801feec <_printf_i+0x118>
 801fee8:	2d00      	cmp	r5, #0
 801feea:	d04d      	beq.n	801ff88 <_printf_i+0x1b4>
 801feec:	4615      	mov	r5, r2
 801feee:	fbb6 f1f3 	udiv	r1, r6, r3
 801fef2:	fb03 6711 	mls	r7, r3, r1, r6
 801fef6:	5dc7      	ldrb	r7, [r0, r7]
 801fef8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801fefc:	4637      	mov	r7, r6
 801fefe:	42bb      	cmp	r3, r7
 801ff00:	460e      	mov	r6, r1
 801ff02:	d9f4      	bls.n	801feee <_printf_i+0x11a>
 801ff04:	2b08      	cmp	r3, #8
 801ff06:	d10b      	bne.n	801ff20 <_printf_i+0x14c>
 801ff08:	6823      	ldr	r3, [r4, #0]
 801ff0a:	07de      	lsls	r6, r3, #31
 801ff0c:	d508      	bpl.n	801ff20 <_printf_i+0x14c>
 801ff0e:	6923      	ldr	r3, [r4, #16]
 801ff10:	6861      	ldr	r1, [r4, #4]
 801ff12:	4299      	cmp	r1, r3
 801ff14:	bfde      	ittt	le
 801ff16:	2330      	movle	r3, #48	; 0x30
 801ff18:	f805 3c01 	strble.w	r3, [r5, #-1]
 801ff1c:	f105 35ff 	addle.w	r5, r5, #4294967295
 801ff20:	1b52      	subs	r2, r2, r5
 801ff22:	6122      	str	r2, [r4, #16]
 801ff24:	f8cd a000 	str.w	sl, [sp]
 801ff28:	464b      	mov	r3, r9
 801ff2a:	aa03      	add	r2, sp, #12
 801ff2c:	4621      	mov	r1, r4
 801ff2e:	4640      	mov	r0, r8
 801ff30:	f7ff fee2 	bl	801fcf8 <_printf_common>
 801ff34:	3001      	adds	r0, #1
 801ff36:	d14c      	bne.n	801ffd2 <_printf_i+0x1fe>
 801ff38:	f04f 30ff 	mov.w	r0, #4294967295
 801ff3c:	b004      	add	sp, #16
 801ff3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ff42:	4835      	ldr	r0, [pc, #212]	; (8020018 <_printf_i+0x244>)
 801ff44:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801ff48:	6829      	ldr	r1, [r5, #0]
 801ff4a:	6823      	ldr	r3, [r4, #0]
 801ff4c:	f851 6b04 	ldr.w	r6, [r1], #4
 801ff50:	6029      	str	r1, [r5, #0]
 801ff52:	061d      	lsls	r5, r3, #24
 801ff54:	d514      	bpl.n	801ff80 <_printf_i+0x1ac>
 801ff56:	07df      	lsls	r7, r3, #31
 801ff58:	bf44      	itt	mi
 801ff5a:	f043 0320 	orrmi.w	r3, r3, #32
 801ff5e:	6023      	strmi	r3, [r4, #0]
 801ff60:	b91e      	cbnz	r6, 801ff6a <_printf_i+0x196>
 801ff62:	6823      	ldr	r3, [r4, #0]
 801ff64:	f023 0320 	bic.w	r3, r3, #32
 801ff68:	6023      	str	r3, [r4, #0]
 801ff6a:	2310      	movs	r3, #16
 801ff6c:	e7b0      	b.n	801fed0 <_printf_i+0xfc>
 801ff6e:	6823      	ldr	r3, [r4, #0]
 801ff70:	f043 0320 	orr.w	r3, r3, #32
 801ff74:	6023      	str	r3, [r4, #0]
 801ff76:	2378      	movs	r3, #120	; 0x78
 801ff78:	4828      	ldr	r0, [pc, #160]	; (802001c <_printf_i+0x248>)
 801ff7a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801ff7e:	e7e3      	b.n	801ff48 <_printf_i+0x174>
 801ff80:	0659      	lsls	r1, r3, #25
 801ff82:	bf48      	it	mi
 801ff84:	b2b6      	uxthmi	r6, r6
 801ff86:	e7e6      	b.n	801ff56 <_printf_i+0x182>
 801ff88:	4615      	mov	r5, r2
 801ff8a:	e7bb      	b.n	801ff04 <_printf_i+0x130>
 801ff8c:	682b      	ldr	r3, [r5, #0]
 801ff8e:	6826      	ldr	r6, [r4, #0]
 801ff90:	6961      	ldr	r1, [r4, #20]
 801ff92:	1d18      	adds	r0, r3, #4
 801ff94:	6028      	str	r0, [r5, #0]
 801ff96:	0635      	lsls	r5, r6, #24
 801ff98:	681b      	ldr	r3, [r3, #0]
 801ff9a:	d501      	bpl.n	801ffa0 <_printf_i+0x1cc>
 801ff9c:	6019      	str	r1, [r3, #0]
 801ff9e:	e002      	b.n	801ffa6 <_printf_i+0x1d2>
 801ffa0:	0670      	lsls	r0, r6, #25
 801ffa2:	d5fb      	bpl.n	801ff9c <_printf_i+0x1c8>
 801ffa4:	8019      	strh	r1, [r3, #0]
 801ffa6:	2300      	movs	r3, #0
 801ffa8:	6123      	str	r3, [r4, #16]
 801ffaa:	4615      	mov	r5, r2
 801ffac:	e7ba      	b.n	801ff24 <_printf_i+0x150>
 801ffae:	682b      	ldr	r3, [r5, #0]
 801ffb0:	1d1a      	adds	r2, r3, #4
 801ffb2:	602a      	str	r2, [r5, #0]
 801ffb4:	681d      	ldr	r5, [r3, #0]
 801ffb6:	6862      	ldr	r2, [r4, #4]
 801ffb8:	2100      	movs	r1, #0
 801ffba:	4628      	mov	r0, r5
 801ffbc:	f7e0 f918 	bl	80001f0 <memchr>
 801ffc0:	b108      	cbz	r0, 801ffc6 <_printf_i+0x1f2>
 801ffc2:	1b40      	subs	r0, r0, r5
 801ffc4:	6060      	str	r0, [r4, #4]
 801ffc6:	6863      	ldr	r3, [r4, #4]
 801ffc8:	6123      	str	r3, [r4, #16]
 801ffca:	2300      	movs	r3, #0
 801ffcc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801ffd0:	e7a8      	b.n	801ff24 <_printf_i+0x150>
 801ffd2:	6923      	ldr	r3, [r4, #16]
 801ffd4:	462a      	mov	r2, r5
 801ffd6:	4649      	mov	r1, r9
 801ffd8:	4640      	mov	r0, r8
 801ffda:	47d0      	blx	sl
 801ffdc:	3001      	adds	r0, #1
 801ffde:	d0ab      	beq.n	801ff38 <_printf_i+0x164>
 801ffe0:	6823      	ldr	r3, [r4, #0]
 801ffe2:	079b      	lsls	r3, r3, #30
 801ffe4:	d413      	bmi.n	802000e <_printf_i+0x23a>
 801ffe6:	68e0      	ldr	r0, [r4, #12]
 801ffe8:	9b03      	ldr	r3, [sp, #12]
 801ffea:	4298      	cmp	r0, r3
 801ffec:	bfb8      	it	lt
 801ffee:	4618      	movlt	r0, r3
 801fff0:	e7a4      	b.n	801ff3c <_printf_i+0x168>
 801fff2:	2301      	movs	r3, #1
 801fff4:	4632      	mov	r2, r6
 801fff6:	4649      	mov	r1, r9
 801fff8:	4640      	mov	r0, r8
 801fffa:	47d0      	blx	sl
 801fffc:	3001      	adds	r0, #1
 801fffe:	d09b      	beq.n	801ff38 <_printf_i+0x164>
 8020000:	3501      	adds	r5, #1
 8020002:	68e3      	ldr	r3, [r4, #12]
 8020004:	9903      	ldr	r1, [sp, #12]
 8020006:	1a5b      	subs	r3, r3, r1
 8020008:	42ab      	cmp	r3, r5
 802000a:	dcf2      	bgt.n	801fff2 <_printf_i+0x21e>
 802000c:	e7eb      	b.n	801ffe6 <_printf_i+0x212>
 802000e:	2500      	movs	r5, #0
 8020010:	f104 0619 	add.w	r6, r4, #25
 8020014:	e7f5      	b.n	8020002 <_printf_i+0x22e>
 8020016:	bf00      	nop
 8020018:	080230e1 	.word	0x080230e1
 802001c:	080230f2 	.word	0x080230f2

08020020 <cleanup_glue>:
 8020020:	b538      	push	{r3, r4, r5, lr}
 8020022:	460c      	mov	r4, r1
 8020024:	6809      	ldr	r1, [r1, #0]
 8020026:	4605      	mov	r5, r0
 8020028:	b109      	cbz	r1, 802002e <cleanup_glue+0xe>
 802002a:	f7ff fff9 	bl	8020020 <cleanup_glue>
 802002e:	4621      	mov	r1, r4
 8020030:	4628      	mov	r0, r5
 8020032:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020036:	f7ff bc25 	b.w	801f884 <_free_r>
	...

0802003c <_reclaim_reent>:
 802003c:	4b2c      	ldr	r3, [pc, #176]	; (80200f0 <_reclaim_reent+0xb4>)
 802003e:	681b      	ldr	r3, [r3, #0]
 8020040:	4283      	cmp	r3, r0
 8020042:	b570      	push	{r4, r5, r6, lr}
 8020044:	4604      	mov	r4, r0
 8020046:	d051      	beq.n	80200ec <_reclaim_reent+0xb0>
 8020048:	6a43      	ldr	r3, [r0, #36]	; 0x24
 802004a:	b143      	cbz	r3, 802005e <_reclaim_reent+0x22>
 802004c:	68db      	ldr	r3, [r3, #12]
 802004e:	2b00      	cmp	r3, #0
 8020050:	d14a      	bne.n	80200e8 <_reclaim_reent+0xac>
 8020052:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8020054:	6819      	ldr	r1, [r3, #0]
 8020056:	b111      	cbz	r1, 802005e <_reclaim_reent+0x22>
 8020058:	4620      	mov	r0, r4
 802005a:	f7ff fc13 	bl	801f884 <_free_r>
 802005e:	6961      	ldr	r1, [r4, #20]
 8020060:	b111      	cbz	r1, 8020068 <_reclaim_reent+0x2c>
 8020062:	4620      	mov	r0, r4
 8020064:	f7ff fc0e 	bl	801f884 <_free_r>
 8020068:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802006a:	b111      	cbz	r1, 8020072 <_reclaim_reent+0x36>
 802006c:	4620      	mov	r0, r4
 802006e:	f7ff fc09 	bl	801f884 <_free_r>
 8020072:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8020074:	b111      	cbz	r1, 802007c <_reclaim_reent+0x40>
 8020076:	4620      	mov	r0, r4
 8020078:	f7ff fc04 	bl	801f884 <_free_r>
 802007c:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 802007e:	b111      	cbz	r1, 8020086 <_reclaim_reent+0x4a>
 8020080:	4620      	mov	r0, r4
 8020082:	f7ff fbff 	bl	801f884 <_free_r>
 8020086:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020088:	b111      	cbz	r1, 8020090 <_reclaim_reent+0x54>
 802008a:	4620      	mov	r0, r4
 802008c:	f7ff fbfa 	bl	801f884 <_free_r>
 8020090:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8020092:	b111      	cbz	r1, 802009a <_reclaim_reent+0x5e>
 8020094:	4620      	mov	r0, r4
 8020096:	f7ff fbf5 	bl	801f884 <_free_r>
 802009a:	6da1      	ldr	r1, [r4, #88]	; 0x58
 802009c:	b111      	cbz	r1, 80200a4 <_reclaim_reent+0x68>
 802009e:	4620      	mov	r0, r4
 80200a0:	f7ff fbf0 	bl	801f884 <_free_r>
 80200a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80200a6:	b111      	cbz	r1, 80200ae <_reclaim_reent+0x72>
 80200a8:	4620      	mov	r0, r4
 80200aa:	f7ff fbeb 	bl	801f884 <_free_r>
 80200ae:	69a3      	ldr	r3, [r4, #24]
 80200b0:	b1e3      	cbz	r3, 80200ec <_reclaim_reent+0xb0>
 80200b2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80200b4:	4620      	mov	r0, r4
 80200b6:	4798      	blx	r3
 80200b8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80200ba:	b1b9      	cbz	r1, 80200ec <_reclaim_reent+0xb0>
 80200bc:	4620      	mov	r0, r4
 80200be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80200c2:	f7ff bfad 	b.w	8020020 <cleanup_glue>
 80200c6:	5949      	ldr	r1, [r1, r5]
 80200c8:	b941      	cbnz	r1, 80200dc <_reclaim_reent+0xa0>
 80200ca:	3504      	adds	r5, #4
 80200cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80200ce:	2d80      	cmp	r5, #128	; 0x80
 80200d0:	68d9      	ldr	r1, [r3, #12]
 80200d2:	d1f8      	bne.n	80200c6 <_reclaim_reent+0x8a>
 80200d4:	4620      	mov	r0, r4
 80200d6:	f7ff fbd5 	bl	801f884 <_free_r>
 80200da:	e7ba      	b.n	8020052 <_reclaim_reent+0x16>
 80200dc:	680e      	ldr	r6, [r1, #0]
 80200de:	4620      	mov	r0, r4
 80200e0:	f7ff fbd0 	bl	801f884 <_free_r>
 80200e4:	4631      	mov	r1, r6
 80200e6:	e7ef      	b.n	80200c8 <_reclaim_reent+0x8c>
 80200e8:	2500      	movs	r5, #0
 80200ea:	e7ef      	b.n	80200cc <_reclaim_reent+0x90>
 80200ec:	bd70      	pop	{r4, r5, r6, pc}
 80200ee:	bf00      	nop
 80200f0:	20000100 	.word	0x20000100

080200f4 <_sbrk_r>:
 80200f4:	b538      	push	{r3, r4, r5, lr}
 80200f6:	4d06      	ldr	r5, [pc, #24]	; (8020110 <_sbrk_r+0x1c>)
 80200f8:	2300      	movs	r3, #0
 80200fa:	4604      	mov	r4, r0
 80200fc:	4608      	mov	r0, r1
 80200fe:	602b      	str	r3, [r5, #0]
 8020100:	f7e1 ff96 	bl	8002030 <_sbrk>
 8020104:	1c43      	adds	r3, r0, #1
 8020106:	d102      	bne.n	802010e <_sbrk_r+0x1a>
 8020108:	682b      	ldr	r3, [r5, #0]
 802010a:	b103      	cbz	r3, 802010e <_sbrk_r+0x1a>
 802010c:	6023      	str	r3, [r4, #0]
 802010e:	bd38      	pop	{r3, r4, r5, pc}
 8020110:	2001777c 	.word	0x2001777c

08020114 <_raise_r>:
 8020114:	291f      	cmp	r1, #31
 8020116:	b538      	push	{r3, r4, r5, lr}
 8020118:	4604      	mov	r4, r0
 802011a:	460d      	mov	r5, r1
 802011c:	d904      	bls.n	8020128 <_raise_r+0x14>
 802011e:	2316      	movs	r3, #22
 8020120:	6003      	str	r3, [r0, #0]
 8020122:	f04f 30ff 	mov.w	r0, #4294967295
 8020126:	bd38      	pop	{r3, r4, r5, pc}
 8020128:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802012a:	b112      	cbz	r2, 8020132 <_raise_r+0x1e>
 802012c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8020130:	b94b      	cbnz	r3, 8020146 <_raise_r+0x32>
 8020132:	4620      	mov	r0, r4
 8020134:	f000 f830 	bl	8020198 <_getpid_r>
 8020138:	462a      	mov	r2, r5
 802013a:	4601      	mov	r1, r0
 802013c:	4620      	mov	r0, r4
 802013e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020142:	f000 b817 	b.w	8020174 <_kill_r>
 8020146:	2b01      	cmp	r3, #1
 8020148:	d00a      	beq.n	8020160 <_raise_r+0x4c>
 802014a:	1c59      	adds	r1, r3, #1
 802014c:	d103      	bne.n	8020156 <_raise_r+0x42>
 802014e:	2316      	movs	r3, #22
 8020150:	6003      	str	r3, [r0, #0]
 8020152:	2001      	movs	r0, #1
 8020154:	e7e7      	b.n	8020126 <_raise_r+0x12>
 8020156:	2400      	movs	r4, #0
 8020158:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802015c:	4628      	mov	r0, r5
 802015e:	4798      	blx	r3
 8020160:	2000      	movs	r0, #0
 8020162:	e7e0      	b.n	8020126 <_raise_r+0x12>

08020164 <raise>:
 8020164:	4b02      	ldr	r3, [pc, #8]	; (8020170 <raise+0xc>)
 8020166:	4601      	mov	r1, r0
 8020168:	6818      	ldr	r0, [r3, #0]
 802016a:	f7ff bfd3 	b.w	8020114 <_raise_r>
 802016e:	bf00      	nop
 8020170:	20000100 	.word	0x20000100

08020174 <_kill_r>:
 8020174:	b538      	push	{r3, r4, r5, lr}
 8020176:	4d07      	ldr	r5, [pc, #28]	; (8020194 <_kill_r+0x20>)
 8020178:	2300      	movs	r3, #0
 802017a:	4604      	mov	r4, r0
 802017c:	4608      	mov	r0, r1
 802017e:	4611      	mov	r1, r2
 8020180:	602b      	str	r3, [r5, #0]
 8020182:	f7e1 ff1f 	bl	8001fc4 <_kill>
 8020186:	1c43      	adds	r3, r0, #1
 8020188:	d102      	bne.n	8020190 <_kill_r+0x1c>
 802018a:	682b      	ldr	r3, [r5, #0]
 802018c:	b103      	cbz	r3, 8020190 <_kill_r+0x1c>
 802018e:	6023      	str	r3, [r4, #0]
 8020190:	bd38      	pop	{r3, r4, r5, pc}
 8020192:	bf00      	nop
 8020194:	2001777c 	.word	0x2001777c

08020198 <_getpid_r>:
 8020198:	f7e1 bf12 	b.w	8001fc0 <_getpid>

0802019c <__sread>:
 802019c:	b510      	push	{r4, lr}
 802019e:	460c      	mov	r4, r1
 80201a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80201a4:	f000 fac8 	bl	8020738 <_read_r>
 80201a8:	2800      	cmp	r0, #0
 80201aa:	bfab      	itete	ge
 80201ac:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80201ae:	89a3      	ldrhlt	r3, [r4, #12]
 80201b0:	181b      	addge	r3, r3, r0
 80201b2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80201b6:	bfac      	ite	ge
 80201b8:	6563      	strge	r3, [r4, #84]	; 0x54
 80201ba:	81a3      	strhlt	r3, [r4, #12]
 80201bc:	bd10      	pop	{r4, pc}

080201be <__swrite>:
 80201be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80201c2:	461f      	mov	r7, r3
 80201c4:	898b      	ldrh	r3, [r1, #12]
 80201c6:	05db      	lsls	r3, r3, #23
 80201c8:	4605      	mov	r5, r0
 80201ca:	460c      	mov	r4, r1
 80201cc:	4616      	mov	r6, r2
 80201ce:	d505      	bpl.n	80201dc <__swrite+0x1e>
 80201d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80201d4:	2302      	movs	r3, #2
 80201d6:	2200      	movs	r2, #0
 80201d8:	f000 fa2a 	bl	8020630 <_lseek_r>
 80201dc:	89a3      	ldrh	r3, [r4, #12]
 80201de:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80201e2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80201e6:	81a3      	strh	r3, [r4, #12]
 80201e8:	4632      	mov	r2, r6
 80201ea:	463b      	mov	r3, r7
 80201ec:	4628      	mov	r0, r5
 80201ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80201f2:	f000 b869 	b.w	80202c8 <_write_r>

080201f6 <__sseek>:
 80201f6:	b510      	push	{r4, lr}
 80201f8:	460c      	mov	r4, r1
 80201fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80201fe:	f000 fa17 	bl	8020630 <_lseek_r>
 8020202:	1c43      	adds	r3, r0, #1
 8020204:	89a3      	ldrh	r3, [r4, #12]
 8020206:	bf15      	itete	ne
 8020208:	6560      	strne	r0, [r4, #84]	; 0x54
 802020a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802020e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8020212:	81a3      	strheq	r3, [r4, #12]
 8020214:	bf18      	it	ne
 8020216:	81a3      	strhne	r3, [r4, #12]
 8020218:	bd10      	pop	{r4, pc}

0802021a <__sclose>:
 802021a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802021e:	f000 b935 	b.w	802048c <_close_r>
	...

08020224 <__swbuf_r>:
 8020224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020226:	460e      	mov	r6, r1
 8020228:	4614      	mov	r4, r2
 802022a:	4605      	mov	r5, r0
 802022c:	b118      	cbz	r0, 8020236 <__swbuf_r+0x12>
 802022e:	6983      	ldr	r3, [r0, #24]
 8020230:	b90b      	cbnz	r3, 8020236 <__swbuf_r+0x12>
 8020232:	f7ff fa29 	bl	801f688 <__sinit>
 8020236:	4b21      	ldr	r3, [pc, #132]	; (80202bc <__swbuf_r+0x98>)
 8020238:	429c      	cmp	r4, r3
 802023a:	d12b      	bne.n	8020294 <__swbuf_r+0x70>
 802023c:	686c      	ldr	r4, [r5, #4]
 802023e:	69a3      	ldr	r3, [r4, #24]
 8020240:	60a3      	str	r3, [r4, #8]
 8020242:	89a3      	ldrh	r3, [r4, #12]
 8020244:	071a      	lsls	r2, r3, #28
 8020246:	d52f      	bpl.n	80202a8 <__swbuf_r+0x84>
 8020248:	6923      	ldr	r3, [r4, #16]
 802024a:	b36b      	cbz	r3, 80202a8 <__swbuf_r+0x84>
 802024c:	6923      	ldr	r3, [r4, #16]
 802024e:	6820      	ldr	r0, [r4, #0]
 8020250:	1ac0      	subs	r0, r0, r3
 8020252:	6963      	ldr	r3, [r4, #20]
 8020254:	b2f6      	uxtb	r6, r6
 8020256:	4283      	cmp	r3, r0
 8020258:	4637      	mov	r7, r6
 802025a:	dc04      	bgt.n	8020266 <__swbuf_r+0x42>
 802025c:	4621      	mov	r1, r4
 802025e:	4628      	mov	r0, r5
 8020260:	f000 f9aa 	bl	80205b8 <_fflush_r>
 8020264:	bb30      	cbnz	r0, 80202b4 <__swbuf_r+0x90>
 8020266:	68a3      	ldr	r3, [r4, #8]
 8020268:	3b01      	subs	r3, #1
 802026a:	60a3      	str	r3, [r4, #8]
 802026c:	6823      	ldr	r3, [r4, #0]
 802026e:	1c5a      	adds	r2, r3, #1
 8020270:	6022      	str	r2, [r4, #0]
 8020272:	701e      	strb	r6, [r3, #0]
 8020274:	6963      	ldr	r3, [r4, #20]
 8020276:	3001      	adds	r0, #1
 8020278:	4283      	cmp	r3, r0
 802027a:	d004      	beq.n	8020286 <__swbuf_r+0x62>
 802027c:	89a3      	ldrh	r3, [r4, #12]
 802027e:	07db      	lsls	r3, r3, #31
 8020280:	d506      	bpl.n	8020290 <__swbuf_r+0x6c>
 8020282:	2e0a      	cmp	r6, #10
 8020284:	d104      	bne.n	8020290 <__swbuf_r+0x6c>
 8020286:	4621      	mov	r1, r4
 8020288:	4628      	mov	r0, r5
 802028a:	f000 f995 	bl	80205b8 <_fflush_r>
 802028e:	b988      	cbnz	r0, 80202b4 <__swbuf_r+0x90>
 8020290:	4638      	mov	r0, r7
 8020292:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020294:	4b0a      	ldr	r3, [pc, #40]	; (80202c0 <__swbuf_r+0x9c>)
 8020296:	429c      	cmp	r4, r3
 8020298:	d101      	bne.n	802029e <__swbuf_r+0x7a>
 802029a:	68ac      	ldr	r4, [r5, #8]
 802029c:	e7cf      	b.n	802023e <__swbuf_r+0x1a>
 802029e:	4b09      	ldr	r3, [pc, #36]	; (80202c4 <__swbuf_r+0xa0>)
 80202a0:	429c      	cmp	r4, r3
 80202a2:	bf08      	it	eq
 80202a4:	68ec      	ldreq	r4, [r5, #12]
 80202a6:	e7ca      	b.n	802023e <__swbuf_r+0x1a>
 80202a8:	4621      	mov	r1, r4
 80202aa:	4628      	mov	r0, r5
 80202ac:	f000 f81e 	bl	80202ec <__swsetup_r>
 80202b0:	2800      	cmp	r0, #0
 80202b2:	d0cb      	beq.n	802024c <__swbuf_r+0x28>
 80202b4:	f04f 37ff 	mov.w	r7, #4294967295
 80202b8:	e7ea      	b.n	8020290 <__swbuf_r+0x6c>
 80202ba:	bf00      	nop
 80202bc:	0802308c 	.word	0x0802308c
 80202c0:	080230ac 	.word	0x080230ac
 80202c4:	0802306c 	.word	0x0802306c

080202c8 <_write_r>:
 80202c8:	b538      	push	{r3, r4, r5, lr}
 80202ca:	4d07      	ldr	r5, [pc, #28]	; (80202e8 <_write_r+0x20>)
 80202cc:	4604      	mov	r4, r0
 80202ce:	4608      	mov	r0, r1
 80202d0:	4611      	mov	r1, r2
 80202d2:	2200      	movs	r2, #0
 80202d4:	602a      	str	r2, [r5, #0]
 80202d6:	461a      	mov	r2, r3
 80202d8:	f7e1 fe90 	bl	8001ffc <_write>
 80202dc:	1c43      	adds	r3, r0, #1
 80202de:	d102      	bne.n	80202e6 <_write_r+0x1e>
 80202e0:	682b      	ldr	r3, [r5, #0]
 80202e2:	b103      	cbz	r3, 80202e6 <_write_r+0x1e>
 80202e4:	6023      	str	r3, [r4, #0]
 80202e6:	bd38      	pop	{r3, r4, r5, pc}
 80202e8:	2001777c 	.word	0x2001777c

080202ec <__swsetup_r>:
 80202ec:	4b32      	ldr	r3, [pc, #200]	; (80203b8 <__swsetup_r+0xcc>)
 80202ee:	b570      	push	{r4, r5, r6, lr}
 80202f0:	681d      	ldr	r5, [r3, #0]
 80202f2:	4606      	mov	r6, r0
 80202f4:	460c      	mov	r4, r1
 80202f6:	b125      	cbz	r5, 8020302 <__swsetup_r+0x16>
 80202f8:	69ab      	ldr	r3, [r5, #24]
 80202fa:	b913      	cbnz	r3, 8020302 <__swsetup_r+0x16>
 80202fc:	4628      	mov	r0, r5
 80202fe:	f7ff f9c3 	bl	801f688 <__sinit>
 8020302:	4b2e      	ldr	r3, [pc, #184]	; (80203bc <__swsetup_r+0xd0>)
 8020304:	429c      	cmp	r4, r3
 8020306:	d10f      	bne.n	8020328 <__swsetup_r+0x3c>
 8020308:	686c      	ldr	r4, [r5, #4]
 802030a:	89a3      	ldrh	r3, [r4, #12]
 802030c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020310:	0719      	lsls	r1, r3, #28
 8020312:	d42c      	bmi.n	802036e <__swsetup_r+0x82>
 8020314:	06dd      	lsls	r5, r3, #27
 8020316:	d411      	bmi.n	802033c <__swsetup_r+0x50>
 8020318:	2309      	movs	r3, #9
 802031a:	6033      	str	r3, [r6, #0]
 802031c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8020320:	81a3      	strh	r3, [r4, #12]
 8020322:	f04f 30ff 	mov.w	r0, #4294967295
 8020326:	e03e      	b.n	80203a6 <__swsetup_r+0xba>
 8020328:	4b25      	ldr	r3, [pc, #148]	; (80203c0 <__swsetup_r+0xd4>)
 802032a:	429c      	cmp	r4, r3
 802032c:	d101      	bne.n	8020332 <__swsetup_r+0x46>
 802032e:	68ac      	ldr	r4, [r5, #8]
 8020330:	e7eb      	b.n	802030a <__swsetup_r+0x1e>
 8020332:	4b24      	ldr	r3, [pc, #144]	; (80203c4 <__swsetup_r+0xd8>)
 8020334:	429c      	cmp	r4, r3
 8020336:	bf08      	it	eq
 8020338:	68ec      	ldreq	r4, [r5, #12]
 802033a:	e7e6      	b.n	802030a <__swsetup_r+0x1e>
 802033c:	0758      	lsls	r0, r3, #29
 802033e:	d512      	bpl.n	8020366 <__swsetup_r+0x7a>
 8020340:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020342:	b141      	cbz	r1, 8020356 <__swsetup_r+0x6a>
 8020344:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8020348:	4299      	cmp	r1, r3
 802034a:	d002      	beq.n	8020352 <__swsetup_r+0x66>
 802034c:	4630      	mov	r0, r6
 802034e:	f7ff fa99 	bl	801f884 <_free_r>
 8020352:	2300      	movs	r3, #0
 8020354:	6363      	str	r3, [r4, #52]	; 0x34
 8020356:	89a3      	ldrh	r3, [r4, #12]
 8020358:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802035c:	81a3      	strh	r3, [r4, #12]
 802035e:	2300      	movs	r3, #0
 8020360:	6063      	str	r3, [r4, #4]
 8020362:	6923      	ldr	r3, [r4, #16]
 8020364:	6023      	str	r3, [r4, #0]
 8020366:	89a3      	ldrh	r3, [r4, #12]
 8020368:	f043 0308 	orr.w	r3, r3, #8
 802036c:	81a3      	strh	r3, [r4, #12]
 802036e:	6923      	ldr	r3, [r4, #16]
 8020370:	b94b      	cbnz	r3, 8020386 <__swsetup_r+0x9a>
 8020372:	89a3      	ldrh	r3, [r4, #12]
 8020374:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8020378:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802037c:	d003      	beq.n	8020386 <__swsetup_r+0x9a>
 802037e:	4621      	mov	r1, r4
 8020380:	4630      	mov	r0, r6
 8020382:	f000 f98d 	bl	80206a0 <__smakebuf_r>
 8020386:	89a0      	ldrh	r0, [r4, #12]
 8020388:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802038c:	f010 0301 	ands.w	r3, r0, #1
 8020390:	d00a      	beq.n	80203a8 <__swsetup_r+0xbc>
 8020392:	2300      	movs	r3, #0
 8020394:	60a3      	str	r3, [r4, #8]
 8020396:	6963      	ldr	r3, [r4, #20]
 8020398:	425b      	negs	r3, r3
 802039a:	61a3      	str	r3, [r4, #24]
 802039c:	6923      	ldr	r3, [r4, #16]
 802039e:	b943      	cbnz	r3, 80203b2 <__swsetup_r+0xc6>
 80203a0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80203a4:	d1ba      	bne.n	802031c <__swsetup_r+0x30>
 80203a6:	bd70      	pop	{r4, r5, r6, pc}
 80203a8:	0781      	lsls	r1, r0, #30
 80203aa:	bf58      	it	pl
 80203ac:	6963      	ldrpl	r3, [r4, #20]
 80203ae:	60a3      	str	r3, [r4, #8]
 80203b0:	e7f4      	b.n	802039c <__swsetup_r+0xb0>
 80203b2:	2000      	movs	r0, #0
 80203b4:	e7f7      	b.n	80203a6 <__swsetup_r+0xba>
 80203b6:	bf00      	nop
 80203b8:	20000100 	.word	0x20000100
 80203bc:	0802308c 	.word	0x0802308c
 80203c0:	080230ac 	.word	0x080230ac
 80203c4:	0802306c 	.word	0x0802306c

080203c8 <__register_exitproc>:
 80203c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80203cc:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8020488 <__register_exitproc+0xc0>
 80203d0:	4606      	mov	r6, r0
 80203d2:	f8d8 0000 	ldr.w	r0, [r8]
 80203d6:	461f      	mov	r7, r3
 80203d8:	460d      	mov	r5, r1
 80203da:	4691      	mov	r9, r2
 80203dc:	f7ff fa29 	bl	801f832 <__retarget_lock_acquire_recursive>
 80203e0:	4b25      	ldr	r3, [pc, #148]	; (8020478 <__register_exitproc+0xb0>)
 80203e2:	681c      	ldr	r4, [r3, #0]
 80203e4:	b934      	cbnz	r4, 80203f4 <__register_exitproc+0x2c>
 80203e6:	4c25      	ldr	r4, [pc, #148]	; (802047c <__register_exitproc+0xb4>)
 80203e8:	601c      	str	r4, [r3, #0]
 80203ea:	4b25      	ldr	r3, [pc, #148]	; (8020480 <__register_exitproc+0xb8>)
 80203ec:	b113      	cbz	r3, 80203f4 <__register_exitproc+0x2c>
 80203ee:	681b      	ldr	r3, [r3, #0]
 80203f0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80203f4:	6863      	ldr	r3, [r4, #4]
 80203f6:	2b1f      	cmp	r3, #31
 80203f8:	dd07      	ble.n	802040a <__register_exitproc+0x42>
 80203fa:	f8d8 0000 	ldr.w	r0, [r8]
 80203fe:	f7ff fa1a 	bl	801f836 <__retarget_lock_release_recursive>
 8020402:	f04f 30ff 	mov.w	r0, #4294967295
 8020406:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802040a:	b34e      	cbz	r6, 8020460 <__register_exitproc+0x98>
 802040c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8020410:	b988      	cbnz	r0, 8020436 <__register_exitproc+0x6e>
 8020412:	4b1c      	ldr	r3, [pc, #112]	; (8020484 <__register_exitproc+0xbc>)
 8020414:	b923      	cbnz	r3, 8020420 <__register_exitproc+0x58>
 8020416:	f8d8 0000 	ldr.w	r0, [r8]
 802041a:	f7ff fa0b 	bl	801f834 <__retarget_lock_release>
 802041e:	e7f0      	b.n	8020402 <__register_exitproc+0x3a>
 8020420:	f44f 7084 	mov.w	r0, #264	; 0x108
 8020424:	f7ff fa08 	bl	801f838 <malloc>
 8020428:	2800      	cmp	r0, #0
 802042a:	d0f4      	beq.n	8020416 <__register_exitproc+0x4e>
 802042c:	2300      	movs	r3, #0
 802042e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8020432:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8020436:	6863      	ldr	r3, [r4, #4]
 8020438:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802043c:	2201      	movs	r2, #1
 802043e:	409a      	lsls	r2, r3
 8020440:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8020444:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8020448:	4313      	orrs	r3, r2
 802044a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802044e:	2e02      	cmp	r6, #2
 8020450:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8020454:	bf02      	ittt	eq
 8020456:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802045a:	4313      	orreq	r3, r2
 802045c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8020460:	6863      	ldr	r3, [r4, #4]
 8020462:	f8d8 0000 	ldr.w	r0, [r8]
 8020466:	1c5a      	adds	r2, r3, #1
 8020468:	3302      	adds	r3, #2
 802046a:	6062      	str	r2, [r4, #4]
 802046c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8020470:	f7ff f9e1 	bl	801f836 <__retarget_lock_release_recursive>
 8020474:	2000      	movs	r0, #0
 8020476:	e7c6      	b.n	8020406 <__register_exitproc+0x3e>
 8020478:	2001780c 	.word	0x2001780c
 802047c:	20017780 	.word	0x20017780
 8020480:	08023104 	.word	0x08023104
 8020484:	0801f839 	.word	0x0801f839
 8020488:	20000164 	.word	0x20000164

0802048c <_close_r>:
 802048c:	b538      	push	{r3, r4, r5, lr}
 802048e:	4d06      	ldr	r5, [pc, #24]	; (80204a8 <_close_r+0x1c>)
 8020490:	2300      	movs	r3, #0
 8020492:	4604      	mov	r4, r0
 8020494:	4608      	mov	r0, r1
 8020496:	602b      	str	r3, [r5, #0]
 8020498:	f7e1 fdbe 	bl	8002018 <_close>
 802049c:	1c43      	adds	r3, r0, #1
 802049e:	d102      	bne.n	80204a6 <_close_r+0x1a>
 80204a0:	682b      	ldr	r3, [r5, #0]
 80204a2:	b103      	cbz	r3, 80204a6 <_close_r+0x1a>
 80204a4:	6023      	str	r3, [r4, #0]
 80204a6:	bd38      	pop	{r3, r4, r5, pc}
 80204a8:	2001777c 	.word	0x2001777c

080204ac <__sflush_r>:
 80204ac:	898a      	ldrh	r2, [r1, #12]
 80204ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80204b2:	4605      	mov	r5, r0
 80204b4:	0710      	lsls	r0, r2, #28
 80204b6:	460c      	mov	r4, r1
 80204b8:	d458      	bmi.n	802056c <__sflush_r+0xc0>
 80204ba:	684b      	ldr	r3, [r1, #4]
 80204bc:	2b00      	cmp	r3, #0
 80204be:	dc05      	bgt.n	80204cc <__sflush_r+0x20>
 80204c0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80204c2:	2b00      	cmp	r3, #0
 80204c4:	dc02      	bgt.n	80204cc <__sflush_r+0x20>
 80204c6:	2000      	movs	r0, #0
 80204c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80204cc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80204ce:	2e00      	cmp	r6, #0
 80204d0:	d0f9      	beq.n	80204c6 <__sflush_r+0x1a>
 80204d2:	2300      	movs	r3, #0
 80204d4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80204d8:	682f      	ldr	r7, [r5, #0]
 80204da:	602b      	str	r3, [r5, #0]
 80204dc:	d032      	beq.n	8020544 <__sflush_r+0x98>
 80204de:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80204e0:	89a3      	ldrh	r3, [r4, #12]
 80204e2:	075a      	lsls	r2, r3, #29
 80204e4:	d505      	bpl.n	80204f2 <__sflush_r+0x46>
 80204e6:	6863      	ldr	r3, [r4, #4]
 80204e8:	1ac0      	subs	r0, r0, r3
 80204ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80204ec:	b10b      	cbz	r3, 80204f2 <__sflush_r+0x46>
 80204ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80204f0:	1ac0      	subs	r0, r0, r3
 80204f2:	2300      	movs	r3, #0
 80204f4:	4602      	mov	r2, r0
 80204f6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80204f8:	6a21      	ldr	r1, [r4, #32]
 80204fa:	4628      	mov	r0, r5
 80204fc:	47b0      	blx	r6
 80204fe:	1c43      	adds	r3, r0, #1
 8020500:	89a3      	ldrh	r3, [r4, #12]
 8020502:	d106      	bne.n	8020512 <__sflush_r+0x66>
 8020504:	6829      	ldr	r1, [r5, #0]
 8020506:	291d      	cmp	r1, #29
 8020508:	d82c      	bhi.n	8020564 <__sflush_r+0xb8>
 802050a:	4a2a      	ldr	r2, [pc, #168]	; (80205b4 <__sflush_r+0x108>)
 802050c:	40ca      	lsrs	r2, r1
 802050e:	07d6      	lsls	r6, r2, #31
 8020510:	d528      	bpl.n	8020564 <__sflush_r+0xb8>
 8020512:	2200      	movs	r2, #0
 8020514:	6062      	str	r2, [r4, #4]
 8020516:	04d9      	lsls	r1, r3, #19
 8020518:	6922      	ldr	r2, [r4, #16]
 802051a:	6022      	str	r2, [r4, #0]
 802051c:	d504      	bpl.n	8020528 <__sflush_r+0x7c>
 802051e:	1c42      	adds	r2, r0, #1
 8020520:	d101      	bne.n	8020526 <__sflush_r+0x7a>
 8020522:	682b      	ldr	r3, [r5, #0]
 8020524:	b903      	cbnz	r3, 8020528 <__sflush_r+0x7c>
 8020526:	6560      	str	r0, [r4, #84]	; 0x54
 8020528:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802052a:	602f      	str	r7, [r5, #0]
 802052c:	2900      	cmp	r1, #0
 802052e:	d0ca      	beq.n	80204c6 <__sflush_r+0x1a>
 8020530:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8020534:	4299      	cmp	r1, r3
 8020536:	d002      	beq.n	802053e <__sflush_r+0x92>
 8020538:	4628      	mov	r0, r5
 802053a:	f7ff f9a3 	bl	801f884 <_free_r>
 802053e:	2000      	movs	r0, #0
 8020540:	6360      	str	r0, [r4, #52]	; 0x34
 8020542:	e7c1      	b.n	80204c8 <__sflush_r+0x1c>
 8020544:	6a21      	ldr	r1, [r4, #32]
 8020546:	2301      	movs	r3, #1
 8020548:	4628      	mov	r0, r5
 802054a:	47b0      	blx	r6
 802054c:	1c41      	adds	r1, r0, #1
 802054e:	d1c7      	bne.n	80204e0 <__sflush_r+0x34>
 8020550:	682b      	ldr	r3, [r5, #0]
 8020552:	2b00      	cmp	r3, #0
 8020554:	d0c4      	beq.n	80204e0 <__sflush_r+0x34>
 8020556:	2b1d      	cmp	r3, #29
 8020558:	d001      	beq.n	802055e <__sflush_r+0xb2>
 802055a:	2b16      	cmp	r3, #22
 802055c:	d101      	bne.n	8020562 <__sflush_r+0xb6>
 802055e:	602f      	str	r7, [r5, #0]
 8020560:	e7b1      	b.n	80204c6 <__sflush_r+0x1a>
 8020562:	89a3      	ldrh	r3, [r4, #12]
 8020564:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8020568:	81a3      	strh	r3, [r4, #12]
 802056a:	e7ad      	b.n	80204c8 <__sflush_r+0x1c>
 802056c:	690f      	ldr	r7, [r1, #16]
 802056e:	2f00      	cmp	r7, #0
 8020570:	d0a9      	beq.n	80204c6 <__sflush_r+0x1a>
 8020572:	0793      	lsls	r3, r2, #30
 8020574:	680e      	ldr	r6, [r1, #0]
 8020576:	bf08      	it	eq
 8020578:	694b      	ldreq	r3, [r1, #20]
 802057a:	600f      	str	r7, [r1, #0]
 802057c:	bf18      	it	ne
 802057e:	2300      	movne	r3, #0
 8020580:	eba6 0807 	sub.w	r8, r6, r7
 8020584:	608b      	str	r3, [r1, #8]
 8020586:	f1b8 0f00 	cmp.w	r8, #0
 802058a:	dd9c      	ble.n	80204c6 <__sflush_r+0x1a>
 802058c:	6a21      	ldr	r1, [r4, #32]
 802058e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8020590:	4643      	mov	r3, r8
 8020592:	463a      	mov	r2, r7
 8020594:	4628      	mov	r0, r5
 8020596:	47b0      	blx	r6
 8020598:	2800      	cmp	r0, #0
 802059a:	dc06      	bgt.n	80205aa <__sflush_r+0xfe>
 802059c:	89a3      	ldrh	r3, [r4, #12]
 802059e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80205a2:	81a3      	strh	r3, [r4, #12]
 80205a4:	f04f 30ff 	mov.w	r0, #4294967295
 80205a8:	e78e      	b.n	80204c8 <__sflush_r+0x1c>
 80205aa:	4407      	add	r7, r0
 80205ac:	eba8 0800 	sub.w	r8, r8, r0
 80205b0:	e7e9      	b.n	8020586 <__sflush_r+0xda>
 80205b2:	bf00      	nop
 80205b4:	20400001 	.word	0x20400001

080205b8 <_fflush_r>:
 80205b8:	b538      	push	{r3, r4, r5, lr}
 80205ba:	690b      	ldr	r3, [r1, #16]
 80205bc:	4605      	mov	r5, r0
 80205be:	460c      	mov	r4, r1
 80205c0:	b913      	cbnz	r3, 80205c8 <_fflush_r+0x10>
 80205c2:	2500      	movs	r5, #0
 80205c4:	4628      	mov	r0, r5
 80205c6:	bd38      	pop	{r3, r4, r5, pc}
 80205c8:	b118      	cbz	r0, 80205d2 <_fflush_r+0x1a>
 80205ca:	6983      	ldr	r3, [r0, #24]
 80205cc:	b90b      	cbnz	r3, 80205d2 <_fflush_r+0x1a>
 80205ce:	f7ff f85b 	bl	801f688 <__sinit>
 80205d2:	4b14      	ldr	r3, [pc, #80]	; (8020624 <_fflush_r+0x6c>)
 80205d4:	429c      	cmp	r4, r3
 80205d6:	d11b      	bne.n	8020610 <_fflush_r+0x58>
 80205d8:	686c      	ldr	r4, [r5, #4]
 80205da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80205de:	2b00      	cmp	r3, #0
 80205e0:	d0ef      	beq.n	80205c2 <_fflush_r+0xa>
 80205e2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80205e4:	07d0      	lsls	r0, r2, #31
 80205e6:	d404      	bmi.n	80205f2 <_fflush_r+0x3a>
 80205e8:	0599      	lsls	r1, r3, #22
 80205ea:	d402      	bmi.n	80205f2 <_fflush_r+0x3a>
 80205ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80205ee:	f7ff f920 	bl	801f832 <__retarget_lock_acquire_recursive>
 80205f2:	4628      	mov	r0, r5
 80205f4:	4621      	mov	r1, r4
 80205f6:	f7ff ff59 	bl	80204ac <__sflush_r>
 80205fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80205fc:	07da      	lsls	r2, r3, #31
 80205fe:	4605      	mov	r5, r0
 8020600:	d4e0      	bmi.n	80205c4 <_fflush_r+0xc>
 8020602:	89a3      	ldrh	r3, [r4, #12]
 8020604:	059b      	lsls	r3, r3, #22
 8020606:	d4dd      	bmi.n	80205c4 <_fflush_r+0xc>
 8020608:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802060a:	f7ff f914 	bl	801f836 <__retarget_lock_release_recursive>
 802060e:	e7d9      	b.n	80205c4 <_fflush_r+0xc>
 8020610:	4b05      	ldr	r3, [pc, #20]	; (8020628 <_fflush_r+0x70>)
 8020612:	429c      	cmp	r4, r3
 8020614:	d101      	bne.n	802061a <_fflush_r+0x62>
 8020616:	68ac      	ldr	r4, [r5, #8]
 8020618:	e7df      	b.n	80205da <_fflush_r+0x22>
 802061a:	4b04      	ldr	r3, [pc, #16]	; (802062c <_fflush_r+0x74>)
 802061c:	429c      	cmp	r4, r3
 802061e:	bf08      	it	eq
 8020620:	68ec      	ldreq	r4, [r5, #12]
 8020622:	e7da      	b.n	80205da <_fflush_r+0x22>
 8020624:	0802308c 	.word	0x0802308c
 8020628:	080230ac 	.word	0x080230ac
 802062c:	0802306c 	.word	0x0802306c

08020630 <_lseek_r>:
 8020630:	b538      	push	{r3, r4, r5, lr}
 8020632:	4d07      	ldr	r5, [pc, #28]	; (8020650 <_lseek_r+0x20>)
 8020634:	4604      	mov	r4, r0
 8020636:	4608      	mov	r0, r1
 8020638:	4611      	mov	r1, r2
 802063a:	2200      	movs	r2, #0
 802063c:	602a      	str	r2, [r5, #0]
 802063e:	461a      	mov	r2, r3
 8020640:	f7e1 fcf4 	bl	800202c <_lseek>
 8020644:	1c43      	adds	r3, r0, #1
 8020646:	d102      	bne.n	802064e <_lseek_r+0x1e>
 8020648:	682b      	ldr	r3, [r5, #0]
 802064a:	b103      	cbz	r3, 802064e <_lseek_r+0x1e>
 802064c:	6023      	str	r3, [r4, #0]
 802064e:	bd38      	pop	{r3, r4, r5, pc}
 8020650:	2001777c 	.word	0x2001777c

08020654 <__swhatbuf_r>:
 8020654:	b570      	push	{r4, r5, r6, lr}
 8020656:	460e      	mov	r6, r1
 8020658:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802065c:	2900      	cmp	r1, #0
 802065e:	b096      	sub	sp, #88	; 0x58
 8020660:	4614      	mov	r4, r2
 8020662:	461d      	mov	r5, r3
 8020664:	da08      	bge.n	8020678 <__swhatbuf_r+0x24>
 8020666:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 802066a:	2200      	movs	r2, #0
 802066c:	602a      	str	r2, [r5, #0]
 802066e:	061a      	lsls	r2, r3, #24
 8020670:	d410      	bmi.n	8020694 <__swhatbuf_r+0x40>
 8020672:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8020676:	e00e      	b.n	8020696 <__swhatbuf_r+0x42>
 8020678:	466a      	mov	r2, sp
 802067a:	f000 f86f 	bl	802075c <_fstat_r>
 802067e:	2800      	cmp	r0, #0
 8020680:	dbf1      	blt.n	8020666 <__swhatbuf_r+0x12>
 8020682:	9a01      	ldr	r2, [sp, #4]
 8020684:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8020688:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 802068c:	425a      	negs	r2, r3
 802068e:	415a      	adcs	r2, r3
 8020690:	602a      	str	r2, [r5, #0]
 8020692:	e7ee      	b.n	8020672 <__swhatbuf_r+0x1e>
 8020694:	2340      	movs	r3, #64	; 0x40
 8020696:	2000      	movs	r0, #0
 8020698:	6023      	str	r3, [r4, #0]
 802069a:	b016      	add	sp, #88	; 0x58
 802069c:	bd70      	pop	{r4, r5, r6, pc}
	...

080206a0 <__smakebuf_r>:
 80206a0:	898b      	ldrh	r3, [r1, #12]
 80206a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80206a4:	079d      	lsls	r5, r3, #30
 80206a6:	4606      	mov	r6, r0
 80206a8:	460c      	mov	r4, r1
 80206aa:	d507      	bpl.n	80206bc <__smakebuf_r+0x1c>
 80206ac:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80206b0:	6023      	str	r3, [r4, #0]
 80206b2:	6123      	str	r3, [r4, #16]
 80206b4:	2301      	movs	r3, #1
 80206b6:	6163      	str	r3, [r4, #20]
 80206b8:	b002      	add	sp, #8
 80206ba:	bd70      	pop	{r4, r5, r6, pc}
 80206bc:	ab01      	add	r3, sp, #4
 80206be:	466a      	mov	r2, sp
 80206c0:	f7ff ffc8 	bl	8020654 <__swhatbuf_r>
 80206c4:	9900      	ldr	r1, [sp, #0]
 80206c6:	4605      	mov	r5, r0
 80206c8:	4630      	mov	r0, r6
 80206ca:	f7ff f947 	bl	801f95c <_malloc_r>
 80206ce:	b948      	cbnz	r0, 80206e4 <__smakebuf_r+0x44>
 80206d0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80206d4:	059a      	lsls	r2, r3, #22
 80206d6:	d4ef      	bmi.n	80206b8 <__smakebuf_r+0x18>
 80206d8:	f023 0303 	bic.w	r3, r3, #3
 80206dc:	f043 0302 	orr.w	r3, r3, #2
 80206e0:	81a3      	strh	r3, [r4, #12]
 80206e2:	e7e3      	b.n	80206ac <__smakebuf_r+0xc>
 80206e4:	4b0d      	ldr	r3, [pc, #52]	; (802071c <__smakebuf_r+0x7c>)
 80206e6:	62b3      	str	r3, [r6, #40]	; 0x28
 80206e8:	89a3      	ldrh	r3, [r4, #12]
 80206ea:	6020      	str	r0, [r4, #0]
 80206ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80206f0:	81a3      	strh	r3, [r4, #12]
 80206f2:	9b00      	ldr	r3, [sp, #0]
 80206f4:	6163      	str	r3, [r4, #20]
 80206f6:	9b01      	ldr	r3, [sp, #4]
 80206f8:	6120      	str	r0, [r4, #16]
 80206fa:	b15b      	cbz	r3, 8020714 <__smakebuf_r+0x74>
 80206fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8020700:	4630      	mov	r0, r6
 8020702:	f000 f83d 	bl	8020780 <_isatty_r>
 8020706:	b128      	cbz	r0, 8020714 <__smakebuf_r+0x74>
 8020708:	89a3      	ldrh	r3, [r4, #12]
 802070a:	f023 0303 	bic.w	r3, r3, #3
 802070e:	f043 0301 	orr.w	r3, r3, #1
 8020712:	81a3      	strh	r3, [r4, #12]
 8020714:	89a0      	ldrh	r0, [r4, #12]
 8020716:	4305      	orrs	r5, r0
 8020718:	81a5      	strh	r5, [r4, #12]
 802071a:	e7cd      	b.n	80206b8 <__smakebuf_r+0x18>
 802071c:	0801f621 	.word	0x0801f621

08020720 <__malloc_lock>:
 8020720:	4801      	ldr	r0, [pc, #4]	; (8020728 <__malloc_lock+0x8>)
 8020722:	f7ff b886 	b.w	801f832 <__retarget_lock_acquire_recursive>
 8020726:	bf00      	nop
 8020728:	20017669 	.word	0x20017669

0802072c <__malloc_unlock>:
 802072c:	4801      	ldr	r0, [pc, #4]	; (8020734 <__malloc_unlock+0x8>)
 802072e:	f7ff b882 	b.w	801f836 <__retarget_lock_release_recursive>
 8020732:	bf00      	nop
 8020734:	20017669 	.word	0x20017669

08020738 <_read_r>:
 8020738:	b538      	push	{r3, r4, r5, lr}
 802073a:	4d07      	ldr	r5, [pc, #28]	; (8020758 <_read_r+0x20>)
 802073c:	4604      	mov	r4, r0
 802073e:	4608      	mov	r0, r1
 8020740:	4611      	mov	r1, r2
 8020742:	2200      	movs	r2, #0
 8020744:	602a      	str	r2, [r5, #0]
 8020746:	461a      	mov	r2, r3
 8020748:	f7e1 fc4a 	bl	8001fe0 <_read>
 802074c:	1c43      	adds	r3, r0, #1
 802074e:	d102      	bne.n	8020756 <_read_r+0x1e>
 8020750:	682b      	ldr	r3, [r5, #0]
 8020752:	b103      	cbz	r3, 8020756 <_read_r+0x1e>
 8020754:	6023      	str	r3, [r4, #0]
 8020756:	bd38      	pop	{r3, r4, r5, pc}
 8020758:	2001777c 	.word	0x2001777c

0802075c <_fstat_r>:
 802075c:	b538      	push	{r3, r4, r5, lr}
 802075e:	4d07      	ldr	r5, [pc, #28]	; (802077c <_fstat_r+0x20>)
 8020760:	2300      	movs	r3, #0
 8020762:	4604      	mov	r4, r0
 8020764:	4608      	mov	r0, r1
 8020766:	4611      	mov	r1, r2
 8020768:	602b      	str	r3, [r5, #0]
 802076a:	f7e1 fc58 	bl	800201e <_fstat>
 802076e:	1c43      	adds	r3, r0, #1
 8020770:	d102      	bne.n	8020778 <_fstat_r+0x1c>
 8020772:	682b      	ldr	r3, [r5, #0]
 8020774:	b103      	cbz	r3, 8020778 <_fstat_r+0x1c>
 8020776:	6023      	str	r3, [r4, #0]
 8020778:	bd38      	pop	{r3, r4, r5, pc}
 802077a:	bf00      	nop
 802077c:	2001777c 	.word	0x2001777c

08020780 <_isatty_r>:
 8020780:	b538      	push	{r3, r4, r5, lr}
 8020782:	4d06      	ldr	r5, [pc, #24]	; (802079c <_isatty_r+0x1c>)
 8020784:	2300      	movs	r3, #0
 8020786:	4604      	mov	r4, r0
 8020788:	4608      	mov	r0, r1
 802078a:	602b      	str	r3, [r5, #0]
 802078c:	f7e1 fc4c 	bl	8002028 <_isatty>
 8020790:	1c43      	adds	r3, r0, #1
 8020792:	d102      	bne.n	802079a <_isatty_r+0x1a>
 8020794:	682b      	ldr	r3, [r5, #0]
 8020796:	b103      	cbz	r3, 802079a <_isatty_r+0x1a>
 8020798:	6023      	str	r3, [r4, #0]
 802079a:	bd38      	pop	{r3, r4, r5, pc}
 802079c:	2001777c 	.word	0x2001777c

080207a0 <_init>:
 80207a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80207a2:	bf00      	nop
 80207a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80207a6:	bc08      	pop	{r3}
 80207a8:	469e      	mov	lr, r3
 80207aa:	4770      	bx	lr

080207ac <_fini>:
 80207ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80207ae:	bf00      	nop
 80207b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80207b2:	bc08      	pop	{r3}
 80207b4:	469e      	mov	lr, r3
 80207b6:	4770      	bx	lr
