/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image2.setXY(0, 0);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));

    image3.setXY(118, 25);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));

    ButtonDown.setBoxWithBorderPosition(0, 0, 43, 23);
    ButtonDown.setBorderSize(5);
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    ButtonDown.setIconXY(5, 0);
    ButtonDown.setPosition(273, 49, 43, 23);
    ButtonDown.setAction(flexButtonCallback);

    ButtonUp.setBoxWithBorderPosition(0, 0, 43, 23);
    ButtonUp.setBorderSize(5);
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    ButtonUp.setIconXY(6, 0);
    ButtonUp.setPosition(273, 25, 43, 23);
    ButtonUp.setAction(flexButtonCallback);

    LabelPradLadowania.setXY(41, 28);
    LabelPradLadowania.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LabelPradLadowania.setLinespacing(0);
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));

    txtPradLadowania.setPosition(143, 36, 124, 24);
    txtPradLadowania.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtPradLadowania.setLinespacing(0);
    txtPradLadowaniaBuffer[0] = 0;
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));

    buttonStart.setXY(78, 180);
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonStart.setLabelText(touchgfx::TypedText(T___SINGLEUSE_KG9Q));
    buttonStart.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonStart.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonStart.setAction(buttonCallback);

    image3_1.setXY(118, 138);
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));

    LabelNapiecieBaterii.setXY(41, 141);
    LabelNapiecieBaterii.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LabelNapiecieBaterii.setLinespacing(0);
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));

    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
    txtNapiecieBaterii.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtNapiecieBaterii.setLinespacing(0);
    txtNapiecieBateriiBuffer[0] = 0;
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));

    LabelChargingTime.setXY(6, 86);
    LabelChargingTime.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LabelChargingTime.setLinespacing(0);
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));

    image3_2.setXY(118, 83);
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));

    ButtonDownTime.setBoxWithBorderPosition(0, 0, 43, 23);
    ButtonDownTime.setBorderSize(5);
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    ButtonDownTime.setIconXY(5, 0);
    ButtonDownTime.setPosition(273, 105, 43, 23);
    ButtonDownTime.setAction(flexButtonCallback);

    ButtonUpTime.setBoxWithBorderPosition(0, 0, 43, 23);
    ButtonUpTime.setBorderSize(5);
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    ButtonUpTime.setIconXY(6, 0);
    ButtonUpTime.setPosition(273, 81, 43, 23);
    ButtonUpTime.setAction(flexButtonCallback);

    txtChargingTime.setPosition(143, 93, 124, 24);
    txtChargingTime.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtChargingTime.setLinespacing(0);
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
    txtChargingTime.setWildcard(txtChargingTimeBuffer);
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));

    add(__background);
    add(image2);
    add(image3);
    add(ButtonDown);
    add(ButtonUp);
    add(LabelPradLadowania);
    add(txtPradLadowania);
    add(buttonStart);
    add(image3_1);
    add(LabelNapiecieBaterii);
    add(txtNapiecieBaterii);
    add(LabelChargingTime);
    add(image3_2);
    add(ButtonDownTime);
    add(ButtonUpTime);
    add(txtChargingTime);
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonStart)
    {
        //ButtonStartInteraction
        //When buttonStart clicked change screen to ScreenGraph
        //Go to ScreenGraph with screen transition towards East
        application().gotoScreenGraphScreenWipeTransitionEast();

        //InteractionButtonStartClicked
        //When buttonStart clicked call virtual function
        //Call ButtonStartClicked
        ButtonStartClicked();
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
    }
    else if (&src == &ButtonUp)
    {
        //ButtownDownInteraction
        //When ButtonUp clicked call virtual function
        //Call ButtonUpClicked
        ButtonUpClicked();
    }
    else if (&src == &ButtonDownTime)
    {
        //InteractionButtonDownTimeClicked
        //When ButtonDownTime clicked call virtual function
        //Call ButtonDownTimeClicked
        ButtonDownTimeClicked();
    }
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
    }
}
